<Type Name="WebPartZoneBase" FullName="System.Web.UI.WebControls.WebParts.WebPartZoneBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0bb627bda082804b1f0d59bc39245db1ba5950b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36385304" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebPartZoneBase : System.Web.UI.WebControls.WebParts.WebZone, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebPartZoneBase extends System.Web.UI.WebControls.WebParts.WebZone implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebPartZoneBase&#xA;Inherits WebZone&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartZoneBase abstract : System::Web::UI::WebControls::WebParts::WebZone, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type WebPartZoneBase = class&#xA;    inherit WebZone&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebZone</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이나 다른 서버 컨트롤 또는 사용자 정의 컨트롤의 컨테이너 역할을 하는 모든 영역 컨트롤에 대한 기본 클래스로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트 컨트롤 집합 합성 컨트롤의 경우 웹 페이지의 정의 된 영역에 다른 컨트롤을 포함 하는 HTML 표로 렌더링 됩니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스는 기본에서 상속 되는 영역 <xref:System.Web.UI.WebControls.WebParts.WebZone> 클래스 및 포함 된 파생된 영역에 대 한 기본 동작 집합을 제공 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤, 서버 컨트롤 및 사용자 정의 컨트롤입니다. 조합의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역은 <xref:System.Web.UI.WebControls.WebParts.WebPart> (및 다른 서버)는 웹 파트 응용 프로그램 사용자가 대부분의 상호 작용 하는 페이지의 기본 보기의 기본 UI를 구성 하는 컨트롤입니다.  
  
 모든 영역을 포함 하는 컨트롤에 대 한 UI 요소에 공통 집합을 제공 합니다. 에 대 한 자세한 설명은 모든 영역에 공통 되는 UI 요소, 클래스 개요 항목에 대 한 참조는 <xref:System.Web.UI.WebControls.WebParts.WebZone> 클래스입니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역 서버 컨트롤과 관련 된 포함 하는 본문 섹션에 포함 되어 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 컨트롤 및 해당 크롬 요소 등의 동사, 테두리, 렌더링 하는 데 사용 되는 개체입니다.  
  
 상속 된 기능 외에도 <xref:System.Web.UI.WebControls.WebParts.WebZone> 클래스는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클라이언트 쪽 컨트롤을 끌어, enable UI 같은 일반 동작 최소화, 닫기, 삭제 및 편집 컨트롤)을 (를 특정 동사와 다른 스타일 클래스 추가 기능입니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 데이터베이스 기반의 사용자 지정 영역을 디자인 하는 경우에서 상속 하는 클래스 이기도 합니다. 상속 되는 사용자 지정 날씨 웹 파트 영역을 만들 수는 예를 들어 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>, 포함 및 레이아웃 기능 및 기타 서비스를 제공 하도록 디자인 되었습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 데이터 바인딩된 및 날씨 정보를 표시 하는 컨트롤입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 다양 한 스타일 특성의 한 영역에 대 한 속성을 포함 합니다. 포함 하 여 테두리에 대 한 속성이 여러 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle%2A> 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth%2A>합니다. 와 같은 영역을 헤더에 나타날 수 있는 메뉴의 스타일 특성에 대 한 속성의 그룹이 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle%2A>, 등입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 영역의 동사를에서 처리 하기 위한 멤버 수가 포함 됩니다. 이러한 멤버 영역에서 일부 컨트롤에 표시 되는 동사와 관련이 있습니다. 영역 수준 동사에 추가할 수 있습니다 하는 동안 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역, 기본적으로 없는 모든. 웹 파트 컨트롤 집합 파트 컨트롤과 함께 사용 하기 위해 함께 제공 되는 표준 동사 집합이 이며 개발자가 사용자 지정 동사를 추가할 수 있습니다. 와 같은 표준 동사 개체 중 일부를 참조 하는 속성을 포함 하는 동사를 사용 하는 것에 대 한 몇 가지 중요 한 속성이 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb%2A>합니다. 영역에 포함 된 각 컨트롤의 제목 표시줄에 표준 동사 (일반적으로 드롭 다운 메뉴와 UI에 표시) 동사 메뉴에 나타납니다. 또한 한 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType%2A> 속성을 사용 하는 클릭할 수 있는 개체 유형을 나타내는 UI에 동사를 확인할 수 있습니다.  
  
 동사를 사용 하는 것에 대 한 다른 주요 구성원 포함는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> 동사 생성 프로세스의 사용자 지정 처리를 위해 재정의할 수 있는 이벤트 처리기 메서드 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs> 이벤트입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 사용에 대 한 멤버 수가 포함 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 포함 된 컨트롤입니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> 속성 참조의 모든 <xref:System.Web.UI.WebControls.WebParts.WebPart> (및 다른 서버) 영역에서 컨트롤입니다. 에 사용자가 수행할 수 있는 표준 동사 또는 작업에 해당 하는 여러 가지 방법을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 와 같은 영역에 있는 컨트롤 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectWebPart%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditWebPart%2A>합니다.  
  
 또한에 있는 멤버의 여러 가지는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 관련 된 클래스는 방법을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 배치 하거나 영역 내에 정렬 합니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 속성 컨트롤 영역 간에 이동 하거나 사용자가 영역 내에서 다시 정렬할 수 있는지 여부를 결정 합니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 속성 영역의 컨트롤이 가로 또는 세로로 정렬할지 여부를 확인할 수 있습니다.  
  
> [!NOTE]
>  Internet Explorer의 높이 렌더링할 수도 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 또는 영역의 방향에 따라 예기치 않은 방식으로 포함된 된 컨트롤입니다. 자세한 내용은 설명서를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 또는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A> 속성입니다.  
  
 다른 메서드에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 세부 프로그래밍 방식으로 제어할 렌더링 영역의 다양 한 영역을 제공 합니다. 상속 되며, 기본 메서드를 재정의 하는 대부분의 이러한 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebZone> 클래스를 포함 하는 영역에 대 한 렌더링을 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 중요 한 메서드로 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderDropCue%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderHeader%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스입니다. 코드 방식이 파생된 클래스를 보여 줍니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZone>를 포함 하도록 웹 파트 페이지에서 선언적으로 사용 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 이 코드 예제는 4 개의 섹션: 처음 세 개의 섹션을 설명 하는 코드 파일 및 네 번째 코드를 실행 하는 방법에 설명 합니다.  
  
 첫 번째 코드 예제에서는 부분은 사용자가 페이지 다른 디스플레이 모드를 전환할 수 있는 사용자 정의 컨트롤입니다. 웹 파트 표시 모드 및이 컨트롤의 코드에 대 한 설명을 대 한 자세한 내용은 참조 하십시오. [연습: 웹 파트 페이지에](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#10](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/displaymodemenucs.ascx#10)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/displaymodemenuvb.ascx#10)]  
  
 코드 예제에서는 두 번째 부분은 기본 웹 페이지에 대 한 이벤트를 처리 하는 코드를 포함 하는 코드 병행 파일. 이 파일의 코드에서는 키의 일부와 작업 하는 방법을 보여 줍니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 멤버 프로그래밍 방식으로 합니다.  
  
 [!code-csharp[WebParts_WebPartZoneBase_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview.cs#4)]
 [!code-vb[WebParts_WebPartZoneBase_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview.vb#4)]  
  
 코드 예제에서는 세 번째 부분은 포함 하는 웹 페이지는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 기본에서 문제가 발생 하는 컨트롤 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 포함 된 컨트롤입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#1)]  
  
 브라우저에서 웹 페이지를 로드 합니다. 사용 하 여는 **디스플레이 모드** 페이지 디자인 모드를 전환를 클릭 합니다. 드롭다운 목록 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 및 표시 영역으로 끕니다. 일부의 다양 한 멤버를 사용한 결과를 보려면 페이지의 단추를 클릭 하 고 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스입니다. 다음으로 페이지를 편집 모드로 전환 합니다. 있는지 확인 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 에 컨트롤을 배치 하는 `WebPartZone2`동사 메뉴 컨트롤의 제목 표시줄를 클릭 하 고 클릭 **편집** 컨트롤을 편집 합니다. 해당 컨트롤의 편집을 완료 하 고 다른 영역에 있는 컨트롤 중 하나를 편집 합니다. 다음이 단계를 수행할 때는 영역 컨트롤의 UI 스타일의 차이 알고의 다양 한 멤버를 사용 하 여에 적용 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPartZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebPartZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>상속된 클래스 인스턴스에 사용할 수 있도록 클래스를 초기화합니다. 이 생성자는 상속된 클래스에서만 호출될 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowLayoutChange">
      <MemberSignature Language="C#" Value="public virtual bool AllowLayoutChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowLayoutChange" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowLayoutChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowLayoutChange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowLayoutChange : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역 내에서 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 레이아웃을 변경할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>레이아웃을 변경할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 속성은 영역 있는 영역에서 컨트롤 레이아웃을 변경할 수와 같은 페이지 디스플레이 모드에 있을 경우에 적용 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>합니다.  
  
 때 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 로 설정 된 `false` 특정된 영역에는 몇 가지 작업을 최종 사용자가 영역에서 컨트롤에 수행할 수 없습니다.  
  
-   사용자를 다른 영역으로 컨트롤을 끌어다 놓을 수 없습니다, 그리고 영역 내 컨트롤 다시 정렬 또는 영역으로 컨트롤을 이동 합니다.  
  
-   다양 한 속성의 사용자 인터페이스 (UI)에 영향을 주는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에서 컨트롤 사용자가 컨트롤 편집 하는 동안 사용 하 여 해당 속성을 편집할 수 없도록 비활성화 됩니다는 <xref:System.Web.UI.WebControls.WebParts.AppearanceEditorPart> 및 <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> 컨트롤...  
  
-   사용자에서 영역에 새 컨트롤을 추가할 수 없습니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 제어 합니다.  
  
-   닫기, 삭제, 최소화, 및 복원 동사가 영역에서 컨트롤에 표시 되지 않습니다.  
  
 하지만 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 속성 UI 통해 영역의 레이아웃을 변경 하는 최종 사용자의 기능에 영향을 줍니다, 레이아웃을 프로그래밍 방식으로 변경할 수 있는 영향을 주지 않습니다. 예를 들어 경우 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 로 설정 된 `false`, 사용자는 영역에서 컨트롤을 닫을 수 없습니다 되지만 개발자 여전히 호출할 수는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart%2A> 컨트롤을 프로그래밍 방식으로 메서드를 닫습니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 속성이로 설정 되어 `true`, 기본값입니다. 값을 변경 하면 `false`, 브라우저 페이지 로드 하 고 페이지 디자인 디스플레이 모드를 전환 후 됩니다 내부 또는에 컨트롤을 끌 수 없게 된 `WebPartZone2` 영역입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Gray")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 컨트롤의 테두리 색을 가져오거나 설정합니다.</summary>
        <value>테두리 색이 포함된 <see cref="T:System.Drawing.Color" />입니다. 기본 색상은 <see cref="P:System.Drawing.Color.Gray" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> 속성 재정의 하 여는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역 테두리에 대 한 기본 색을 설정 하는 클래스입니다.  
  
 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor%2A> 속성에 대 한는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 프로그래밍 방식으로 또는 선언적으로 제어 합니다. 경우에 영역이 있는 페이지 디스플레이 모드에 테두리가 표시 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 과 같은 표시 되는 클래스 사용자 인터페이스 (UI) 기능 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> 또는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor%2A> 특성은 특정 명명 된 색으로 설정 합니다. 브라우저에 페이지를 로드 하 고 페이지 디자인 디스플레이 모드를 전환 후에 속성의 효과 볼 수 있습니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Web.UI.WebControls.BorderStyle with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 컨트롤을 둘러싸는 테두리의 종류를 가져오거나 설정합니다.</summary>
        <value>테두리의 종류가 포함된 <see cref="T:System.Web.UI.WebControls.BorderStyle" /> 개체입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.BorderStyle.Solid" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> 속성 재정의 하 여는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역에 대 한 기본 테두리 스타일을 설정 하는 클래스입니다.  
  
 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle%2A> 속성에 대 한는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 프로그래밍 방식으로 또는 선언적으로 제어 합니다. 경우에 영역이 있는 페이지 디스플레이 모드에 테두리가 표시 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 과 같은 표시 되는 클래스 사용자 인터페이스 (UI) 기능 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> 또는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle%2A> 특성은 특정 종류의 테두리로 설정 합니다. 브라우저에 페이지를 로드 하 고 페이지 디자인 디스플레이 모드를 전환 후에 속성의 효과 볼 수 있습니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 컨트롤을 둘러싸는 테두리의 너비를 가져오거나 설정합니다.</summary>
        <value>영역을 둘러싸는 테두리에 대한 지정된 <see cref="T:System.Web.UI.WebControls.Unit" /> 단위의 테두리 너비입니다. 기본값은 1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> 속성 재정의 하 여는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역에 대 한 기본 테두리 두께 설정 하는 클래스입니다.  
  
 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth%2A> 속성에 대 한는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 프로그래밍 방식으로 또는 선언적으로 제어 합니다. 경우에 영역이 있는 페이지 디스플레이 모드에 테두리가 표시 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 과 같은 표시 되는 클래스 사용자 인터페이스 (UI) 기능 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> 또는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth%2A> 특성 값이 특정 너비 (픽셀)를 설정 합니다. 브라우저에 페이지를 로드 하 고 페이지 디자인 디스플레이 모드를 전환 후에 속성의 효과 볼 수 있습니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CloseVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CloseVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 영역의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤을 닫을 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>최종 사용자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤을 닫을 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 닫기 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb%2A> 속성이 각각의 동사 메뉴에 나타나는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 컨트롤에에서 합니다.  
  
 컨트롤을 닫는에서 제거 된 페이지의 상호 작용 있지만 개발자와 같은 적절 한 사용자 인터페이스 (UI)을 제공 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 포함 된 영역을 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤, 사용자 페이지를 전환할 수 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> 추가 하 고 이전에는 페이지 이동 컨트롤의 닫힌된 인스턴스.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 코드 예제가 작동 하려면 모든 코드의 예 섹션에서 필요는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> 속성입니다.  
  
 다음 부분 코드 예제에서는 partial 클래스의 이며 도움말 동사를 사용 하도록 설정 하거나 사용할 수 없게 하는 코드가 포함 되어 있습니다.  
  
 [!code-csharp[WebParts_WebPartZoneBase_Verbs#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#5)]
 [!code-vb[WebParts_WebPartZoneBase_Verbs#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#5)]  
  
 코드 예제에서는의 다른 부분에는 UI를 포함 하는 사용자 지정 컨트롤을 호스트 하는 웹 페이지입니다. 선언적 `<CloseVerb>` 닫기에 대 한 동사 메뉴에 동사를 나타내는 특정 텍스트를 설정 하는 영역에는 요소는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 알 수 또한 때문에 내부 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 컨트롤- `TextDisplayWebPart`코드 예제에서는 집합에 사용 된 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> 속성을 `false` 의 생성자에는 `<aspSample:TextDisplayPart>` 카탈로그에는 요소는 설정해야합니다<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>속성을 `true`, 다음 코드 예제에는 컨트롤을 닫을 수 있도록 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#3)]  
  
 브라우저에서 페이지를 로드 한 후 페이지 카탈로그 디스플레이 모드를 전환 하 고 추가 된 `TextDisplayWebPart` 컨트롤을 페이지입니다. 설정 및 닫기 동사를 해제 하는 확인란을 사용할 수 있습니다 및 클릭할 수 있는 **Close WebPart** 는 컨트롤을 닫을 동사 메뉴에서 동사입니다. 페이지 카탈로그 디스플레이 모드를 반환 하는 경우 컨트롤을 닫은 후 클릭할 수는 **페이지 카탈로그**, 원래 인스턴스를 선택는 `TextDisplayWebPart` 제어 하 고 페이지에서 마법사를 다시 열입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb" />
      </Docs>
    </Member>
    <Member MemberName="CloseWebPart">
      <MemberSignature Language="C#" Value="protected virtual void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloseWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloseWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member CloseWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.CloseWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartZoneBase.CloseWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">닫을 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤입니다.</param>
        <summary>영역의 선택된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 닫습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 닫습니다는 최종 사용자는 일반적으로 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤은 컨트롤의 제목 표시줄의 닫기 동사를 클릭 하 여 합니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart%2A> 메서드 호출의 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> 에서 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤의 닫기 작업을 수행 하는 클래스입니다. 메서드는만 사용 해야으로 파생 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 와 같은 영역 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>합니다.  
  
 닫힌 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤이 페이지에 렌더링 되지 않습니다. 페이지에 있는 모든 닫힌된 컨트롤의 목록을 유지 관리 페이지 카탈로그에 추가 됩니다. 경우에 사용자가 웹 파트 페이지에는 `<asp:PageCatalogPart>` 사용 하 여 선언 된 요소는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone>, 사용자 페이지 카탈로그 디스플레이 모드를 전환할 수 있으며 닫힌된 컨트롤을 페이지에 다시 추가 합니다.  
  
> [!NOTE]
>  사용자가을 닫을 수에 대 한는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> 컨트롤에서 속성 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 속성 영역에 둘 다 설정 해야 `true`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb" />
      </Docs>
    </Member>
    <Member MemberName="ConnectVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConnectVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ConnectVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤 간의 연결을 만들 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>두 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤 간의 연결을 만드는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectWebPart">
      <MemberSignature Language="C#" Value="protected virtual void ConnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConnectWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ConnectWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member ConnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.ConnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartZoneBase.ConnectWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">선택된 다른 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤과의 연결을 시작하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤입니다.</param>
        <summary>두 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤 간의 연결을 만드는 프로세스를 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectWebPart%2A> 는 페이지가 연결 디스플레이 모드 하는 경우에 메서드를 호출할 수 있습니다 (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>). 메서드 호출의 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> 완전 하 게 두 개의 연결 하는 데 필요한 여러 단계를 완료 하는 메서드를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 메서드는만 사용 해야으로 파생 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 와 같은 영역 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="webPartZoneBase.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>영역에 들어 있는 자식 컨트롤의 집합을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateChildControls%2A> 메서드 재정의 기본 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 메서드 집합을 만들 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 포함 된 컨트롤입니다. 이 웹 파트 페이지의 디자인 모드에 있으면 때문에 발생 디자인 모드에서 페이지 (및 영역 내에서) 컨트롤의 레이아웃을 변경할 수 있습니다. 집합이 <xref:System.Web.UI.WebControls.WebParts.WebPart> 순서 또는 영역에서 컨트롤의 항목에서 가능한 변경 내용에 맞추는 영역 내에서 컨트롤 마찬가지로 만들어야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="webPartZoneBase.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>영역의 컨트롤이 모두 들어 있는 <see cref="T:System.Web.UI.ControlCollection" /> 개체를 만듭니다.</summary>
        <returns>영역의 <see cref="T:System.Web.UI.ControlCollection" /> 컨트롤에 대한 참조가 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="webPartZoneBase.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>영역 컨트롤이 표시될 때 해당 컨트롤에 적용되는 스타일 특징의 집합을 만듭니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.Style" />에 대한 스타일 특성이 포함된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateControlStyle%2A> 메서드에 적용 되는 표준 스타일 특성의 집합을 만들고 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다. 스타일 특성은 경우에 페이지 영역 자체 카탈로그, 편집 또는 디자인 디스플레이 모드와 같은 표시 되는 디스플레이 모드에 적용 됩니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateControlStyle" /> 만든된 스타일에 몇 가지 특정 속성을 설정 하는 방법은 사용 하지 않는 <see cref="M:System.Web.UI.WebControls.Style.#ctor(System.Web.UI.StateBag)" /> 컨트롤의 전달 하도록 요구 하는 생성자의 버전 <see cref="T:System.Web.UI.StateBag" /> 만든된 에매개변수로개체<see cref="T:System.Web.UI.WebControls.Style" /> 개체 공유는 <see cref="T:System.Web.UI.StateBag" /> 영역 제어 합니다. 그러면 렌더링 문제가 발생 합니다. 대신를 사용 하 여는 <see cref="M:System.Web.UI.WebControls.Style.#ctor" /> 는 생성자의 버전 이므로 <see cref="T:System.Web.UI.WebControls.Style" /> 개체는 컨트롤에 대해 독립적입니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateVerbs">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler CreateVerbs;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler CreateVerbs" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CreateVerbs As WebPartVerbsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartVerbsEventHandler ^ CreateVerbs;" />
      <MemberSignature Language="F#" Value="member this.CreateVerbs : System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler " Usage="member this.CreateVerbs : System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 클래스에서 파생된 영역에 대해 동사가 만들어질 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지 개발자 수에이 이벤트 처리기를 추가 및 연결에 추가 사용자 지정 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 자식 영역입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs> 동사가 영역에 대해 만들어질 때 발생 하는 동안 발생 하는 <xref:System.Web.UI.Control.PreRender> 포스트백 이벤트 중에 또는 페이지를 처리 하는 단계입니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 처리기를 만들 수는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs> 재정의 하 여 이벤트는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> 메서드를 파생 한 사용자 지정 동사 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다.  
  
 코드 예제에서는 두 개의 소스 파일을 포함합니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제는 동적 컴파일과 사용합니다. 컴파일하는 방법을 보여 주는 연습을 참조 하십시오. [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 파생 된 단순 컨트롤에 대 한 첫 번째 부분 코드 예제는 소스 코드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스입니다.  
  
 [!code-csharp[WebParts_WebPartVerb2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/SimpleControl.cs#2)]
 [!code-vb[WebParts_WebPartVerb2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/SimpleControl.vb#2)]  
  
 코드 예제에서는 두 번째 부분은 파생에 대 한 소스 코드 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 재정의 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> 메서드를 영역에 사용자 지정 동사를 추가 합니다. 코드의 동사 메뉴에 표시 되는 사용자 지정 동사 만듭니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 포함 된 컨트롤 및 동사 현재의 다른 복사본을 만듭니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 [!code-csharp[WebParts_WebPartVerb2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/ZoneWithAddedVerb.cs#3)]
 [!code-vb[WebParts_WebPartVerb2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/ZoneWithAddedVerb.vb#3)]  
  
 코드 예제에서는 세 번째 부분은 파생된 영역을 호스트 하는 웹 페이지 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 페이지의 위쪽에는 `Register` 지시문을 파생된 영역의 구성 요소를 참조 합니다. 브라우저에서 페이지를 로드 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 영역에 나타납니다. 동사 메뉴를 클릭 한 다음 클릭는 **CopyWebPart** 동사 하며 컨트롤의 복사본을 만듭니다.  
  
 [!code-aspx-csharp[WebParts_WebPartVerb2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/Defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartVerb2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/Defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateWebPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartChrome CreateWebPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartChrome CreateWebPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWebPartChrome () As WebPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartChrome ^ CreateWebPartChrome();" />
      <MemberSignature Language="F#" Value="abstract member CreateWebPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartChrome&#xA;override this.CreateWebPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartChrome" Usage="webPartZoneBase.CreateWebPartChrome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 영역에서 사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 개체를 대체하여 영역에 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 모양을 변경할 수 있도록 합니다.</summary>
        <returns>영역의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 컨트롤이 렌더링되는 방식을 결정하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트의 크롬 각는 주변 사용자 인터페이스 (UI) 요소를 가리키는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 컨트롤입니다. 에 대 한 크롬을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 테두리, 제목 표시줄, 아이콘, 제목 텍스트 및 제목 표시줄에 표시 되는 동사 메뉴 컨트롤에 포함 됩니다. 크롬의 모양은 영역 수준에서 설정 되 고 모든 적용 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 컨트롤입니다.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 개체의 전체 렌더링에 영향을 줍니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 크롬 요소 뿐만 아니라를 제어 합니다.  
  
 사용 하 여 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A> 메서드를 사용자 지정 작성 해야 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> 영역에 웹 파트 컨트롤에 대 한 크롬의 모양을 정의 하는 개체입니다. 상속 되는 사용자 지정 영역도 만들어야는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 및 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A> 메서드를 사용자 지정 크롬 개체를 대체 하 고 영역에서 컨트롤에 적용 하는 작업을 할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="DeleteVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb DeleteVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb DeleteVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeleteVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ DeleteVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 영역의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤을 삭제할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>최종 사용자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤을 삭제할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 하는 delete 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb%2A> 속성이 각 동적의 제목 표시줄에 있는 동사 드롭다운 메뉴에 나타나는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 컨트롤입니다. Delete 동사 정적 컨트롤 (웹 페이지의 태그에 선언 된 컨트롤)에서 사용할 수 없는 경우 동사 메뉴에 표시 되는 동사는 경우에 페이지와 같은 페이지 레이아웃을 변경할 수 있도록 하는 디스플레이 모드에서 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> 또는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>합니다.  
  
 페이지에서 해당 컨트롤의 인스턴스를 제거 컨트롤을 영구적으로 삭제 합니다. 닫힌 컨트롤을 컨트롤의 삭제 된 인스턴스는 페이지에 다시 추가 되지 않을 수 있습니다. 사용자는 컨트롤을 삭제 하 고 페이지를 전환 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>경우는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 영역에는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤 삭제 된 컨트롤 인스턴스는에서 사용할 수 없습니다. 컨트롤은 카탈로그에서 사용할 수 있지만 삭제 된 인스턴스를 영구적으로 제거 된 경우 사용자는 컨트롤의 새 인스턴스를 추가할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 코드 예제가 작동 하려면 모든 코드의 예 섹션에서 필요는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> 속성입니다.  
  
 다음 부분 코드 예제에서는 partial 클래스의 이며 delete 동사를 사용 하도록 설정 하거나 사용할 수 없게 하는 코드가 포함 되어 있습니다.  
  
 [!code-csharp[WebParts_WebPartZoneBase_Verbs#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#5)]
 [!code-vb[WebParts_WebPartZoneBase_Verbs#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#5)]  
  
 코드 예제에서는의 다른 부분에는 사용자 지정 컨트롤을 호스트 하 고 사용자 인터페이스 (UI)를 포함 하는 웹 페이지입니다. 선언적 `<DeleteVerb>` 동사 드롭다운 메뉴에 delete 동사를 나타내는 특정 텍스트를 설정 하는 영역에는 요소는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 브라우저에서 페이지를 로드 한 후 페이지 카탈로그 디스플레이 모드를 전환 하 고 추가 된 `TextDisplayWebPart` 컨트롤을 페이지입니다. 확인란을 사용 하 여 및에 delete 동사를 해제 하는 `TextDisplayWebPart` 은 페이지가 카탈로그 또는 디자인 디스플레이 모드에 있는 동안에 컨트롤 이지만 동사 메뉴에 나타납니다. 클릭는 **Delete WebPart** 메뉴에 동사를 컨트롤 영구적으로 삭제 되 고, 삭제 된 인스턴스 페이지에 다시 추가할 수 없습니다. 페이지 카탈로그 디스플레이 모드를 복구의 새 인스턴스를 추가 하는 반면는 `TextDisplayWebPart` 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteWebPart">
      <MemberSignature Language="C#" Value="protected virtual void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DeleteWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member DeleteWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.DeleteWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartZoneBase.DeleteWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">삭제할 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤입니다.</param>
        <summary>영역의 선택된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A?displayProperty=nameWithType> 메서드를 쓰고 `webPart` 은 정적, 예외가 정적 컨트롤 (웹 페이지의 태그에 선언 된 제어)를 삭제할 수 없으므로 합니다. 메서드는만 사용 해야으로 파생 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 와 같은 영역 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />가 <see langword="null" />인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="DisplayTitle">
      <MemberSignature Language="C#" Value="public virtual string DisplayTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DisplayTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayTitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayTitle : string" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.DisplayTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 영역 자체가 표시될 때 이 영역의 제목으로 사용되는 텍스트의 현재 값을 가져옵니다.</summary>
        <value>영역의 제목 텍스트가 들어 있는 문자열입니다. 기본값은 기본 <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" /> 속성의 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DisplayTitle%2A> 속성 기본에서 값을 가져오거나 <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderText%2A> 속성 또는 해당 값이 `null`를 사용 하 여는 <xref:System.Web.UI.Control.ID%2A> 영역에 대 한 값입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DisplayTitle%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 다음 코드 예제에서의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DisplayTitle%2A> partial 클래스의 속성 값을 검색 합니다.  
  
 [!code-csharp[WebParts_WebPartZoneBase_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview.cs#9)]
 [!code-vb[WebParts_WebPartZoneBase_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="DragDropEnabled">
      <MemberSignature Language="C#" Value="protected internal bool DragDropEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DragDropEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragDropEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DragDropEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool DragDropEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DragDropEnabled : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragDropEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 영역 내부 또는 외부로 끌 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤을 끌어 옮길 수 있는지 여부를 나타내는 부울 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragDropEnabled%2A> 속성 표시 여부를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 끌 수 또는 영역 외부로 런타임 시. 끌어서 놓기 편집을 허용 하는 페이지 디스플레이 모드에서 페이지는 인지 검사에 대 한 특히 속성이 사용 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 속성이로 설정 된 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="DragHighlightColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color DragHighlightColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color DragHighlightColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DragHighlightColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color DragHighlightColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.DragHighlightColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Blue")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 영역과 사용자가 컨트롤을 끌 때 표시되는 놓기 큐 영역의 테두리 색을 가져오거나 설정합니다.</summary>
        <value>강조 색이 포함된 <see cref="T:System.Drawing.Color" />입니다. 기본 색상은 <see cref="P:System.Drawing.Color.Blue" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 끌어 온을 삭제할 수 있습니다, 큐 영역이 표시는 해당 컨트롤을 취소할 수, 영역을 보여 주는 되며 컨트롤이 뿐만 아니라 이러한 영역에 대 한 영역 위로 유지 되는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor%2A> 속성 테두리 색에 영향을 줍니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor%2A> 속성을 사용 하면 영역에서 컨트롤을 끌 때 사용자에 게 표시 되는 색을 설정할 수 있습니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor%2A> 속성은 웹 페이지는 표시 모드를 레이아웃을 변경할 수와 같은 영역을 사용 중인 경우에 적용 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor%2A> 속성 값이 특정 색으로 설정 합니다. 브라우저에 페이지를 로드 하 고 페이지 디자인 디스플레이 모드를 전환 후에 선택 하 고 해당 영역 내에서 컨트롤을 끌어 하거나 영역에 다른 컨트롤을 끌어 속성의 효과 볼 수 있습니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb EditVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb EditVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ EditVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 영역의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤을 편집할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>최종 사용자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤을 편집할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 하는 편집 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 컨트롤을 사용 하면 최종 사용자를 전환 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 편집 모드에 사용자 표시, 속성, 레이아웃 및 컨트롤의 내용을 개인 설정할 수 있는 영역에서 컨트롤.  
  
 편집 동사 동일한 영역에 있는 모든 컨트롤에 사용 됩니다. 웹 파트 페이지 편집 디스플레이 모드에 입력 하는 경우 (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>), 편집 동사 각 동사 메뉴에 표시 됩니다. <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 포함 된 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 속성이 사용 하 여 선언적 액세스는 `<EditVerb>` 인 요소는 `WebPartZone1` 제어 합니다. 사용 하지 않은 경우에 편집 동사를 편집 모드에이 컨트롤에 제공 됩니다는 `<EditVerb>` 요소 여기에서 하지만 사용 하 여 해당 특성 중 일부를 설정할 수 있습니다, 텍스트 등 사용자 인터페이스 (UI)에서 동사를 나타내는입니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditWebPart">
      <MemberSignature Language="C#" Value="protected virtual void EditWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EditWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EditWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member EditWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.EditWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartZoneBase.EditWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">편집할 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤입니다.</param>
        <summary>영역의 선택된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 편집하는 프로세스를 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메서드는만 사용 해야으로 파생 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 와 같은 영역 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />가 <see langword="null" />인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 컨트롤에 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 포함되지 않은 경우 표시되는 메시지를 가져오거나 설정합니다.</summary>
        <value>빈 영역에 표시되는 메시지를 포함하는 문자열입니다. 기본 문화권별 문자열은 .NET Framework에서 제공합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText%2A> 속성 기본 속성을 재정의 속성이 설정 되지의 경우와 구분 하기 위해 여기서 경과 했는데도 문제가 있다면 빈 문자열 ("").  
  
 빈에 기본 culture 관련 문자 메시지 표시 속성이 설정 되지 않았습니다. 영역이 표시 되는 웹 파트 페이지 디스플레이 모드로 들어갈 때 영역에 컨트롤이 없는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 제어 합니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText%2A> 속성 값이 빈 문자열로 설정 의도적으로 다음 텍스트 메시지는 빈 영역에 나타납니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText%2A> 속성에는 선언적 태그에 할당 된 값입니다. 이 값이 표시 됩니다 `WebPartZone2`브라우저 페이지 로드 한 후에서 날짜를 표시 하는 컨트롤을 끌어서 페이지 디자인 디스플레이 모드를 전환 `WebPartZone2` 에 `WebPartZone1`합니다. 웹 파트 페이지에 대 한 디스플레이 모드를 변경 하는 방법에 대 한 자세한 내용은 참조 하십시오. [연습: 웹 파트 페이지에](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ExportVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ExportVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ExportVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ExportVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExportVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ExportVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExportVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.ExportVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 영역의 각 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤에 대한 XML 정의 파일을 내보낼 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>최종 사용자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤에 대한 정의 파일을 내보낼 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 하는 내보내기 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ExportVerb%2A> 속성이 각각의 제목 표시줄 내의 동사 드롭다운 메뉴에 나타나는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 컨트롤입니다. 동사는 모든 페이지 디스플레이 모드에서 동사 메뉴에 나타납니다.  
  
 에 대 한 정의 파일을 내보낼 수 있도록 하려면 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 설정 해야는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 즉 해당 기본값 이외의 값으로 컨트롤의 속성에 <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ExportVerb%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 코드 예제가 작동 하려면 모든 코드의 예 섹션에서 필요는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> 속성입니다.  
  
 다음 부분 코드 예제에서는 partial 클래스의 이며 내보내기 동사를 사용 하도록 설정 하거나 사용할 수 없게 하는 코드가 포함 되어 있습니다.  
  
 [!code-csharp[WebParts_WebPartZoneBase_Verbs#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#5)]
 [!code-vb[WebParts_WebPartZoneBase_Verbs#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#5)]  
  
 코드 예제에서는의 다른 부분에는 사용자 지정 컨트롤을 호스트 하 고 사용자 인터페이스 (UI)를 포함 하는 웹 페이지입니다. 선언적 `<ExportVerb>` 동사 드롭다운 메뉴에 내보내기 동사를 나타내는 특정 텍스트를 설정 하는 영역에는 요소는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 마지막으로, 다음에 유의 선언적 다음 코드 예제에서 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 속성 값에는 `<asp:TextDisplayWebPart>` 값으로 설정 된 `All`, 컨트롤에 내보낼 수 있는 속성 값이 모두를 내보낼 의미 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#3)]  
  
 브라우저에서 페이지를 로드 한 후 페이지 카탈로그 디스플레이 모드를 전환 하 고 추가 된 `TextDisplayWebPart` 컨트롤을 페이지입니다. 확인란을 사용 하 여 및에 내보내기 동사를 해제 하 고 `TextDisplayWebPart` 제어 합니다. 내보내기 동사를 누르면 컨트롤에 대 한 정의 파일을 저장 하기 위한 로컬 경로 대 한 메시지가 표시 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
      </Docs>
    </Member>
    <Member MemberName="GetEffectiveChromeType">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeType GetEffectiveChromeType (System.Web.UI.WebControls.WebParts.Part part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType GetEffectiveChromeType(class System.Web.UI.WebControls.WebParts.Part part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::PartChromeType GetEffectiveChromeType(System::Web::UI::WebControls::WebParts::Part ^ part);" />
      <MemberSignature Language="F#" Value="override this.GetEffectiveChromeType : System.Web.UI.WebControls.WebParts.Part -&gt; System.Web.UI.WebControls.WebParts.PartChromeType" Usage="webPartZoneBase.GetEffectiveChromeType part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.Web.UI.WebControls.WebParts.Part" />
      </Parameters>
      <Docs>
        <param name="part">영역에서 현재 <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> 설정을 검색해야 하는 해당 <see cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" /> 컨트롤입니다.</param>
        <summary>영역의 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 속성과 웹 파트 페이지의 현재 디스플레이 모드가 주어진 경우 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 실제 적용되거나 유효한 현재 <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" /> 값을 반환합니다.</summary>
        <returns>영역에 포함된 웹 파트 컨트롤에 대해 현재 프레임으로 사용되는 테두리의 종류가 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 값입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)" />
      </Docs>
    </Member>
    <Member MemberName="GetInitialWebParts">
      <MemberSignature Language="C#" Value="protected internal abstract System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetInitialWebParts () As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Web::UI::WebControls::WebParts::WebPartCollection ^ GetInitialWebParts();" />
      <MemberSignature Language="F#" Value="abstract member GetInitialWebParts : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="webPartZoneBase.GetInitialWebParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>템플릿 또는 일부 저장 미디어를 기반으로 영역에 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 초기 컬렉션을 가져옵니다.</summary>
        <returns>영역에 포함된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> 컨트롤의 초기 집합이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts%2A> 메서드의 초기 컬렉션을 가져옵니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 기존 서식 파일이 나 다른 형태의 저장소 영역에서 컨트롤은 결정 하는 경우에 영역에 대 한 제어 합니다. 메서드는 초기 컬렉션의 컨트롤 실제로 옮겨졌는지 사용자가 다른 영역으로 의미 있는 모든 개인 설정 변경 내용을 반영 하지 않습니다.  
  
 초기 컬렉션 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에서 컨트롤 필요가 없는 컬렉션에 포함 된 동일는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> 속성 페이지를 렌더링할 때 라인 영역에서 컨트롤의 현재 실제 컬렉션을 반영 하는 영역 에 적용 된 모든 개인 설정 변경 내용은 계정입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts" /> 메서드는 추상 클래스 파생된 클래스에서 구현 해야 합니다. <see cref="M:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts" /> 의 메서드는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 클래스 메서드의 한 구현을 포함 합니다.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts" />
      </Docs>
    </Member>
    <Member MemberName="HasFooter">
      <MemberSignature Language="C#" Value="protected override bool HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasFooter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property HasFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasFooter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFooter : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역에 바닥글 영역이 있는지 나타내는 값을 가져옵니다.</summary>
        <value>영역에 바닥글 영역이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasFooter%2A> 속성 재정의 기본 <xref:System.Web.UI.WebControls.WebParts.WebZone.HasFooter%2A?displayProperty=nameWithType> 속성을 기본값 설정 하려면 `false` 에 대 한 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HasFooter" />
      </Docs>
    </Member>
    <Member MemberName="HasHeader">
      <MemberSignature Language="C#" Value="protected override bool HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasHeader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property HasHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasHeader { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasHeader : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역에 머리글 영역이 있는지 나타내는 값을 가져옵니다.</summary>
        <value>영역에 머리글 영역이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 페이지가 표준 <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />에 있는 경우 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasHeader%2A> 속성 재정의 기본 <xref:System.Web.UI.WebControls.WebParts.WebZone.HasHeader%2A?displayProperty=nameWithType> 속성을 기본값 설정 하려면 `false` 에 대 한 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 페이지 디스플레이 모드 기본에서 시기를 제어 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>합니다.  
  
 웹 파트 페이지와 같은 페이지 디자인을 사용할 수 있는 디스플레이 모드 중 하나에 있으면 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>, 또는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>의 값은 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasHeader%2A> 속성은 `true`지정된 된 영역 헤더 UI (사용자 인터페이스)를 표시할 수 있습니다, 요소입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HasHeader" />
      </Docs>
    </Member>
    <Member MemberName="HelpVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb HelpVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb HelpVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HelpVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ HelpVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤에 대한 도움말 콘텐츠에 액세스하는 데 사용되는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>사용자가 영역의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤에 대한 도움말 콘텐츠에 액세스할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> 선언적으로 또는 프로그래밍 방식으로 속성에 액세스할 수 있습니다. 액세스할 수 선언적 영역 내에서 사용 하 여는 `<asp:HelpVerb>` 텍스트, 설명, 동사 활성화 되어 있는지 여부 및 기타 특성을 설정할 요소입니다. 그러나 필요 없는 영역에 대 한 도움말 동사를 선언 하 기본적으로 사용 하도록 설정 합니다. 동사 메뉴에 표시할 도움말 동사를 사용 하도록 설정 하는 데 필요한 유일한 단계 <xref:System.Web.UI.WebControls.WebParts.WebPart> 런타임 시 영역의 컨트롤에 값을 할당 하는 것은 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> 개인에 대 한 속성 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다.  
  
 또한 하기 위해 다음 코드에서 작동 하도록 코드 예제에 대 한 사용자 지정 해야 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 사용자 고유의 컨트롤을 사용 하거나 코드를 사용 하 여 사용자 지정에 대 한 `TextDisplayWebPart` 컨트롤의 예제 섹션에서 찾을 수는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 개요입니다.  
  
 이 코드 예제는 웹 페이지에 대 한 디스플레이 모드를 변경할 수 있도록 사용자 정의 컨트롤을 포함 합니다. 디스플레이 모드 및이 컨트롤의 소스 코드에 대 한 자세한 내용은 참조 [연습: 웹 파트 페이지에](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#10](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/displaymodemenucs.ascx#10)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/displaymodemenuvb.ascx#10)]  
  
 이 코드 예제도에 대 한 도움말 콘텐츠를 포함할 수 있는 HTML 페이지는 `TextDisplayWebPart` 제어 합니다. 이 예제가 작동 하려면 Textwebparthelp.htm 라는 파일에 다음 코드를 저장 및 호스트 하는.aspx 페이지와 사이트의 동일한 디렉터리에 배치 해야 합니다는 `TextDisplayWebPart` 제어 합니다.  
  
```  
<html>  
<head runat="server">  
    <title>Text Content WebPart Help</title>  
</head>  
<body>  
  <div>  
  <h1>Text Content WebPart Help</h1>  
  To make the WebPart control work...  
  </div>  
</body>  
</html>  
```  
  
 코드 예제는 또한.aspx 페이지에서 이벤트를 처리 하는 코드를 포함 하는 다음 부분 클래스를 포함 합니다.  
  
 [!code-csharp[WebParts_WebPartZoneBase_Verbs#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#4)]
 [!code-vb[WebParts_WebPartZoneBase_Verbs#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#4)]  
  
 코드 예제에서는의 다른 부분을 호스팅하는.aspx 페이지는는 `TextDisplayWebPart` 및 제어를 사용 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> 속성입니다. 페이지의 맨 위 근처에 표시 되는 `<@ Register %>` 선언 컴파일된 참조할 때 사용 됩니다 `TextDisplayWebPart` 컨트롤 Bin 라는 하위 폴더에 배치 해야 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#1)]  
  
 또한는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> 속성에서 선언적으로 사용 되는 `<asp:WebPartZone>` 요소를 다음 코드 예제와 같이 동사에 대 한 텍스트를 설정 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 마지막으로, 다음 코드 예제에서를 확인 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> 에 속성이 설정 되어는 `<aspSample:TextDisplayPart>` 도움말 파일의 URL을 제공 하는 요소입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#3)]  
  
 브라우저에서 페이지를 로드 한 후을 클릭는 **카탈로그 모드** 메뉴 항목에는 **디스플레이 모드** 드롭 다운 목록 컨트롤을 페이지 카탈로그 디스플레이 모드를 전환 합니다. 추가 `TextDisplayWebPart` 컨트롤을 페이지는 카탈로그를 표준 찾아보기 모드에 페이지를 반환 합니다. 제목 표시줄에 동사 드롭다운 메뉴를 클릭 하는 경우는 `TextDisplayWebPart` 컨트롤을 도움말 페이지를 열려면 도움말 동사에 액세스할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl" />
      </Docs>
    </Member>
    <Member MemberName="LayoutOrientation">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Orientation LayoutOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation LayoutOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LayoutOrientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Orientation LayoutOrientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutOrientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역의 컨트롤이 세로와 가로 방향 중 어느 방향으로 정렬될지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>영역의 컨트롤이 정렬되는 방식을 결정하는 <see cref="T:System.Web.UI.WebControls.Orientation" /> 값입니다. 기본 방향은 <see cref="F:System.Web.UI.WebControls.Orientation.Vertical" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 웹 파트 컨트롤 레이아웃 하는 방법의 한 영역 속성 관여 합니다. 기본 <xref:System.Web.UI.WebControls.Orientation.Vertical> 방향을 위에서 아래로 정렬에서 하면 컨트롤이 렌더링 되에 따라는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 각 컨트롤의 값입니다. 와 <xref:System.Web.UI.WebControls.Orientation.Horizontal> 방향 컨트롤이 함께, 영역 너비에 따라 정렬 됩니다.  
  
 Internet Explorer의 높이 영향을 줄 수는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 및 포함 된 영역의 높이입니다. 호환 모드 (이전 버전과 호환 이전 버전의 브라우저), 또는 표준 모드에서 웹 페이지를 렌더링 하는 Internet Explorer (의 존재에 의해 결정 된 `DOCTYPE` 페이지에 선언이). 이러한 모드에 대 한 내용은 DHTML 참조 [compatMode](http://go.microsoft.com/fwlink/?LinkId=57175) 속성입니다. Internet Explorer 표준 모드에서 페이지 렌더링 되 면 일부 시나리오에서는 그 크기가 조정 되지 않습니다, 표 셀에에서 셀의 HTML 태그입니다. 경우에 `<td height="100%">`합니다. 결과적으로, <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 전체 높이 컨트롤 늘어나지 않도록 있도록 컨트롤 포함 하는 영역이 렌더링 됩니다.  
  
 이러한 유형의 렌더링 두 가지 경우에 발생합니다.  
  
-   영역의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 속성이 <xref:System.Web.UI.WebControls.Orientation.Vertical>, 영역 높이 명시적으로 설정 합니다. 영역의 전체 높이를 채우도록 컨트롤을 사용 하려면의 수평 영역 높이 지정 하지 마십시오.  
  
-   영역의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 속성이 <xref:System.Web.UI.WebControls.Orientation.Horizontal>, 영역 (또는 포함 된 컨트롤)의 높이 명시적으로 설정 하지 마십시오. 영역의 전체 높이를 채우도록 컨트롤을 사용 하려면 영역 또는 컨트롤의 높이 수직 영역에 설정 합니다.  
  
 이 항목의 코드 예제에서는 일반적인 사용의는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 속성입니다.  높이 관련 렌더링 문제 및 해결 방법을 보여 주는 코드 예제는에 대 한 참조는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 선언적 방법과 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 속성에는 선언적 태그에 할당 된 값입니다. 이 값에 영향을 줍니다 `WebPartZone1`브라우저 페이지 로드 한 후, 합니다. 영역에서 웹 파트 컨트롤을 가로로 렌더링 됩니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#2)]  
  
 클릭할 수는 **레이아웃 방향 토글** 단추 영역의 방향을 변경 합니다. 방향을 전환 하는 코드는 partial 클래스의 다음 코드 예제에서 발생 합니다.  
  
 [!code-csharp[WebParts_WebPartZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview.cs#7)]
 [!code-vb[WebParts_WebPartZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">값이 열거된 <see cref="T:System.Web.UI.WebControls.Orientation" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Height" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="webPartZoneBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">이전에 저장된 상태입니다.</param>
        <summary>영역에 대해 이전에 저장된 상태 정보를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는.NET Framework 인프라에서 주로 사용 하 고 사용자 코드에서 직접 사용할 수 없습니다. 그러나 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LoadViewState%2A> 메서드 재정의 기본 <xref:System.Web.UI.WebControls.WebParts.WebZone.LoadViewState%2A?displayProperty=nameWithType> 에서 파생 된 동사와 동사 메뉴 영역에서 상태를 로드 하는 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> 개체의 크기가 현재 뷰 상태 개체의 크기와 다른 경우</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="MenuCheckImageStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style MenuCheckImageStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style MenuCheckImageStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuCheckImageStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ MenuCheckImageStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuCheckImageStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동사 메뉴에서 선택된 동사 텍스트 옆에 나타나는 확인 표시 이미지에 적용되는 스타일 특성을 가져옵니다.</summary>
        <value>동사 메뉴의 확인 표시 이미지에 대한 스타일 특성이 들어 있는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageStyle%2A> 속성은 사용자 지정 하는 경우에 적용 됩니다. <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 가 동사 메뉴에는 개체의 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Checked%2A> 속성 값으로 설정 `true`합니다. 에 포함 된 스타일 특성의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageStyle%2A> 속성 메뉴에서 동사 텍스트 옆에 있는 확인 표시 이미지의 스타일과 관련이 있습니다.  
  
 각 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역의 제목 표시줄에는 자체 동사 메뉴에 있습니다. 동사 메뉴 사용자 지정 웹 파트 컨트롤 집합에 포함 된 모두 표준 동사를 사용할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 개발자가 만든 개체입니다.  
  
 표준 동사에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 동사 메뉴-내보내기, 삭제 및 도움말 열기에 대 한 동사를 포함 하 여 해당 되며 한 번에 작업을 수행 하는 단일 동작 동사 완료 페이지입니다. 그 중 모든 종류의 계속 상태를 나타내기 때문에 이러한 동사 확인 표시를 사용 하 여 메뉴에 표시할 필요가 없는 있습니다. 따라서는 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Checked%2A> 이러한 동사에 대 한 속성을 설정할 수 없는 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageStyle%2A> 속성을 전혀 적용 되지 됩니다.  
  
 그러나 개발자가 사용자 지정을 만들 수 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 설정 하 여 확인 표시로 계속 상태를 나타낼 수 있는 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Checked%2A> 속성을 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartVerb.Checked" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="MenuCheckImageUrl">
      <MemberSignature Language="C#" Value="public virtual string MenuCheckImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MenuCheckImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MenuCheckImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MenuCheckImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MenuCheckImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역에 있는 각 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 동사 메뉴에서 확인 표시로 사용되는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>확인 표시로 사용되는 이미지의 URL을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="MenuLabelHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style MenuLabelHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style MenuLabelHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuLabelHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ MenuLabelHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuLabelHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터를 레이블 위에 놓을 때 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 제목 표시줄에 있는 동사 메뉴의 레이블에 적용되는 스타일 특성을 가져옵니다.</summary>
        <value>동사 메뉴의 레이블에 대한 스타일 특성이 들어 있는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle%2A> 속성 영역에서 각 웹 파트 컨트롤에 있는 동사 메뉴에 대 한 전체 레이블 스타일에 영향을 줍니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle%2A> 속성에는 선언적 태그에 할당 된 값입니다. 이 값에 영향을 줍니다 `WebPartZone2`합니다. 브라우저에 페이지를 로드 한 후 페이지 편집 모드를 전환 하 고 웹 파트 컨트롤의 동사 메뉴 위에 마우스 포인터를 놓습니다. 레이블 텍스트를 굵게 표시 하도록 설정 하는 확인 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle" />
      </Docs>
    </Member>
    <Member MemberName="MenuLabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style MenuLabelStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style MenuLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuLabelStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ MenuLabelStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuLabelStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역에 있는 각 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 제목 표시줄에 나타나는 동사 드롭다운 메뉴의 레이블에 대한 스타일 정보를 가져옵니다.</summary>
        <value>동사 메뉴의 레이블에 대한 스타일 정보가 들어 있는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle%2A> 속성에 레이블이 이미지, 텍스트 또는 둘 다 포함 되어 있는지 여부에 관계 없이 영역에 있는 각 웹 파트 컨트롤의 동사 메뉴 레이블의 스타일을 적용 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle%2A> 속성에는 선언적 태그에 할당 된 값입니다. 이 값에 영향을 줍니다 `WebPartZone2`합니다. 브라우저에 페이지를 로드 후 페이지 편집 모드와 동사 메뉴에 대 한 색에 대 한 레이블이 있는 통지를 전환 `WebPartZone2` 은 선언적 태그에 할당 된 색입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText" />
      </Docs>
    </Member>
    <Member MemberName="MenuLabelText">
      <MemberSignature Language="C#" Value="public virtual string MenuLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MenuLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MenuLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MenuLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MenuLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역에 있는 각 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 제목 표시줄에서 동사 드롭다운 메뉴의 레이블 역할을 하는 값을 가져오거나 설정합니다.</summary>
        <value>동사 메뉴의 레이블에 나타나는 텍스트가 들어 있는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText%2A> 속성 값이 할당 되어, 각각의 제목 표시줄에 동사 드롭다운 메뉴를 표시 하는 이미지와 함께 레이블이 나타납니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 컨트롤입니다. 속성에 할당은 값이 없으면 메뉴의 이미지에만 나타납니다.  
  
 이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute> 및 [전역화 및 지역화](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText%2A> 속성에는 선언적 태그에 할당 된 값입니다. 이 값에 영향을 줍니다 `WebPartZone2`합니다. 브라우저에 페이지를 로드 후 페이지 편집 모드 및 동사 메뉴에 대 한 텍스트에 레이블을 표시를 전환 `WebPartZone2` 선언적 태그에서에 할당 된 값입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle" />
      </Docs>
    </Member>
    <Member MemberName="MenuPopupImageUrl">
      <MemberSignature Language="C#" Value="public virtual string MenuPopupImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MenuPopupImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MenuPopupImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MenuPopupImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MenuPopupImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역에 있는 각 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 제목 표시줄에서 동사 드롭다운 메뉴를 여는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>동사 드롭다운 메뉴를 여는 데 사용되는 이미지의 URL을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 할당 된 값이 없는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupImageUrl%2A> 속성, 같습니다. 아래쪽 화살표의 제목 표시줄에서 동사 드롭다운 메뉴를 열고에 제공 되는 기본 이미지는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupImageUrl%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupImageUrl%2A> 속성에는 선언적 태그에 할당 된 값입니다. 이 값에 영향을 줍니다 `WebPartZone2`합니다. 브라우저에 페이지를 로드 한 후 페이지 편집 모드로 전환 하 고 이미지 자리 표시자 (또는 실제 이미지의 경로를 할당 한 경우)에서 컨트롤에 대 한 동사 메뉴 레이블의에 나타나는지 확인 `WebPartZone2`합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle" />
      </Docs>
    </Member>
    <Member MemberName="MenuPopupStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartMenuStyle MenuPopupStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartMenuStyle MenuPopupStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuPopupStyle As WebPartMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartMenuStyle ^ MenuPopupStyle { System::Web::UI::WebControls::WebParts::WebPartMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuPopupStyle : System.Web.UI.WebControls.WebParts.WebPartMenuStyle" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupStyle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPartMenuUser.MenuPopupStyle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 나타나는 드롭다운 동사 메뉴의 스타일 특성을 가져옵니다.</summary>
        <value>동사 메뉴의 스타일 특성이 포함된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMenuStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupStyle%2A> 속성을 사용 하면 각에서 표시 되는 동사 드롭다운 메뉴에 대 한 스타일 특성을 설정 하려면 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 컨트롤입니다. 개체 자체에 읽기 전용 이지만, 기본 특성에 대 한 값을 설정할 수 있습니다. 전체 메뉴 등의 테두리 색, 스타일 및 두께;에 대 한 스타일 특성을 설정할 수 있습니다. 글꼴 세부 정보; 높이 및 너비입니다. 명령 프롬프트 창의 배경색입니다. 셀 안쪽 여백 및 간격; 그림자 색 (섀도잉 설정 된 경우 사용자의 운영 체제에서); 및 눈금선을 추가 합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupStyle%2A> 속성은 경우에만 적용 됩니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode%2A> 속성 값으로 설정 됩니다 <xref:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.Menu>, 기본값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="MenuVerbHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style MenuVerbHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style MenuVerbHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuVerbHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ MenuVerbHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuVerbHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 마우스 포인터를 동사 드롭다운 메뉴의 동사 위에 놓을 때 나타나는 동사의 모양에 대한 스타일 정보를 가져옵니다.</summary>
        <value>사용자가 마우스 포인터를 동사 위에 놓을 때 나타나는 동사의 스타일에 대한 정보가 들어 있는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 포함 된 스타일 정보는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbHoverStyle%2A> 동사 중 하나 위에 마우스 포인터를 놓을 때 동사 메뉴의 개별 동사에 속성이 적용 됩니다.  
  
 기본 스타일 특성을 설정할 수 있지만이 속성이 읽기 전용 이면 <xref:System.Web.UI.WebControls.Style> 개체입니다.  
  
 동사를 포함 하는 메뉴가 Microsoft Internet Explorer의 팝업 개체를 사용 하 여 생성, 되므로 메뉴 렌더링 하지 않습니다 올바르게 테두리 동사 길이 다양 한 텍스트를 위에 마우스 포인터를 놓으면 합니다. 선언 하는 것이 가장 좋은 해결 방법은 `<MenuVerbHoverStyle>` 모든 동사에 대 한 메뉴의 너비는 정확히 동일한 크기 보이지 않는 테두리가 있는 요소입니다. 선언적 요소는 영역 내에서 발생 하 고 다음과 같습니다.  
  
```  
<asp:WebPartZone ID="WebPartZone1" runat="server">  
  <MenuVerbHoverStyle BorderStyle="Solid" BorderWidth="1px"       BorderColor="White" />  
  <ZoneTemplate>  
      <asp:Button ID="Button1" runat="server" Text="Button" />  
  </ZoneTemplate>  
</asp:WebPartZone>  
```  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbHoverStyle%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbHoverStyle%2A> 속성에는 선언적 태그에 할당 된 값입니다. 이 값에 영향을 줍니다 `WebPartZone2`합니다. 브라우저에 페이지를 로드 한 후 편집 모드로 전환 합니다. 동사 메뉴의 컨트롤에 대 한 배경색이 동사 메뉴를 클릭 `WebPartZone2` 은 선언적 태그에 할당 된 색입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle" />
      </Docs>
    </Member>
    <Member MemberName="MenuVerbStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style MenuVerbStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style MenuVerbStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuVerbStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ MenuVerbStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuVerbStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동사 드롭다운 메뉴가 표시될 때 메뉴에 동사가 나타나는 모양에 대한 스타일 정보를 가져옵니다.</summary>
        <value>동사 메뉴에 표시되는 동사의 스타일 정보가 들어 있는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 포함 된 스타일 정보는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle%2A> 동사 메뉴에서 각 동사에 속성이 적용 됩니다.  
  
 기본 스타일 특성을 설정할 수 있지만이 속성이 읽기 전용 이면 <xref:System.Web.UI.WebControls.Style> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle%2A> 속성에는 선언적 태그에 할당 된 값입니다. 이 값에 영향을 줍니다 `WebPartZone2`합니다. 브라우저에 페이지를 로드 한 후 편집 모드로 전환 합니다. 동사 메뉴를 클릭 한 다음에 유의 동사 메뉴의 컨트롤에 대 한 글꼴 스타일 `WebPartZone2` 선언적 태그에 할당 된 스타일입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle" />
      </Docs>
    </Member>
    <Member MemberName="MinimizeVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb MinimizeVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb MinimizeVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinimizeVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ MinimizeVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimizeVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 영역의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤을 최소화할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>최종 사용자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤을 최소화할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 최소화 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb%2A> 속성이 각각의 동사 메뉴에 나타나는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 컨트롤에에서 합니다. 동사 모든 페이지 디스플레이 모드에 표시 됩니다.  
  
 컨트롤을 최소화를 더 작은 크기로 축소, 컨트롤의 제목 표시줄, 표시 된 상태로 하 고 복원 동사를 제목 표시줄에 표시 되도록 만듭니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 코드 예제가 작동 하려면 모든 코드의 예 섹션에서 필요는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> 속성입니다.  
  
 다음 부분 코드 예제에서는 partial 클래스의 이며 최소화 동사를 사용 하도록 설정 하거나 사용할 수 없게 하는 코드가 포함 되어 있습니다.  
  
 [!code-csharp[WebParts_WebPartZoneBase_Verbs#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#5)]
 [!code-vb[WebParts_WebPartZoneBase_Verbs#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#5)]  
  
 코드 예제에서는의 다른 부분을 사용자 지정을 호스팅하는 웹 페이지는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 하 고 사용자 인터페이스 (UI)를 포함 합니다. 선언적 `<MinimizeVerb>` 영역에는 요소에 대 한 값을 설정는 `Description` 특성 동사 메뉴에서 동사 위에 마우스 포인터를 놓을 때 도구 설명으로 표시 되는 텍스트입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 브라우저에서 페이지를 로드 한 후 페이지 카탈로그 디스플레이 모드를 전환 하 고 추가 된 `TextDisplayWebPart` 추가 되지 않은 경우 컨트롤의 페이지입니다. 확인란을 사용 하 여 및에 최소화 동사를 해제 하 고 `TextDisplayWebPart` 제어 합니다. 동사를 사용 하는 경우 컨트롤을 최소화할 수도 클릭 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb" />
      </Docs>
    </Member>
    <Member MemberName="MinimizeWebPart">
      <MemberSignature Language="C#" Value="protected virtual void MinimizeWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void MinimizeWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void MinimizeWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member MinimizeWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.MinimizeWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartZoneBase.MinimizeWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">최소화할 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤입니다.</param>
        <summary>영역의 선택된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 최소화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeWebPart%2A> 메서드에 최소화 동사를 클릭할 때 호출 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A> 하면 선택 된 속성 값 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.PartChromeState.Minimized>합니다. 가 최소화 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 영역 내에서 축소 하 고 해당 콘텐츠를 숨기 및 제목 표시줄만 표시 됩니다.  
  
 메서드는만 사용 해야으로 파생 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 와 같은 영역 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />가 <see langword="null" />인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb" />
        <altmember cref="F:System.Web.UI.WebControls.WebParts.PartChromeState.Minimized" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateVerbs">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateVerbs (System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateVerbs(class System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateVerbs (e As WebPartVerbsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateVerbs(System::Web::UI::WebControls::WebParts::WebPartVerbsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCreateVerbs : System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs -&gt; unit&#xA;override this.OnCreateVerbs : System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs -&gt; unit" Usage="webPartZoneBase.OnCreateVerbs e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> 파생 메서드 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역 클래스를 더 추가할 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 시간대에서 표준 동사 컬렉션에 있습니다. 동사 컬렉션에 추가 하 여이 작업을 수행할 수는 <xref:System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs.Verbs%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 처리기를 만들 수는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs> 재정의 하 여 이벤트는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> 메서드를 파생 한 사용자 지정 동사 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다.  
  
 코드 예제에서는 두 개의 소스 파일을 포함합니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제는 동적 컴파일과 사용합니다. 컴파일하는 방법을 보여 주는 연습을 참조 하십시오. [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 파생 된 단순 컨트롤에 대 한 첫 번째 부분 코드 예제는 소스 코드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스입니다.  
  
 [!code-csharp[WebParts_WebPartVerb2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/SimpleControl.cs#2)]
 [!code-vb[WebParts_WebPartVerb2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/SimpleControl.vb#2)]  
  
 코드 예제에서는 두 번째 부분은 파생에 대 한 소스 코드 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 재정의 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> 메서드를 영역에 사용자 지정 동사를 추가 합니다. 코드의 동사 메뉴에 표시 되는 사용자 지정 동사 만듭니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에 포함 된 컨트롤 및 동사 현재의 다른 복사본을 만듭니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 [!code-csharp[WebParts_WebPartVerb2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/ZoneWithAddedVerb.cs#3)]
 [!code-vb[WebParts_WebPartVerb2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/ZoneWithAddedVerb.vb#3)]  
  
 코드 예제에서는 세 번째 부분은 파생된 영역을 호스트 하는 웹 페이지 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 페이지의 위쪽에는 `Register` 지시문을 파생된 영역의 구성 요소를 참조 합니다. 브라우저에서 페이지를 로드 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 영역에 나타납니다. 동사 메뉴를 클릭 한 다음 클릭는 **CopyWebPart** 동사 하며 컨트롤의 복사본을 만듭니다.  
  
 [!code-aspx-csharp[WebParts_WebPartVerb2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/Defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartVerb2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/Defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="webPartZoneBase.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnPreRender%2A> 메서드 호출 기본 <xref:System.Web.UI.WebControls.WebParts.WebZone.OnPreRender%2A> 에서 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebZone> 클래스, 한 다음 영역에서 모든 동사를 만듭니다. 뷰 상태가 저장 되 고 페이지를 렌더링 하기 전에 영역에 동사를 프로그래밍 방식으로 변경 하려면 개발자를 페이지가 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="webPartZoneBase.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">다시 게시 인수입니다.</param>
        <summary>가장 최근의 포스트백 이벤트 후 발생한 변경 내용에 따라 영역에 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 현재 컬렉션 상태를 업데이트합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webPartZoneBase.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">영역의 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 대해 영역을 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render%2A> 에서 기본 메서드를 재정의 <xref:System.Web.UI.WebControls.WebControl> 클래스에 대 한 값을 설정 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webPartZoneBase.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">영역의 본문 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>기본 메서드를 재정의하여 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 클래스에서 파생된 영역의 본문 부분을 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody%2A> 메서드를 포함 하는 머리글 및 바닥글 영역 사이의 주 콘텐츠 영역 부분인 영역 본문 영역 렌더링 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody%2A> 의 기본 메서드를 재정의 <xref:System.Web.UI.WebControls.WebParts.WebZone> 레이아웃과 스타일을 해결할 수 있는 특수 한 렌더링 되는 특성을 제공 하기 위해 클래스에 고유 하 게 적용 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다. 메서드는 본문의 전체 내용을 포함 하는 테이블을 렌더링 하 고 해당 테이블 내에서 다양 한 조건에 따라 서로 다른 특성 값을 설정 있는지 여부를 비롯는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 속성이 세로 또는 가로로 설정 되어 있는지 여부 및 페이지 디자인 디스플레이 모드 현재입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderDropCue">
      <MemberSignature Language="C#" Value="protected virtual void RenderDropCue (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderDropCue(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderDropCue(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderDropCue (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderDropCue(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderDropCue : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderDropCue : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webPartZoneBase.RenderDropCue writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">컨트롤을 놓을 수 있는 위치를 나타내는 UI 요소를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>영역 내에서 끌고 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 놓을 수 있는 위치를 최종 사용자에게 알려 주기 위한 UI(사용자 인터페이스) 요소를 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지 디자인 디스플레이 모드에 있으면 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 속성이 `true` (기본값) 이면 사용자가 끌어 페이지의 레이아웃을 변경할 수 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 내에서 및 영역 사이입니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderDropCue%2A> 에 따라 UI 요소를 렌더링 하는 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 끌고 있는 컨트롤을 놓을 수 있는 사용자에 게 알려 주는 영역의 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderHeader">
      <MemberSignature Language="C#" Value="protected override void RenderHeader (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderHeader(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderHeader(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderHeader (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderHeader(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderHeader : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webPartZoneBase.RenderHeader writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">머리글의 내용을 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>기본 메서드를 재정의하여 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 영역의 머리글을 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderHeader%2A> 에서 파생 되는 영역에 고유한 헤더를 렌더링할 수 있도록 기본 메서드를 재정의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 및 포함 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 와 달리는 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 영역은 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역 동사 헤더에 필요 하지 않습니다. 단일 셀이 있는 테이블, 영역 제목 및 제목에 적용할 스타일 특성 요구 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderHeader(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderHeader(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RestoreVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb RestoreVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb RestoreVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RestoreVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ RestoreVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 영역의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤을 보통 크기로 복원할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>최종 사용자가 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 컨트롤을 복원할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 하는 복원 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb%2A> 속성이 각각의 동사 메뉴 내에서 나타나는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 최소화 되었을 때 영역에 컨트롤. 동사 메뉴 모든 페이지 디스플레이 모드에 나타납니다.  
  
 컨트롤을 복원 다시 확대 보통 크기로 컨트롤 최소화 된 후입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 코드 예제가 작동 하려면 모든 코드의 예 섹션에서 필요는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> 속성입니다.  
  
 다음 부분 코드 예제에서는 partial 클래스의 이며 복원 동사를 사용 하도록 설정 하거나 사용할 수 없게 하는 코드가 포함 되어 있습니다.  
  
 [!code-csharp[WebParts_WebPartZoneBase_Verbs#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#5)]
 [!code-vb[WebParts_WebPartZoneBase_Verbs#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#5)]  
  
 코드 예제에서는의 다른 부분을 사용자 지정을 호스팅하는 웹 페이지는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 하 고 사용자 인터페이스 (UI)를 포함 합니다. 선언적 `<RestoreVerb>` 영역에는 요소에 대 한 값을 설정는 `Description` 특성 동사 메뉴에서 동사 위에 마우스 포인터를 놓을 때 도구 설명으로 표시 되는 텍스트입니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Verbs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 브라우저에서 페이지를 로드 한 후 페이지 카탈로그 디스플레이 모드를 전환 하 고 추가 된 `TextDisplayWebPart` 추가 되지 않은 경우 컨트롤의 페이지입니다. 최소화 동사를 사용 하 여 컨트롤을 최소화 하 고 복원 동사 표시 됩니다. 사용 하도록 설정 하 고 복원 동사를 사용 하지 않도록 설정 하려면 확인란을 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb" />
      </Docs>
    </Member>
    <Member MemberName="RestoreWebPart">
      <MemberSignature Language="C#" Value="protected virtual void RestoreWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RestoreWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RestoreWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member RestoreWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.RestoreWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartZoneBase.RestoreWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">복원할 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤입니다.</param>
        <summary>최소화된 상태의 선택된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 표준 상태로 복원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 영역의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> 속성이 `true`, 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 해당 영역에서 컨트롤에 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A> 속성이로 설정 <xref:System.Web.UI.WebControls.WebParts.PartChromeState.Minimized>호출는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreWebPart%2A> 메서드 컨트롤을 반환 <xref:System.Web.UI.WebControls.WebParts.PartChromeState.Normal> 상태, 즉 표준 크기 및 모양입니다.  
  
 일반적으로 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreWebPart%2A> 를 클릭할 때 메서드가 호출 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb%2A> 동사입니다.  
  
 메서드는만 사용 해야으로 파생 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 와 같은 영역 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" />가 <see langword="null" />인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="webPartZoneBase.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>페이지가 서버에 게시된 이후 발생한 뷰 상태의 변경을 저장합니다.</summary>
        <returns>영역 컨트롤의 현재 뷰 상태를 반환합니다. 영역과 관련된 뷰 상태가 없는 경우 이 메서드는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SaveViewState%2A> 메서드가 호출 하는 기본 <xref:System.Web.UI.WebControls.WebParts.WebZone.SaveViewState%2A> 메서드를 영역에 대 한 스타일 특성을 렌더링 합니다. 영역에서 모든 개별 동사와 동사 메뉴에 대 한 상태 정보를 저장합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.SaveViewState" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedPartChromeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SelectedPartChromeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SelectedPartChromeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedPartChromeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ SelectedPartChromeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPartChromeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역에서 선택된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 나타나는 모양에 대한 스타일 정보를 가져옵니다.</summary>
        <value>선택된 <see cref="T:System.Web.UI.WebControls.Style" /> 컨트롤의 스타일 정보가 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle%2A> 속성을 사용 하면 선택한 항목에 대 한 스타일 특성에 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 웹 파트 페이지 편집 모드에 있을 때 컨트롤에에서 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에는 선언적으로 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 에 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle%2A> 속성에는 선언적 태그에 할당 된 값입니다. 이 값에 영향을 줍니다 `WebPartZone1`합니다. 브라우저에 페이지를 로드 한 후 편집 모드로 전환 합니다. 중 하나에 대 한 동사 메뉴에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 컨트롤을 편집 하 고 컨트롤의 배경색 선언적 태그에 할당 한 색을 변경 하는 동사를 클릭 합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTitleIcons">
      <MemberSignature Language="C#" Value="public virtual bool ShowTitleIcons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTitleIcons" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ShowTitleIcons" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowTitleIcons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowTitleIcons { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowTitleIcons : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.ShowTitleIcons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역에 있는 각 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 제목 표시줄에 제목 아이콘이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>제목 아이콘이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ShowTitleIcons%2A> 하나 이상의 경우에 속성은 영역에 적용 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에서 컨트롤의 해당에 할당 된 값이 있는 <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A> 속성입니다. 기본적으로 제목 아이콘이 영역에 표시 됩니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ShowTitleIcons%2A> 속성이 `false`, 없음에 대 한 title 아이콘 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 컨트롤에에서 표시 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">다시 게시 인수입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />를 참조하세요.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 인스턴스가 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleBarVerbButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType TitleBarVerbButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType TitleBarVerbButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TitleBarVerbButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType TitleBarVerbButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.TitleBarVerbButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 제목 표시줄에서 동사에 사용되는 단추의 형식을 가져오거나 설정합니다.</summary>
        <value>컨트롤의 제목 표시줄에서 동사에 사용되는 단추의 형식을 나타내는 <see cref="T:System.Web.UI.WebControls.ButtonType" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbButtonType%2A> 속성은 경우에만 적용 됩니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode%2A> 속성 값으로 설정 됩니다 <xref:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.TitleBar>, 각각의 제목 표시줄에 직접 렌더링 되는 표준 동사 줄어들고 결과적 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역에서 제어 합니다. 제목 표시줄 단추 종류는 단추, 이미지, 하이퍼링크 될 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성 값이 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonType" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="TitleBarVerbStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style TitleBarVerbStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style TitleBarVerbStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TitleBarVerbStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ TitleBarVerbStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TitleBarVerbStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 제목 표시줄에 나타나는 동사의 스타일 특성을 가져옵니다.</summary>
        <value>동사에 대한 스타일 특성이 포함된 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbStyle%2A> 속성의 모든 제목 표시줄의 동사에 대 한 스타일 특성 포함 된 스타일 개체를 검색할 수 있도록 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 컨트롤입니다. 속성이 때 동사가 실제로 렌더링 되는 경우와 같이 제목 표시줄에 적용 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode%2A> 속성 값으로 설정 됩니다 <xref:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.TitleBar>합니다.  
  
 속성에서 참조 하는 개체 읽기 전용 이더라도 여전히 제목 표시줄에 동사에 대 한 기본 스타일 특성을 변경할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webPartZoneBase.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>영역의 뷰 상태 변경 내용을 <see cref="T:System.Web.UI.StateBag" /> 개체에 저장하고 <see cref="P:System.Web.UI.Control.ViewState" /> 속성을 통해 액세스할 수 있도록 이 변경 내용에 대한 추적 프로세스를 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TrackViewState%2A> 메서드가 호출 하는 기본 <xref:System.Web.UI.WebControls.WebParts.WebZone.TrackViewState%2A?displayProperty=nameWithType> 메서드 영역에 대 한 스타일 특성의 상태를 추적할 수 있습니다. 또한 모든 개별 동사에 대 한 상태 추적 및 영역에 있는 동사 메뉴에 대 한 스타일 정보를 시작합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.TrackViewState" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="VerbButtonType">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.ButtonType VerbButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType VerbButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property VerbButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType VerbButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.VerbButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이전 브라우저로 액세스할 때 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 영역에 있는 동사와 연결된 단추의 종류를 가져오거나 설정합니다.</summary>
        <value>영역의 동사와 연결된 단추의 종류를 나타내는 <see cref="T:System.Web.UI.WebControls.ButtonType" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트 동사 최소화 하거나 복원 제어; 등의 웹 파트 페이지의 사용자 인터페이스 (UI)에서 사용자가 수행할 수 있는 동작을 나타냅니다. 한 페이지에 컨트롤 추가 또는 작업을 취소 합니다. 동사를 사용 하 여 하이퍼링크, 이미지 또는 단추로 표시 되도록 설정할 수 있는 클릭 가능한 개체로 UI에 표시 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType%2A> 영역 수준에 존재 하는 동사에 존재 하는 동사에 속성이 적용 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 컨트롤입니다. 예를 들어 카탈로그 편집 모드 또는 페이지를 전환할 때 있는 영역 수준 동사 전체 영역 수준에서 작업에만 적용 되는 영역 바닥글입니다. <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType%2A> 이전 ("하위") 브라우저와 웹 파트 페이지에 액세스할 때 속성을 적용 합니다.  
  
 에 값을 할당 해야 합니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.ImageUrl%2A> 이미지가 영역에서 해당 동사에 대 한 표시 하는 각 특정 동사에 대 한 속성입니다. 이미지에는 동사의 URL을 제공 하지 않는 경우 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType%2A> 속성의 기본값은 <xref:System.Web.UI.WebControls.ButtonType.Link>합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ButtonType" />
      </Docs>
    </Member>
    <Member MemberName="WebPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartChrome WebPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartChrome WebPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebPartChrome As WebPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartChrome ^ WebPartChrome { System::Web::UI::WebControls::WebParts::WebPartChrome ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartChrome : System.Web.UI.WebControls.WebParts.WebPartChrome" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역에 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> 컨트롤의 주변 렌더링을 결정하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>영역에 있는 컨트롤의 렌더링을 결정하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="WebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartCollection WebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebParts As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartCollection ^ WebParts { System::Web::UI::WebControls::WebParts::WebPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebParts : System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역 내에 포함된 웹 파트 컨트롤의 컬렉션을 가져옵니다.</summary>
        <value>영역의 모든 웹 파트 컨트롤에 대한 참조가 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> 속성에서 직접 상속 하는 컨트롤에 대 한 참조를 포함할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 다른 ASP.NET 서버 컨트롤 또는 사용자 지정 컨트롤 영역 내에서 뿐 아니라 클래스입니다. 웹 파트 컨트롤을 동적으로 설정 하지 않은 모든 컨트롤을 래핑하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 으로 제어는 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 런타임에 제어;이 메커니즘을 통해 웹 파트 컨트롤로 ASP.NET 컨트롤의 모든 형식을 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어 합니다. 이 코드는 영역이 포함 된.aspx 페이지와 코드 숨김 소스 파일을 포함 하 여 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스 개요입니다.  
  
 다음 코드 예제에서는 액세스는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> 속성 프로그래밍 방식으로에 포함 된 컨트롤의 목록을 표시 하 고 `WebPartZone1`합니다. 브라우저에 페이지를 로드 한 후 단추를 클릭 **목록 WebPartZone1 WebParts**합니다. Id와 컨트롤 형식이 표시 됩니다.  
  
 [!code-csharp[WebParts_WebPartZoneBase_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview.cs#8)]
 [!code-vb[WebParts_WebPartZoneBase_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      </Docs>
    </Member>
    <Member MemberName="WebPartVerbRenderMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode WebPartVerbRenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode WebPartVerbRenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property WebPartVerbRenderMode As WebPartVerbRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerbRenderMode WebPartVerbRenderMode { System::Web::UI::WebControls::WebParts::WebPartVerbRenderMode get(); void set(System::Web::UI::WebControls::WebParts::WebPartVerbRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.WebPartVerbRenderMode : System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에서 동사가 렌더링되는 방식을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode" /> 컨트롤에서 동사가 렌더링되는 방식을 나타내는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 열거형 값입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.Menu" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode%2A> 속성 결정 여부에 동사 <xref:System.Web.UI.WebControls.WebParts.WebPart> 영역의 컨트롤은 컨트롤의 제목 표시줄에 또는 드롭 다운 동사 메뉴에 렌더링 됩니다. 동사를 제목 표시줄에 렌더링할 수 없으면 설정할 수도 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbButtonType%2A> 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbStyle%2A> 동사의 모양을 변경 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성 값이 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbButtonType" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode" />
      </Docs>
    </Member>
  </Members>
</Type>