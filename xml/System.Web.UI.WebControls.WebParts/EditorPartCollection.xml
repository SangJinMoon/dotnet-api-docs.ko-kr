<Type Name="EditorPartCollection" FullName="System.Web.UI.WebControls.WebParts.EditorPartCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8971ddf017ff21fb15cec6dd58942895ce443b9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585426" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EditorPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EditorPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EditorPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type EditorPartCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 속성, 레이아웃, 모양 및 동작을 편집하는 데 사용할 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤의 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 클래스는 읽기 전용 컬렉션의 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 일반적으로 사용 되는 컨트롤은 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 의 집합을 추적 하는 영역 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에 포함 된 컨트롤입니다.  
  
 웹 파트 페이지도 편집 모드로 전환 하 고 사용자가 편집 컨트롤을 선택, 편집 하는 프로세스가 시작 됩니다. 영역에서는 새 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 구성 된 개체는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에 포함 된 컨트롤입니다. 영역에 액세스 편집 프로세스에서 여러 단계는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 사이의 값을 저장 하거나 속성을 검색할 개체는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컬렉션의 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 현재 편집 중인 제어 합니다.  
  
 만들 수는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 집합에 대규모 작업을 수행 해야 하는 예를 들어 경우 사용자는 프로그래밍 방식으로 용도 대 한 컨트롤 컬렉션 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 경우에는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체는 읽기 전용, 컬렉션에서 참조 하는 내부 컨트롤의 속성을 프로그래밍 방식으로 변경을 수행할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에는 몇 가지 사용 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 클래스입니다. 이 코드 예제를 네 부분으로 이루어져 있습니다.  
  
-   웹 파트 페이지에서 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.  
  
-   사용자 지정에 대 한 클래스 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 컨트롤 `TextDisplayWebPart`, 웹 페이지에서 참조 하 고 편집 하는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다.  
  
-   참조 하는 웹 페이지는 `TextDisplayWebPart` 제어 하 고, 포함 프로그램 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤의 여러는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 웹 파트 컨트롤 있는 영역에서 선언 된 설정에서 제어 하 고 만들고는 조작하는이벤트기반코드를포함<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>개체입니다.  
  
-   브라우저에 로드할 때 코드 예제에서는 작동 하는 방법 설명 합니다.  
  
 이 코드 예제는 첫 번째 부분에는 사용자가 웹 페이지에 대 한 디스플레이 모드를 변경할 수 있는 사용자 컨트롤입니다. 이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 세부 정보를 참조 [연습: 웹 파트 페이지에](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/displaymodecs.ascx#4)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/displaymodevb.ascx#4)]  
  
 코드 예제에서는 두 번째 부분은 `TextDisplayWebPart` 제어 합니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 두 컴파일 방법을 보여 주는 연습을 참조 [연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 컨트롤에 라는 속성이 `ContentText`;이 속성은 사용자가 텍스트 상자에 입력 값을 보유 합니다. 컨트롤 표준 함께 편집 모드에 있을 때이 사용자 지정 속성을 편집할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 속성을 제어 합니다.  
  
 [!code-csharp[WebParts_EditorPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_EditorPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 코드 예제에서는 세 번째 부분에는 웹 페이지입니다. 에 `<asp:editorzone>` 페이지에 대 한 요소에 대 한 선언을 포함 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 사용자 지정의 일부로 이러한 컨트롤 중 두 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 때 만들어지는 개체는 `Button1_Click` 메서드가 실행 합니다.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#1)]  
  
 브라우저에서 페이지를 로드할 때를 전환할 수 있습니다 페이지 편집 모드를 선택 하 여 **편집** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다. 제목 표시줄에 동사 메뉴 (아래쪽 화살표)을 클릭할 수 있는 `TextDisplayWebPart` 컨트롤을 클릭 하 여 **편집** 컨트롤을 편집 합니다. 편집 사용자 인터페이스 (UI)가 표시 되 면 모두를 볼 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 클릭는 **EditorPartCollection 만들기** 에 효과 확인 하려면 단추는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 를 조작 하는 코드에서 만든 컨트롤을는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체입니다. 또한는 <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> 컨트롤을 사용 하면 사용자 지정을 편집할 수 있습니다 `TextDisplayWebPart.ContentText` 속성입니다. 이 없기 때문에 속성으로 표시 됩니다는 `WebBrowsable` 컨트롤에 대 한 소스 코드에서. 페이지의 업데이트 결과 보려면 표준 찾아보기 모드를 반환 해야 편집 ui에서 속성 값을 업데이트 하는 경우는 `TextDisplayWebPart.ContentText` 속성입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 클래스의 비어 있는 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> 생성자의 빈 인스턴스를 초기화 합니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 클래스입니다. 이 생성자의 오버이 로드에서 내부적으로 사용 되는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 클래스에 해당 <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> 빈 컬렉션 개체를 만드는 메서드를 합니다. 영역에는 다음의 모든 인스턴스 만듭니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에 자식 영역 템플릿 선언 및 내부 메서드를 사용 하 여 컬렉션에 추가할 합니다.  
  
 이 오버 로드를 사용할 수 없습니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> 의 새 인스턴스를 만드는 생성자 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 추가 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 에 컨트롤을 합니다. 에 대 한 다른 오버 로드 중 하나를 사용 해야 합니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> 생성자 대신 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection (System.Collections.ICollection editorParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection editorParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (editorParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection(System::Collections::ICollection ^ editorParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.EditorPartCollection : System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="new System.Web.UI.WebControls.WebParts.EditorPartCollection editorParts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="editorParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="editorParts">
          <see cref="T:System.Collections.ICollection" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 컨트롤의 <see cref="T:System.Collections.ICollection" /> 컬렉션을 전달하여 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> 생성자의 인스턴스를 초기화 합니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 클래스 및 컬렉션을 전달 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 이 한 오버 로드는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> 새 만드는 데 사용할 수 있는 생성자 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체를 추가 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 에 컨트롤을 합니다.  
  
 경우에는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 생성자가 만든 인스턴스는 읽기 전용, 개별에 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컬렉션에 프로그래밍 방식으로 제어 하 고 해당 속성 및 메서드를 호출 합니다.  
  
 사용 하기 위한 한 가지 일반적인 시나리오는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> 생성자의 집합 전체에 일괄 작업을 수행 하려면 것 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 콘텐츠, 모양 또는 그중에서 관련된 그룹의 위치를 변경 하는 등의 컨트롤입니다.  
  
 사용 하기 위한 또 다른 일반적인 시나리오는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> 생성자가 사용자 지정을 개발 하는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 연결할 서버 컨트롤과 함께 사용자가 컨트롤에 대해 사용자 지정 속성을 편집할 수 있도록 하는 컨트롤입니다. 이 시나리오에서는 서버 컨트롤이 구현 해야는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스를 해당 작업의 일부로 구현 해야 합니다는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드. 사용자 지정을 사용 하도록 설정 하려면 해당 메서드의 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 편집 서버 컨트롤을 추가 해야 하는 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 <xref:System.Collections.ICollection> 인스턴스를 같은 <xref:System.Collections.ArrayList> 개체입니다. 컬렉션을 전달할 수 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> 생성자를 만들려면 새 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 모든 컨트롤을 설정 하 고 편집 프로세스 시작 영역을 사용 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 사용자 지정을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 컬렉션이 읽기 전용으로 설정 하는 경우에 여전히 개별 변경 하기 위한 일괄 처리 작업을 수행할 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컬렉션에 있는 컨트롤입니다. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 클래스 개요입니다.  
  
 코드는 `Button1_Click` 이벤트는 <xref:System.Collections.ArrayList> 개체를 추가 하는 3 개 중 2 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 페이지는 개체에 있는 컨트롤과 새로 만듭니다. 그런 다음 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 를 사용 하 여 개체는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.%23ctor%2A> 생성자입니다. 기본 변경을 수행할 수 있습니다는 방법도 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컬렉션이 읽기 전용인 경우에 제어 합니다.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 브라우저에서 페이지를 로드 하 고 페이지를 선택 하 여 편집 모드를 전환할 수 **편집** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다. 제목 표시줄에 동사 메뉴 (아래쪽 화살표)을 클릭할 수 있는 `TextDisplayWebPart` 컨트롤을 클릭 하 여 **편집** 컨트롤을 편집 합니다. 편집 사용자 인터페이스 (UI)가 표시 되 면 모두를 볼 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 클릭는 **EditorPartCollection 만들** 두에 미치는 영향을 표시 하려면 단추 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 에 추가 된 컨트롤은 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorPartCollection (System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, System.Collections.ICollection editorParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.EditorPartCollection existingEditorParts, class System.Collections.ICollection editorParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingEditorParts As EditorPartCollection, editorParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorPartCollection(System::Web::UI::WebControls::WebParts::EditorPartCollection ^ existingEditorParts, System::Collections::ICollection ^ editorParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.EditorPartCollection : System.Web.UI.WebControls.WebParts.EditorPartCollection * System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="new System.Web.UI.WebControls.WebParts.EditorPartCollection (existingEditorParts, editorParts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingEditorParts" Type="System.Web.UI.WebControls.WebParts.EditorPartCollection" />
        <Parameter Name="editorParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingEditorParts">영역에 있는 기존 <see cref="T:System.Collections.ICollection" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</param>
        <param name="editorParts">영역에 없지만 프로그래밍 방식으로 만들어진 <see cref="T:System.Collections.ICollection" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 컬렉션과 추가 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤의 <see cref="T:System.Collections.ICollection" /> 컬렉션을 전달하여 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.EditorPart editorPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.EditorPart editorPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::EditorPart ^ editorPart);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WebParts.EditorPart -&gt; bool" Usage="editorPartCollection.Contains editorPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorPart" Type="System.Web.UI.WebControls.WebParts.EditorPart" />
      </Parameters>
      <Docs>
        <param name="editorPart">컬렉션 멤버인지 여부를 테스트할 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</param>
        <summary>특정 컨트롤이 컬렉션에 있는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />가 컬렉션에 있는지 여부를 나타내는 부울 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains%2A> 메서드 여부, 특정 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어가 이미는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 특정 지 여부를 결정 하는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤이 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체입니다. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 클래스 개요입니다.  
  
 코드는 `Button1_Click` 이벤트를 추가 하지 않습니다는 `LayoutEditorPart1` 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체는 다른 컨트롤을 추가 합니다. 하는지 확인 하려면는 `LayoutEditorPart1` 제어가 아닙니다. 컬렉션에 사용 하 여 코드는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains%2A> 메서드.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 브라우저에서 페이지를 로드할 때를 전환할 수 있습니다 페이지 편집 모드를 선택 하 여 **편집** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다. 제목 표시줄에 동사 메뉴 (아래쪽 화살표)을 클릭할 수 있는 `TextDisplayWebPart` 컨트롤을 클릭 하 여 **편집** 컨트롤을 편집 합니다. 편집 사용자 인터페이스 (UI)가 표시 되 면 모두를 볼 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 클릭는 **만들 EditorPartCollection** 단추를 점을 확인할 수 있습니다의 배경색은 `LayoutEditorPart1` 컨트롤은 아니기 때문에 다른 컨트롤과 다른의 일부가 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.EditorPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.EditorPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As EditorPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::EditorPart ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WebParts.EditorPart[] * int -&gt; unit" Usage="editorPartCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.EditorPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">복사한 컨트롤의 컬렉션을 포함할 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</param>
        <param name="index">배열에서 컬렉션 내용이 배치될 시작 지점입니다.</param>
        <summary>컬렉션을 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤의 배열에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A> 메서드는 포함 될 수 있는 사용자 지정 배열을 만들 때 유용는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체, 해당 컨트롤의 하위 집합 또는 해당 컨트롤의 상위 집합입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A> 의 사용자 지정 된 배열을 만드는 메서드를 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 클래스 개요입니다.  
  
 코드는 `Button1_Click` 이벤트의 배열을 만듭니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어, 추가는 `LayoutEditorPart1` 컨트롤을 배열에 한 다음 사용 하는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo%2A> 컨트롤을 복사 하는 메서드는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체 배열입니다.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 브라우저에서 페이지를 로드할 때를 전환할 수 있습니다 페이지 편집 모드를 선택 하 여 **편집** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다. 제목 표시줄에 동사 메뉴 (아래쪽 화살표)을 클릭할 수 있는 `TextDisplayWebPart` 컨트롤을 클릭 하 여 **편집** 컨트롤을 편집 합니다. 편집 사용자 인터페이스 (UI)가 표시 되 면 모두를 볼 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 클릭는 **만들 EditorPartCollection** 단추, 페이지 하단에 있는 사용자 지정 배열에 있는 모든 컨트롤의 제목을 나열 되어 있는지을 확인할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.EditorPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.EditorPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As EditorPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::EditorPartCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션의 읽기 전용인 빈 정적 인스턴스를 참조합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정적, 읽기 전용, 빈 인스턴스 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 다른 개체를 사용 하 여 인스턴스를 비교 하거나 메서드에서 올바른 개체 유형을 반환 하려면 빈 컬렉션 인스턴스를 원하는 있지만 멤버를 추가할 필요가 없습니다 메모리 사용량을 줄일 수는 인스턴스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.EditorPart editorPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.EditorPart editorPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::EditorPart ^ editorPart);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WebParts.EditorPart -&gt; int" Usage="editorPartCollection.IndexOf editorPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorPart" Type="System.Web.UI.WebControls.WebParts.EditorPart" />
      </Parameters>
      <Docs>
        <param name="editorPart">컬렉션의 멤버인 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</param>
        <summary>컬렉션의 특정 멤버 위치를 반환합니다.</summary>
        <returns>컬렉션에 있는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤의 인덱스에 해당하는 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A> 메서드는 여러 개 있을 경우 유용 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 웹 파트 페이지에서 컨트롤 컬렉션에서 특정 컨트롤을 찾을 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A> 찾을 방법은 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체입니다. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 클래스 개요입니다.  
  
 코드는 `Button1_Click` 이벤트는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체, 한 다음 사용 하는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf%2A> 찾을 방법은 `PropertyGridEditorPart1` 컬렉션에서 컨트롤을 설정 해당 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> 속성입니다.  
  
 [!code-aspx-csharp[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/CS/editorpartcollectioncs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPartCollection_Overview/VB/editorpartcollectionvb.aspx#2)]  
  
 브라우저에서 페이지를 로드할 때를 전환할 수 있습니다 페이지 편집 모드를 선택 하 여 **편집** 에 **디스플레이 모드** 드롭 다운 목록 컨트롤입니다. 제목 표시줄에 동사 메뉴 (아래쪽 화살표)을 클릭할 수 있는 `TextDisplayWebPart` 컨트롤을 클릭 하 여 **편집** 컨트롤을 편집 합니다. 편집 사용자 인터페이스 (UI)가 표시 되 면 모두를 볼 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 클릭는 **EditorPartCollection 만들** 단추를 것을 확인할 수는 `PropertyGridEditorPart1` 페이지 맨 아래 가까이 있는 컨트롤에 제목을 있지만 테두리가 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As EditorPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPart ^ default[int] { System::Web::UI::WebControls::WebParts::EditorPart ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WebParts.EditorPart" Usage="System.Web.UI.WebControls.WebParts.EditorPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에 있는 특정 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />의 인덱스입니다.</param>
        <summary>고유 식별자에 따라 컬렉션의 특정 멤버를 반환합니다.</summary>
        <value>컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>