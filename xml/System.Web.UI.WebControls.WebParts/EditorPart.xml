<Type Name="EditorPart" FullName="System.Web.UI.WebControls.WebParts.EditorPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7af0059e27479c672134947a3b808a2a6c1413f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585764" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EditorPart : System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EditorPart extends System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EditorPart&#xA;Inherits Part" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorPart abstract : System::Web::UI::WebControls::WebParts::Part" />
  <TypeSignature Language="F#" Value="type EditorPart = class&#xA;    inherit Part" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.Part</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 영역에 있는 컨트롤에 대한 기본 클래스 역할을 하며 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 편집하는 데 사용합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 사용 되는 메서드와 속성의 기본 집합을 제공 하는 클래스에서 파생 된 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 및 사용자 지정 웹 파트 컨트롤 집합으로 제공 되는 제어 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 사용 하면 사용자를 연결 된 편집할 <xref:System.Web.UI.WebControls.WebParts.WebPart> 레이아웃, 모양, 속성, 동작, 또는 기타 특성을 수정 하 여 제어 합니다.  
  
 구성 된 편집 사용자 인터페이스 (UI) <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 포함 된 영역 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어, 웹 페이지 편집 모드로 전환 후에 표시 됩니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에서 파생 되는 영역 내 에서만 사용할 수는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 같은 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 제어 합니다.  
  
 선택할 수 있는 페이지가 편집 모드를 입력 한 후 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤이 선택 된 컨트롤의 동사 메뉴에서 편집 동사를 클릭 하 여 편집 합니다. 하나의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 한 번에 컨트롤을 편집할 수 있습니다.  
  
 파생 된 여러 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤이 다음 표에 나열 된 웹 파트 컨트롤 집합 제공 됩니다. 이러한 컨트롤 대부분의 응용 프로그램에 필요한 편집 기능을 제공 합니다. 내에서 페이지 지 속성 형식을 선언 하는 웹 파트 페이지에서 이러한 컨트롤을 사용 하기 위한 일반적인 방법을 `<zonetemplate>` 요소, 여기서 `<zonetemplate>` 의 자식 요소는 `<asp:editorzone>` 요소입니다. 코드 예제에서는이 항목의 예제 섹션을 참조 하십시오.  
  
|컨트롤의 형식|설명|  
|---------------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.AppearanceEditorPart>|제목 텍스트, 높이, 너비 및 테두리 특성 등의 속성을 포함 하 여 연결된 된 컨트롤의 모양을 편집 합니다.|  
|<xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart>|편집할 수 있는지 여부가, 여부 닫을 수 있습니다, 또는 다른 영역으로 이동할 수 있는지 여부와 같은 연결된 된 컨트롤의 동작을 편집 합니다. 이 컨트롤은 공유 개인 설정 범위에서 컨트롤을 편집할 때에 페이지에 표시 합니다.|  
|<xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>|일반 또는 최소화 된 (축소) 상태로 인지 영역 등 연결된 된 컨트롤에 대 한 편집 레이아웃 특성에 배치 됩니다.|  
|<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>|이러한 속성은 소스 코드에서 선언 된 경우 연결된 된 컨트롤의 속성을 편집는 `WebBrowsable` 특성입니다.|  
  
> [!NOTE]
>  액세스 가능성을 개선 하기 위해 모든는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 웹 파트 컨트롤 집합 내에서 렌더링 됩니다 제공 제어는 `<fieldset>` 요소입니다. `<fieldset>` 에서 편집을 위해 사용 되는 컨트롤 관련된 집합을 그룹화 하는 요소는 지정 된 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 시각적 사용자 에이전트 (예: 일반적인 웹 브라우저)와 음성 기반의 사용자 에이전트에 대 한 이러한 컨트롤 간의 탭된 탐색을 용이 하 게 컨트롤 (예: 화면 읽기)입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 선언적 방법과 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 이 코드 예제는 네 부분으로 이루어져 있습니다.  
  
-   웹 파트 페이지에서 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.  
  
-   포함 하는 웹 페이지는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 의 여러는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역과 사용자 지정에 대 한 참조에 선언 된 설정 하는 웹 파트 컨트롤에서 컨트롤 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
-   사용자 지정을 포함 하는 클래스 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 및 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 의 속성을 편집 하는 것에 대 한 제어는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
-   브라우저에서 페이지를 로드 하는 경우이 예제에서는 작동 하는 방식에 대해 설명 합니다.  
  
 이 코드 예제는 첫 번째 부분에는 사용자가 웹 페이지에 대 한 디스플레이 모드를 변경할 수 있는 사용자 컨트롤입니다. 이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 세부 정보를 참조 [연습: 웹 파트 페이지에](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_EditorPart_Overview#14](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/displaymodecs.ascx#14)]
 [!code-aspx-vb[WebParts_EditorPart_Overview#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/displaymodevb.ascx#14)]  
  
 코드 예제에서는 두 번째 부분에는 웹 페이지입니다. 에 대 한 선언적 참조를 포함 한 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 자식이 있는 컨트롤 `<zonetemplate>` 두 웹 파트 컨트롤 집합에 대 한 선언적 참조를 포함 하는 요소 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 페이지에도 사용자 지정 참조 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 사용 하는 `Register` 어셈블리에 대 한 지시문 및 `<aspSample:TextDisplayWebPart>` 컨트롤 요소입니다.  
  
 [!code-aspx-csharp[WebParts_EditorPart_Overview#12](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/editorpart_overview_cs.aspx#12)]
 [!code-aspx-vb[WebParts_EditorPart_Overview#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/editorpart_overview_vb.aspx#12)]  
  
 코드 예제에서는 세 번째 부분은 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 클래스 `TextDisplayWebPart`합니다. 클래스가 구현 하는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스입니다. 이 클래스에는 개인에 대 한 코드를 포함 하는 중첩 된, 개인 클래스 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 와 관련 된 클래스는 `TextDisplayWebPart` 클래스 및 명명 된 `TextDisplayEditorPart`합니다. 런타임 시로는 `TextDisplayWebPart` 컨트롤의 편집 모드로 전환 되었으면 해당 `TextDisplayWebPart.CreateEditorParts` 의 인스턴스를 만들고, 메서드는 `TextDisplayEditorPart` 클래스에 표시 하 고는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 와 함께 다른 컨트롤 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다.  
  
 [!code-csharp[WebParts_EditorPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts_EditorPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#1)]  
  
 브라우저 및에서 페이지를 로드 하는 **디스플레이 모드** 컨트롤을 **편집 모드** 편집 모드로 전환 합니다. 제목 표시줄에 동사 메뉴 (아래쪽 화살표)를 클릭는 `TextDisplayWebPart` 컨트롤을 클릭 하 여 **편집** 컨트롤을 편집 합니다. 편집 UI가 표시 하는 경우 3 개를 볼 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤, 페이지를 포함 하는 사용자 지정 편집할 수 있도록 하는 `TextDisplayWebPart.FontStyle` 속성입니다. 편집 UI와 클릭에서 일부 변경 하는 경우는 **적용** 단추를 찾아보기 모드로 편집 변경의 모든 결과 확인할 페이지를 반환 하는 드롭다운 목록에서 컨트롤을 사용할 수 있습니다.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>사용자 지정 만들어 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤을 두 가지 중요 한 메서드를 재정의 해야 합니다. <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" /> 편집기 컨트롤을에서 변경 내용을 적용 하는 메서드는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 편집 하 고 제어 합니다. <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" /> 메서드의 현재 값을 가져옵니다는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 편집기 컨트롤을 편집할 수 있도록 편집 하 고 제어 합니다. 이 두 가지 중요 한 메서드를 사용 하면를 가져오고 사용자 지정 사이의 값을 설정할 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 제어 및 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 가 편집 컨트롤입니다.  파생 하는 경우는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 사용자 지정 편집기 컨트롤을 만드는 클래스를 사용자 지정 컨트롤을 추가할 수 있습니다는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 구현 하 여 영역은 <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> 인터페이스는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤, 사용자 정의 컨트롤 또는 서버 컨트롤입니다. 자세한 내용과 코드 예제에 대 한 참조는 <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> 클래스 개요입니다. 또한 "예" 섹션의 코드 예제에서는 구현 하는 방법을 <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> 사용자 지정에서 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 제어 합니다.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorPart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EditorPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>상속된 클래스 인스턴스에 사용할 수 있도록 클래스를 초기화합니다. 이 생성자는 상속된 클래스에서만 호출될 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChanges">
      <MemberSignature Language="C#" Value="public abstract bool ApplyChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ApplyChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ApplyChanges () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ApplyChanges();" />
      <MemberSignature Language="F#" Value="abstract member ApplyChanges : unit -&gt; bool" Usage="editorPart.ApplyChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤의 값을 관련 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 해당 속성에 저장합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤에서 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤로 값을 저장하는 작업이 성공하면 <see langword="true" />이고, 그렇지 않고 오류가 발생하면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> 방법은에 중요 한 메서드는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 합니다. 추상 메서드와으로 정의 되어는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 클래스와 상속 된 컨트롤에 의해 구현 되어야 합니다. 에 사용자가 입력 한 값을 저장 하는 메서드는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에서 해당 속성에는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 에서 참조 되는 컨트롤은 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> 속성.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> 메서드는 확인 또는 편집 사용자 인터페이스 (UI)에서 동사를 적용을 나타내는 단추를 클릭할 때 호출 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> 메서드가 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 합니다. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 클래스 개요입니다.  
  
 코드 예제에서는 첫 번째 부분에는의 구현 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> 은 사용자 지정 메서드 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 라는 클래스 `TextDisplayEditorPart`합니다. 이 메서드는 연결에 대 한 참조를 가져옵니다 `TextDisplayWebPart` 를 사용 하 여 제어는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> 속성입니다. 값을 다음 업데이트는 `TextDisplayWebPart.FontStyle` 속성입니다.  
  
 [!code-csharp[WebParts_EditorPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#5)]
 [!code-vb[WebParts_EditorPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#5)]  
  
 코드 예제에서는 두 번째 부분을 보여 줍니다. 어떻게 연결 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 `TextDisplayWebPart`의 컬렉션을 만듭니다 관련 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤 (이 경우에 하나의 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 라는 컨트롤 `TextDisplayEditorPart` 컬렉션에)에 구현에서 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드. 이 메서드를 실행할 때는 `TextDisplayWebPart` 컨트롤이 편집 모드로 전환 합니다.  
  
 [!code-csharp[WebParts_EditorPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_EditorPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 되는 클래스는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 클래스 구현 해야 합니다는 <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" /> 메서드. 구현 된 메서드를 사용 하 여 연결 된 컨트롤에 대 한 참조를 가져옵니다는 <see cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" /> 속성의 현재 값과 해당 컨트롤의 속성을 업데이트 하 고는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 제어 합니다.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public virtual bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.Display" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Display { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Display : bool" Usage="System.Web.UI.WebControls.WebParts.EditorPart.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤이 편집 모드에 있을 때 컨트롤을 표시할지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤을 표시할지 여부를 나타내는 부울 값입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 At 편집의 특정 지점을 처리를 포함 하는 영역은 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 검사 제어는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> 속성 컨트롤을 표시할지 여부를 결정 합니다.  
  
 두 가지 시나리오에는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> 속성에서 반환 `false` 및 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤이 표시 되지 않습니다. 편집 중인 컨트롤의 경우 첫 번째 시나리오는 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPart> 제어 합니다. 두 번째 시나리오는 편집 중인 컨트롤에 있을 때 발생 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> 및 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> 속성으로 설정 `true`반면 개인 설정 범위는 페이지의 사용자 수준에서 설정 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPart" />
      </Docs>
    </Member>
    <Member MemberName="DisplayTitle">
      <MemberSignature Language="C#" Value="public string DisplayTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayTitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayTitle : string" Usage="System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤의 제목 표시줄에 표시되는 제목 텍스트가 들어 있는 문자열을 가져옵니다.</summary>
        <value>실제로 표시되는 컨트롤의 전체 제목을 나타내는 문자열입니다. 기본값은 .NET Framework에서 제공하는 계산된 culture별 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> 자료의 현재 값을 반환 하는 속성 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 속성 또는 컨트롤에는 계산 된 값 제목이 없는 경우. 계산 된 값 제목 없는 컨트롤에 대 한 지역화할 수 있는 리소스 문자열을 구성 합니다. 에 할당 된 값의 경우에는 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 속성, 값은 <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> 속성에서 다른는 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 속성입니다.  
  
 때문에 <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> 속성은 읽기 전용에 되도록 설계 실행 시 표시 되는 제목의의 현재 실제 값을 계산 된 속성에 대 한 제목을 설정 하려면이 속성을 사용 하지 마십시오는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 합니다. 제목을 설정 하려면 기본 사용 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="editorPart.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤의 부모 영역에 대한 현재 상태를 검색합니다.</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" /> 컨트롤을 포함하는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 영역의 현재 상태가 있는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.GetDesignModeState%2A> 포함 된 영역 상태에 대 한 정보를 반환 하는 메서드는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 합니다. 상태 정보는 사전의 형태로 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState" />
        <altmember cref="M:System.Web.UI.Control.GetDesignModeState" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="editorPart.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본을 호출 하는 것 외에도 <xref:System.Web.UI.Control.OnPreRender%2A> 메서드를는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.OnPreRender%2A> 메서드는 또한 확인 된 <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> 속성입니다. 값이 `false`는 컨트롤이 표시 되지 않아야, 즉 하면 <xref:System.Web.UI.Control.Visible%2A> 도 속성이 `false`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="editorPart.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">영역을 표시하기 위한 상태 데이터가 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 컨트롤이 들어 있는 현재 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 영역에 디자인 모드 상태의 특징을 적용합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncChanges">
      <MemberSignature Language="C#" Value="public abstract void SyncChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SyncChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SyncChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SyncChanges();" />
      <MemberSignature Language="F#" Value="abstract member SyncChanges : unit -&gt; unit" Usage="editorPart.SyncChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에서 관련 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤에 대한 속성 값을 검색합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> 방법은에 중요 한 메서드는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 합니다. 추상 메서드와으로 정의 되어는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 클래스와 상속 된 컨트롤에 의해 구현 되어야 합니다. 메서드가의 목적은에서 현재 값을 검색 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 에서 참조 된 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> 속성을의 필드를 업데이트 하 고는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 사용자가 편집할 수 있도록이 값을 가진 컨트롤입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> 메서드를 호출 될 때마다 값은 연결 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 변경 했을 수 있습니다. 에 대 한 모든 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 컨트롤 호출 하 여 포함 된 영역은 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> 메서드를 호출한 후 즉시는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> 메서드를 있도록의 값은 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에 있는 값과 항상 동기화 연결 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 또 다른 경우 여기서는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> 메서드는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 편집 모드를 시작 하는 컨트롤입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> 후 메서드가 호출 되지 않습니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> 메서드 해당 메서드가 반환 하는 경우 `false`경우 오류가 발생 했기 때문에, 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> 메서드가 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 합니다. 예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 클래스 개요입니다.  
  
 코드 예제에서는 첫 번째 부분에는의 구현 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> 은 사용자 지정 메서드 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 라는 클래스 `TextDisplayEditorPart`합니다. 이 메서드는 연결에 대 한 참조를 가져옵니다 `TextDisplayWebPart` 를 사용 하 여 제어는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> 속성입니다. 다음의 값을 가져옵니다는 `TextDisplayWebPart.FontStyle` 속성과 드롭 다운 목록 컨트롤에서 선택한 항목을 업데이트 (으로 참조 되는 `TextDisplayEditorPart.PartContentFontStyle` 속성)에 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 합니다.  
  
 [!code-csharp[WebParts_EditorPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#6)]
 [!code-vb[WebParts_EditorPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#6)]  
  
 코드 예제에서는 두 번째 부분을 보여 줍니다. 어떻게 연결 된 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 `TextDisplayWebPart`의 컬렉션을 만듭니다 관련 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤 (이 경우에 하나의 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 라는 컨트롤 `TextDisplayEditorPart` 컬렉션에)에 구현에서 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드. 이 메서드를 실행할 때는 `TextDisplayWebPart` 컨트롤이 편집 모드로 전환 합니다.  
  
 [!code-csharp[WebParts_EditorPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_EditorPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 되는 클래스는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 클래스 구현 해야 합니다는 <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" /> 메서드. 구현 된 메서드를 사용 하 여 연결 된 컨트롤에 대 한 참조를 가져옵니다는 <see cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" /> 속성을 선택한 다음 업데이트는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 제어에서 연결 된 속성 값을 가진 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 제어 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartManager As WebPartManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManager ^ WebPartManager { System::Web::UI::WebControls::WebParts::WebPartManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartManager : System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.EditorPart.WebPartManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 웹 페이지와 연결된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value>페이지의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에 대 한 참조가 필요는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 의 값을 확인 하는 페이지의 현재 개인 설정 범위를 확인 해야 하기 때문에 인스턴스는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> 속성입니다. 개인 설정 범위를 확인 하 여 결정 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> 속성을 통해 액세스할 수 있는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartToEdit">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartToEdit As WebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ WebPartToEdit { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartToEdit : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 편집 중인 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value>현재 편집 모드인 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 (또는 다른 서버 또는 사용자 정의 컨트롤) 하는 현재 편집 중인의 값에 해당 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> 속성입니다. 하나의 <xref:System.Web.UI.WebControls.WebParts.WebPart> 한 번에 한 컨트롤이 편집 모드일 때 컨트롤을 편집할 수는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> 속성은 해당 컨트롤에 대 한 참조를 제공 합니다.  
  
 후의 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 영역에 추가 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤 컨트롤의 컬렉션, 그런 다음 할당 자체의 값 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> 속성을는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤이 사용 하는 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> 속성의 두 가지 중요 한 메서드에-에서 특히<xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> 및 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A>-을 가져오고 연결된 된 컨트롤에 속성 값을 설정 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.EditorZoneBase Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorZoneBase Zone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.Zone" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Zone As EditorZoneBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::EditorZoneBase ^ Zone { System::Web::UI::WebControls::WebParts::EditorZoneBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zone : System.Web.UI.WebControls.WebParts.EditorZoneBase" Usage="System.Web.UI.WebControls.WebParts.EditorPart.Zone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorZoneBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 영역에 대한 참조를 가져옵니다.</summary>
        <value>컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하지만 <xref:System.Web.UI.WebControls.WebParts.EditorPart.Zone%2A> 속성은 읽기 전용, 포함 하는 영역 개체에 대 한 참조를 제공는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 변경할 수 있습니다 프로그래밍 방식으로 해당 영역에서 속성 값입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>