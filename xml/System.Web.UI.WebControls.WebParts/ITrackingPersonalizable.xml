<Type Name="ITrackingPersonalizable" FullName="System.Web.UI.WebControls.WebParts.ITrackingPersonalizable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cde885d7996dfa9cae4eb493b6d2917c09131058" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589957" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITrackingPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITrackingPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITrackingPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITrackingPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>웹 파트 컨트롤에서 특정 단계의 개인 설정 로드 및 저장 프로세스를 추적할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스에는 컨트롤 개발자가 개인 설정 데이터의 저장 및 로드를 포함 하 여 개인 설정 수명 주기 주기의 각 단계를 추적할 수 있습니다. 대부분의 경우에서이 인터페이스를 사용 하 여 만듭니다는 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 또는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 이 인터페이스를 구현 합니다. 또한 자체 변경 ("더티") 추적을 관리 하는 데 필요한 컨트롤을이 인터페이스를 구현 해야 합니다. 자신의 변경 내용 추적을 관리 하는 컨트롤을 반환 해야 `true` 에서 <xref:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.TracksChanges%2A> 속성입니다.  
  
 경우 `false` ASP.NET는 저장 된 속성 정보로 로드할 속성 정보를 비교 하 여 변경 내용을 확인 한 후 반환 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하 여 보여 줍니다. <xref:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable> 메서드 및 속성을 로드 하 고 저장할 개인 설정 정보를 추적 합니다. 이 예제에서는 App_Code 하위 디렉터리에 배치 해야 하는 파일,.aspx 페이지와 두 부분으로 구성 됩니다.  
  
 다음 코드 예제에서는 사용자가 URL 정보를 입력 하도록 허용 하 고 사용자에 게이 정보를 저장 하는 웹 파트 컨트롤을 만듭니다.  
  
 [!code-csharp[WebParts_IPersonalizable#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable/CS/persdict.cs#9)]
 [!code-vb[WebParts_IPersonalizable#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable/VB/persdict.vb#9)]  
  
 .Aspx 페이지는 웹 파트 영역의 만들고 영역에 컨트롤을 추가 합니다. 페이지는 개인 설정 적용 될 수 있도록 개별 사용자가 로그온 하는 데 사용 해야 하는 로그인 컨트롤도 참조 합니다.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable#10](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable/CS/defaultcs.aspx#10)]
 [!code-aspx-vb[WebParts_IPersonalizable#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable/VB/Defaultvb.aspx#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.BeginLoad" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>개인 설정 정보의 로드 시작 단계를 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트 컨트롤 집합 개인 설정 데이터를 적용 하기 전에이 메서드를 호출 합니다. 변경 상태를 추적 하는 컨트롤을 나타내는 속성 호출 하지 않아야 하는 내부 플래그를 설정 하려면이 방법을 사용 해야 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A>합니다. 속성 설정 방법에 대 한 호출 이후의 개인 설정 데이터를 적용 하는 동안 호출할 수 없으므로이 <xref:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.BeginLoad%2A>합니다. 대부분의 시나리오에서 컨트롤 간주 되지 않아야 해 서 기본 데이터 저장소에서 로드 한 데이터에 개인 설정 가능한 속성 기준으로 설정 된 ("더티")으로 변경 합니다.  
  
> [!NOTE]
>  이 메서드는 웹 파트 컨트롤을 가져온 후 개인 설정 데이터가 적용 되는 경우에 호출 됩니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.BeginLoad%2A> 메서드. 완전 하 고 작업을 코드 예제는 제어 및.aspx 페이지의 구성 된 참조는 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> 클래스 개요 항목입니다.  
  
 [!code-csharp[WebParts_IPersonalizable#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable/CS/persdict.cs#4)]
 [!code-vb[WebParts_IPersonalizable#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable/VB/persdict.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSave">
      <MemberSignature Language="C#" Value="public void BeginSave ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginSave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.BeginSave" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginSave ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginSave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤에서 개인 설정 데이터를 추출하기 이전 단계를 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤에서 개인 설정 데이터를 추출 하기 전에이 메서드를 호출 하는 웹 파트 컨트롤 집합입니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.BeginSave%2A> 메서드. 완전 하 고 작업을 코드 예제는 제어 및.aspx 페이지의 구성 된 참조는 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> 클래스 개요 항목입니다.  
  
 [!code-csharp[WebParts_IPersonalizable#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable/CS/persdict.cs#5)]
 [!code-vb[WebParts_IPersonalizable#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable/VB/persdict.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.EndLoad" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoad ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoad();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>개인 설정 데이터를 컨트롤에 적용한 후의 단계를 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트 컨트롤 집합 컨트롤에 적용 된 후 개인 설정 데이터에이 메서드를 호출 합니다. 변경 상태를 추적 하는 컨트롤의 내부 상태를 나타내는 후속 속성 설정 메서드가 호출 하는 다시 설정 하려면이 방법을 사용 해야 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A>합니다. 시간순으로는 <xref:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.EndLoad%2A> 메서드가 호출 되 면 웹 파트 컨트롤 집합 컨트롤에 개인 설정 데이터의 모든 응용 프로그램을 완료 합니다. 결과적으로, 컨트롤의 상태에 후속 변경 내용을 고려할 컨트롤이 변경 하는 유효한 표시기 ("더티" 임).  
  
> [!NOTE]
>  이 메서드는 웹 파트 컨트롤을 가져온 후 개인 설정 데이터가 적용 되는 경우에 호출 됩니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.EndLoad%2A> 메서드. 완전 하 고 작업을 코드 예제는 제어 및.aspx 페이지의 구성 된 참조는 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> 클래스 개요 항목입니다.  
  
 [!code-csharp[WebParts_IPersonalizable#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable/CS/persdict.cs#6)]
 [!code-vb[WebParts_IPersonalizable#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable/VB/persdict.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSave">
      <MemberSignature Language="C#" Value="public void EndSave ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.EndSave" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSave ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>개인 설정 데이터를 컨트롤에서 추출한 후의 단계를 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 파트 컨트롤 집합 컨트롤에서 추출 된 후 개인 설정 데이터에이 메서드를 호출 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.EndSave%2A> 메서드. 완전 하 고 작업을 코드 예제는 제어 및.aspx 페이지의 구성 된 참조는 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> 클래스 개요 항목입니다.  
  
 [!code-csharp[WebParts_IPersonalizable#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable/CS/persdict.cs#7)]
 [!code-vb[WebParts_IPersonalizable#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable/VB/persdict.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TracksChanges">
      <MemberSignature Language="C#" Value="public bool TracksChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TracksChanges" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.TracksChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TracksChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TracksChanges { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에서 변경 상태를 추적하는지 여부를 나타냅니다.</summary>
        <value>
          컨트롤이 변경된 것으로 간주할지를 웹 파트 컨트롤에서 결정하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤을 반환 하는 경우 `true` 이 속성에서 않으면 자체 "더티". 결정 하는 웹 파트 컨트롤의 책임 컨트롤 변경 된 것으로 판단 하는 경우 ("더티"은), 컨트롤 호출 해야 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> 자체에 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 된 <xref:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.TracksChanges%2A> 속성입니다. 완전 하 고 작업을 코드 예제는 제어 및.aspx 페이지의 구성 된 참조는 <xref:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable> 클래스 개요 항목입니다.  
  
 [!code-csharp[WebParts_IPersonalizable#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable/CS/persdict.cs#8)]
 [!code-vb[WebParts_IPersonalizable#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable/VB/persdict.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>