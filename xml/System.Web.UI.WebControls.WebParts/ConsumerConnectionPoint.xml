<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConsumerConnectionPoint.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cb9fefe53ca0dc6efecfbfa06ad64f25a529c339.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb9fefe53ca0dc6efecfbfa06ad64f25a529c339</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Defines a connection point object that enables a server control acting as a consumer to form a connection with a provider.</source>
          <target state="translated">소비자 역할을 하는 서버 컨트롤에서 공급자와의 연결을 설정할 수 있도록 하는 연결 지점 개체를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</source>
          <target state="translated">두 개의 서버 컨트롤 간의 모든 웹 파트 연결에서 각 컨트롤 있어야 (간에 다른 요구 사항) 다른 컨트롤에 연결 하 고 제공 하거나 여부에 따라 데이터를 사용할 수 있도록 하는 관련 된 연결 지점 개체 컨트롤 공급자 또는 소비자 연결용으로 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> object in general contains the details for how a control can connect to another control and the type of data it can share.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> 개체 일반적 공유할 수 있는 데이터의 형식과 다른 컨트롤에 컨트롤 연결 방법에 대 한 세부 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For a control acting as the consumer in a connection, its connection point must be a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object.</source>
          <target state="translated">연결에서 소비자 역할을 하는 컨트롤의 경우 연결 지점은 이어야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For details on Web Parts connections and connection points, read the topics listed in the See Also section below.</source>
          <target state="translated">웹 파트 연결 및 연결 지점에 대 한 자세한 내용은 아래 참고 항목 섹션에 나열 된 항목을 참조 하세요.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>To create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object, several steps are required:</source>
          <target state="translated">만들려면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 개체, 여러 단계를 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Enable a consumer control to reference an interface instance.</source>
          <target state="translated">인터페이스 인스턴스를 참조 하는 소비자 컨트롤을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> or other server control (any type of server control that will be added to a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> zone can be used) must be able to consume data from a specific interface instance.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 또는 기타 서버 컨트롤 (모든 형식의 서버 컨트롤에 추가 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> 영역을 사용할 수 있습니다)에서는 특정 인터페이스 인스턴스에서 데이터를 사용할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The control need not implement the interface; only the provider must implement it.</source>
          <target state="translated">컨트롤; 인터페이스를 구현 하지 필요 공급자를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The consumer can either work with the exact interface type served by a provider or, if it does not, a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> object can be used to transform data from a provider's interface type to a type understood by the consumer.</source>
          <target state="translated">소비자는 공급자가 제공 하 고 정확한 인터페이스 형식과 하거나 사용할 수 또는 존재 하지 않는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> 소비자가 인식할 수 있는 형식에 데이터 공급자의 인터페이스 형식에서 변환할 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A typical way to enable a consumer is to declare a private field to contain a reference to the desired interface type.</source>
          <target state="translated">소비자를 사용 하도록 설정 하려면 원하는 인터페이스 형식에 대 한 참조를 포함 하도록 전용 필드를 선언 하는 일반적인 방법은입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Identify a callback method.</source>
          <target state="translated">콜백 메서드를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A method in the consumer must be identified as the callback method to establish a connection with the provider.</source>
          <target state="translated">소비자의 메서드는 공급자와 연결할 콜백 메서드로 식별 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This method retrieves an instance of the interface that the provider implements, and assigns it to (for example) the private field created in the first step.</source>
          <target state="translated">이 메서드는 공급자 구현 및 할당 (예) private 필드에 단계에서 만든 첫 번째 인터페이스의 인스턴스를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The Web Parts approach for identifying a callback method in the consumer is to add a <ph id="ph1">`ConnectionConsumer`</ph> metadata attribute (defined by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&gt;</ph> class) to the method that receives the interface instance.</source>
          <target state="translated">소비자의 콜백 메서드를 식별 하는 데 웹 파트 방법은 추가 하는 <ph id="ph1">`ConnectionConsumer`</ph> 메타 데이터 특성 (정의한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&gt;</ph> 클래스) 인터페이스 인스턴스가 수신 하는 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>When the attribute is added, the only required parameter is a display name to use for the consumer connection point.</source>
          <target state="translated">특성이 추가 되 면 필요한 유일한 매개 변수는 소비자 연결 지점에 사용할 표시 이름입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Optional parameters can also be added, such as an ID.</source>
          <target state="translated">선택적 매개 변수를 추가할 수도 있습니다, ID 등</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Process and output the data from the interface instance.</source>
          <target state="translated">처리 하 고 데이터 인터페이스 인스턴스를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Perform any internal processing as needed on the data, and then typically a consumer control will render the data to the page.</source>
          <target state="translated">데이터에 대해 필요에 따라 내부 처리를 수행 하 고 일반적으로 소비자 컨트롤 데이터를 렌더링 합니다 페이지.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A common way of doing this is to override the control's <ph id="ph1">&lt;xref:System.Web.UI.Control.OnPreRender%2A&gt;</ph> method.</source>
          <target state="translated">이 작업의 일반적으로 컨트롤의 재정의 하는 <ph id="ph1">&lt;xref:System.Web.UI.Control.OnPreRender%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>During a synchronous request, a consumer should request data directly from the provider during or immediately after the <ph id="ph1">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> event.</source>
          <target state="translated">동기 요청 하는 동안 소비자 데이터를 요청 해야 공급자에서 직접 중 이나 직후는 <ph id="ph1">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>During an asynchronous request, if the provider's callback method is not called at any point during rendering, the developer can assume that no data was sent to the consumer.</source>
          <target state="translated">비동기 요청 하는 동안 공급자의 콜백 메서드에서 렌더링 하는 동안 언제 든 지 호출 되지 않으면 개발자 가정할 수 데이터가 없는 소비자에 게 전송 되었습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>After a control has been equipped to act as a consumer, the control can participate in connections (assuming that a provider control is also equipped and available).</source>
          <target state="translated">컨트롤 소비자 역할을 하도록 설정 된 후 컨트롤 (구비 하 고 사용 가능한 공급자 컨트롤도 라고 가정함) 연결에 참여할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>To create a static, declarative connection in the markup of a Web page, developers can use the <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> element.</source>
          <target state="translated">웹 페이지의 태그에는 정적 선언적 연결을 만들려면 개발자가 사용할 수는 <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If the <ph id="ph1">`ConnectionConsumer`</ph> attribute in the consumer source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the <ph id="ph2">`ConsumerConnectionPointID`</ph> attribute in the <ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph> element on a page.</source>
          <target state="translated">경우는 <ph id="ph1">`ConnectionConsumer`</ph> 연결 지점에 대 한 ID를 지정 하는 콜백 메서드를 식별 하는 소비자 소스 코드에서 해당 값에 할당 되어야 합니다는 <ph id="ph2">`ConsumerConnectionPointID`</ph> 특성에 <ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph> 는 페이지입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A reason that a developer might specify an ID for a consumer connection point is if there are multiple connection points defined in the consumer control.</source>
          <target state="translated">개발자가 소비자 연결 지점에 대 한 ID를 지정할 수 있습니다 이유 소비자 컨트롤에 정의 된 연결 지점이 여러 개 있기 때문입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If an ID is not specified for the consumer connection point in the consumer control, a value does not have to be assigned to the <ph id="ph1">`ConsumerConnectionPointID`</ph> attribute in the page either, because the connection will be created using a default value obtained from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;</ph> field.</source>
          <target state="translated">소비자 컨트롤에 있는 소비자 연결 지점에 대 한 ID를 지정 하지 않으면, 값에 할당할 않아도 <ph id="ph1">`ConsumerConnectionPointID`</ph> 만들어지므로 연결에서 가져온 기본값을 사용 하 여 페이지에서, 특성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>To create a connection in code, developers must create a new <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;</ph> method and passing to it the ID of the consumer control, along with the ID or index of the defined <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object in the consumer control.</source>
          <target state="translated">코드에서 연결을 만들려는 개발자는 새 만들어야 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 호출 하 여 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;</ph> 메서드와 함께 ID 또는 인덱스의 정의 된 소비자 컨트롤의 ID를 전달 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 소비자 컨트롤에는 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The returned <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object, along with a reference to the consumer control, a reference to the provider control, and a corresponding <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</ph> object, are all passed to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt;</ph> method to create a new <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph> object.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 개체와 소비자 컨트롤에 대 한 참조는 해당 공급자 컨트롤에 대 한 참조 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</ph> 개체를 모두에 전달 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt;</ph> 만드는 새 메서드를 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Although developers can use consumer connection points as part of establishing connections either declaratively or programmatically, users can also interact with consumer connection points to establish connections through the user interface (UI).</source>
          <target state="translated">개발자를 사용할 수 있지만 소비자 연결 지점 선언적으로 또는 프로그래밍 방식으로 연결 설정의 일부로 사용자가 사용자 인터페이스 (UI)를 통해 연결을 설정할 수 있는 소비자 연결 지점의 상호 작용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If developers declare a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;</ph> control on a Web page, it provides a run-time UI for users to create connections.</source>
          <target state="translated">개발자가 선언 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;</ph> 컨트롤이 웹 페이지에서 연결을 생성 하는 사용자를 위해 런타임에 UI를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If users choose the provider control as the starting point for establishing the connection by clicking its connect verb (they could also choose the consumer; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display names of the available consumer connection point (or points if there are multiple ones) that the provider can send the data to.</source>
          <target state="translated">사용자가 클릭 하 여 연결을 설정 하기 위한 시작 지점으로 공급자 컨트롤을 선택 하는 경우 해당 연결 동사 (소비자를 선택할 수도; 동일한 차이점이), UI에 있는 드롭다운 목록 컨트롤이 나타납니다는 표시 이름을 사용할 수 있는 소비자 연결 지점 (또는 여러 세션에 있는 경우 지점)의 공급자가 데이터를 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Users must select a consumer connection point to establish a connection.</source>
          <target state="translated">사용자가 연결을 설정 하는 소비자 연결 지점을 선택 해야 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object associates directly with a specific consumer control, and stores details about a connection in the properties it inherits from the base <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> class.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 특정 소비자 컨트롤 직접 연결 하 고 기본에서 상속 된 속성에 대 한 연결에 대 한 세부 정보를 저장 하는 개체 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For example, in the inherited <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</ph> property, a consumer connection point keeps the type of interface it uses.</source>
          <target state="translated">상속 된 예를 들어 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</ph> 소비자 연결 지점 속성을 사용 하 여 인터페이스의 형식을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If the provider and consumer in a connection both understand the interface type, the controls are compatible and capable of forming a direct connection.</source>
          <target state="translated">공급자와 소비자 연결에서 모두 이해 인터페이스 형식, 해당 컨트롤은 호환 되며 직접 연결을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If the provider and consumer cannot work with the same interface type, they are incompatible and must use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> object to translate the provider connection point's <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</ph> property into a type that the consumer can work with.</source>
          <target state="translated">공급자 및 소비자 같은 인터페이스 형식을 사용할 수 없는, 경우 호환 되지 않는 하며 사용 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> 공급자 연결 지점 변환할 개체 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</ph> 소비자가 사용할 수 있는 형식으로 속성입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Another important inherited property is the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;</ph> property, which provides a friendly name to display in the UI for users to choose a consumer connection point when creating connections.</source>
          <target state="translated">또 다른 중요 한 상속 된 속성은는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;</ph> 연결을 만들 때 소비자 연결을 선택 하는 사용자를 위해 UI에 표시 하는 식별 이름을 제공 하는 속성을 가리킵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The display name is the required parameter when developers add a <ph id="ph1">`ConnectionConsumer`</ph> attribute to the callback method in a consumer control.</source>
          <target state="translated">개발자는 추가 하는 경우 표시 이름은 필수 매개 변수를입니다는 <ph id="ph1">`ConnectionConsumer`</ph> 소비자 컨트롤의 콜백 메서드에 특성입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The inherited <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;</ph> property is also useful, as indicated above, because it provides a unique identifier for a consumer connection point in the event that a consumer has multiple connection points.</source>
          <target state="translated">상속 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;</ph> 소비자에 여러 연결 지점이 소비자 연결 지점에 대 한 고유 식별자를 제공 하기 때문에, 위에 표시 된 대로 속성을 도움이 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A consumer can have multiple <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> objects defined in it, and in this case, when developers add the <ph id="ph2">`ConnectionConsumer`</ph> attribute to a method, they should specify an ID value to distinguish each connection point.</source>
          <target state="translated">소비자는 여러 개 있을 수 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 개발자가 추가 하는 경우에 있으며이 경우 정의 된 개체는 <ph id="ph2">`ConnectionConsumer`</ph> 특성 메서드에 각 연결점을 구별 하는 ID 값을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>One other notable inherited property is the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;</ph> property, which indicates whether a consumer connection point can connect simultaneously to multiple providers.</source>
          <target state="translated">다른 주목할 만한 상속 된 속성 중 하나는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;</ph> 을 소비자 연결 지점에서 동시에 여러 공급자에 연결할 수 있는지 여부를 나타내는 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This property value is <ph id="ph1">`false`</ph> by default for consumer connection points (whereas it defaults to <ph id="ph2">`true`</ph> for provider connection points).</source>
          <target state="translated">이 속성 값은 <ph id="ph1">`false`</ph> 소비자 연결 지점에 대해 기본적으로 (기본적으로 반면 <ph id="ph2">`true`</ph> 공급자 연결 지점에 대 한).</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class adds several unique methods to the members it inherits from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 몇 가지 고유한 메서드를 추가 하는 클래스에서 상속 된 멤버에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt;</ph> method invokes the consumer's own defined callback method to retrieve the interface instance from the provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt;</ph> 메서드는 공급자에서 인터페이스 인스턴스를 검색 하려면 소비자의 사용자 정의 된 콜백 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph> method returns a Boolean value that indicates whether the connection point is able to establish connections, based on the current state of the associated consumer control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph> 메서드 연결점 연결된 소비자 컨트롤의 현재 상태에 따라 연결을 설정할 수 있는지 여부를 나타내는 부울 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The following code example shows simple ways to create a connection declaratively, programmatically, or through the UI, in each case making use of a consumer connection point.</source>
          <target state="translated">다음 코드 예제에서는 연결을 선언적으로 만들, 소비자 연결 지점을 사용 하 여 프로그래밍 방식으로 또는 각 사례 과정에서 UI를 통해 간단한 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The example has four parts:</source>
          <target state="translated">예제는 네 부분으로 이루어져 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A user control that enables you to change the Web Parts display mode on a page.</source>
          <target state="translated">웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤 페이지에서 모드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Source code for an interface and two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls acting as the provider and the consumer for a connection.</source>
          <target state="translated">소스 코드는 인터페이스 및 2에 대 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 으로 역할 공급자 및 연결에 대 한 소비자를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A Web page to host all the controls and run the code example.</source>
          <target state="translated">모든 컨트롤 호스트 및 코드 예제를 실행 하는 웹 페이지입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>An explanation of how to run the example page.</source>
          <target state="translated">예제 페이지를 실행 하는 방법에 대해 설명 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The first part of this code example is the user control that enables users to change display modes on a Web page.</source>
          <target state="translated">이 코드 예제는 첫 번째 부분에는 사용자가 웹 페이지에 대 한 디스플레이 모드를 변경할 수 있는 사용자 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Save the following source code to an .ascx file, giving it the file name that is assigned to the <ph id="ph1">`Src`</ph> attribute of the <ph id="ph2">`Register`</ph> directive for this user control, which is near the top of the hosting Web page.</source>
          <target state="translated">에 할당 된 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 된 <ph id="ph1">`Src`</ph> 특성에는 <ph id="ph2">`Register`</ph> 호스팅 웹 페이지의 맨 위 근처에이 사용자 정의 컨트롤에 대 한 지시문을 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For details about display modes and a description of the source code in this control, see <bpt id="p1">[</bpt>Walkthrough: Changing Display Modes on a Web Parts Page<ept id="p1">](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)</ept>.</source>
          <target state="translated">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 세부 정보를 참조 <bpt id="p1">[</bpt>연습: 웹 파트 페이지에<ept id="p1">](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The second part of the code example is the source code for the interface and controls.</source>
          <target state="translated">코드 예제에서는 두 번째 부분에는 인터페이스 및 컨트롤에 대 한 원본 코드입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The source file contains a simple interface named <ph id="ph1">`IZipCode`</ph>.</source>
          <target state="translated">소스 파일에 라는 간단한 인터페이스 <ph id="ph1">`IZipCode`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>There is also a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> class named <ph id="ph2">`ZipCodeWebPart`</ph> that implements the interface and acts as the provider control.</source>
          <target state="translated">또한 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 라는 클래스 <ph id="ph2">`ZipCodeWebPart`</ph> 인터페이스를 구현 하 고 공급자 컨트롤의 역할을 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The other <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> class is named <ph id="ph2">`WeatherWebPart`</ph>, and it acts as the consumer for the connection.</source>
          <target state="translated">다른 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 클래스 이름은 <ph id="ph2">`WeatherWebPart`</ph>, 연결에 대 한 소비자로 역할입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This class has a method named <ph id="ph1">`GetZipCode`</ph> that gets an instance of the <ph id="ph2">`IZipCode`</ph> interface from the provider control.</source>
          <target state="translated">이 클래스 라는 메서드가 <ph id="ph1">`GetZipCode`</ph> 의 인스턴스를 가져오는 <ph id="ph2">`IZipCode`</ph> 공급자 컨트롤에서 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Note that this method is marked as the consumer's connection point method with a <ph id="ph1">`ConnectionConsumer`</ph> attribute in its metadata.</source>
          <target state="translated">이 메서드는 소비자 연결 지점 메서드 사용으로 표시 되어는 <ph id="ph1">`ConnectionConsumer`</ph> 는 메타 데이터에는 특성입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This is the mechanism for identifying the connection point method in the consumer control.</source>
          <target state="translated">소비자 컨트롤에 있는 연결 메서드를 식별 하기 위한 메커니즘입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For the code example to run, you must compile this source code.</source>
          <target state="translated">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</source>
          <target state="translated">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</source>
          <target state="translated">또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This code example uses dynamic compilation.</source>
          <target state="translated">이 코드 예제는 동적 컴파일과 사용합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For a walkthrough that demonstrates how to compile, see <bpt id="p1">[</bpt>Walkthrough: Developing and Using a Custom Web Server Control<ept id="p1">](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)</ept>.</source>
          <target state="translated">컴파일하는 방법을 보여 주는 연습을 참조 하십시오. <bpt id="p1">[</bpt>연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The third part of the code example is the Web page.</source>
          <target state="translated">코드 예제에서는 세 번째 부분에는 웹 페이지입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Near the top are <ph id="ph1">`Register`</ph> directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</source>
          <target state="translated">상단 <ph id="ph1">`Register`</ph> 페이지에서 연결을 구성 하는 사용자 지정 컨트롤 및 사용자가 변경할 수 있는 사용자 정의 컨트롤을 등록 하는 지시문 디스플레이 모드입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The connection itself is created declaratively within the <ph id="ph1">`&lt;staticconnections&gt;`</ph> element on the page.</source>
          <target state="translated">연결 자체 내에 선언적으로 만들어집니다는 <ph id="ph1">`&lt;staticconnections&gt;`</ph> 페이지에서 요소입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This demonstrates one way of creating a connection--note the <ph id="ph1">`ConsumerConnectionPointID`</ph> attribute in the <ph id="ph2">`&lt;asp:webpartconnection&gt;`</ph> element.</source>
          <target state="translated">여기에서는 연결을 만드는 방법을 보여 줍니다.-참고는 <ph id="ph1">`ConsumerConnectionPointID`</ph> 특성에 <ph id="ph2">`&lt;asp:webpartconnection&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>You can also create the connection programmatically; the code for doing that is in the <ph id="ph1">`Button1_Click`</ph> method.</source>
          <target state="translated">연결을 프로그래밍 방식으로 만들 수도 있습니다. 코드를 수행 하는 <ph id="ph1">`Button1_Click`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>In this case, a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object is created and then passed to a method that creates the actual connection.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 개체가 생성 되 고 실제 연결을 만드는 메서드로 전달 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</source>
          <target state="translated">프로그래밍 방식으로 또는 선언적으로 연결을 만들고 있는지 여부를 연결점 공급자와 소비자 모두에 대해 항상 지정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The <ph id="ph1">`Button2_Click`</ph> method accesses the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</source>
          <target state="translated"><ph id="ph1">`Button2_Click`</ph> 메서드 액세스는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> 는 공급자와 소비자에 대 한 개체 및 속성 값의 일부 페이지에서 레이블을 씁니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>After you load the page in a browser, click the <bpt id="p1">**</bpt>Connection Point Details<ept id="p1">**</ept> button.</source>
          <target state="translated">브라우저에서 페이지를 로드 한 후 클릭는 <bpt id="p1">**</bpt>연결 지점 정보<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Information about the provider and consumer connection points established in the declarative connection appears.</source>
          <target state="translated">선언적 연결에 설정 된 공급자 및 소비자 연결 지점에 대 한 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Next, use the <bpt id="p1">**</bpt>Display Mode<ept id="p1">**</ept> drop-down control to switch the page into connect mode.</source>
          <target state="translated">를 사용 하 여는 <bpt id="p1">**</bpt>디스플레이 모드<ept id="p1">**</ept> 드롭다운 컨트롤을 페이지에 연결 전환 모드입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>On the verbs menu of the <bpt id="p1">**</bpt>ZIP Code Provider<ept id="p1">**</ept><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control (represented by a downward arrow in the title bar), click the connect verb.</source>
          <target state="translated">동사 메뉴에는 <bpt id="p1">**</bpt>우편 번호 공급자<ept id="p1">**</ept> <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 컨트롤 (제목 표시줄의 아래쪽 화살표로 표시 됨) 연결 동사를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The connection UI appears, created automatically by the <ph id="ph1">`&lt;asp:connectionszone&gt;`</ph> control declared in the page.</source>
          <target state="translated">UI가 표시 되는 연결에서 자동으로 만든는 <ph id="ph1">`&lt;asp:connectionszone&gt;`</ph> 컨트롤이 페이지에 선언 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This is another way of creating a connection (through the UI), along with the declarative and programmatic methods discussed earlier.</source>
          <target state="translated">이 앞에서 설명한 선언적 방법과 프로그래밍 방법을 함께 (UI)를 통해 한 연결을 만드는 다른 방법.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Click the <bpt id="p1">**</bpt>Disconnect<ept id="p1">**</ept> button to terminate the existing static connection.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>연결 끊기<ept id="p1">**</ept> 단추 기존 정적 연결을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Click the <bpt id="p1">**</bpt>Create a Connection to a Consumer<ept id="p1">**</ept> link.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>소비자에 대 한 연결을 만들<ept id="p1">**</ept> 링크 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The UI now displays a drop-down control that lists the consumer connection point display name.</source>
          <target state="translated">UI는 소비자 연결 지점 표시 이름이 나열 하는 드롭다운 목록 컨트롤에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Select the connection point in the drop-down list, and then click <bpt id="p1">**</bpt>Connect<ept id="p1">**</ept> to complete the connection.</source>
          <target state="translated">연결 지점 드롭 다운 목록에서 선택한 다음 클릭 <bpt id="p1">**</bpt>Connect<ept id="p1">**</ept> 연결을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Next, click <bpt id="p1">**</bpt>Disconnect<ept id="p1">**</ept> again.</source>
          <target state="translated">그런 다음 클릭 <bpt id="p1">**</bpt>연결 끊기<ept id="p1">**</ept> 다시 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Click the <bpt id="p1">**</bpt>Dynamic Connection<ept id="p1">**</ept> button to create a connection programmatically.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>동적 연결<ept id="p1">**</ept> 단추를 프로그래밍 방식으로 연결을 만듭니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Use the <bpt id="p1">**</bpt>Display Mode<ept id="p1">**</ept> control to return the page to browse mode.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">**</bpt>디스플레이 모드<ept id="p1">**</ept> 찾아보기 모드로 페이지를 반환 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Click the <bpt id="p1">**</bpt>Connection Point Details<ept id="p1">**</ept> button again, to indicate details about the consumer connection point object once more.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>연결 지점 세부 정보<ept id="p1">**</ept> 단추를 나타내기 위해 다시 세부 정보는 소비자 연결 지점 개체에 대 한 한 번 더 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The example has demonstrated establishing a connection and using a consumer connection point in three ways: a static connection declared in the Web page markup; a connection created in code that used a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object; and a connection created by a user through the connection UI.</source>
          <target state="translated">이 예제에서는 연결을 설정 하 고 소비자 연결 지점을 사용 하 여 세 가지 방법으로 제시: 웹 페이지 태그;에 선언 된 정적 연결 사용 하는 코드에서 만든 연결 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 개체와 연결 UI 통해 사용자가 만든 연결 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The method in the consumer control that returns an interface instance to consumers to establish a connection.</source>
          <target state="translated">연결을 설정하기 위해 소비자에게 인터페이스 인스턴스를 반환하는 소비자 컨트롤의 메서드입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the interface that the consumer receives from a provider.</source>
          <target state="translated">소비자가 공급자로부터 받는 인터페이스의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the consumer control with which the consumer connection point is associated.</source>
          <target state="translated">소비자 연결 지점과 관련된 소비자 컨트롤의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>A friendly display name for the consumer connection point that appears to users in the connection user interface (UI).</source>
          <target state="translated">연결 UI(사용자 인터페이스)에서 사용자에게 표시되는 소비자 연결 지점의 표시 이름입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>A unique identifier for the consumer connection point.</source>
          <target state="translated">소비자 연결 지점의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>A Boolean value indicating whether the consumer connection point can have multiple simultaneous connections with providers.</source>
          <target state="translated">소비자 연결 지점에 공급자와의 연결이 동시에 여러 개 있을 수 있는지 여부를 나타내는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A&gt;</ph> constructor for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class simply calls the base constructor, passing to it the various parameters and initializing the base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A&gt;</ph> 에 대 한 생성자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 클래스는 다양 한 매개 변수를 전달 하 고 기본 클래스를 초기화 하 여 기본 생성자를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</source>
          <target state="translated">기본 클래스 생성자는 연결 지점에 대 한 매개 변수 개수를 확인 하 고 몇 가지 예외를 throw 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>For a list of possible exceptions, see the Exceptions section.</source>
          <target state="translated">가능한 예외 목록은 예외 섹션을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A&gt;</ph> constructor to create your own instance of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A&gt;</ph> 의 고유한 인스턴스를 만드는 생성자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>However, in cases where you are simply establishing a connection and not extending the class, you should call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;</ph> method to return a connection point object from a provider.</source>
          <target state="translated">그러나 단순히 연결을 설정 하 고 클래스를 확장 하지 않는 경우에 호출 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;</ph> 공급자에서 연결 지점 개체를 반환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates how to derive from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class to create a custom provider connection point.</source>
          <target state="translated">파생 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 클래스를 만드는 사용자 지정 공급자 연결 지점입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The code example has three parts:</source>
          <target state="translated">이 코드 예제는 세 부분으로 구성 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>A source file that contains a provider <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control, a consumer <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control, and a custom <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object.</source>
          <target state="translated">공급자를 포함 하는 원본 파일 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 컨트롤, 소비자 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 제어 및 사용자 지정 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>A Web page that hosts the controls in a static connection.</source>
          <target state="translated">정적 연결에서 컨트롤을 호스팅하는 웹 페이지입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>An explanation of how to run the example code.</source>
          <target state="translated">예제 코드를 실행 하는 방법에 대해 설명 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The first part of the code example is the source for the provider and consumer <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls, and a custom <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class, named <ph id="ph3">`TableConsumerConnectionPoint`</ph>.</source>
          <target state="translated">코드 예제에서는 첫 번째 부분은 공급자와 소비자에 대 한 소스 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 컨트롤 및 사용자 지정 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 라는 클래스 <ph id="ph3">`TableConsumerConnectionPoint`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>Note that the constructor of the <ph id="ph1">`TableConsumerConnectionPoint`</ph> class calls the base constructor, passing it the required parameters as indicated in the Parameters section.</source>
          <target state="translated">생성자는 <ph id="ph1">`TableConsumerConnectionPoint`</ph> 클래스에는 매개 변수 섹션에 표시 된 대로 필요한 매개 변수를 전달 하 여 기본 생성자를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>Also note that in the <ph id="ph1">`TableConsumer`</ph> class, the <ph id="ph2">`SetConnectionInterface`</ph> method is specified as the callback method for connections, and the <ph id="ph3">`ConnectionConsumer`</ph> attribute declares the custom <ph id="ph4">`TableConsumerConnectionPoint`</ph> as a parameter.</source>
          <target state="translated">또한는 <ph id="ph1">`TableConsumer`</ph> 클래스는 <ph id="ph2">`SetConnectionInterface`</ph> 메서드가 연결에 대 한 콜백 메서드로 지정 된 및 <ph id="ph3">`ConnectionConsumer`</ph> 특성 선언 사용자 지정 <ph id="ph4">`TableConsumerConnectionPoint`</ph> 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>This demonstrates how to create a custom consumer connection point and then associate it with a consumer control.</source>
          <target state="translated">이 사용자 지정 소비자 연결 지점을 만들고 다음 소비자 컨트롤에 연결 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>This example assumes that the source code is dynamically compiled, so you should place the source code file in an App_Code subfolder of your Web application.</source>
          <target state="translated">이 예에서는 웹 응용 프로그램의 App_Code 하위 폴더에 소스 코드 파일을 배치 해야 하므로 소스 코드가 컴파일되면 동적으로 가정 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The second part of the code example is the Web page that hosts the custom controls in a static Web parts connection.</source>
          <target state="translated">코드 예제에서는 두 번째 부분에는 정적 웹 파트 연결에서 사용자 지정 컨트롤을 호스팅하는 웹 페이지입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>At the top of the page is a <ph id="ph1">`Register`</ph> directive to declare a prefix and the namespace for the custom controls.</source>
          <target state="translated">페이지의 맨 위에는 <ph id="ph1">`Register`</ph> 접두사와 사용자 지정 컨트롤에 대 한 네임 스페이스를 선언 하는 지시문입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The connection is declared by using an <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> element, and the provider and consumer controls are declared within an <ph id="ph2">`&lt;asp:webpartzone&gt;`</ph> element.</source>
          <target state="translated">사용 하 여 연결이 선언 되는 <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> 요소는 공급자 및 소비자 컨트롤 내에 선언 된는 <ph id="ph2">`&lt;asp:webpartzone&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>Load the page in a browser.</source>
          <target state="translated">브라우저에서 페이지를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The connection between the controls already exists, and the consumer displays the data from the provider, because the connection was declared as a static connection in the page.</source>
          <target state="translated">이미 컨트롤 간의 연결 있으며 페이지에서 정적 연결으로 선언 되어 있으므로 소비자는 공급자에서 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="callbackMethod" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackMethod" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="interfaceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="interfaceType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="controlType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="controlType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="displayName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="displayName" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 빈 문자열("")인 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="controlType" /&gt;</ph> is not the same type as the consumer control (or a valid class derived from it).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="controlType" /&gt;</ph>이 소비자 컨트롤 또는 이 컨트롤에서 파생된 유효한 클래스의 형식과 동일하지 않은 경우</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>The consumer control associated with a consumer connection point.</source>
          <target state="translated">소비자 연결 지점과 관련된 소비자 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>The interface instance returned from a provider control.</source>
          <target state="translated">공급자 컨트롤에서 반환된 인터페이스 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>Invokes the callback method in a consumer control and retrieves the interface instance from a provider control.</source>
          <target state="translated">소비자 컨트롤의 콜백 메서드를 호출하고 공급자 컨트롤에서 인터페이스 인스턴스를 검색합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>This method receives an interface instance from a provider that contains data for the consumer control.</source>
          <target state="translated">이 메서드는 소비자 컨트롤에 대 한 데이터를 포함 하는 공급자에서 인터페이스 인스턴스를 받습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt;</ph> method is called by <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph> objects when a connection is being activated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph> 개체는 연결을 활성화 하는 중입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>This is a critical step that is part of initiating a connection and enabling two controls to share data.</source>
          <target state="translated">이 연결을 시작 하 고 두 개의 컨트롤이 데이터를 공유할 수 있도록 포함 된 중요 한 단계입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>The consumer control in a connection must be able to work with the same type of interface as the provider.</source>
          <target state="translated">연결의 소비자 컨트롤 공급자와 같은 유형의 인터페이스 작업할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>If it does not, the controls are incompatible and a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> object must be used to establish a connection.</source>
          <target state="translated">그렇지 않은 경우 컨트롤이 호환 되 고 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> 개체 연결을 설정 하는 데 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source><ph id="ph1">&lt;paramref name="control" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="control" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>The consumer control associated with the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /&gt;</ph>와 관련된 소비자 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /&gt;</ph> of any secondary interfaces that participate in a connection.</source>
          <target state="translated">연결에 사용되는 모든 보조 인터페이스의 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>Determines whether a consumer connection point is currently capable of establishing a connection.</source>
          <target state="translated">소비자 연결 지점에서 현재 연결을 설정할 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a connection point can currently establish a connection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">연결 지점에서 현재 연결을 설정할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph> method as implemented always returns <ph id="ph2">`true`</ph> in all cases for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph> 메서드 구현 항상 반환 <ph id="ph2">`true`</ph> 에 대 한 모든 경우에는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>The intent for this method is to have it check on the state of <ph id="ph1">`control`</ph> and <ph id="ph2">`secondaryInterfaces`</ph> at certain critical points to determine whether a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object is presently able to create a connection.</source>
          <target state="translated">상태를 확인 하 게 하는이 메서드에 대 한 <ph id="ph1">`control`</ph> 및 <ph id="ph2">`secondaryInterfaces`</ph> 확인 하려면 특정 중요 시점에서 여부는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 개체를 현재 연결을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>There can be scenarios where <ph id="ph1">`control`</ph> is in a state that would make it impossible to form a connection, or where <ph id="ph2">`secondaryInterfaces`</ph> must exist before a connection can be formed.</source>
          <target state="translated">시나리오가 있을 수 있습니다 위치 <ph id="ph1">`control`</ph> 있도록 하는 연결을 불가능 한 상태 또는 where <ph id="ph2">`secondaryInterfaces`</ph> 한 연결을 구성할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>In such cases, developers can inherit from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class, and override the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph> method, providing a custom implementation to determine when the connection point is ready to support connections.</source>
          <target state="translated">이 경우 개발자가에서 상속할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> 클래스를 재정의 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph> 연결점 연결을 지원할 준비가 되었는지 확인 하는 사용자 지정 구현을 제공 하는 메서드를 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>