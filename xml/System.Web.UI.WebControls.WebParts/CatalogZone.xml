<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CatalogZone.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55f5707a826eb0e123c3fe221afb6c440fa78435e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f5707a826eb0e123c3fe221afb6c440fa78435e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Serves as the primary control in the Web Parts control set for hosting <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> controls on a Web page.</source>
          <target state="translated">웹 페이지의 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> 컨트롤을 호스트하는 데 웹 파트 컨트롤 집합의 주 컨트롤로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Within the Web Parts control set, a zone is a region on a Web page that contains Web Parts controls.</source>
          <target state="translated">웹 파트 컨트롤 집합 내에서 웹 파트 컨트롤을 포함 하는 웹 페이지의 영역 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>A Web Parts zone is created by a zone control, which is a type of <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CompositeControl&gt;</ph> designed to contain other controls.</source>
          <target state="translated">웹 파트 영역 형식인 영역 컨트롤에 의해 만들어집니다의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.CompositeControl&gt;</ph> 다른 컨트롤을 포함 하도록 디자인 되었습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The primary functions of a zone are to lay out the controls it contains, and to provide a common user interface (UI) for those controls.</source>
          <target state="translated">영역 기본 기능은 포함 된 컨트롤을 배치 하 고 해당 컨트롤에 대 한 공통 사용자 인터페이스 (UI)를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>For general information about zones and how they are used in Web Parts applications, see the base <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebZone&gt;</ph> class, and <bpt id="p1">[</bpt>Web Parts Control Set Overview<ept id="p1">](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668)</ept>.</source>
          <target state="translated">영역 및 웹 파트 응용 프로그램에서 사용 방법에 대 한 일반 정보에 대 한 기본 참조 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebZone&gt;</ph> 클래스 및 <bpt id="p1">[</bpt>웹 파트 컨트롤 집합 개요<ept id="p1">](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>A key feature of Web Parts controls is that they allow end users to modify (or personalize) Web pages according to their preferences, and save their personalized settings for future browser sessions.</source>
          <target state="translated">웹 파트 컨트롤의 주요 기능은 웹 페이지를 수정 (또는 개인 설정)를 최종 사용자가 해당 기본 설정에 따라 허용은 및 이후 브라우저 세션에 대 한 개인된 설정을 저장할입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>One aspect of modifying Web Parts pages includes the ability to add <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls or other server controls to a Web Parts page.</source>
          <target state="translated">웹 파트 페이지를 수정 하는의 한 가지 측면에 추가 하는 기능이 포함 됩니다 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 컨트롤 또는 다른 서버 컨트롤을 웹 파트 페이지.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control provides a list or catalog of controls that users can add to a page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 컨트롤은 목록 또는 사용자가 페이지에 추가할 수 있는 컨트롤의 카탈로그를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control is one of the fundamental controls in the Web Parts control set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 컨트롤은 웹 파트 컨트롤 집합에 있는 기본 컨트롤 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>It derives from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase&gt;</ph> class, and most of its behavior is inherited from that class.</source>
          <target state="translated">파생 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase&gt;</ph> 클래스와 대부분의 동작의 해당 클래스에서 상속 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> class essentially adds to the base class a zone template, which is an implementation of the <ph id="ph2">&lt;xref:System.Web.UI.ITemplate&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 클래스 기본적으로 추가 하는 기본 클래스를 구현 하는 영역 서식 파일의는 <ph id="ph2">&lt;xref:System.Web.UI.ITemplate&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The zone template enables developers to declaratively add <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls to a zone in the page persistence format.</source>
          <target state="translated">영역 템플릿 통해 선언적으로 추가 하는 개발자 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 의 영역 페이지 지 속성 형식에는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> zone can contain only <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls, and conversely, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls can reside only in zones that derive from the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase&gt;</ph> class, such as <ph id="ph5">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 영역만 포함 될 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 컨트롤을 역으로 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 컨트롤에서 파생 되는 영역에만 상주할 수는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase&gt;</ph> 클래스 같은 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control becomes visible only when a user switches a Web page to catalog display mode (<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode&gt;</ph>).</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 제어 전환한 경우에 사용자 웹 페이지 카탈로그 디스플레이 모드에 표시 됩니다 (<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>A catalog can contain several types of <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls.</source>
          <target state="translated">카탈로그에는 몇 가지 유형의 포함 될 수 있습니다 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Each <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> control is a type of container that contains the server controls users can add to the page.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 컨트롤은 사용자가 페이지에 추가할 수 있는 서버 컨트롤을 포함 하는 컨테이너의 형식입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls differ according to where the server controls they contain are coming from.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 컨트롤이 포함 된 서버 컨트롤에서 생성 되는 위치에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The following table summarizes the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls provided with the Web Parts control set and, for each control, what kind of server controls it contains.</source>
          <target state="translated">다음 표에서 요약의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 웹 파트 컨트롤 집합으로, 각 컨트롤에 대 한를 제어 하는 어떤 유형의 서버 포함 된 제공을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Control</source>
          <target state="translated">컨트롤</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Maintains references to controls that have been closed on a page.</source>
          <target state="translated">페이지에서 닫혀 있는 컨트롤에 대 한 참조를 유지 관리 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>These controls can be reopened (added back to the page) by users.</source>
          <target state="translated">이러한 제어는 사용자가 (페이지에 다시 추가할된) 다시 열을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Contains references to controls that are declared in a Web Parts catalog in the markup of a Web page.</source>
          <target state="translated">웹 페이지의 태그는 웹 파트 카탈로그에 선언 된 컨트롤에 대 한 참조를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>These controls can be added to a Web page by users.</source>
          <target state="translated">이러한 컨트롤은 사용자가 웹 페이지에 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Provides the UI for a user to upload a definition file (an XML file with a .WebPart extension and a specified format that contains state information) for a control to a catalog, so that the control can be added to a Web page.</source>
          <target state="translated">사용자 정의 파일을 업로드 하는 UI를 제공 (에서 XML 파일을 한 합니다. 웹 파트 확장 및 포함 된 지정된 된 형식으로 상태 정보)는 카탈로그에 컨트롤에 대 한 웹 페이지에는 컨트롤을 추가할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> class adds only a zone template to the behavior of its base class, it has few members.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 영역 템플릿만 기본 클래스의 동작을 추가 하는 클래스, 몇 명의 멤버에 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A&gt;</ph> constructor is a default constructor; with it, you can initialize a new instance of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A&gt;</ph> 의 새 인스턴스를 초기화할 수 있습니다, 생성자는 기본 생성자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A&gt;</ph> property gets or sets a reference to the <ph id="ph2">&lt;xref:System.Web.UI.ITemplate&gt;</ph> object that contains the controls for the zone.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A&gt;</ph> 속성 대 한 참조를 설정 하거나 가져옵니다는 <ph id="ph2">&lt;xref:System.Web.UI.ITemplate&gt;</ph> 영역에 대 한 컨트롤을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt;</ph> method is critical.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt;</ph> 방법은 중요 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>It overrides the base method to create the collection of all <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls contained within the zone template.</source>
          <target state="translated">모든 컬렉션을 만드는 기본 메서드를 재정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 영역 서식 파일에 포함 된 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The buttons in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> UI require client-side scripting in order to work correctly.</source>
          <target state="translated">에 있는 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> UI 올바르게 작동 하려면 클라이언트 쪽 스크립팅 필요 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>If scripting is disabled in the browser, the user will not be able to perform actions through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> UI.</source>
          <target state="translated">사용자를 통해 작업을 수행할 수는 브라우저에서 스크립팅을 사용 하지 않으면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> UI입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Accessibility</source>
          <target state="translated">액세스 가능성</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The markup rendered by default for this control might not conform to accessibility standards such as the Web Content Accessibility Guidelines 1.0 (WCAG) priority 1 guidelines.</source>
          <target state="translated">이 컨트롤에 대해 기본적으로 렌더링 되는 태그는 웹 콘텐츠 내게 필요한 옵션 지침 1.0 WCAG 우선 순위 1 지침 등의 내게 필요한 옵션 표준 준수 하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>For details about accessibility support for this control, see <bpt id="p1">[</bpt>ASP.NET Controls and Accessibility<ept id="p1">](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)</ept>.</source>
          <target state="translated">이 컨트롤에 대 한 내게 필요한 옵션 지원에 대 한 세부 정보를 참조 하십시오. <bpt id="p1">[</bpt>ASP.NET 컨트롤 및 내게 필요한 옵션<ept id="p1">](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The following code example demonstrates declarative and programmatic use of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 선언적 방법과 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The code example has four parts:</source>
          <target state="translated">이 코드 예제는 4 개의 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>A user control that enables you to change display modes on the Web page.</source>
          <target state="translated">웹 페이지에 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>A file with the source code for a custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control, and a custom <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control that is imported by the catalog and added to the Web page.</source>
          <target state="translated">사용자 지정에 대 한 원본 코드로 파일 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 제어 및 사용자 지정 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 카탈로그에서 가져온 되며 웹 페이지에 추가할 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>A Web page that declares the user control, and the custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control.</source>
          <target state="translated">사용자 정의 컨트롤 및 사용자 지정을 선언 하는 웹 페이지 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>An explanation of how to run the example.</source>
          <target state="translated">예를 실행 하는 방법에 대해 설명 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The first part of this code example is the user control that enables users to change display modes on a Web page.</source>
          <target state="translated">이 코드 예제는 첫 번째 부분에는 사용자가 웹 페이지에 대 한 디스플레이 모드를 변경할 수 있는 사용자 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>For details about display modes and a description of the source code in this control, see <bpt id="p1">[</bpt>Walkthrough: Changing Display Modes on a Web Parts Page<ept id="p1">](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)</ept>.</source>
          <target state="translated">이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 세부 정보를 참조 <bpt id="p1">[</bpt>연습: 웹 파트 페이지에<ept id="p1">](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The second part of the code example contains the code for the custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls.</source>
          <target state="translated">사용자 지정 코드를 포함 하는 코드 예제에서는 두 번째 부분 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The code for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control demonstrates how to inherit from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> class and customize its properties by setting some default property values in the constructor.</source>
          <target state="translated">에 대 한 코드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 컨트롤에서 상속 하는 방법을 보여 줍니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 클래스 및 생성자에서 몇 가지 기본 속성 값을 설정 하 여 해당 속성을 사용자 지정 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The source code also demonstrates how to create a custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> class named <ph id="ph2">`TextDisplayWebPart`</ph>.</source>
          <target state="translated">소스 코드를 사용자 지정을 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 라는 클래스 <ph id="ph2">`TextDisplayWebPart`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>This is the control associated with the .WebPart description file that you will import as part of this code example.</source>
          <target state="translated">이 연결 된 컨트롤의 합니다. 이 코드 예제에서는의 일환으로 가져오려는 웹 파트 설명 파일</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>After you import the description file by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart&gt;</ph> control on the Web page, you'll be able to add the <ph id="ph2">`TextDisplayWebPart`</ph> control to the page, fully pre-configured as specified in the description file.</source>
          <target state="translated">사용 하 여 설명 파일을 가져온 후의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart&gt;</ph> 컨트롤 웹 페이지에서 있습니다 수를 추가할 수는 <ph id="ph2">`TextDisplayWebPart`</ph> 컨트롤을 완벽 하 게 구성 된 지정 된 대로 설명 파일 페이지입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>For the code example to run, you must compile this source code.</source>
          <target state="translated">코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</source>
          <target state="translated">명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</source>
          <target state="translated">또는 여기서 것 동적으로 컴파일되는 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>This code example uses dynamic compilation, so if you want to run the example this way, name the source code file and add it to an App_Code subfolder of your Web application's root directory.</source>
          <target state="translated">이 코드 예제에서는 동적 컴파일, 이런 방식이으로 예제를 실행 하려면 소스 코드 파일 이름과 웹 응용 프로그램의 루트 디렉터리의 App_Code 하위 폴더에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>For a walkthrough that demonstrates both methods of compiling, see <bpt id="p1">[</bpt>Walkthrough: Developing and Using a Custom Web Server Control<ept id="p1">](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)</ept>.</source>
          <target state="translated">두 컴파일 방법을 보여 주는 연습을 참조 <bpt id="p1">[</bpt>연습: 개발 및 사용자 지정 웹 서버 컨트롤을 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The third part of the code example is the Web page that contains the controls.</source>
          <target state="translated">코드 예제에서는 세 번째 부분에는 컨트롤이 포함 된 웹 페이지입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>It contains a <ph id="ph1">`Register`</ph> directive for the user control, and another for the source file with the custom controls.</source>
          <target state="translated">포함 된 한 <ph id="ph1">`Register`</ph> 사용자 정의 컨트롤 및 사용자 정의 컨트롤을 사용 하 여 소스 파일에 대 한 다른에 대 한 지시문입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Note that in the second directive, it does not name the assembly, because the example does not use an assembly, it uses dynamic compilation with the source code placed in the App_Code subfolder.</source>
          <target state="translated">두 번째 지시문에 이름을 지정 하지 않습니다는 어셈블리 참고 예제에서는 어셈블리를 사용 하지 않는 App_Code 하위 폴더에 배치 하는 소스 코드와 동적 컴파일 사용 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The Web page declares a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZone&gt;</ph> control, and within its child <ph id="ph2">`&lt;zonetemplate&gt;`</ph> element, it declares a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BulletedList&gt;</ph> control.</source>
          <target state="translated">웹 페이지를 선언는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZone&gt;</ph> 컨트롤 및 해당 자식 내 <ph id="ph2">`&lt;zonetemplate&gt;`</ph> 선언 요소는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BulletedList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>While this is a standard ASP.NET control, it will have full Web Parts functionality at run time, because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager&gt;</ph> control wraps any server control placed in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZone&gt;</ph> with a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> object, so that other server controls can participate in Web Parts applications.</source>
          <target state="translated">표준 ASP.NET 컨트롤 상태인 동안은 완전 한 웹 파트 기능 런타임 시 때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager&gt;</ph> 서버 컨트롤에 배치 래핑하고 제어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZone&gt;</ph> 와 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> 개체, 다른 서버 컨트롤은 웹에 참여할 수 있도록 부분 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Also declared in this zone is the custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control named <ph id="ph2">`TextDisplayWebPart`</ph>.</source>
          <target state="translated">사용자 지정에는이 영역에도 선언 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 라는 컨트롤 <ph id="ph2">`TextDisplayWebPart`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Notice that this control has an attribute of <ph id="ph1">`ExportMode="All"`</ph> declared on it.</source>
          <target state="translated">이 컨트롤의 특성을 갖고 있음을 알게 <ph id="ph1">`ExportMode="All"`</ph> 선언 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>This enables you to export a .WebPart description file that contains the property values of the control, which can be imported by other users to add the pre-configured control to other Web pages.</source>
          <target state="translated">이렇게 하면 내보낼 수는 있습니다. 다른 사용자가 다른 웹 페이지에 미리 구성 된 컨트롤을 추가 하 여 가져올 수 있는 컨트롤의 속성 값이 포함 된 웹 파트 설명 파일</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>To enable users of a Web Parts application to export a description file for <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls, you must also enable the export feature in the Web application by adding an <ph id="ph2">`enableExport="true"`</ph> attribute to the <ph id="ph3">`&lt;webParts&gt;`</ph> element (which is a child of the <ph id="ph4">`&lt;system.web&gt;`</ph> element) in the Web.config file.</source>
          <target state="translated">설명 파일을 내보낼 웹 파트 응용 프로그램의 사용자가 사용할 수 있도록 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 컨트롤에도 추가 하 여 웹 응용 프로그램에서 내보내기 기능을 활성화 해야는 <ph id="ph2">`enableExport="true"`</ph> 특성을 <ph id="ph3">`&lt;webParts&gt;`</ph> 요소 (의 의자식인<ph id="ph4">`&lt;system.web&gt;`</ph>요소)의 Web.config 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Export is disabled by default, so if you not yet enabled export for your application, edit the Web.config file and do it now.</source>
          <target state="translated">내보내기는 기본적으로 비활성화 되어, 응용 프로그램에 대 한 내보내기 아직 설정한 경우 Web.config 파일을 편집한 지금 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The Web page also declares the custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control and, within it, a <ph id="ph2">`&lt;zonetemplate&gt;`</ph> element that contains an <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart&gt;</ph> control.</source>
          <target state="translated">웹 페이지 사용자 지정 선언 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 제어 및 그 안에 <ph id="ph2">`&lt;zonetemplate&gt;`</ph> 요소를 포함 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The user will use this control at run time to import the .WebPart description file for the custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
          <target state="translated">사용자가 사용할이 컨트롤에서 런타임에 가져오려면는 합니다. 사용자 지정 웹 파트 설명 파일 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Now run the code example.</source>
          <target state="translated">이제이 코드 예제를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Load the Web page in a browser.</source>
          <target state="translated">브라우저에서 웹 페이지를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The first step is to export a .WebPart description file for the <ph id="ph1">`TextDisplayWebPart`</ph> control.</source>
          <target state="translated">첫 번째 단계는 내보내기는 합니다. 에 대 한 웹 파트 설명 파일은 <ph id="ph1">`TextDisplayWebPart`</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Click the verbs menu on the custom control (represented by the downward arrow in the title bar), and click <bpt id="p1">**</bpt>Export<ept id="p1">**</ept>.</source>
          <target state="translated">동사 메뉴 사용자 지정 컨트롤 (제목 표시줄의 아래쪽 화살표로 표시 됨)를 클릭 하 고 클릭 <bpt id="p1">**</bpt>내보내기<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Follow the instructions to save a description file for the control.</source>
          <target state="translated">컨트롤에 대 한 설명 파일을 저장 하는 지침을 따릅니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Open the .WebPart description file in an editor, and edit the value of the title property text.</source>
          <target state="translated">열기는 합니다. 웹 파트 설명 편집기, 파일 및 제목 속성 텍스트의 값을 편집 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Find the <ph id="ph1">`&lt;property&gt;`</ph> element that has the attribute <ph id="ph2">`name="Title"`</ph>, and edit the title text that is contained between the opening and closing <ph id="ph3">`&lt;property&gt;`</ph> tags.</source>
          <target state="translated">찾을 <ph id="ph1">`&lt;property&gt;`</ph> 요소는 특성이 있는 <ph id="ph2">`name="Title"`</ph>, 열기 및 닫기 사이 포함 되는 제목 텍스트를 편집 하 고 <ph id="ph3">`&lt;property&gt;`</ph> 태그입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Now close the Web page, and edit the page source in an editor.</source>
          <target state="translated">이제 웹 페이지를 닫고 편집기에서 페이지 소스를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Delete the <ph id="ph1">`&lt;aspSample:TextDisplayWebPart&gt;`</ph> control declaration element, then save and close the file.</source>
          <target state="translated">삭제 된 <ph id="ph1">`&lt;aspSample:TextDisplayWebPart&gt;`</ph> 컨트롤 선언 요소를 저장 하 고 파일을 닫습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Load the Web page again in a browser.</source>
          <target state="translated">브라우저에서 다시 웹 페이지를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The <ph id="ph1">`TextDisplayWebPart`</ph> control should not appear, because you removed it.</source>
          <target state="translated"><ph id="ph1">`TextDisplayWebPart`</ph> 컨트롤 나타나지 않고 제거 했기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Use the <bpt id="p1">**</bpt>Display Mode<ept id="p1">**</ept> drop-down list control and select <bpt id="p2">**</bpt>Catalog<ept id="p2">**</ept> to switch the page to catalog mode.</source>
          <target state="translated">사용 하 여는 <bpt id="p1">**</bpt>디스플레이 모드<ept id="p1">**</ept> 드롭 다운 목록 컨트롤 및 선택 <bpt id="p2">**</bpt>카탈로그<ept id="p2">**</ept> 페이지 카탈로그 모드로 전환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Notice that the custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control appears, along with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart&gt;</ph> control.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 나타납니다와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Click the <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> button to locate the .WebPart description file that you exported for the <ph id="ph1">`TextDisplayWebPart`</ph> control.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>찾아보기<ept id="p1">**</ept> 를 찾습니다는 합니다. 웹 파트 설명 파일에 대 한 내보낸는 <ph id="ph1">`TextDisplayWebPart`</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>You can click <bpt id="p1">**</bpt>Upload<ept id="p1">**</ept>, select the check box next to the imported control, and click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> to add it to the page.</source>
          <target state="translated">클릭할 수 있는 <bpt id="p1">**</bpt>업로드<ept id="p1">**</ept>, 가져온된 컨트롤 옆의 확인란을 선택 하 고 클릭 <bpt id="p2">**</bpt>추가<ept id="p2">**</ept> 페이지에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Click <bpt id="p1">**</bpt>Close Catalog<ept id="p1">**</ept> to return the page to normal browse mode.</source>
          <target state="translated">클릭 <bpt id="p1">**</bpt>닫기 카탈로그<ept id="p1">**</ept> 페이지 표준 찾아보기 모드로 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>The imported control should now appear in the page, and the title that appears in the title bar of the control should be the title text you added to the .WebPart description file.</source>
          <target state="translated">가져온된 컨트롤이 이제 페이지에 표시 하 고 컨트롤의 제목 표시줄에 나타나는 제목을 제목 텍스트에 추가 해야 합니다.는 합니다. 웹 파트 설명 파일입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>for operating in a hosted environment.</source>
          <target state="translated">호스팅된 환경에서 작업하는 데 필요한 권한입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>; Permission value: <ph id="ph2">&lt;see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>, 권한 값: <ph id="ph2">&lt;see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>You can create custom <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> classes if you want more control over the rendering and behavior of the catalog UI.</source>
          <target state="translated">사용자 지정을 만들 수 있습니다 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> 렌더링 및 카탈로그 UI의 동작을 통해 더 많은 제어 하려는 경우 클래스입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>If you do not need to provide users of your control with the ability to add <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> controls declaratively, then you can inherit directly from the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /&gt;</ph> class.</source>
          <target state="translated">컨트롤 사용자가 추가 하는 기능에 제공 하려면 필요 하지 않은 경우 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> 컨트롤에서 직접 상속할 수을 선언적으로 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>If you do want to enable controls to be added declaratively, the simples approach is to inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> class, because it provides the essential zone template.</source>
          <target state="translated">상속 하는 간단한 방법은 선언적으로 추가할 컨트롤을 사용할 수 있도록 않으려면는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> 필요한 영역 템플릿을 제공 하기 때문에 클래스입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.CatalogZone">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /&gt;</ph> method and use the method to add custom <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> controls to a <ph id="ph4">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /&gt;</ph>, if you want greater programmatic control over adding custom <ph id="ph5">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> controls to your zone.</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> 클래스를 재정의할 수 있습니다는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /&gt;</ph> 메서드 및 사용자 지정 메서드를 사용 하 여 <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> 컨트롤을 <ph id="ph4">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /&gt;</ph>큰 프로그래밍 방식으로 제어 하려는 추가 사용자 지정 하는 경우, <ph id="ph5">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> 을 영역 컨트롤 .</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control implements a zone template, it is usually used declaratively and you will seldom need to create a new instance of the class using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 컨트롤은 영역 템플릿을 구현 하 고 선언적으로 사용 일반적으로 사용 하 여 클래스의 새 인스턴스를 만들어야 할 경우는 거의 없습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor">
          <source>However, if you inherit from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> class to create a custom zone, you might wish to use the constructor to initialize some of its property values and customize its appearance.</source>
          <target state="translated">그러나에서 상속 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 클래스 사용자 지정 영역을 만들려면 생성자를 사용 하는 일부 속성 값을 초기화 하 고 해당 모양을 사용자 지정을 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor">
          <source>The following code example demonstrates the programmatic use of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A&gt;</ph> constructor in a custom <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 프로그래밍 방식으로 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A&gt;</ph> 사용자 지정에서 생성자 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor">
          <source>The constructor is used to initialize some default property values for the control.</source>
          <target state="translated">컨트롤에 대 한 몇 가지 기본 속성 값을 초기화 하는 생성자 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor">
          <source>The following code shows the custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> class with the constructor declared near the top.</source>
          <target state="translated">다음 코드에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 위쪽에 선언 된 생성자를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor">
          <source>For the full code and instructions required to set up and run the example, see the Example section in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> class overview.</source>
          <target state="translated">전체 코드와를 설정 하 고 예제를 실행 하는 데 필요한 지침의 예제 단원을 참조는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
          <source>Creates an instance of each <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> type that is declared in the zone.</source>
          <target state="translated">영역에 선언된 각 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> 형식의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /&gt;</ph> with references to all the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> controls in the zone.</source>
          <target state="translated">영역의 모든 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /&gt;</ph> 컨트롤에 대한 참조가 있는 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt;</ph> method is a critical method because when a user switches a page to catalog display mode, this method creates all the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls that make up the Web Parts catalog.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt;</ph> 사용자 페이지 카탈로그 디스플레이 모드를 전환 되는 경우이 방법을 통해 모든 때문 메서드는 중요 한 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 웹 파트 카탈로그 구성 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt;</ph> method in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> class provided with the Web Parts control set can create any server control that inherits from the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt;</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 클래스와 웹 파트 컨트롤 집합에서 상속 되는 모든 서버 컨트롤을 만들 수는 제공 된 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
          <source>So, if you create a custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> control and declare it on a page within a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> control, this method will create your control when a user switches the page to catalog mode.</source>
          <target state="translated">따라서 사용자 정의 만들 경우 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 제어 하 고 페이지 내에 선언는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 컨트롤, 사용자 페이지 카탈로그 모드로 전환이 메서드가 컨트롤을 만들 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
          <source>However, for various reasons you might want control over the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt;</ph> method.</source>
          <target state="translated">그러나 여러 가지 이유로 제어 원할 수도 있습니다를 통해는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
          <source>You might want it to create only certain <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls.</source>
          <target state="translated">특정 것이 좋습니다 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
          <source>For example, suppose you create a set of custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls that have a consistent appearance and belong to a single product or organization.</source>
          <target state="translated">예를 들어, 사용자 지정 집합을 만들 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 일관 된 모양을 갖도록 하 고 단일 제품 또는 조직에 속해 있는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
          <source>If you want page developers to be limited to using those custom controls in a catalog, then you should inherit from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> class, override the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt;</ph> method, and allow the method to create only controls of the same type as your custom controls.</source>
          <target state="translated">페이지 개발자가 카탈로그에 사용자 지정 컨트롤을 사용 하도록 제한 될 수를 원하는 경우에서 상속 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone&gt;</ph> 클래스, 재정의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A&gt;</ph> 메서드를 하 고 메서드를 사용자 지정 컨트롤과 같은 형식의 컨트롤만 허용 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> control does not have an ID.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> 컨트롤에 ID가 없는 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate">
          <source>Gets or sets a template to contain child controls within a <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> control in page persistence format.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> 컨트롤 내의 자식 컨트롤을 페이지에 일관된 형식으로 포함할 템플릿을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.ITemplate" /&gt;</ph> that acts as a container for child controls in the zone.</source>
          <target state="translated">영역에서 자식 컨트롤의 컨테이너 역할을 하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.ITemplate" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A&gt;</ph> property references a template of type <ph id="ph2">&lt;xref:System.Web.UI.ITemplate&gt;</ph> that is used to contain the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls in the zone.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A&gt;</ph> 유형의 서식 파일을 참조 하는 속성 <ph id="ph2">&lt;xref:System.Web.UI.ITemplate&gt;</ph> 포함 하는 데 사용 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 영역에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate">
          <source>The zone template enables page developers to declare the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls they want to use in persistence format, rather than having to create all the controls programmatically.</source>
          <target state="translated">영역 템플릿을 사용 하면 페이지 개발자를 선언에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 모든 컨트롤을 프로그래밍 방식으로 만들 필요 하지 않고 일관 된 형식에서 사용할 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate">
          <source>The set accessor for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A&gt;</ph> property calls the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A&gt;</ph> method, which forces the collection of <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> controls that are declared in the zone template on the page to be refreshed.</source>
          <target state="translated">에 대 한 set 접근자는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A&gt;</ph> 속성 호출의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A&gt;</ph> 의 컬렉션을 강제로 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.CatalogPart&gt;</ph> 페이지를 새로 고칠 수 영역 서식 파일에 선언 된 컨트롤에 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate">
          <source>This ensures that the collection of controls referenced by the zone remains current whenever a user changes the controls actually declared within the template on the page.</source>
          <target state="translated">이렇게 하면 컬렉션 영역 내에서 참조 되는 컨트롤의 사용자 페이지에는 템플릿 내에서 선언 된 실제로 컨트롤 변경 될 때마다 현재 상태로 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate">
          <source>If you want to create a custom <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> zone, but you plan to create the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> controls programmatically rather than allowing page developers to declare them, you do not need zone template support, and you can inherit directly from the <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /&gt;</ph> class.</source>
          <target state="translated">사용자 지정을 만들려고 할 경우 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /&gt;</ph> 만들려고 계획 하는 영역을 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /&gt;</ph> 페이지 개발자가 선언 수를 허용 하면 수행 하지 영역 필요 템플릿 지원에서 직접 상속 하지 않고 프로그래밍 방식으로 컨트롤의 <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /&gt;</ph> 클래스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>