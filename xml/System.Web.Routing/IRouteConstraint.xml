<Type Name="IRouteConstraint" FullName="System.Web.Routing.IRouteConstraint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fc11f7bf6bb163c7505b93715678c4b0f81d654" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37544943" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRouteConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRouteConstraint" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.IRouteConstraint" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRouteConstraint" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRouteConstraint" />
  <TypeSignature Language="F#" Value="type IRouteConstraint = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>URL 매개 변수 값이 제약 조건에 대해 유효한지 여부를 확인하기 위해 클래스가 구현해야 하는 계약을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문자열 또는 개체를 구현 하는 제약 조건을 나타내야 합니다 경로 정의를 URL 매개 변수의 제약 조건에 포함 하는 경우는 <xref:System.Web.Routing.IRouteConstraint> 인터페이스입니다. 제약 조건을 문자열인 경우 정규식으로 처리 됩니다. 구현 하는 클래스를 만들면 <xref:System.Web.Routing.IRouteConstraint> 정규식으로 쉽게 유효성 검사 논리를 나타낼 수 없는 경우. 유효성 검사 논리를 추가 합니다 <xref:System.Web.Routing.IRouteConstraint.Match%2A> 메서드.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.Web.HttpContextBase httpContext, class System.Web.Routing.Route route, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::Web::HttpContextBase ^ httpContext, System::Web::Routing::Route ^ route, System::String ^ parameterName, System::Web::Routing::RouteValueDictionary ^ values, System::Web::Routing::RouteDirection routeDirection);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.Web.HttpContextBase * System.Web.Routing.Route * string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteDirection -&gt; bool" Usage="iRouteConstraint.Match (httpContext, route, parameterName, values, routeDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="route" Type="System.Web.Routing.Route" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</param>
        <param name="route">이 제약 조건이 속해 있는 개체입니다.</param>
        <param name="parameterName">검사되는 매개 변수의 이름입니다.</param>
        <param name="values">URL에 대한 매개 변수를 포함하는 개체입니다.</param>
        <param name="routeDirection">들어오는 요청이 처리될 때 또는 URL이 생성될 때 제약 조건 검사가 수행될지 여부를 나타내는 개체입니다.</param>
        <summary>URL 매개 변수가 이 제약 조건에 유효한 값을 포함하는지 여부를 확인합니다.</summary>
        <returns>URL 매개 변수에 유효한 값이 들어 있는 경우 <see langword="true" />이고 그렇지 않은 경우 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.Routing.IRouteConstraint.Match%2A> 제약 조건의 유효성 검사 논리를 추가 하는 방법입니다. 이 메서드는 들어오는 요청을 처리 하 고 URL이 생성 하는 경우 라우팅 프레임 워크에서 호출 됩니다. 검사 하 여 현재 시나리오를 확인할 수 있습니다는 `routeDirection` 매개 변수입니다.  
  
 요청을 처리할 때 라우팅 프레임 워크 패턴 및 들어오는 요청의 값을 경로 제약 조건을 확인 하 고 패턴 일치 하는지 여부를 결정 합니다. URL이 생성 라우팅 프레임 워크 값 때 제공 된 여부를 결정 합니다 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> 메서드는 경로 제약 조건 및 패턴 일치 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>