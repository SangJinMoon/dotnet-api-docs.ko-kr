<Type Name="RouteCollection" FullName="System.Web.Routing.RouteCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7a56076e84a4a4a1b8779b51e10321651f3424f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39850631" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RouteCollection : System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.RouteCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteCollection&#xA;Inherits Collection(Of RouteBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteCollection : System::Collections::ObjectModel::Collection&lt;System::Web::Routing::RouteBase ^&gt;" />
  <TypeSignature Language="F#" Value="type RouteCollection = class&#xA;    inherit Collection&lt;RouteBase&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Web.Routing.RouteBase</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ef4aa-101">ASP.NET 라우팅에 대한 경로 컬렉션을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef4aa-101">Provides a collection of routes for ASP.NET routing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-102">합니다 <xref:System.Web.Routing.RouteCollection> 클래스에서 파생 된 개체의 컬렉션을 관리할 수 있도록 하는 메서드를 제공 합니다 <xref:System.Web.Routing.RouteBase> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-102">The <xref:System.Web.Routing.RouteCollection> class provides methods that enable you to manage a collection of objects that derive from the <xref:System.Web.Routing.RouteBase> class.</span></span>  
  
 <span data-ttu-id="ef4aa-103">일반적으로 사용 됩니다는 `static` <xref:System.Web.Routing.RouteTable.Routes%2A> 의 속성을 <xref:System.Web.Routing.RouteTable> 검색할 클래스를 <xref:System.Web.Routing.RouteCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-103">Typically, you will use the `static`<xref:System.Web.Routing.RouteTable.Routes%2A> property of the <xref:System.Web.Routing.RouteTable> class to retrieve a <xref:System.Web.Routing.RouteCollection> object.</span></span> <span data-ttu-id="ef4aa-104"><xref:System.Web.Routing.RouteTable.Routes%2A> 속성은 ASP.NET 응용 프로그램에 대 한 모든 경로 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-104">The <xref:System.Web.Routing.RouteTable.Routes%2A> property stores all the routes for an ASP.NET application.</span></span> <span data-ttu-id="ef4aa-105">ASP.NET 라우팅에 경로를 반복 합니다 <xref:System.Web.Routing.RouteTable.Routes%2A> URL과 일치 하는 경로 찾을 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-105">ASP.NET routing iterates through the routes in the <xref:System.Web.Routing.RouteTable.Routes%2A> property to find the route that matches a URL.</span></span>  
  
 <span data-ttu-id="ef4aa-106">URL 생성을 호출 하는 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> 메서드 및 값의 컬렉션을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-106">To construct a URL, you call the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method and pass in a collection of values.</span></span> <span data-ttu-id="ef4aa-107">합니다 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> 메서드를 전달 하 고 반환 값과 일치 하는 매개 변수를 사용 하 여 첫 번째 경로 찾습니다는 <xref:System.Web.Routing.VirtualPathData> 일치 하는 경로 대 한 정보가 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-107">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method finds the first route with parameters that match the values that you passed in, and returns a <xref:System.Web.Routing.VirtualPathData> object that contains information about the matching route.</span></span> <span data-ttu-id="ef4aa-108">통해 URL을 검색 합니다 <xref:System.Web.Routing.VirtualPathData.VirtualPath%2A> 의 속성을 <xref:System.Web.Routing.VirtualPathData> 개체.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-108">You retrieve the URL through the <xref:System.Web.Routing.VirtualPathData.VirtualPath%2A> property of the <xref:System.Web.Routing.VirtualPathData> object.</span></span>  
  
 <span data-ttu-id="ef4aa-109">이름 또는 이름 없이 경로 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-109">You can add a route either with a name or without a name.</span></span> <span data-ttu-id="ef4aa-110">이름을 포함 한 Url 생성 될 때 비슷한 경로 간을 구분할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-110">Including a name enables you to distinguish between similar routes when URLs are constructed.</span></span> <span data-ttu-id="ef4aa-111">이름을 지정 하지 않는 경우 컬렉션의 첫 번째 일치 하는 경로 사용 하 여 URL을 생성 하려면 ASP.NET 라우팅입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-111">If you do not specify a name, ASP.NET routing uses the first matching route in the collection to construct a URL.</span></span>  
  
 <span data-ttu-id="ef4aa-112">에 명명 되지 않은 경로 추가 하는 경우는 <xref:System.Web.Routing.RouteCollection> 개체를 컬렉션에 이미 있는 경로 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-112">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span> <span data-ttu-id="ef4aa-113">명명된 된 경로 추가 하면 이미 컬렉션에 경로 식별 하는 이름을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-113">When you add a named route, you cannot use a name that already identifies a route in the collection.</span></span>  
  
 <span data-ttu-id="ef4aa-114">사용 된 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 메서드 및 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 다른 프로세스에서 충돌 없이 컬렉션과 상호 작용 해야 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-114">You use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 <span data-ttu-id="ef4aa-115">경로 컬렉션에 대 한 경로 추가 하는 방법에 대 한 자세한 내용은 참조 하세요. [ASP.NET 라우팅에서](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-115">For more information about how to add a route to a route collection, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-116">
            <see cref="T:System.Web.Routing.RouteCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-116">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-117">
            <see cref="T:System.Web.Routing.RouteCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-117">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection (System.Web.Hosting.VirtualPathProvider virtualPathProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Hosting.VirtualPathProvider virtualPathProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor(System.Web.Hosting.VirtualPathProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection(System::Web::Hosting::VirtualPathProvider ^ virtualPathProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.RouteCollection : System.Web.Hosting.VirtualPathProvider -&gt; System.Web.Routing.RouteCollection" Usage="new System.Web.Routing.RouteCollection virtualPathProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPathProvider" Type="System.Web.Hosting.VirtualPathProvider" />
      </Parameters>
      <Docs>
        <param name="virtualPathProvider">
          <span data-ttu-id="ef4aa-118">가상 파일 시스템에서 리소스를 검색하기 위한 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-118">A provider for retrieving resources from a virtual file system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-119">지정된 가상 경로 공급자를 사용하여 <see cref="T:System.Web.Routing.RouteCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-119">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class by using the specified virtual path provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Add(System.String,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.Add : string * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.Add (name, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ef4aa-120">경로를 식별하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-120">The value that identifies the route.</span>
          </span>
          <span data-ttu-id="ef4aa-121">값이 <see langword="null" /> 또는 빈 문자열일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-121">The value can be <see langword="null" /> or an empty string.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ef4aa-122">컬렉션 끝에 추가할 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-122">The route to add to the end of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-123">
            <see cref="T:System.Web.Routing.RouteCollection" /> 개체의 끝에 경로를 추가하고 경로에 지정된 이름을 할당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-123">Adds a route to the end of the <see cref="T:System.Web.Routing.RouteCollection" /> object and assigns the specified name to the route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-124"><xref:System.Web.Routing.RouteCollection.Add%2A> 메서드를 사용 하면 경로 컬렉션에 추가할 때 경로 대 한 이름을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-124">The <xref:System.Web.Routing.RouteCollection.Add%2A> method enables you to define a name for a route when you add it to the route collection.</span></span> <span data-ttu-id="ef4aa-125">경로 대 한 이름, 정의 하 여 라우팅을 사용 하 여 URL을 생성할 때 사용할 특정 경로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-125">By defining a name for the route, you can specify a particular route to use when you use routing to construct a URL.</span></span> <span data-ttu-id="ef4aa-126">특정 경로 지정 하는 둘 이상의 경로 전달 하는 값과 일치 하는 경우 중요 합니다 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-126">Specifying a particular route is important when more than one route matches the values that you pass to the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method.</span></span> <span data-ttu-id="ef4aa-127">명명된 된 경로 지정 하지 않으면 하는 경우 ASP.NET 라우팅에서 값과 일치 하는 컬렉션의 첫 번째 경로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-127">If you do not specify a named route, ASP.NET routing will use the first route in the collection that matches the values.</span></span> <span data-ttu-id="ef4aa-128">자세한 내용은 [방법: 경로에서 Url 생성](http://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650)합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-128">For more information, see [How to: Construct URLs from Routes](http://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650).</span></span>  
  
 <span data-ttu-id="ef4aa-129">이름에 한 번만 사용할 수는 <xref:System.Web.Routing.RouteCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-129">A name can be used only one time in the <xref:System.Web.Routing.RouteCollection> object.</span></span>  
  
 <span data-ttu-id="ef4aa-130">경로 대 한 이름을 지정 해야 하는 경우 호출 하 여 경로 추가할 수 있습니다는 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-130">If you do not have to specify a name for the route, you can add the route by calling the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method.</span></span>  
  
 <span data-ttu-id="ef4aa-131">사용 된 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 메서드 및 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 다른 프로세스에서 충돌 없이 컬렉션과 상호 작용 해야 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-131">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-132">다음 예제에 대 한 경로 추가 하는 방법을 보여 줍니다는 <xref:System.Web.Routing.RouteCollection> 개체 및 경로에 이름을 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-132">The following example shows how to add a route to a <xref:System.Web.Routing.RouteCollection> object and assign a name to the route.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#1)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef4aa-133">
            <paramref name="item" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-133">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ef4aa-134">
            <paramref name="name" />이 이미 컬렉션에서 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-134">
              <paramref name="name" /> is already used in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public bool AppendTrailingSlash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendTrailingSlash { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AppendTrailingSlash : bool with get, set" Usage="System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-135">가상 경로가 정규화된 경우 후행 슬래시를 추가하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-135">Gets or sets a value that indicates whether trailing slashes are added when virtual paths are normalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef4aa-136">후행 슬래시를 추가하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-136">
              <see langword="true" /> if trailing slashes are added; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ef4aa-137">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-137">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="routeCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-138">
            <see cref="T:System.Web.Routing.RouteCollection" /> 개체에서 요소를 모두 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-138">Removes all the elements from the <see cref="T:System.Web.Routing.RouteCollection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-139">사용 된 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 메서드 및 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 다른 프로세스에서 충돌 없이 컬렉션과 상호 작용 해야 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-139">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReadLock">
      <MemberSignature Language="C#" Value="public IDisposable GetReadLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetReadLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetReadLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetReadLock();" />
      <MemberSignature Language="F#" Value="member this.GetReadLock : unit -&gt; IDisposable" Usage="routeCollection.GetReadLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-140">컬렉션에서 개체를 검색할 때 스레드 보안을 관리하기 위한 개체를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-140">Provides an object for managing thread safety when you retrieve an object from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4aa-141">스레드 보안을 관리하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-141">An object that manages thread safety.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-142"><xref:System.Web.Routing.RouteCollection> 개체가 응용 프로그램에서 여러 프로세스에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-142">The <xref:System.Web.Routing.RouteCollection> object is available to multiple processes in the application.</span></span> <span data-ttu-id="ef4aa-143">따라서 응용 프로그램이 실행 되는 경로 검색 해야 하는 경우 사용 된 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 스레드로부터 안전을 보장 하기 위해 메서드.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-143">Therefore, if you have to retrieve a route when the application is running, use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method in order to guarantee thread safety.</span></span> <span data-ttu-id="ef4aa-144">경로 컬렉션에 대 한 읽기 잠금을 가져와서 수 있도록 하는 동안 키 값을 검색할 컬렉션 수정 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-144">By obtaining a read lock on the route collection, you make sure that the collection will not be modified while you are trying to retrieve it.</span></span>  
  
 <span data-ttu-id="ef4aa-145"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 메서드는 잠금을 수행할 수 있을 때까지 계속에서 스레드를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-145">The <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method stops the thread from continuing until the lock can be acquired.</span></span> <span data-ttu-id="ef4aa-146">쓰기 잠금을 배치한 경우 업데이트가 완료 되 고 쓰기 잠금이 해제 될 때까지 스레드가 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-146">If a write lock is in place, the thread waits until the update is completed and the write lock is released.</span></span> <span data-ttu-id="ef4aa-147">경로 컬렉션에 읽기 잠금이 해제 될 때를 <xref:System.IDisposable> 이 메서드에서 반환 되는 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-147">The read lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>  
  
 <span data-ttu-id="ef4aa-148">사용 하지 않는 경우 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>를 읽는 동안 오류가 발생할 수도 있습니다는 <xref:System.Web.Routing.RouteCollection> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-148">If you do not use <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>, you might get an error while you are reading through the <xref:System.Web.Routing.RouteCollection> collection.</span></span> <span data-ttu-id="ef4aa-149">예를 들어, 개체를 반복 합니다 <xref:System.Web.Routing.RouteCollection> 문서를 읽고, 호출 하지 않고 컬렉션 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-149">For example, suppose you loop through the objects in the <xref:System.Web.Routing.RouteCollection> collection to read them, without calling <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span> <span data-ttu-id="ef4aa-150">다른 스레드가 다른 요청에서 호출할 수 있는 수행 하는 동안 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 경로 컬렉션에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-150">While you are doing that, another thread from another request might call <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> and add a route to the collection.</span></span> <span data-ttu-id="ef4aa-151">첫 번째 스레드가 오류로 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-151">The first thread will then fail with an error.</span></span>  
  
 <span data-ttu-id="ef4aa-152">두 가지 시나리오는 필요가 없습니다 호출 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>:</span><span class="sxs-lookup"><span data-stu-id="ef4aa-152">There are two scenarios in which you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>:</span></span>  
  
-   <span data-ttu-id="ef4aa-153">public 메서드를 <xref:System.Web.Routing.RouteCollection> 와 같은 클래스 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> 하 고 <xref:System.Web.Routing.RouteCollection.GetRouteData%2A> 호출 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 내부적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-153">Public methods of the <xref:System.Web.Routing.RouteCollection> class such as <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> and <xref:System.Web.Routing.RouteCollection.GetRouteData%2A> call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> internally.</span></span> <span data-ttu-id="ef4aa-154">따라서 명시적으로 호출할 필요가 없습니다 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 의 공용 메서드를 호출 하는 경우는 <xref:System.Web.Routing.RouteCollection> 컬렉션에서 데이터를 검색 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-154">Therefore, you do not have to explicitly call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> when you call a public method of the <xref:System.Web.Routing.RouteCollection> class to retrieve data from the collection.</span></span>  
  
-   <span data-ttu-id="ef4aa-155">응용 프로그램 시작 되 고 아직을 처리 하지 않은 요청을 등의 경우는 `Application_Start` 이벤트 처리기만 하나의 스레드만 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-155">When the application is starting and is not yet processing requests, such as in the `Application_Start` event handler, only one thread is running.</span></span> <span data-ttu-id="ef4aa-156">읽는 동안 컬렉션을 업데이트 해야 할 수 있는 다른 스레드가 이기 때문에 호출할 필요가 없습니다 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-156">Because there are no other threads that might update the collection while you are reading it, you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-157">다음 예제에서는 사용 하는 방법의 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 메서드 응용 프로그램이 실행 되는 경로 검색 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-157">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method when you retrieve a route while the application is running.</span></span> <span data-ttu-id="ef4aa-158">합니다 `Using` 문을 사용 하면를 읽을 때 컬렉션에서 (코드가 정상적으로 완료 되거나 예외가 throw 됩니다) 여부는 런타임 시 한 상황과 관계 없이 잠금을 안전 하 게 해제 됩니다 끝에 `Using` 코드 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-158">The `Using` statement ensures that no matter what happens at run time when you read from the collection (whether the code completes normally or an exception is thrown) the lock will be safely released at the end of the `Using` code block.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="member this.GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="routeCollection.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">
          <span data-ttu-id="ef4aa-159">HTTP 요청에 대한 정보를 캡슐화하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-159">An object that encapsulates information about the HTTP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-160">지정된 값과 일치하는 컬렉션의 경로에 관한 정보를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-160">Returns information about the route in the collection that matches the specified values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4aa-161">경로 정의의 값이 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-161">An object that contains the values from the route definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef4aa-162">
            <paramref name="context" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-162">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ef4aa-163">
            <paramref name="context" /> 매개 변수에서 개체의 <see cref="P:System.Web.HttpContextBase.Request" /> 속성이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-163">The <see cref="P:System.Web.HttpContextBase.Request" /> property of the object in the <paramref name="context" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetVirtualPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-164">경로와 연결되는 URL 경로에 대한 정보를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-164">Returns information about the URL path that is associated with the route.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="ef4aa-165">요청된 경로에 대한 정보를 캡슐화하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-165">An object that encapsulates information about the requested route.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="ef4aa-166">경로에 대한 매개 변수를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-166">An object that contains the parameters for a route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-167">지정된 컨텍스트 및 매개 변수 값을 기준으로 경로와 연결된 URL 경로에 대한 정보를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-167">Returns information about the URL path that is associated with the route, given the specified context and parameter values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4aa-168">경로와 연결된 URL 경로에 대한 정보를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-168">An object that contains information about the URL path that is associated with the route.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, string name, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, string name, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::String ^ name, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="ef4aa-169">요청된 경로에 대한 정보를 캡슐화하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-169">An object that encapsulates information about the requested route.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="ef4aa-170">URL 경로에 대한 정보를 검색할 때 사용할 경로의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-170">The name of the route to use when information about the URL path is retrieved.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="ef4aa-171">경로에 대한 매개 변수를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-171">An object that contains the parameters for a route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-172">지정된 컨텍스트, 경로 이름 및 매개 변수 값을 기반으로 하여 명명된 경로와 연결된 URL 경로에 대한 정보를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-172">Returns information about the URL path that is associated with the named route, given the specified context, route name, and parameter values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4aa-173">경로와 연결된 URL 경로에 대한 정보를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-173">An object that contains information about the URL path that is associated with the route.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ef4aa-174">
            <paramref name="name" /> 매개 변수에 지정된 이름을 갖는 경로를 찾을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-174">No route could be found that has the name specified in the <paramref name="name" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWriteLock">
      <MemberSignature Language="C#" Value="public IDisposable GetWriteLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetWriteLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetWriteLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWriteLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetWriteLock();" />
      <MemberSignature Language="F#" Value="member this.GetWriteLock : unit -&gt; IDisposable" Usage="routeCollection.GetWriteLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-175">컬렉션에서 요소를 추가하거나 제거할 때 스레드 보안을 관리하기 위한 개체를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-175">Provides an object for managing thread safety when you add or remove elements in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4aa-176">스레드 보안을 관리하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-176">An object that manages thread safety.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-177">ASP.NET 응용 프로그램에서 경로 정의 하는 것에 대 한 권장 되는 방법에 대 한 경로 추가 하는 것을 <xref:System.Web.Routing.RouteTable.Routes%2A> 속성에 대 한 이벤트 처리기에서는 `Application_Start` Global.asax 파일에는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-177">The recommended approach for defining routes in an ASP.NET application is to add the routes to the <xref:System.Web.Routing.RouteTable.Routes%2A> property in an event handler for the `Application_Start` event in the Global.asax file.</span></span> <span data-ttu-id="ef4aa-178">자세한 내용은 <xref:System.Web.Routing.RouteCollection>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-178">For more information, see <xref:System.Web.Routing.RouteCollection>.</span></span>  
  
 <span data-ttu-id="ef4aa-179">사용 하는 응용 프로그램이 실행 중일 때 경로 추가 해야 할 경우는 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 스레드로부터 안전을 보장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-179">If you have to add a route when the application is running, you use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to guarantee thread safety.</span></span> <span data-ttu-id="ef4aa-180">경로 컬렉션에 쓰기 잠금이 해제 될 때를 <xref:System.IDisposable> 이 메서드에서 반환 되는 개체를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-180">The write lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-181">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 메서드 응용 프로그램이 실행 되는 동안 경로 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-181">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method when you add a route while the application is running.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ignore">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-182">경로에 대해 일치 여부를 확인하지 않아야 하는 URL 패턴을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-182">Defines a URL pattern that should not be checked for matches against routes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-183">이 메서드가 만드는 경로에 매핑되는 <xref:System.Web.Routing.StopRoutingHandler> 경로 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-183">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="ef4aa-184">이 메서드를 호출한 후 지정된 된 URL 패턴과 일치 하는 요청 경로 요청으로 처리 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-184">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="ef4aa-185">ASP.NET 라우팅에서 URL 이미지 파일과 같은 실제 파일과 일치 하는 경우 요청 자동으로 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-185">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="ef4aa-186">경우에 따라 수도 있습니다 라우팅 물리적 파일이 있는 경우 요청을 무시 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-186">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="ef4aa-187">예를 들어 ASP.NET.axd 파일에 대 한 자동으로 수행 하는 요청을 처리 되어서는 안 경로 요청으로.axd 파일 이름 확장명에 해당 하는 실제 파일이 없는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-187">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string -&gt; unit" Usage="routeCollection.Ignore url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="ef4aa-188">무시할 URL 패턴입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-188">The URL pattern to be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-189">경로에 대해 일치 여부를 확인하지 않아야 하는 URL 패턴을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-189">Defines a URL pattern that should not be checked for matches against routes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-190">이 메서드가 만드는 경로에 매핑되는 <xref:System.Web.Routing.StopRoutingHandler> 경로 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-190">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="ef4aa-191">이 메서드를 호출한 후 지정된 된 URL 패턴과 일치 하는 요청 경로 요청으로 처리 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-191">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="ef4aa-192">ASP.NET 라우팅에서 URL 이미지 파일과 같은 실제 파일과 일치 하는 경우 요청 자동으로 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-192">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="ef4aa-193">경우에 따라 수도 있습니다 라우팅 물리적 파일이 있는 경우 요청을 무시 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-193">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="ef4aa-194">예를 들어 ASP.NET.axd 파일에 대 한 자동으로 수행 하는 요청을 처리 되어서는 안 경로 요청으로.axd 파일 이름 확장명에 해당 하는 실제 파일이 없는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-194">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-195">다음 예제에서와 같이, 라우팅에서.axd 파일을 제외 하려면이 메서드를 사용 하는 MVC 프로젝트에 대 한 기본 템플릿:</span><span class="sxs-lookup"><span data-stu-id="ef4aa-195">The default template for MVC projects uses this method to exclude .axd files from routing, as shown in the following example:</span></span>  
  
 [!code-csharp[MvcDefaultApp#2](~/samples/snippets/csharp/VS_Snippets_WebNet/mvcdefaultapp/cs/global.asax.cs#2)]
 [!code-vb[MvcDefaultApp#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/mvcdefaultapp/vb/global.asax.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url, object constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url, object constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String, constraints As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url, System::Object ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string * obj -&gt; unit" Usage="routeCollection.Ignore (url, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="constraints" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="ef4aa-196">무시할 URL 패턴입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-196">The URL pattern to be ignored.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="ef4aa-197">URL 패턴과 일치하는 요청을 무시할지 여부를 결정하는 추가 조건입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-197">Additional criteria that determine whether a request that matches the URL pattern will be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-198">요청 URL이 지정된 제약 조건을 충족하는 경우 경로에 대한 일치 여부를 확인하지 않아야 하는 URL 패턴을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-198">Defines a URL pattern that should not be checked for matches against routes if a request URL meets the specified constraints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-199">이 메서드가 만드는 경로에 매핑되는 <xref:System.Web.Routing.StopRoutingHandler> 경로 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-199">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="ef4aa-200">이 메서드를 호출한 후 지정된 된 URL 패턴과 일치 하는 요청 경로 요청으로 처리 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-200">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="ef4aa-201">ASP.NET 라우팅에서 URL 이미지 파일과 같은 실제 파일과 일치 하는 경우 요청 자동으로 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-201">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="ef4aa-202">경우에 따라 수도 있습니다 라우팅 물리적 파일이 있는 경우 요청을 무시 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-202">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="ef4aa-203">예를 들어 ASP.NET.axd 파일에 대 한 자동으로 수행 하는 요청을 처리 되어서는 안 경로 요청으로.axd 파일 이름 확장명에 해당 하는 실제 파일이 없는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-203">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-204">다음 예제에서는.aspx 확장명을 가진 모든 Url을 무시 하려면이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-204">The following example shows how to use this method to ignore all URLs that have an .aspx extension.</span></span> <span data-ttu-id="ef4aa-205">".Aspx" 확장명을 가진 파일에 대 한 모든 Url을 처리 하는 사용자 지정 HTTP 처리기를 등록 하는 경우이 작업을 수행 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-205">You might want to do this if you register a custom HTTP handler to handle all URLs for files that have the extension ".aspx".</span></span> <span data-ttu-id="ef4aa-206">단일 URL 패턴과 일치 하는 모든.aspx 요청 해야 catchall 두 개의 매개 변수 같은 `{*path}.aspx/{*pathinfo}`합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-206">A single URL pattern that would match all .aspx requests would require two catchall parameters such as `{*path}.aspx/{*pathinfo}`.</span></span> <span data-ttu-id="ef4aa-207">(이 패턴은 일치.aspx, 쿼리 문자열 매개 변수를 포함 하 여로 끝나는 모든 URL입니다.) 그러나 라우팅 끝 catchall 매개 변수는 하나만 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-207">(This pattern would match any URL that ends in .aspx, including those that have query-string parameters.) However, routing allows only one catchall parameter at the end.</span></span> <span data-ttu-id="ef4aa-208">대신 모든 Url과 일치 하는 포괄적인 단일 매개 변수가 있는 URL 패턴을 지정 하 고 다음 예와에서 같이.aspx 확장 되지 않은 것을 제외 하는 제약 조건을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-208">As an alternative, you can specify a URL pattern that has a single catchall parameter that matches all URLs and then specify constraints that exclude everything that does not have the .aspx extension, as shown in the following example:</span></span>  
  
```vb  
routes.Ignore("{*allaspx}", new With {.allaspx = ".*\.aspx(/.*)?"})  
```  
  
```csharp  
routes.Ignore("{*allaspx}", new {allaspx=@".*\.aspx(/.*)?"});  
```  
  
 <span data-ttu-id="ef4aa-209">일반적으로 이전 코드 줄에서 호출 되는 메서드를에 추가 되는 `Application_Start` global.asax에 대 한 예제와 같이 메서드를 <xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-209">The previous line of code would typically be added to a method that is called from the `Application_Start` method in the Global.asax, as shown in the example for the <xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef4aa-210">
            <paramref name="url" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-210">The <paramref name="url" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.InsertItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ef4aa-211">
            <c>item</c>을 삽입할 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-211">The zero-based index at which <c>item</c> is inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ef4aa-212">삽입할 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-212">The route to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-213">지정한 인덱스에 있는 <see cref="T:System.Web.Routing.RouteCollection" /> 개체에 지정된 경로를 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-213">Inserts the specified route into the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-214">에 명명 되지 않은 경로 추가 하는 경우는 <xref:System.Web.Routing.RouteCollection> 개체를 컬렉션에 이미 있는 경로 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-214">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>  
  
 <span data-ttu-id="ef4aa-215">사용 된 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 메서드 및 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 다른 프로세스에서 충돌 없이 컬렉션과 상호 작용 해야 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-215">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef4aa-216">
            <paramref name="item" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-216">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ef4aa-217">
            <paramref name="item" />이 컬렉션에 이미 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-217">
              <paramref name="item" /> is already in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteBase this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteBase Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As RouteBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteBase ^ default[System::String ^] { System::Web::Routing::RouteBase ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.Routing.RouteBase" Usage="System.Web.Routing.RouteCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ef4aa-218">가져올 경로를 식별하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-218">The value that identifies the route to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-219">컬렉션에서 지정된 이름을 가진 경로를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-219">Gets the route in the collection that has the specified name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef4aa-220">지정된 이름을 가진 개체 또는 <paramref name="name" />이 <see langword="null" />이거나 빈 문자열이거나 컬렉션의 경로와 일치하지 않을 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-220">An object that has the specified name, or <see langword="null" /> if <paramref name="name" /> is <see langword="null" />, is an empty string, or does not match any route in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-221">사용 된 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 메서드 및 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 다른 프로세스에서 충돌 없이 컬렉션과 상호 작용 해야 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-221">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowercaseUrls">
      <MemberSignature Language="C#" Value="public bool LowercaseUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LowercaseUrls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property LowercaseUrls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LowercaseUrls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LowercaseUrls : bool with get, set" Usage="System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-222">가상 경로가 정규화된 경우 URL이 소문자로 변환되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-222">Gets or sets a value that indicates whether URLs are converted to lower case when virtual paths are normalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef4aa-223">URL을 소문자로 변환하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-223">
              <see langword="true" /> to convert URLs to lower case; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ef4aa-224">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-224">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-225">URL에 쿼리 문자열은 포함 하는 경우 URL의 해당 부분을 소문자로 변환 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-225">If a query string is included in the URL, that part of the URL is not converted to lower case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPageRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-226">Web Forms 응용 프로그램의 경로를 정의하는 방법을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-226">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-227">이 메서드는 코딩 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-227">This method is provided for coding convenience.</span></span> <span data-ttu-id="ef4aa-228">호출 하는 것과 같습니다 합니다 <xref:System.Web.Routing.RouteCollection.Add%2A> 메서드와 전달을 <xref:System.Web.Routing.Route> 사용 하 여 만든 개체는 <xref:System.Web.Routing.PageRouteHandler> 클래스.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-228">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-229">다음 예제에서는이 메서드를 사용 하는 Web Forms 응용 프로그램에 대 한 경로 정의 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-229">The following example shows how to define routes for a Web Forms application by using this method.</span></span> <span data-ttu-id="ef4aa-230">이 예제에서는 명명 된 메서드를 보여 줍니다 `RegisterRoutes` 에서 호출 되는 `Application_Start` Global.asax 파일에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-230">The example shows a method named `RegisterRoutes` that is called from `Application_Start` in the Global.asax file.</span></span> <span data-ttu-id="ef4aa-231">메서드 오버 로드 각각 사용 하 여 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 응용 프로그램에는 경로 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-231">The method uses each overload of <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> to add a route to the application.</span></span> <span data-ttu-id="ef4aa-232">Web Forms 응용 프로그램에 대 한 경로 정의 하는 방법에 대 한 자세한 내용은 참조 하세요. [방법: Web Forms 응용 프로그램에 대 한 경로 정의](http://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678)합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-232">For more information about how to define routes for Web Forms applications, see [How to: Define Routes for Web Forms Applications](http://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678).</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#122)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="ef4aa-233">경로의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-233">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="ef4aa-234">경로에 대한 URL 패턴입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-234">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="ef4aa-235">경로의 실제 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-235">The physical URL for the route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-236">Web Forms 응용 프로그램의 경로를 정의하는 방법을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-236">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4aa-237">경로 컬렉션에 추가되는 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-237">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-238">이 메서드는 코딩 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-238">This method is provided for coding convenience.</span></span> <span data-ttu-id="ef4aa-239">호출 하는 것과 같습니다 합니다 <xref:System.Web.Routing.RouteCollection.Add%2A> 메서드와 전달을 <xref:System.Web.Routing.Route> 사용 하 여 만든 개체는 <xref:System.Web.Routing.PageRouteHandler> 클래스.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-239">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-240">다음 예제에서는이 메서드를 사용 하 여 경로 정의 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-240">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="ef4aa-241">첫 번째 문에서 이름이 없는 경로 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-241">The first statement defines a route that does not have a name.</span></span> <span data-ttu-id="ef4aa-242">두 번째 문은 명명된 된 경로 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-242">The second statement defines a named route.</span></span> <span data-ttu-id="ef4aa-243">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 메서드 개요.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-243">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#140)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#140)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="ef4aa-244">경로의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-244">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="ef4aa-245">경로에 대한 URL 패턴입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-245">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="ef4aa-246">경로의 실제 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-246">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="ef4aa-247">ASP.NET에서 사용자가 실제 URL에 액세스할 수 있는 권한을 가지고 있는지를 확인해야 할지(경로 URL이 항상 검사되는지) 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-247">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="ef4aa-248">이 매개 변수는 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 속성을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-248">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-249">Web Forms 응용 프로그램의 경로를 정의하는 방법을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-249">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4aa-250">경로 컬렉션에 추가되는 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-250">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-251">이 메서드는 코딩 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-251">This method is provided for coding convenience.</span></span> <span data-ttu-id="ef4aa-252">호출 하는 것과 같습니다 합니다 <xref:System.Web.Routing.RouteCollection.Add%2A> 메서드와 전달을 <xref:System.Web.Routing.Route> 사용 하 여 만든 개체는 <xref:System.Web.Routing.PageRouteHandler> 클래스.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-252">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-253">다음 예제에서는이 메서드를 사용 하 여 경로 정의 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-253">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="ef4aa-254">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 메서드 개요.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-254">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#145)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="ef4aa-255">경로의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-255">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="ef4aa-256">경로에 대한 URL 패턴입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-256">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="ef4aa-257">경로의 실제 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-257">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="ef4aa-258">ASP.NET에서 사용자가 실제 URL에 액세스할 수 있는 권한을 가지고 있는지를 확인해야 할지(경로 URL이 항상 검사되는지) 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-258">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="ef4aa-259">이 매개 변수는 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 속성을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-259">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="ef4aa-260">경로 매개 변수의 기본값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-260">Default values for the route parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-261">Web Forms 응용 프로그램의 경로를 정의하는 방법을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-261">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4aa-262">경로 컬렉션에 추가되는 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-262">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-263">이 메서드는 코딩 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-263">This method is provided for coding convenience.</span></span> <span data-ttu-id="ef4aa-264">호출 하는 것과 같습니다 합니다 <xref:System.Web.Routing.RouteCollection.Add%2A> 메서드와 전달을 <xref:System.Web.Routing.Route> 사용 하 여 만든 개체는 <xref:System.Web.Routing.PageRouteHandler> 클래스.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-264">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-265">다음 예제에서는이 메서드를 사용 하 여 경로 정의 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-265">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="ef4aa-266">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 메서드 개요.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-266">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#150)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="ef4aa-267">경로의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-267">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="ef4aa-268">경로에 대한 URL 패턴입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-268">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="ef4aa-269">경로의 실제 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-269">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="ef4aa-270">ASP.NET에서 사용자가 실제 URL에 액세스할 수 있는 권한을 가지고 있는지를 확인해야 할지(경로 URL이 항상 검사되는지) 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-270">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="ef4aa-271">이 매개 변수는 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 속성을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-271">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="ef4aa-272">경로의 기본값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-272">Default values for the route.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="ef4aa-273">URL 요청이 이 경로로 처리되기 위해 충족해야 할 제약 조건입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-273">Constraints that a URL request must meet in order to be processed as this route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-274">Web Forms 응용 프로그램의 경로를 정의하는 방법을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-274">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4aa-275">경로 컬렉션에 추가되는 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-275">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-276">이 메서드는 코딩 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-276">This method is provided for coding convenience.</span></span> <span data-ttu-id="ef4aa-277">호출 하는 것과 같습니다 합니다 <xref:System.Web.Routing.RouteCollection.Add%2A> 메서드와 전달을 <xref:System.Web.Routing.Route> 사용 하 여 만든 개체는 <xref:System.Web.Routing.PageRouteHandler> 클래스.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-277">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-278">다음 예제에서는이 메서드를 사용 하 여 경로 정의 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-278">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="ef4aa-279">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 메서드 개요.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-279">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#155)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints, dataTokens)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="ef4aa-280">경로의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-280">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="ef4aa-281">경로에 대한 URL 패턴입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-281">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="ef4aa-282">경로의 실제 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-282">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="ef4aa-283">ASP.NET에서 사용자가 실제 URL에 액세스할 수 있는 권한을 가지고 있는지를 확인해야 할지(경로 URL이 항상 검사되는지) 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-283">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="ef4aa-284">이 매개 변수는 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 속성을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-284">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="ef4aa-285">경로 매개 변수의 기본값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-285">Default values for the route parameters.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="ef4aa-286">URL 요청이 이 경로로 처리되기 위해 충족해야 할 제약 조건입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-286">Constraints that a URL request must meet in order to be processed as this route.</span>
          </span>
        </param>
        <param name="dataTokens">
          <span data-ttu-id="ef4aa-287">경로와 연결되지만 경로가 URL 패턴과 일치하는지 여부를 결정하는 데 사용되지 않는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-287">Values that are associated with the route that are not used to determine whether a route matches a URL pattern.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-288">Web Forms 응용 프로그램의 경로를 정의하는 방법을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-288">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef4aa-289">경로 컬렉션에 추가되는 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-289">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-290">이 메서드는 코딩 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-290">This method is provided for coding convenience.</span></span> <span data-ttu-id="ef4aa-291">호출 하는 것과 같습니다 합니다 <xref:System.Web.Routing.RouteCollection.Add%2A> 메서드와 전달을 <xref:System.Web.Routing.Route> 사용 하 여 만든 개체는 <xref:System.Web.Routing.PageRouteHandler> 클래스.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-291">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef4aa-292">다음 예제에서는이 메서드를 사용 하 여 경로 정의 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-292">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="ef4aa-293">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 메서드 개요.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-293">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#160)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#160)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef4aa-294">
            <paramref name="routeUrl" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-294">The <paramref name="routeUrl" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="routeCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ef4aa-295">제거할 경로의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-295">The zero-based index of the route to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-296">지정한 인덱스에 있는 <see cref="T:System.Web.Routing.RouteCollection" /> 개체에서 경로를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-296">Removes the route from the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-297">사용 된 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 메서드 및 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 다른 프로세스에서 충돌 없이 컬렉션과 상호 작용 해야 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-297">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteExistingFiles">
      <MemberSignature Language="C#" Value="public bool RouteExistingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RouteExistingFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteExistingFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RouteExistingFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RouteExistingFiles : bool with get, set" Usage="System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef4aa-298">ASP.NET 라우팅에서 기존 파일과 일치하는 URL을 처리할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-298">Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef4aa-299">기존 파일과 일치하는 요청을 비롯한 모든 요청을 ASP.NET 라우팅이 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-299">
              <see langword="true" /> if ASP.NET routing handles all requests, even those that match an existing file; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ef4aa-300">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-300">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-301">이 값을 동적으로 변경할 수 있습니다, 있지만 ASP.NET 라우팅 통합을 사용 하는 경우 서비스 활성화 된 이후의 모든 변경 사항은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-301">Although this value can be changed dynamically, any change made after a service has been activated will be ignored when using ASP.NET routing integration.</span></span> <span data-ttu-id="ef4aa-302">자세한 내용은 [ASP.NET 라우팅 통합](http://go.microsoft.com/fwlink/?LinkId=195235)합니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-302">For more information, see [ASP.NET Routing Integration](http://go.microsoft.com/fwlink/?LinkId=195235).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.SetItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ef4aa-303">바꿀 경로의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-303">The zero-based index of the route to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ef4aa-304">지정된 인덱스에 추가할 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-304">The route to add at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef4aa-305">지정한 인덱스에 있는 경로를 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-305">Replaces the route at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef4aa-306">에 명명 되지 않은 경로 추가 하는 경우는 <xref:System.Web.Routing.RouteCollection> 개체를 컬렉션에 이미 있는 경로 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-306">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>  
  
 <span data-ttu-id="ef4aa-307">사용 된 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 메서드 및 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 다른 프로세스에서 충돌 없이 컬렉션과 상호 작용 해야 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ef4aa-307">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ef4aa-308">
            <paramref name="item" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-308">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ef4aa-309">
            <paramref name="item" />이 컬렉션에 이미 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef4aa-309">
              <paramref name="item" /> is already in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>