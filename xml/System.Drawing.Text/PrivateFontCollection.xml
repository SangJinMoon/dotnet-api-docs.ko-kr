<Type Name="PrivateFontCollection" FullName="System.Drawing.Text.PrivateFontCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="107f4fb30d480cde9c795b7a79e26457d2b33e34" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36339541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PrivateFontCollection : System.Drawing.Text.FontCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PrivateFontCollection extends System.Drawing.Text.FontCollection" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Text.PrivateFontCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrivateFontCollection&#xA;Inherits FontCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrivateFontCollection sealed : System::Drawing::Text::FontCollection" />
  <TypeSignature Language="F#" Value="type PrivateFontCollection = class&#xA;    inherit FontCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Text.FontCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>클라이언트 응용 프로그램에서 제공하는 글꼴 파일로부터 만들어진 글꼴 패밀리의 컬렉션을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Text.PrivateFontCollection> 클래스를 사용 하면 응용 프로그램의 글꼴을 시스템 버전을 대체 하지 않고도 기존 글꼴 개인 버전을 설치 합니다. 예를 들어 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] Arial 글꼴 외에 시스템에서 사용 하는 전용 버전을 만들 수 있습니다. <xref:System.Drawing.Text.PrivateFontCollection> 글꼴을 설치할 수 존재 하지 않는 운영 체제에서 사용할 수도 있습니다. 이 설치 된 시스템 컬렉션에는 영향을 주지 않는 임시 글꼴 설치 합니다. 설치 된 컬렉션을 보려면 사용은 <xref:System.Drawing.Text.InstalledFontCollection> 클래스입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrivateFontCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Text.PrivateFontCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrivateFontCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Text.PrivateFontCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFontFile">
      <MemberSignature Language="C#" Value="public void AddFontFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFontFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFontFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFontFile(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.AddFontFile : string -&gt; unit" Usage="privateFontCollection.AddFontFile filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">추가할 글꼴의 파일 이름이 포함된 <see cref="T:System.String" />입니다.</param>
        <summary>지정된 파일의 글꼴을 이 <see cref="T:System.Drawing.Text.PrivateFontCollection" />에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Forms 응용 프로그램 트루타입 글꼴을 지원 하 고 제한 된 OpenType 글꼴에 대 한 지원을 제공 합니다. 지원 되지 않는 OpenType 글꼴 또는 비트맵 글꼴 등 지원 되지 않는 글꼴을 사용 하려고 하면 예외가 발생 합니다. <xref:System.Drawing.Text.PrivateFontCollection.AddFontFile%2A> 하기 전에 운영 체제에서 지원 되지 않습니다 [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]합니다. 개인 글꼴 하기 전에 운영 체제에서 사용 하는 경우 [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)], Microsoft Sans Serif 일반적으로 기본 글꼴로 대체 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">지정한 글꼴이 지원되지 않거나 글꼴 파일을 찾을 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMemoryFont">
      <MemberSignature Language="C#" Value="public void AddMemoryFont (IntPtr memory, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMemoryFont(native int memory, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMemoryFont (memory As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMemoryFont(IntPtr memory, int length);" />
      <MemberSignature Language="F#" Value="member this.AddMemoryFont : nativeint * int -&gt; unit" Usage="privateFontCollection.AddMemoryFont (memory, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="memory">추가할 글꼴의 메모리 주소입니다.</param>
        <param name="length">추가할 글꼴의 메모리 길이입니다.</param>
        <summary>시스템 메모리에 포함된 글꼴을 이 <see cref="T:System.Drawing.Text.PrivateFontCollection" />에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메모리 글꼴을 사용 하려면 GDI + 컨트롤에서 텍스트를 렌더링 합니다. 사용 하 여는 <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> 전달 메서드 `true`, 컨트롤의 설정 하 여 개별 컨트롤 또는 응용 프로그램에서 GDI + 렌더링을 설정 하려면 <xref:System.Windows.Forms.GroupBox.UseCompatibleTextRendering%2A> 속성을 `true`합니다. 일부 컨트롤은 GDI +로 렌더링할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Text.PrivateFontCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="privateFontCollection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>