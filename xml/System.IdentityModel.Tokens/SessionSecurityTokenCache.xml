<Type Name="SessionSecurityTokenCache" FullName="System.IdentityModel.Tokens.SessionSecurityTokenCache">
  <TypeSignature Language="C#" Value="public abstract class SessionSecurityTokenCache : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionSecurityTokenCache extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionSecurityTokenCache&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenCache abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7fc1e-101">세션 보안 토큰의 캐시에 대한 추상 클래스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-101">Defines an abstract class for a cache of session security tokens.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionSecurityTokenCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionSecurityTokenCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fc1e-102"><see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-102">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public abstract void AddOrUpdate (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key, System.IdentityModel.Tokens.SessionSecurityToken value, DateTime expiryTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOrUpdate(class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key, class System.IdentityModel.Tokens.SessionSecurityToken value, valuetype System.DateTime expiryTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddOrUpdate (key As SessionSecurityTokenCacheKey, value As SessionSecurityToken, expiryTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddOrUpdate(System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ key, System::IdentityModel::Tokens::SessionSecurityToken ^ value, DateTime expiryTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
        <Parameter Name="value" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="expiryTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7fc1e-103">추가하거나 업데이트할 엔트리의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-103">The key of the entry to be added or updated.</span></span></param>
        <param name="value"><span data-ttu-id="7fc1e-104">엔트리와 연결된 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-104">The token associated with the entry.</span></span></param>
        <param name="expiryTime"><span data-ttu-id="7fc1e-105">항목의 만료 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-105">The expiration time of the entry.</span></span></param>
        <summary><span data-ttu-id="7fc1e-106">파생된 클래스에서 재정의된 경우 캐시에 항목을 추가하거나 기존 항목을 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-106">When overridden in a derived class, attempts to add an entry to the cache or update an existing one.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract System.IdentityModel.Tokens.SessionSecurityToken Get (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SessionSecurityToken Get(class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As SessionSecurityTokenCacheKey) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IdentityModel::Tokens::SessionSecurityToken ^ Get(System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7fc1e-107">검색할 엔트리의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-107">The key of the entry to retrieve.</span></span></param>
        <summary><span data-ttu-id="7fc1e-108">파생 클래스에서 재정의된 경우 캐시에서 항목을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-108">When overridden in a derived class, attempts to retrieve an entry from the cache.</span></span></summary>
        <returns><span data-ttu-id="7fc1e-109">키와 연결된 세션 토큰이거나, 일치하는 항목이 없을 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-109">The session token associated with the key or <see langword="null" />, if no match is found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SessionSecurityToken&gt; GetAll (string endpointId, System.Xml.UniqueId contextId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.SessionSecurityToken&gt; GetAll(string endpointId, class System.Xml.UniqueId contextId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAll (endpointId As String, contextId As UniqueId) As IEnumerable(Of SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Tokens::SessionSecurityToken ^&gt; ^ GetAll(System::String ^ endpointId, System::Xml::UniqueId ^ contextId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SessionSecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="endpointId"><span data-ttu-id="7fc1e-110">검색할 끝점 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-110">The endpoint ID to search for.</span></span></param>
        <param name="contextId"><span data-ttu-id="7fc1e-111">검색할 컨텍스트 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-111">The context ID to search for.</span></span></param>
        <summary><span data-ttu-id="7fc1e-112">파생 클래스에서 재정의된 경우 키와 관련된 모든 토큰을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-112">When overridden in a derived class, retrieves all of the tokens associated with a key.</span></span></summary>
        <returns><span data-ttu-id="7fc1e-113">키에 연결된 세션 토큰의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-113">The collection of session tokens associated with the key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="7fc1e-114">사용자 지정 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-114">The custom configuration elements.</span></span></param>
        <summary><span data-ttu-id="7fc1e-115">파생 클래스에서 재정의되는 경우 XML에서 사용자 지정 구성을 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-115">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc1e-116">기본적으로이 메서드에서 throw 된 <xref:System.NotImplementedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-116">By default, this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract void Remove (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Remove (key As SessionSecurityTokenCacheKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Remove(System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7fc1e-117">제거할 엔트리의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-117">The key of the entry to remove.</span></span></param>
        <summary><span data-ttu-id="7fc1e-118">파생 클래스에서 구현된 경우 캐시에서 엔트리를 제거하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-118">When implemented in a derived class, attempts to remove an entry from the cache.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAll">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7fc1e-119">파생된 클래스에서 구현된 경우 지정된 식별자와 연결된 모든 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-119">When implemented in a derived class, attempts to remove all of the entries associated with the specified identifiers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public abstract void RemoveAll (string endpointId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll(string endpointId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAll (endpointId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAll(System::String ^ endpointId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpointId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpointId"><span data-ttu-id="7fc1e-120">항목을 제거하는 끝점 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-120">The endpoint ID for which to remove entries.</span></span></param>
        <summary><span data-ttu-id="7fc1e-121">파생된 클래스에서 구현된 경우 캐시에서 일치하는 끝점 ID가 있는 모든 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-121">When implemented in a derived class, attempts to remove all entries with a matching endpoint ID from the cache.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public abstract void RemoveAll (string endpointId, System.Xml.UniqueId contextId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll(string endpointId, class System.Xml.UniqueId contextId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAll (endpointId As String, contextId As UniqueId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAll(System::String ^ endpointId, System::Xml::UniqueId ^ contextId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="endpointId"><span data-ttu-id="7fc1e-122">항목을 제거하는 끝점 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-122">The endpoint ID for which to remove entries.</span></span></param>
        <param name="contextId"><span data-ttu-id="7fc1e-123">항목을 제거하는 컨텍스트 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-123">The context ID for which to remove entries.</span></span></param>
        <summary><span data-ttu-id="7fc1e-124">파생된 클래스에서 구현된 경우 캐시에서 일치하는 항목을 모두 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="7fc1e-124">When implemented in a derived class, attempts to remove all matching entries from the cache.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>