<Type Name="SymmetricProofDescriptor" FullName="System.IdentityModel.Tokens.SymmetricProofDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1c59de58aca5132f1ac6c5f1170b1301d120e78" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36480061" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymmetricProofDescriptor : System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymmetricProofDescriptor extends System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class SymmetricProofDescriptor&#xA;Inherits ProofDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricProofDescriptor : System::IdentityModel::Tokens::ProofDescriptor" />
  <TypeSignature Language="F#" Value="type SymmetricProofDescriptor = class&#xA;    inherit ProofDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.ProofDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="31b32-101">이 클래스는 동기 키 기반 토큰을 발급하는 데 사용할 수 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="31b32-101">This class can be used for issuing the symmetric key based token.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31b32-102">
            <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-102">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor targetWrappingCredentials" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="31b32-103">사용할 <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-103">The <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b32-104">지정된 암호화 자격 증명을 사용하여 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified encrypting credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b32-105">사용 하 여 지정 된 STS를 하려는 경우이 생성자를 사용 하 여 <xref:System.IdentityModel.Tokens.EncryptingCredentials>입니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-105">Use this constructor if you want the STS to use the specified <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (byte[] key, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte(), targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(cli::array &lt;System::Byte&gt; ^ key, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : byte[] * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (key, targetWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="31b32-106">발급된 토큰 내부에 사용되는 대칭 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-106">The symmetric key that is used inside the issued token.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="31b32-107">신뢰 당사자에 대한 키 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-107">The key encrypting credentials for the relying party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b32-108">지정된 키 자료를 사용하여 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified key material.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b32-109">지정된 된 키 바이트를 사용 하 여 STS를 하려는 경우이 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-109">Use this constructor if you want the STS to use the specified key bytes.</span></span> <span data-ttu-id="31b32-110">이 클라이언트는 엔트로피를 전송 하 고 STS만 사용 하는 발급된 된 토큰에 대 한 키로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-110">This happens when client sends the entropy, and the STS would just use that as the key for the issued token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31b32-111">
            <paramref name="key" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-111">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="31b32-112">대칭 키의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-112">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="31b32-113">요청 대상에 대한 키 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-113">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b32-114">자동 생성 키를 사용하여 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-114">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b32-115">자동 생성 된 난수 생성기를 사용 하 여 키 증명 토큰으로 이진 암호 송신을 STS를 하려는 경우이 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-115">Use this constructor if you want the STS to auto-generate the key using a random number generator and send it in the proof token as a binary secret.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="31b32-116">대칭 키의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-116">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="31b32-117">요청 대상에 대한 키 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-117">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="31b32-118">요청자에 대한 키 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-118">The key encrypting credentials for the requestor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b32-119">자동 생성 키를 사용하여 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-119">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b32-120">자동 생성 키를 암호화 된 키로 증명 토큰에 전송 하는 STS를 하려는 경우이 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-120">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="31b32-121">이 생성자를 사용 하 여 두 가지 경우를 다룰 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-121">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="31b32-122">클라이언트는 엔트로피를 전송 하지만 서버에서 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-122">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="31b32-123">서버의 엔트로피를 사용 하도록 클라이언트는 엔트로피를 전송 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-123">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31b32-124">
            <paramref name="keySizeInBits" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-124">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * byte[] -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, sourceEntropy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="31b32-125">대칭 키의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-125">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="31b32-126">요청 대상에 대한 키 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-126">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="31b32-127">엔트로피 또는 증명 토큰을 암호화하는 데 사용되는 요청자의 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-127">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span>
          </span>
        </param>
        <param name="sourceEntropy">
          <span data-ttu-id="31b32-128">요청자의 엔트로피입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-128">The requestor's entropy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b32-129">결합된 엔트로피를 보내는 데 사용할 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-129">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b32-130">결합 된 엔트로피를 전송 하려는 경우이 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-130">Use this constructor if you want to send a combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31b32-131">
            <paramref name="sourceEntropy" />가 <see langword="null" /> 또는 빈 배열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-131">
              <paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31b32-132">
            <paramref name="keySize" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-132">
              <paramref name="keySize" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, System::String ^ encryptWith);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * string -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, encryptWith)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="31b32-133">대칭 키의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-133">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="31b32-134">신뢰 당사자에 대한 키 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-134">The key encrypting credentials for the relying party.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="31b32-135">요청자에 대한 키 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-135">The key encrypting credentials for the requestor.</span>
          </span>
        </param>
        <param name="encryptWith">
          <span data-ttu-id="31b32-136">RST의 <see langword="&lt;EncryptWith&gt;" /> 요소에 지정된 알고리즘(URI)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-136">The algorithm (URI) specified in the <see langword="&lt;EncryptWith&gt;" /> element of the RST.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b32-137">이 생성자를 사용하여 STS에서 키를 자동으로 생성한 후 이 키를 증명 토큰에서 암호화된 키로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-137">Use this constructor to have the STS autogenerate a key and send it in the proof token as encrypted key.</span>
          </span>
          <span data-ttu-id="31b32-138">두 가지 사례는 여기에서 다룹니다. 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-138">Two cases are covered here 1.</span>
          </span>
          <span data-ttu-id="31b32-139">클라이언트는 엔트로피를 전송하지만 서버에서 거부합니다. 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-139">client sends the entropy, but server rejects it 2.</span>
          </span>
          <span data-ttu-id="31b32-140">클라이언트는 엔트로피를 전송하지 않으므로 서버의 엔트로피를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-140">client did not send a entropy, so just use server's entropy</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b32-141">경우 `encryptWith` 는 DES 알고리즘, 키 약한 DES 키 여야 할 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-141">If `encryptWith` is a DES algorithm, the key is guaranteed not to be a weak DES key.</span></span>  
  
 <span data-ttu-id="31b32-142">자동 생성 키를 암호화 된 키로 증명 토큰에 전송 하는 STS를 하려는 경우이 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-142">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="31b32-143">이 생성자를 사용 하 여 두 가지 경우를 다룰 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-143">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="31b32-144">클라이언트는 엔트로피를 전송 하지만 서버에서 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-144">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="31b32-145">서버의 엔트로피를 사용 하도록 클라이언트는 엔트로피를 전송 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-145">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31b32-146">
            <paramref name="keySizeInBits" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-146">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte(), encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy, System::String ^ encryptWith);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * byte[] * string -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, sourceEntropy, encryptWith)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="31b32-147">대칭 키의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-147">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="31b32-148">SecurityKeyIdentifier 속성의 키를 암호화하는 데 사용되는 신뢰 당사자에 대한 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-148">The encrypting credentials for the relying party used to encrypt the key in the SecurityKeyIdentifier property.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="31b32-149">엔트로피 또는 증명 토큰을 암호화하는 데 사용되는 요청자의 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-149">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span>
          </span>
        </param>
        <param name="sourceEntropy">
          <span data-ttu-id="31b32-150">요청자의 엔트로피입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-150">The requestor's entropy.</span>
          </span>
        </param>
        <param name="encryptWith">
          <span data-ttu-id="31b32-151">증명 키를 암호화하는 데 사용할 알고리즘의 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-151">The URI of the algorithm to use to encrypt the proof key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b32-152">결합된 엔트로피를 보내는 데 사용할 <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-152">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b32-153">결합 된 엔트로피를 전송 하려면이 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-153">Use this constructor to send combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31b32-154">
            <paramref name="keySizeInBits" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-154">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31b32-155">
            <paramref name="sourceEntropy" />가 <see langword="null" /> 또는 빈 배열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-155">
              <paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTo">
      <MemberSignature Language="C#" Value="public override void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyTo(class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ApplyTo (response As RequestSecurityTokenResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyTo(System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ response);" />
      <MemberSignature Language="F#" Value="override this.ApplyTo : System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse -&gt; unit" Usage="symmetricProofDescriptor.ApplyTo response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
      </Parameters>
      <Docs>
        <param name="response">
          <span data-ttu-id="31b32-156">교정 설명자를 적용할 RSTR입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-156">The RSTR to which to apply the proof descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b32-157">이 증명 설명자의 설정을 기준으로 지정된 RSTR을 수정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-157">Modifies the specified RSTR based on the settings in this proof descriptor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b32-158">증명 설명자 인스턴스 내에서 새로운 기능에 따라 RSTR 내부 요청 된 증명 토큰과 같은 적절 한 아티팩트를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="31b32-158">Sets the appropriate artifacts, such as the requested proof token, inside the RSTR based on what is inside the proof descriptor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31b32-159">
            <paramref name="response" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-159">
              <paramref name="response" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyBytes">
      <MemberSignature Language="C#" Value="public byte[] GetKeyBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetKeyBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeyBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetKeyBytes();" />
      <MemberSignature Language="F#" Value="member this.GetKeyBytes : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetKeyBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31b32-160">키 자료를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-160">Gets the key material.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31b32-161">키 자료가 들어 있는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-161">A byte array that contains the key material.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetSourceEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetSourceEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSourceEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetSourceEntropy();" />
      <MemberSignature Language="F#" Value="member this.GetSourceEntropy : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetSourceEntropy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31b32-162">소스 엔트로피를 가져옵니다(일반 바이트).</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-162">Gets the source entropy in plain bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31b32-163">소스 엔트로피가 들어 있는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-163">A byte array that contains the source entropy.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetTargetEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetTargetEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTargetEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetTargetEntropy();" />
      <MemberSignature Language="F#" Value="member this.GetTargetEntropy : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetTargetEntropy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31b32-164">대상 엔트로피를 가져옵니다(일반 바이트).</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-164">Gets the target entropy in plain bytes</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31b32-165">대상 엔트로피가 들어 있는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-165">A byte array that contains the target entropy.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyIdentifier">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ KeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31b32-166">발급된 토큰 안에 사용하여 키를 정의할 수 있는 키 식별자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-166">Gets the key identifier that can be used inside the issued token to define the key.</span>
          </span>
          <span data-ttu-id="31b32-167">일반적으로 이진 암호 또는 암호화 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-167">It is usually the binary secret or the encrypted key;</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31b32-168">키 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-168">The key identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestorEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RequestorEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ RequestorEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestorEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31b32-169">응답에서 요청된 증명 토큰 또는 엔트로피를 암호화하는 데 사용할 수 있는 요청자의 암호화 자격 증명을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-169">Gets the requestor's encrypting credentials, which may be used to encrypt the requested proof token or the entropy in the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31b32-170">요청자의 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-170">The requestor’s encrypting credentials.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property TargetEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ TargetEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31b32-171">응답에서 요청된 보안 토큰을 암호화하는 데 사용할 수 있는 신뢰 당사자 암호화 자격 증명을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-171">Gets the relying party encrypting credentials, which may be used to encrypt the requested security token in the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31b32-172">신뢰 당사자 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b32-172">The relying party encrypting credentials.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>