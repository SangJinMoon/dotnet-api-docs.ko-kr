<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SymmetricProofDescriptor.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ffe999e82c07080d3a3d05a07ffe07550a5204a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ffe999e82c07080d3a3d05a07ffe07550a5204a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SymmetricProofDescriptor">
          <source>This class can be used for issuing the symmetric key based token.</source>
          <target state="translated">이 클래스는 동기 키 기반 토큰을 발급하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SymmetricProofDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /&gt;</ph> to be used.</source>
          <target state="translated">사용할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class with the specified encrypting credentials.</source>
          <target state="translated">지정된 암호화 자격 증명을 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Use this constructor if you want the STS to use the specified <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptingCredentials&gt;</ph>.</source>
          <target state="translated">지정 된 사용 하려면 STS를 원하는 경우이 생성자를 사용 하 여 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptingCredentials&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The symmetric key that is used inside the issued token.</source>
          <target state="translated">발급된 토큰 내부에 사용되는 대칭 키입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The key encrypting credentials for the relying party.</source>
          <target state="translated">신뢰 당사자에 대한 키 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class with the specified key material.</source>
          <target state="translated">지정된 키 자료를 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Use this constructor if you want the STS to use the specified key bytes.</source>
          <target state="translated">지정된 된 키 바이트를 사용 하는 STS를 원하는 경우이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>This happens when client sends the entropy, and the STS would just use that as the key for the issued token.</source>
          <target state="translated">이 클라이언트 엔트로피를 보내고 STS만 사용 하는 발급 된 토큰에 대 한 키로 발생 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The size of the symmetric key.</source>
          <target state="translated">대칭 키의 크기입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The key encrypting credentials for the target of the request.</source>
          <target state="translated">요청 대상에 대한 키 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class with an auto-generated key.</source>
          <target state="translated">자동 생성 키를 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Use this constructor if you want the STS to auto-generate the key using a random number generator and send it in the proof token as a binary secret.</source>
          <target state="translated">난수 생성기를 사용 하 여 키를 자동으로 생성 하는 이진 암호로 증명 토큰을 보낼 STS를 원하는 경우이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The size of the symmetric key.</source>
          <target state="translated">대칭 키의 크기입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The key encrypting credentials for the target of the request.</source>
          <target state="translated">요청 대상에 대한 키 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The key encrypting credentials for the requestor.</source>
          <target state="translated">요청자에 대한 키 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class with an auto-generated key.</source>
          <target state="translated">자동 생성 키를 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</source>
          <target state="translated">자동 생성 키에 암호화 된 키로 증명 토큰을 STS를 원하는 경우이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>Two cases can be covered by using this constructor:</source>
          <target state="translated">이 생성자를 사용 하 여 두 가지 경우를 다룰 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The client sends the entropy, but the server rejects it.</source>
          <target state="translated">클라이언트 엔트로피 보내지만 서버에서 거부 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source>The client does not send the entropy, so the server's entropy is used.</source>
          <target state="translated">클라이언트는 서버의 엔트로피 사용 되도록 엔트로피를 보내지 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
          <source><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph>가 0보다 작거나 같은 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>The size of the symmetric key.</source>
          <target state="translated">대칭 키의 크기입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>The key encrypting credentials for the target of the request.</source>
          <target state="translated">요청 대상에 대한 키 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</source>
          <target state="translated">엔트로피 또는 증명 토큰을 암호화하는 데 사용되는 요청자의 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>The requestor's entropy.</source>
          <target state="translated">요청자의 엔트로피입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class to use for sending combined entropy.</source>
          <target state="translated">결합된 엔트로피를 보내는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source>Use this constructor if you want to send a combined entropy.</source>
          <target state="translated">조합 된 엔트로피를 전송 하려는 경우이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="sourceEntropy" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceEntropy" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 빈 배열인 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The size of the symmetric key.</source>
          <target state="translated">대칭 키의 크기입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The key encrypting credentials for the relying party.</source>
          <target state="translated">신뢰 당사자에 대한 키 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The key encrypting credentials for the requestor.</source>
          <target state="translated">요청자에 대한 키 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The algorithm (URI) specified in the <ph id="ph1">&lt;see langword="&amp;lt;EncryptWith&amp;gt;" /&gt;</ph> element of the RST.</source>
          <target state="translated">RST의 <ph id="ph1">&lt;see langword="&amp;lt;EncryptWith&amp;gt;" /&gt;</ph> 요소에 지정된 알고리즘(URI)입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>Use this constructor to have the STS autogenerate a key and send it in the proof token as encrypted key.</source>
          <target state="translated">이 생성자를 사용하여 STS에서 키를 자동으로 생성한 후 이 키를 증명 토큰에서 암호화된 키로 보냅니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>Two cases are covered here 1.</source>
          <target state="translated">두 가지 사례는 여기에서 다룹니다. 1.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>client sends the entropy, but server rejects it 2.</source>
          <target state="translated">클라이언트는 엔트로피를 전송하지만 서버에서 거부합니다. 2.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>client did not send a entropy, so just use server's entropy</source>
          <target state="translated">클라이언트는 엔트로피를 전송하지 않으므로 서버의 엔트로피를 사용합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>If <ph id="ph1">`encryptWith`</ph> is a DES algorithm, the key is guaranteed not to be a weak DES key.</source>
          <target state="translated">경우 <ph id="ph1">`encryptWith`</ph> DES 알고리즘은 키 약한 DES 키 여야 하는 수 없도록 보장 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</source>
          <target state="translated">자동 생성 키에 암호화 된 키로 증명 토큰을 STS를 원하는 경우이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>Two cases can be covered by using this constructor:</source>
          <target state="translated">이 생성자를 사용 하 여 두 가지 경우를 다룰 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The client sends the entropy, but the server rejects it.</source>
          <target state="translated">클라이언트 엔트로피 보내지만 서버에서 거부 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source>The client does not send the entropy, so the server's entropy is used.</source>
          <target state="translated">클라이언트는 서버의 엔트로피 사용 되도록 엔트로피를 보내지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
          <source><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph>가 0보다 작거나 같은 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>The size of the symmetric key.</source>
          <target state="translated">대칭 키의 크기입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>The encrypting credentials for the relying party used to encrypt the key in the SecurityKeyIdentifier property.</source>
          <target state="translated">SecurityKeyIdentifier 속성의 키를 암호화하는 데 사용되는 신뢰 당사자에 대한 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</source>
          <target state="translated">엔트로피 또는 증명 토큰을 암호화하는 데 사용되는 요청자의 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>The requestor's entropy.</source>
          <target state="translated">요청자의 엔트로피입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>The URI of the algorithm to use to encrypt the proof key.</source>
          <target state="translated">증명 키를 암호화하는 데 사용할 알고리즘의 URI입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> class to use for sending combined entropy.</source>
          <target state="translated">결합된 엔트로피를 보내는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source>Use this constructor to send combined entropy.</source>
          <target state="translated">이 생성자를 사용 하 여 조합 된 엔트로피를 보내려고 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySizeInBits" /&gt;</ph>가 0보다 작거나 같은 경우</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
          <source><ph id="ph1">&lt;paramref name="sourceEntropy" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceEntropy" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 빈 배열인 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
          <source>The RSTR to which to apply the proof descriptor.</source>
          <target state="translated">교정 설명자를 적용할 RSTR입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
          <source>Modifies the specified RSTR based on the settings in this proof descriptor.</source>
          <target state="translated">이 증명 설명자의 설정을 기준으로 지정된 RSTR을 수정합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
          <source>Sets the appropriate artifacts, such as the requested proof token, inside the RSTR based on what is inside the proof descriptor instance.</source>
          <target state="translated">증명 설명자 인스턴스 내부 횟수에 따라 RSTR 내 요청 된 증명 토큰 같은 적절 한 아티팩트를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
          <source><ph id="ph1">&lt;paramref name="response" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="response" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes">
          <source>Gets the key material.</source>
          <target state="translated">키 자료를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes">
          <source>A byte array that contains the key material.</source>
          <target state="translated">키 자료가 들어 있는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy">
          <source>Gets the source entropy in plain bytes.</source>
          <target state="translated">소스 엔트로피를 가져옵니다(일반 바이트).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy">
          <source>A byte array that contains the source entropy.</source>
          <target state="translated">소스 엔트로피가 들어 있는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy">
          <source>Gets the target entropy in plain bytes</source>
          <target state="translated">대상 엔트로피를 가져옵니다(일반 바이트).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy">
          <source>A byte array that contains the target entropy.</source>
          <target state="translated">대상 엔트로피가 들어 있는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier">
          <source>Gets the key identifier that can be used inside the issued token to define the key.</source>
          <target state="translated">발급된 토큰 안에 사용하여 키를 정의할 수 있는 키 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier">
          <source>It is usually the binary secret or the encrypted key;</source>
          <target state="translated">일반적으로 이진 암호 또는 암호화 키입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier">
          <source>The key identifier.</source>
          <target state="translated">키 식별자입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials">
          <source>Gets the requestor's encrypting credentials, which may be used to encrypt the requested proof token or the entropy in the response.</source>
          <target state="translated">응답에서 요청된 증명 토큰 또는 엔트로피를 암호화하는 데 사용할 수 있는 요청자의 암호화 자격 증명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials">
          <source>The requestor’s encrypting credentials.</source>
          <target state="translated">요청자의 암호화 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials">
          <source>Gets the relying party encrypting credentials, which may be used to encrypt the requested security token in the response.</source>
          <target state="translated">응답에서 요청된 보안 토큰을 암호화하는 데 사용할 수 있는 신뢰 당사자 암호화 자격 증명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials">
          <source>The relying party encrypting credentials.</source>
          <target state="translated">신뢰 당사자 암호화 자격 증명입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>