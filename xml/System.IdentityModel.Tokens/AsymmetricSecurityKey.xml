<Type Name="AsymmetricSecurityKey" FullName="System.IdentityModel.Tokens.AsymmetricSecurityKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8f34bb646f0dd4a5f7b54e38851ad5217421f49" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class AsymmetricSecurityKey : System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricSecurityKey extends System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricSecurityKey&#xA;Inherits SecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricSecurityKey abstract : System::IdentityModel::Tokens::SecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="84fe3-101">비대칭 키에 대한 기본 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84fe3-101">Base class for asymmetric keys.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84fe3-102">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]가 부분 신뢰 환경에서 실행되는 경우에는 이 클래스를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="84fe3-102">You cannot use this class when [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] is running under partial trust.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricSecurityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricSecurityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84fe3-103">
            <see cref="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAsymmetricAlgorithm (algorithm As String, privateKey As Boolean) As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::AsymmetricAlgorithm ^ GetAsymmetricAlgorithm(System::String ^ algorithm, bool privateKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="privateKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="84fe3-104">만들 비대칭 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-104">The asymmetric algorithm to create.</span>
          </span>
        </param>
        <param name="privateKey">
          <span data-ttu-id="84fe3-105">알고리즘을 만드는 데 개인 키가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-105">
              <see langword="true" /> when a private key is required to create the algorithm; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84fe3-106">파생 클래스에서 재정의되는 경우 지정된 비대칭 암호화 알고리즘을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-106">When overridden in a derived class, gets the specified asymmetric cryptographic algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84fe3-107">지정된 비대칭 암호화 알고리즘을 나타내는 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-107">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that represents the specified asymmetric cryptographic algorithm.</span>
          </span>
          <span data-ttu-id="84fe3-108">일반적으로 개인 키가 해독에 필요하므로 <see langword="true" />가 <paramref name="privateKey" /> 매개 변수에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-108">Typically, <see langword="true" /> is passed into the <paramref name="privateKey" /> parameter, as a private key is typically required for decryption.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84fe3-109">알고리즘을 지정하려면 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 클래스의 정적 필드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="84fe3-109">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashAlgorithmForSignature">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashAlgorithmForSignature (algorithm As String) As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::HashAlgorithm ^ GetHashAlgorithmForSignature(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="84fe3-110">해시 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-110">The hash algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84fe3-111">파생 클래스에서 재정의되는 경우 디지털 서명에 대한 해시를 생성하는 암호화 알고리즘을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-111">When overridden in a derived class, gets a cryptographic algorithm that generates a hash for a digital signature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84fe3-112">디지털 서명에 대한 해시를 생성하는 <see cref="T:System.Security.Cryptography.HashAlgorithm" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-112">A <see cref="T:System.Security.Cryptography.HashAlgorithm" /> that generates hashes for digital signatures.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84fe3-113">알고리즘을 지정하려면 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 클래스의 정적 필드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="84fe3-113">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureDeformatter">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSignatureDeformatter (algorithm As String) As AsymmetricSignatureDeformatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::AsymmetricSignatureDeformatter ^ GetSignatureDeformatter(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureDeformatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="84fe3-114">디지털 서명에 대한 디포맷터 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-114">The deformatter algorithm for the digital signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84fe3-115">파생 클래스에서 재정의되는 경우 디지털 서명에 대한 디포맷터 알고리즘을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-115">When overridden in a derived class, gets the deformatter algorithm for the digital signature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84fe3-116">디지털 서명에 대한 디포맷터 알고리즘을 나타내는 <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-116">An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the deformatter algorithm for the digital signature.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84fe3-117">일반적으로 서명 디포맷터는 디지털 서명을 확인하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="84fe3-117">A signature deformatter is typically used to verify a digital signature.</span></span>  
  
 <span data-ttu-id="84fe3-118">알고리즘을 지정하려면 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 클래스의 정적 필드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="84fe3-118">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureFormatter">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSignatureFormatter (algorithm As String) As AsymmetricSignatureFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::AsymmetricSignatureFormatter ^ GetSignatureFormatter(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="84fe3-119">디지털 서명에 대한 포맷터 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-119">The formatter algorithm for the digital signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84fe3-120">파생 클래스에서 재정의되는 경우 디지털 서명에 대한 포맷터 알고리즘을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-120">When overridden in a derived class, gets the formatter algorithm for the digital signature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84fe3-121">디지털 서명에 대한 포맷터 알고리즘을 나타내는 <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-121">An <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" /> that represents the formatter algorithm for the digital signature.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84fe3-122">일반적으로 서명 포맷터는 디지털 서명을 생성하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="84fe3-122">Typically, a signature formatter is used to generate a digital signature.</span></span>  
  
 <span data-ttu-id="84fe3-123">알고리즘을 지정하려면 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 클래스의 정적 필드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="84fe3-123">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public abstract bool HasPrivateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasPrivateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function HasPrivateKey () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool HasPrivateKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84fe3-124">파생 클래스에서 재정의되는 경우 개인 키를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-124">When overridden in a derived class, gets a value that indicates whether the private key is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84fe3-125">개인 키를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84fe3-125">
              <see langword="true" /> when the private key is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>