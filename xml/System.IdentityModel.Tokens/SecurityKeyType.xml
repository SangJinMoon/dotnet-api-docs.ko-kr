<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityKeyType.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac538f6517adbe8ed877c66223cd626f5d299e84ae5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38f6517adbe8ed877c66223cd626f5d299e84ae5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>Specifies the type of key that is associated with a security token.</source>
          <target state="translated">보안 토큰과 연결된 키의 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>Use the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt;</ph> enumeration to set the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt;</ph> 속성을 설정하려면 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A&gt;</ph> 열거형을 사용합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>The BearerKey field is used with the <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A&gt;</ph> property.</source>
          <target state="translated">와 BearerKey 필드가 사용 되는 <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>BearerKey Requires Wsu:Id or Transport Security with Message Credentials</source>
          <target state="translated">Wsu:Id 또는 메시지 자격 증명을 통한 전송 보안을 필요로 하는 BearerKey</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>In federation scenarios, an issued token is generally configured as an endorsing supporting token for message security between a client and the relying parties.</source>
          <target state="translated">페더레이션 시나리오에서 발급된 토큰은 일반적으로 클라이언트와 신뢰 당사자 간의 메시지 보안을 위한 보증 지원 토큰으로 구성됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>However, when a Security Token Service (STS) issues a token with no key (BearerKey), <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> configures it as a <ph id="ph2">&lt;xref:System.ServiceModel.Security.SecurityTokenAttachmentMode&gt;</ph> supporting token (<ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> cannot endorse without a key).</source>
          <target state="translated">하지만 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>는 키 없이 보증할 수 없으므로 STS(보안 토큰 서비스)에서 키(BearerKey) 없이 토큰을 발급하면 <ph id="ph2">&lt;xref:System.ServiceModel.Security.SecurityTokenAttachmentMode&gt;</ph>에서는 이 토큰을 <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 지원 토큰으로 구성합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>This requires the issued token to be referenced in the signature.</source>
          <target state="translated">이렇게 하려면 발급된 토큰을 서명에서 참조해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> currently uses the following: <ph id="ph2">http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id</ph> as a reference mechanism (Wsu:Id).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 현재 다음을 사용 하 여: <ph id="ph2">http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id</ph> 참조 메커니즘 (wsu: id)으로 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>If an issued token does not have such an attribute, on a client, a <ph id="ph1">&lt;xref:System.ServiceModel.Security.MessageSecurityException&gt;</ph> is thrown with the text "Element to sign must have id".</source>
          <target state="translated">발급된 토큰에 이러한 특성이 없으면 클라이언트에서 "서명할 요소에 ID가 있어야 합니다."라는 메시지와 함께 <ph id="ph1">&lt;xref:System.ServiceModel.Security.MessageSecurityException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>This happens when a SAML 1.1 token is used as an issued token (the Wsu:Id is not defined in the SAML 1.1 specification).</source>
          <target state="translated">이 상황은 SAML 1.1 토큰이 발급된 토큰으로 사용될 때 발생합니다. SAML 1.1 사양에는 Wsu:Id가 정의되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>To work around this situation, either use transport security with message credentials (for example, <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.AuthenticationMode&gt;</ph>) or an STS must add the <ph id="ph2">http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id</ph> (Wsu:Id) to the issued token.</source>
          <target state="translated">전송 보안과 메시지 자격 증명으로 사용 하거나이 상황을 해결 하려면 (예를 들어 <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.AuthenticationMode&gt;</ph>) STS를 추가 해야는 <ph id="ph2">http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id</ph> (wsu: id)는 발급 된 토큰에 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>Note that if the Wsu:Id is added to a SAML 1.1 token, the resulting XML does not comply to the SAML 1.1 specification.</source>
          <target state="translated">Wsu:Id가 SAML 1.1 토큰에 추가될 경우 결과 XML은 SAML 1.1 사양을 따르지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>The alternative is to add a Wsu:Id to the <ph id="ph1">`EncryptedData`</ph> which is a result of encrypting the issued token.</source>
          <target state="translated">이를 해결하기 위해 발급된 토큰을 암호화한 결과인 <ph id="ph1">`EncryptedData`</ph>에 Wsu:Id를 추가하는 방법을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>This procedure complies with the SAML 1.1 specification, because the <ph id="ph1">`EncryptedData`</ph> element supports the Wsu:Id attribute.</source>
          <target state="translated"><ph id="ph1">`EncryptedData`</ph> 요소는 Wsu:Id 특성을 지원하므로 이 절차는 SAML 1.1 사양을 따릅니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyType">
          <source>So to be compliant with the specification, the bearer token must be encrypted by the STS.</source>
          <target state="translated">따라서 사양을 준수하려면 STS에서 bearer 토큰을 암호화해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey">
          <source>Specifies that the key is an asymmetric key.</source>
          <target state="translated">키가 비대칭 키임을 지정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey">
          <source>Specifies that the security token does not contain a proof-of-possession key.</source>
          <target state="translated">보안 토큰에 소유 증명 키가 포함되지 않도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey">
          <source>Specifies that the key is a symmetric key.</source>
          <target state="translated">키가 대칭 키임을 지정합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>