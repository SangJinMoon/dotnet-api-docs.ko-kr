<Type Name="SecurityKeyType" FullName="System.IdentityModel.Tokens.SecurityKeyType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c13583435f00db2d15692537e2d2f16c27d4c996" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32688866" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SecurityKeyType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecurityKeyType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SecurityKeyType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SecurityKeyType" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="0241b-101">보안 토큰과 연결된 키의 형식을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0241b-101">Specifies the type of key that is associated with a security token.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0241b-102"><xref:System.IdentityModel.Tokens.SecurityKeyType> 속성을 설정하려면 <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> 열거형을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-102">Use the <xref:System.IdentityModel.Tokens.SecurityKeyType> enumeration to set the <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> property.</span></span>  
  
 <span data-ttu-id="0241b-103">와 BearerKey 필드가 사용 되는 <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-103">The BearerKey field is used with the <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> property.</span></span>  
  
### <a name="bearerkey-requires-wsuid-or-transport-security-with-message-credentials"></a><span data-ttu-id="0241b-104">Wsu:Id 또는 메시지 자격 증명을 통한 전송 보안을 필요로 하는 BearerKey</span><span class="sxs-lookup"><span data-stu-id="0241b-104">BearerKey Requires Wsu:Id or Transport Security with Message Credentials</span></span>  
 <span data-ttu-id="0241b-105">페더레이션 시나리오에서 발급된 토큰은 일반적으로 클라이언트와 신뢰 당사자 간의 메시지 보안을 위한 보증 지원 토큰으로 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-105">In federation scenarios, an issued token is generally configured as an endorsing supporting token for message security between a client and the relying parties.</span></span> <span data-ttu-id="0241b-106">그러나 키 (BearerKey)와 토큰을 발급 한 보안 토큰 서비스 (STS), WCF 구성으로 <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> 지원 토큰 (WCF 키 없이 보증할 수 없으므로).</span><span class="sxs-lookup"><span data-stu-id="0241b-106">However, when a Security Token Service (STS) issues a token with no key (BearerKey), WCF configures it as a <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> supporting token (WCF cannot endorse without a key).</span></span> <span data-ttu-id="0241b-107">이렇게 하려면 발급된 토큰을 서명에서 참조해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-107">This requires the issued token to be referenced in the signature.</span></span> <span data-ttu-id="0241b-108">현재 사용 하 여 다음 WCF: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id 참조 메커니즘 (wsu: id)으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-108">WCF currently uses the following: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id as a reference mechanism (Wsu:Id).</span></span>  
  
 <span data-ttu-id="0241b-109">발급된 토큰에 이러한 특성이 없으면 클라이언트에서 "서명할 요소에 ID가 있어야 합니다."라는 메시지와 함께 <xref:System.ServiceModel.Security.MessageSecurityException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-109">If an issued token does not have such an attribute, on a client, a <xref:System.ServiceModel.Security.MessageSecurityException> is thrown with the text "Element to sign must have id".</span></span> <span data-ttu-id="0241b-110">이 상황은 SAML 1.1 토큰이 발급된 토큰으로 사용될 때 발생합니다. SAML 1.1 사양에는 Wsu:Id가 정의되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-110">This happens when a SAML 1.1 token is used as an issued token (the Wsu:Id is not defined in the SAML 1.1 specification).</span></span>  
  
 <span data-ttu-id="0241b-111">전송 보안과 메시지 자격 증명으로 사용 하거나이 상황을 해결 하려면 (예를 들어 <xref:System.ServiceModel.Configuration.AuthenticationMode>) STS를 추가 해야는 http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (wsu: id)는 발급 된 토큰에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-111">To work around this situation, either use transport security with message credentials (for example, <xref:System.ServiceModel.Configuration.AuthenticationMode>) or an STS must add the http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (Wsu:Id) to the issued token.</span></span>  
  
 <span data-ttu-id="0241b-112">Wsu:Id가 SAML 1.1 토큰에 추가될 경우 결과 XML은 SAML 1.1 사양을 따르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-112">Note that if the Wsu:Id is added to a SAML 1.1 token, the resulting XML does not comply to the SAML 1.1 specification.</span></span> <span data-ttu-id="0241b-113">이를 해결하기 위해 발급된 토큰을 암호화한 결과인 `EncryptedData`에 Wsu:Id를 추가하는 방법을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-113">The alternative is to add a Wsu:Id to the `EncryptedData` which is a result of encrypting the issued token.</span></span> <span data-ttu-id="0241b-114">`EncryptedData` 요소는 Wsu:Id 특성을 지원하므로 이 절차는 SAML 1.1 사양을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-114">This procedure complies with the SAML 1.1 specification, because the `EncryptedData` element supports the Wsu:Id attribute.</span></span>  
  
 <span data-ttu-id="0241b-115">따라서 사양을 준수하려면 STS에서 bearer 토큰을 암호화해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0241b-115">So to be compliant with the specification, the bearer token must be encrypted by the STS.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsymmetricKey">
      <MemberSignature Language="C#" Value="AsymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType AsymmetricKey = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberSignature Language="VB.NET" Value="AsymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="AsymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0241b-116">키가 비대칭 키임을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0241b-116">Specifies that the key is an asymmetric key.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="BearerKey">
      <MemberSignature Language="C#" Value="BearerKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType BearerKey = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberSignature Language="VB.NET" Value="BearerKey" />
      <MemberSignature Language="C++ CLI" Value="BearerKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0241b-117">보안 토큰에 소유 증명 키가 포함되지 않도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0241b-117">Specifies that the security token does not contain a proof-of-possession key.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKey">
      <MemberSignature Language="C#" Value="SymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType SymmetricKey = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberSignature Language="VB.NET" Value="SymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="SymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0241b-118">키가 대칭 키임을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0241b-118">Specifies that the key is a symmetric key.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>