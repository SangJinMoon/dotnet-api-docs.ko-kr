<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6192ef5b23fb8f0d2befe5afca574fba64762992" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52609057" /></Metadata><TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type IssuerNameRegistry = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2e3f8-101">발급자 이름 레지스트리에 대한 추상 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-101">The abstract base class for an issuer name registry.</span></span> <span data-ttu-id="2e3f8-102">발급자 이름 레지스트리는 해당 발급자가 생성한 토큰의 서명을 확인하는 데 필요한 암호화 자료에 니모닉 이름을 연결하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-102">An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="2e3f8-103">발급자 이름 레지스트리에서는 신뢰 당사자(RP) 애플리케이션에 의해 신뢰되는 발급자 목록을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-103">The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f8-104">발급자 이름 레지스트리는 해당 발급자가 생성 한 토큰의 서명을 확인 하는 데 필요한 암호화 자료에 니모닉 이름을 연결 하 여 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-104">The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="2e3f8-105">이 이름은 다음 설정에 사용 된 <xref:System.Security.Claims.Claim.Issuer%2A> 또는 <xref:System.Security.Claims.Claim.OriginalIssuer%2A> 클레임의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-105">This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim.</span></span> <span data-ttu-id="2e3f8-106">노출 되는 메서드는 <xref:System.IdentityModel.Tokens.IssuerNameRegistry> 클래스에서 호출 하는 파이프라인에서 토큰을 처리 하는 보안 토큰 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-106">The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="2e3f8-107">발급자 이름 레지스트리에서 매핑되지 않은 자료에 서명한 토큰이 삭제 됩니다와 신뢰할 수 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-107">Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted.</span></span> <span data-ttu-id="2e3f8-108">발급자 이름 레지스트리에 의해 반환 되는 RP 애플리케이션의 컨텍스트 내에서 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-108">The name returned by the issuer name registry should be unique within the context of an RP application.</span></span>  
  
 <span data-ttu-id="2e3f8-109">코드에서 설정 하 여 사용할 발급자 이름 레지스트리를 지정할 수 있습니다는 <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-109">In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2e3f8-110">구성 파일, 발급자 이름 레지스트리를 지정 하 여 지정할 수 있습니다 합니다 [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) 아래에 있는 요소를 [ &lt;securityTokenHandlerConfiguration &gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-110">In a configuration file, the issuer name registry can be specified by specifying the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element under the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element.</span></span>  
  
 <span data-ttu-id="2e3f8-111">Windows Identity Foundation (WIF)의 구현을 제공 합니다 <xref:System.IdentityModel.Tokens.IssuerNameRegistry> 즉시 클래스:는 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-111">Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class.</span></span> <span data-ttu-id="2e3f8-112">이 구현을 사용할 때는 대상 RP 응용 프로그램의 구성 파일에서 신뢰할 수 있는 발급자 목록을 지정할 수 있습니다 합니다 [ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) 합니다 의자식요소는요소를`<issuerNameRegistry>`요소는 경우는 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class 해당 요소에서 참조 하는 `type` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-112">When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [&lt;trustedIssuers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that element's `type` attribute.</span></span> <span data-ttu-id="2e3f8-113">아래는 `<trustedIssuers>` 요소, 각 발급자 이름은 해당 서명을 확인을 사용 해야 하는 X.509 인증서에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-113">Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.</span></span>  
  
 <span data-ttu-id="2e3f8-114">사용자 지정 발급자 이름 레지스트리를 만들려면 재정의 해야 합니다는 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-114">To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2e3f8-115">이 메서드는 지정된 된 보안 토큰의 발급자 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-115">This method returns the issuer name for the specified security token.</span></span> <span data-ttu-id="2e3f8-116">선택적으로 재정의할 수는 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> 발급자 이름을 검색 하는 경우 힌트는 메커니즘을 제공 하는 방법 및 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> 메서드는 Windows에 대 한 발급자 이름 토큰을 제공 하려는 경우와 다릅니다. <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-116">You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span> <span data-ttu-id="2e3f8-117">재정의 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> 구성 파일에서 초기화할 발급자 이름 레지스트리를 사용 하도록 설정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-117">Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3f8-118">다음 코드의 구현을 보여 줍니다는 <xref:System.IdentityModel.Tokens.IssuerNameRegistry> 주체를 사용 하 여 인증서를 사용 하는 발급자만 허용 하는 클래스 "CN = localhost"입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-118">The following code shows an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class that only accepts issuers that use certificates with subject "CN=localhost".</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2e3f8-119">다음 코드는 설명 목적 으로만 제공입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-119">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="2e3f8-120">좋습니다 아닙니다 주체 이름을 기반으로 하는 인증서의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-120">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="2e3f8-121">이 코드는 프로덕션 환경에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-121">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 <span data-ttu-id="2e3f8-122">다음은 XML 신뢰할 수 있는 발급자 이름 레지스트리를 사용 하 여 애플리케이션을 구성 하는 데 필요한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-122">The following shows the XML necessary to configure an application with the trusted issuer name registry.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/58b39d12-c953-40c4-88af-d7eb3343ca28"><span data-ttu-id="2e3f8-123">&lt;issuerNameRegistry&gt;</span><span class="sxs-lookup"><span data-stu-id="2e3f8-123">&lt;issuerNameRegistry&gt;</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e3f8-124"><see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-124">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2e3f8-125">파생 클래스에서 재정의되는 경우 지정된 보안 토큰의 발급자 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-125">When overridden in a derived class, returns the issuer name for the specified security token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f8-126">토큰을 처리 하는 보안 토큰 처리기에서 처리 파이프라인에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-126">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="2e3f8-127">메서드는 RP 애플리케이션의 컨텍스트 내에서 발급자의 고유 이름을 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-127">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="issuerNameRegistry.GetIssuerName securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="2e3f8-128">발급자 이름을 반환할 보안 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-128">The security token for which to return the issuer name.</span></span></param>
        <summary><span data-ttu-id="2e3f8-129">파생 클래스에서 재정의되는 경우 지정된 보안 토큰의 발급자 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-129">When overridden in a derived class, returns the name of the issuer of the specified security token.</span></span></summary>
        <returns><span data-ttu-id="2e3f8-130">발급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-130">The issuer name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f8-131">인식할 수 있는 발급자를 식별 하는 null이 아니어야 하며 비어 있지 않은 문자열 또는 null 문자열을 인식할 수 없는 발급자를 식별 구현을 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-131">Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.</span></span>  
  
 <span data-ttu-id="2e3f8-132">토큰을 처리 하는 보안 토큰 처리기에서 처리 파이프라인에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-132">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="2e3f8-133">메서드는 RP 애플리케이션의 컨텍스트 내에서 발급자의 고유 이름을 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-133">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3f8-134">다음 코드에서는 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> 발급자 이름 레지스트리에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-134">The following code shows the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> method for an issuer name registry.</span></span> <span data-ttu-id="2e3f8-135">전체 샘플에는 <xref:System.IdentityModel.Tokens.IssuerNameRegistry> 클래스 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-135">The full sample is in the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class overview topic.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2e3f8-136">다음 코드는 설명 목적 으로만 제공입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-136">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="2e3f8-137">좋습니다 아닙니다 주체 이름을 기반으로 하는 인증서의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-137">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="2e3f8-138">이 코드는 프로덕션 환경에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-138">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string&#xA;override this.GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string" Usage="issuerNameRegistry.GetIssuerName (securityToken, requestedIssuerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="2e3f8-139">발급자 이름을 반환할 보안 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-139">The security token for which to return the issuer name.</span></span></param>
        <param name="requestedIssuerName"><span data-ttu-id="2e3f8-140">요청에서 고려할 발급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-140">An issuer name to consider in the request.</span></span></param>
        <summary><span data-ttu-id="2e3f8-141">파생 클래스에서 재정의되는 경우 지정된 보안 토큰의 발급자 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-141">When overridden in a derived class, returns the name of the issuer of the specified security token.</span></span> <span data-ttu-id="2e3f8-142">지정된 발급자 이름은 반환할 발급자 이름을 결정하는 데 고려될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-142">The specified issuer name may be considered in determining the issuer name to return.</span></span></summary>
        <returns><span data-ttu-id="2e3f8-143">발급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-143">The issuer name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f8-144">기본 구현에서 무시 합니다 `requestedIssuerName` 매개 변수 및 호출 하는 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-144">The default implementation ignores the `requestedIssuerName` parameter and simply calls the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2e3f8-145">토큰을 처리 하는 보안 토큰 처리기에서 처리 파이프라인에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-145">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="2e3f8-146">메서드는 RP 애플리케이션의 컨텍스트 내에서 발급자의 고유 이름을 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-146">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetWindowsIssuerName : unit -&gt; string&#xA;override this.GetWindowsIssuerName : unit -&gt; string" Usage="issuerNameRegistry.GetWindowsIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e3f8-147">Windows 클레임에 사용될 기본 발급자 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-147">Returns the default issuer name to be used for Windows claims.</span></span></summary>
        <returns><span data-ttu-id="2e3f8-148">Windows 클레임에 대한 기본 발급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-148">The default issuer name for Windows claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f8-149">기본 구현은 <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-149">The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span>  
  
 <span data-ttu-id="2e3f8-150">토큰을 처리 하는 보안 토큰 처리기에서 처리 파이프라인에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-150">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="2e3f8-151">메서드는 RP 애플리케이션의 컨텍스트 내에서 발급자의 고유 이름을 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-151">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="issuerNameRegistry.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="2e3f8-152">구성 XML 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-152">The configuration XML elements.</span></span> <span data-ttu-id="2e3f8-153">형식 <see cref="T:System.Xml.XmlElement" />의 목록에 있는 각 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-153">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span></span></param>
        <summary><span data-ttu-id="2e3f8-154">파생 클래스에서 재정의되는 경우 XML에서 사용자 지정 구성을 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-154">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3f8-155"><xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> 구성 인프라에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-155">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="2e3f8-156">이 메서드를 호출 하는 경우는 `nodelist` 최상위 자식 요소를 포함 하는 합니다 [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) 구성 파일에서 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-156">When this method is called, the `nodelist` will contain the top-level child elements of the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file.</span></span> <span data-ttu-id="2e3f8-157">특성이 나 자식 요소가 파생 된 클래스에 대해 정의한 구성 스키마에 따라 이러한 각 들어 차례로 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-157">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="2e3f8-158">기본 구현은 throw를 <xref:System.NotImplementedException>입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-158">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="2e3f8-159">구성 파일에서 발급자 이름 레지스트리의 초기화를 사용 하도록 설정 하려면 파생된 클래스에서이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3f8-159">Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/58b39d12-c953-40c4-88af-d7eb3343ca28"><span data-ttu-id="2e3f8-160">&lt;issuerNameRegistry&gt;</span><span class="sxs-lookup"><span data-stu-id="2e3f8-160">&lt;issuerNameRegistry&gt;</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>