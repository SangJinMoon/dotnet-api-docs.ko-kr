<Type Name="EncryptedKeyIdentifierClause" FullName="System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66ab9560a576664943fb329b747936157110bd92" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncryptedKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncryptedKeyIdentifierClause extends System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncryptedKeyIdentifierClause&#xA;Inherits BinaryKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKeyIdentifierClause sealed : System::IdentityModel::Tokens::BinaryKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.BinaryKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="35e4c-101">암호화된 키를 식별하는 키 식별자 절을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35e4c-101">Represents a key identifier clause that identifies an encrypted key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e4c-102">일반적으로 사용자 지정 보안 토큰 서비스를 만드는 경우를 제외하면 <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause>를 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-102">Typically, the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="35e4c-103">보안 토큰 서비스에서 보안 토큰을 반환할 때 발급된 보안 토큰에는 연결된 보안 토큰과 연결되지 않은 보안 토큰에 대한 참조가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="35e4c-104">연결된 참조는 SOAP 메시지의 보안 헤더에 포함된 보안 토큰을 나타내며 연결되지 않은 참조는 SOAP 메시지의 보안 헤더에 포함되지 않은 보안 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="35e4c-105">일반적으로 이러한 참조는 발급된 보안 토큰의 신뢰성을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-105">These references typically affirm the authenticity of the issued security token.</span></span> <span data-ttu-id="35e4c-106">암호화된 키를 참조하려면 <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-106">Use the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key.</span></span> <span data-ttu-id="35e4c-107"><xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> 메서드는 암호화된 키를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-107">The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key.</span></span>  
  
 [!INCLUDE[indigo2](~/includes/indigo2-md.md)]<span data-ttu-id="35e4c-108">에서는 통신 형식과 관련하여 제대로 구성되고 래핑된 키를 받아들입니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-108"> accepts wrapped keys that are well formed with respect to the wire format.</span></span> <span data-ttu-id="35e4c-109">해당 통신에 지정된 키 래핑 알고리즘이 수락되고 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-109">The key wrap algorithm specified on the wire is accepted and used.</span></span> <span data-ttu-id="35e4c-110">이 알고리즘은 끝점에서 지정한 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>와 호환되는지 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-110">It is not verified to be compatible with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> specified by the endpoint.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35e4c-111">
            <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="encryptionMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="35e4c-112">암호화된 키를 포함하는 <see cref="T:System.Byte" />의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-112">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="35e4c-113">
            <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> 메서드에서 반환되는 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-113">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="35e4c-114">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-114">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="35e4c-115">
            <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> 속성의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-115">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35e4c-116">암호화된 지정한 키와 키를 암호화하는 데 사용된 암호화 알고리즘을 사용하여 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-116">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e4c-117"><xref:System.IdentityModel.Tokens.SecurityAlgorithms> 매개 변수의 암호화 알고리즘을 지정하려면 `encryptionMethod`의 정적 상수 문자열을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-117">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35e4c-118">
            <paramref name="encryptionMethod" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-118">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35e4c-119">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-119">-or-</span>
          </span>
          <span data-ttu-id="35e4c-120">
            <paramref name="encryptedKey" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-120">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35e4c-121">
            <paramref name="encryptedKey" />의 길이가 0인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-121">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="35e4c-122">암호화된 키를 포함하는 <see cref="T:System.Byte" />의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-122">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="35e4c-123">
            <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> 메서드에서 반환되는 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-123">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="35e4c-124">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-124">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="35e4c-125">
            <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> 속성의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-125">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <summary>
          <span data-ttu-id="35e4c-126">암호화된 지정한 키, 키를 암호화하는 데 사용된 암호화 알고리즘 및 암호화하는 키의 키 식별자를 사용하여 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-126">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e4c-127"><xref:System.IdentityModel.Tokens.SecurityAlgorithms> 매개 변수의 암호화 알고리즘을 지정하려면 `encryptionMethod`의 정적 상수 문자열을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-127">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35e4c-128">
            <paramref name="encryptionMethod" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-128">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35e4c-129">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-129">-or-</span>
          </span>
          <span data-ttu-id="35e4c-130">
            <paramref name="encryptedKey" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-130">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35e4c-131">
            <paramref name="encryptedKey" />의 길이가 0인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-131">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier, System::String ^ carriedKeyName);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier, carriedKeyName As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier, System::String ^ carriedKeyName);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="carriedKeyName" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="35e4c-132">암호화된 키를 포함하는 <see cref="T:System.Byte" />의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-132">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="35e4c-133">
            <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> 메서드에서 반환되는 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-133">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="35e4c-134">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-134">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="35e4c-135">
            <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> 속성의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-135">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="carriedKeyName">
          <span data-ttu-id="35e4c-136">
            <c>encryptedKey</c> 매개 변수에 지정된 키와 연결된 사용자가 읽을 수 있는 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-136">A user-readable name that is associated with the key specified in the <c>encryptedKey</c> parameter.</span>
          </span>
          <span data-ttu-id="35e4c-137">
            <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> 속성의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-137">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35e4c-138">암호화된 지정한 키, 키를 암호화하는 데 사용된 암호화 알고리즘, 암호화하는 키의 키 식별자 및 사용자가 읽을 수 있는 이름을 사용하여 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-138">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e4c-139"><xref:System.IdentityModel.Tokens.SecurityAlgorithms> 매개 변수의 암호화 알고리즘을 지정하려면 `encryptionMethod`의 정적 상수 문자열을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-139">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35e4c-140">
            <paramref name="encryptionMethod" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-140">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35e4c-141">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-141">-or-</span>
          </span>
          <span data-ttu-id="35e4c-142">
            <paramref name="encryptedKey" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-142">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35e4c-143">
            <paramref name="encryptedKey" />의 길이가 0인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-143">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier, System::String ^ carriedKeyName, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier, System::String ^ carriedKeyName, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="carriedKeyName" Type="System.String" Index="3" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" Index="4" />
        <Parameter Name="derivationLength" Type="System.Int32" Index="5" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="35e4c-144">암호화된 키를 포함하는 <see cref="T:System.Byte" />의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-144">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="35e4c-145">
            <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> 메서드에서 반환되는 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-145">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="35e4c-146">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-146">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="35e4c-147">
            <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> 속성의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-147">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="carriedKeyName">
          <span data-ttu-id="35e4c-148">
            <c>encryptedKey</c> 매개 변수에 지정된 키와 연결된 사용자가 읽을 수 있는 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-148">A user-readable name that is associated with the key specified in the <c>encryptedKey</c> parameter.</span>
          </span>
          <span data-ttu-id="35e4c-149">
            <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> 속성의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-149">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</span>
          </span>
        </param>
        <param name="derivationNonce">
          <span data-ttu-id="35e4c-150">파생 키를 만드는 데 사용된 nonce를 포함하는 <see cref="T:System.Byte" />의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-150">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span>
          </span>
          <span data-ttu-id="35e4c-151">
            <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> 메서드에서 반환되는 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-151">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span>
          </span>
        </param>
        <param name="derivationLength">
          <span data-ttu-id="35e4c-152">파생 키의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-152">The size of the derived key.</span>
          </span>
          <span data-ttu-id="35e4c-153">
            <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> 속성의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-153">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35e4c-154">암호화된 지정한 키, 키를 암호화하는 데 사용된 암호화 알고리즘, 키의 키 식별자 및 사용자가 읽을 수 있는 이름을 사용하여 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-154">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e4c-155">`derivationNonce` 및 `derivationLength` 매개 변수가 지정되면 토큰의 직접 보안 키 대신 유추된 파생 키가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-155">When the `derivationNonce` and `derivationLength` parameters are specified the implied derived key is used instead of the direct security key of the token.</span></span>  
  
 <span data-ttu-id="35e4c-156"><xref:System.IdentityModel.Tokens.SecurityAlgorithms> 매개 변수의 암호화 알고리즘을 지정하려면 `encryptionMethod`의 정적 상수 문자열을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-156">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35e4c-157">
            <paramref name="encryptionMethod" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-157">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="35e4c-158">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-158">-or-</span>
          </span>
          <span data-ttu-id="35e4c-159">
            <paramref name="encryptedKey" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-159">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35e4c-160">
            <paramref name="encryptedKey" />의 길이가 0인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-160">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CarriedKeyName">
      <MemberSignature Language="C#" Value="public string CarriedKeyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CarriedKeyName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CarriedKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CarriedKeyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e4c-161">암호화된 키와 연결된 사용자가 읽을 수 있는 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-161">Gets a user-readable name that is associated with the encrypted key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e4c-162">암호화된 키와 연결된 사용자가 읽을 수 있는 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-162">A user-readable name that is associated with the encrypted key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e4c-163">경우는 <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> 속성이 XML로 serialize 되는 경우에에 배치 되는 <`CarriedKeyName`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-163">When the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> property is serialized into XML, it is placed in the <`CarriedKeyName`> element.</span></span> <span data-ttu-id="35e4c-164">암호화 된 키에 대 한는 <`CarriedKeyName`> 요소는 사용자가 읽을 수 있는 이름을 키 값을 연결 하는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-164">For encrypted keys, the <`CarriedKeyName`> element is an optional element that associates a user-readable name with a key value.</span></span> <span data-ttu-id="35e4c-165">이 이름을 사용 하 여 키를 참조 하도록 한 다음 사용할 수 있습니다는 <`KeyName`> 내에서 요소는 <`KeyInfo`> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-165">This name can then be used to reference the key using the <`KeyName`> element within the <`KeyInfo`> element.</span></span> <span data-ttu-id="35e4c-166">동일한 <`CarriedKeyName`> 요소 값 ID 값을 달리 단일 문서 내에서 여러 번 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-166">The same <`CarriedKeyName`> element value, unlike an ID value, can occur multiple times within a single document.</span></span> <span data-ttu-id="35e4c-167">키의 값 모두에 동일 해야 <`EncryptedKey`> 동일한 식별 되는 요소 <`CarriedKeyName`> XML 문서 내에서 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-167">The value of the key must be the same in all <`EncryptedKey`> elements identified with the same <`CarriedKeyName`> name within an XML document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptingKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ EncryptingKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e4c-168">암호화하는 키의 키 식별자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-168">Gets a key identifier for the encrypting key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e4c-169">암호화하는 키의 키 식별자를 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-169">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public string EncryptionMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e4c-170">키를 암호화하는 데 사용되는 암호화 알고리즘을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-170">Gets the cryptographic algorithm that is used to encrypt the key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e4c-171">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-171">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e4c-172">일반적으로 <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> 속성의 값은 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 클래스의 정적 상수 문자열 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-172">Typically, the value of the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> property is one of the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptedKey">
      <MemberSignature Language="C#" Value="public byte[] GetEncryptedKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetEncryptedKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncryptedKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetEncryptedKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35e4c-173">암호화된 키를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-173">Gets the encrypted key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35e4c-174">암호화된 키를 포함하는 <see cref="T:System.Byte" />의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-174">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e4c-175"><xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> 메서드에서 반환되는 배열은 암호화된 키의 복제본입니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-175">The array that is returned by the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method is a clone of the encrypted key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35e4c-176">이 인스턴스의 키 식별자가 지정된 개체와 동일한지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-176">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">To be added.</param>
        <summary>
          <span data-ttu-id="35e4c-177">이 인스턴스의 키 식별자가 지정된 키 식별자 절과 동일한지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-177">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35e4c-178">
            <see langword="true" />가 <paramref name="keyIdentifierClause" /> 형식이고 현재 인스턴스와 동일한 암호화된 키, 암호화 방법 및 사용자가 읽을 수 있는 이름을 갖고 있으면 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-178">
              <see langword="true" /> if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35e4c-179">
            <paramref name="keyIdentifierClause" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-179">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
        <altmember cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
        <altmember cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] encryptedKey, string encryptionMethod, string carriedKeyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] encryptedKey, string encryptionMethod, string carriedKeyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (encryptedKey As Byte(), encryptionMethod As String, carriedKeyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::String ^ carriedKeyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="encryptionMethod" Type="System.String" />
        <Parameter Name="carriedKeyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="35e4c-180">암호화된 키를 포함하는 <see cref="T:System.Byte" />의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-180">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="35e4c-181">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-181">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
        </param>
        <param name="carriedKeyName">
          <span data-ttu-id="35e4c-182">암호화된 키와 연결된 사용자가 읽을 수 있는 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-182">A user-readable name that is associated with the encrypted key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35e4c-183">이 인스턴스의 키 식별자가 지정한 암호화된 키, 암호화 방법 및 사용자가 읽을 수 있는 이름과 동일한지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-183">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35e4c-184">
            <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> 및 <paramref name="carriedKeyName" /> 매개 변수의 값이 <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> 메서드와 <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> 및 <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> 속성에서 반환되는 값과 각각 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-184">
              <see langword="true" /> if the <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> and <paramref name="carriedKeyName" /> parameters have the same values returned by the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> properties, respectively; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35e4c-185">현재 개체를 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-185">Returns a string that represents the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35e4c-186">현재 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e4c-186">The current object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e4c-187"><xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> 메서드는 암호화된 키와 키를 암호화하는 데 사용된 암호화 알고리즘을 포함하는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="35e4c-187">The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>