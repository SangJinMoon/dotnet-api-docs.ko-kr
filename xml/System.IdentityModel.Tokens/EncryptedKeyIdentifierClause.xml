<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncryptedKeyIdentifierClause.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e9a74bce3657cf4cd0a2d309e32dd874918a99ed.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9a74bce3657cf4cd0a2d309e32dd874918a99ed</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Represents a key identifier clause that identifies an encrypted key.</source>
          <target state="translated">암호화된 키를 식별하는 키 식별자 절을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Typically, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">일반적으로 사용자 지정 보안 토큰 서비스를 만드는 경우를 제외하면 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph>를 사용할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">보안 토큰 서비스에서 보안 토큰을 반환할 때 발급된 보안 토큰에는 연결된 보안 토큰과 연결되지 않은 보안 토큰에 대한 참조가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.</source>
          <target state="translated">연결된 참조는 SOAP 메시지의 보안 헤더에 포함된 보안 토큰을 나타내며 연결되지 않은 참조는 SOAP 메시지의 보안 헤더에 포함되지 않은 보안 토큰을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">일반적으로 이러한 참조는 발급된 보안 토큰의 신뢰성을 확인합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Use the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph> class to reference an encrypted key.</source>
          <target state="translated">암호화된 키를 참조하려면 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A&gt;</ph> method returns the encrypted key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A&gt;</ph> 메서드는 암호화된 키를 반환합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> accepts wrapped keys that are well formed with respect to the wire format.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>에서는 통신 형식과 관련하여 제대로 구성되고 래핑된 키를 받아들입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>The key wrap algorithm specified on the wire is accepted and used.</source>
          <target state="translated">해당 통신에 지정된 키 래핑 알고리즘이 수락되고 사용됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>It is not verified to be compatible with the <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> specified by the endpoint.</source>
          <target state="translated">이 알고리즘은 끝점에서 지정한 <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph>와 호환되는지 확인되지 않습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains a key that is encrypted.</source>
          <target state="translated">암호화된 키를 포함하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>Sets the value that is returned from the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> 메서드에서 반환되는 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> 속성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.</source>
          <target state="translated">암호화된 지정한 키와 키를 암호화하는 데 사용된 암호화 알고리즘을 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>Use the static constant strings in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id="ph2">`encryptionMethod`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> 매개 변수의 암호화 알고리즘을 지정하려면 <ph id="ph2">`encryptionMethod`</ph>의 정적 상수 문자열을 사용합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph>의 길이가 0인 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains a key that is encrypted.</source>
          <target state="translated">암호화된 키를 포함하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Sets the value that is returned from the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> 메서드에서 반환되는 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> 속성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.</source>
          <target state="translated">암호화된 지정한 키, 키를 암호화하는 데 사용된 암호화 알고리즘 및 암호화하는 키의 키 식별자를 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Use the static constant strings in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id="ph2">`encryptionMethod`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> 매개 변수의 암호화 알고리즘을 지정하려면 <ph id="ph2">`encryptionMethod`</ph>의 정적 상수 문자열을 사용합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph>의 길이가 0인 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains a key that is encrypted.</source>
          <target state="translated">암호화된 키를 포함하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>Sets the value that is returned from the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> 메서드에서 반환되는 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> 속성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>A user-readable name that is associated with the key specified in the <bpt id="p1">&lt;c&gt;</bpt>encryptedKey<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>encryptedKey<ept id="p1">&lt;/c&gt;</ept> 매개 변수에 지정된 키와 연결된 사용자가 읽을 수 있는 이름입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> 속성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.</source>
          <target state="translated">암호화된 지정한 키, 키를 암호화하는 데 사용된 암호화 알고리즘, 암호화하는 키의 키 식별자 및 사용자가 읽을 수 있는 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>Use the static constant strings in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id="ph2">`encryptionMethod`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> 매개 변수의 암호화 알고리즘을 지정하려면 <ph id="ph2">`encryptionMethod`</ph>의 정적 상수 문자열을 사용합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph>의 길이가 0인 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains a key that is encrypted.</source>
          <target state="translated">암호화된 키를 포함하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Sets the value that is returned from the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> 메서드에서 반환되는 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> 속성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>A user-readable name that is associated with the key specified in the <bpt id="p1">&lt;c&gt;</bpt>encryptedKey<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>encryptedKey<ept id="p1">&lt;/c&gt;</ept> 매개 변수에 지정된 키와 연결된 사용자가 읽을 수 있는 이름입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> 속성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that was used to create a derived key.</source>
          <target state="translated">파생 키를 만드는 데 사용된 nonce를 포함하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Sets the value that is returned by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /&gt;</ph> 메서드에서 반환되는 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>The size of the derived key.</source>
          <target state="translated">파생 키의 크기입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /&gt;</ph> 속성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.</source>
          <target state="translated">암호화된 지정한 키, 키를 암호화하는 데 사용된 암호화 알고리즘, 키의 키 식별자 및 사용자가 읽을 수 있는 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>When the <ph id="ph1">`derivationNonce`</ph> and <ph id="ph2">`derivationLength`</ph> parameters are specified the implied derived key is used instead of the direct security key of the token.</source>
          <target state="translated"><ph id="ph1">`derivationNonce`</ph> 및 <ph id="ph2">`derivationLength`</ph> 매개 변수가 지정되면 토큰의 직접 보안 키 대신 유추된 파생 키가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Use the static constant strings in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id="ph2">`encryptionMethod`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> 매개 변수의 암호화 알고리즘을 지정하려면 <ph id="ph2">`encryptionMethod`</ph>의 정적 상수 문자열을 사용합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph>의 길이가 0인 경우</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>Gets a user-readable name that is associated with the encrypted key.</source>
          <target state="translated">암호화된 키와 연결된 사용자가 읽을 수 있는 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>A user-readable name that is associated with the encrypted key.</source>
          <target state="translated">암호화된 키와 연결된 사용자가 읽을 수 있는 이름입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A&gt;</ph> property is serialized into XML, it is placed in the &lt;<ph id="ph2">`CarriedKeyName`</ph>&gt; element.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A&gt;</ph> 속성이 XML로 serialize 되는 경우에에 배치 되는 &lt;<ph id="ph2">`CarriedKeyName`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>For encrypted keys, the &lt;<ph id="ph1">`CarriedKeyName`</ph>&gt; element is an optional element that associates a user-readable name with a key value.</source>
          <target state="translated">암호화 된 키에 대 한는 &lt;<ph id="ph1">`CarriedKeyName`</ph>&gt; 요소는 사용자가 읽을 수 있는 이름을 키 값을 연결 하는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>This name can then be used to reference the key using the &lt;<ph id="ph1">`KeyName`</ph>&gt; element within the &lt;<ph id="ph2">`KeyInfo`</ph>&gt; element.</source>
          <target state="translated">이 이름을 사용 하 여 키를 참조 하도록 한 다음 사용할 수 있습니다는 &lt;<ph id="ph1">`KeyName`</ph>&gt; 내에서 요소는 &lt;<ph id="ph2">`KeyInfo`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>The same &lt;<ph id="ph1">`CarriedKeyName`</ph>&gt; element value, unlike an ID value, can occur multiple times within a single document.</source>
          <target state="translated">동일한 &lt;<ph id="ph1">`CarriedKeyName`</ph>&gt; 요소 값 ID 값을 달리 단일 문서 내에서 여러 번 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>The value of the key must be the same in all &lt;<ph id="ph1">`EncryptedKey`</ph>&gt; elements identified with the same &lt;<ph id="ph2">`CarriedKeyName`</ph>&gt; name within an XML document.</source>
          <target state="translated">키의 값 모두에 동일 해야 &lt;<ph id="ph1">`EncryptedKey`</ph>&gt; 동일한 식별 되는 요소 &lt;<ph id="ph2">`CarriedKeyName`</ph>&gt; XML 문서 내에서 이름입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier">
          <source>Gets a key identifier for the encrypting key.</source>
          <target state="translated">암호화하는 키의 키 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> that represents the key identifier for the encrypting key.</source>
          <target state="translated">암호화하는 키의 키 식별자를 나타내는 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
          <source>Gets the cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">키를 암호화하는 데 사용되는 암호화 알고리즘을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
          <source>Typically, the value of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A&gt;</ph> property is one of the static constant strings in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A&gt;</ph> 속성의 값은 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> 클래스의 정적 상수 문자열 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
          <source>Gets the encrypted key.</source>
          <target state="translated">암호화된 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the encrypted key.</source>
          <target state="translated">암호화된 키를 포함하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
          <source>The array that is returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A&gt;</ph> method is a clone of the encrypted key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A&gt;</ph> 메서드에서 반환되는 배열은 암호화된 키의 복제본입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified object.</source>
          <target state="translated">이 인스턴스의 키 식별자가 지정된 개체와 동일한지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
          <target state="translated">이 인스턴스의 키 식별자가 지정된 키 식별자 절과 동일한지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="clause" /&gt;</ph> is of type <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="clause" /&gt;</ph> 형식이고 현재 인스턴스와 동일한 암호화된 키, 암호화 방법 및 사용자가 읽을 수 있는 이름을 갖고 있으면 <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="clause" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="clause" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains a key that is encrypted.</source>
          <target state="translated">암호화된 키를 포함하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">키를 암호화하는 데 사용되는 암호화 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
          <source>A user-readable name that is associated with the encrypted key.</source>
          <target state="translated">암호화된 키와 연결된 사용자가 읽을 수 있는 이름입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.</source>
          <target state="translated">이 인스턴스의 키 식별자가 지정한 암호화된 키, 암호화 방법 및 사용자가 읽을 수 있는 이름과 동일한지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="encryptedKey" /&gt;</ph>, <ph id="ph3">&lt;paramref name="encryptionMethod" /&gt;</ph> and <ph id="ph4">&lt;paramref name="carriedKeyName" /&gt;</ph> parameters have the same values returned by the <ph id="ph5">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> method and the <ph id="ph6">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> and the <ph id="ph7">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> properties, respectively; otherwise, <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="encryptedKey" /&gt;</ph>, <ph id="ph3">&lt;paramref name="encryptionMethod" /&gt;</ph> 및 <ph id="ph4">&lt;paramref name="carriedKeyName" /&gt;</ph> 매개 변수의 값이 <ph id="ph5">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> 메서드와 <ph id="ph6">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> 및 <ph id="ph7">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> 속성에서 반환되는 값과 각각 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph8">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
          <source>Returns a string that represents the current object.</source>
          <target state="translated">현재 개체를 나타내는 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
          <source>The current object.</source>
          <target state="translated">현재 개체입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A&gt;</ph> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A&gt;</ph> 메서드는 암호화된 키와 키를 암호화하는 데 사용된 암호화 알고리즘을 포함하는 문자열을 반환합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>