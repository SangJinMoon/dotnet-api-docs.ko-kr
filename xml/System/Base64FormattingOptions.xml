<Type Name="Base64FormattingOptions" FullName="System.Base64FormattingOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ada681aa80278ccaf7a403acc2b2035802e39e9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433154" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Base64FormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Base64FormattingOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Base64FormattingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum Base64FormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class Base64FormattingOptions" />
  <TypeSignature Language="F#" Value="type Base64FormattingOptions = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9792a-101">관련 <see cref="Overload:System.Convert.ToBase64CharArray" /> 및 <see cref="Overload:System.Convert.ToBase64String" /> 메서드가 출력에 줄 바꿈을 삽입할지 여부를 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9792a-101">Specifies whether relevant <see cref="Overload:System.Convert.ToBase64CharArray" /> and <see cref="Overload:System.Convert.ToBase64String" /> methods insert line breaks in their output.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9792a-102"><xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType> 및 <xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType> 메서드 8 비트 부호 없는 정수로 구성 된 배열의 값을 base 64 숫자의 구성 된 문자열 표현으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9792a-102">The <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType> and <xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType> methods convert the value of an array of 8-bit unsigned integers to an equivalent string representation that consists of base 64 digits.</span></span> <span data-ttu-id="9792a-103">문자열 표현을 하나를 포함 하거나 더 많은 줄 바꿈, 캐리지로 줄 바꿈을 정의 되어 있는 리턴 문자 (U + 000d) 뒤에 줄 바꿈 문자 (U + 000A).</span><span class="sxs-lookup"><span data-stu-id="9792a-103">The string representation can contain one or more line breaks, where a line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="9792a-104">줄 바꿈 공백 문자를 base64 인코딩으로 간주 되므로로 인코딩된 문자열을 바이트 배열 다시 e-64로 변환 하는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9792a-104">Because line breaks are considered whitespace characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</span></span> <span data-ttu-id="9792a-105">컨트롤 또는 콘솔 창과 같은 장치에 인코딩된 문자열을 표시할 때 줄 바꿈 하기만 하면 편리 하 게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9792a-105">The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</span></span>  
  
 <span data-ttu-id="9792a-106">None InsertLineBreaks 값은 함께 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9792a-106">The None and InsertLineBreaks values are mutually exclusive.</span></span> <span data-ttu-id="9792a-107">따라서 있지만 <xref:System.Base64FormattingOptions.None?displayProperty=nameWithType> 열거형으로 표시 되는 <xref:System.FlagsAttribute> 특성 것은이 두 값의 비트 조합 수행 하는 의미가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9792a-107">Therefore, although the <xref:System.Base64FormattingOptions.None?displayProperty=nameWithType> enumeration is marked with the <xref:System.FlagsAttribute> attribute, it makes no sense to perform a bitwise combination of these two values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9792a-108">다음 예제에서는 <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> 줄을 삽입 하려면 인수는 InsertLineBreaks와 100 요소 바이트 배열을 인코딩하여 생성 되는 문자열에서 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="9792a-108">The following example calls the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> with a InsertLineBreaks argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 <span data-ttu-id="9792a-109">예제에서 출력으로는 <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> 복원 원본 바이트 배열입니다;을 성공적으로 변환 하는 동안 줄 바꿈 문자가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9792a-109">As the output from the example shows, the <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="InsertLineBreaks">
      <MemberSignature Language="C#" Value="InsertLineBreaks" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Base64FormattingOptions InsertLineBreaks = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Base64FormattingOptions.InsertLineBreaks" />
      <MemberSignature Language="VB.NET" Value="InsertLineBreaks" />
      <MemberSignature Language="C++ CLI" Value="InsertLineBreaks" />
      <MemberSignature Language="F#" Value="InsertLineBreaks = 1" Usage="System.Base64FormattingOptions.InsertLineBreaks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Base64FormattingOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9792a-110">문자열 표현에서 76자마다 줄 바꿈을 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9792a-110">Inserts line breaks after every 76 characters in the string representation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Base64FormattingOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Base64FormattingOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Base64FormattingOptions.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Base64FormattingOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9792a-111">문자열 표현에서 76자마다 줄 바꿈을 삽입하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9792a-111">Does not insert line breaks after every 76 characters in the string representation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>