<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Base64FormattingOptions.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bf1895ccae5afd78294487563647fd47661be95b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf1895ccae5afd78294487563647fd47661be95b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Base64FormattingOptions">
          <source>Specifies whether relevant <ph id="ph1">&lt;see cref="Overload:System.Convert.ToBase64CharArray" /&gt;</ph> and <ph id="ph2">&lt;see cref="Overload:System.Convert.ToBase64String" /&gt;</ph> methods insert line breaks in their output.</source>
          <target state="translated">관련 <ph id="ph1">&lt;see cref="Overload:System.Convert.ToBase64CharArray" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="Overload:System.Convert.ToBase64String" /&gt;</ph> 메서드가 출력에 줄 바꿈을 삽입할지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType&gt;</ph> methods convert the value of an array of 8-bit unsigned integers to an equivalent string representation that consists of base 64 digits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType&gt;</ph> 메서드 8 비트 부호 없는 정수로 구성 된 배열의 값을 base 64 숫자의 구성 된 문자열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The string representation can contain one or more line breaks, where a line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</source>
          <target state="translated">문자열 표현을 하나를 포함 하거나 더 많은 줄 바꿈, 캐리지로 줄 바꿈을 정의 되어 있는 리턴 문자 (U + 000d) 뒤에 줄 바꿈 문자 (U + 000A).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>Because line breaks are considered whitespace characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</source>
          <target state="translated">줄 바꿈 공백 문자를 base64 인코딩으로 간주 되므로로 인코딩된 문자열을 바이트 배열 다시 e-64로 변환 하는 경우 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</source>
          <target state="translated">컨트롤 또는 콘솔 창과 같은 장치에 인코딩된 문자열을 표시할 때 줄 바꿈 하기만 하면 편리 하 게 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The None and InsertLineBreaks values are mutually exclusive.</source>
          <target state="translated">None InsertLineBreaks 값은 함께 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>Therefore, although the <ph id="ph1">&lt;xref:System.Base64FormattingOptions.None?displayProperty=nameWithType&gt;</ph> enumeration is marked with the <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> attribute, it makes no sense to perform a bitwise combination of these two values.</source>
          <target state="translated">따라서 있지만 <ph id="ph1">&lt;xref:System.Base64FormattingOptions.None?displayProperty=nameWithType&gt;</ph> 열거형으로 표시 되는 <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> 특성 것은이 두 값의 비트 조합 수행 하는 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType&gt;</ph> with a InsertLineBreaks argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType&gt;</ph> 줄을 삽입 하려면 인수는 InsertLineBreaks와 100 요소 바이트 배열을 인코딩하여 생성 되는 문자열에서 중단 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>As the output from the example shows, the <ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType&gt;</ph> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</source>
          <target state="translated">예제에서 출력으로는 <ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType&gt;</ph> 복원 원본 바이트 배열입니다;을 성공적으로 변환 하는 동안 줄 바꿈 문자가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Base64FormattingOptions.InsertLineBreaks">
          <source>Inserts line breaks after every 76 characters in the string representation.</source>
          <target state="translated">문자열 표현에서 76자마다 줄 바꿈을 삽입합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Base64FormattingOptions.None">
          <source>Does not insert line breaks after every 76 characters in the string representation.</source>
          <target state="translated">문자열 표현에서 76자마다 줄 바꿈을 삽입하지 않습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>