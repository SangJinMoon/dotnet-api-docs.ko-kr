<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple`5.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52bd6fcdfbecc0ab95c64d6c8c2550070fd64052d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bd6fcdfbecc0ab95c64d6c8c2550070fd64052d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's first component.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's second component.</source>
          <target state="translated">튜플의 두 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's third component.</source>
          <target state="translated">튜플의 세 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's fourth component.</source>
          <target state="translated">튜플의 네 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The type of the tuple's fifth component.</source>
          <target state="translated">튜플의 다섯 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Tuple`5">
          <source>Represents a 5-tuple, or quintuple.</source>
          <target state="translated">5-튜플 또는 다섯을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>A tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">튜플은 특정 수 및 값의 시퀀스를 포함 하는 데이터 구조입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> class represents a 5-tuple, or quintuple, which is a tuple that has five components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 클래스 나타냅니다 5-튜플 또는 quintuple 튜플이 있는 5 개의 구성 요소가 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object by calling either the <ph id="ph2">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> constructor or the static <ph id="ph3">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">인스턴스화할 수 있습니다는 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 호출 하 여 개체는 <ph id="ph2">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> 생성자 또는 정적 <ph id="ph3">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>You can retrieve the value of the tuple's components by using the read-only <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> instance properties.</source>
          <target state="translated">읽기 전용을 사용 하 여 튜플의 구성의 값을 검색할 수 있습니다 <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> 인스턴스 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>Tuples are commonly used in four different ways:</source>
          <target state="translated">튜플의 네 가지 방법으로 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To represent a single set of data.</source>
          <target state="translated">단일 데이터 집합이 나타내려는 경우.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>For example, a tuple can represent a database record, and its components can represent individual fields of the record.</source>
          <target state="translated">예를 들어 튜플을 데이터베이스 레코드를 나타내고 해당 구성 요소 레코드의 개별 필드를 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To provide easy access to, and manipulation of, a data set.</source>
          <target state="translated">및 제공 하기 위해 쉽게 액세스 하는 데이터 집합의 조작 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that contain the names of running backs in American football, the number of games in which they played, and the number of carries, total yards gained, and touchdowns scored during those games.</source>
          <target state="translated">다음 예제에서는 배열을 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 그 게임 중 점수가 매겨진 터치 다운와 숫자 이들이 수행한는 게임 및는 횟수, 총 획득 미터 American football에서의 실행 이름에 포함 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>The array is passed to the <ph id="ph1">`ComputeStatistics`</ph> method, which calculates each running back's number of carries per game, average yards per game, average yards per carry, and average number of touchdowns per attempt.</source>
          <target state="translated">배열에 전달 되는 <ph id="ph1">`ComputeStatistics`</ph> 각 실행 백 당, 게임, 평균 미터 당 게임, 평균 미터 당 수 및 그리고 시도 당 평균 수를 계산 하는 메서드.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To return multiple values from a method without the use of <ph id="ph1">`out`</ph> parameters (in C#) or <ph id="ph2">`ByRef`</ph> parameters (in Visual Basic).</source>
          <target state="translated">메서드에서 사용 하지 않고 여러 값을 반환 하려면 <ph id="ph1">`out`</ph> 매개 변수 (C#) 또는 <ph id="ph2">`ByRef`</ph> 매개 변수 (Visual Basic의 경우).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>For example, the previous example returns its computed statistics, along with the name of the player, in an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects.</source>
          <target state="translated">앞의 예제의 배열에서 플레이어의 이름과 함께 계산된 된 통계를 반환 하는 예를 들어 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>To pass multiple values to a method through a single parameter.</source>
          <target state="translated">값이 여러 개인 단일 매개 변수를 통해 메서드에 전달 하 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>For example, the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> 메서드는 스레드가 시작 시 실행 되는 메서드를 하나의 값을 제공할 수 있는 단일 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`5">
          <source>If you supply a <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object as the method argument, you can supply the thread’s startup routine with five items of data.</source>
          <target state="translated">제공 하는 경우는 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 메서드 인수로 개체에 데이터의 5 항목 스레드 시작 루틴을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's first component.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's second component.</source>
          <target state="translated">튜플의 두 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's third component.</source>
          <target state="translated">튜플의 세 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's fourth component</source>
          <target state="translated">튜플의 네 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The value of the tuple's fifth component.</source>
          <target state="translated">튜플의 다섯 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>You can also use the static <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 5-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated">정적을 사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> 메서드를 명시적으로 구성 요소의 유형을 지정할 필요 없이 5-튜플 개체를 인스턴스화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> method to instantiate a 5-tuple whose first component is of type <ph id="ph2">&lt;xref:System.String&gt;</ph> and its remaining four components are of type <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Tuple.Create%60%605%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%29?displayProperty=nameWithType&gt;</ph> 메서드를 가진 첫 번째 구성 요소가 형식 5-튜플 인스턴스화하 <ph id="ph2">&lt;xref:System.String&gt;</ph> 고 나머지 네 구성 형식이 <ph id="ph3">&lt;xref:System.Int32&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
          <source>This is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">이 다음 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> 클래스 생성자입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">이 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 인스턴스가 지정된 개체와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated"><ph id="ph1">`obj`</ph> 매개 변수는 다음과 같은 경우 현재 인스턴스를 동일한 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object.</source>
          <target state="translated">한 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Its five components are of the same types as the current instance.</source>
          <target state="translated">5 개의 구성 요소는 현재 인스턴스와 동일한 형식의 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Its five components are equal to those of the current instance.</source>
          <target state="translated">5 개의 구성 요소는 현재 인스턴스와 같습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>Equality is determined by the default object equality comparer for each component.</source>
          <target state="translated">일치 여부는 각 구성 요소에 대한 기본 개체 같음 비교 연산자에 따라 결정됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The following example defines an array of 5-tuple objects that contain data about the temperatures of patients in two test groups.</source>
          <target state="translated">다음 예제에서는 두 개의 테스트 그룹에는 환자 온도 대 한 데이터를 포함 하는 5-튜플 개체의 배열을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The first component of the array provides the number of the test group, and the second through fifth components provide the temperatures of a patient at hourly intervals.</source>
          <target state="translated">배열의 첫 번째 구성 요소 테스트 그룹의 수를 제공 하 고 다섯 번째 구성 요소를 통해 두 번째 시간 간격 환자의 온도 제공 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method is called to compare every <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> object with every other <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> 메서드 비교 하는 모든 <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> 개체 마다 다른 <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.Equals(System.Object)">
          <source>The output illustrates that the <ph id="ph1">&lt;xref:System.Tuple%605.Equals%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> only when all five components of the <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects have equal values.</source>
          <target state="translated">출력 하는 들는 <ph id="ph1">&lt;xref:System.Tuple%605.Equals%2A&gt;</ph> 메서드 반환 <ph id="ph2">`true`</ph> 경우에만의 모든 5 개의 구성 요소는 <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> 개체와 같으면 값이 있는 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체에 대한 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's first component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 첫 번째 구성 요소 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's first component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 첫 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">종류를 동적으로 결정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> 두 가지 방법 중 하나에서 구성 요소:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> property.</source>
          <target state="translated">호출 하 여는 <ph id="ph1">`GetType`</ph> 에서 반환 되는 값에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">검색 하 여는 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 을 나타내는 개체는 <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> 개체를 통해 반환 되는 배열에서 첫 번째 요소를 검색 합니다. 해당 <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">다음 예제에서는 배열을 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 구성 요소는 미국, 1990 및 2000에서 인구,이 10 년 동안 population 변경 내용 및 해당 도시의 인구의 변경 사항을 백분율로 상태의 이름을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item1">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">배열에서 반복 하 고 튜플의 각 구성 요소 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's second component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 두 번째 구성 요소 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's second component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 두 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">종류를 동적으로 결정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> 두 가지 방법 중 하나에서 구성 요소:</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">호출 하 여는 <ph id="ph1">`GetType`</ph> 에서 반환 되는 값에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">검색 하 여는 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 을 나타내는 개체는 <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> 개체를 통해 반환 되는 배열에서 두 번째 요소를 검색 합니다. 해당 <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">다음 예제에서는 배열을 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 구성 요소는 미국, 1990 및 2000에서 인구,이 10 년 동안 population 변경 내용 및 해당 도시의 인구의 변경 사항을 백분율로 상태의 이름을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item2">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">배열에서 반복 하 고 튜플의 각 구성 요소 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's third component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 세 번째 구성 요소 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's third component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 세 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">종류를 동적으로 결정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> 두 가지 방법 중 하나에서 구성 요소:</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">호출 하 여는 <ph id="ph1">`GetType`</ph> 에서 반환 되는 값에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">검색 하 여는 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 을 나타내는 개체는 <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> 개체를 통해 반환 되는 배열에서 두 번째 요소를 검색 합니다. 해당 <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">다음 예제에서는 배열을 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 구성 요소는 미국, 1990 및 2000에서 인구,이 10 년 동안 population 변경 내용 및 해당 도시의 인구의 변경 사항을 백분율로 상태의 이름을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item3">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">배열에서 반복 하 고 튜플의 각 구성 요소 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item4">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fourth component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 네 번째 구성 요소 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fourth component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 네 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">종류를 동적으로 결정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> 두 가지 방법 중 하나에서 구성 요소:</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">호출 하 여는 <ph id="ph1">`GetType`</ph> 에서 반환 되는 값에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">검색 하 여는 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 을 나타내는 개체는 <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> 개체를 통해 반환 되는 배열에서 두 번째 요소를 검색 합니다. 해당 <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">다음 예제에서는 배열을 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 구성 요소는 미국, 1990 및 2000에서 인구,이 10 년 동안 population 변경 내용 및 해당 도시의 인구의 변경 사항을 백분율로 상태의 이름을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item4">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">배열에서 반복 하 고 튜플의 각 구성 요소 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.Item5">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fifth component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 다섯 번째 구성 요소 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object's fifth component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 다섯 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>You can dynamically determine the type of the <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">종류를 동적으로 결정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> 두 가지 방법 중 하나에서 구성 요소:</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> property.</source>
          <target state="translated">호출 하 여는 <ph id="ph1">`GetType`</ph> 에서 반환 되는 값에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Tuple%604.Item2%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> object, and retrieving the second element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">검색 하 여는 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 을 나타내는 개체는 <ph id="ph2">&lt;xref:System.Tuple%604&gt;</ph> 개체를 통해 반환 되는 배열에서 두 번째 요소를 검색 합니다. 해당 <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>The following example defines an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects whose components contain the name of a state in the United Dates, its population in 1990 and 2000, its population change in this 10-year period, and the percentage change in its population.</source>
          <target state="translated">다음 예제에서는 배열을 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 개체 구성 요소가 통합 되는 날짜, 1990 및 2000에서 인구,이 10 년 동안 population 변경 내용 및 해당 도시의 인구 변경 비율에는 상태의 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.Item5">
          <source>It then iterates through the array and displays the value of each component in a tuple.</source>
          <target state="translated">배열에서 반복 하 고 튜플의 각 구성 요소 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">현재 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">비교를 위한 사용자 지정 규칙을 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">지정된 비교자를 사용하여 현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">다음 표와 같이 정렬 순서에서 이 인스턴스와 <ph id="ph1">&lt;paramref name="other" /&gt;</ph>의 상대적 위치를 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 음의 정수</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 앞에 오는 경우</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스와 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>의 위치가 정렬 순서에서 같은 경우</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 양의 정수</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 다음에 오는 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection-sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.</source>
          <target state="translated">이 메서드를 직접 호출할 수 있지만 가장 일반적으로 호출한 컬렉션 정렬 포함 하는 메서드 <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> 매개 변수를 컬렉션의 멤버를 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, it is called by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">예를 들어에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> 를 사용 하 여 인스턴스화된 개체는 <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> 정렬 작업에서 사용 하기 위해 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">비교의 기본 목적은 두 개체가 같은지 여부를 결정 하는 경우 하지 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method.</source>
          <target state="translated">두 개체가 같은지 여부를 확인 하려면 호출 된 <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that contain career statistical data for running backs in American professional football.</source>
          <target state="translated">다음 예제에서는 배열을 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 경력 American 전문 football에서 실행 되 고 백업에 대 한 통계 데이터를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The 5-tuple's components consist of the player's name, the number of games in which he played, the number of carries or attempts, the total number of yards gained, and the number of touchdowns scored.</source>
          <target state="translated">5 튜플 구성 요소가 플레이어의 이름, 게임의 수로 구성 플레이, 개수, 수행 또는 시도 미터의 총 획득 한 수가 많은 터치 다운 점수입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">이 예제에서는 정렬 되지 않은 순서로 배열에 있는 각 튜플의 구성 요소를 표시 하 여 배열에 정렬 하 고 다음 호출 <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> 각 튜플은 정렬 된 순서로 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To sort the array, the example defines a generic <ph id="ph1">`YardsGained`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> interface and sorts the <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects in descending order by the value of their fourth component (yards gained) rather than by their first component.</source>
          <target state="translated">배열을 정렬 하 여이 예제에서는 정의 제네릭 <ph id="ph1">`YardsGained`</ph> 구현 하는 클래스는 <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> 인터페이스와 정렬은 <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> 의 첫 번째 구성 요소가 아니라의 네 번째 구성 요소 (미터 얻은)의 값으로 순서를 내림차순으로 개체입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">이 예제에서는 직접 호출 하지 않는 참고는 <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method for each element in the array.</source>
          <target state="translated">이 메서드를 암시적으로 호출 된 <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> 메서드는 배열의 각 요소에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체가 아닙니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">이 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">두 개체가 같은지 여부를 평가하는 데 사용할 방법을 정의하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">지정된 비교 메서드를 기반으로 현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 인스턴스가 지정된 개체와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph> object whose components are of the same types as the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> 경우에 구현이 호출 될 <ph id="ph2">`other`</ph> 않습니다 <ph id="ph3">`null`</ph>, 캐스팅 (C#) 또는 변환 (Visual Basic)에서는 성공적으로 하나일 수 있습니다는 <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph> 구성 요소가 현재 인스턴스와 동일한 형식의 개체입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> method first passes the <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> values of the <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects to be compared to the <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29&gt;</ph> 메서드가 첫 번째 전달에서 <ph id="ph2">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph> 값은 <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> 비교할 개체는 <ph id="ph4">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>If this method call returns <ph id="ph1">`true`</ph>, the method is called again and passed the <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph> values of the two <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> objects.</source>
          <target state="translated">이 메서드 호출에서 반환 하는 경우 <ph id="ph1">`true`</ph>, 메서드가 다시 호출 되 고 전달 된 <ph id="ph2">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph> 두 값 <ph id="ph3">&lt;xref:System.Tuple%605&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This continues until the method call returns <ph id="ph1">`false`</ph> when it compares a specific pair of <ph id="ph2">`Item`</ph> values, or the two <ph id="ph3">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> values are passed to the method.</source>
          <target state="translated">메서드 호출이 반환 될 때까지이 과정이 계속 <ph id="ph1">`false`</ph> 의 특정 쌍을 비교할 때 <ph id="ph2">`Item`</ph> 값 또는 두 <ph id="ph3">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> 값이 메서드에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines a <ph id="ph1">`DoubleComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`DoubleComparer`</ph> 인터페이스를 구현하는 <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The example instantiates two <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects by using a random number generator to populate their second through fifth components, casts the first instance to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface, and then uses a <ph id="ph3">`DoubleComparer`</ph> object to test the two <ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph> objects for approximate equality.</source>
          <target state="translated">이 예제에서는 두 개를 인스턴스화하고 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 난수 생성기의 2에서 다섯 번째 구성 요소를 채우는 데 사용 하 여 개체 캐스팅에 첫 번째 인스턴스는 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 인터페이스를 사용 하 여는 <ph id="ph3">`DoubleComparer`</ph> 두테스트에개체<ph id="ph4">&lt;xref:System.Tuple%605&gt;</ph>대략적으로 동일한 개체입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> 메서드를 사용하여 현재 <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 해시 코드를 계산하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object by using a specified computation method.</source>
          <target state="translated">지정된 계산 메서드를 사용하여 현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체에 대한 해시 코드를 계산합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">메서드는 단순히 한 호출을 래핑합니다는 <ph id="ph1">`comparer`</ph> 개체의 <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">두에 대 한 해시 코드를 계산 하는 데 사용 되는 알고리즘 같은 해시 코드를 반환 해야 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 를 동일한 것으로 간주 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">현재 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체를 지정된 개체와 비교하고 현재 개체가 정렬 순서에 지정된 개체보다 이전인지, 이후인지 또는 같은 위치인지를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">다음 표와 같이 정렬 순서에서 이 인스턴스와 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>의 상대적 위치를 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 음의 정수</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 앞에 오는 경우</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스와 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>의 위치가 정렬 순서에서 같은 경우</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 양의 정수</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 다음에 오는 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> class.</source>
          <target state="translated">이 메서드는 제공 된 <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> 에 대 한 구현을 <ph id="ph2">&lt;xref:System.Tuple%605&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">메서드를 직접 호출할 수 있지만 가장 일반적으로 컬렉션 정렬의 경우 기본 오버 로드에 의해 호출 됩니다 메서드 같은 <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, 컬렉션의 멤버 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> 정렬 작업에서 사용 하기 위해 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">비교의 기본 목적은 두 개체가 같은지 여부를 결정 하는 경우 하지 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">두 개체가 같은지 여부를 확인 하려면 호출 된 <ph id="ph1">&lt;xref:System.Tuple%605.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph> method uses the default object  comparer to compare each component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%28System.Object%29&gt;</ph> 메서드 기본 개체 비교 연산자를 사용 하 여 각 구성 요소를 비교 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> objects that contain career statistics for running backs in American professional football.</source>
          <target state="translated">다음 예제에서는 배열을 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> American 전문 football에서 실행 되 고 백업에 대 한 경력 통계를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The five components consist of the player's name, the number of games in which he played, the number of carries or attempts, the total number of yards gained, and the number of touchdowns scored.</source>
          <target state="translated">플레이어의 이름, 게임 수가 5 개의 요소로 구성 됩니다 플레이, 개수, 수행 또는 시도 미터의 총 획득 한 수가 많은 터치 다운 점수입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> to display each tuple in sorted order.</source>
          <target state="translated">이 예제에서는 정렬 되지 않은 순서로 배열에 있는 각 튜플의 구성 요소를 표시 하 여 배열에 정렬 하 고 다음 호출 <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> 각 튜플은 정렬 된 순서로 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>The output shows that the array has been sorted by name, which is the first component.</source>
          <target state="translated">출력 배열에는 첫 번째 구성 요소 이름으로 정렬 된 것을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">이 예제에서는 직접 호출 하지 않는 참고는 <ph id="ph1">&lt;xref:System.Tuple%605.System%23IComparable%23CompareTo%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> method for each element in the array.</source>
          <target state="translated">이 메서드를 암시적으로 호출 된 <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> 메서드는 배열의 각 요소에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체가 아닙니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 요소의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 4.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>의 범위는 0~4일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 요소의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">지정한 위치에 있는 <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> 속성은 명시적 인터페이스 구현.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">를 호출 하려면 캐스팅 하거나 변환 해야 합니다는 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> 인터페이스 개체입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 4.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작거나 4보다 큽니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>의 요소 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>5, the number of elements in a <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 요소는 5개입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%605.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> 속성은 명시적 인터페이스 구현.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`5.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">를 호출 하려면 캐스팅 하거나 변환 해야 합니다는 <ph id="ph1">&lt;xref:System.Tuple%605&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> 인터페이스 개체입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 인스턴스의 값을 나타내는 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Tuple`5.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Tuple`5" /&gt;</ph> 개체의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, <ph id="ph1">`Item5`</ph>), where <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>, <bpt id="p8">*</bpt>Item4<ept id="p8">*</ept>, and <ph id="ph2">`Item5`</ph> represent the values of the <ph id="ph3">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">이 메서드에서 반환 된 문자열은 형식 (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, <bpt id="p4">*</bpt>Item4<ept id="p4">*</ept>, <ph id="ph1">`Item5`</ph>) 여기서 <bpt id="p5">*</bpt>Item1<ept id="p5">*</ept>, <bpt id="p6">*</bpt>Item2<ept id="p6">*</ept>, <bpt id="p7">*</bpt>Item3<ept id="p7">*</ept>, <bpt id="p8">*</bpt>Item4<ept id="p8">*</ept>, 및 <ph id="ph2">`Item5`</ph> 의 값을 나타냅니다는 <ph id="ph3">&lt;xref:System.Tuple%605.Item1%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Tuple%605.Item2%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Tuple%605.Item3%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Tuple%605.Item4%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Tuple%605.Item5%2A&gt;</ph> 속성을 각각.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>If any of the property values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">속성 값 중 하나라도 <ph id="ph1">`null`</ph>로 표시 됩니다 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Tuple%605.ToString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`5.ToString">
          <source>It displays an array of 5-tuple objects that contain the name of a state in the United States, its population in 1990 and 2000, its population change in this 10-year period, and the annual rate of population change.</source>
          <target state="translated">미국 1990 및 2000에서 인구 상태의 이름을 포함 하는 5-튜플 개체의 배열을 표시이 10 년 기간 및 인구 연간 요금이 인구 변화 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>