<Type Name="Activator" FullName="System.Activator">
  <TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d6267-101">개체의 형식을 로컬 또는 원격으로 만들거나 기존 원격 개체에 대한 참조를 얻는 메서드를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span></span> <span data-ttu-id="d6267-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-103"><xref:System.Activator.CreateInstance%2A> 메서드는 지정 된 인수와 가장 일치 하는 생성자를 호출 하 여 어셈블리에 정의 된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="d6267-104">인수 없이 지정 된 매개 변수, 즉, 기본 생성자를 사용 하는 생성자를 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-104">If no arguments are specified, the constructor that takes no parameters, that is, the default constructor, is invoked.</span></span>  
  
 <span data-ttu-id="d6267-105">검색 하 고 생성자를; 호출 충분 한 권한이 있어야 합니다. 그렇지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="d6267-106">기본적으로 public 생성자만 생성자를 검색 하는 동안 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="d6267-107">없는 생성자 나 기본 생성자를 찾을 수 있는 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-107">If no constructor or default constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="d6267-108">바인더 매개 변수는 적절 한 생성자에 대 한 어셈블리를 검색 하는 개체를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="d6267-109">사용자 고유의 바인더 및 검색 기준을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="d6267-110">지정 된 바인더가 기본 바인더가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="d6267-111">자세한 내용은 <xref:System.Reflection.Binder?displayProperty=nameWithType> 및 <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d6267-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="d6267-112">증명 매개 변수는 생성자에 대 한 권한과 보안 정책에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="d6267-113">자세한 내용은 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d6267-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="d6267-114">로컬 또는 원격 사이트에는 형식의 인스턴스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="d6267-115">유형을 원격으로 만든 경우 활성화 특성 매개 변수는 원격 사이트의 URI를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="d6267-116">원격 사이트에 도달 하기 전에 인스턴스를 만드는 호출 중개 사이트 통과 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="d6267-117">다른 활성화 특성 환경 또는 호출 원격 및 중간 사이트에서 작동 하는 컨텍스트를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="d6267-118">인스턴스를 로컬로 만들면 해당 개체에 대 한 참조가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="d6267-119">인스턴스를 원격으로 만든 경우 프록시에 대 한 참조가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="d6267-120">로컬 개체를 마치 처럼 프록시를 통해 원격 개체 조작 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="d6267-121"><xref:System.Activator.GetObject%2A> 메서드는 현재 실행 중인 원격 개체, 서버 활성 잘 알려진 개체 또는 XML 웹 서비스 프록시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="d6267-122">즉, 채널은 연결 매체를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="d6267-123">자세한 내용은 <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d6267-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="d6267-124">어셈블리는 형식 정의 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="d6267-125"><xref:System.Activator.CreateInstance%2A> 메서드는 현재 실행 중인 어셈블리에서 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="d6267-126"><xref:System.Activator.CreateInstanceFrom%2A> 메서드는 어셈블리를 포함 하는 파일에서 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="d6267-127"><xref:System.Activator.CreateComInstanceFrom%2A> 메서드는 어셈블리를 포함 하는 파일에서 COM 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6267-128">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Activator> 런타임에 동적으로 개체를 생성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d6267-129">이름이 지정된 COM 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-129">Creates an instance of the COM object whose name is specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="d6267-130">형식 <c>typeName</c>이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-130">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-131">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-131">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="d6267-132">명명된 어셈블리 파일 및 기본 생성자를 사용하여 이름이 지정된 COM 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-133">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-133">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-134">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="d6267-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> 의 값을 가진 특성 `true` 에 적용 해야 명시적으로 나 기본적으로 COM 형식을 하므로 <xref:System.Activator.CreateComInstanceFrom%2A> 메서드는 해당 형식의 인스턴스를 만들 수 있습니다, 그렇지 않으면 <xref:System.TypeLoadException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="d6267-136">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하십시오.는 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 및 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-137">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], 만들 호출자에 게 부여 된 경우이 메서드를 사용할 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-138">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-139">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-140"><paramref name="typeName" /> 또는 <paramref name="assemblyName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-140"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="d6267-141">COM을 통해 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-141">An instance cannot be created through COM.</span></span>  
  
 <span data-ttu-id="d6267-142">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-142">-or-</span></span>  
  
 <span data-ttu-id="d6267-143"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-143"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-144">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-144">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-145"><paramref name="assemblyName" />이 없거나 로드하려는 모듈이 파일 이름 확장명을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-145"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-146">추상 클래스의 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-146">Cannot create an instance of an abstract class.</span></span>  
  
 <span data-ttu-id="d6267-147">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-147">-or-</span></span>  
  
 <span data-ttu-id="d6267-148">이 멤버가 런타임에 바인딩된 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-148">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6267-149">호출자가 <see cref="T:System.MarshalByRefObject" />에서 상속되지 않는 개체에 대한 활성화 특성을 제공할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-149">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d6267-150"><paramref name="assemblyName" />가 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-150"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-151">권한 부여 설정에 관계 없이 public이 아닌 형식에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-151">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="d6267-152">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-152">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="d6267-153">형식 <c>typeName</c>이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-153">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-154">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-154">The name of the preferred type.</span></span></param>
        <param name="hashValue"><span data-ttu-id="d6267-155">계산된 해시 코드의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-155">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="d6267-156">파일을 해시하고 강력한 이름을 생성하는 데 사용되는 해시 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-156">The hash algorithm used for hashing files and generating the strong name.</span></span></param>
        <summary><span data-ttu-id="d6267-157">명명된 어셈블리 파일 및 기본 생성자를 사용하여 이름이 지정된 COM 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-157">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-158">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-158">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-159">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-159">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="d6267-160">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> 의 값을 가진 특성 `true` 에 적용 해야 명시적으로 나 기본적으로 COM 형식을 하므로 <xref:System.Activator.CreateComInstanceFrom%2A> 메서드는 해당 형식의 인스턴스를 만들 수 있습니다, 그렇지 않으면 <xref:System.TypeLoadException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-160">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="d6267-161">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하십시오.는 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 및 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-161">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-162">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], 만들 호출자에 게 부여 된 경우이 메서드를 사용할 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-162">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-163">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-163">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-164">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-164">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-165"><paramref name="typeName" /> 또는 <paramref name="assemblyName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-165"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d6267-166"><paramref name="assemblyName" />가 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-166"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="d6267-167">어셈블리 또는 모듈이 서로 다른 두 개의 증거로 두 번 로드되거나 어셈블리 이름이 MAX_PATH 문자보다 긴 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-167">An assembly or module was loaded twice with two different evidences, or the assembly name is longer than MAX_PATH characters.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-168"><paramref name="assemblyName" />이 없거나 로드하려는 모듈이 파일 이름 확장명을 지정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-168"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d6267-169"><paramref name="assemblyName" />을 찾았지만 로드할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-169"><paramref name="assemblyName" /> is found but cannot be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-170"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-170"><paramref name="assemblyName" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6267-171">"file://"로 시작하지 않는 코드베이스가 필수 <see langword="WebPermission" /> 없이 지정된 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-171">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="d6267-172">COM을 통해 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-172">An instance cannot be created through COM.</span></span>  
  
 <span data-ttu-id="d6267-173">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-173">-or-</span></span>  
  
 <span data-ttu-id="d6267-174"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-174"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-175">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-175">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-176">추상 클래스의 인스턴스를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-176">An instance of an abstract class cannot be created.</span></span>  
  
 <span data-ttu-id="d6267-177">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-177">-or-</span></span>  
  
 <span data-ttu-id="d6267-178">이 멤버가 런타임에 바인딩된 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-178">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6267-179">호출자가 <see cref="T:System.MarshalByRefObject" />에서 상속되지 않는 개체에 대한 활성화 특성을 제공할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-179">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-180">권한 부여 설정에 관계 없이 public이 아닌 형식에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-180">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="d6267-181">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-181">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d6267-182">"file://"로 시작 하는 URI 읽기 위해입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-182">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="d6267-183">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d6267-183">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="d6267-184">"file://"로 시작 하지 않는 URI를 읽는 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-184">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d6267-185">지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-185">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="d6267-186">만들 개체를 지정하는 활성화 컨텍스트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-186">An activation context object that specifies the object to create.</span></span></param>
        <summary><span data-ttu-id="d6267-187">지정된 <see cref="T:System.ActivationContext" /> 개체에서 지정하는 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-187">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span></span></summary>
        <returns><span data-ttu-id="d6267-188">새로 만든 개체에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-188">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-189">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-189">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="d6267-190">활성화 컨텍스트는 도메인 정책을 설정 하 고 응용 프로그램 기반 보안 모델을 제공 하기 매니페스트 기반 활성화 하는 동안 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-190">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="d6267-191"><xref:System.ActivationContext> 클래스를 포함 한 <xref:System.ApplicationIdentity> 응용 프로그램 매니페스트에 대 한 액세스를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-191">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="d6267-192">자세한 내용은 <xref:System.Security.Policy.ApplicationSecurityManager> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d6267-192">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d6267-193">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-193">The type of object to create.</span></span></param>
        <summary><span data-ttu-id="d6267-194">해당 형식의 기본 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-194">Creates an instance of the specified type using that type's default constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-195">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-195">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-196">실행 될 생성자는 액세스할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-196">The constructor to be invoked must be accessible.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-197">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드를 사용 하 여 호출자에 게 부여 된 경우 public이 아닌 형식에 액세스할 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-197">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-198">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-198">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-199">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-199">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6267-200">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Activator.CreateInstance%28System.Type%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-200">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="d6267-201">여러 다른 종류의 인스턴스가 만들어지는 하 고 기본값으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-201">Instances of several different types are created and their default values are displayed.</span></span>  
  
 [!code-cpp[ActivatorX#4](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp#4)]
 [!code-csharp[ActivatorX#4](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs#4)]
 [!code-vb[ActivatorX#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-202"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-202"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d6267-203"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-203"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
 <span data-ttu-id="d6267-204">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-204">-or-</span></span>  
  
 <span data-ttu-id="d6267-205"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-205"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-206"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-206"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
 <span data-ttu-id="d6267-207">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-207">-or-</span></span>  
  
 <span data-ttu-id="d6267-208"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-208">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-209">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-209">-or-</span></span>  
  
 <span data-ttu-id="d6267-210"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-210">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-211">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-211">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="d6267-212">[Windows 스토어 앱용 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 또는 [이식 가능한 클래스 라이브러리](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)에서 대신 기본 클래스 예외 <see cref="T:System.MemberAccessException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-212">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="d6267-213">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-213">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-214">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-214">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-215"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-215">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="d6267-216">[Windows 스토어 앱용 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 또는 [이식 가능한 클래스 라이브러리](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)에서 대신 기본 클래스 예외 <see cref="T:System.MissingMemberException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-216">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="d6267-217">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-217">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="d6267-218"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-218"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-219"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-219"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-220">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-220">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-221">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-221">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-222">해당 권한 부여 설정에 관계 없이 public이 아닌 형식에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-222">for accessing nonpublic types regardless of their grant sets.</span></span> <span data-ttu-id="d6267-223">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-223">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="d6267-224">만들 개체를 지정하는 활성화 컨텍스트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-224">An activation context object that specifies the object to create.</span></span></param>
        <param name="activationCustomData"><span data-ttu-id="d6267-225">사용자 지정 활성화 데이터가 포함된 유니코드 문자열의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-225">An array of Unicode strings that contain custom activation data.</span></span></param>
        <summary><span data-ttu-id="d6267-226">지정된 사용자 지정 활성화 데이터로 활성화되며 지정된 <see cref="T:System.ActivationContext" /> 개체에서 지정하는 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-226">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span></span></summary>
        <returns><span data-ttu-id="d6267-227">새로 만든 개체에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-227">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-228">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-228">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="d6267-229">활성화 컨텍스트는 도메인 정책을 설정 하 고 응용 프로그램 기반 보안 모델을 제공 하기 매니페스트 기반 활성화 하는 동안 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-229">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="d6267-230"><xref:System.ActivationContext> 클래스를 포함 한 <xref:System.ApplicationIdentity> 응용 프로그램 매니페스트에 대 한 액세스를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-230">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="d6267-231">자세한 내용은 <xref:System.Security.Policy.ApplicationSecurityManager> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d6267-231">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="d6267-232"><c>typeName</c>이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-232">The name of the assembly where the type named <c>typeName</c> is sought.</span></span> <span data-ttu-id="d6267-233"><c>assemblyName</c>이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-233">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-234">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-234">The fully qualified name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="d6267-235">명명된 어셈블리 및 기본 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-235">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-236">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-236">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-237">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 래핑을 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-237">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="d6267-238">`assemblyName` 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-238">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="d6267-239">경로 또는 파일 확장명이 없는 어셈블리의 단순한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-239">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="d6267-240">예를 들어 지정 `TypeExtensions` 경로 이름을 가진.\bin\TypeExtensions.dll은 어셈블리에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-240">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="d6267-241">단순한 이름, 버전, culture 및 공개 키 토큰; 구성 된 서명된 된 어셈블리의 전체 이름 예를 들어 "TypeExtensions, Version = 1.0.0.0, Culture = neutral, PublicKeyToken = 181869f2f7435b51"입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-241">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="d6267-242">공용 언어 런타임을 식별 하 고 어셈블리를 로드 하는 방법에 대 한 자세한 내용은 참조 하십시오. [런타임에서 어셈블리를 찾는 방법을](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-242">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span> <span data-ttu-id="d6267-243">어셈블리 위치를 정의 하는 응용 프로그램 구성 파일을 사용 하는 방법은 참조 하십시오. [어셈블리의 위치 지정](~/docs/framework/configure-apps/specify-assembly-location.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-243">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](~/docs/framework/configure-apps/specify-assembly-location.md).</span></span> <span data-ttu-id="d6267-244">경우 `assemblyName` 발견 되 면 기본 컨텍스트에 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-244">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-245">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], 만들 호출자에 게 부여 된 경우이 메서드를 사용할 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-245">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-246">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-246">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-247">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-247">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6267-248">다음 예제에서는 클래스를 정의 `Person` 라는 어셈블리에서 `PersonInfo`합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-248">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="d6267-249">`Person` 클래스에 그 중 하나는 매개 변수가 없는 두 명의 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-249">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="d6267-250">다음 예제에서는 <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> 메서드를 인스턴스화하는 `Person` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-250">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="d6267-251">프로젝트에 추가할 PersonInfo.dll에 대 한 참조가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-251">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="d6267-252">때문에 <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> 메서드 호출의 `Person` 클래스 기본 생성자는 예제에 값을 할당 해당 `Name` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-252">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class default constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="d6267-253">그러나 <xref:System.Activator.CreateInstance%2A> 시스템 경계를 이동 하는 또는 디자인 타임에 알려지지 않은 형식을 인스턴스화하지 자주 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-253">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="d6267-254">이 경우 프로젝트에 어셈블리에 대 한 참조를 포함할 수 없습니다 및 형식의 멤버에 대 한 초기 바인딩 호출을 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-254">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="d6267-255">이 제한을 해결 하려면 다음 예제에서는 <xref:System.Activator.CreateInstance%2A> 메서드 값을 할당 하기 위해 리플렉션과 함께 `Person` 개체의 `Name` 속성의 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-255">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-256"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-256"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-257">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-257">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-258"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-258"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-259"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-259"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-260">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-260">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-261">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-261">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-262">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-262">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-263"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-263">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6267-264"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-264">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-265"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-265"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-266">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-266">-or-</span></span>  
  
 <span data-ttu-id="d6267-267">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-267">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-268">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-268">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d6267-269">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-269">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="d6267-270">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-270">-or-</span></span>  
  
 <span data-ttu-id="d6267-271">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-271">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-272">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-272">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-273">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-273">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-274">권한 부여 설정에 관계 없이 public이 아닌 형식에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-274">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="d6267-275">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-275">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d6267-276">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-276">The type of object to create.</span></span></param>
        <param name="nonPublic">
          <span data-ttu-id="d6267-277">public 또는 public이 아닌 기본 생성자가 일치할 수 있으면 <see langword="true" />이고, public 기본 생성자만 일치할 수 있으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-277"><see langword="true" /> if a public or nonpublic default constructor can match; <see langword="false" /> if only a public default constructor can match.</span></span></param>
        <summary><span data-ttu-id="d6267-278">해당 형식의 기본 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-278">Creates an instance of the specified type using that type's default constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-279">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-279">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d6267-280">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], 호출자에 게 부여 된 경우 public이 아닌 형식과 멤버를 액세스 하려면이 메서드를 사용할 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식과 멤버를 포함 하는 어셈블리의 권한 부여 집합 제한 되는 경우 호출자의를 설정 또는 해당 하위 집합을 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-280">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-281">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-281">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-282">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-282">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-283"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-283"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d6267-284"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-284"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
 <span data-ttu-id="d6267-285">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-285">-or-</span></span>  
  
 <span data-ttu-id="d6267-286"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-286"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-287"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-287"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
 <span data-ttu-id="d6267-288">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-288">-or-</span></span>  
  
 <span data-ttu-id="d6267-289"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-289">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-290">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-290">-or-</span></span>  
  
 <span data-ttu-id="d6267-291"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-291">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-292">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-292">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-293">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-293">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-294">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-294">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-295"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-295">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-296">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-296">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="d6267-297"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-297"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-298"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-298"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-299">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-299">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-300">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-300">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-301">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-301">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="d6267-302">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-302">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d6267-303">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-303">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-304">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-304">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-305"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-305">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <summary><span data-ttu-id="d6267-306">지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-306">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-307">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-307">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-308">실행 될 생성자에 액세스할 수 있어야 하며 지정 된 인수 목록과 가장 구체적으로 일치를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-308">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-309">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드를 사용 하 여 호출자에 게 부여 된 경우 public이 아닌 형식에 액세스할 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-309">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-310">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-310">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-311">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-311">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6267-312">다음 예제에서는 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> 만드는 메서드를 한 <xref:System.String> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-312">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="d6267-313">호출 된 <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 생성자를 인스턴스화하는 열 네 번째 위치에서 시작 하는 문자 배열에서 10 개의 요소를 포함 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-313">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs#5)]
 [!code-vb[System.Activator.CreateInstance#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb#5)]  
  
 <span data-ttu-id="d6267-314">다음 예제에서는 가변된 배열 요소가에 전달 될 인수는 <xref:System.String> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-314">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="d6267-315">이 예제에는 다음에 각 배열을 전달는 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> 메서드를 호출 하는 문자열을 적절 한 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-315">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs#4)]
 [!code-vb[System.Activator.CreateInstance#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-316"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-316"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d6267-317"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-317"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
 <span data-ttu-id="d6267-318">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-318">-or-</span></span>  
  
 <span data-ttu-id="d6267-319"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-319"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-320"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-320"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
 <span data-ttu-id="d6267-321">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-321">-or-</span></span>  
  
 <span data-ttu-id="d6267-322"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-322">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-323">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-323">-or-</span></span>  
  
 <span data-ttu-id="d6267-324"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-324">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
 <span data-ttu-id="d6267-325">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-325">-or-</span></span>  
  
 <span data-ttu-id="d6267-326"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-326">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-327">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-327">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="d6267-328">[Windows 스토어 앱용 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 또는 [이식 가능한 클래스 라이브러리](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)에서 대신 기본 클래스 예외 <see cref="T:System.MemberAccessException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-328">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="d6267-329">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-329">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-330">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-330">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-331"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-331">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="d6267-332">[Windows 스토어 앱용 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 또는 [이식 가능한 클래스 라이브러리](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)에서 대신 기본 클래스 예외 <see cref="T:System.MissingMemberException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-332">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="d6267-333">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-333">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="d6267-334"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-334"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-335"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-335"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-336">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-336">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-337">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-337">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-338">권한 부여 설정에 관계 없이 public이 아닌 형식에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-338">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="d6267-339">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-339">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="d6267-340"><c>typeName</c>이라는 형식이 만들어지는 원격 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-340">The remote domain where the type named <c>typeName</c> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="d6267-341"><c>typeName</c>이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-341">The name of the assembly where the type named <c>typeName</c> is sought.</span></span> <span data-ttu-id="d6267-342"><c>assemblyName</c>이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-342">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-343">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-343">The fully qualified name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="d6267-344">명명된 어셈블리 및 기본 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-344">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and default constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-345">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-345">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-346">사용 하 여 <xref:System.Activator.CreateInstance%2A> 코드를 실행할 보안 사용 권한이 제한 된 응용 프로그램 도메인에서 호스트를 필요로 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="d6267-346">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="d6267-347">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 래핑을 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-347">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-348">이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 를 직접 실행 호출자에 게 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-348">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-349"><paramref name="typeName" /> 또는 <paramref name="domain" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-349"><paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-350">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-350">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-351"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-351"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-352"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-352"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-353">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-353">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-354">추상 형식의 인스턴스를 만들 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-354">Cannot create an instance of an abstract type.</span></span>  
  
 <span data-ttu-id="d6267-355">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-355">-or-</span></span>  
  
 <span data-ttu-id="d6267-356">이 멤버가 런타임에 바인딩된 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-356">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-357">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-357">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-358"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-358">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6267-359"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-359">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-360"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-360"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-361">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-361">-or-</span></span>  
  
 <span data-ttu-id="d6267-362">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-362">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-363">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-363">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d6267-364">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-364">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="d6267-365">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-365">-or-</span></span>  
  
 <span data-ttu-id="d6267-366">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-366">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-367">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-367">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-368">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-368">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-369">모든 형식 멤버에 대 한 작업을 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-369">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="d6267-370">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-370">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d6267-371">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-371">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d6267-372">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-372">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="d6267-373"><c>typeName</c>이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-373">The name of the assembly where the type named <c>typeName</c> is sought.</span></span> <span data-ttu-id="d6267-374"><c>assemblyName</c>이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-374">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-375">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-375">The fully qualified name of the preferred type.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-376">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-376">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-377">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-377">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-378">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-378">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-379">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-379">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-380">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-380">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="d6267-381">명명된 어셈블리 및 기본 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-381">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-382">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-382">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-383">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 래핑을 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-383">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-384">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], 만들 호출자에 게 부여 된 경우이 메서드를 사용할 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식의 권한 부여 집합은 해당 하위 집합 또는 호출자의 권한 부여 집합으로 제한 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="d6267-384">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-385">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-385">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-386">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-386">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-387"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-387"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-388">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-388">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-389"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-389"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-390"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-390"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-391">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-391">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-392">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-392">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-393"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-393">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6267-394"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-394">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-395">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-395">-or-</span></span>  
  
 <span data-ttu-id="d6267-396"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-396"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
 <span data-ttu-id="d6267-397">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-397">-or-</span></span>  
  
 <span data-ttu-id="d6267-398"><paramref name="activationAttributes" />가 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span><span class="sxs-lookup"><span data-stu-id="d6267-398"><paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span></span>  
  
 <span data-ttu-id="d6267-399">배열이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-399">array.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-400"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-400"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-401">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-401">-or-</span></span>  
  
 <span data-ttu-id="d6267-402">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-402">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-403">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-403">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d6267-404">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-404">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="d6267-405">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-405">-or-</span></span>  
  
 <span data-ttu-id="d6267-406">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-406">The assembly name or code base is invalid.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-407"><paramref name="activationAttributes" />에 지정된 대상에서 원격 활성화를 시도할 때 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-407">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-408">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-408">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-409">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-409">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-410">권한 부여 설정에 관계 없이 public이 아닌 형식에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-410">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="d6267-411">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-411">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d6267-412">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-412">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-413">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-413">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-414"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-414">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-415">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-415">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-416">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-416">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-417">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-417">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-418">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-418">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-419">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-419">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="d6267-420">지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-420">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-421">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-421">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-422">실행 될 생성자에 액세스할 수 있어야 하며 지정 된 인수 목록과 가장 구체적으로 일치를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-422">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-423">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드를 사용 하 여 호출자에 게 부여 된 경우 public이 아닌 형식에 액세스할 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식이 포함 된 어셈블리의 권한 부여 집합은 호출자의 권한 부여로 제한 됩니다 설정 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-423">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-424">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-424">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-425">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-425">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-426"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-426"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d6267-427"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-427"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
 <span data-ttu-id="d6267-428">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-428">-or-</span></span>  
  
 <span data-ttu-id="d6267-429"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-429"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-430"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-430"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
 <span data-ttu-id="d6267-431">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-431">-or-</span></span>  
  
 <span data-ttu-id="d6267-432"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-432">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-433">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-433">-or-</span></span>  
  
 <span data-ttu-id="d6267-434"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-434"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
 <span data-ttu-id="d6267-435">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-435">-or-</span></span>  
  
 <span data-ttu-id="d6267-436"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-436">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
 <span data-ttu-id="d6267-437">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-437">-or-</span></span>  
  
 <span data-ttu-id="d6267-438"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-438">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-439">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-439">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-440">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-440">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-441">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-441">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-442"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-442">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-443">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-443">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="d6267-444"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-444"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-445"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-445"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-446">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-446">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-447">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-447">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-448">권한 부여 설정에 관계 없이 public이 아닌 형식에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-448">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="d6267-449">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-449">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d6267-450">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-450">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d6267-451"><c>type</c> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-451">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span></span> <span data-ttu-id="d6267-452"><c>bindingAttr</c>이 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-452">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="d6267-453"><c>bindingAttr</c> 및 <c>args</c>를 사용하고 <c>type</c> 생성자를 식별하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-453">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span></span> <span data-ttu-id="d6267-454"><c>바인더</c>가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-454">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-455">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-455">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-456"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-456">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d6267-457"><c>type</c> 생성자에 대해 선언된 공식적인 형식에 <c>args</c>를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-457">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span></span> <span data-ttu-id="d6267-458"><c>culture</c>가 <see langword="null" />인 경우 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-458">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="d6267-459">지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-459">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-460">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-460">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-461">실행 될 생성자는 지정 된 지정 된 바인더와 바인딩 특성의 제약 조건 인수 목록과 가장 구체적으로 일치를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-461">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-462">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], 호출자에 게 부여 된 경우 public이 아닌 형식과 멤버를 액세스 하려면이 메서드를 사용할 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식과 멤버를 포함 하는 어셈블리의 권한 부여 집합 제한 되는 경우 호출자의를 설정 또는 해당 하위 집합을 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-462">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-463">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-463">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-464">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-464">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-465"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-465"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d6267-466"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-466"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
 <span data-ttu-id="d6267-467">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-467">-or-</span></span>  
  
 <span data-ttu-id="d6267-468"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-468"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-469"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-469"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
 <span data-ttu-id="d6267-470">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-470">-or-</span></span>  
  
 <span data-ttu-id="d6267-471"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-471">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-472">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-472">-or-</span></span>  
  
 <span data-ttu-id="d6267-473"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-473">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
 <span data-ttu-id="d6267-474">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-474">-or-</span></span>  
  
 <span data-ttu-id="d6267-475"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-475">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-476">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-476">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-477">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-477">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-478">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-478">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-479"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-479">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-480">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-480">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="d6267-481"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-481"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-482"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-482"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-483">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-483">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-484">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-484">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-485">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-485">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="d6267-486">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-486">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d6267-487">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-487">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d6267-488"><c>type</c> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-488">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span></span> <span data-ttu-id="d6267-489"><c>bindingAttr</c>이 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-489">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="d6267-490"><c>bindingAttr</c> 및 <c>args</c>를 사용하고 <c>type</c> 생성자를 식별하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-490">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span></span> <span data-ttu-id="d6267-491"><c>바인더</c>가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-491">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-492">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-492">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-493"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-493">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d6267-494"><c>type</c> 생성자에 대해 선언된 공식적인 형식에 <c>args</c>를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-494">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span></span> <span data-ttu-id="d6267-495"><c>culture</c>가 <see langword="null" />인 경우 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-495">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-496">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-496">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-497">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-497">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-498">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-498">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-499">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-499">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-500">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-500">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="d6267-501">지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-501">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-502">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-502">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-503">실행 될 생성자는 지정 된 지정 된 바인더와 바인딩 특성의 제약 조건 인수 목록과 가장 구체적으로 일치를 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-503">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-504">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], 호출자에 게 부여 된 경우 public이 아닌 형식과 멤버를 액세스 하려면이 메서드를 사용할 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식과 멤버의 권한 부여 집합은 호출자에 게 제한 되는 경우 집합을 부여 합니다. 또는 해당 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-504">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-505">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-505">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-506">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-506">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-507"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-507"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d6267-508"><paramref name="type" />가 <see langword="RuntimeType" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-508"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
 <span data-ttu-id="d6267-509">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-509">-or-</span></span>  
  
 <span data-ttu-id="d6267-510"><paramref name="type" />은 개방형 제네릭 형식(즉, <see cref="P:System.Type.ContainsGenericParameters" /> 속성에서 <see langword="true" /> 반환)입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-510"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-511"><paramref name="type" />이 <see cref="T:System.Reflection.Emit.TypeBuilder" />일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-511"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
 <span data-ttu-id="d6267-512">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-512">-or-</span></span>  
  
 <span data-ttu-id="d6267-513"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-513">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-514">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-514">-or-</span></span>  
  
 <span data-ttu-id="d6267-515"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-515"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
 <span data-ttu-id="d6267-516">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-516">-or-</span></span>  
  
 <span data-ttu-id="d6267-517"><paramref name="type" />을 포함하는 어셈블리가 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />로 만들어진 동적 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-517">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
 <span data-ttu-id="d6267-518">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-518">-or-</span></span>  
  
 <span data-ttu-id="d6267-519"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-519">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-520">호출 중인 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-520">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-521">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-521">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-522">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-522">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-523"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-523">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-524">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-524">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="d6267-525"><paramref name="type" />이 COM 개체이지만 형식을 가져오는 데 사용된 클래스 식별자가 유효하지 않거나 식별된 클래스가 등록되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-525"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-526"><paramref name="type" />이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-526"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-527">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-527">for supplying evidence.</span></span> <span data-ttu-id="d6267-528">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d6267-528">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-529">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-529">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="d6267-530">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-530">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="d6267-531"><c>typeName</c>이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-531">The name of the assembly where the type named <c>typeName</c> is sought.</span></span> <span data-ttu-id="d6267-532"><c>assemblyName</c>이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-532">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-533">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-533">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d6267-534"><c>typeName</c>에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-534"><see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d6267-535"><c>typeName</c> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-535">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-536"><c>bindingAttr</c>이 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-536">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="d6267-537"><c>bindingAttr</c> 및 <c>args</c>를 사용하고 <c>typeName</c> 생성자를 식별하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-537">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-538"><c>바인더</c>가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-538">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-539">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-539">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-540"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-540">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d6267-541"><c>typeName</c> 생성자에 대해 선언된 공식적인 형식에 <c>args</c>를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-541">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-542"><c>culture</c>가 <see langword="null" />인 경우 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-542">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-543">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-543">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-544">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-544">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-545">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-545">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-546">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-546">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-547">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-547">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="d6267-548">명명된 어셈블리 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-548">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-549">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-549">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-550">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 래핑을 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-550">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-551">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드는 호출자에 게 부여 하는 경우 public이 아닌 형식과 멤버를 만드는 데 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식과 멤버를 포함 하는 어셈블리의 권한 부여 집합 제한 되는 경우 호출자의를 설정 또는 해당 하위 집합을 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-551">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-552">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5.)</span><span class="sxs-lookup"><span data-stu-id="d6267-552">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5.)</span></span>  
>   
>  <span data-ttu-id="d6267-553">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-553">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-554"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-554"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-555">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-555">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-556"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-556"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-557"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-557"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-558">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-558">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-559">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-559">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-560">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-560">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-561"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-561">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6267-562"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-562">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-563">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-563">-or-</span></span>  
  
 <span data-ttu-id="d6267-564"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-564"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
 <span data-ttu-id="d6267-565">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-565">-or-</span></span>  
  
 <span data-ttu-id="d6267-566"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-566">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-567"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-567"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-568">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-568">-or-</span></span>  
  
 <span data-ttu-id="d6267-569">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-569">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-570">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-570">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d6267-571">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-571">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="d6267-572">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-572">-or-</span></span>  
  
 <span data-ttu-id="d6267-573">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-573">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-574">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-574">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-575">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-575">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-576">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-576">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="d6267-577">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-577">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="d6267-578"><c>typeName</c>이라는 형식이 만들어지는 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-578">The domain where the type named <c>typeName</c> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="d6267-579"><c>typeName</c>이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-579">The name of the assembly where the type named <c>typeName</c> is sought.</span></span> <span data-ttu-id="d6267-580"><c>assemblyName</c>이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-580">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-581">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-581">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d6267-582"><c>typeName</c>에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-582"><see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d6267-583"><c>typeName</c> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-583">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-584"><c>bindingAttr</c>이 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-584">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="d6267-585"><c>bindingAttr</c> 및 <c>args</c>를 사용하고 <c>typeName</c> 생성자를 식별하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-585">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-586"><c>바인더</c>가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-586">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-587">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-587">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-588"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-588">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d6267-589"><c>typeName</c> 생성자에 대해 선언된 공식적인 형식에 <c>args</c>를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-589">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-590"><c>culture</c>가 <see langword="null" />인 경우 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-590">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-591">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-591">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-592">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-592">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-593">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-593">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-594">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-594">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-595">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-595">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="d6267-596">명명된 어셈블리 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-596">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-597">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-597">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-598">사용 하 여 <xref:System.Activator.CreateInstance%2A> 코드를 실행할 보안 사용 권한이 제한 된 응용 프로그램 도메인에서 호스트를 필요로 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="d6267-598">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="d6267-599">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 래핑을 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-599">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-600">이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 를 직접 실행 호출자에 게 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-600">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-601"><paramref name="domain" /> 또는 <paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-601"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-602">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-602">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-603"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-603"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-604"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-604"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-605">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-605">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-606">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-606">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-607">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-607">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-608"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-608">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6267-609"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-609">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-610">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-610">-or-</span></span>  
  
 <span data-ttu-id="d6267-611"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-611"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
 <span data-ttu-id="d6267-612">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-612">-or-</span></span>  
  
 <span data-ttu-id="d6267-613"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-613">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-614"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-614"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-615">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-615">-or-</span></span>  
  
 <span data-ttu-id="d6267-616">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-616">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-617">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-617">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d6267-618">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-618">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="d6267-619">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-619">-or-</span></span>  
  
 <span data-ttu-id="d6267-620">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-620">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d6267-621">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-621">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d6267-622">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-622">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-623">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-623">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-624">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-624">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-625">모든 형식 멤버에 대 한 작업을 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-625">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="d6267-626">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-626">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="d6267-627"><c>typeName</c>이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-627">The name of the assembly where the type named <c>typeName</c> is sought.</span></span> <span data-ttu-id="d6267-628"><c>assemblyName</c>이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-628">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-629">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-629">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d6267-630"><c>typeName</c>에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-630"><see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d6267-631"><c>typeName</c> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-631">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-632"><c>bindingAttr</c>이 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-632">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="d6267-633"><c>bindingAttr</c> 및 <c>args</c>를 사용하고 <c>typeName</c> 생성자를 식별하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-633">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-634"><c>바인더</c>가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-634">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-635">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-635">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-636"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-636">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d6267-637"><c>typeName</c> 생성자에 대해 선언된 공식적인 형식에 <c>args</c>를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-637">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-638"><c>culture</c>가 <see langword="null" />인 경우 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-638">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-639">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-639">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-640">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-640">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-641">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-641">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-642">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-642">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-643">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-643">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="d6267-644">보안 정책을 결정하고 코드 권한을 부여하는 데 사용되는 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-644">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="d6267-645">명명된 어셈블리 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-645">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-646">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-646">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-647">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 래핑을 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-647">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-648">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드는 호출자에 게 부여 하는 경우 public이 아닌 형식과 멤버를 만드는 데 사용할 수 있습니다 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 및 public이 아닌 형식과 멤버를 포함 하는 어셈블리의 권한 부여 집합 제한 되는 경우 호출자의를 설정 또는 해당 하위 집합을 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-648">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="d6267-649">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="d6267-649">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="d6267-650">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-650">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-651"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-651"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-652">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-652">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-653"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-653"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-654"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-654"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-655">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-655">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-656">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-656">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-657">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-657">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-658"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-658">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6267-659"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-659">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-660">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-660">-or-</span></span>  
  
 <span data-ttu-id="d6267-661"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-661"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
 <span data-ttu-id="d6267-662">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-662">-or-</span></span>  
  
 <span data-ttu-id="d6267-663"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-663">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-664"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-664"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-665">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-665">-or-</span></span>  
  
 <span data-ttu-id="d6267-666">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-666">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-667">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-667">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d6267-668">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-668">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="d6267-669">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-669">-or-</span></span>  
  
 <span data-ttu-id="d6267-670">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-670">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-671">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-671">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-672">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-672">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-673">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-673">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="d6267-674">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-674">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="d6267-675"><c>typeName</c>이라는 형식이 만들어지는 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-675">The domain where the type named <c>typeName</c> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="d6267-676"><c>typeName</c>이라는 형식이 검색된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-676">The name of the assembly where the type named <c>typeName</c> is sought.</span></span> <span data-ttu-id="d6267-677"><c>assemblyName</c>이 <see langword="null" />인 경우 실행 중인 어셈블리가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-677">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-678">기본 형식의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-678">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d6267-679"><c>typeName</c>에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-679"><see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d6267-680"><c>typeName</c> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-680">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-681"><c>bindingAttr</c>이 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-681">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="d6267-682"><c>bindingAttr</c> 및 <c>args</c>를 사용하고 <c>typeName</c> 생성자를 식별하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-682">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-683"><c>바인더</c>가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-683">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-684">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-684">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-685"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-685">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d6267-686"><c>typeName</c> 생성자에 대해 선언된 공식적인 형식에 <c>args</c>를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-686">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-687"><c>culture</c>가 <see langword="null" />인 경우 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-687">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-688">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-688">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-689">일반적으로 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-689">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span></span> <span data-ttu-id="d6267-690"><see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />는 원격 개체를 활성화하는 데 필요한 URL을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-690">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="d6267-691">보안 정책을 결정하고 코드 권한을 부여하는 데 사용되는 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-691">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="d6267-692">명명된 어셈블리 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-692">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-693">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-693">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-694">사용 하 여 <xref:System.Activator.CreateInstance%2A> 코드를 실행할 보안 사용 권한이 제한 된 응용 프로그램 도메인에서 호스트를 필요로 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="d6267-694">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="d6267-695">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 래핑을 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-695">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-696">이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 를 직접 실행 호출자에 게 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-696">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-697"><paramref name="domain" /> 또는 <paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-697"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-698">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-698">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-699"><paramref name="assemblyName" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-699"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-700"><paramref name="assemblyName" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-700"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-701">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-701">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-702">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-702">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-703">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-703">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="d6267-704"><see cref="Overload:System.Type.GetTypeFromProgID" /> 또는 <see cref="Overload:System.Type.GetTypeFromCLSID" />를 통해 COM 형식을 가져오지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-704">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d6267-705"><see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> 및 <see cref="T:System.RuntimeArgumentHandle" /> 형식 만들기 또는 이러한 형식의 배열이 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-705">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
 <span data-ttu-id="d6267-706">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-706">-or-</span></span>  
  
 <span data-ttu-id="d6267-707"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-707"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
 <span data-ttu-id="d6267-708">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-708">-or-</span></span>  
  
 <span data-ttu-id="d6267-709"><paramref name="args" />와 가장 일치하는 생성자에 <see langword="varargs" /> 인수가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-709">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-710"><paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-710"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-711">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-711">-or-</span></span>  
  
 <span data-ttu-id="d6267-712">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-712">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-713">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-713">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d6267-714">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-714">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="d6267-715">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-715">-or-</span></span>  
  
 <span data-ttu-id="d6267-716">어셈블리 이름 또는 코드베이스가 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-716">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-717">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-717">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-718">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-718">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-719">모든 형식 멤버에 대 한 작업을 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-719">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="d6267-720">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-720">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d6267-721">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-721">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d6267-722">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-722">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="d6267-723">만들 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-723">The type to create.</span></span></typeparam>
        <summary><span data-ttu-id="d6267-724">매개 변수가 없는 생성자를 사용하여 지정된 제네릭 형식 매개 변수로 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-724">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-725">새로 만든 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-725">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-726"><xref:System.Activator.CreateInstance%60%601> 제네릭 메서드의 형식 매개 변수로 지정 된 형식의 인스턴스화를 구현 하려면 컴파일러에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-726">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="d6267-727">예를 들어 다음 제네릭 메서드를 구현에서에서 `new T()` (`gcnew T()` c + +에서) 사용 하 여는 <xref:System.Activator.CreateInstance%60%601> 제네릭 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-727">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="d6267-728">일반적으로 필요 하지는 <xref:System.Activator.CreateInstance%60%601> 코드를 컴파일 타임에 형식을 알 수 있어야 하기 때문에 응용 프로그램에서 제네릭 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-728">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="d6267-729">컴파일 타임에 형식이 알려져, 하는 경우 일반적인 인스턴스화 구문을 사용할 수 있습니다 (`new` C#에서 연산자 `New` Visual Basic의 `gcnew` c + +에서).</span><span class="sxs-lookup"><span data-stu-id="d6267-729">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="d6267-730">컴파일 타임에는 형식을 알 수 없는,의 비 제네릭 오버 로드를 호출할 수 있습니다 <xref:System.Activator.CreateInstance%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-730">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="d6267-731">오버 로드가 없는 <xref:System.Activator.CreateInstance%60%601> 비 제네릭 오버 로드 때문에 인수 목록을 사용 하 여 제네릭 메서드에 <xref:System.Activator.CreateInstance%2A> 이미 런타임에 바인딩된 생성자 확인을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-731">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="d6267-732">[Windows 스토어 앱용 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 또는 [이식 가능한 클래스 라이브러리](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)에서 대신 기본 클래스 예외 <see cref="T:System.MissingMemberException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-732">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="d6267-733"><paramref name="T" />에 지정된 형식에는 매개 변수가 없는 생성자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-733">The type that is specified for <paramref name="T" /> does not have a parameterless constructor.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d6267-734">명명된 어셈블리 파일 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-734">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="d6267-735">형식 <c>typeName</c>이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-735">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-736">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-736">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="d6267-737">명명된 어셈블리 파일 및 기본 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-737">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-738">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-738">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-739">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-739">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="d6267-740">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하십시오.는 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 및 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-740">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6267-741">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Activator.CreateInstanceFrom%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-741">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="d6267-742">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Activator> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-742">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-743"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-743"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-744">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-744">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-745"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-745"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-746"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-746"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-747">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-747">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-748">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-748">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-749">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-749">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6267-750">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-750">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-751"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-751"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-752">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-752">-or-</span></span>  
  
 <span data-ttu-id="d6267-753">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-753">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-754">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-754">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-755">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-755">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-756">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-756">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d6267-757">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-757">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="d6267-758">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d6267-758">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-759">권한 부여 설정에 관계 없이 public이 아닌 형식에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-759">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="d6267-760">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-760">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="d6267-761"><c>typeName</c>이라는 형식이 만들어지는 원격 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-761">The remote domain where the type named <c>typeName</c> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="d6267-762">형식 <c>typeName</c>이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-762">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-763">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-763">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="d6267-764">명명된 어셈블리 파일 및 기본 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-764">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and default constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-765">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-765">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-766">사용 하 여 <xref:System.Activator.CreateInstanceFrom%2A> 코드를 실행할 보안 사용 권한이 제한 된 응용 프로그램 도메인에서 호스트를 필요로 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="d6267-766">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="d6267-767">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-767">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-768">이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 를 직접 실행 호출자에 게 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-768">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="d6267-769">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하십시오.는 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 및 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-769">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-770"><paramref name="domain" /> 또는 <paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-770"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-771">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-771">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-772"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-772"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-773"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-773"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-774">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-774">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-775">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-775">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-776">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-776">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6267-777">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-777">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-778"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-778"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-779">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-779">-or-</span></span>  
  
 <span data-ttu-id="d6267-780">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-780">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-781">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-781">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-782">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-782">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-783">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-783">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d6267-784">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-784">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="d6267-785">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d6267-785">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d6267-786">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-786">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d6267-787">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-787">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="d6267-788">형식 <c>typeName</c>이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-788">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-789">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-789">The name of the preferred type.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-790">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-790">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-791">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-791">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-792">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-792">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-793">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-793">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-794">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-794">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="d6267-795">명명된 어셈블리 파일 및 기본 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-795">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span></span></summary>
        <returns><span data-ttu-id="d6267-796">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-796">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-797">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-797">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="d6267-798">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하십시오.는 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 및 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-798">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-799"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-799"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-800">일치하는 public 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-800">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-801"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-801"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-802"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-802"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-803">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-803">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-804">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-804">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-805">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-805">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-806"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-806"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6267-807">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-807">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-808"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-808"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-809">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-809">-or-</span></span>  
  
 <span data-ttu-id="d6267-810">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-810">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-811">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-811">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-812">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-812">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-813">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-813">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d6267-814">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-814">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="d6267-815">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d6267-815">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-816">권한 부여 설정에 관계 없이 public이 아닌 형식에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-816">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="d6267-817">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-817">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="d6267-818">형식 <c>typeName</c>이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-818">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-819">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-819">The name of the preferred type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d6267-820"><c>typeName</c>에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-820"><see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d6267-821"><c>typeName</c> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-821">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-822"><c>bindingAttr</c>이 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-822">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="d6267-823"><c>bindingAttr</c> 및 <c>args</c>를 사용하고 <c>typeName</c> 생성자를 식별하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-823">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-824"><c>바인더</c>가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-824">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-825">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-825">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-826"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-826">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d6267-827"><c>typeName</c> 생성자에 대해 선언된 공식적인 형식에 <c>args</c>를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-827">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-828"><c>culture</c>가 <see langword="null" />인 경우 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-828">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-829">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-829">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-830">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-830">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-831">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-831">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-832">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-832">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-833">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-833">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="d6267-834">명명된 어셈블리 파일 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-834">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-835">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-835">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-836">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-836">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="d6267-837">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하십시오.는 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 및 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-837">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-838"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-838"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-839">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-839">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-840"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-840"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-841"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-841"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-842">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-842">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-843">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-843">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-844">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-844">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6267-845">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-845">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-846"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-846"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-847"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-847"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-848">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-848">-or-</span></span>  
  
 <span data-ttu-id="d6267-849">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-849">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-850">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-850">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-851">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-851">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-852">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-852">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d6267-853">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-853">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="d6267-854">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d6267-854">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-855">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-855">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="d6267-856">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-856">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="d6267-857"><c>typeName</c>이라는 형식이 만들어지는 원격 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-857">The remote domain where the type named <c>typeName</c> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="d6267-858">형식 <c>typeName</c>이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-858">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-859">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-859">The name of the preferred type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d6267-860"><c>typeName</c>에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-860"><see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d6267-861"><c>typeName</c> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-861">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-862"><c>bindingAttr</c>이 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-862">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="d6267-863"><c>bindingAttr</c> 및 <c>args</c>를 사용하고 <c>typeName</c> 생성자를 식별하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-863">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-864"><c>바인더</c>가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-864">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-865">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-865">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-866"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-866">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d6267-867"><c>typeName</c> 생성자에 대해 선언된 공식적인 형식에 <c>args</c>를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-867">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-868"><c>culture</c>가 <see langword="null" />인 경우 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-868">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-869">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-869">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-870">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-870">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-871">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-871">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-872">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-872">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-873">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-873">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="d6267-874">명명된 어셈블리 파일 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-874">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-875">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-875">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-876">사용 하 여 <xref:System.Activator.CreateInstanceFrom%2A> 코드를 실행할 보안 사용 권한이 제한 된 응용 프로그램 도메인에서 호스트를 필요로 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="d6267-876">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="d6267-877">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-877">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="d6267-878">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하십시오.는 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 및 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-878">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-879"><paramref name="domain" /> 또는 <paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-879"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-880">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-880">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-881"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-881"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-882"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-882"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-883">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-883">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-884">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-884">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-885">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-885">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6267-886">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-886">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-887"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-887"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-888"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-888"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-889">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-889">-or-</span></span>  
  
 <span data-ttu-id="d6267-890">현재 로드 중인 버전 이후 버전의 공용 언어 런타임에 대해 <paramref name="assemblyName" />이 컴파일된 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-890"><paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-891">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-891">for supplying evidence.</span></span> <span data-ttu-id="d6267-892">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d6267-892">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d6267-893">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-893">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="d6267-894">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d6267-894">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-895">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-895">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="d6267-896">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-896">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d6267-897">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-897">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d6267-898">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-898">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="d6267-899">형식 <c>typeName</c>이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-899">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-900">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-900">The name of the preferred type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d6267-901"><c>typeName</c>에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-901"><see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d6267-902"><c>typeName</c> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-902">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-903"><c>bindingAttr</c>이 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-903">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="d6267-904"><c>bindingAttr</c> 및 <c>args</c>를 사용하고 <c>typeName</c> 생성자를 식별하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-904">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-905"><c>바인더</c>가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-905">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-906">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-906">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-907"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-907">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d6267-908"><c>typeName</c> 생성자에 대해 선언된 공식적인 형식에 <c>args</c>를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-908">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-909"><c>culture</c>가 <see langword="null" />인 경우 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-909">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-910">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-910">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-911">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-911">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-912">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-912">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-913">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-913">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-914">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-914">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="d6267-915">보안 정책을 결정하고 코드 권한을 부여하는 데 사용되는 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-915">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="d6267-916">명명된 어셈블리 파일 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-916">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-917">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-917">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-918">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-918">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="d6267-919">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하십시오.는 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 및 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-919">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-920"><paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-920"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-921">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-921">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-922"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-922"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-923"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-923"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-924">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-924">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-925">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-925">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-926">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-926">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6267-927">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-927">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-928"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-928"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-929"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-929"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-930">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-930">-or-</span></span>  
  
 <span data-ttu-id="d6267-931">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-931">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-932">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-932">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-933">에 대 한 대리자의 인스턴스를 만들 때 비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-933">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="d6267-934">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d6267-934">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d6267-935">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-935">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="d6267-936">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d6267-936">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-937">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-937">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="d6267-938">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-938">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="d6267-939"><c>typeName</c>이라는 형식이 만들어지는 원격 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-939">The remote domain where the type named <c>typeName</c> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="d6267-940">형식 <c>typeName</c>이(가) 검색되는 어셈블리를 포함하는 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-940">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="d6267-941">기본 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-941">The name of the preferred type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d6267-942"><c>typeName</c>에 대한 검색에서 대/소문자를 구분하지 않도록 지정하려면 <see langword="true" />이고, 대/소문자를 구분하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-942"><see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d6267-943"><c>typeName</c> 생성자 검색에 영향을 미치는 0 또는 그 이상의 비트 플래그 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-943">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-944"><c>bindingAttr</c>이 0이면 대/소문자를 구분한 public 생성자 검색이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-944">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="d6267-945"><c>bindingAttr</c> 및 <c>args</c>를 사용하고 <c>typeName</c> 생성자를 식별하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-945">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-946"><c>바인더</c>가 <see langword="null" />이면 기본 바인더가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-946">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d6267-947">호출할 생성자의 매개 변수와 번호, 순서 및 형식이 일치하는 인수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-947">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="d6267-948"><c>args</c>가 빈 배열이거나 <see langword="null" />이면 매개 변수를 사용하지 않는 생성자(기본 생성자)가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-948">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="d6267-949"><c>typeName</c> 생성자에 대해 선언된 공식적인 형식에 <c>args</c>를 강제로 적용하는 것을 제어하는 문화권별 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-949">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span></span> <span data-ttu-id="d6267-950"><c>culture</c>가 <see langword="null" />인 경우 현재 스레드의 <see cref="T:System.Globalization.CultureInfo" />가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-950">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d6267-951">활성화할 수 있는 하나 이상의 특성으로 이루어진 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-951">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d6267-952">일반적으로 원격 개체를 활성화 하는 데 필요한 URL을 지정하는 단일 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 개체가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-952">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
 <span data-ttu-id="d6267-953">이 매개 변수는 클라이언트 활성 개체와 관련되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-953">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d6267-954">클라이언트 활성화는 이전 버전과의 호환성을 위해 유지되지만 새로운 개발에는 권장되지 않는 레거시 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-954">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d6267-955">분산된 응용 프로그램은 Windows Communication Foundation을 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-955">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="d6267-956">보안 정책을 결정하고 코드 권한을 부여하는 데 사용되는 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-956">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="d6267-957">명명된 어셈블리 파일 및 지정된 매개 변수와 가장 일치하는 생성자를 사용하여 지정된 원격 도메인에 이름이 지정된 형식의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-957">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="d6267-958">새로 만들어진 인스턴스에 액세스하기 위해 래핑을 해제해야 하는 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-958">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-959">사용 하 여 <xref:System.Activator.CreateInstanceFrom%2A> 코드를 실행할 보안 사용 권한이 제한 된 응용 프로그램 도메인에서 호스트를 필요로 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="d6267-959">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="d6267-960">사용 하 여 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 메서드 반환 값의 래핑을를 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-960">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6267-961">이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 를 직접 실행 호출자에 게 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-961">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="d6267-962">호출 된 메서드에 의해 throw 될 수 있는 다른 예외에 대 한 자세한 내용은 예외 섹션을 참조 하십시오.는 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 및 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-962">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-963"><paramref name="domain" /> 또는 <paramref name="typeName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-963"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d6267-964">일치하는 생성자를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-964">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d6267-965"><paramref name="assemblyFile" />에서 <paramref name="typename" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-965"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d6267-966"><paramref name="assemblyFile" />을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-966"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="d6267-967">호출자에게 이 생성자를 호출할 수 있는 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-967">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-968">추상 클래스의 인스턴스를 만들 수 없거나 이 멤버가 런타임에 바인딩 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-968">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="d6267-969">리플렉션을 통해 호출된 생성자가 예외를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-969">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d6267-970">호출자에게 필요한 <see cref="T:System.Security.Permissions.FileIOPermission" />이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-970">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d6267-971"><paramref name="activationAttributes" />가 빈 배열이 아니므로 생성될 형식이 <see cref="T:System.MarshalByRefObject" />에서 파생되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-971"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d6267-972"><paramref name="assemblyFile" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-972"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d6267-973">또는</span><span class="sxs-lookup"><span data-stu-id="d6267-973">-or-</span></span>  
  
 <span data-ttu-id="d6267-974">CLR(공용 언어 런타임) 버전 2.0 이상이 현재 로드되었는데 현재 로드된 버전보다 최신 버전인 CLR에 대해 <paramref name="assemblyName" />이 컴파일되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-974">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="d6267-975">.NET Framework 버전 2.0, 3.0 및 3.5는 모두 CLR 버전 2.0을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-975">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d6267-976">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-976">for supplying evidence.</span></span> <span data-ttu-id="d6267-977">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d6267-977">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d6267-978">디렉터리 경로 검색 하 고 해당 콘텐츠를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-978">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="d6267-979">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d6267-979">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d6267-980">public이 아닌 형식 및 해당 권한 부여 집합에 관계 없이 멤버에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-980">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="d6267-981">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d6267-981">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d6267-982">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-982">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d6267-983">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-983">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d6267-984">잘 알려진 개체 또는 XML Web service를 위한 프록시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-984">Creates a proxy for a well-known object or XML Web service.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d6267-985">연결할 잘 알려진 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-985">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="d6267-986">잘 알려진 개체의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-986">The URL of the well-known object.</span></span></param>
        <summary><span data-ttu-id="d6267-987">지정된 형식 및 URL로 표시되는 잘 알려진 개체의 프록시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-987">Creates a proxy for the well-known object indicated by the specified type and URL.</span></span></summary>
        <returns><span data-ttu-id="d6267-988">요청된 잘 알려진 개체가 사용하는 끝점을 가리키는 프록시입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-988">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-989">원격 개체에 메시지를 보내는 프록시를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-989">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="d6267-990">프록시에는 메서드를 호출할 때까지 메시지가 네트워크를 통해 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-990">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-991"><paramref name="type" /> 또는 <paramref name="url" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-991"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="d6267-992"><paramref name="type" />은 인터페이스가 아닌 참조로 마샬링되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-992"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-993">이 멤버가 런타임에 바인딩된 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-993">This member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d6267-994">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-994">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d6267-995">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-995">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d6267-996">연결할 잘 알려진 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-996">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="d6267-997">잘 알려진 개체의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-997">The URL of the well-known object.</span></span></param>
        <param name="state"><span data-ttu-id="d6267-998">채널별 데이터 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-998">Channel-specific data or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d6267-999">지정된 형식, URL 및 채널 데이터로 표시되는 잘 알려진 개체의 프록시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-999">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span></span></summary>
        <returns><span data-ttu-id="d6267-1000">요청된 잘 알려진 개체가 사용하는 끝점을 가리키는 프록시입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1000">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-1001">원격 개체에 메시지를 보내는 프록시를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1001">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="d6267-1002">프록시에는 메서드를 호출할 때까지 메시지가 네트워크를 통해 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1002">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="d6267-1003">`state` 매개 변수는 채널에 대 한 정보를 전달 하 고 전달 되는 <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6267-1003">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d6267-1004"><paramref name="type" /> 또는 <paramref name="url" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d6267-1004"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="d6267-1005"><paramref name="type" />은 인터페이스가 아닌 참조로 마샬링되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1005"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="d6267-1006">이 멤버가 런타임에 바인딩된 메커니즘을 사용하여 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1006">This member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d6267-1007">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1007">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d6267-1008">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1008">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="d6267-1009">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1009">Reserved for future use.</span></span> <span data-ttu-id="d6267-1010">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1010">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="d6267-1011">매핑할 전달된 이름의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1011">The passed-in array of names to map.</span></span></param>
        <param name="cNames"><span data-ttu-id="d6267-1012">매핑할 이름의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1012">The count of the names to map.</span></span></param>
        <param name="lcid"><span data-ttu-id="d6267-1013">이름을 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1013">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="d6267-1014">이름에 해당하는 ID를 받는, 호출자가 할당한 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1014">The caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="d6267-1015">이름 집합을 해당하는 디스패치 식별자 집합에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1015">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-1016">이 메서드는 비관리 코드에서 관리 되는 클래스에 액세스 하는 데 사용 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1016">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d6267-1017">에 대 한 자세한 내용은 `IDispatch::GetIDsOfNames`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1017">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d6267-1018">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1018">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="d6267-1019">반환할 형식 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1019">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="d6267-1020">형식 정보의 로캘 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1020">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="d6267-1021">요청된 형식 정보 개체에 대한 포인터를 받는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1021">An object that receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="d6267-1022">인터페이스의 형식 정보를 가져오는 데 사용할 수 있는 개체의 형식 정보를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1022">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-1023">이 메서드는 비관리 코드에서 관리 되는 클래스에 액세스 하는 데 사용 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1023">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d6267-1024">에 대 한 자세한 내용은 `IDispatch::GetTypeInfo`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1024">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d6267-1025">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1025">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="d6267-1026">이 메서드가 반환될 때 개체에서 제공하는 형식 정보 인터페이스의 수를 받는 위치에 대한 포인터를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1026">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="d6267-1027">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1027">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="d6267-1028">개체에서 제공하는 형식 정보 인터페이스의 수를 검색합니다(0 또는 1).</span><span class="sxs-lookup"><span data-stu-id="d6267-1028">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-1029">이 메서드는 비관리 코드에서 관리 되는 클래스에 액세스 하는 데 사용 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1029">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d6267-1030">에 대 한 자세한 내용은 `IDispatch::GetTypeInfoCount`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1030">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d6267-1031">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1031">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="d6267-1032">멤버를 식별하는 디스패치 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1032">A dispatch identifier that identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="d6267-1033">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1033">Reserved for future use.</span></span> <span data-ttu-id="d6267-1034">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1034">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="d6267-1035">인수를 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1035">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="d6267-1036">호출의 컨텍스트를 설명하는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1036">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="d6267-1037">인수의 배열, 명명된 인수에 대한 인수 DISPID의 배열 및 배열에 있는 요소의 개수가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1037">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="d6267-1038">결과를 저장할 위치에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1038">A pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="d6267-1039">예외 정보가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1039">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="d6267-1040">오류가 있는 첫 번째 인수의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1040">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="d6267-1041">개체에서 노출하는 메서드와 속성에 대한 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1041">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6267-1042">이 메서드는 비관리 코드에서 관리 되는 클래스에 액세스 하는 데 사용 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1042">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d6267-1043">에 대 한 자세한 내용은 `IDispatch::Invoke`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1043">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d6267-1044">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d6267-1044">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>