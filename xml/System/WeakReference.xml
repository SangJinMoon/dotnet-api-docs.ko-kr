<Type Name="WeakReference" FullName="System.WeakReference">
  <TypeSignature Language="C#" Value="public class WeakReference : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WeakReference extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.WeakReference" />
  <TypeSignature Language="VB.NET" Value="Public Class WeakReference&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WeakReference : System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="06300-101">가비지 컬렉션에 의한 개체 회수를 허용하면서 개체를 참조하는 약한 참조를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="06300-101">Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06300-102">약한 참조는 가비지 수집기는 개체에 액세스 하려면 응용 프로그램 허용 하면서 개체를 수집할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="06300-102">A weak reference allows the garbage collector to collect an object while still allowing an application to access the object.</span></span> <span data-ttu-id="06300-103">개체를 해야 하는 경우에 대 한 강한 참조 하 고 수 있습니다 수집 되지 않도록 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-103">If you need the object, you can still obtain a strong reference to it and prevent it from being collected.</span></span> <span data-ttu-id="06300-104">긴 약한 참조 및 짧은 사용 하는 방법에 대 한 자세한 내용은 참조 [약한 참조](~/docs/standard/garbage-collection/weak-references.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-104">For more information about how to use short and long weak references, see [Weak References](~/docs/standard/garbage-collection/weak-references.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06300-105">다음 예제에서는 약한 참조를 사용 하 여 응용 프로그램에 대 한 리소스로 개체의 캐시를 유지 관리 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="06300-105">The following example demonstrates how you can use weak references to maintain a cache of objects as a resource for an application.</span></span> <span data-ttu-id="06300-106">캐시를 사용 하 여 생성 되는 <xref:System.Collections.Generic.IDictionary%602> 의 <xref:System.WeakReference> 키 인덱스 값으로 지정 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-106">The cache is constructed using an <xref:System.Collections.Generic.IDictionary%602> of <xref:System.WeakReference> objects keyed by an index value.</span></span> <span data-ttu-id="06300-107"><xref:System.WeakReference.Target%2A> 속성에 대 한는 <xref:System.WeakReference> 개체는 데이터를 나타내는 바이트 배열에 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-107">The <xref:System.WeakReference.Target%2A> property for the <xref:System.WeakReference> objects is an object in a byte array that represents data.</span></span>  
  
 <span data-ttu-id="06300-108">이 예제에서는 캐시의 개체에 임의로 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-108">The example randomly accesses objects in the cache.</span></span> <span data-ttu-id="06300-109">새 데이터 개체가 가비지 수집에 대 한 개체 회수를 다시 생성 됩니다. 그렇지 않으면 개체를 약한 참조에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="06300-109">If an object is reclaimed for garbage collection, a new data object is regenerated; otherwise, the object is available to access because of the weak reference.</span></span>  
  
 [!code-csharp[WeakReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#1)]
 [!code-vb[WeakReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="06300-110">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="06300-110">for the ability to call unmanaged code.</span></span> <span data-ttu-id="06300-111">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="06300-111">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <altmember cref="T:System.GC" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06300-112"><see cref="T:System.WeakReference" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-112">Initializes a new instance of the <see cref="T:System.WeakReference" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="06300-113">추적할 개체 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-113">The object to track or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="06300-114">지정된 개체를 참조하여 <see cref="T:System.WeakReference" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-114">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06300-115">이 생성자에 대 한 짧은 약한 참조를 만듭니다 `target`합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-115">This constructor creates a short weak reference to `target`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReference (object target, bool trackResurrection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object target, bool trackResurrection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As Object, trackResurrection As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakReference(System::Object ^ target, bool trackResurrection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="trackResurrection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="06300-116">추적할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-116">An object to track.</span></span></param>
        <param name="trackResurrection"><span data-ttu-id="06300-117">개체 추적을 중지할 시기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="06300-117">Indicates when to stop tracking the object.</span></span> <span data-ttu-id="06300-118"><see langword="true" />일 경우 종료 후 개체를 추적하고, <see langword="false" />일 경우 종료할 때까지만 개체를 추적합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-118">If <see langword="true" />, the object is tracked after finalization; if <see langword="false" />, the object is only tracked until finalization.</span></span></param>
        <summary><span data-ttu-id="06300-119">지정된 개체를 참조하고 지정된 재활성화 추적을 사용하여 <see cref="T:System.WeakReference" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-119">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, referencing the specified object and using the specified resurrection tracking.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06300-120">경우 `trackResurrection` 은 `false`, 짧은 약한 참조가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="06300-120">If `trackResurrection` is `false`, a short weak reference is created.</span></span> <span data-ttu-id="06300-121">경우 `trackResurrection` 은 `true`, 긴 약한 참조가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="06300-121">If `trackResurrection` is `true`, a long weak reference is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06300-122">다음 예제에서는 간단한 약한 참조와 데이터 개체의 캐시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="06300-122">The following example creates a cache of data objects with short weak references.</span></span> <span data-ttu-id="06300-123">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.WeakReference> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-123">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#2](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#2)]
 [!code-vb[WeakReference#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WeakReference (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WeakReference(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="06300-124">현재 <see cref="T:System.WeakReference" /> 개체를 serialize 또는 deserialize하는 데 필요한 모든 데이터를 보유한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-124">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="06300-125">(예약됨) <c>info</c>에서 지정한 serialize된 스트림의 소스 및 대상을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-125">(Reserved) Describes the source and destination of the serialized stream specified by <c>info</c>.</span></span></param>
        <summary><span data-ttu-id="06300-126">지정된 serialization 및 스트림 개체의 deserialize된 데이터를 사용하여 <see cref="T:System.WeakReference" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-126">Initializes a new instance of the <see cref="T:System.WeakReference" /> class, using deserialized data from the specified serialization and stream objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06300-127">`context` 매개 변수는 예약 되며이 작업에 관여 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="06300-127">The `context` parameter is reserved, and does not currently participate in this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06300-128"><paramref name="info" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="06300-128"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WeakReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WeakReference ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06300-129">현재 <see cref="T:System.WeakReference" /> 개체가 나타내는 대상에 대한 참조를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-129">Discards the reference to the target represented by the current <see cref="T:System.WeakReference" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="06300-130">현재 <see cref="T:System.WeakReference" /> 개체를 serialize 또는 deserialize하는 데 필요한 모든 데이터를 보유한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-130">An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="06300-131">(예약됨) Serialize된 데이터가 저장 및 검색되는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-131">(Reserved) The location where serialized data is stored and retrieved.</span></span></param>
        <summary><span data-ttu-id="06300-132">현재 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 serialize하는 데 필요한 모든 데이터로 <see cref="T:System.WeakReference" /> 개체를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="06300-132">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with all the data needed to serialize the current <see cref="T:System.WeakReference" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06300-133">이 메서드는에 있는 모든 정보를 저장 `info` 현재 serialize 하는 데 필요한 <xref:System.WeakReference> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-133">This method stores all the information in `info` necessary to serialize the current <xref:System.WeakReference> object.</span></span>  
  
 <span data-ttu-id="06300-134">`context` 매개 변수는 예약 되어 있으며이 메서드의 실행에서 현재 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="06300-134">The `context` parameter is reserved and is not currently used in the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="06300-135"><paramref name="info" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="06300-135"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="06300-136">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-136">requires full trust for the immediate caller.</span></span> <span data-ttu-id="06300-137">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="06300-137">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsAlive">
      <MemberSignature Language="C#" Value="public virtual bool IsAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlive" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.IsAlive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAlive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06300-138">현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 가비지 수집되었는지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="06300-138">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected.</span></span></summary>
        <value>
          <span data-ttu-id="06300-139">현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 가비지 수집되지 않았지만 계속 액세스할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-139"><see langword="true" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has not been garbage collected and is still accessible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06300-140">가비지 수집에 대 한 개체를 회수할 수 가능성이 있으므로 바로 뒤의 <xref:System.WeakReference.IsAlive%2A> 속성에서 반환 `true`에 대해서만 테스트 중인 경우가 아니면이 속성을 사용 하 여 권장 되지 않습니다는 `false` 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-140">Because an object could potentially be reclaimed for garbage collection immediately after the <xref:System.WeakReference.IsAlive%2A> property returns `true`, using this property is not recommended unless you are testing only for a `false` return value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public virtual object Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Target" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Target As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Target { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06300-141">현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체(대상)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-141">Gets or sets the object (the target) referenced by the current <see cref="T:System.WeakReference" /> object.</span></span></summary>
        <value>
          <span data-ttu-id="06300-142">현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 가비지 수집되었으면 <see langword="null" />이고, 그렇지 않으면 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-142"><see langword="null" /> if the object referenced by the current <see cref="T:System.WeakReference" /> object has been garbage collected; otherwise, a reference to the object referenced by the current <see cref="T:System.WeakReference" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06300-143">대상 개체에이 속성을 설정한 후 개체에 다른 강력한 참조가 있는지 확인 그렇지 않으면 해당 수집 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="06300-143">After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06300-144">다음 예제에서는 약한 참조를 사용 하 여 개체의 캐시에서 개체를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="06300-144">The following example tries to obtain an object from a cache of objects with weak references.</span></span> <span data-ttu-id="06300-145">가비지 수집에 대 한 개체 회수 된, 새 개체 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="06300-145">If the object was reclaimed for garbage collection, a new object is generated.</span></span> <span data-ttu-id="06300-146">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.WeakReference> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-146">This example is part of a larger example provided for the <xref:System.WeakReference> class.</span></span>  
  
 [!code-csharp[WeakReference#3](~/samples/snippets/csharp/VS_Snippets_CLR/WeakReference/cs/program.cs#3)]
 [!code-vb[WeakReference#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/WeakReference/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="06300-147">대상 개체에 대한 참조가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="06300-147">The reference to the target object is invalid.</span></span> <span data-ttu-id="06300-148">값이 null 참조인 경우 또는 설정 작업 중 개체가 종료된 경우, 이 속성을 설정하는 동안 이 예외가 throw될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="06300-148">This exception can be thrown while setting this property if the value is a null reference or if the object has been finalized during the set operation.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
    <Member MemberName="TrackResurrection">
      <MemberSignature Language="C#" Value="public virtual bool TrackResurrection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackResurrection" />
      <MemberSignature Language="DocId" Value="P:System.WeakReference.TrackResurrection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TrackResurrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TrackResurrection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06300-149">현재 <see cref="T:System.WeakReference" /> 개체에서 참조되는 개체가 종료된 후 추적되는지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="06300-149">Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference" /> object is tracked after it is finalized.</span></span></summary>
        <value>
          <span data-ttu-id="06300-150">현재 <see cref="T:System.WeakReference" /> 개체에서 참조하는 개체가 종료된 후 추적되면 <see langword="true" />이고, 종료될 때까지만 개체가 추적되면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-150"><see langword="true" /> if the object the current <see cref="T:System.WeakReference" /> object refers to is tracked after finalization; or <see langword="false" /> if the object is only tracked until finalization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06300-151">경우 `true`, 약한 참조는 긴 약한 참조 및 `true` 에 대해 지정 된는 `trackResurrection` 에서 매개 변수는 <xref:System.WeakReference> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="06300-151">If `true`, the weak reference is a long weak reference and `true` was specified for the `trackResurrection` parameter in the <xref:System.WeakReference> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
  </Members>
</Type>