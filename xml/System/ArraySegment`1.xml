<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ArraySegment`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5564bfcb761e88fd4cfd398e28d03b06bc68519e8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">564bfcb761e88fd4cfd398e28d03b06bc68519e8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The type of the elements in the array segment.</source>
          <target state="translated">배열 세그먼트의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ArraySegment`1">
          <source>Delimits a section of a one-dimensional array.</source>
          <target state="translated">1차원 배열의 섹션을 구분합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> is a wrapper around an array that delimits a range of elements in that array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 해당 배열에 있는 요소의 범위를 구분 하는 배열 래퍼입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Multiple <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instances can refer to the same original array and can overlap.</source>
          <target state="translated">여러 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스 동일한 원본 배열을를 참조할 수 있으며 겹칠 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The original array must be one-dimensional and must have zero-based indexing.</source>
          <target state="translated">원본 배열 1 차원 배열 이어야 하 고 0부터 시작 하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> interface starting with the <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in previous versions of the .NET Framework, the <ph id="ph4">&lt;xref:System.ArraySegment%601&gt;</ph> structure did not implement this interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 구현 하는 <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> 로 시작 하는 인터페이스는 <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; 이전 버전의.NET Framework는 <ph id="ph4">&lt;xref:System.ArraySegment%601&gt;</ph> 구조는이 인터페이스를 구현 하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure is useful whenever the elements of an array will be manipulated in distinct segments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 구조는 서로 다른 세그먼트에서 배열 요소를 조작할 수는 항상 유용 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>You can pass an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object that represents only a portion of an array as an argument to a method, rather than call a relatively expensive method like <ph id="ph2">&lt;xref:System.Array.Copy%2A&gt;</ph> to pass a copy of a portion of an array.</source>
          <target state="translated">전달할 수 있습니다는 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 상대적으로 비용이 많이 드는 메서드 같은 호출 하지 않고 메서드에 대 한 인수로 배열의 일부만 나타내는 개체입니다 <ph id="ph2">&lt;xref:System.Array.Copy%2A&gt;</ph> 배열 일부의 복사본을 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>In a multithreaded app, you can use the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to have each thread operate on only a portion of the array.</source>
          <target state="translated">다중 스레드 응용 프로그램에서 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 구조체에 있는 각 스레드 배열의 일부만에서 작동 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>For task-based asynchronous operations, you can use an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object to ensure that each task operates on a distinct segment of the array.</source>
          <target state="translated">작업 기반 비동기 작업에 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 배열의 고유한 세그먼트에서 각 작업 작동 하는 것을 확인 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The following example divides an array into individual segments with up to ten elements.</source>
          <target state="translated">다음 예에서는 최대 10 개의 요소와 개별 세그먼트로 배열을 나눕니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Each element in the segment is multiplied by its segment number.</source>
          <target state="translated">각 요소는 세그먼트에 해당 세그먼트 수에 곱합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The result shows that using the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> class to manipulate elements in this way changes the values of its underlying array.</source>
          <target state="translated">결과 사용 하 여 표시는 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 이러한 방식으로 요소를 조작 하는 클래스는 기본 배열의 값을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Note, however, that although the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure can be used to divide an array into distinct segments, the segments are not completely independent of one another.</source>
          <target state="translated">그러나는 있지만 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 세그먼트가 서로 완전히 독립적, 구조를 배열을 서로 다른 세그먼트를 나누는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> property returns the entire original array, not a copy of the array; therefore, changes made to the array returned by the <ph id="ph2">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> property are made to the original array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> 속성 배열 복사본이 아니라 전체 원래 배열을 반환 합니다; 따라서 변경 내용을 배열을 반환는 <ph id="ph2">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> 원래 배열 속성 변경 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>If this is undesirable, you should perform operations on a copy of the array, rather than an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object that represents a portion of the array.</source>
          <target state="translated">배열 복사본에 대 한 작업을 수행 해야 필요 없는 경우 아닌 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 배열의 일부를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%2A&gt;</ph> method and the equality and inequality operators test for reference equality when they compare two <ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%2A&gt;</ph> 때 비교 되는 두 개의 메서드와 같음 및 같지 않음 연산자 참조 일치에 대 한 테스트 <ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>For two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects to be considered equal, they must meet all of the following conditions:</source>
          <target state="translated">두 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 동일한 것으로 간주 되려면 개체, 다음 조건이 모두 충족 해야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Reference the same array.</source>
          <target state="translated">참조는 동일한 배열입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Begin at the same index in the array.</source>
          <target state="translated">배열에서 같은 인덱스에서 시작 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Have the same number of elements.</source>
          <target state="translated">동일한 요소 수가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>If you want to retrieve an element by its index in the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object, you must cast it to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object and retrieve it or modify it by using the <ph id="ph3">&lt;xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">인덱스에 의해 요소를 검색 하려는 경우는 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 개체를 캐스팅 해야 하는 <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> 개체를 검색 하거나 사용 하 여 수정할는 <ph id="ph3">&lt;xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The following example retrieves the element in an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object that delimits a section of a string array.</source>
          <target state="translated">다음 예제에서 요소를 검색 한 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 문자열 배열의 섹션을 구분 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">다음 코드 예제에서는 전달 된 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 메서드에 구조입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.ArraySegment`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>The array to wrap.</source>
          <target state="translated">래핑할 배열입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure that delimits all the elements in the specified array.</source>
          <target state="translated">지정된 배열의 모든 요소를 구분하는 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> that delimits all the elements of <ph id="ph2">`array`</ph>.</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 의 모든 요소를 구분 하는 <ph id="ph2">`array`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>That is, the <ph id="ph1">&lt;xref:System.ArraySegment%601.Offset%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph> is 0 and its <ph id="ph3">&lt;xref:System.ArraySegment%601.Count%2A&gt;</ph> property is the length of <ph id="ph4">`array`</ph>.</source>
          <target state="translated">즉,는 <ph id="ph1">&lt;xref:System.ArraySegment%601.Offset%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph> 은 0 및 해당 <ph id="ph3">&lt;xref:System.ArraySegment%601.Count%2A&gt;</ph> 속성은 길이 <ph id="ph4">`array`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>To create an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> that delimits only part of an array, use the <ph id="ph2">&lt;xref:System.ArraySegment%601.%23ctor%28%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">만들려는 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 배열의 일부만 구분 하는, 사용 하 여는 <ph id="ph2">&lt;xref:System.ArraySegment%601.%23ctor%28%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>The original array must be one-dimensional and must have zero-based indexing.</source>
          <target state="translated">원본 배열 1 차원 배열 이어야 하 고 0부터 시작 하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>Multiple <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instances can refer to the same original array and can overlap.</source>
          <target state="translated">여러 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스 동일한 원본 배열을를 참조할 수 있으며 겹칠 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">다음 코드 예제에서는 전달 된 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 메서드에 구조입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The array containing the range of elements to delimit.</source>
          <target state="translated">구분할 범위의 요소가 포함된 배열입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The zero-based index of the first element in the range.</source>
          <target state="translated">범위에 있는 첫 번째 요소의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The number of elements in the range.</source>
          <target state="translated">범위의 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure that delimits the specified range of the elements in the specified array.</source>
          <target state="translated">지정된 배열에서 지정된 범위의 요소를 구분하는 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The original array must be one-dimensional and must have zero-based indexing.</source>
          <target state="translated">원본 배열 1 차원 배열 이어야 하 고 0부터 시작 하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>Multiple <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instances can refer to the same original array and can overlap.</source>
          <target state="translated">여러 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스 동일한 원본 배열을를 참조할 수 있으며 겹칠 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">다음 코드 예제에서는 전달 된 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 메서드에 구조입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0 미만입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid range in <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="array" /&gt;</ph>의 올바른 범위를 지정하지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.Array">
          <source>Gets the original array containing the range of elements that the array segment delimits.</source>
          <target state="translated">배열 세그먼트가 구분하는 범위의 요소가 포함된 원본 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Array">
          <source>The original array that was passed to the constructor, and that contains the range delimited by the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated">생성자에 전달된 원본 배열로, <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>로 구분된 범위를 포함합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Array">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> property returns the original array, not a copy of the array; therefore, changes made through the property are made directly to the original array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> 원본 배열에 직접 속성을 통해 변경 내용이 따라서; 속성 배열 복사본이 아니라 원래 배열로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Array">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> to a method.</source>
          <target state="translated">다음 코드 예제에서는 전달 된 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 메서드에 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.Count">
          <source>Gets the number of elements in the range delimited by the array segment.</source>
          <target state="translated">배열 세그먼트로 구분된 범위의 요소 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Count">
          <source>The number of elements in the range delimited by the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>로 구분된 범위의 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Count">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">다음 코드 예제에서는 전달 된 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 메서드에 구조입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.ArraySegment`1">
          <source>Determines whether two objects are equal.</source>
          <target state="translated">두 개체가 같은지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>The structure to compare with the current instance.</source>
          <target state="translated">현재 구조체와 비교할 구조체입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure is equal to the current instance.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 구조체가 현재 인스턴스와 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure is equal to the current instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 구조체가 현재 인스턴스와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be equal if all the following conditions are met:</source>
          <target state="translated">두 개의 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 개체는 다음 조건이 모두 충족 될 경우 동일한 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>They reference the same array.</source>
          <target state="translated">동일한 배열을 참조합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>They begin at the same index in the array.</source>
          <target state="translated">배열에서 같은 인덱스에서 시작 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>They have the same number of elements.</source>
          <target state="translated">요소 수가 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>The object to be compared with the current instance.</source>
          <target state="translated">현재 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>Determines whether the specified object is equal to the current instance.</source>
          <target state="translated">지정된 개체와 현재 개체가 같은지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is a <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure and is equal to the current instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 개체가 <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 구조체이고 현재 인스턴스와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be equal if all the following conditions are met:</source>
          <target state="translated">두 개의 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 개체는 다음 조건이 모두 충족 될 경우 동일한 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>They reference the same array.</source>
          <target state="translated">동일한 배열을 참조합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>They begin at the same index in the array.</source>
          <target state="translated">배열에서 같은 인덱스에서 시작 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>They have the same number of elements.</source>
          <target state="translated">요소 수가 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.GetHashCode">
          <source>Returns the hash code for the current instance.</source>
          <target state="translated">현재 인스턴스의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.Offset">
          <source>Gets the position of the first element in the range delimited by the array segment, relative to the start of the original array.</source>
          <target state="translated">배열 세그먼트로 구분된 범위의 첫 번째 요소 위치를 가져옵니다. 이 위치는 원본 배열의 시작에 상대적입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Offset">
          <source>The position of the first element in the range delimited by the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>, relative to the start of the original array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>로 구분된 범위의 첫 번째 요소 위치입니다. 이 위치는 원본 배열의 시작에 상대적입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Offset">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">다음 코드 예제에서는 전달 된 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 메서드에 구조입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The  structure on the left side of the equality operator.</source>
          <target state="translated">같음 연산자 왼쪽에 있는  구조체입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The structure on the right side of the equality operator.</source>
          <target state="translated">같음 연산자 오른쪽에 있는 구조체입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Indicates whether two <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structures are equal.</source>
          <target state="translated">두 개의 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 구조체가 같은지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="a" /&gt;</ph> is equal to <ph id="ph3">&lt;paramref name="b" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="a" /&gt;</ph>와 같으면 <ph id="ph3">&lt;paramref name="b" /&gt;</ph>이고, 그러지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be equal if all the following conditions are met:</source>
          <target state="translated">두 개의 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 개체는 다음 조건이 모두 충족 될 경우 동일한 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They reference the same array.</source>
          <target state="translated">동일한 배열을 참조합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They begin at the same index.</source>
          <target state="translated">동일한 인덱스에서 시작 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They have the same number of elements.</source>
          <target state="translated">요소 수가 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The structure on the left side of the inequality operator.</source>
          <target state="translated">같지 않음 연산자 왼쪽에 있는 구조체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The structure on the right side of the inequality operator.</source>
          <target state="translated">같지 않음 연산자 오른쪽에 있는 구조체입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Indicates whether two <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structures are unequal.</source>
          <target state="translated">두 가지 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 구조체가 같지 않은지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="a" /&gt;</ph> is not equal to <ph id="ph3">&lt;paramref name="b" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="a" /&gt;</ph>와 다르면 <ph id="ph3">&lt;paramref name="b" /&gt;</ph>이고, 그러지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be unequal if they are of the same closed generic type but any of the following conditions is true:</source>
          <target state="translated">두 개의 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 개체는 동일한 닫혀 있는 제네릭 형식 하지만 다음 조건 중 하나에 동일 하지 않은 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They do not reference the same array.</source>
          <target state="translated">동일한 배열을 참조 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They have different starting indexes.</source>
          <target state="translated">다른 시작 인덱스를 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They have a different number of elements.</source>
          <target state="translated">서로 다른 수의 요소를 갖습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The object to add to the array segment.</source>
          <target state="translated">배열 세그먼트에 추가할 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item to the array segment.</source>
          <target state="translated">배열 세그먼트에 항목을 추가합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The array segment is read-only.</source>
          <target state="translated">배열 세그먼트가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>Removes all items from the array segment.</source>
          <target state="translated">배열 세그먼트에서 모든 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>The array segment is read-only.</source>
          <target state="translated">배열 세그먼트가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>The object to locate in the array segment.</source>
          <target state="translated">배열 세그먼트에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>Determines whether the array segment contains a specific value.</source>
          <target state="translated">배열 세그먼트에 특정 값이 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the array segment; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="item" /&gt;</ph>이 배열 세그먼트에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the array segment.</source>
          <target state="translated">배열 세그먼트에서 복사한 요소의 대상인 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>Copies the elements of the array segment to an array, starting at the specified array index.</source>
          <target state="translated">지정한 배열 인덱스부터 배열 세그먼트의 요소를 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>가 다차원 배열인 경우</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source array segment is greater than the available space from <ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">소스 배열 세그먼트의 요소 수가 <ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph>부터 대상 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 끝까지의 사용 가능한 공간보다 큰 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>Type <ph id="ph1">&lt;paramref name="T" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="T" /&gt;</ph> 형식을 대상 <ph id="ph2">&lt;paramref name="array" /&gt;</ph>의 형식으로 자동 캐스팅할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value that indicates whether the array segment  is read-only.</source>
          <target state="translated">배열 세그먼트가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the array segment is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">배열 세그먼트가 읽기 전용이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>The object to remove from the array segment.</source>
          <target state="translated">배열 세그먼트에서 제거할 개체입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>Removes the first occurrence of a specific object from the array segment.</source>
          <target state="translated">배열 세그먼트에서 특정 개체가 처음 나타나는 부분을 제거합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> was successfully removed from the array segment; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="item" /&gt;</ph>이 배열 세그먼트에서 성공적으로 제거되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is not found in the array segment.</source>
          <target state="translated">이 메서드는 배열 세그먼트에 <ph id="ph2">&lt;paramref name="item" /&gt;</ph>이 없는 경우에도 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>The array segment is read-only.</source>
          <target state="translated">배열 세그먼트가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the array segment.</source>
          <target state="translated">배열 세그먼트를 반복하는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the array segment.</source>
          <target state="translated">배열 세그먼트를 반복하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>The object to locate in the array segment.</source>
          <target state="translated">배열 세그먼트에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>Determines the index of a specific item in the array segment.</source>
          <target state="translated">배열 세그먼트에서 특정 항목의 인덱스를 확인합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>The index of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">목록에 있으면 <ph id="ph1">&lt;paramref name="item" /&gt;</ph>의 인덱스이고, 그렇지 않으면 -1입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>항목<ept id="p1">&lt;/c&gt;</ept>이 삽입될 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The object to insert into the array segment.</source>
          <target state="translated">배열 세그먼트에 삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>Inserts an item into the array segment at the specified index.</source>
          <target state="translated">항목을 배열 세그먼트의 지정된 인덱스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the array segment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 배열 세그먼트의 유효한 인덱스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The array segment is read-only.</source>
          <target state="translated">배열 세그먼트가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">지정한 인덱스의 요소입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface, as the following example shows.</source>
          <target state="translated">사용할 수 있습니다 경우에만 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> 다음 예제와 같이 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>의 유효한 인덱스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The property is set and the array segment is read-only.</source>
          <target state="translated">속성이 설정되어 있으며 배열 세그먼트가 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove.</source>
          <target state="translated">제거할 항목의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>Removes the array segment item at the specified index.</source>
          <target state="translated">지정된 인덱스에 있는 배열 세그먼트 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the array segment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 배열 세그먼트의 유효한 인덱스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>The array segment is read-only.</source>
          <target state="translated">배열 세그먼트가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The zero-based index of the element to get.</source>
          <target state="translated">가져올 요소의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>Gets the element at the specified index of the array segment.</source>
          <target state="translated">배열 세그먼트의 지정된 인덱스에 있는 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">지정한 인덱스의 요소입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyList%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyList%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>의 유효한 인덱스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The property is set.</source>
          <target state="translated">속성이 설정된 경우</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through an array segment.</source>
          <target state="translated">배열 세그먼트를 반복하는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the array segment.</source>
          <target state="translated">배열 세그먼트를 반복하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>