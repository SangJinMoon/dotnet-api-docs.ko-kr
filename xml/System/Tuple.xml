<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c38ffad7637e8473b8613a855ed60406c608f1b4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c38ffad7637e8473b8613a855ed60406c608f1b4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Tuple">
          <source>Provides static methods for creating tuple objects.</source>
          <target state="translated">튜플 개체를 생성하기 위한 정적 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>A tuple is a data structure that has a specific number and sequence of elements.</source>
          <target state="translated">튜플은 특정 수 및 요소의 시퀀스를 포함 하는 데이터 구조입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>An example of a tuple is a data structure with three elements (known as a 3-tuple or triple) that is used to store an identifier such as a person's name in the first element, a year in the second element, and the person's income for that year in the third element.</source>
          <target state="translated">튜플의 예로 세 번째 요소에서 해당 연도 대 한 두 번째 요소와 사용자의 수입에서 년, 첫 번째 요소에서 사용자의 이름과 같은 식별자를 저장 하는 데 사용 되는 데이터 구조 (3-튜플 또는 셋) 요소 세 개가 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>The .NET Framework directly supports tuples with one to seven elements.</source>
          <target state="translated">.NET Framework 1-7 요소 튜플을 직접 지원합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>In addition, you can create tuples of eight or more elements by nesting tuple objects in the <ph id="ph1">&lt;xref:System.Tuple%608.Rest%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Tuple%608&gt;</ph> object.</source>
          <target state="translated">또한 튜플 8 개 이상의 요소에서 튜플 개체를 중첩 하 여 만들 수 있습니다는 <ph id="ph1">&lt;xref:System.Tuple%608.Rest%2A&gt;</ph> 의 속성을 <ph id="ph2">&lt;xref:System.Tuple%608&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>Tuples are commonly used in four ways:</source>
          <target state="translated">튜플의 네 가지 방법으로 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>To represent a single set of data.</source>
          <target state="translated">단일 데이터 집합이 나타내려는 경우.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>For example, a tuple can represent a database record, and its components can represent individual fields of the record.</source>
          <target state="translated">예를 들어 튜플을 데이터베이스 레코드를 나타내고 해당 구성 요소 레코드의 개별 필드를 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>To provide easy access to, and manipulation of, a data set.</source>
          <target state="translated">및 제공 하기 위해 쉽게 액세스 하는 데이터 집합의 조작 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>To return multiple values from a method without using <ph id="ph1">`out`</ph> parameters (in C#) or <ph id="ph2">`ByRef`</ph> parameters (in Visual Basic).</source>
          <target state="translated">메서드에서 사용 하지 않고 여러 값을 반환 하려면 <ph id="ph1">`out`</ph> 매개 변수 (C#) 또는 <ph id="ph2">`ByRef`</ph> 매개 변수 (Visual Basic의 경우).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>To pass multiple values to a method through a single parameter.</source>
          <target state="translated">값이 여러 개인 단일 매개 변수를 통해 메서드에 전달 하 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>For example, the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> method has a single parameter that lets you supply one value to the method that the thread executes at startup time.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType&gt;</ph> 메서드는 시작 시에 스레드가 실행 되는 메서드를 하나의 값을 제공할 수 있는 단일 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>If you supply a <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> object as the method argument, you can supply the thread’s startup routine with three items of data.</source>
          <target state="translated">제공 하는 경우는 <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph> 메서드 인수로 개체 데이터의 세 가지 항목으로 스레드 시작 루틴을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>The <ph id="ph1">&lt;xref:System.Tuple&gt;</ph> class does not itself represent a tuple.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple&gt;</ph> 클래스 자체를 나타내지 않습니다 튜플입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>Instead, it is a class that provides static methods for creating instances of the tuple types that are supported by the .NET Framework.</source>
          <target state="translated">대신,.NET Framework에서 지원 되는 튜플 형식의 인스턴스를 만들기 위한 정적 메서드를 제공 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>It provides helper methods that you can call to instantiate tuple objects without having to explicitly specify the type of each tuple component.</source>
          <target state="translated">튜플 개체를 인스턴스화하는 각 튜플의 형식을 명시적으로 지정 하지 않고 호출할 수 있는 도우미 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>Although you can create an instance of a tuple class by calling its class constructor, the code to do so can be cumbersome.</source>
          <target state="translated">해당 클래스 생성자를 호출 하 여 튜플 클래스의 인스턴스를 만들 수 있지만 이렇게 하려면 코드는 복잡할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>The following example uses a class constructor to create a 7-tuple or septuple that contains population data for New York City for each census from 1950 through 2000.</source>
          <target state="translated">다음 예제에서는 클래스 생성자에 7 튜플을 만드는 데 사용 하 여 이거나 뉴욕시에 대 한 각 1950 2000 년 인구 조사에 대 한 인구 데이터를 포함 하는 7 중.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>Creating the same tuple object by using a helper method is more straightforward, as the following example shows.</source>
          <target state="translated">도우미 메서드를 사용 하 여 동일한 튜플 개체를 만들기는 다음 예제와 같이 더 간단 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>The <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> helper methods directly support the creation of tuple objects that have from one to eight components (that is, singletons through octuples).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 도우미 메서드는 직접 튜플 개체를 1 ~ 8 개의 구성 요소 (즉, 단일 항목을 통해 옥)의 생성을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>Although there is no practical limit to the number of components a tuple may have, helper methods are not available to create a tuple with nine or more components.</source>
          <target state="translated">구성 요소 수에 실제적인 제한은 없지만 튜플이 가질 수 있는, 도우미 메서드는 9 개 이상의 구성 요소가 있는 튜플을 만드는 데 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>To create such a tuple, you must call the <ph id="ph1">&lt;xref:System.Tuple%608.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">호출 해야 이러한 튜플을 만들려면는 <ph id="ph1">&lt;xref:System.Tuple%608.%23ctor%2A?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>For additional information and examples that use tuples, see the documentation for the individual tuple types in the .NET Framework.</source>
          <target state="translated">추가 정보 및 튜플을 사용 하는 예제에 대 한.NET Framework의 개별 튜플 형식에 대 한 설명서를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>These are listed in the See Also section at the end of this topic.</source>
          <target state="translated">이러한 작업은이 항목의 끝에 있는 참고 항목 섹션에 나열 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple">
          <source>The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20.</source>
          <target state="translated">다음 예제는 8-튜플 (개의 요소로 구성 된) 소수 20 보다 작은 포함 하는 만듭니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Tuple">
          <source>Creates a new tuple object.</source>
          <target state="translated">새 튜플 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``1(``0)">
          <source>The type of the only component of the tuple.</source>
          <target state="translated">튜플의 유일한 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``1(``0)">
          <source>The value of the only component of the tuple.</source>
          <target state="translated">튜플의 유일한 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``1(``0)">
          <source>Creates a new 1-tuple, or singleton.</source>
          <target state="translated">1개의 요소로 구성된 새 튜플 또는 singleton을 만듭니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``1(``0)">
          <source>A tuple whose value is (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>).</source>
          <target state="translated">값이 (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>)인 튜플입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``1(``0)">
          <source><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> is a helper method that you can call to instantiate a 1-tuple object without having to explicitly specify the type of its component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 1-튜플 개체를 명시적으로 구성 요소의 유형을 지정 하지 않고 인스턴스화할 호출할 수 있는 도우미 메서드입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``1(``0)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> method to instantiate a 1-tuple whose component is of type <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 메서드를 가진 구성 요소가 형식 1-튜플 인스턴스화하 <ph id="ph2">&lt;xref:System.Int32&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``1(``0)">
          <source>This code is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%601.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">이 코드는 다음 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Tuple%601.%23ctor%2A&gt;</ph> 클래스 생성자입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``2(``0,``1)">
          <source>The type of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``2(``0,``1)">
          <source>The type of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``2(``0,``1)">
          <source>The value of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``2(``0,``1)">
          <source>The value of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``2(``0,``1)">
          <source>Creates a new 2-tuple, or pair.</source>
          <target state="translated">2개의 요소로 구성된 새 튜플 또는 쌍을 만듭니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``2(``0,``1)">
          <source>A 2-tuple whose value is (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>).</source>
          <target state="translated">값이 (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>)인 2개의 요소로 구성된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``2(``0,``1)">
          <source><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> is a helper method that you can call to instantiate a 2-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 2 튜플 개체를 명시적으로 구성 요소의 유형을 지정 하지 않고 인스턴스화할 호출할 수 있는 도우미 메서드입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``2(``0,``1)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> method to instantiate a 2-tuple.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 를 인스턴스화하는 2-튜플 메서드.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``2(``0,``1)">
          <source>This code is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%602.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">이 코드는 다음 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Tuple%602.%23ctor%2A&gt;</ph> 클래스 생성자입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source>The type of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source>The type of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source>The type of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source>The value of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source>The value of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source>The value of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source>Creates a new 3-tuple, or triple.</source>
          <target state="translated">3개의 요소로 구성된 새 튜플 또는 3중을 만듭니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source>A 3-tuple whose value is (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>).</source>
          <target state="translated">값이 (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>)인 3개의 요소로 구성된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> is a helper method that you can call to instantiate a 3-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 명시적으로 구성 요소의 유형을 지정 하지 않고 3-튜플 개체를 인스턴스화할 호출할 수 있는 도우미 메서드입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> method to instantiate a 3-tuple.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 메서드 3-튜플 인스턴스화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``3(``0,``1,``2)">
          <source>This code is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%603.%23ctor%2A?displayProperty=nameWithType&gt;</ph> class constructor.</source>
          <target state="translated">이 코드는 다음 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Tuple%603.%23ctor%2A?displayProperty=nameWithType&gt;</ph> 클래스 생성자입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>The type of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>The type of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>The type of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>The type of the fourth component of the tuple.</source>
          <target state="translated">튜플의 네 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>The value of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>The value of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>The value of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>The value of the fourth component of the tuple.</source>
          <target state="translated">튜플의 네 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>Creates a new 4-tuple, or quadruple.</source>
          <target state="translated">4개의 요소로 구성된 새 튜플 또는 4중을 만듭니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>A 4-tuple whose value is (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>, <ph id="ph4">&lt;paramref name="item4" /&gt;</ph>).</source>
          <target state="translated">값이 (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>, <ph id="ph4">&lt;paramref name="item4" /&gt;</ph>)인 4개의 요소로 구성된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> is a helper method that you can call to instantiate a 4-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 명시적으로 구성 요소의 유형을 지정 하지 않고 4-튜플 개체를 인스턴스화할 수를 호출할 수 있는 도우미 메서드입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> method to instantiate a 4-tuple.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 메서드 4-튜플 인스턴스화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``4(``0,``1,``2,``3)">
          <source>This code is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%604.%23ctor%2A?displayProperty=nameWithType&gt;</ph> class constructor.</source>
          <target state="translated">이 코드는 다음 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Tuple%604.%23ctor%2A?displayProperty=nameWithType&gt;</ph> 클래스 생성자입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The type of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The type of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The type of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The type of the fourth component of the tuple.</source>
          <target state="translated">튜플의 네 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The type of the fifth component of the tuple.</source>
          <target state="translated">튜플의 다섯 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The value of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The value of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The value of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The value of the fourth component of the tuple.</source>
          <target state="translated">튜플의 네 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The value of the fifth component of the tuple.</source>
          <target state="translated">튜플의 다섯 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>Creates a new 5-tuple, or quintuple.</source>
          <target state="translated">5개의 요소로 구성된 새 튜플 또는 5중을 만듭니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>A 5-tuple whose value is (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>, <ph id="ph4">&lt;paramref name="item4" /&gt;</ph>, <ph id="ph5">&lt;paramref name="item5" /&gt;</ph>).</source>
          <target state="translated">값이 (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>, <ph id="ph4">&lt;paramref name="item4" /&gt;</ph>, <ph id="ph5">&lt;paramref name="item5" /&gt;</ph>)인 5개의 요소로 구성된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> is a helper method that you can call to instantiate a 5-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 5-튜플 개체를 명시적으로 구성 요소의 유형을 지정 하지 않고 인스턴스화할 호출할 수 있는 도우미 메서드입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> method to instantiate a 5-tuple.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 를 인스턴스화하는 5-튜플 메서드.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
          <source>This code is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">이 코드는 다음 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Tuple%605.%23ctor%2A&gt;</ph> 클래스 생성자입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The type of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The type of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The type of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The type of the fourth component of the tuple.</source>
          <target state="translated">튜플의 네 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The type of the fifth component of the tuple.</source>
          <target state="translated">튜플의 다섯 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The type of the sixth component of the tuple.</source>
          <target state="translated">튜플의 여섯 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The value of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The value of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The value of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The value of the fourth component of the tuple.</source>
          <target state="translated">튜플의 네 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The value of the fifth component of the tuple.</source>
          <target state="translated">튜플의 다섯 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The value of the sixth component of the tuple.</source>
          <target state="translated">튜플의 여섯 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>Creates a new 6-tuple, or sextuple.</source>
          <target state="translated">6개의 요소로 구성된 새 튜플 또는 6중을 만듭니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>A 6-tuple whose value is (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>, <ph id="ph4">&lt;paramref name="item4" /&gt;</ph>, <ph id="ph5">&lt;paramref name="item5" /&gt;</ph>, <ph id="ph6">&lt;paramref name="item6" /&gt;</ph>).</source>
          <target state="translated">값이 (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>, <ph id="ph4">&lt;paramref name="item4" /&gt;</ph>, <ph id="ph5">&lt;paramref name="item5" /&gt;</ph>, <ph id="ph6">&lt;paramref name="item6" /&gt;</ph>)인 6개의 요소로 구성된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> is a helper method that you can call to instantiate a 6-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 명시적으로 구성 요소의 유형을 지정 하지 않고 6-튜플 개체를 인스턴스화하기 위해 호출할 수 있는 도우미 메서드입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> method to instantiate a 6-tuple.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 를 인스턴스화하는 6-튜플 메서드.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
          <source>This code is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%606.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">이 코드는 다음 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Tuple%606.%23ctor%2A&gt;</ph> 클래스 생성자입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The type of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The type of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The type of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The type of the fourth component of the tuple.</source>
          <target state="translated">튜플의 네 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The type of the fifth component of the tuple.</source>
          <target state="translated">튜플의 다섯 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The type of the sixth component of the tuple.</source>
          <target state="translated">튜플의 여섯 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The type of the seventh component of the tuple.</source>
          <target state="translated">튜플의 일곱 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The value of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The value of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The value of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The value of the fourth component of the tuple.</source>
          <target state="translated">튜플의 네 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The value of the fifth component of the tuple.</source>
          <target state="translated">튜플의 다섯 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The value of the sixth component of the tuple.</source>
          <target state="translated">튜플의 여섯 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The value of the seventh component of the tuple.</source>
          <target state="translated">튜플의 일곱 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>Creates a new 7-tuple, or septuple.</source>
          <target state="translated">7개의 요소로 구성된 새 튜플 또는 7중을 만듭니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>A 7-tuple whose value is (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>, <ph id="ph4">&lt;paramref name="item4" /&gt;</ph>, <ph id="ph5">&lt;paramref name="item5" /&gt;</ph>, <ph id="ph6">&lt;paramref name="item6" /&gt;</ph>, <ph id="ph7">&lt;paramref name="item7" /&gt;</ph>).</source>
          <target state="translated">값이 (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>, <ph id="ph4">&lt;paramref name="item4" /&gt;</ph>, <ph id="ph5">&lt;paramref name="item5" /&gt;</ph>, <ph id="ph6">&lt;paramref name="item6" /&gt;</ph>, <ph id="ph7">&lt;paramref name="item7" /&gt;</ph>)인 7개의 요소로 구성된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> is a helper method that you can call to instantiate a 7-tuple object without having to explicitly specify the types of its components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 명시적으로 구성 요소의 유형을 지정 하지 않고 7-튜플 개체를 인스턴스화할 호출할 수 있는 도우미 메서드입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> method to instantiate a 7-tuple.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 를 인스턴스화하는 7-튜플 메서드.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
          <source>This code is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%607.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">이 코드는 다음 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Tuple%607.%23ctor%2A&gt;</ph> 클래스 생성자입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The type of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The type of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The type of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The type of the fourth component of the tuple.</source>
          <target state="translated">튜플의 네 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The type of the fifth component of the tuple.</source>
          <target state="translated">튜플의 다섯 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The type of the sixth component of the tuple.</source>
          <target state="translated">튜플의 여섯 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The type of the seventh component of the tuple.</source>
          <target state="translated">튜플의 일곱 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The type of the eighth component of the tuple.</source>
          <target state="translated">튜플의 여덟 번째 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The value of the first component of the tuple.</source>
          <target state="translated">튜플의 첫 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The value of the second component of the tuple.</source>
          <target state="translated">튜플의 두 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The value of the third component of the tuple.</source>
          <target state="translated">튜플의 세 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The value of the fourth component of the tuple.</source>
          <target state="translated">튜플의 네 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The value of the fifth component of the tuple.</source>
          <target state="translated">튜플의 다섯 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The value of the sixth component of the tuple.</source>
          <target state="translated">튜플의 여섯 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The value of the seventh component of the tuple.</source>
          <target state="translated">튜플의 일곱 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The value of the eighth component of the tuple.</source>
          <target state="translated">튜플의 여덟 번째 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>Creates a new 8-tuple, or octuple.</source>
          <target state="translated">8개의 요소로 구성된 새 튜플을 만듭니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>An 8-tuple (octuple) whose value is (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>, <ph id="ph4">&lt;paramref name="item4" /&gt;</ph>, <ph id="ph5">&lt;paramref name="item5" /&gt;</ph>, <ph id="ph6">&lt;paramref name="item6" /&gt;</ph>, <ph id="ph7">&lt;paramref name="item7" /&gt;</ph>, <ph id="ph8">&lt;paramref name="item8" /&gt;</ph>).</source>
          <target state="translated">값이 (<ph id="ph1">&lt;paramref name="item1" /&gt;</ph>, <ph id="ph2">&lt;paramref name="item2" /&gt;</ph>, <ph id="ph3">&lt;paramref name="item3" /&gt;</ph>, <ph id="ph4">&lt;paramref name="item4" /&gt;</ph>, <ph id="ph5">&lt;paramref name="item5" /&gt;</ph>, <ph id="ph6">&lt;paramref name="item6" /&gt;</ph>, <ph id="ph7">&lt;paramref name="item7" /&gt;</ph>, <ph id="ph8">&lt;paramref name="item8" /&gt;</ph>)인 8개의 요소로 구성된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> is a helper method that you can call to instantiate an 8-tuple without having to explicitly specify the types of its components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 명시적으로 구성 요소의 유형을 지정 하지 않고 8-튜플을 인스턴스화하기 위해 호출할 수 있는 도우미 메서드입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>You must call the  <ph id="ph1">&lt;xref:System.Tuple%608.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor to create a tuple with nine or more components unless your language provides a special syntax for this purpose.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Tuple%608.%23ctor%2A?displayProperty=nameWithType&gt;</ph> 언어는이 목적을 위해 특수 한 구문을 제공 하지 않는 한 9 개 이상의 구성 요소가 있는 튜플을 만드는 데 생성자입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The static (<ph id="ph1">`Shared`</ph> in Visual Basic) methods of the <ph id="ph2">&lt;xref:System.Tuple&gt;</ph> class cannot be used to create a tuple with nine or more components.</source>
          <target state="translated">정적 (<ph id="ph1">`Shared`</ph> Visual basic에서)의 메서드는 <ph id="ph2">&lt;xref:System.Tuple&gt;</ph> 클래스 9 개 이상의 구성 요소가 있는 튜플을 만드는 데 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>The following example creates an 8-tuple whose components are prime numbers that are less than 20.</source>
          <target state="translated">다음 예제에서는 구성 요소가 20 보다 작은 소수 8-튜플을 만듭니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>This is equivalent to the following example, which uses the <ph id="ph1">&lt;xref:System.Tuple%608&gt;</ph> class constructor instead of the <ph id="ph2">&lt;xref:System.Tuple.Create%2A&gt;</ph> factory creation method.</source>
          <target state="translated">이 사용 하는 다음 예에 해당 하는 <ph id="ph1">&lt;xref:System.Tuple%608&gt;</ph> 대신 클래스 생성자는 <ph id="ph2">&lt;xref:System.Tuple.Create%2A&gt;</ph> 팩터리 생성 방법.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
          <source>Note that instantiating a <ph id="ph1">&lt;xref:System.Tuple%608&gt;</ph> object in this way involves considerably more code, because you must declare a nested <ph id="ph2">&lt;xref:System.Tuple%601&gt;</ph> object as the <ph id="ph3">&lt;xref:System.Tuple%608&gt;</ph> object's eighth component to produce an octuple.</source>
          <target state="translated">인스턴스화하면는 <ph id="ph1">&lt;xref:System.Tuple%608&gt;</ph> 중첩 된 선언 해야 하기 때문에 이러한 방식으로 개체에 상당히 많은 코드를 포함 <ph id="ph2">&lt;xref:System.Tuple%601&gt;</ph> 개체로 <ph id="ph3">&lt;xref:System.Tuple%608&gt;</ph> 를 생성 한 개의 요소로 구성 된 개체의 여덟 번째 구성 요소입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>