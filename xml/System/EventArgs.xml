<Type Name="EventArgs" FullName="System.EventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="433d54c8b436effe3a0f7f53cc927a85e2d22350" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit EventArgs extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b6eec-101">이벤트 데이터를 포함하는 클래스의 기본 클래스를 나타내며 이벤트 데이터를 포함하지 않는 이벤트에 사용할 값을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b6eec-101">Represents the base class for classes that contain event data, and provides a value to use for events that do not include event data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6eec-102">이 클래스는 이벤트 데이터를 나타내는 모든 클래스에 대 한 기본 클래스로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b6eec-102">This class serves as the base class for all classes that represent event data.</span></span> <span data-ttu-id="b6eec-103">예를 들어는 <xref:System.AssemblyLoadEventArgs?displayProperty=nameWithType> 클래스에서 파생 <xref:System.EventArgs> 어셈블리 로드 이벤트에 대 한 데이터를 보관 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b6eec-103">For example, the <xref:System.AssemblyLoadEventArgs?displayProperty=nameWithType> class derives from <xref:System.EventArgs> and is used to hold the data for assembly load events.</span></span> <span data-ttu-id="b6eec-104">사용자 지정 이벤트 데이터 클래스를 만들려면에서 파생 되는 클래스를 만듭니다는 <xref:System.EventArgs> 클래스 하 고 필요한 데이터를 저장 하는 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b6eec-104">To create a custom event data class, create a class that derives from the <xref:System.EventArgs> class and provide the properties to store the necessary data.</span></span> <span data-ttu-id="b6eec-105">사용자 지정 이벤트 데이터 클래스의 이름으로 끝나야 `EventArgs`합니다.</span><span class="sxs-lookup"><span data-stu-id="b6eec-105">The name of your custom event data class should end with `EventArgs`.</span></span>  
  
 <span data-ttu-id="b6eec-106">모든 데이터를 포함 하지 않는 개체를 전달 하려면 사용 된 <xref:System.EventArgs.Empty> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b6eec-106">To pass an object that does not contain any data, use the <xref:System.EventArgs.Empty> field.</span></span>  
  
 <span data-ttu-id="b6eec-107">이벤트에 대 한 자세한 내용은 참조는 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 문서.</span><span class="sxs-lookup"><span data-stu-id="b6eec-107">For more information about events, see the [Handling and Raising Events](~/docs/standard/events/index.md) article.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6eec-108">다음 예에서는 라는 사용자 지정 이벤트 데이터 클래스 `ThresholdReachedEventArgs` 에서 파생 되는 <xref:System.EventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b6eec-108">The following example shows a custom event data class named `ThresholdReachedEventArgs` that derives from the <xref:System.EventArgs> class.</span></span> <span data-ttu-id="b6eec-109">에 대 한 이벤트 처리기에 전달 되는 이벤트 데이터 클래스의 인스턴스는 `ThresholdReached` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b6eec-109">An instance of the event data class is passed to the event handler for the `ThresholdReached` event.</span></span>  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b6eec-110">
            <see cref="T:System.EventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6eec-110">Initializes a new instance of the <see cref="T:System.EventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6eec-111">모든 데이터를 포함 하지 않는 개체를 전달 하려면 사용 된 <xref:System.EventArgs.Empty> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b6eec-111">To pass an object that does not contain any data, use the <xref:System.EventArgs.Empty> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly EventArgs Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.EventArgs Empty" />
      <MemberSignature Language="DocId" Value="F:System.EventArgs.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As EventArgs " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly EventArgs ^ Empty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventArgs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b6eec-112">이벤트 데이터가 없는 이벤트에 사용할 값을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b6eec-112">Provides a value to use with events that do not have event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6eec-113">데이터를 갖지 않는 이벤트와 연결 된 이벤트 처리기에이 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b6eec-113">Pass this value to event handlers that are associated with events that do not have data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6eec-114">다음 예제에서는 임계값 equaled 하거나 임계값이 초과 될 때 이벤트를 발생 시키는 간단한 계산 응용 프로그램을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b6eec-114">The following example shows a simple counting application that raises an event when a threshold is equaled or exceeded.</span></span> <span data-ttu-id="b6eec-115"><xref:System.EventArgs.Empty> 필드에 전달 되는 `OnThresholdReached` 메서드.</span><span class="sxs-lookup"><span data-stu-id="b6eec-115">The <xref:System.EventArgs.Empty> field is passed to the `OnThresholdReached` method.</span></span>  
  
 [!code-csharp[EventsOverview#5](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programnodata.cs#5)]
 [!code-vb[EventsOverview#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1nodata.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>