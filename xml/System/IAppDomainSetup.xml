<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IAppDomainSetup.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5dadff5f1f9fc25f4b5cc28e70b45754e490673fd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dadff5f1f9fc25f4b5cc28e70b45754e490673fd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IAppDomainSetup">
          <source>Represents assembly binding information that can be added to an instance of <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>의 인스턴스에 추가할 수 있는 어셈블리 바인딩 정보를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IAppDomainSetup">
          <source>Members of this interface are used with the <ph id="ph1">&lt;xref:System.AppDomain.GetData%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.AppDomain.SetData%2A?displayProperty=nameWithType&gt;</ph> methods to identify the <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph> data to use.</source>
          <target state="translated">이 인터페이스의 멤버에 사용 되는 <ph id="ph1">&lt;xref:System.AppDomain.GetData%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.AppDomain.SetData%2A?displayProperty=nameWithType&gt;</ph> 식별 하는 메서드는 <ph id="ph3">&lt;xref:System.AppDomain&gt;</ph> 사용할 데이터를 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.IAppDomainSetup.ApplicationBase">
          <source>Gets or sets the name of the directory containing the application.</source>
          <target state="translated">응용 프로그램이 들어 있는 디렉터리의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ApplicationBase">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containg the name of the application base directory.</source>
          <target state="translated">응용 프로그램 기본 디렉터리의 이름이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ApplicationBase">
          <source>Used when getting or setting the assembly cache manager's APPBASE variable.</source>
          <target state="translated">가져오거나 어셈블리 캐시 관리자 APPBASE 변수를 설정할 때 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ApplicationBase">
          <source>This is the directory where the assembly manager should begin probing for assemblies.</source>
          <target state="translated">이 어셈블리에 대 한 검색 어셈블리 관리자를 시작할 위치 디렉터리.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ApplicationBase">
          <source>This property cannot be changed after the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.</source>
          <target state="translated">이후에이 속성을 변경할 수 없습니다는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 첫 번째 바인딩을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.IAppDomainSetup.ApplicationName">
          <source>Gets or sets the name of the application.</source>
          <target state="translated">응용 프로그램의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ApplicationName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that is the name of the application.</source>
          <target state="translated">응용 프로그램의 이름을 나타내는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.IAppDomainSetup.CachePath">
          <source>Gets and sets the name of an area specific to the application where files are shadow copied.</source>
          <target state="translated">파일을 섀도 복사한 응용 프로그램 관련 영역의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.CachePath">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that is the fully-qualified name of the directory path and file name where files are shadow copied.</source>
          <target state="translated">파일을 섀도 복사한 디렉터리 경로와 파일의 정규화된 이름을 나타내는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.IAppDomainSetup.ConfigurationFile">
          <source>Gets and sets the name of the configuration file for an application domain.</source>
          <target state="translated">응용 프로그램 도메인의 구성 파일 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ConfigurationFile">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that specifies the name of the configuration file.</source>
          <target state="translated">구성 파일의 이름을 지정하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ConfigurationFile">
          <source>The configuration file describes the search rules and configuration data for the application domain.</source>
          <target state="translated">구성 파일 검색 규칙 및 응용 프로그램 도메인에 대 한 구성 데이터를 설명합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ConfigurationFile">
          <source>The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.</source>
          <target state="translated">응용 프로그램 도메인을 만드는 호스트는 의미 있는 값 다 상황에 있기 때문에이 데이터를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ConfigurationFile">
          <source>For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer.</source>
          <target state="translated">예를 들어 ASP.NET 응용 프로그램에 대 한 구성 데이터는 각 응용 프로그램, 사용자 및 컴퓨터에 대 한 실행 파일에 대 한 구성 데이터는 저장 하는 동안 각 응용 프로그램, 사이트 및 컴퓨터에 대 한 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ConfigurationFile">
          <source>Only the host knows the specifics of the configuration data for a particular circumstance.</source>
          <target state="translated">호스트만 특정 상황에 대 한 구성 데이터의 고유 정보를 알고 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ConfigurationFile">
          <source>This property cannot be changed after the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.</source>
          <target state="translated">이후에이 속성을 변경할 수 없습니다는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 첫 번째 바인딩을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.IAppDomainSetup.DynamicBase">
          <source>Gets or sets the directory where dynamically generated files are stored and accessed.</source>
          <target state="translated">동적으로 생성된 파일이 저장되고 액세스되는 디렉터리를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.DynamicBase">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that specifies the directory containing dynamic assemblies.</source>
          <target state="translated">동적 어셈블리가 들어 있는 디렉터리를 지정하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.DynamicBase">
          <source>When an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> is created, a directory called the Dynamic Directory can be specified to store dynamic assemblies.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 가 만들어지면 동적 디렉터리 라는 디렉터리를 지정할 수 있습니다 동적 어셈블리를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.DynamicBase">
          <source>This directory is logically located under the <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph>, although it can reside in another part of the directory.</source>
          <target state="translated">이 디렉터리 아래에 있는 논리적으로 <ph id="ph1">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph>디렉터리의 다른 부분에 있을 수 있지만, 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.DynamicBase">
          <source>This property cannot be changed after the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.</source>
          <target state="translated">이후에이 속성을 변경할 수 없습니다는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 첫 번째 바인딩을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.IAppDomainSetup.LicenseFile">
          <source>Gets or sets the location of the license file associated with this domain.</source>
          <target state="translated">이 도메인과 관련된 라이센스 파일의 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.LicenseFile">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that specifies the name of the license file.</source>
          <target state="translated">라이센스 파일의 이름을 지정하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.IAppDomainSetup.PrivateBinPath">
          <source>Gets or sets the list of directories that is combined with the <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ApplicationBase" /&gt;</ph> directory to probe for private assemblies.</source>
          <target state="translated">전용 어셈블리를 조사할 <ph id="ph1">&lt;see cref="P:System.AppDomainSetup.ApplicationBase" /&gt;</ph> 디렉터리와 연결된 디렉터리의 목록을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.PrivateBinPath">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing a list of directory names, where each name is separated by a semicolon.</source>
          <target state="translated">각 이름이 세미콜론으로 구분된 디렉터리 목록이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.PrivateBinPath">
          <source>Private assemblies are deployed in the same directory structure as the application.</source>
          <target state="translated">전용 어셈블리는 응용 프로그램과 동일한 디렉터리 구조에 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.IAppDomainSetup.PrivateBinPathProbe">
          <source>Gets or sets the private binary directory path used to locate an application.</source>
          <target state="translated">응용 프로그램을 찾는 데 사용되는 전용 이진 디렉터리 경로를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.PrivateBinPathProbe">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing a list of directory names, where each name is separated by a semicolon.</source>
          <target state="translated">각 이름이 세미콜론으로 구분된 디렉터리 목록이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.PrivateBinPathProbe">
          <source>Set this property to exclude the application directory path from the search for the application.</source>
          <target state="translated">응용 프로그램에 대 한 검색을 통해 응용 프로그램 디렉터리 경로 제외 하려면이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.PrivateBinPathProbe">
          <source>The search is restricted to private and global binary directory paths, and the global assembly cache.</source>
          <target state="translated">검색은 개인 및 전역 이진 디렉터리 경로 전역 어셈블리 캐시에만 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.PrivateBinPathProbe">
          <source>This property cannot be changed after the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.</source>
          <target state="translated">이후에이 속성을 변경할 수 없습니다는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 첫 번째 바인딩을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.IAppDomainSetup.ShadowCopyDirectories">
          <source>Gets or sets the names of the directories containing assemblies to be shadow copied.</source>
          <target state="translated">섀도 복사할 어셈블리가 들어 있는 디렉터리의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ShadowCopyDirectories">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing a list of directory names, where each name is separated by a semicolon.</source>
          <target state="translated">각 이름이 세미콜론으로 구분된 디렉터리 목록이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ShadowCopyDirectories">
          <source>All directories specified by <ph id="ph1">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph>, including the directory specified by <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph>, are shadow copied by default if this property is not set.</source>
          <target state="translated">지정한 모든 디렉터리 <ph id="ph1">&lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</ph>로 지정 된 디렉터리를 포함 하 여 <ph id="ph2">&lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;</ph>, 섀도이 속성을 설정 하지 않으면 기본적으로 복사 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ShadowCopyDirectories">
          <source>If an executable file is in use, updates to the executable file are stored in a shadow copy directory.</source>
          <target state="translated">실행 파일이 사용 중인 경우 실행 파일에 대 한 업데이트는 섀도 복사 디렉터리에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ShadowCopyDirectories">
          <source>Existing users continue using the original executable file until it terminates, while new users use the shadow copied executable file.</source>
          <target state="translated">기존 사용자가 계속 종료 될 때까지 원래 실행 파일을 사용 하 여, 새 사용자를 사용 하는 동안 그림자 실행 파일을 복사 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ShadowCopyDirectories">
          <source>This property cannot be changed after the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.</source>
          <target state="translated">이후에이 속성을 변경할 수 없습니다는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 첫 번째 바인딩을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.IAppDomainSetup.ShadowCopyFiles">
          <source>Gets or sets a string that indicates whether shadow copying is turned on or off.</source>
          <target state="translated">섀도 복사를 설정하거나 해제할지 여부를 나타내는 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ShadowCopyFiles">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the value "true" to indicate that shadow copying is turned on; or "false" to indicate that shadow copying is turned off.</source>
          <target state="translated">섀도 복사가 설정되었음을 나타내는 "true" 값 또는 섀도 복사가 해제되었음을 나타내는 "false" 값이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IAppDomainSetup.ShadowCopyFiles">
          <source>This property cannot be changed after the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> has finished its first bind.</source>
          <target state="translated">이후에이 속성을 변경할 수 없습니다는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 첫 번째 바인딩을 완료 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>