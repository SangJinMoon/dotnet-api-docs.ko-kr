<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UriParser.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac518211f47087f208e898b72272d14ecd78771eb8c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18211f47087f208e898b72272d14ecd78771eb8c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.UriParser">
          <source>Parses a new URI scheme.</source>
          <target state="translated">새 URI 체계를 구문 분석합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.UriParser">
          <source>This is an abstract class.</source>
          <target state="translated">이 클래스는 추상 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>The UriParser class enables you to create parsers for new URI schemes.</source>
          <target state="translated">UriParser 클래스를 사용 하면 새 URI 체계에 대 한 파서를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols).</source>
          <target state="translated">전체적으로 이러한 파서 쓰거나 파서 (HTTP, FTP 및 네트워크 프로토콜에 따라 다른 체계) 잘 알려진 구성표 중에서 파생 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>If you want to create a completely new parser, inherit from <ph id="ph1">&lt;xref:System.GenericUriParser&gt;</ph>.</source>
          <target state="translated">상속 하는 완전히 새로운 구문 분석기를 만들려는 경우 <ph id="ph1">&lt;xref:System.GenericUriParser&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>If you want to create a parser that extends a well-known URI scheme, inherit from <ph id="ph1">&lt;xref:System.FtpStyleUriParser&gt;</ph>, <ph id="ph2">&lt;xref:System.HttpStyleUriParser&gt;</ph>, <ph id="ph3">&lt;xref:System.FileStyleUriParser&gt;</ph>, <ph id="ph4">&lt;xref:System.GopherStyleUriParser&gt;</ph>, or <ph id="ph5">&lt;xref:System.LdapStyleUriParser&gt;</ph>.</source>
          <target state="translated">상속 하는 잘 알려진 URI 체계를 확장 하는 파서를 만들려는 경우 <ph id="ph1">&lt;xref:System.FtpStyleUriParser&gt;</ph>, <ph id="ph2">&lt;xref:System.HttpStyleUriParser&gt;</ph>, <ph id="ph3">&lt;xref:System.FileStyleUriParser&gt;</ph>, <ph id="ph4">&lt;xref:System.GopherStyleUriParser&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.LdapStyleUriParser&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>Microsoft strongly recommends that you use a parser shipped with .NET.</source>
          <target state="translated">.NET과 함께 제공 되는 파서를 사용 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UriParser">
          <source>Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.</source>
          <target state="translated">자체 파서를 응용 프로그램의 복잡성을 증가 하 고 제공 된 파서와 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.UriParser.#ctor">
          <source>Constructs a default URI parser.</source>
          <target state="translated">기본 URI 파서를 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>The URI to parse.</source>
          <target state="translated">구문 분석할 URI입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.UriComponents" /&gt;</ph> to retrieve from <bpt id="p1">&lt;c&gt;</bpt>uri<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>uri<ept id="p1">&lt;/c&gt;</ept>에서 검색할 <ph id="ph1">&lt;see cref="T:System.UriComponents" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.UriFormat" /&gt;</ph> values that controls how special characters are escaped.</source>
          <target state="translated">특수 문자가 이스케이프되는 방법을 제어하는 <ph id="ph1">&lt;see cref="T:System.UriFormat" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>Gets the components from a URI.</source>
          <target state="translated">URI에서 구성 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>A string that contains the components.</source>
          <target state="translated">구성 요소를 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>Use the <ph id="ph1">&lt;xref:System.UriParser.GetComponents%2A&gt;</ph> method to determine the value of various parts of the URI, such as the <ph id="ph2">&lt;xref:System.UriComponents.Scheme&gt;</ph>, <ph id="ph3">&lt;xref:System.UriComponents.Host&gt;</ph>, or <ph id="ph4">&lt;xref:System.UriComponents.Port&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.UriParser.GetComponents%2A&gt;</ph> 와 같은 다양 한 부분의 URI의 값을 확인 하는 메서드는 <ph id="ph2">&lt;xref:System.UriComponents.Scheme&gt;</ph>, <ph id="ph3">&lt;xref:System.UriComponents.Host&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.UriComponents.Port&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>The components are returned in the order that they appear in the URI.</source>
          <target state="translated">구성 요소는 URI에 나타나는 순서 대로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>For example, if <ph id="ph1">&lt;xref:System.UriComponents.Scheme&gt;</ph> is specified, it appears first.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">&lt;xref:System.UriComponents.Scheme&gt;</ph> 지정, 가장 먼저 나타납니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">&lt;paramref name="uriFormat" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriFormat" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">&lt;paramref name="uriComponents" /&gt;</ph> is not a combination of valid <ph id="ph2">&lt;see cref="T:System.UriComponents" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriComponents" /&gt;</ph>가 유효한 <ph id="ph2">&lt;see cref="T:System.UriComponents" /&gt;</ph> 값의 조합이 아닌 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> requires user-driven parsing</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph>에 사용자 기반 구문 분석이 필요한 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> is not an absolute URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph>가 절대 URI가 아닙니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
          <source>Relative URIs cannot be used with this method.</source>
          <target state="translated">상대 URI는 이 메서드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
          <source>The T:System.Uri to validate.</source>
          <target state="translated">유효성을 검사할 T:System.Uri입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
          <source>Validation errors, if any.</source>
          <target state="translated">유효성 검사 오류가 발생한 경우 해당 오류입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
          <source>Initialize the state of the parser and validate the URI.</source>
          <target state="translated">파서의 상태를 초기화하고 URI의 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
          <source>The <ph id="ph1">&lt;xref:System.UriParser.InitializeAndValidate%2A&gt;</ph> method is called every time a <ph id="ph2">&lt;xref:System.Uri&gt;</ph> is instantiated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriParser.InitializeAndValidate%2A&gt;</ph> 될 때마다 메서드는 한 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 인스턴스화됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
          <source>The base URI.</source>
          <target state="translated">기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
          <source>The URI to test.</source>
          <target state="translated">테스트할 URI입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
          <source>Determines whether <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is a base URI for <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>의 기본 URI인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="baseUri" /&gt;</ph> is a base URI for <ph id="ph3">&lt;paramref name="relativeUri" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="baseUri" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="relativeUri" /&gt;</ph>의 기본 URI이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsKnownScheme(System.String)">
          <source>The scheme name to check.</source>
          <target state="translated">확인할 체계 이름입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsKnownScheme(System.String)">
          <source>Indicates whether the parser for a scheme is registered.</source>
          <target state="translated">체계의 파서가 등록되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsKnownScheme(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="schemeName" /&gt;</ph> has been registered; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="schemeName" /&gt;</ph>이 등록되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsKnownScheme(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> parameter is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> 매개 변수가 null인 경우</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsKnownScheme(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> 매개 변수가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The URI to check.</source>
          <target state="translated">확인할 URI입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>Indicates whether a URI is well-formed.</source>
          <target state="translated">URI가 제대로 구성되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="uri" /&gt;</ph> is well-formed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="uri" /&gt;</ph>가 제대로 구성되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.UriParser.IsWellFormedOriginalString%2A&gt;</ph> method will return false if:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriParser.IsWellFormedOriginalString%2A&gt;</ph> 경우 메서드가 false를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The string is not correctly escaped per RFC 2396.</source>
          <target state="translated">문자열은 RFC 2396 올바르게 이스케이프 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The string represents an absolute URI that references an implicit file URI.</source>
          <target state="translated">문자열은 URI 암시적 파일을 참조 하는 절대 URI를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The string represents an absolute URI that is missing a forward slash before the path component.</source>
          <target state="translated">문자열 경로 구성 요소 앞에 슬래시가 없는 절대 URI를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
          <source>The string contains unescaped backslashes, even if they will be treated as forward slashes.</source>
          <target state="translated">문자열 이스케이프 백슬래시가 포함 슬래시도 간주 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.UriParser.OnNewUri">
          <source>Invoked by a <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> constructor to get a <ph id="ph2">&lt;see cref="T:System.UriParser" /&gt;</ph> instance</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 생성자에 의해 호출되어 <ph id="ph2">&lt;see cref="T:System.UriParser" /&gt;</ph> 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.UriParser.OnNewUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph> for the constructed <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">생성된 <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.OnNewUri">
          <source>The default implementation returns the same <ph id="ph1">&lt;xref:System.UriParser&gt;</ph> instance.</source>
          <target state="translated">기본 구현은 반환 동일한 <ph id="ph1">&lt;xref:System.UriParser&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.OnNewUri">
          <source>You may need to override this method and return a different <ph id="ph1">&lt;xref:System.UriParser&gt;</ph> for each invocation if you are operating in a multithreaded environment.</source>
          <target state="translated">이 메서드를 재정의 하 고 다른 반환 해야 할 수 있습니다 <ph id="ph1">&lt;xref:System.UriParser&gt;</ph> 다중 스레드 환경에서 작동 하는 경우에 각 호출에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.UriParser.OnRegister(System.String,System.Int32)">
          <source>The scheme that is associated with this <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph>와 연결된 체계입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.UriParser.OnRegister(System.String,System.Int32)">
          <source>The port number of the scheme.</source>
          <target state="translated">체계의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.UriParser.OnRegister(System.String,System.Int32)">
          <source>Invoked by the Framework when a <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph> method is registered.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph> 메서드가 등록될 때 Framework에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>The URI parser to register.</source>
          <target state="translated">등록할 URI 파서입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>The name of the scheme that is associated with this parser.</source>
          <target state="translated">이 파서와 연결된 체계의 이름입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>The default port number for the specified scheme.</source>
          <target state="translated">지정된 체계의 기본 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>Associates a scheme and port number with a <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph>.</source>
          <target state="translated">체계 및 포트 번호와 <ph id="ph1">&lt;see cref="T:System.UriParser" /&gt;</ph>를 연결합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>If the <ph id="ph1">`defaultPort`</ph> parameter is set to -1, the <ph id="ph2">&lt;xref:System.UriParser.Register%2A&gt;</ph> method registers no default value for the port number.</source>
          <target state="translated">경우는 <ph id="ph1">`defaultPort`</ph> 매개 변수가-1로 설정 되 고 <ph id="ph2">&lt;xref:System.UriParser.Register%2A&gt;</ph> 메서드 등록 하는 포트 번호에 대 한 기본값이 없습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="uriParser" /&gt;</ph> parameter is null</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriParser" /&gt;</ph> 매개 변수가 null입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> parameter is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> 매개 변수가 null입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> parameter is not valid</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemeName" /&gt;</ph> 매개 변수가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="defaultPort" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultPort" /&gt;</ph> 매개 변수가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="defaultPort" /&gt;</ph> parameter is less than -1 or greater than 65,534.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultPort" /&gt;</ph> 매개 변수가 -1보다 작거나 65,534보다 큽니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>A base URI.</source>
          <target state="translated">기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>A relative URI.</source>
          <target state="translated">상대 URI입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>Errors during the resolve process, if any.</source>
          <target state="translated">확인 프로세스 중 오류가 발생한 경우 해당 오류입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>Called by <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> constructors and <ph id="ph2">&lt;see cref="Overload:System.Uri.TryCreate" /&gt;</ph> to resolve a relative URI.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 생성자와 <ph id="ph2">&lt;see cref="Overload:System.Uri.TryCreate" /&gt;</ph>에서 호출되어 상대 URI를 확인합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>The string of the resolved relative <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">확인된 상대 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>의 문자열입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source><ph id="ph1">&lt;xref:System.Uri&gt;</ph> constructors and <ph id="ph2">&lt;xref:System.Uri.TryCreate%2A?displayProperty=nameWithType&gt;</ph> use <ph id="ph3">&lt;xref:System.UriParser.Resolve%2A&gt;</ph> to construct a URI from <ph id="ph4">`baseUri`</ph> and <ph id="ph5">`relativeUri`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri&gt;</ph> 생성자 및 <ph id="ph2">&lt;xref:System.Uri.TryCreate%2A?displayProperty=nameWithType&gt;</ph> 사용 <ph id="ph3">&lt;xref:System.UriParser.Resolve%2A&gt;</ph> 에서 URI 생성을 <ph id="ph4">`baseUri`</ph> 및 <ph id="ph5">`relativeUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source>If a parsing error occurs, the returned string for the resolved relative <ph id="ph1">&lt;xref:System.Uri&gt;</ph> is null.</source>
          <target state="translated">구문 분석 오류가 발생 하며, 확인된 된 상대에 대 한 반환 된 문자열 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> null입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> parameter is not an absolute <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> 매개 변수가 절대 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>가 아닌 경우</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> parameter requires user-driven parsing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> 매개 변수에 사용자 기반 구문 분석이 필요한 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>