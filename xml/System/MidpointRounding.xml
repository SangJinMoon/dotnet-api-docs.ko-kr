<Type Name="MidpointRounding" FullName="System.MidpointRounding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2852d41dcd00a78edfa1196c36ff46ff7b00a0e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MidpointRounding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MidpointRounding extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.MidpointRounding" />
  <TypeSignature Language="VB.NET" Value="Public Enum MidpointRounding" />
  <TypeSignature Language="C++ CLI" Value="public enum class MidpointRounding" />
  <TypeSignature Language="F#" Value="type MidpointRounding = " />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>수학적 반올림 메서드가 두 수의 중간에 있는 수를 처리하는 방식을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.MidpointRounding> 적절 한 오버 로드를 통해 <xref:System.Math.Round%2A?displayProperty=nameWithType> 반올림 프로세스의 더 많은 제어를 제공 합니다.  
  
 반올림 연산을 사용 된 암시적 또는 지정 된 정밀도; 원래 수 해당 정밀도 1을 더한;에 있는 다음 숫자를 검사 합니다. 원래 수와 같은 정밀도와 가장 가까운 수를 반환 합니다. 다음 숫자는 0에서 4 사이의 양수에 대 한 가장 가까운 수 음의 무한대는 합니다. 다음 숫자 6에서 9 사이인 경우 양의 무한대 방향으로 가장 가까운 수는 있습니다. 음수 값에 대 한 다음 숫자 0부터 4에서 시작 된 경우 가장 가까운 수는 양의 무한대 방향으로 합니다. 다음 숫자 6에서 9 사이인 경우 음의 무한대에 가장 가까운 수는 있습니다.  
  
 위의 경우에는 <xref:System.MidpointRounding> 열거형 반올림 연산 결과 영향을 주지 않습니다. 그러나 다음 숫자가 5, 두 가지 가능한 결과 사이의 중간 및 모든 나머지 자릿수는 0이, 나머지 숫자가 가장 가까운이 모호 합니다. 이 경우에 <xref:System.MidpointRounding> 열거형을 사용 하면 반올림 연산에서 0 또는 가장 가까운 짝수의 가장 가까운 수를 반환 하는지 여부를 지정할 수 있습니다.  
  
 다음 표에서 몇 가지 양수 및 음수 값과 함께에서 반올림의 결과 보여 줍니다. <xref:System.MidpointRounding>합니다. 숫자를 반올림 하는 데 사용 되는 전체 자릿수는 소수점 반올림 연산에 영향을 줍니다 후 수를 의미 있는 0입니다. 예를 들어-2.5 번호, 소수점 뒤의 숫자는 5입니다. 해당 숫자가 중간점 이면 하므로 사용할 수 있습니다는 <xref:System.MidpointRounding> 반올림 한 결과를 확인 하는 값입니다. 있어야를 지정 하는 경우-3 0 자릿수가 0에서 멀어지는 쪽 가장 가까운 수 있기 때문에 반환 됩니다. ToEven 지정 된 경우-2는 가장 가까운 짝수로 전체 자릿수가 0 이기 때문에 반환 됩니다.  
  
|원래 번호|AwayFromZero|ToEven|  
|---------------------|------------------|------------|  
|3.5|4|4|  
|2.8|3|3|  
|2.5|3|2|  
|2.1|2|2|  
|-2.1|-2|-2|  
|-2.5|-3|-2|  
|-2.8|-3|-3|  
|-3.5|-4|-4|  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Math.Round%2A> 메서드와 함께 <xref:System.MidpointRounding.ToEven> 열거형입니다.  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AwayFromZero">
      <MemberSignature Language="C#" Value="AwayFromZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding AwayFromZero = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.AwayFromZero" />
      <MemberSignature Language="VB.NET" Value="AwayFromZero" />
      <MemberSignature Language="C++ CLI" Value="AwayFromZero" />
      <MemberSignature Language="F#" Value="AwayFromZero = 1" Usage="System.MidpointRounding.AwayFromZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>두 수의 중간에 있는 수는 0에서 먼 쪽의 가장 가까운 수로 반올림됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="ToEven">
      <MemberSignature Language="C#" Value="ToEven" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToEven = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToEven" />
      <MemberSignature Language="VB.NET" Value="ToEven" />
      <MemberSignature Language="C++ CLI" Value="ToEven" />
      <MemberSignature Language="F#" Value="ToEven = 0" Usage="System.MidpointRounding.ToEven" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>두 수의 중간에 있는 수는 가장 가까운 짝수로 반올림됩니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>