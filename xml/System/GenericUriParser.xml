<Type Name="GenericUriParser" FullName="System.GenericUriParser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9629c48b066bd09a4af34229aa7bb1cbe4c6e77" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430837" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GenericUriParser : UriParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenericUriParser extends System.UriParser" />
  <TypeSignature Language="DocId" Value="T:System.GenericUriParser" />
  <TypeSignature Language="VB.NET" Value="Public Class GenericUriParser&#xA;Inherits UriParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenericUriParser : UriParser" />
  <TypeSignature Language="F#" Value="type GenericUriParser = class&#xA;    inherit UriParser" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.UriParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a1a80-101">계층적 URI에 대한 사용자 지정할 수 있는 파서입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1a80-101">A customizable parser for a hierarchical URI.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a80-102">만들려는 경우 잘 알려진 체계에 따라 파서를 사용 하 여 <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, 또는 <xref:System.NewsStyleUriParser>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-102">If you want to create a parser based on a well-known scheme, use <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, or <xref:System.NewsStyleUriParser>.</span></span>  
  
 <span data-ttu-id="a1a80-103">파서 동작에서 사용할 수 있는 값의 비트 조합을 전달 하 여 지정는 사용자 지정 가능한 파서를 만들 때는 <xref:System.GenericUriParserOptions?displayProperty=nameWithType> 열거형에는 <xref:System.GenericUriParser> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-103">When creating a customizable parser, the behavior of the parser is specified by passing a bitwise combination of the values available in the <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeration to the <xref:System.GenericUriParser> constructor.</span></span>  
  
 <span data-ttu-id="a1a80-104">기존 <xref:System.Uri?displayProperty=nameWithType> 클래스 식별자 IRI (International Resource) 및 이름 IDN (Internationalized Domain)에 대 한 지원을 제공 하기 위해 확장 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-104">The existing <xref:System.Uri?displayProperty=nameWithType> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names (IDN).</span></span> <span data-ttu-id="a1a80-105">현재 사용자의 경우 IRI를 사용하도록 설정하지 않는 한 .NET Framework 2.0 동작에서 차이를 느끼지 못할 것입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-105">Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</span></span> <span data-ttu-id="a1a80-106">이 덕분에 .NET Framework 이전 버전과의 응용 프로그램 호환성이 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-106">This ensures application compatibility with prior versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="a1a80-107">파생 된 모든 파서 <xref:System.GenericUriParser> 기본적으로 IRI 및 IDN 지원을 얻지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-107">All parsers derived from <xref:System.GenericUriParser> will not gain IRI and IDN support by default.</span></span> <span data-ttu-id="a1a80-108"><xref:System.GenericUriParserOptions.Default> IRI 및 IDN 옵션이 포함 되지 않습니다 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-108">The <xref:System.GenericUriParserOptions.Default> option does not include IRI and IDN support.</span></span> <span data-ttu-id="a1a80-109">두 개의 새 값에 추가 되는 <xref:System.GenericUriParserOptions?displayProperty=nameWithType> 를 사용자 지정 파서 IRI 및 IDN 지원 하는지 나타내는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-109">Two new values are added to the <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeration to indicate if a custom parser supports IRI and IDN.</span></span>  
  
 <span data-ttu-id="a1a80-110">IRI 및 IDN 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-110">For more information on IRI and IDN support, see the Remarks section for the <xref:System.Uri?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenericUriParser (GenericUriParserOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.GenericUriParserOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GenericUriParser.#ctor(System.GenericUriParserOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As GenericUriParserOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenericUriParser(GenericUriParserOptions options);" />
      <MemberSignature Language="F#" Value="new GenericUriParser : GenericUriParserOptions -&gt; GenericUriParser" Usage="new System.GenericUriParser options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.GenericUriParserOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="a1a80-111">이 <see cref="T:System.GenericUriParser" />에 대한 옵션을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1a80-111">Specify the options for this <see cref="T:System.GenericUriParser" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1a80-112">계층적 URI에 대한 사용자 지정할 수 있는 파서를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1a80-112">Create a customizable parser for a hierarchical URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a80-113">이 생성자에 인수로 사용 하 여 <xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a1a80-113">Use this constructor as an argument to <xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType></span></span>  
  
 <span data-ttu-id="a1a80-114">만들려는 경우 잘 알려진 체계에 따라 파서를 사용 하 여 <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, 또는 <xref:System.NewsStyleUriParser>합니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-114">If you want to create a parser based on a well-known scheme, use <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, or <xref:System.NewsStyleUriParser>.</span></span>  
  
 <span data-ttu-id="a1a80-115">파서 동작에서 사용할 수 있는 값의 비트 조합을 전달 하 여 지정는 사용자 지정 가능한 파서를 만들 때는 <xref:System.GenericUriParserOptions?displayProperty=nameWithType> 열거형에는 <xref:System.GenericUriParser> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-115">When creating a customizable parser, the behavior of the parser is specified by passing a bitwise combination of the values available in the <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeration to the <xref:System.GenericUriParser> constructor.</span></span>  
  
 <span data-ttu-id="a1a80-116">기존 <xref:System.Uri?displayProperty=nameWithType> 클래스 식별자 IRI (International Resource) 및 이름 IDN (Internationalized Domain)에 대 한 지원을 제공 하기 위해 확장 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-116">The existing <xref:System.Uri?displayProperty=nameWithType> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names (IDN).</span></span> <span data-ttu-id="a1a80-117">현재 사용자의 경우 IRI를 사용하도록 설정하지 않는 한 .NET Framework 2.0 동작에서 차이를 느끼지 못할 것입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-117">Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</span></span> <span data-ttu-id="a1a80-118">이 덕분에 .NET Framework 이전 버전과의 응용 프로그램 호환성이 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-118">This ensures application compatibility with prior versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="a1a80-119">파생 된 모든 파서 <xref:System.GenericUriParser> 기본적으로 IRI 및 IDN 지원을 얻지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-119">All parsers derived from <xref:System.GenericUriParser> will not gain IRI and IDN support by default.</span></span> <span data-ttu-id="a1a80-120"><xref:System.GenericUriParserOptions.Default> IRI 및 IDN 옵션이 포함 되지 않습니다 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-120">The <xref:System.GenericUriParserOptions.Default> option does not include IRI and IDN support.</span></span> <span data-ttu-id="a1a80-121">두 개의 새 값에 추가 되는 <xref:System.GenericUriParserOptions?displayProperty=nameWithType> 를 사용자 지정 파서 IRI 및 IDN 지원 하는지 나타내는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-121">Two new values are added to the <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeration to indicate if a custom parser supports IRI and IDN.</span></span>  
  
 <span data-ttu-id="a1a80-122"><xref:System.GenericUriParserOptions.IriParsing> 형식은 파서가 RFC 3987에 지정된 IRI(International Resource Identifier)에 대한 구문 분석 규칙을 지원함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-122">The <xref:System.GenericUriParserOptions.IriParsing> type indicates the parser supports the parsing rules specified in RFC 3987 for International Resource Identifiers (IRI).</span></span> <span data-ttu-id="a1a80-123">IRI 사용 여부는 구성 값에 따라 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-123">Whether IRI is used is dictated by configuration values.</span></span>  
  
 <span data-ttu-id="a1a80-124"><xref:System.GenericUriParserOptions.Idn> 형식은 파서가 호스트 이름의 IDN(Internationalized Domain Name) 구문 분석을 지원함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-124">The <xref:System.GenericUriParserOptions.Idn> type indicates the parser supports Internationalized Domain Name (IDN) parsing (IDN) of host names.</span></span> <span data-ttu-id="a1a80-125">IDN 사용 여부는 구성 값에 따라 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-125">Whether IDN is used is dictated by configuration values.</span></span>  
  
 <span data-ttu-id="a1a80-126">에 대 한 구성 설정의 <xref:System.Configuration.IdnElement?displayProperty=nameWithType> 간접적으로 제어 하 여는 <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> 제어 하에서 IRI 처리는 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-126">The configuration setting for the <xref:System.Configuration.IdnElement?displayProperty=nameWithType> is indirectly controlled by the <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> configuration setting that controls IRI processing in the <xref:System.Uri?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="a1a80-127">IDN 처리가 가능하려면 IRI 처리를 사용하도록 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-127">IRI processing must be enabled for IDN processing to be possible.</span></span> <span data-ttu-id="a1a80-128">IRI 처리가 사용하지 않도록 설정되면 IDN 처리는 .NET Framework 2.0 동작이 호환성에 사용되고 IDN 이름이 사용되지 않는 기본 설정으로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-128">If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.</span></span>  
  
 <span data-ttu-id="a1a80-129">다국어 도메인 이름 (IDN) 특성 IDN 처리 하는 것을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-129">The Internationalized Domain Name (IDN) attribute only controls IDN processing.</span></span> <span data-ttu-id="a1a80-130">다른 모든 IRI 처리 (예: 문자 정규화)는 기본적으로 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-130">All other IRI processing (character normalization, for example) is performed by default.</span></span>  
  
 <span data-ttu-id="a1a80-131">IRI 및 IDN 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a1a80-131">For more information on IRI and IDN support, see the Remarks section for the <xref:System.Uri?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.GenericUriParserOptions" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>