<Type Name="EnvironmentVariableTarget" FullName="System.EnvironmentVariableTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d00a6d79680c3ee3dd92cb5ce17bd8f506edcdff" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum EnvironmentVariableTarget" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EnvironmentVariableTarget extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.EnvironmentVariableTarget" />
  <TypeSignature Language="VB.NET" Value="Public Enum EnvironmentVariableTarget" />
  <TypeSignature Language="C++ CLI" Value="public enum class EnvironmentVariableTarget" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a294a-101">set 또는 get 작업에서 환경 변수가 저장되거나 검색되는 위치를 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a294a-101">Specifies the location where an environment variable is stored or retrieved in a set or get operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a294a-102"><xref:System.EnvironmentVariableTarget> 열거형의 특정 오버 로드에서 사용 되는 <xref:System.Environment.SetEnvironmentVariable%2A>, <xref:System.Environment.GetEnvironmentVariable%2A>, 및 <xref:System.Environment.GetEnvironmentVariables%2A> 위치 또는 대상으로 지정 하는 메서드 이름 및 환경 변수 값을 저장 하거나 검색할 위치 합니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-102">The <xref:System.EnvironmentVariableTarget> enumeration is used by certain overloads of the <xref:System.Environment.SetEnvironmentVariable%2A>, <xref:System.Environment.GetEnvironmentVariable%2A>, and <xref:System.Environment.GetEnvironmentVariables%2A> methods to specify the location, or target, where the name and value of an environment variable is stored or retrieved.</span></span>  
  
 <span data-ttu-id="a294a-103">대상 세 위치 중 하나일 수 있습니다: 현재 프로세스, 현재 사용자와 연결 된 환경 변수에 대 한 예약 된 Windows 운영 체제 레지스트리 키 또는 환경에 대 한 예약 된 레지스트리 키와 연결 된 환경 블록 로컬 컴퓨터에서 모든 사용자와 연결 된 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-103">The target can be one of three locations: the environment block associated with the current process, the Windows operating system registry key reserved for environment variables associated with the current user, or the registry key reserved for environment variables associated with all users on the local machine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a294a-104">다음 코드 예제는 <xref:System.EnvironmentVariableTarget> 만들기, 수정 및 환경 변수를 삭제 하는 방법의 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-104">The following code example demonstrates the <xref:System.EnvironmentVariableTarget> enumeration in methods that create, modify, and delete environment variables.</span></span>  
  
 [!code-cpp[environment.getsetenvar#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.getsetenvar/CPP/source.cpp#1)]
 [!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs#1)]
 [!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Machine">
      <MemberSignature Language="C#" Value="Machine" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget Machine = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.Machine" />
      <MemberSignature Language="VB.NET" Value="Machine" />
      <MemberSignature Language="C++ CLI" Value="Machine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a294a-105">환경 변수는 Windows 운영 체제 레지스트리의 <see langword="HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment" /> 키에서 저장되거나 검색됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a294a-105">The environment variable is stored or retrieved from the <see langword="HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment" /> key in the Windows operating system registry.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a294a-106">집합 작업에서 환경 변수를 만들 때 시스템 레지스트리에 있지만 현재 프로세스에 없는 운영 체제 환경 변수를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-106">When a user creates the environment variable in a set operation, the operating system stores the environment variable in the system registry, but not in the current process.</span></span> <span data-ttu-id="a294a-107">새 프로세스를 시작 하는 로컬 컴퓨터의 모든 사용자, 운영 체제 환경 변수를 레지스트리에서 해당 프로세스 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-107">If any user on the local machine starts a new process, the operating system copies the environment variable from the registry to that process.</span></span>  
  
 <span data-ttu-id="a294a-108">운영 체제 프로세스가 종료 되 면 해당 프로세스에서 환경 변수를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-108">When the process terminates, the operating system destroys the environment variable in that process.</span></span> <span data-ttu-id="a294a-109">그러나 레지스트리에서는 환경 변수는 사용자가 프로그래밍 방식으로 또는 운영 체제 도구를 사용 하 여 제거할 때까지 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-109">However, the environment variable in the registry persists until a user removes it programmatically or by means of an operating system tool.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="Process" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget Process = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.Process" />
      <MemberSignature Language="VB.NET" Value="Process" />
      <MemberSignature Language="C++ CLI" Value="Process" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a294a-110">환경 변수는 현재 프로세스와 연결된 환경 블록에서 저장되거나 검색됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a294a-110">The environment variable is stored or retrieved from the environment block associated with the current process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a294a-111">사용자 설정 작업에서 환경 변수를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-111">The user creates the environment variable in a set operation.</span></span>  
  
 <span data-ttu-id="a294a-112">운영 체제 프로세스가 종료 되 면 해당 프로세스에서 환경 변수를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-112">When the process terminates, the operating system destroys the environment variable in that process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="User" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnvironmentVariableTarget User = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.EnvironmentVariableTarget.User" />
      <MemberSignature Language="VB.NET" Value="User" />
      <MemberSignature Language="C++ CLI" Value="User" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnvironmentVariableTarget</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a294a-113">환경 변수는 Windows 운영 체제 레지스트리의 <see langword="HKEY_CURRENT_USER\Environment" /> 키에서 저장되거나 검색됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a294a-113">The environment variable is stored or retrieved from the <see langword="HKEY_CURRENT_USER\Environment" /> key in the Windows operating system registry.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a294a-114">사용자가 set 작업에서 환경 변수를 만들면 시스템 레지스트리에 있지만 현재 프로세스에 없는 운영 체제 환경 변수를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-114">When the user creates the environment variable in a set operation, the operating system stores the environment variable in the system registry, but not in the current process.</span></span> <span data-ttu-id="a294a-115">새 프로세스를 시작 하는 사용자, 운영 체제 환경 변수를 레지스트리에서 해당 프로세스 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-115">If the user starts a new process, the operating system copies the environment variable from the registry to that process.</span></span>  
  
 <span data-ttu-id="a294a-116">운영 체제 프로세스가 종료 되 면 해당 프로세스에서 환경 변수를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-116">When the process terminates, the operating system destroys the environment variable in that process.</span></span> <span data-ttu-id="a294a-117">그러나 레지스트리에서 환경 변수는 사용자가 프로그래밍 방식으로 또는 운영 체제 도구를 사용 하 여 제거 될 때까지 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a294a-117">However, the environment variable in the registry persists until the user removes it programmatically or by means of an operating system tool.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>