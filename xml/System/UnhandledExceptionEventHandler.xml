<Type Name="UnhandledExceptionEventHandler" FullName="System.UnhandledExceptionEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a18f1ef9e51be81494bc260065a6f4c402a8f46" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52340988" /></Metadata><TypeSignature Language="C#" Value="public delegate void UnhandledExceptionEventHandler(object sender, UnhandledExceptionEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed UnhandledExceptionEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.UnhandledExceptionEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub UnhandledExceptionEventHandler(sender As Object, e As UnhandledExceptionEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void UnhandledExceptionEventHandler(System::Object ^ sender, UnhandledExceptionEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionEventHandler = delegate of obj * UnhandledExceptionEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.UnhandledExceptionEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="ce1e5-101">처리되지 않은 예외 이벤트의 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="ce1e5-101">The source of the unhandled exception event.</span></span></param>
    <param name="e"><span data-ttu-id="ce1e5-102">이벤트 데이터를 포함하는 <c>UnhandledExceptionEventArgs</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="ce1e5-102">An <c>UnhandledExceptionEventArgs</c> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="ce1e5-103">애플리케이션 도메인에서 처리되지 않는 예외에 의해 발생된 이벤트를 처리할 메서드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ce1e5-103">Represents the method that will handle the event raised by an exception that is not handled by the application domain.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce1e5-104"><xref:System.UnhandledExceptionEventHandler> 시스템 응용 프로그램을 실행 하는 데 만들어진 기본 응용 프로그램 도메인에만 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ce1e5-104">An <xref:System.UnhandledExceptionEventHandler> can only be specified for the default application domain that is created by the system to execute an application.</span></span> <span data-ttu-id="ce1e5-105">지정 하는 <xref:System.UnhandledExceptionEventHandler> 에 대 한는 <xref:System.AppDomain> 만든 애플리케이션에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ce1e5-105">Specifying an <xref:System.UnhandledExceptionEventHandler> for an <xref:System.AppDomain> created by an application has no effect.</span></span>  
  
 <span data-ttu-id="ce1e5-106"><xref:System.UnhandledExceptionEventHandler> 대리자를 만드는 경우 이벤트를 처리할 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="ce1e5-106">When you create an <xref:System.UnhandledExceptionEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="ce1e5-107">이벤트와 이벤트 처리기를 연결할 이벤트 대리자의 인스턴스를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="ce1e5-107">To associate the event handler with your event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="ce1e5-108">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ce1e5-108">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="ce1e5-109">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ce1e5-109">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.UnhandledExceptionEventArgs" />
    <altmember cref="T:System.EventHandler" />
  </Docs>
</Type>