<Type Name="TimeSpan" FullName="System.TimeSpan">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd45e0fd66c3a1f49a33f33625506b1cfb8e78da" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30730947" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct TimeSpan : IComparable, IComparable&lt;TimeSpan&gt;, IEquatable&lt;TimeSpan&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit TimeSpan extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.TimeSpan&gt;, class System.IEquatable`1&lt;valuetype System.TimeSpan&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.TimeSpan" />
  <TypeSignature Language="VB.NET" Value="Public Structure TimeSpan&#xA;Implements IComparable, IComparable(Of TimeSpan), IEquatable(Of TimeSpan), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class TimeSpan : IComparable, IComparable&lt;TimeSpan&gt;, IEquatable&lt;TimeSpan&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.TimeSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>시간 간격을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.TimeSpan> 개체 일, 시간, 분, 초 및 소수 단위 초 양수 또는 음수일 수로 측정 된 시간 간격 (시간 또는 시간 경과 기간)을 나타냅니다. <xref:System.TimeSpan> 구조 시간은 특정 날짜와 관련 된 경우에만, 하루 중 시간을 나타내는 데 사용할 수도 있습니다. 그렇지 않은 경우는 <xref:System.DateTime> 또는 <xref:System.DateTimeOffset> 구조를 대신 사용 해야 합니다. (사용 하는 방법에 대 한 자세한 내용은 <xref:System.TimeSpan> 하루 중 시간을 반영 합니다. 즉, 구조 [Choosing Between DateTime, DateTimeOffset, TimeSpan 및 TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).)  
  
> [!NOTE]
>  A <xref:System.TimeSpan> 값 시간 간격을 나타내며 특정 일, 시간, 분, 초 및 밀리초 수로 표현 될 수 있습니다. 특정 시작 또는 끝 지점에 대 한 참조 없이 일반 간격을 나타내므로 년 및 월, 한 다양 한 수의 일 측면에서 표현할 수 없습니다. 다른 한 <xref:System.DateTime> 특정 표준 시간대에 대 한 참조 없이 시간과 날짜를 나타내는 값 또는 <xref:System.DateTimeOffset> 시간의 특정 시기를 나타내는 값입니다.  
  
 가장 큰 단위 시간을 <xref:System.TimeSpan> 일인지 구조 사용 기간을 측정 합니다. 월과 년 등의 더 큰 단위 일 수가 달라 지므로 시간 간격 일관성을 위해 일 단위로 측정 됩니다.  
  
 값을 <xref:System.TimeSpan> 개체 표시 된 시간 간격과 같은 틱 수입니다. 틱은 100 나노초 또는 초의 1 천만 같습니다. 값을 <xref:System.TimeSpan> 개체에서 까지입니다 <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 를 <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>합니다.  
  
## <a name="instantiating-a-timespan-value"></a>TimeSpan 값 인스턴스화  
 인스턴스화할 수 있습니다는 <xref:System.TimeSpan> 다양 한 방법에에서 대 한 값:  
  
-   암시적 기본 생성자를 호출 합니다. 값이 개체를 만듭니다. <xref:System.TimeSpan.Zero?displayProperty=nameWithType>다음 예제와 같이 합니다.  
  
     [!code-csharp[System.TimeSpan.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#2)]
     [!code-vb[System.TimeSpan.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#2)]  
  
-   명시적 생성자 중 하나를 호출 합니다. 다음 예제에서는 초기화는 <xref:System.TimeSpan> 값을 지정 된 시간, 분 및 초입니다.  
  
     [!code-csharp[System.TimeSpan.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#3)]
     [!code-vb[System.TimeSpan.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#3)]  
  
-   메서드를 호출 하거나 반환 하는 작업을 수행 하 여 한 <xref:System.TimeSpan> 값입니다. 예를 들어 인스턴스화할 수 있습니다는 <xref:System.TimeSpan> 다음 예제와 같이 두 개의 날짜 및 시간 값을 사이의 간격을 나타내는 값입니다.  
  
     [!code-csharp[System.TimeSpan.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#4)]
     [!code-vb[System.TimeSpan.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#4)]  
  
     또한 초기화할 수는 <xref:System.TimeSpan> 개체를 이러한 방법으로 다음 예제와 같이 0 시간 값입니다.  
  
     [!code-csharp[System.TimeSpan.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/zero1.cs#6)]
     [!code-vb[System.TimeSpan.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/zero1.vb#6)]  
  
     <xref:System.TimeSpan> 값은 산술 연산자 및의 메서드에 의해 반환 되는 <xref:System.DateTime>, <xref:System.DateTimeOffset>, 및 <xref:System.TimeSpan> 구조입니다.  
  
-   문자열 표현을 구문 분석 하 여는 <xref:System.TimeSpan> 값입니다. 사용할 수는 <xref:System.TimeSpan.Parse%2A> 및 <xref:System.TimeSpan.TryParse%2A> 시간 간격을 포함 하는 문자열을 변환 하는 메서드 <xref:System.TimeSpan> 값입니다. 다음 예제에서는 <xref:System.TimeSpan.Parse%2A> 메서드 문자열의 배열을 <xref:System.TimeSpan> 값입니다.  
  
     [!code-csharp[System.TimeSpan.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#5)]
     [!code-vb[System.TimeSpan.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#5)]  
  
     또한 구문 분석 하 고 변환할 입력된 문자열의 정확한 형식을 정의할 수 있습니다는 <xref:System.TimeSpan> 호출 하 여 값의 <xref:System.TimeSpan.ParseExact%2A> 또는 <xref:System.TimeSpan.TryParseExact%2A> 메서드.  
  
## <a name="performing-operations-on-timespan-values"></a>TimeSpan 값에 대 한 작업을 수행합니다.  
 추가 하 고 사용 하 여 시간 기간을 뺄 수는 <xref:System.TimeSpan.op_Addition%2A> 및 <xref:System.TimeSpan.op_Subtraction%2A> 연산자를 호출 하 여는 <xref:System.TimeSpan.Add%2A> 및 <xref:System.TimeSpan.Subtract%2A> 메서드. 호출 하 여 두 시간 기간을 비교할 수도 있습니다는 <xref:System.TimeSpan.Compare%2A>, <xref:System.TimeSpan.CompareTo%2A>, 및 <xref:System.TimeSpan.Equals%2A> 메서드. <xref:System.TimeSpan> 구조에도 포함 되어는 <xref:System.TimeSpan.Duration%2A> 및 <xref:System.TimeSpan.Negate%2A> 시간 간격을 양수 및 음수 값으로 변환 하는 메서드  
  
 범위의 <xref:System.TimeSpan> 값은 <xref:System.TimeSpan.MinValue> 를 <xref:System.TimeSpan.MaxValue>합니다.  
  
## <a name="formatting-a-timespan-value"></a>TimeSpan 값 서식 지정  
 A <xref:System.TimeSpan> 값으로 나타낼 수 있습니다 [*-*]*d*.* hh*:*mm*:*ss*.* ff*는 나타낼 음수 시간 간격, 여기서는 *d* 구성 요소는 ' 일 *hh* 은 24 시간제 기준로 *mm* 은 분, *ss* 초이지만 시간 및 *ff* 소수 단위 초를 됩니다. 즉, 시간 간격을 일, 하루 중 시간을 제외한 양수 또는 음수 숫자 또는 날짜, 시간 또는 시간을 일 수가 이루어져 있습니다.  
  
 부터는 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.TimeSpan> 구조는 여러 오버 로드 문화권 구분 서식 지정을 지원 해당 <xref:System.TimeSpan.ToString%2A> 을 변환 하는 메서드는 <xref:System.TimeSpan> 값을 해당 문자열 표현입니다. 기본 <xref:System.TimeSpan.ToString?displayProperty=nameWithType> 메서드 고정 되는 형식으로 이전 버전의.NET Framework의 해당 반환 값과 동일한 지를 사용 하 여 시간 간격을 반환 합니다. <xref:System.TimeSpan.ToString%28System.String%29?displayProperty=nameWithType> 오버 로드를 사용 하면 시간 간격의 문자열 표현을 정의 하는 서식 문자열을 지정할 수 있습니다. <xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 오버 로드를 사용 하면 형식 문자열 및 해당 형식 지정 규칙은 시간 간격의 문자열 표현을 만드는 데 사용 되는 문화권을 지정할 수 있습니다. <xref:System.TimeSpan> 두 표준 및 사용자 지정 형식 문자열을 지원합니다. (자세한 내용은 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md).) 그러나 표준 형식 문자열은 문화권 구분 합니다.  
  
## <a name="restoring-legacy-timespan-formatting"></a>복원 중인 레거시 TimeSpan 서식 지정  
 경우에 따라 코드는 성공적으로 형식 <xref:System.TimeSpan> 값 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 에서 실패 한 이전 버전 및 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다. 이 호출 하는 코드에서 가장 일반적으로 [< TimeSpan_LegacyFormatMode > 요소](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md) 서식을 지정 하려면 메서드는 <xref:System.TimeSpan> 값 형식 문자열입니다. 다음 예제에서는 성공적으로 서식을 <xref:System.TimeSpan> 값 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 및 이전 버전에서 예외를 throw 하지만 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 이상 버전입니다. 포맷 하려고 시도 하는 <xref:System.TimeSpan> 에서 무시 된은 지원 되지 않는 형식 지정자를 사용 하 여 값 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 및 이전 버전입니다.  
  
 [!code-csharp[System.TimeSpan.Class.Legacy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.legacy/cs/legacycode1.cs#1)]
 [!code-vb[System.TimeSpan.Class.Legacy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.legacy/vb/legacycode1.vb#1)]  
  
 코드를 수정할 수 없는 경우의 레거시 서식을 복원할 수 있습니다 <xref:System.TimeSpan> 다음 방법 중 하나에서 값:  
  
-   포함 하는 구성 파일을 만듭니다는 [< TimeSpan_LegacyFormatMode > 요소](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)합니다. 이 요소를 설정 `enabled` 특성을 `true` 레거시 복원 <xref:System.TimeSpan> 응용 프로그램별 단위로 서식을 합니다.  
  
-   "NetFx40_TimeSpanLegacyFormatMode" 호환성을 설정 하 여 응용 프로그램 도메인을 만들 때 전환 합니다. 이 통해 레거시 <xref:System.TimeSpan> 응용 프로그램 도메인 단위로 서식을 합니다. 다음 예제에서는 사용 하는 응용 프로그램 도메인에 레거시 <xref:System.TimeSpan> 서식 지정 합니다.  
  
     [!code-csharp[System.TimeSpan.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.appdomain/cs/perappdomain1.cs#1)]
     [!code-vb[System.TimeSpan.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.appdomain/vb/perappdomain1.vb#1)]  
  
     레거시 되돌린 다음 코드는 새 응용 프로그램 도메인에서 실행 되 면 <xref:System.TimeSpan> 서식 지정 동작입니다.  
  
     [!code-csharp[System.TimeSpan.Class.AppDomain#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.appdomain/cs/showtimespan.cs#2)]
     [!code-vb[System.TimeSpan.Class.AppDomain#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.appdomain/vb/showtimespan.vb#2)]  
  
   
  
## Examples  
 다음 예제는 <xref:System.TimeSpan> 두 날짜 사이의 차이 나타내는 개체입니다. 그런 다음 표시는 <xref:System.TimeSpan> 개체의 속성입니다.  
  
 [!code-csharp[System.TimeSpan.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/structure1.cs#1)]
 [!code-vb[System.TimeSpan.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/structure1.vb#1)]  
 [!code-powershell[System.TimeSpan.Class#1](~/samples/snippets/powershell/VS_Snippets_CLR_System/system.timespan.class/ps/structure1.ps1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.Globalization.Calendar" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.TimeSpan" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(long ticks);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks">100나노초 단위로 나타낸 기간입니다.</param>
        <summary>
          <see cref="T:System.TimeSpan" /> 구조체의 새 인스턴스를 지정된 틱 수로 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 단일 틱 하나 백 (나노초) 또는 두 번째 1 천만 나타냅니다. 밀리초에 10, 000 틱 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 개 만들고 <xref:System.TimeSpan> 생성자 오버 로드를 사용 하 여 개체는 <xref:System.TimeSpan> 지정 된 틱 수입니다.  
  
 [!code-cpp[System.TimeSpan.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctorl.cpp#1)]
 [!code-csharp[System.TimeSpan.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctorl.cs#1)]
 [!code-vb[System.TimeSpan.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctorl.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Ticks" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int hours, int minutes, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 hours, int32 minutes, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hours As Integer, minutes As Integer, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int hours, int minutes, int seconds);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hours">시간(시)입니다.</param>
        <param name="minutes">시간(분)입니다.</param>
        <param name="seconds">시간(초)입니다.</param>
        <summary>
          <see cref="T:System.TimeSpan" /> 구조체의 새 인스턴스를 지정된 시, 분 및 초로 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 `hours`, `minutes`, 및 `seconds` , 틱으로 변환 되 해당 값이이 인스턴스를 초기화 합니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 개 만들고 <xref:System.TimeSpan> 생성자 오버 로드를 사용 하 여 개체는 <xref:System.TimeSpan> 를 지정 된 시간, 분 및 초입니다.  
  
 [!code-cpp[System.TimeSpan.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriii.cpp#2)]
 [!code-csharp[System.TimeSpan.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriii.cs#2)]
 [!code-vb[System.TimeSpan.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">매개 변수가 <see cref="T:System.TimeSpan" />보다 작거나 <see cref="F:System.TimeSpan.MinValue" />보다 큰 <see cref="F:System.TimeSpan.MaxValue" /> 값을 지정하는 경우</exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int days, int hours, int minutes, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (days As Integer, hours As Integer, minutes As Integer, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int days, int hours, int minutes, int seconds);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="days" Type="System.Int32" />
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="days">일 수입니다.</param>
        <param name="hours">시간(시)입니다.</param>
        <param name="minutes">시간(분)입니다.</param>
        <param name="seconds">시간(초)입니다.</param>
        <summary>
          <see cref="T:System.TimeSpan" /> 구조체의 새 인스턴스를 지정된 일, 시, 분 및 초로 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 `days`, `hours`, `minutes`, 및 `seconds` , 틱으로 변환 되 해당 값이이 인스턴스를 초기화 합니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 개 만들고 <xref:System.TimeSpan> 생성자 오버 로드를 사용 하 여 개체는 <xref:System.TimeSpan> 를 지정 된 일, 시, 분 및 초입니다.  
  
 [!code-cpp[System.TimeSpan.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriiii.cpp#3)]
 [!code-csharp[System.TimeSpan.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriiii.cs#3)]
 [!code-vb[System.TimeSpan.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriiii.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">매개 변수가 <see cref="T:System.TimeSpan" />보다 작거나 <see cref="F:System.TimeSpan.MinValue" />보다 큰 <see cref="F:System.TimeSpan.MaxValue" /> 값을 지정하는 경우</exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int days, int hours, int minutes, int seconds, int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds, int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (days As Integer, hours As Integer, minutes As Integer, seconds As Integer, milliseconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int days, int hours, int minutes, int seconds, int milliseconds);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="days" Type="System.Int32" />
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="days">일 수입니다.</param>
        <param name="hours">시간(시)입니다.</param>
        <param name="minutes">시간(분)입니다.</param>
        <param name="seconds">시간(초)입니다.</param>
        <param name="milliseconds">시간(밀리초)입니다.</param>
        <summary>
          <see cref="T:System.TimeSpan" /> 구조체의 새 인스턴스를 지정된 일, 시, 분, 초 및 밀리초로 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 `days`, `hours`, `minutes`, `seconds`, 및 `milliseconds` , 틱으로 변환 되 해당 값이이 인스턴스를 초기화 합니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 개 만들고 <xref:System.TimeSpan> 생성자 오버 로드를 사용 하 여 개체는 <xref:System.TimeSpan> 일, 시간, 분, 초 및 밀리초의 지정 된 수 있습니다.  
  
 [!code-cpp[System.TimeSpan.Ctor#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriiiii.cpp#4)]
 [!code-csharp[System.TimeSpan.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriiiii.cs#4)]
 [!code-vb[System.TimeSpan.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriiiii.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">매개 변수가 <see cref="T:System.TimeSpan" />보다 작거나 <see cref="F:System.TimeSpan.MinValue" />보다 큰 <see cref="F:System.TimeSpan.MaxValue" /> 값을 지정하는 경우</exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public TimeSpan Add (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Add(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Add(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ts As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Add(TimeSpan ts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts">더할 시간 간격입니다.</param>
        <summary>지정된 <see cref="T:System.TimeSpan" /> 개체와 이 인스턴스의 합을 값으로 가지는 새 <see cref="T:System.TimeSpan" /> 개체를 반환합니다.</summary>
        <returns>이 인스턴스 값과 <paramref name="ts" /> 값의 합을 나타내는 새 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 값은 사이 여야 합니다 <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 및 <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>, 그러지 않으면 예외가 throw 됩니다.  
  
 반환 값은 새 <xref:System.TimeSpan>; 원래 <xref:System.TimeSpan> 수정 되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.Add%2A> 기본 시간 간격의 배열에서 각 요소를 추가 하는 방법을 <xref:System.TimeSpan> 값입니다.  
  
 [!code-csharp[System.TimeSpan.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.add/cs/add1.cs#1)]
 [!code-vb[System.TimeSpan.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.add/vb/add1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">결과는 <see cref="T:System.TimeSpan" />이 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큽니다.</exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (t1 As TimeSpan, t2 As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
        <param name="t2">비교할 두 번째 시간 간격입니다.</param>
        <summary>두 <see cref="T:System.TimeSpan" /> 값을 비교하고 첫째 값이 둘째 값보다 짧은지, 같은지 또는 긴지를 나타내는 정수를 반환합니다.</summary>
        <returns>다음 값 중 하나입니다.  
  
 <list type="table"><listheader><term> 값  
  
 </term><description> 설명  
  
 </description></listheader><item><term> -1  
  
 </term><description><paramref name="t1" />이 <paramref name="t2" />보다 짧습니다.  
  
 </description></item><item><term> 0  
  
 </term><description><paramref name="t1" />이(가) <paramref name="t2" />과(와) 같습니다.  
  
 </description></item><item><term> 1  
  
 </term><description><paramref name="t1" />이 <paramref name="t2" />보다 깁니다.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.Compare%2A> 에서는 여러 <xref:System.TimeSpan> 개체와 <xref:System.TimeSpan> 개체 값은 2 시간 시간 간격입니다.  
  
 [!code-csharp[System.TimeSpan.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.compare/cs/compare1.cs#1)]
 [!code-vb[System.TimeSpan.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.compare/vb/compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 인스턴스를 지정된 개체나 <see cref="T:System.TimeSpan" /> 개체와 비교하고 이 인스턴스가 지정된 개체나 <see cref="T:System.TimeSpan" /> 개체보다 짧은지, 같은지 또는 긴지를 나타내는 정수를 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 오버 로드는 <xref:System.TimeSpan.CompareTo%2A> 이 인스턴스의 상대 값을 나타내는 부호 있는 숫자를 반환 하는 메서드 및 `value` 인수에는 다음 표에 나와 있는 것 처럼 합니다.  
  
|값|설명|  
|-----------|-----------------|  
|0보다 작음|이 인스턴스가 `value`보다 짧습니다.|  
|0|이 인스턴스는 `value`와 같습니다.|  
|0보다 큼|이 인스턴스가 `value`보다 깁니다.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">비교할 개체 또는 <see langword="null" />입니다.</param>
        <summary>이 인스턴스를 지정된 개체와 비교하고 이 인스턴스가 지정된 개체보다 짧은지, 같은지 또는 긴지를 나타내는 정수를 반환합니다.</summary>
        <returns>다음 값 중 하나입니다.  
  
 <list type="table"><listheader><term> 값  
  
 </term><description> 설명  
  
 </description></listheader><item><term> -1  
  
 </term><description> 이 인스턴스가 <paramref name="value" />보다 짧습니다.  
  
 </description></item><item><term> 0  
  
 </term><description> 이 인스턴스가 <paramref name="value" />와 같습니다.  
  
 </description></item><item><term> 1  
  
 </term><description> 이 인스턴스가 <paramref name="value" />보다 깁니다.  
  
 또는  
  
 <paramref name="value" />가 <see langword="null" />인 경우  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 인스턴스 <xref:System.TimeSpan>, 해당 값에 관계 없이 보다 큰 것으로 간주 됩니다 `null`합니다.  
  
 `value` 매개 변수 인스턴스의 이어야 합니다 <xref:System.TimeSpan> 또는 `null`, 그러지 않으면 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 비교 <xref:System.TimeSpan> 구조 및 기타 개체를 참조 <xref:System.TimeSpan> 를 사용 하 여 구조체는 <xref:System.TimeSpan.CompareTo%2A> 메서드.  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.TimeSpan.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" />가 <see cref="T:System.TimeSpan" />가 아닌 경우</exception>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.CompareTo(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(TimeSpan value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value">이 인스턴스와 비교할 개체입니다.</param>
        <summary>이 인스턴스를 지정된 <see cref="T:System.TimeSpan" /> 개체와 비교하고 이 인스턴스가 <see cref="T:System.TimeSpan" /> 개체보다 짧은지, 같은지 또는 긴지를 나타내는 정수를 반환합니다.</summary>
        <returns>이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.  
  
 <list type="table"><listheader><term> 값  
  
 </term><description> 설명  
  
 </description></listheader><item><term> 음의 정수  
  
 </term><description> 이 인스턴스가 <paramref name="value" />보다 짧습니다.  
  
 </description></item><item><term> 0  
  
 </term><description> 이 인스턴스는 <paramref name="value" />와 같습니다.  
  
 </description></item><item><term> 양의 정수  
  
 </term><description> 이 인스턴스가 <paramref name="value" />보다 깁니다.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 구현 하는 <xref:System.IComparable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 <xref:System.TimeSpan.CompareTo%2A?displayProperty=nameWithType> 메서드 변환할 필요가 없기 때문에 `value` 매개 변수를 개체로 합니다.  
  
   
  
## Examples  
 다음 예제에서는 제네릭 및 제네릭이 아닌 버전의는 <xref:System.TimeSpan.CompareTo%2A> 여러 값 및 참조 형식에 대 한 메서드.  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Days">
      <MemberSignature Language="C#" Value="public int Days { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Days" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Days" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Days As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Days { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.TimeSpan" /> 구조체가 나타내는 시간 간격의 일 구성 요소를 가져옵니다.</summary>
        <value>이 인스턴스의 일 구성 요소입니다. 반환 값은 양수 또는 음수가 될 수 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.TimeSpan> 값으로 나타낼 수 있습니다 [*-*]*d*.* hh*:*mm*:*ss*.* ff*는 나타낼 음수 시간 간격, 여기서는 *d* 구성 요소는 ' 일 *hh* 은 24 시간제 기준로 *mm* 은 분, *ss* 초이지만 시간 및 *ff* 소수 단위 초를 됩니다. 값은 <xref:System.TimeSpan.Days%2A> 속성 일 구성 요소는 *d*합니다.  
  
 <xref:System.TimeSpan.Days%2A> 반면 속성은 날짜 단위로 나타냅니다는 <xref:System.TimeSpan.TotalDays%2A> 속성은 정수 및 소수 일을 나타냅니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 <xref:System.TimeSpan> 개체를 표시 하는 <xref:System.TimeSpan.Days%2A> 각각의 속성입니다.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalDays" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public TimeSpan Divide (double divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Divide(float64 divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Divide(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide (divisor As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Divide(double divisor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="divisor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public double Divide (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Divide(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Divide(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide (ts As TimeSpan) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Divide(TimeSpan ts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Duration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Function Duration () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Duration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>해당 값이 현재 <see cref="T:System.TimeSpan" /> 개체의 절대 값인 새 <see cref="T:System.TimeSpan" /> 개체를 반환합니다.</summary>
        <returns>값이 현재 <see cref="T:System.TimeSpan" /> 개체의 절대 값인 새 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 적용 된 <xref:System.TimeSpan.Duration%2A> 메서드를 몇 개의 <xref:System.TimeSpan> 개체입니다.  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">이 인스턴스의 값이 <see cref="F:System.TimeSpan.MinValue" />입니다.</exception>
        <altmember cref="P:System.TimeSpan.Ticks" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.TimeSpan" />의 두 인스턴스가 같은지를 나타내는 값을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">이 인스턴스와 비교할 개체입니다.</param>
        <summary>이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</summary>
        <returns>
          <paramref name="value" />가 현재 <see cref="T:System.TimeSpan" /> 구조체와 같은 시간 간격을 나타내는 <see cref="T:System.TimeSpan" /> 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 여러 비교 <xref:System.TimeSpan> 및 기타 개체에 대 한 참조 <xref:System.TimeSpan> 를 사용 하 여는 <xref:System.TimeSpan.Equals%2A> 메서드.  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.TimeSpan.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeSpan obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.TimeSpan obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeSpan obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
        <summary>이 인스턴스가 지정된 <see cref="T:System.TimeSpan" /> 개체와 같은지를 나타내는 값을 반환합니다.</summary>
        <returns>
          <paramref name="obj" />가 이 인터페이스와 같은 시간 간격을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 구현 하는 <xref:System.IEquatable%601?displayProperty=nameWithType> 인터페이스를 하 고 수행 보다 조금 더 나은 <xref:System.TimeSpan.Equals%2A> 변환할 필요가 없기 때문에 `obj` 매개 변수를 개체로 합니다.  
  
   
  
## Examples  
 다음 예제에서는 제네릭 및 제네릭이 아닌 버전의는 <xref:System.TimeSpan.CompareTo%2A> 여러 값 및 참조 형식에 대 한 메서드.  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
        <altmember cref="Overload:System.TimeSpan.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
        <param name="t2">비교할 두 번째 시간 간격입니다.</param>
        <summary>지정된 <see cref="T:System.TimeSpan" />의 두 인스턴스가 같은지를 나타내는 값을 반환합니다.</summary>
        <returns>
          <paramref name="t1" />, <paramref name="t2" />의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 여러 비교 <xref:System.TimeSpan> 개체를 참조 <xref:System.TimeSpan> 정적을 사용 하 여 <xref:System.TimeSpan.Equals%2A> 메서드.  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/comp_equal.cpp#2)]
 [!code-csharp[System.TimeSpan.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/comp_equal.cs#2)]
 [!code-vb[System.TimeSpan.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/comp_equal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FromDays">
      <MemberSignature Language="C#" Value="public static TimeSpan FromDays (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromDays(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDays (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromDays(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">밀리초 단위로 반올림되는 일 수입니다.</param>
        <summary>지정된 일 수를 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다. 여기에서 지정된 값은 밀리초 단위로 반올림됩니다.</summary>
        <returns>
          <paramref name="value" />를 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value` 매개 변수는 틱으로 변환 되는 밀리초 단위로 변환 되 고 틱 수가 해당 하는 데 새 초기화 <xref:System.TimeSpan>합니다. 따라서 `value` 만 고려 되 정확한 밀리초 단위로 반올림 합니다. 정밀도 손실을 발생 하므로 <xref:System.Double> 데이터 형식이 변환이이 발생할 수 있습니다는 <xref:System.OverflowException> 의 범위에 여전히 근처에 있는 값에 대 한 <xref:System.TimeSpan.MinValue> 또는 <xref:System.TimeSpan.MaxValue>합니다. 이렇게 하면 예를 들어 한 <xref:System.OverflowException> 를 인스턴스화하는 다음 시도에 <xref:System.TimeSpan> 개체입니다.  
  
 [!code-csharp[System.TimeSpan.FromMinutes#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#2)]
 [!code-vb[System.TimeSpan.FromMinutes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#2)]  
  
   
  
## Examples  
 다음 예제에서는 여러 개 만들고 <xref:System.TimeSpan> 를 사용 하 여 개체는 <xref:System.TimeSpan.FromDays%2A> 메서드.  
  
 [!code-cpp[System.TimeSpan.From#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromdays.cpp#6)]
 [!code-csharp[System.TimeSpan.From#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromdays.cs#6)]
 [!code-vb[System.TimeSpan.From#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromdays.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="value" />가 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큽니다.  
  
 또는  
  
 <paramref name="value" />가 <see cref="F:System.Double.PositiveInfinity" />인 경우  
  
 또는  
  
 <paramref name="value" />가 <see cref="F:System.Double.NegativeInfinity" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" />가 <see cref="F:System.Double.NaN" />와 같은 경우</exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromHours">
      <MemberSignature Language="C#" Value="public static TimeSpan FromHours (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromHours(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHours (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromHours(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">밀리초 단위로 반올림되는 시간(시)입니다.</param>
        <summary>지정된 시간을 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다. 여기에서 지정된 값은 밀리초 단위로 반올림됩니다.</summary>
        <returns>
          <paramref name="value" />를 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value` 매개 변수는 틱으로 변환 되는 밀리초 단위로 변환 되 고 틱 수가 해당 하는 데 새 초기화 <xref:System.TimeSpan>합니다. 따라서 `value` 만 고려 되 정확한 밀리초 단위로 반올림 합니다. 정밀도 손실을 발생 하므로 <xref:System.Double> 데이터 형식으로이 변환을 생성할 수는 <xref:System.OverflowException> 의 범위에 여전히 근처에 있는 값에 대 한 <xref:System.TimeSpan.MinValue> 또는 <xref:System.TimeSpan.MaxValue>합니다. 이렇게 하면 예를 들어 한 <xref:System.OverflowException> 를 인스턴스화하는 다음 시도에 <xref:System.TimeSpan> 개체입니다.  
  
 [!code-csharp[System.TimeSpan.FromMinutes#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#3)]
 [!code-vb[System.TimeSpan.FromMinutes#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#3)]  
  
   
  
## Examples  
 다음 예제에서는 여러 개 만들고 <xref:System.TimeSpan> 를 사용 하 여 개체는 <xref:System.TimeSpan.FromHours%2A> 메서드.  
  
 [!code-cpp[System.TimeSpan.From#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromhours.cpp#5)]
 [!code-csharp[System.TimeSpan.From#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromhours.cs#5)]
 [!code-vb[System.TimeSpan.From#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromhours.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="value" />가 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큽니다.  
  
 또는  
  
 <paramref name="value" />가 <see cref="F:System.Double.PositiveInfinity" />인 경우  
  
 또는  
  
 <paramref name="value" />가 <see cref="F:System.Double.NegativeInfinity" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" />가 <see cref="F:System.Double.NaN" />와 같은 경우</exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromMilliseconds">
      <MemberSignature Language="C#" Value="public static TimeSpan FromMilliseconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromMilliseconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMilliseconds (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromMilliseconds(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">시간(밀리초)입니다.</param>
        <summary>지정된 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다.</summary>
        <returns>
          <paramref name="value" />를 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value` 틱 매개 변수 변환 되 고 틱 수가 해당 하는 데 새 초기화 <xref:System.TimeSpan>합니다. 따라서 `value` 만 고려 되 정확한 밀리초 단위로 반올림 합니다. 정밀도 손실을 발생 하므로 <xref:System.Double> 데이터 형식으로이 변환을 생성할 수는 <xref:System.OverflowException> 의 범위에 여전히 근처에 있는 값에 대 한 <xref:System.TimeSpan.MinValue> 또는 <xref:System.TimeSpan.MaxValue>합니다. 이렇게 하면 예를 들어 한 <xref:System.OverflowException> 를 인스턴스화하는 다음 시도에 <xref:System.TimeSpan> 개체입니다.  
  
 [!code-csharp[System.TimeSpan.FromMinutes#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#4)]
 [!code-vb[System.TimeSpan.FromMinutes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#4)]  
  
   
  
## Examples  
 다음 예제에서는 여러 개 만들고 <xref:System.TimeSpan> 사용 하 여 개체는 <xref:System.TimeSpan.FromMilliseconds%2A> 메서드.  
  
 [!code-cpp[System.TimeSpan.From#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/frommillisec.cpp#2)]
 [!code-csharp[System.TimeSpan.From#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/frommillisec.cs#2)]
 [!code-vb[System.TimeSpan.From#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/frommillisec.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="value" />가 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큽니다.  
  
 또는  
  
 <paramref name="value" />가 <see cref="F:System.Double.PositiveInfinity" />인 경우  
  
 또는  
  
 <paramref name="value" />가 <see cref="F:System.Double.NegativeInfinity" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" />가 <see cref="F:System.Double.NaN" />와 같은 경우</exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromMinutes">
      <MemberSignature Language="C#" Value="public static TimeSpan FromMinutes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromMinutes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMinutes (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromMinutes(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">밀리초 단위로 반올림되는 시간(분)입니다.</param>
        <summary>지정된 시간(분)을 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다. 여기에서 지정된 값은 밀리초 단위로 반올림됩니다.</summary>
        <returns>
          <paramref name="value" />를 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value` 매개 변수는 틱으로 변환 되는 밀리초 단위로 변환 되 고 틱 수가 해당 하는 데 새 초기화 <xref:System.TimeSpan>합니다. 따라서 `value` 만 고려 되 정확한 밀리초 단위로 반올림 합니다. 정밀도 손실을 발생 하므로 <xref:System.Double> 데이터 형식으로이 변환을 생성할 수는 <xref:System.OverflowException> 의 범위에 여전히 근처에 있는 값에 대 한 <xref:System.TimeSpan.MinValue> 또는 <xref:System.TimeSpan.MaxValue>합니다. 이렇게 하면 예를 들어 한 <xref:System.OverflowException> 를 인스턴스화하는 다음 시도에 <xref:System.TimeSpan> 개체입니다.  
  
 [!code-csharp[System.TimeSpan.FromMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#1)]
 [!code-vb[System.TimeSpan.FromMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#1)]  
  
   
  
## Examples  
 다음 예제에서는 여러 개 만들고 <xref:System.TimeSpan> 를 사용 하 여 개체는 <xref:System.TimeSpan.FromMinutes%2A> 메서드.  
  
 [!code-cpp[System.TimeSpan.From#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromminutes.cpp#4)]
 [!code-csharp[System.TimeSpan.From#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromminutes.cs#4)]
 [!code-vb[System.TimeSpan.From#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromminutes.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="value" />가 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큽니다.  
  
 또는  
  
 <paramref name="value" />가 <see cref="F:System.Double.PositiveInfinity" />인 경우  
  
 또는  
  
 <paramref name="value" />가 <see cref="F:System.Double.NegativeInfinity" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" />가 <see cref="F:System.Double.NaN" />와 같은 경우</exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromSeconds">
      <MemberSignature Language="C#" Value="public static TimeSpan FromSeconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromSeconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSeconds (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromSeconds(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">밀리초 단위로 반올림되는 시간(초)입니다.</param>
        <summary>지정된 시간(초)을 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다. 여기에서 지정된 값은 밀리초 단위로 반올림됩니다.</summary>
        <returns>
          <paramref name="value" />를 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value` 매개 변수는 틱으로 변환 되는 밀리초 단위로 변환 및 틱 수를 사용 하 고 다시을 <xref:System.TimeSpan>합니다. 따라서 `value` 만 고려 되 정확한 밀리초 단위로 반올림 합니다. 정밀도 손실을 발생 하므로 <xref:System.Double> 데이터 형식으로이 생성할 수는 <xref:System.OverflowException> 근처 이지만 아직 범위에에서 있는 값에 대 한 <xref:System.TimeSpan.MinValue> 또는 <xref:System.TimeSpan.MaxValue>, 이것이 원인의는 <xref:System.OverflowException>, 예를 들어에 다음 시도를 인스턴스화하는 <xref:System.TimeSpan> 개체입니다.  
  
 [!code-csharp[System.TimeSpan.FromMinutes#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#5)]
 [!code-vb[System.TimeSpan.FromMinutes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#5)]  
  
   
  
## Examples  
 다음 예제에서는 여러 개 만들고 <xref:System.TimeSpan> 를 사용 하 여 개체는 <xref:System.TimeSpan.FromSeconds%2A> 메서드.  
  
 [!code-cpp[System.TimeSpan.From#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromseconds.cpp#3)]
 [!code-csharp[System.TimeSpan.From#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromseconds.cs#3)]
 [!code-vb[System.TimeSpan.From#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromseconds.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="value" />가 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큽니다.  
  
 또는  
  
 <paramref name="value" />가 <see cref="F:System.Double.PositiveInfinity" />인 경우  
  
 또는  
  
 <paramref name="value" />가 <see cref="F:System.Double.NegativeInfinity" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" />가 <see cref="F:System.Double.NaN" />와 같은 경우</exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromTicks">
      <MemberSignature Language="C#" Value="public static TimeSpan FromTicks (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromTicks(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTicks (value As Long) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromTicks(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">시간을 나타내는 틱 수입니다.</param>
        <summary>지정된 시간을 나타내는 <see cref="T:System.TimeSpan" />을 반환합니다. 여기에서 시간은 틱 단위로 지정됩니다.</summary>
        <returns>
          <paramref name="value" />를 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 같은 동작을 사용 하 여 편의 메서드는 <xref:System.TimeSpan.%23ctor%28System.Int64%29?displayProperty=nameWithType> 생성자입니다. 단일 틱 하나 백 (나노초) 또는 두 번째 1 천만 나타냅니다. 밀리초에 10, 000 틱 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 개 만들고 <xref:System.TimeSpan> 를 사용 하 여 개체는 <xref:System.TimeSpan.FromTicks%2A> 메서드.  
  
 [!code-cpp[System.TimeSpan.From#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromticks.cpp#1)]
 [!code-csharp[System.TimeSpan.From#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromticks.cs#1)]
 [!code-vb[System.TimeSpan.From#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromticks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
        <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 개의 <xref:System.TimeSpan> 서로 다른 시간 값을 나타내는 경우에 개체는 동일한 해시 코드를 있는 것입니다.  
  
   
  
## Examples  
 다음 예제에서는 일부의 해시 코드를 생성 <xref:System.TimeSpan> 를 사용 하 여 개체는 <xref:System.TimeSpan.GetHashCode%2A> 메서드.  
  
 [!code-cpp[System.TimeSpan.GetHashCode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/CPP/hashcode.cpp#1)]
 [!code-csharp[System.TimeSpan.GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[System.TimeSpan.GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hours">
      <MemberSignature Language="C#" Value="public int Hours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hours" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Hours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hours As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hours { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.TimeSpan" /> 구조체가 나타내는 시간 간격의 시 구성 요소를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.TimeSpan" /> 구조체의 시 구성 요소입니다. 반환 값의 범위는 -23에서 23까지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.TimeSpan> 값으로 나타낼 수 있습니다 [*-*]*d*.* hh*:*mm*:*ss*.* ff*는 나타낼 음수 시간 간격, 여기서는 *d* 구성 요소는 ' 일 *hh* 은 24 시간제 기준로 *mm* 은 분, *ss* 초이지만 시간 및 *ff* 소수 단위 초를 됩니다. 값은 <xref:System.TimeSpan.Hours%2A> 속성은 시간 구성 요소 *hh*합니다.  
  
 <xref:System.TimeSpan.Hours%2A> 속성 나타내는 반면 전체 몇 시간에서 <xref:System.TimeSpan.TotalHours%2A> 속성은 정수 및 소수로 계산 된 시간을 나타냅니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 <xref:System.TimeSpan> 개체를 표시 하는 <xref:System.TimeSpan.Hours%2A> 각각의 속성입니다.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan MaxValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최대 <see cref="T:System.TimeSpan" /> 값을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드의 값은 <xref:System.Int64.MaxValue?displayProperty=nameWithType> 틱입니다. 이 값의 문자열 표현을 양수 10675199.02:48:05.4775807 인지 10,675,199 일 보다 약간 더 합니다.  
  
   
  
## Examples  
 다음 예제에서는 참조의 값을 표시 하 고는 <xref:System.TimeSpan.MaxValue> 필드입니다.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="Milliseconds">
      <MemberSignature Language="C#" Value="public int Milliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Milliseconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Milliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Milliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Milliseconds { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.TimeSpan" /> 구조체가 나타내는 시간 간격의 밀리초 구성 요소를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.TimeSpan" /> 구조체의 밀리초 구성 요소입니다. 반환 값의 범위는 -999에서 999까지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.TimeSpan> 값으로 나타낼 수 있습니다 [*-*]*d*.* hh*:*mm*:*ss*.* ff*는 나타낼 음수 시간 간격, 여기서는 *d* 구성 요소는 ' 일 *hh* 은 24 시간제 기준로 *mm* 은 분, *ss* 초이지만 시간 및 *ff* 소수 단위 초를 됩니다. 값은 <xref:System.TimeSpan.Milliseconds%2A> 속성은 소수 자릿수 초 구성 요소 *ff*합니다.  
  
 <xref:System.TimeSpan.Milliseconds%2A> 속성 정수 밀리초를 나타내는 반면는 <xref:System.TimeSpan.TotalMilliseconds%2A> 속성은 정수 및 소수 자릿수 밀리초를 나타냅니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 <xref:System.TimeSpan> 개체를 표시 하는 <xref:System.TimeSpan.Milliseconds%2A> 각각의 속성입니다.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="Minutes">
      <MemberSignature Language="C#" Value="public int Minutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minutes" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Minutes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minutes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minutes { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.TimeSpan" /> 구조체가 나타내는 시간 간격의 분 구성 요소를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.TimeSpan" /> 구조체의 분 구성 요소입니다. 반환 값의 범위는 -59에서 59까지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.TimeSpan> 값으로 나타낼 수 있습니다 [*-*]*d*.* hh*:*mm*:*ss*.* ff*는 나타낼 음수 시간 간격, 여기서는 *d* 구성 요소는 ' 일 *hh* 은 24 시간제 기준로 *mm* 은 분, *ss* 초이지만 시간 및 *ff* 소수 단위 초를 됩니다. 값은 <xref:System.TimeSpan.Minutes%2A> 속성은 분 구성 요소 *mm*합니다.  
  
 <xref:System.TimeSpan.Minutes%2A> 속성 총 분 수를 나타내는 반면는 <xref:System.TimeSpan.TotalMinutes%2A> 속성은 정수 및 소수로 계산 된 분 수를 나타냅니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 <xref:System.TimeSpan> 개체를 표시 하는 <xref:System.TimeSpan.Minutes%2A> 각각의 속성입니다.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan MinValue" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan MinValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최소 <see cref="T:System.TimeSpan" /> 값을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드의 값은 <xref:System.Int64.MinValue?displayProperty=nameWithType> 틱입니다. 이 값의 문자열 표현을 음수 10675199.02:48:05.4775808 또는 보다 약간 10,675,199 일 경우  
  
   
  
## Examples  
 다음 예제에서는 참조의 값을 표시 하 고는 <xref:System.TimeSpan.MinValue> 필드입니다.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public TimeSpan Multiply (double factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Multiply(float64 factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Multiply(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Multiply (factor As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Multiply(double factor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public TimeSpan Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Negate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Negate" />
      <MemberSignature Language="VB.NET" Value="Public Function Negate () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Negate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 인스턴스의 부정 값을 값으로 가지는 새 <see cref="T:System.TimeSpan" /> 개체를 반환합니다.</summary>
        <returns>이 인스턴스와 숫자 값은 같지만 부호가 다른 새 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 적용 된 <xref:System.TimeSpan.Negate%2A> 메서드를 몇 개의 <xref:System.TimeSpan> 개체입니다.  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <see cref="T:System.TimeSpan" />이 이 인스턴스의 부정 값을 나타낼 수 없는 경우, 즉 이 인스턴스의 값이 <see cref="F:System.TimeSpan.MinValue" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static TimeSpan operator + (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Addition(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (t1 As TimeSpan, t2 As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator +(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">추가할 첫 번째 시간 간격입니다.</param>
        <param name="t2">추가할 두 번째 시간 간격입니다.</param>
        <summary>지정된 두 개의 <see cref="T:System.TimeSpan" /> 인스턴스를 추가합니다.</summary>
        <returns>값이 <paramref name="t1" /><paramref name="t2" /> 값의 합계인 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.op_Addition%2A> 메서드 정의 대 한 더하기 연산자 <xref:System.TimeSpan> 값입니다. 다음과 같은 코드 수 있습니다.  
  
 [!code-csharp[System.TimeSpan.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.operators/cs/operators1.cs#1)]
 [!code-vb[System.TimeSpan.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.operators/vb/operators1.vb#1)]  
  
 사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <xref:System.TimeSpan.Add%2A> 메서드 대신 합니다.  
  
 이 연산자는 해당 하는 방법은 <xref:System.TimeSpan.Add%28System.TimeSpan%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">결과는 <see cref="T:System.TimeSpan" />이 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큽니다.</exception>
        <altmember cref="M:System.TimeSpan.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static TimeSpan operator / (TimeSpan timeSpan, double divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Division(valuetype System.TimeSpan timeSpan, float64 divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Division(System.TimeSpan,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator /(TimeSpan timeSpan, double divisor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
        <Parameter Name="divisor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="timeSpan">To be added.</param>
        <param name="divisor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static double operator / (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Division(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Division(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (t1 As TimeSpan, t2 As TimeSpan) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double operator /(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">To be added.</param>
        <param name="t2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
        <param name="t2">비교할 두 번째 시간 간격입니다.</param>
        <summary>두 개의 <see cref="T:System.TimeSpan" /> 인스턴스가 같은지를 나타냅니다.</summary>
        <returns>
          <paramref name="t1" />, <paramref name="t2" />의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[이 연산자는 해당 하는 방법은 <xref:System.TimeSpan.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 다음 예제에서는 여러 비교 <xref:System.TimeSpan> 개체를 참조 <xref:System.TimeSpan> 를 사용 하는 <xref:System.TimeSpan.op_Equality%2A> 연산자입니다.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
        <param name="t2">비교할 두 번째 시간 간격입니다.</param>
        <summary>지정된 <see cref="T:System.TimeSpan" />이 지정된 다른 <see cref="T:System.TimeSpan" />보다 큰지를 나타냅니다.</summary>
        <returns>
          <paramref name="t1" />의 값이 <paramref name="t2" />의 값보다 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[이 연산자는 해당 하는 방법은 <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 다음 예제에서는 여러 비교 <xref:System.TimeSpan> 개체를 참조 <xref:System.TimeSpan> 를 사용 하는 <xref:System.TimeSpan.op_GreaterThan%2A> 연산자입니다.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
        <param name="t2">비교할 두 번째 시간 간격입니다.</param>
        <summary>지정된 <see cref="T:System.TimeSpan" />이 지정된 다른 <see cref="T:System.TimeSpan" />보다 크거나 같은지를 나타냅니다.</summary>
        <returns>
          <paramref name="t1" />의 값이 <paramref name="t2" />의 값보다 크거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[이 연산자는 해당 하는 방법은 <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 다음 예제에서는 여러 비교 <xref:System.TimeSpan> 개체를 참조 <xref:System.TimeSpan> 를 사용 하는 <xref:System.TimeSpan.op_GreaterThanOrEqual%2A> 연산자입니다.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
        <param name="t2">비교할 두 번째 시간 간격입니다.</param>
        <summary>두 <see cref="T:System.TimeSpan" /> 인스턴스가 다른지를 나타냅니다.</summary>
        <returns>
          <paramref name="t1" />의 값과 <paramref name="t2" />의 값이 다르면 <see langword="true" />이고 같으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[이 연산자는 해당 하는 방법은 <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 다음 예제에서는 여러 비교 <xref:System.TimeSpan> 개체를 참조 <xref:System.TimeSpan> 를 사용 하는 <xref:System.TimeSpan.op_Inequality%2A> 연산자입니다.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
        <param name="t2">비교할 두 번째 시간 간격입니다.</param>
        <summary>지정된 <see cref="T:System.TimeSpan" />이 지정된 다른 <see cref="T:System.TimeSpan" />보다 작은지를 나타냅니다.</summary>
        <returns>
          <paramref name="t1" />의 값이 <paramref name="t2" />의 값보다 작으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[이 연산자는 해당 하는 방법은 <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 다음 예제에서는 여러 비교 <xref:System.TimeSpan> 개체를 참조 <xref:System.TimeSpan> 를 사용 하는 <xref:System.TimeSpan.op_LessThan%2A> 연산자입니다.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">비교할 첫 번째 시간 간격입니다.</param>
        <param name="t2">비교할 두 번째 시간 간격입니다.</param>
        <summary>지정된 <see cref="T:System.TimeSpan" />이 지정된 다른 <see cref="T:System.TimeSpan" />보다 작거나 같은지를 나타냅니다.</summary>
        <returns>
          <paramref name="t1" />의 값이 <paramref name="t2" />의 값보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[이 연산자는 해당 하는 방법은 <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 다음 예제에서는 여러 비교 <xref:System.TimeSpan> 개체를 참조 <xref:System.TimeSpan> 를 사용 하는 <xref:System.TimeSpan.op_LessThanOrEqual%2A> 연산자입니다.  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static TimeSpan operator * (double factor, TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Multiply(float64 factor, valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Multiply(System.Double,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator *(double factor, TimeSpan timeSpan);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Double" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <param name="timeSpan">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static TimeSpan operator * (TimeSpan timeSpan, double factor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Multiply(valuetype System.TimeSpan timeSpan, float64 factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Multiply(System.TimeSpan,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator *(TimeSpan timeSpan, double factor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
        <Parameter Name="factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="timeSpan">To be added.</param>
        <param name="factor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (t1 As TimeSpan, t2 As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(TimeSpan t1, TimeSpan t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1">피감수입니다.</param>
        <param name="t2">감수입니다.</param>
        <summary>지정된 <see cref="T:System.TimeSpan" />을 지정된 다른 <see cref="T:System.TimeSpan" />에서 뺍니다.</summary>
        <returns>
          <paramref name="t1" /> 값에서 <paramref name="t2" /> 값을 뺀 결과를 값으로 가지는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[이 연산자는 해당 하는 방법은 <xref:System.TimeSpan.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>  
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan> 빼기 연산자의 주간 업무 총 길이를 계산 합니다. 또한 사용 하 여는 <xref:System.TimeSpan> 를 총 실제 작업 시간에 매일 계산 빼기 연산에서 사용 하기 전에 일별 나누기의 총 시간을 계산 하는 더하기 연산자.  
  
 [!code-csharp[System.TimeSpan.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.operators/cs/Subtraction1.cs#2)]
 [!code-vb[System.TimeSpan.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.operators/vb/Subtraction1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">반환 값이 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큽니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_UnaryNegation(valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (t As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(TimeSpan t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t">부정할 시간 간격입니다.</param>
        <summary>지정된 인스턴스의 부정 값을 값으로 가지는 <see cref="T:System.TimeSpan" />을 반환합니다.</summary>
        <returns>이 인스턴스와 숫자 값은 같지만 부호가 다른 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[이 연산자는 해당 하는 방법은 <xref:System.TimeSpan.Negate?displayProperty=nameWithType>  
  
## Examples  
 다음 예제에서는 적용 된 <xref:System.TimeSpan.op_UnaryNegation%2A> 연산자를 몇 개의 <xref:System.TimeSpan> 개체입니다.  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <see cref="T:System.TimeSpan" />이 이 인스턴스의 부정 값을 나타낼 수 없는 경우, 즉 이 인스턴스의 값이 <see cref="F:System.TimeSpan.MinValue" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static TimeSpan operator + (TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_UnaryPlus(valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (t As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator +(TimeSpan t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t">반환할 시간 간격입니다.</param>
        <summary>
          <see cref="T:System.TimeSpan" />의 지정된 인스턴스를 반환합니다.</summary>
        <returns>
          <paramref name="t" />에 지정된 시간 간격입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 적용 된 <xref:System.TimeSpan.op_UnaryPlus%2A> 연산자를 몇 개의 <xref:System.TimeSpan> 개체입니다.  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다.</summary>
        <altmember cref="Overload:System.TimeSpan.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <summary>간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다.</summary>
        <returns>
          <paramref name="s" />에 해당하는 시간 간격입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `s` 매개 변수 형태로 시간 간격 사양이 포함:  
  
 [*ws*][-]{ *d* &#124; [*d*.]*hh*:*mm*[:*ss*[.*ff*]] }[*ws*]  
  
 대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다. 목록에서 중괄호 대체 방법 중 하나를 선택 ({및}) 공백으로 구분 하 여 세로 막대 (&#124;)가 필요 합니다. 다음 표에서 각 요소에 설명 합니다.  
  
|요소|설명|  
|-------------|-----------------|  
|*ws*|선택적 공백입니다.|  
|-|음수를 나타내는 선택적 빼기 기호는 <xref:System.TimeSpan>합니다.|  
|*d*|일 전 부터는 10675199 0에서 까지입니다.|  
|이어야 합니다.|시간에서 일을 구분 하는 문화권 구분 기호입니다. 고정 형식은 마침표를 사용 하 여 (".") 문자.|  
|*hh*|0에서 23 사이의 시간입니다.|  
|:|문화권 구분 시간 구분 기호입니다. 고정 형식은 사용 하는 콜론 (":") 문자.|  
|*mm*|0에서 59 까지의 분입니다.|  
|*ss*|선택적 초 0에서 59 까지입니다.|  
|*.*|소수 단위 초에서에서 초를 구분 하는 문화권 구분 기호입니다. 고정 형식은 마침표를 사용 하 여 (".") 문자.|  
|*ff*|선택적 소수 자릿수 초로 구성 된 10 진수 숫자 1-7 합니다.|  

경우는 `s` 인수가 날짜 값만 하면 시간 및 분 구성 요소를 포함 해야; 다른 구성 요소는 선택 사항입니다. 있는 경우 지정된 된 범위 내 각 시간 구성 요소 값이 포함 되어야 합니다. 예를 들어 값 *hh*, 시간 구성 요소는 0과 23 사이 여야 합니다. 이 전달이로 인해 "23: 00:00"에 <xref:System.TimeSpan.Parse%2A> 메서드 23 시의 시간 간격을 반환 합니다. 반면에 전달 "24: 00:00" 24 일의 시간 간격을 반환 합니다. 이기 때문에 "24"의 시간 구성 요소 범위를 벗어나는 일 구성 요소로 해석 됩니다.

 구성 요소 `s` 전체적으로 보다 크거나 같은 경우 해당 시간 간격을 지정 해야 <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 보다 작거나 같음 및 <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>합니다.  
  
 <xref:System.TimeSpan.Parse%28System.String%29> 메서드 구문 분석을 시도 `s` 현재 문화권에 대 한 각각의 문화권 관련 형식을 사용 하 여 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.Parse%2A> 를 문자열 배열의 각 요소를 변환 하는 메서드는 <xref:System.TimeSpan> 값입니다. 크로아티아어-크로아티아 ("HR-HR") 및 영어-미국 ("EN-US")는 현재 시스템 문화권을 구문 분석 작업에 미치는 영향을 설명 하기 위해 현재 시스템 문화권을 변경 됩니다.  
  
 [!code-csharp[System.TimeSpan.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parse1.cs#1)]
 [!code-vb[System.TimeSpan.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.FormatException">
          <paramref name="s" />의 형식이 잘못된 경우</exception>
        <exception cref="T:System.OverflowException">
          <paramref name="s" />는 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 숫자를 나타냅니다.  
  
 또는  
  
 일, 시간, 분 또는 초 구성 요소 중 하나 이상이 유효 범위를 벗어납니다.</exception>
        <block subset="none" type="usage">
          <para>구문 분석할 문자열의 시간 간격 구성 요소 구문 분석 작업에 7 개 이상의 숫자를 포함 하는 경우는 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 및 이전 버전의 구문 분석 작업과 다르게 동작할 수 있습니다는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다. 구문 분석 작업에 성공 하는 경우에 따라는 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전을 throw 하며 실패할 수 있습니다는 <see cref="T:System.OverflowException" /> 에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다. 구문 분석 작업 throw 하는 다른 경우에는 <see cref="T:System.FormatException" /> 에 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전을 throw 하며 실패할 수 있습니다는 <see cref="T:System.OverflowException" /> 에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다. 다음 예제에서는 두 시나리오를 보여 줍니다.  
  
 [!code-csharp[System.TimeSpan.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parsefailure1.cs#3)]
 [!code-vb[System.TimeSpan.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parsefailure1.vb#3)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char), Optional formatProvider As IFormatProvider = null) As TimeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (string input, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(string input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan Parse(System::String ^ input, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <summary>지정된 문화권별 형식 정보를 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다.</summary>
        <returns>
          <paramref name="formatProvider" />에서 지정한 <paramref name="input" />에 해당하는 시간 간격입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `input` 매개 변수 형태로 시간 간격 사양이 포함:  
  
 [*ws*][-]{ *d* &#124; [*d*.]*hh*:*mm*[:*ss*[.*ff*]] }[*ws*]  
  
 대괄호 ([및])는 선택적 요소;에 있는 요소 목록에서 중괄호 대체 방법 중 하나를 선택 ({및}) 공백으로 구분 하 여 세로 막대 (&#124;)가 필요 합니다. 다음 표에서 각 요소에 설명 합니다.  
  
|요소|설명|  
|-------------|-----------------|  
|*ws*|선택적 공백입니다.|  
|-|음수를 나타내는 선택적 빼기 기호는 <xref:System.TimeSpan>합니다.|  
|*d*|일 전 부터는 10675199 0에서 까지입니다.|  
|이어야 합니다.|시간에서 일을 구분 하는 문화권 구분 기호입니다. 기본값은 마침표 (".") 문자.|  
|*hh*|0에서 23 사이의 시간입니다.|  
|:|문화권 구분 시간 구분 기호입니다.|  
|*mm*|0에서 59 까지의 분입니다.|  
|*ss*|선택적 초 0에서 59 까지입니다.|  
|입니다.|소수 단위 초에서에서 초를 구분 하는 문화권 구분 기호입니다. 기본값은 마침표 (".") 문자.|  
|*ff*|선택적 소수 자릿수 초로 구성 된 10 진수 숫자 1-7 합니다.|  

경우는 `input` 인수가 날짜 값만 하면 시간 및 분 구성 요소를 포함 해야; 다른 구성 요소는 선택 사항입니다. 있는 경우 지정된 된 범위 내 각 시간 구성 요소 값이 포함 되어야 합니다. 예를 들어 값 *hh*, 시간 구성 요소는 0과 23 사이 여야 합니다. 이 전달이로 인해 "23: 00:00"에 <xref:System.TimeSpan.Parse%2A> 메서드 23 시의 시간 간격을 반환 합니다. 반면에 전달 "24: 00:00" 24 일의 시간 간격을 반환 합니다. 이기 때문에 "24"의 시간 구성 요소 범위를 벗어나는 일 구성 요소로 해석 됩니다.

 구성 요소 `input` 전체적으로 보다 크거나 같은 경우 해당 시간 간격을 지정 해야 <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 보다 작거나 같음 및 <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>합니다.  
  
 <xref:System.TimeSpan.Parse%28System.String%29> 메서드 구문 분석을 시도 `input` 로 지정 된 문화권에 대 한 각각의 문화권 관련 형식을 사용 하 여 `formatProvider`합니다.  
  
 `formatProvider` 매개 변수는 한 <xref:System.IFormatProvider> 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 합니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 배열을 <xref:System.Globalization.CultureInfo> 개체, 및에 대 한 호출의 각 개체를 사용 하 여는 <xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> 메서드를 문자열 배열에서 요소를 구문 분석 합니다. 이 예제에서는 특정 문화권의 규칙 형식 지정 작업에 영향을 보여 줍니다.  
  
 [!code-csharp[System.TimeSpan.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parse2.cs#2)]
 [!code-vb[System.TimeSpan.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" />의 형식이 잘못된 경우</exception>
        <exception cref="T:System.OverflowException">
          <paramref name="input" />는 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 숫자를 나타냅니다.  
  
 또는  
  
 <paramref name="input" />의 일, 시, 분 또는 초 구성 요소 중 하나 이상이 유효 범위를 벗어난 경우</exception>
        <block subset="none" type="usage">
          <para>구문 분석할 문자열의 시간 간격 구성 요소 구문 분석 작업에 7 개 이상의 숫자를 포함 하는 경우는 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 및 이전 버전의 구문 분석 작업과 다르게 동작할 수 있습니다는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다. 구문 분석 작업에 성공 하는 경우에 따라는 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전을 throw 하며 실패할 수 있습니다는 <see cref="T:System.OverflowException" /> 에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다. 구문 분석 작업 throw 하는 다른 경우에는 <see cref="T:System.FormatException" /> 에 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전을 throw 하며 실패할 수 있습니다는 <see cref="T:System.OverflowException" /> 에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다. 다음 예제에서는 두 시나리오를 보여 줍니다.  
  
 [!code-csharp[System.TimeSpan.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parsefailure1.cs#3)]
 [!code-vb[System.TimeSpan.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parsefailure1.vb#3)]</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다. 문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
        <altmember cref="Overload:System.TimeSpan.TryParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="format">
          <c>input</c>에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다. 문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
        <returns>
          <paramref name="format" />, <paramref name="formatProvider" />에서 지정한 <paramref name="input" />에 해당하는 시간 간격입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> 변수에 정의 된 형식에 있어야 하는 시간 간격의 문자열 표현을 구문 분석 하는 메서드는 `format` 매개 변수를 제외 선행 및 후행 공백 문자는 무시 됩니다. 때문에 `input` 형식을 따라야 `format` 정확 하 게, 항상 사용 해야 예외 처리 시간 간격을 사용자가을 문자열 입력을 변환할 때. 예외 처리를 사용 하지 않으려는 경우 호출할 수 있습니다는 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> 메서드 대신 합니다.  
  
 `format` 매개 변수는 필수 형식을 정의 하는 하나 이상의 사용자 지정 형식 지정자 또는 단일 표준 형식 지정자를 포함 하는 문자열 `input`합니다. 유효한 형식 문자열에 대 한 자세한 내용은 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)합니다.  
  
> [!IMPORTANT]
>  <xref:System.TimeSpan.ParseExact%2A> 로 지정 된 문화권의 규칙을 사용 하는 메서드는 `formatProvider` 경우에만 매개 변수 `format` 는 표준 <xref:System.TimeSpan> 해당 값은 "g" 또는 "G" 문자열의 형식을 지정 합니다. "C", "t" 및 "T" 표준 형식 문자열은 고정 문화권의 서식 지정 규칙을 사용합니다. 입력된 문자열의 정확한 형식을 정의 하 고 리터럴 문자를 사용 하 여 시간 간격의 구성 요소를 구분 하는 사용자 지정 형식 문자열.  
  
 `formatProvider` 매개 변수는는 <xref:System.IFormatProvider> 경우 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 `format` 는 표준 형식 문자열입니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> 메서드를 다양 한 형식 문자열 및 문화권을 사용 하 여 시간 간격의 여러 문자열 표현을 구문 분석 합니다.  
  
 [!code-csharp[System.TimeSpan.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample1.cs#1)]
 [!code-vb[System.TimeSpan.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" />의 형식이 잘못된 경우</exception>
        <exception cref="T:System.OverflowException">
          <paramref name="input" />는 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 숫자를 나타냅니다.  
  
 또는  
  
 <paramref name="input" />의 일, 시, 분 또는 초 구성 요소 중 하나 이상이 유효 범위를 벗어난 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="formats">
          <c>input</c>에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열 배열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <summary>지정된 서식 문자열 배열 및 문화권별 형식 정보를 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다. 문자열 표시의 형식은 지정된 형식 중 하나와 정확히 일치해야 합니다.</summary>
        <returns>
          <paramref name="formats" />, <paramref name="formatProvider" />에서 지정한 <paramref name="input" />에 해당하는 시간 간격입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> 메서드에 의해 정의 된 형식 중 하나에 있어야 하는 시간 간격의 문자열 표현을 구문 분석 하는 `formats` 매개 변수를 제외 선행 및 후행 공백 문자는 무시 됩니다. 때문에 `input` 에 지정 된 형식 중 하나를 정확 하 게 준수 해야 `formats`, 시간 간격을 사용자가을 문자열 입력을 변환할 때 예외 처리를 항상 사용 해야 합니다. 예외 처리를 사용 하지 않으려는 경우 호출할 수 있습니다는 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> 메서드 대신 합니다.  
  
 `formats` 매개 변수는 해당 요소가 구성의 필수 형식을 정의 하는 하나 이상의 사용자 지정 형식 지정자 또는 단일 표준 형식 지정자는 문자열 배열 `input`합니다. 유효한 형식 문자열에 대 한 자세한 내용은 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)합니다. `input` 멤버에 정확히 일치 해야 `formats` 구문 분석 작업이 성공 하려면에 대 한 합니다. 구문 분석 작업이 일치 시 키 려 `input` 각 요소에 `formats` 배열의 첫 요소로 시작 합니다.  
  
> [!IMPORTANT]
>  <xref:System.TimeSpan.ParseExact%2A> 로 지정 된 문화권의 규칙을 사용 하는 메서드는 `formatProvider` 매개 변수 형식 문자열을 구문 분석 하는 데 사용 하는 경우에 `input` 는 표준 <xref:System.TimeSpan> 해당 값은 "g" 또는 "G" 문자열의 형식을 지정 합니다. "C", "t" 및 "T" 표준 형식 문자열은 고정 문화권의 서식 지정 규칙을 사용합니다. 입력된 문자열의 정확한 형식을 정의 하 고 리터럴 문자를 사용 하 여 시간 간격의 구성 요소를 구분 하는 사용자 지정 형식 문자열.  
  
 `formatProvider` 매개 변수는는 <xref:System.IFormatProvider> 형식 문자열을 구문 분석 하는 데 사용 하는 경우 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 `input` 는 표준 형식 문자열입니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29> 를 문자열 배열의 각 요소를 변환 하는 메서드는 <xref:System.TimeSpan> 값입니다. 이 예제에서는 프랑스어-프랑스 ("FR-FR") 문화권의 서식 지정 규칙을 사용 하 여 문자열을 해석 합니다. 문자열은 일반 짧은 형식 또는 일반 긴 형식에서 시간 간격을 나타낼 수 있습니다.  
  
 또한이 예제에서는 시간 간격 구문 분석 메서드는 단일 숫자를 해석 하는 방법을 변경 합니다. 일반적으로 한 일 시간 간격의 수로 해석 됩니다. 대신,는 `%h` 사용자 지정 형식 문자열은 시간으로 단일 숫자를 해석 하는 데 사용 됩니다. 이 변경 내용을 적용 하려면 유의 `%h` 사용자 지정 형식 문자열에서 다른 형식 문자열 앞에 야는 `formats` 배열입니다.  
  
 [!code-csharp[System.TimeSpan.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample3.cs#3)]
 [!code-vb[System.TimeSpan.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" />의 형식이 잘못된 경우</exception>
        <exception cref="T:System.OverflowException">
          <paramref name="input" />는 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 숫자를 나타냅니다.  
  
 또는  
  
 <paramref name="input" />의 일, 시, 분 또는 초 구성 요소 중 하나 이상이 유효 범위를 벗어난 경우</exception>
        <altmember cref="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)" />
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles = System.Globalization.TimeSpanStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, Optional styles As TimeSpanStyles = System.Globalization.TimeSpanStyles.None) As TimeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles = System.Globalization.TimeSpanStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, Optional styles As TimeSpanStyles = System.Globalization.TimeSpanStyles.None) As TimeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="format">
          <c>input</c>에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <param name="styles">
          <c>input</c>에 나타날 수 있는 스타일 요소를 정의하는 열거형 값의 비트 조합입니다.</param>
        <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다. 문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
        <returns>
          <paramref name="format" />, <paramref name="formatProvider" />, <paramref name="styles" />에서 지정한 <paramref name="input" />에 해당하는 시간 간격입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.ParseExact%2A> 변수에 정의 된 형식에 있어야 하는 시간 간격의 문자열 표현을 구문 분석 하는 메서드는 `format` 매개 변수를 제외 선행 및 후행 공백 문자는 무시 됩니다. 때문에 `input` 형식을 따라야 `format` 정확 하 게, 항상 사용 해야 예외 처리 시간 간격을 사용자가을 문자열 입력을 변환할 때. 예외 처리를 사용 하지 않으려는 경우 호출할 수 있습니다는 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> 메서드 대신 합니다.  
  
 `format` 매개 변수는 필수 형식을 정의 하는 하나 이상의 사용자 지정 형식 지정자 또는 단일 표준 형식 지정자를 포함 하는 문자열 `input`합니다. 유효한 형식 문자열에 대 한 자세한 내용은 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)합니다.  
  
> [!IMPORTANT]
>  <xref:System.TimeSpan.ParseExact%2A> 로 지정 된 문화권의 규칙을 사용 하는 메서드는 `formatProvider` 경우에만 매개 변수 `format` 는 표준 <xref:System.TimeSpan> 해당 값은 "g" 또는 "G" 문자열의 형식을 지정 합니다. "C", "t" 및 "T" 표준 형식 문자열은 고정 문화권의 서식 지정 규칙을 사용합니다. 입력된 문자열의 정확한 형식을 정의 하 고 리터럴 문자를 사용 하 여 시간 간격의 구성 요소를 구분 하는 사용자 지정 형식 문자열.  
  
 `formatProvider` 매개 변수는는 <xref:System.IFormatProvider> 경우 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 `format` 는 표준 형식 문자열입니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다.  
  
 `styles` 매개 변수 사용자 지정 형식 문자열을 사용 하 여 구문 분석 되는 문자열의 해석에 영향을 줍니다. 결정 여부 `input` 음수 기호가 있는 경우에 음수 시간 간격으로 해석 (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), 음수 시간 간격으로 항상 해석은 여부 또는 (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>). 경우 <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 을 사용 하지 않으면 `format` 리터럴 음수 부호 기호를 포함 해야 합니다 (와 같은 "\\-") 음수 시간 간격을 구문 분석할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> 메서드를 다양 한 형식 문자열 및 문화권을 사용 하 여 시간 간격의 여러 문자열 표현을 구문 분석 합니다. 또한 사용 하 여는 <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 음수 시간 간격으로 각 문자열을 해석 하는 값입니다. 이 예제에서 출력 하는 들는 <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 스타일 사용자 지정 형식 문자열을 함께 사용 하는 경우에 반환 값에 영향을 줍니다.  
  
 [!code-csharp[System.TimeSpan.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample2.cs#2)]
 [!code-vb[System.TimeSpan.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="styles" />가 잘못된 <see cref="T:System.Globalization.TimeSpanStyles" /> 값인 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" />의 형식이 잘못된 경우</exception>
        <exception cref="T:System.OverflowException">
          <paramref name="input" />는 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 숫자를 나타냅니다.  
  
 또는  
  
 <paramref name="input" />의 일, 시, 분 또는 초 구성 요소 중 하나 이상이 유효 범위를 벗어난 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="formats">
          <c>input</c>에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열 배열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <param name="styles">입력에 나타날 수 있는 스타일 요소를 정의하는 열거형 값의 비트 조합입니다.</param>
        <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환합니다. 문자열 표시의 형식은 지정된 형식 중 하나와 정확히 일치해야 합니다.</summary>
        <returns>
          <paramref name="formats" />, <paramref name="formatProvider" />, <paramref name="styles" />에서 지정한 <paramref name="input" />에 해당하는 시간 간격입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> 메서드에 의해 정의 된 형식 중 하나에 있어야 하는 시간 간격의 문자열 표현을 구문 분석 하는 `formats` 매개 변수를 제외 선행 및 후행 공백 문자는 무시 됩니다. 때문에 `input` 에 지정 된 형식 중 하나를 정확 하 게 준수 해야 `formats`, 시간 간격을 사용자가을 문자열 입력을 변환할 때 예외 처리를 항상 사용 해야 합니다. 예외 처리를 사용 하지 않으려는 경우 호출할 수 있습니다는 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> 메서드 대신 합니다.  
  
 `formats` 매개 변수는 해당 요소가 구성의 필수 형식을 정의 하는 하나 이상의 사용자 지정 형식 지정자 또는 단일 표준 형식 지정자는 문자열 배열 `input`합니다. 유효한 형식 문자열에 대 한 자세한 내용은 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)합니다. `input` 멤버에 정확히 일치 해야 `formats` 구문 분석 작업이 성공 하려면에 대 한 합니다. 구문 분석 작업이 일치 시 키 려 `input` 각 요소에 `formats` 배열의 첫 요소로 시작 합니다.  
  
> [!IMPORTANT]
>  <xref:System.TimeSpan.ParseExact%2A> 로 지정 된 문화권의 규칙을 사용 하는 메서드는 `formatProvider` 매개 변수 형식 문자열을 구문 분석 하는 데 사용 하는 경우에 `input` 는 표준 <xref:System.TimeSpan> 해당 값은 "g" 또는 "G" 문자열의 형식을 지정 합니다. "C", "t" 및 "T" 표준 형식 문자열은 고정 문화권의 서식 지정 규칙을 사용합니다. 입력된 문자열의 정확한 형식을 정의 하 고 리터럴 문자를 사용 하 여 시간 간격의 구성 요소를 구분 하는 사용자 지정 형식 문자열.  
  
 `formatProvider` 매개 변수는는 <xref:System.IFormatProvider> 형식 문자열을 구문 분석 하는 데 사용 하는 경우 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 `input` 는 표준 형식 문자열입니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다.  
  
 `styles` 매개 변수 사용자 지정 형식 문자열을 사용 하 여 구문 분석 되는 문자열의 해석에 영향을 줍니다. 결정 여부 `input` 음수 기호가 있는 경우에 음수 시간 간격으로 해석 (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), 음수 시간 간격으로 항상 해석은 여부 또는 (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>). 경우 <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 을 사용 하지 않으면 `format` 리터럴 음수 부호 기호를 포함 해야 합니다 (와 같은 "\\-") 음수 시간 간격을 구문 분석할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> 를 문자열 배열의 각 요소를 변환 하는 메서드는 <xref:System.TimeSpan> 값입니다. 문자열은 일반 짧은 형식 또는 일반 긴 형식에서 시간 간격을 나타낼 수 있습니다.  
  
 또한이 예제에서는 시간 간격 구문 분석 메서드는 단일 숫자를 해석 하는 방법을 변경 합니다. 일반적으로 한 일 시간 간격의 수로 해석 됩니다. 대신,는 `%h` 사용자 지정 형식 문자열은 시간으로 단일 숫자를 해석 하는 데 사용 됩니다. 이 변경 내용을 적용 하려면 유의 `%h` 사용자 지정 형식 문자열에서 다른 형식 문자열 앞에 야는 `formats` 배열입니다. 또한 출력에서 확인 하는 <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 메서드 호출에 지정 된 플래그는이 형식 지정자와 함께 문자열을 구문 분석 하는 경우에 사용 됩니다.  
  
 [!code-csharp[System.TimeSpan.ParseExact#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample4.cs#4)]
 [!code-vb[System.TimeSpan.ParseExact#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="styles" />가 잘못된 <see cref="T:System.Globalization.TimeSpanStyles" /> 값인 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.FormatException">
          <paramref name="input" />의 형식이 잘못된 경우</exception>
        <exception cref="T:System.OverflowException">
          <paramref name="input" />는 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 숫자를 나타냅니다.  
  
 또는  
  
 <paramref name="input" />의 일, 시, 분 또는 초 구성 요소 중 하나 이상이 유효 범위를 벗어난 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Seconds">
      <MemberSignature Language="C#" Value="public int Seconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Seconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Seconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Seconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Seconds { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.TimeSpan" /> 구조체가 나타내는 시간 간격의 초 구성 요소를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.TimeSpan" /> 구조체의 초 구성 요소입니다. 반환 값의 범위는 -59에서 59까지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.TimeSpan> 값으로 나타낼 수 있습니다 [*-*]*d*.* hh*:*mm*:*ss*.* ff*는 나타낼 음수 시간 간격, 여기서는 *d* 구성 요소는 ' 일 *hh* 은 24 시간제 기준로 *mm* 은 분, *ss* 초이지만 시간 및 *ff* 소수 단위 초를 됩니다. 값은 <xref:System.TimeSpan.Seconds%2A> 속성은 초 구성 요소가 *ss*합니다.  
  
 <xref:System.TimeSpan.Seconds%2A> 속성 총 초 수를 나타내는 반면는 <xref:System.TimeSpan.TotalSeconds%2A> 속성은 정수 및 소수 자릿수 초를 나타냅니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 <xref:System.TimeSpan> 개체를 표시 하는 <xref:System.TimeSpan.Seconds%2A> 각각의 속성입니다.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (ts As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(TimeSpan ts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts">뺄 시간 간격입니다.</param>
        <summary>지정된 <see cref="T:System.TimeSpan" /> 개체와 이 인스턴스 간의 차를 값으로 가지는 새 <see cref="T:System.TimeSpan" /> 개체를 반환합니다.</summary>
        <returns>이 인스턴스 값에서 <paramref name="ts" /> 값을 뺀 결과를 값으로 가지는 새 시간 간격입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 값은 사이 여야 합니다 <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 및 <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>, 그러지 않으면 예외가 throw 됩니다.  
  
 반환 값은 새 <xref:System.TimeSpan>; 원래 <xref:System.TimeSpan> 수정 되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.Subtract%2A> 단일 간에 차이 계산 하는 메서드 <xref:System.TimeSpan> 값과 각 배열에는 시간 간격입니다. 때문에 <xref:System.TimeSpan> 형식 문자열 결과 문자열에 음수 기호를 넣지 마십시오,이 예제에서는 조건부 논리를 사용 하 여 음수 시간 간격으로 음수 기호를 포함 합니다.  
  
 [!code-csharp[System.TimeSpan.Subtract#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.subtract/cs/subtract1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">반환 값이 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큽니다.</exception>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 나타내는 틱 수를 가져옵니다.</summary>
        <value>이 인스턴스에 포함된 틱 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 최소 시간 단위 (100 나노초) 또는 두 번째 1 천만 있는 눈금입니다. 밀리초에 10, 000 틱 있습니다. 값은 <xref:System.TimeSpan.Ticks%2A> 속성은 양수 또는 음수 시간 간격을 나타내는 양수 또는 음수일 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 <xref:System.TimeSpan> 개체를 표시 하는 <xref:System.TimeSpan.Ticks%2A> 각각의 속성입니다.  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerDay">
      <MemberSignature Language="C#" Value="public const long TicksPerDay = 864000000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerDay = (864000000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerDay" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerDay As Long  = 864000000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerDay = 864000000000;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>864000000000</MemberValue>
      <Docs>
        <summary>하루 동안의 틱 수를 나타냅니다. 이 필드는 상수입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 상수의 값은 864 십억; 즉, 864,000,000,000 합니다.  
  
   
  
## Examples  
 다음 예제에서는 참조의 값을 표시 하 고는 <xref:System.TimeSpan.TicksPerDay> 필드입니다.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerHour">
      <MemberSignature Language="C#" Value="public const long TicksPerHour = 36000000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerHour = (36000000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerHour" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerHour As Long  = 36000000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerHour = 36000000000;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>36000000000</MemberValue>
      <Docs>
        <summary>한 시간 동안의 틱 수를 나타냅니다. 이 필드는 상수입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 상수의 값은 36 십억; 즉, 36,000,000,000 합니다.  
  
   
  
## Examples  
 다음 예제에서는 참조의 값을 표시 하 고는 <xref:System.TimeSpan.TicksPerHour> 필드입니다.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerMillisecond">
      <MemberSignature Language="C#" Value="public const long TicksPerMillisecond = 10000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerMillisecond = (10000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerMillisecond" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerMillisecond As Long  = 10000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerMillisecond = 10000;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>10000</MemberValue>
      <Docs>
        <summary>1밀리초 동안의 틱 수를 나타냅니다. 이 필드는 상수입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 상수의 값은 10 천; 즉, 10, 000입니다.  
  
   
  
## Examples  
 다음 예제에서는 참조의 값을 표시 하 고는 <xref:System.TimeSpan.TicksPerMillisecond> 필드입니다.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerMinute">
      <MemberSignature Language="C#" Value="public const long TicksPerMinute = 600000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerMinute = (600000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerMinute" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerMinute As Long  = 600000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerMinute = 600000000;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>600000000</MemberValue>
      <Docs>
        <summary>1분 동안의 틱 수를 나타냅니다. 이 필드는 상수입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 상수의 값은 600 백만; 즉, 600,000,000 합니다.  
  
   
  
## Examples  
 다음 예제에서는 참조의 값을 표시 하 고는 <xref:System.TimeSpan.TicksPerMinute> 필드입니다.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerSecond">
      <MemberSignature Language="C#" Value="public const long TicksPerSecond = 10000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerSecond = (10000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerSecond" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerSecond As Long  = 10000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerSecond = 10000000;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>10000000</MemberValue>
      <Docs>
        <summary>1초 동안의 틱 수를 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 상수의 값은 10 백만; 즉, 10000000 합니다.  
  
   
  
## Examples  
 다음 예제에서는 참조의 값을 표시 하 고는 <xref:System.TimeSpan.TicksPerSecond> 필드입니다.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 <see cref="T:System.TimeSpan" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.TimeSpan" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
        <returns>현재 <see cref="T:System.TimeSpan" /> 값의 문자열 표현입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 문자열 "c" 형식 지정자와 같고 형식은 다음과 같습니다.  
  
 [-][*d*.]*hh*:*mm*:*ss*[.*fffffff*]  
  
 요소 대괄호에서 ([및])는 반환 된 문자열에 포함 되지 않을 수 있습니다. 콜론과 마침표 (: and.)는 리터럴 문자. 리터럴이 아닌 요소는 다음 표에 나열 됩니다. 문자열에서 반환 하는 <xref:System.TimeSpan.ToString> 메서드는 문화권을 구분 하지 않습니다.  
  
|항목|설명|  
|----------|-----------------|  
|"-"|음수 시간 간격을 나타내는 빼기 기호 기미가 보이지 않습니다 양의 시간 범위에 대 한 포함 되어 있습니다.|  
|"*d*"|시간 간격의 일 수 있습니다. 이 요소는 시간 간격은 1 일 보다 작은 경우 생략 됩니다.|  
|"*hh*"|0에서 23 사이의 시간 간격의 시간 수입니다.|  
|"*mm*"|0에서 59 사이의 시간 간격의 분 수입니다.|  
|"*ss*"|시간 (초)로 0에서 59 사이의 시간 간격의 수입니다.|  
|"*fffffff*"|시간 간격의 소수 자릿수 초입니다. 시간 간격에 소수 자릿수 초가 포함 되지 않은 경우이 요소는 생략 됩니다. 있는 경우 소수 자릿수 초는 항상 일곱 개의 10 진수 표시 됩니다.|  
  
> [!NOTE]
>  문자열 표현 비교 하는 방법에 대 한 자세한 내용은 <xref:System.TimeSpan> 기술 자료 문서를 참조 하는 Oracle 데이터 형식 및 [324577: 두 번째 데이터 형식으로 System.TimeSpan 않습니다 일치 Oracle이 아님 9i 간격 일](http://go.microsoft.com/fwlink/?LinkId=161146)합니다.  
  
   
  
## Examples  
 호출 하 여 반환 하는 문자열을 표시 하는 다음 예제는 <xref:System.TimeSpan.ToString%2A> 메서드는 여러 가지 <xref:System.TimeSpan> 값입니다. 하지만 예제에서는 호출 하지 않습니다는 <xref:System.TimeSpan.ToString%2A> 메서드를 직접에 의해 호출 됩니다는 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 변환 하려고 시도 하는 경우 메서드는 <xref:System.TimeSpan> 값을 해당 문자열 표현입니다.  
  
 [!code-csharp[System.TimeSpan.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.TimeSpan.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>서식 지정에 대 한 지원 <see cref="T:System.TimeSpan" /> 값에 추가 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]합니다. 그러나는 <see cref="M:System.TimeSpan.ToString" /> 메서드 오버 로드 문화권을 구분 하지 않는 상태로 유지 됩니다. 해당 동작은 이전 버전의.NET Framework에서 그대로 적용 됩니다. 서식을 제어 하는 <see cref="T:System.TimeSpan" /> 값, 호출 된 <see cref="M:System.TimeSpan.ToString(System.String)" /> 또는 <see cref="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" /> 오버 로드 합니다.</para>
        </block>
        <altmember cref="T:System.String" />
        <altmember cref="M:System.TimeSpan.Parse(System.String)" />
        <altmember cref="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">표준 또는 사용자 지정 <see cref="T:System.TimeSpan" /> 서식 문자열입니다.</param>
        <summary>지정된 형식을 사용하여 현재 <see cref="T:System.TimeSpan" /> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
        <returns>
          <paramref name="format" /> 매개 변수로 지정된 서식에 따른 현재 <see cref="T:System.TimeSpan" /> 값의 문자열 표현입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `format` 매개 변수는 모든 유효한 표준 또는 사용자 지정 형식 지정자에 대 한 수 <xref:System.TimeSpan> 값입니다. 경우 `format` 같으면 <xref:System.String.Empty?displayProperty=nameWithType> 아니거나 `null`, 현재의 반환 값 <xref:System.TimeSpan> 개체 일반 서식 지정자 ("c")로 포맷 된 합니다. 경우 `format` 다른 값을 메서드가 throw 한 <xref:System.FormatException>합니다.  
  
 경우 `format` 는 표준 형식 문자열을 반환된 된 문자열의 형식은 현재 문화권의 서식 지정 규칙에 의해 정의 됩니다.  
  
> [!IMPORTANT]
>  사용자 지정 형식 문자열에 대 한 <xref:System.TimeSpan> 값 날짜 또는 시간 구분 기호를 포함 되지 않습니다. 이러한 요소를 형식 문자열에 포함 하려는 경우 문자 리터럴로 처리 해야 합니다. 예시의 경우에 대 한 예제를 참조 하 고 참조는 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md) 자세한 정보에 대 한 항목입니다.  
  
 .NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.  
  
-   에 대 한 형식 문자열에 대 한 자세한 내용은 <xref:System.TimeSpan> 값, 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)합니다.  
  
-   .NET Framework에서 형식 지정에 대 한 지원에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 표준 및 사용자 지정 <xref:System.TimeSpan> 형식 문자열의 배열에서 각 요소의 문자열 표현을 표시 하려면 <xref:System.TimeSpan> 값  
  
 [!code-csharp[System.TimeSpan.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/tostring3.cs#3)]
 [!code-vb[System.TimeSpan.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <paramref name="format" /> 매개 변수가 인식되거나 지원되지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">표준 또는 사용자 지정 <see cref="T:System.TimeSpan" /> 서식 문자열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <summary>지정된 형식과 문화권별 형식 정보를 사용하여 현재 <see cref="T:System.TimeSpan" /> 개체의 값을 해당 문자열 표현으로 변환합니다.</summary>
        <returns>
          <paramref name="format" />
          <paramref name="formatProvider" />에서 지정한 현재 <see cref="T:System.TimeSpan" /> 값에 대한 문자열 표현입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `format` 매개 변수는 모든 유효한 표준 또는 사용자 지정 형식 지정자에 대 한 수 <xref:System.TimeSpan> 값입니다. 경우 `format` 같으면 <xref:System.String.Empty?displayProperty=nameWithType> 아니거나 `null`, 현재의 반환 값 <xref:System.TimeSpan> 개체 일반 서식 지정자 ("c")로 포맷 된 합니다. 형식이 다른 값 이면 메서드에서 throw 된 <xref:System.FormatException>합니다.  
  
> [!IMPORTANT]
>  사용자 지정 형식 문자열에 대 한 <xref:System.TimeSpan> 값 날짜 또는 시간 구분 기호를 포함 되지 않습니다. 이러한 요소를 형식 문자열에 포함 하려는 경우 문자 리터럴로 처리 해야 합니다. 예시의 경우에 대 한 예제를 참조 하 고 참조는 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md) 자세한 정보에 대 한 항목입니다.  
  
 .NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.  
  
-   에 대 한 형식 문자열에 대 한 자세한 내용은 <xref:System.TimeSpan> 값, 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)합니다.  
  
-   .NET Framework에서 형식 지정에 대 한 지원에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.  
  
 `formatProvider` 매개 변수는 한 <xref:System.IFormatProvider> 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 합니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 을 통해 반환 되는 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다. 경우 `format` 은 사용자 지정 형식 문자열은 `formatProvider` 매개 변수가 무시 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29> 메서드를 두 가지 시간 간격의 서식을 지정 합니다. 이 예제에서는 EN-US 문화권의 규칙을 사용 하 여를 표시 하려면 먼저 각 형식 문자열에 대해 두 번 메서드를 호출 합니다. 다음 FR-FR 문화권의 규칙을 사용 하 여 표시를 합니다.  
  
 [!code-csharp[System.TimeSpan.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/tostring4.cs#4)]
 [!code-vb[System.TimeSpan.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <paramref name="format" /> 매개 변수가 인식되거나 지원되지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TotalDays">
      <MemberSignature Language="C#" Value="public double TotalDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalDays" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalDays" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalDays As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalDays { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>일의 정수 부분과 소수 부분으로 표시된 현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 가져옵니다.</summary>
        <value>이 인스턴스가 나타내는 총 기간(일)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 일로 틱에서이 인스턴스의 값을 변환 합니다. 이 수는 정수 및 소수로 계산 된 날을 포함할 수 있습니다.  
  
 <xref:System.TimeSpan.TotalDays%2A> 속성 정수 및 소수 일을 나타내는 반면는 <xref:System.TimeSpan.Days%2A> 속성 일을 나타냅니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.TimeSpan> 개체의 값을 표시 하 고 해당 <xref:System.TimeSpan.TotalDays%2A> 속성입니다. 또한 값의 소수 부분을 구성 하는 각 구성 요소 (시, 분, 초 및 밀리초)의 값을 표시 해당 <xref:System.TimeSpan.TotalDays%2A> 속성입니다.  
  
 [!code-csharp[System.TimeSpan.TotalDays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totaldays/cs/totaldays.cs#1)]
 [!code-vb[System.TimeSpan.TotalDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totaldays/vb/totaldays.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Days" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
      </Docs>
    </Member>
    <Member MemberName="TotalHours">
      <MemberSignature Language="C#" Value="public double TotalHours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalHours" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalHours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalHours As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalHours { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시간(시)의 정수 부분과 소수 부분으로 표시된 현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 가져옵니다.</summary>
        <value>이 인스턴스가 나타내는 총 시간(시)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 시간에 틱에서이 인스턴스의 값을 변환 합니다. 이 수는 정수 및 소수로 계산 된 시간을 포함할 수 있습니다.  
  
 <xref:System.TimeSpan.TotalHours%2A> 속성 정수 및 소수로 계산 된 시간을 나타내는 반면는 <xref:System.TimeSpan.Hours%2A> 속성 전체 시간을 나타냅니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.TimeSpan> 개체 값을 표시 하 고 해당 <xref:System.TimeSpan.TotalHours%2A> 속성. 또한 값의 소수 부분을 구성 하는 각 구성 요소 (시간, 분, 초 및 밀리초)의 값을 표시 해당 <xref:System.TimeSpan.TotalHours%2A> 속성입니다.  
  
 [!code-csharp[System.TimeSpan.TotalHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalhours/cs/totalhours.cs#1)]
 [!code-vb[System.TimeSpan.TotalHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalhours/vb/totalhours.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalMilliseconds">
      <MemberSignature Language="C#" Value="public double TotalMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalMilliseconds As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalMilliseconds { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시간(밀리초)의 정수 부분과 소수 부분으로 표시된 현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 가져옵니다.</summary>
        <value>이 인스턴스가 나타내는 총 시간(밀리초)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 밀리초 틱에서이 인스턴스의 값을 변환합니다. 이 수는 정수 및 소수 자릿수 밀리초를 포함할 수 있습니다.  
  
 <xref:System.TimeSpan.TotalMilliseconds%2A> 속성 정수 및 소수 자릿수 밀리초를 나타내는 반면는 <xref:System.TimeSpan.Milliseconds%2A> 속성은 정수 밀리초를 나타냅니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.TimeSpan> 개체의 값을 표시 하 고 해당 <xref:System.TimeSpan.TotalMilliseconds%2A> 속성입니다.  
  
 [!code-csharp[System.TimeSpan.TotalMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalmilliseconds/cs/totalmilliseconds.cs#1)]
 [!code-vb[System.TimeSpan.TotalMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalmilliseconds/vb/totalmilliseconds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalMinutes">
      <MemberSignature Language="C#" Value="public double TotalMinutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalMinutes" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalMinutes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalMinutes As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalMinutes { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시간(분)의 정수 부분과 소수 부분으로 표시된 현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 가져옵니다.</summary>
        <value>이 인스턴스가 나타내는 총 시간(분)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 분 틱에서이 인스턴스의 값을 변환합니다. 이 수는 정수 및 소수로 계산 된 분을 포함할 수 있습니다.  
  
 <xref:System.TimeSpan.TotalMinutes%2A> 속성 정수 및 소수로 계산 된 분을 나타내는 반면는 <xref:System.TimeSpan.Minutes%2A> 속성 전체 분을 나타냅니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.TimeSpan> 개체의 값을 표시 하 고 해당 <xref:System.TimeSpan.TotalMinutes%2A> 속성입니다. 또한 값의 소수 부분을 구성 하는 각 구성 요소 (초, 밀리초)의 값을 표시 해당 <xref:System.TimeSpan.TotalMinutes%2A> 속성입니다.  
  
 [!code-csharp[System.TimeSpan.TotalMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalminutes/cs/totalminutes.cs#1)]
 [!code-vb[System.TimeSpan.TotalMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalminutes/vb/totalminutes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalSeconds">
      <MemberSignature Language="C#" Value="public double TotalSeconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalSeconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalSeconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalSeconds As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalSeconds { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시간(초)의 정수 부분과 소수 부분으로 표시된 현재 <see cref="T:System.TimeSpan" /> 구조체의 값을 가져옵니다.</summary>
        <value>이 인스턴스가 나타내는 총 시간(초)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 초로 틱에서이 인스턴스의 값을 변환합니다. 이 수는 정수 및 소수 자릿수 초를 포함할 수 있습니다.  
  
 <xref:System.TimeSpan.TotalSeconds%2A> 속성 정수 및 소수 자릿수 초를 나타내는 반면는 <xref:System.TimeSpan.Seconds%2A> 속성 총 초 수를 나타냅니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.TimeSpan> 개체의 값을 표시 하 고 해당 <xref:System.TimeSpan.TotalSeconds%2A> 속성입니다. 또한 값의 소수 부분을 구성 하는 밀리초 구성의 값을 표시의 해당 <xref:System.TimeSpan.TotalSeconds%2A> 속성입니다.  
  
 [!code-csharp[System.TimeSpan.TotalSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalseconds/cs/totalseconds.cs#1)]
 [!code-vb[System.TimeSpan.TotalSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalseconds/vb/totalseconds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional formatProvider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>시간 간격에 대한 지정된 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
        <altmember cref="Overload:System.TimeSpan.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.ReadOnlySpan{System.Char},System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="result">이 메서드가 반환될 때 <c>s</c>에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
        <returns>
          <see langword="true" />가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 <see langword="false" />입니다. <paramref name="s" /> 매개 변수가 <see langword="null" /> 또는 <see cref="F:System.String.Empty" />이거나, 매개 변수 형식이 올바르지 않거나, 매개 변수 값이 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 시간 간격을 나타내는 경우 또는 매개 변수에 유효한 범위를 벗어나는 일, 시, 분, 초 구성 요소가 적어도 하나 이상 있는 경우 이 작업은 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.TryParse%2A> 방법은 <xref:System.TimeSpan.Parse%28System.String%29?displayProperty=nameWithType> 메서드와 변환이 실패할 경우 예외를 throw 하지 않습니다.  
  
 `s` 매개 변수 형태로 시간 간격 사양이 포함:  
  
 [*ws*][-]{ *d* &#124; *d*.*hh*:*mm*[:*ss*[.*ff*]] &#124; *hh*:*mm*[:*ss*[.*ff*]] }[*ws*]  
  
 대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다. 목록에서 중괄호 대체 방법 중 하나를 선택 ({및}) 공백으로 구분 하 여 세로 막대 (&#124;)가 필요 합니다. 다음 표에서 각 요소에 설명 합니다.  
  
|요소|설명|  
|-------------|-----------------|  
|*ws*|선택적 공백입니다.|  
|-|음수를 나타내는 선택적 빼기 기호는 <xref:System.TimeSpan>합니다.|  
|*d*|일 전 부터는 10675199 0에서 까지입니다.|  
|이어야 합니다.|시간에서 일을 구분 하는 문화권 구분 기호입니다. 고정 형식은 마침표를 사용 하 여 (".") 문자.|  
|*hh*|0에서 23 사이의 시간입니다.|  
|:|문화권 구분 시간 구분 기호입니다. 고정 형식은 사용 하는 콜론 (":") 문자.|  
|*mm*|0에서 59 까지의 분입니다.|  
|*ss*|선택적 초 0에서 59 까지입니다.|  
|입니다.|소수 단위 초에서에서 초를 구분 하는 문화권 구분 기호입니다. 고정 형식은 마침표를 사용 하 여 (".") 문자.|  
|*ff*|선택적 소수 자릿수 초로 구성 된 10 진수 숫자 1-7 합니다.|  
  
 구성 요소 `s` 전체적으로 보다 크거나 같은 경우 해당 시간 간격을 지정 해야 <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 보다 작거나 같음 및 <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>합니다.  
  
 <xref:System.TimeSpan.Parse%28System.String%29> 메서드 구문 분석을 시도 `s` 현재 문화권에 대 한 각각의 문화권 관련 형식을 사용 하 여 합니다.  
  
   
  
## Examples  
 사용 하 여 다음 예제는 <xref:System.TimeSpan.TryParse%2A> 만드는 메서드를 <xref:System.TimeSpan> 에서 유효한 개체 <xref:System.TimeSpan> 문자열 시간 범위 문자열이 잘못 되어 구문 분석 작업이 실패 했습니다 때 나타낼 수 있습니다.  
  
 [!code-csharp[System.TimeSpan.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.TimeSpan.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/TryParse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>경우에 따라 7 개 이상의 번호를 포함 하는 문자열을 구문 분석할 수 시간 간격 구성 요소를 구문 분석 작업에 성공 하는 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전을 throw 하며 실패할 수 있습니다는 <see cref="T:System.OverflowException" /> 에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], 다음 예제에서는 이 시나리오를 보여 줍니다.  
  
 [!code-csharp[System.TimeSpan.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparsefailure1.cs#3)]
 [!code-vb[System.TimeSpan.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparsefailure1.vb#3)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <param name="result">이 메서드가 반환될 때 <c>input</c>에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 문화권별 형식 정보를 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
        <returns>
          <see langword="true" />가 성공적으로 변환되었으면 <paramref name="input" />이고, 그렇지 않으면 <see langword="false" />입니다. <paramref name="input" /> 매개 변수가 <see langword="null" /> 또는 <see cref="F:System.String.Empty" />이거나, 매개 변수 형식이 올바르지 않거나, 매개 변수 값이 <see cref="F:System.TimeSpan.MinValue" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 시간 간격을 나타내는 경우 또는 매개 변수에 유효한 범위를 벗어나는 일, 시, 분, 초 구성 요소가 적어도 하나 이상 있는 경우 이 작업은 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> 방법은 <xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> 메서드와 변환이 실패할 경우 예외를 throw 하지 않습니다.  
  
 `input` 매개 변수 형태로 시간 간격 사양이 포함:  
  
 [*ws*][-]{ *d* &#124; *d*.*hh*:*mm*[:*ss*[.*ff*]] &#124; *hh*:*mm*[:*ss*[.*ff*]] }[*ws*]  
  
 대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다. 목록에서 중괄호 대체 방법 중 하나를 선택 ({및}) 공백으로 구분 하 여 세로 막대 (&#124;)가 필요 합니다. 다음 표에서 각 요소에 설명 합니다.  
  
|요소|설명|  
|-------------|-----------------|  
|*ws*|선택적 공백입니다.|  
|-|음수를 나타내는 선택적 빼기 기호는 <xref:System.TimeSpan>합니다.|  
|*d*|일 전 부터는 10675199 0에서 까지입니다.|  
|이어야 합니다.|시간에서 일을 구분 하는 문화권 구분 기호입니다. 고정 형식은 마침표를 사용 하 여 (".") 문자.|  
|*hh*|0에서 23 사이의 시간입니다.|  
|:|문화권 구분 시간 구분 기호입니다. 고정 형식은 사용 하는 콜론 (":") 문자.|  
|*mm*|0에서 59 까지의 분입니다.|  
|*ss*|선택적 초 0에서 59 까지입니다.|  
|입니다.|소수 단위 초에서에서 초를 구분 하는 문화권 구분 기호입니다. 고정 형식은 마침표를 사용 하 여 (".") 문자.|  
|*ff*|선택적 소수 자릿수 초로 구성 된 10 진수 숫자 1-7 합니다.|  
  
 구성 요소 `input` 전체적으로 보다 크거나 같은 경우 해당 시간 간격을 지정 해야 <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 보다 작거나 같음 및 <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>합니다.  
  
 <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> 메서드 구문 분석을 시도 `input` 로 지정 된 문화권에 대 한 각각의 문화권 관련 형식을 사용 하 여 `formatProvider`합니다.  
  
 `formatProvider` 매개 변수는 한 <xref:System.IFormatProvider> 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 합니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 배열을 <xref:System.Globalization.CultureInfo> 개체, 및에 대 한 호출의 각 개체를 사용 하 여는 <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> 메서드를 문자열 배열에서 요소를 구문 분석 합니다. 이 예제에서는 특정 문화권의 규칙 형식 지정 작업에 영향을 보여 줍니다.  
  
 [!code-csharp[System.TimeSpan.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparse2.cs#2)]
 [!code-vb[System.TimeSpan.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>경우에 따라 7 개 이상의 번호를 포함 하는 문자열을 구문 분석할 수 시간 간격 구성 요소를 구문 분석 작업 반환 하는 <see langword="true" /> 에 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전을 반환 하며 실패할 수 있습니다 <see langword="false" /> 에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], 다음 예제에서는이 시나리오를 보여 줍니다.  
  
 [!code-csharp[System.TimeSpan.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparsefailure1.cs#3)]
 [!code-vb[System.TimeSpan.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparsefailure1.vb#3)]</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" /> equ으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다. 문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
        <altmember cref="Overload:System.TimeSpan.ParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="format">
          <c>input</c>에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <param name="result">이 메서드가 반환될 때 <c>input</c>에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 형식 및 문화권별 형식 정보를 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다. 문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
        <returns>
          <see langword="true" />가 성공적으로 변환되었으면 <paramref name="input" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> 변수에 정의 된 형식에 있어야 하는 시간 간격의 문자열 표현을 구문 분석 하는 메서드는 `format` 매개 변수를 제외 선행 및 후행 공백 문자는 무시 됩니다. 이 메서드는 비슷합니다는 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> 메서드와 변환이 실패할 경우 예외를 throw 하지 않습니다.  
  
 `format` 매개 변수는 필수 형식을 정의 하는 하나 이상의 사용자 지정 형식 지정자 또는 단일 표준 형식 지정자를 포함 하는 문자열 `input`합니다. 유효한 형식 문자열에 대 한 자세한 내용은 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)합니다.  
  
> [!IMPORTANT]
>  <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> 로 지정 된 문화권의 규칙을 사용 하는 메서드는 `formatProvider` 경우에만 매개 변수 `format` 는 표준 <xref:System.TimeSpan> 해당 값은 "g" 또는 "G" 문자열의 형식을 지정 합니다. "C", "t" 및 "T" 표준 형식 문자열은 고정 문화권의 서식 지정 규칙을 사용합니다. 입력된 문자열의 정확한 형식을 정의 하 고 리터럴 문자를 사용 하 여 시간 간격의 구성 요소를 구분 하는 사용자 지정 형식 문자열.  
  
 `formatProvider` 매개 변수는는 <xref:System.IFormatProvider> 경우 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 `format` 는 표준 형식 문자열입니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> 메서드를 다양 한 형식 문자열 및 문화권을 사용 하 여 시간 간격의 여러 문자열 표현을 구문 분석 합니다.  
  
 [!code-csharp[System.TimeSpan.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample1.cs#1)]
 [!code-vb[System.TimeSpan.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="formats">
          <c>input</c>에 허용되는 형식을 정의하는 표준 또는 사용자 지정 서식 문자열 배열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <param name="result">이 메서드가 반환될 때 <c>input</c>에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 형식, 문화권별 형식 정보를 사용하여 시간 간격에 대한 지정된 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다. 문자열 표시의 형식은 지정된 형식 중 하나와 정확히 일치해야 합니다.</summary>
        <returns>
          <see langword="true" />가 성공적으로 변환되었으면 <paramref name="input" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> 메서드는 지정 된 형식 문자열 중 하나에 의해 정의 된 형식에 있어야 하는 시간 간격의 문자열 표현을 구문 분석은 `formats` 매개 변수를 제외 선행 및 후행 공백 문자는 무시 됩니다. 이 메서드는 비슷합니다는 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29> 메서드와 변환이 실패할 경우 예외를 throw 하지 않습니다.  
  
 `formats` 매개 변수는 해당 요소가 구성의 필수 형식을 정의 하는 하나 이상의 사용자 지정 형식 지정자 또는 단일 표준 형식 지정자는 문자열 배열 `input`합니다. 유효한 형식 문자열에 대 한 자세한 내용은 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)합니다. `input` 멤버에 정확히 일치 해야 `formats` 구문 분석 작업이 성공 하려면에 대 한 합니다. 구문 분석 작업이 일치 시 키 려 `input` 각 요소에 `formats` 배열의 첫 요소로 시작 합니다.  
  
> [!IMPORTANT]
>  <xref:System.TimeSpan.TryParseExact%2A> 로 지정 된 문화권의 규칙을 사용 하는 메서드는 `formatProvider` 매개 변수 형식 문자열을 구문 분석 하는 데 사용 하는 경우에 `input` 는 표준 <xref:System.TimeSpan> 해당 값은 "g" 또는 "G" 문자열의 형식을 지정 합니다. "C", "t" 및 "T" 표준 형식 문자열은 고정 문화권의 서식 지정 규칙을 사용합니다. 입력된 문자열의 정확한 형식을 정의 하 고 리터럴 문자를 사용 하 여 시간 간격의 구성 요소를 구분 하는 사용자 지정 형식 문자열.  
  
 `formatProvider` 매개 변수는는 <xref:System.IFormatProvider> 형식 문자열을 구문 분석 하는 데 사용 하는 경우 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 `input` 는 표준 형식 문자열입니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> 를 문자열 배열의 각 요소를 변환 하는 메서드는 <xref:System.TimeSpan> 값입니다. 이 예제에서는 프랑스어-프랑스 ("FR-FR") 문화권의 서식 지정 규칙을 사용 하 여 문자열을 해석 합니다. 문자열은 일반 짧은 형식 또는 일반 긴 형식에서 시간 간격을 나타낼 수 있습니다.  
  
 또한이 예제에서는 시간 간격 구문 분석 메서드는 단일 숫자를 해석 하는 방법을 변경 합니다. 일반적으로 한 일 시간 간격의 수로 해석 됩니다. 대신,는 `%h` 사용자 지정 형식 문자열은 시간으로 단일 숫자를 해석 하는 데 사용 됩니다. 이 변경 내용을 적용 하려면 유의 `%h` 사용자 지정 형식 문자열에서 다른 형식 문자열 앞에 야는 `formats` 배열입니다.  
  
 [!code-csharp[System.TimeSpan.TryParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample3.cs#3)]
 [!code-vb[System.TimeSpan.TryParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample3.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="format">
          <c>input</c>에 필요한 형식을 정의하는 표준 또는 사용자 지정 서식 문자열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <param name="styles">
          <c>input</c>의 스타일을 나타내는 하나 이상의 열거형 값입니다.</param>
        <param name="result">이 메서드가 반환될 때 <c>input</c>에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 시간 간격에 대한 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다. 문자열 표현의 형식이 지정된 형식과 정확하게 일치해야 합니다.</summary>
        <returns>
          <see langword="true" />가 성공적으로 변환되었으면 <paramref name="input" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> 변수에 정의 된 형식에 있어야 하는 시간 간격의 문자열 표현을 구문 분석 하는 메서드는 `format` 매개 변수를 제외 선행 및 후행 공백 문자는 무시 됩니다. 이 메서드는 비슷합니다는 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> 메서드와 변환이 실패할 경우 예외를 throw 하지 않습니다.  
  
 `format` 매개 변수는 필수 형식을 정의 하는 하나 이상의 사용자 지정 형식 지정자 또는 단일 표준 형식 지정자를 포함 하는 문자열 `input`합니다. 유효한 형식 문자열에 대 한 자세한 내용은 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)합니다.  
  
 `formatProvider` 매개 변수는는 <xref:System.IFormatProvider> 경우 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 `format` 는 표준 형식 문자열입니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다.  
  
 `styles` 매개 변수 사용자 지정 형식 문자열을 사용 하 여 구문 분석 하는 문자열의 해석에 영향을 줍니다. 결정 여부 `input` 음수 기호가 있는 경우에 음수 시간 간격으로 해석 (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), 음수 시간 간격으로 항상 해석은 여부 또는 (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>). 경우 <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 을 사용 하지 않으면 `format` 리터럴 음수 부호 기호를 포함 해야 합니다 (와 같은 "\\-") 음수 시간 간격을 구문 분석할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> 메서드를 다양 한 형식 문자열 및 문화권을 사용 하 여 시간 간격의 여러 문자열 표현을 구문 분석 합니다. 또한 사용 하 여는 <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 음수 시간 간격으로 각 문자열을 해석 하는 값입니다. 이 예제에서 출력 하는 들는 <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 스타일 사용자 지정 형식 문자열을 함께 사용 하는 경우에 반환 값에 영향을 줍니다.  
  
 [!code-csharp[System.TimeSpan.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample2.cs#2)]
 [!code-vb[System.TimeSpan.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">변환할 시간 간격을 지정하는 문자열입니다.</param>
        <param name="formats">
          <c>input</c>에 허용되는 형식을 정의하는 표준 또는 사용자 지정 서식 문자열 배열입니다.</param>
        <param name="formatProvider">문화권별 서식 지정 정보를 제공하는 개체입니다.</param>
        <param name="styles">
          <c>input</c>의 스타일을 나타내는 하나 이상의 열거형 값입니다.</param>
        <param name="result">이 메서드가 반환될 때 <c>input</c>에 지정된 시간 간격을 나타내는 개체를 포함하고, 변환이 실패할 경우에는 <see cref="F:System.TimeSpan.Zero" />를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 형식, 문화권별 형식 정보 및 스타일을 사용하여 시간 간격에 대한 지정된 문자열 표현을 해당 <see cref="T:System.TimeSpan" />으로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다. 문자열 표시의 형식은 지정된 형식 중 하나와 정확히 일치해야 합니다.</summary>
        <returns>
          <see langword="true" />가 성공적으로 변환되었으면 <paramref name="input" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> 메서드는 지정 된 형식 문자열 중 하나에 의해 정의 된 형식에 있어야 하는 시간 간격의 문자열 표현을 구문 분석은 `formats` 매개 변수를 제외 선행 및 후행 공백 문자는 무시 됩니다. 이 메서드는 비슷합니다는 <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> 메서드와 변환이 실패할 경우 예외를 throw 하지 않습니다.  
  
 `formats` 매개 변수는 해당 요소가 구성의 필수 형식을 정의 하는 하나 이상의 사용자 지정 형식 지정자 또는 단일 표준 형식 지정자는 문자열 배열 `input`합니다. 유효한 형식 문자열에 대 한 자세한 내용은 참조 [표준 TimeSpan 형식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 및 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)합니다. `input` 멤버에 정확히 일치 해야 `formats` 구문 분석 작업이 성공 하려면에 대 한 합니다. 구문 분석 작업이 일치 시 키 려 `input` 각 요소에 `formats` 배열의 첫 요소로 시작 합니다.  
  
> [!IMPORTANT]
>  <xref:System.TimeSpan.ParseExact%2A> 로 지정 된 문화권의 규칙을 사용 하는 메서드는 `formatProvider` 매개 변수 형식 문자열을 구문 분석 하는 데 사용 하는 경우에 `input` 는 표준 <xref:System.TimeSpan> 해당 값은 "g" 또는 "G" 문자열의 형식을 지정 합니다. "C", "t" 및 "T" 표준 형식 문자열은 고정 문화권의 서식 지정 규칙을 사용합니다. 입력된 문자열의 정확한 형식을 정의 하 고 리터럴 문자를 사용 하 여 시간 간격의 구성 요소를 구분 하는 사용자 지정 형식 문자열.  
  
 `formatProvider` 매개 변수는는 <xref:System.IFormatProvider> 형식 문자열을 구문 분석 하는 데 사용 하는 경우 반환된 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 구현 `input` 는 표준 형식 문자열입니다. `formatProvider` 매개 변수는 다음 중 하나일 수 있습니다.  
  
-   A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.  
  
-   A <xref:System.Globalization.DateTimeFormatInfo> 반환된 된 문자열의 서식을 정의 하는 개체입니다.  
  
-   구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.  
  
 경우 `formatProvider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권와 연결 된 개체를 사용 합니다.  
  
 `styles` 매개 변수 사용자 지정 형식 문자열을 사용 하 여 구문 분석 되는 문자열의 해석에 영향을 줍니다. 결정 여부 `input` 음수 기호가 있는 경우에 음수 시간 간격으로 해석 (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), 음수 시간 간격으로 항상 해석은 여부 또는 (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>). 경우 <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 을 사용 하지 않으면 `format` 리터럴 음수 부호 기호를 포함 해야 합니다 (와 같은 "\\-") 음수 시간 간격을 구문 분석할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> 를 문자열 배열의 각 요소를 변환 하는 메서드는 <xref:System.TimeSpan> 값입니다. 문자열은 일반 짧은 형식 또는 일반 긴 형식에서 시간 간격을 나타낼 수 있습니다.  
  
 또한이 예제에서는 시간 간격 구문 분석 메서드는 단일 숫자를 해석 하는 방법을 변경 합니다. 일반적으로 한 일 시간 간격의 수로 해석 됩니다. 대신,는 `%h` 사용자 지정 형식 문자열은 시간으로 단일 숫자를 해석 하는 데 사용 됩니다. 이 변경 내용을 적용 하려면 유의 `%h` 사용자 지정 형식 문자열에서 다른 형식 문자열 앞에 야는 `formats` 배열입니다. 또한 출력에서 확인 하는 <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 메서드 호출에 지정 된 플래그는이 형식 지정자와 함께 문자열을 구문 분석 하는 경우에 사용 됩니다.  
  
 [!code-csharp[System.TimeSpan.TryParseExact#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample4.cs#4)]
 [!code-vb[System.TimeSpan.TryParseExact#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample4.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan Zero" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan Zero;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>0 <see cref="T:System.TimeSpan" /> 값을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 값은 <xref:System.TimeSpan.Zero> 필드는는 <xref:System.TimeSpan> 0 시간 값을 나타내는 개체 다른 비교할 수 있습니다 <xref:System.TimeSpan> 양수, 0이 아닌 또는 음수의 시간 간격 나타내는지 여부를 결정 하는 개체입니다. 초기화 하려면이 필드를 사용할 수도 있습니다는 <xref:System.TimeSpan> 개체를 0 시간 값입니다.  
  
   
  
## Examples  
 다음 예제에서는 참조의 값을 표시 하 고는 <xref:System.TimeSpan.Zero> 필드입니다.  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>