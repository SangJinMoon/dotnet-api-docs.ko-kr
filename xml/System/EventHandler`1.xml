<Type Name="EventHandler&lt;TEventArgs&gt;" FullName="System.EventHandler&lt;TEventArgs&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0de1f20485aeaaee467bd3da15188490b36a1286" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37728258" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler&lt;TEventArgs&gt;(object sender, TEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler`1&lt;TEventArgs&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(Of TEventArgs)(sender As Object, e As TEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEventArgs&gt;&#xA;public delegate void EventHandler(System::Object ^ sender, TEventArgs e);" />
  <TypeSignature Language="F#" Value="type EventHandler&lt;'EventArgs&gt; = delegate of obj * 'EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEventArgs" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="TEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TEventArgs">
      <span data-ttu-id="d066f-101">이벤트에서 생성되는 이벤트 데이터의 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d066f-101">The type of the event data generated by the event.</span>
      </span>
    </typeparam>
    <param name="sender">
      <span data-ttu-id="d066f-102">이벤트 소스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d066f-102">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="d066f-103">이벤트 데이터를 포함하는 개체입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d066f-103">An object that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="d066f-104">이벤트에서 데이터를 제공하는 경우 이벤트를 처리할 메서드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d066f-104">Represents the method that will handle an event when the event provides data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d066f-105">.NET Framework의 이벤트 모델은 이벤트와 처리기를 연결 하는 이벤트 대리자에 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-105">The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</span></span> <span data-ttu-id="d066f-106">이벤트를 발생 시키는 두 가지 요소가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-106">To raise an event, two elements are needed:</span></span>  
  
-   <span data-ttu-id="d066f-107">이벤트에 대 한 응답을 제공 하는 메서드를 참조 하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-107">A delegate that refers to a method that provides the response to the event.</span></span>  
  
-   <span data-ttu-id="d066f-108">이벤트 데이터를 제공 하는 경우 이벤트 데이터를 보유 하는 클래스를 필요에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-108">Optionally, a class that holds the event data, if the event provides data.</span></span>  
  
 <span data-ttu-id="d066f-109">대리자가 반환 값 형식 및 메서드에 대 한 매개 변수 목록 형식 즉, 서명을 정의 하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-109">The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</span></span> <span data-ttu-id="d066f-110">대리자 형식과 대리자와 동일한 시그니처가 있는 모든 메서드를 참조할 수 있는 변수를 선언에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-110">You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</span></span>  
  
 <span data-ttu-id="d066f-111">표준 이벤트 처리기 대리자 서명의 값을 반환 하지 않는 메서드를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-111">The standard signature of an event handler delegate defines a method that does not return a value.</span></span> <span data-ttu-id="d066f-112">이 메서드의 첫 번째 매개 변수는 형식 <xref:System.Object> 및 이벤트를 발생 시키는 인스턴스를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-112">This method's first parameter is of type <xref:System.Object> and refers to the instance that raises the event.</span></span> <span data-ttu-id="d066f-113">두 번째 매개 변수 형식에서 파생 된 <xref:System.EventArgs> 이벤트 데이터를 보유 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-113">Its second parameter is derived from type <xref:System.EventArgs> and holds the event data.</span></span> <span data-ttu-id="d066f-114">두 번째 매개 변수는 단순히의 값이 이벤트는 이벤트 데이터를 생성 하지 않습니다 하는 경우는 <xref:System.EventArgs.Empty?displayProperty=nameWithType> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-114">If the event does not generate event data, the second parameter is simply the value of the <xref:System.EventArgs.Empty?displayProperty=nameWithType> field.</span></span> <span data-ttu-id="d066f-115">그렇지 않으면 두 번째 매개 변수는에서 파생 된 형식 <xref:System.EventArgs> 필드 또는 이벤트 데이터를 보유 하는 데 필요한 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-115">Otherwise, the second parameter is a type derived from <xref:System.EventArgs> and supplies any fields or properties needed to hold the event data.</span></span>  
  
 <span data-ttu-id="d066f-116"><xref:System.EventHandler%601> 대리자가 데이터를 생성 하는 이벤트에 대 한 이벤트 처리기 메서드를 나타내는 미리 정의 된 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-116">The <xref:System.EventHandler%601> delegate is a predefined delegate that represents an event handler method for an event that generates data.</span></span> <span data-ttu-id="d066f-117">사용 하는 이점은 <xref:System.EventHandler%601> 는 이벤트는 이벤트 데이터를 생성 하는 경우 사용자 고유의 사용자 지정 대리자 코드 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-117">The advantage of using <xref:System.EventHandler%601> is that you do not need to code your own custom delegate if your event generates event data.</span></span> <span data-ttu-id="d066f-118">제네릭 매개 변수로 만으로는 이벤트 데이터 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-118">You simply provide the type of the event data object as the generic parameter.</span></span>  
  
 <span data-ttu-id="d066f-119">이벤트를 처리 하는 메서드를 사용 하 여 이벤트를 연결할 이벤트 대리자의 인스턴스를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-119">To associate the event with the method that will handle the event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="d066f-120">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-120">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span>  
  
 <span data-ttu-id="d066f-121">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-121">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d066f-122">다음 예제에서는 명명 된 이벤트를 보여 줍니다. `ThresholdReached`합니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-122">The following example shows an event named `ThresholdReached`.</span></span> <span data-ttu-id="d066f-123">이벤트와 연결 된는 <xref:System.EventHandler%601> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="d066f-123">The event is associated with an <xref:System.EventHandler%601> delegate.</span></span>  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altCompliant cref="T:System.EventHandler" />
    <altmember cref="T:System.EventHandler" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>