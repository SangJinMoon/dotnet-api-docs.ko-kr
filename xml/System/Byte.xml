<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Byte.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac559d48c0bd83171c7515395be3988452d5e69c5aa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59d48c0bd83171c7515395be3988452d5e69c5aa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Represents an 8-bit unsigned integer.</source>
          <target state="translated">부호 없는 8비트 정수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph> is an immutable value type that represents unsigned integers with values that range from 0 (which is represented by the <ph id="ph2">&lt;xref:System.Byte.MinValue?displayProperty=nameWithType&gt;</ph> constant) to 255 (which is represented by the <ph id="ph3">&lt;xref:System.Byte.MaxValue?displayProperty=nameWithType&gt;</ph> constant).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 0에서 범위의 값을 가진 부호 없는 정수를 나타내는 값을 변경할 수 없는 형식입니다 (클래스로 표현 되는 <ph id="ph2">&lt;xref:System.Byte.MinValue?displayProperty=nameWithType&gt;</ph> 상수) 255 (클래스로 표현 되는 <ph id="ph3">&lt;xref:System.Byte.MaxValue?displayProperty=nameWithType&gt;</ph> 상수).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The .NET Framework also includes a signed 8-bit integer value type, <ph id="ph1">&lt;xref:System.SByte&gt;</ph>, which represents values that range from -128 to 127.</source>
          <target state="translated">또한.NET Framework를 부호 있는 8 비트 정수 값 형식 포함 <ph id="ph1">&lt;xref:System.SByte&gt;</ph>,-128에서 127 까지의 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Instantiating a Byte Value</source>
          <target state="translated">바이트 값 인스턴스화</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value in several ways:</source>
          <target state="translated">인스턴스화할 수 있습니다는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 여러 가지 방법으로 값:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can declare a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> variable and assign it a literal integer value that is within the range of the <ph id="ph2">&lt;xref:System.Byte&gt;</ph> data type.</source>
          <target state="translated">선언할 수는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 변수 범위 내에 있는 정수 리터럴 값을 할당 하 고는 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example declares two <ph id="ph1">&lt;xref:System.Byte&gt;</ph> variables and assigns them values in this way.</source>
          <target state="translated">다음 예제에서는 두 개의 선언 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 변수가이 방식으로 값을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can assign a non-byte numeric value to a byte.</source>
          <target state="translated">바이트로 바이트가 아닌 숫자 값을 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if <ph id="ph1">`Option Strict`</ph> is on.</source>
          <target state="translated">경우는 캐스트 연산자에서 C# 및 Visual Basic의 변환 메서드 필요한 축소 변환 이므로 <ph id="ph1">`Option Strict`</ph> 켜져 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>If the non-byte value is a <ph id="ph1">&lt;xref:System.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph>, or <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</source>
          <target state="translated">바이트가 아닌 값이 한 <ph id="ph1">&lt;xref:System.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> 소수 부분의 처리 소수 부분을 포함 하는 값은 변환이 수행 하는 컴파일러에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example assigns several numeric values to <ph id="ph1">&lt;xref:System.Byte&gt;</ph> variables.</source>
          <target state="translated">다음 예제에서는 여러 가지 숫자 값을 할당 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 변수입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can call a method of the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class to convert any supported type to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value.</source>
          <target state="translated">메서드를 호출할 수는 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 변환할 수는 클래스에서 지 원하는 유형을에 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>This is possible because <ph id="ph1">&lt;xref:System.Byte&gt;</ph> supports the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">이것이 가능 하기 때문에 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 지원는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example illustrates the conversion of an array of <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열 변환 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can call the <ph id="ph1">&lt;xref:System.Byte.Parse%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Byte.TryParse%2A&gt;</ph> method to convert the string representation of a <ph id="ph3">&lt;xref:System.Byte&gt;</ph> value to a <ph id="ph4">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Byte.Parse%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Byte.TryParse%2A&gt;</ph> 의 문자열 표현으로 변환 하는 메서드는 <ph id="ph3">&lt;xref:System.Byte&gt;</ph> 값을 한 <ph id="ph4">&lt;xref:System.Byte&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The string can contain either decimal or hexadecimal digits.</source>
          <target state="translated">문자열에는 10 진수 또는 16 진수로 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</source>
          <target state="translated">다음 예제에서는 10 진수 및 16 진수 문자열 모두를 사용 하 여 구문 분석 작업을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Performing Operations on Byte Values</source>
          <target state="translated">바이트 값에 대 한 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The <ph id="ph1">&lt;xref:System.Byte&gt;</ph> type supports standard mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 형식은 더하기, 빼기, 나누기, 곱셈, 빼기, 부정, 단항 부정 연산자 등과 같이 표준 수학 연산을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Like the other integral types, the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> type also supports the bitwise <ph id="ph2">`AND`</ph>, <ph id="ph3">`OR`</ph>, <ph id="ph4">`XOR`</ph>, left shift, and right shift operators.</source>
          <target state="translated">다른 정수 계열 형식과 같이 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 형식에서는 비트 <ph id="ph2">`AND`</ph>, <ph id="ph3">`OR`</ph>, <ph id="ph4">`XOR`</ph>, 왼쪽 시프트 및 오른쪽 시프트 연산자.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can use the standard numeric operators to compare two <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values, or you can call the <ph id="ph2">&lt;xref:System.Byte.CompareTo%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Byte.Equals%2A&gt;</ph> method.</source>
          <target state="translated">표준 숫자 연산자를 사용 하 여 두 개를 비교 하려면 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값 또는 있습니다를 호출할 수는 <ph id="ph2">&lt;xref:System.Byte.CompareTo%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Byte.Equals%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can also call the members of the <ph id="ph1">&lt;xref:System.Math&gt;</ph> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</source>
          <target state="translated">멤버를 호출할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Math&gt;</ph> 다양 한 범위의 숫자의 몫과 정수 나누기의 나머지를 계산 합니다. 2의 최대값 또는 최소값 값을 판별한 절대 값을 가져오는 등의 숫자 작업을 수행 하는 클래스 정수, 숫자의 부호를 가져오고 숫자를 반올림 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Representing a Byte as a String</source>
          <target state="translated">문자열로 서 바이트를 나타내는</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The <ph id="ph1">&lt;xref:System.Byte&gt;</ph> type provides full support for standard and custom numeric format strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 형식은 표준 및 사용자 지정 숫자 형식 문자열에 대 한 완벽 한 지원 제공 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>(For more information, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>, <bpt id="p2">[</bpt>Standard Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, and <bpt id="p3">[</bpt>Custom Numeric Format Strings<ept id="p3">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.) However, most commonly, byte values are represented as one-digit to three-digit values without any additional formatting, or as two-digit hexadecimal values.</source>
          <target state="translated">(자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>, <bpt id="p2">[</bpt>표준 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, 및 <bpt id="p3">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p3">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.) 그러나 가장 일반적으로 바이트 값으로 표시 됩니다 한 자리에서 3 자리 숫자 값 서식 없이, 또는 두 자리 16 진수 값으로.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>To format a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value as an integral string with no leading zeros, you can call the parameterless <ph id="ph2">&lt;xref:System.Byte.ToString&gt;</ph> method.</source>
          <target state="translated">서식을 지정 하려면는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값 선행 0이 없는 정수 계열 문자열로 매개 변수가 없는 호출 수 <ph id="ph2">&lt;xref:System.Byte.ToString&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</source>
          <target state="translated">"D" 형식 지정자를 사용 하 여 지정된 된 수의 문자열 표현에서 앞에 오는 0 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>By using the "X" format specifier, you can represent a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value as a hexadecimal string.</source>
          <target state="translated">"X" 형식 지정자를 사용 하 여 나타낼 수 있습니다는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 16 진수 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example formats the elements in an array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values in these three ways.</source>
          <target state="translated">다음 예제에서는 배열의 요소를 서식을 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 이러한 세 가지 방법으로 값입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>You can also format a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value as a binary, octal, decimal, or hexadecimal string by calling the <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29&gt;</ph> method and supplying the base as the method's second parameter.</source>
          <target state="translated">서식을 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 8 진수 이진으로 호출 하 여 10 진수 또는 16 진수 문자열 값의 <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29&gt;</ph> 메서드와 메서드의 두 번째 매개 변수로 기본을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example calls this method to display the binary, octal, and hexadecimal representations of an array of byte values.</source>
          <target state="translated">다음 예제에서는이 메서드는 이진, 8 진수 표시를 및 16 진수 표현을 바이트 값 배열을 호출 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Working with Non-Decimal Byte Values</source>
          <target state="translated">10 진수가 아닌 바이트 값 작업</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>In addition to working with individual bytes as decimal values, you may want to perform bitwise operations with byte values, or work with byte arrays or with the binary or hexadecimal representations of byte values.</source>
          <target state="translated">10 진수 값으로 개별 바이트를 사용 하는 것 외에도 바이트 값으로 비트 연산을 수행 하거나 또는 바이트 배열로 바이트 값의 이진 또는 16 진수 표현으로 작업 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>For example, overloads of the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method can convert each of the primitive data types to a byte array, and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> method converts a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to a byte array.</source>
          <target state="translated">예를 들어 오버 로드는 <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> 메서드는 바이트 배열에 각각의 기본 데이터 형식을 변환할 수 및 <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> 메서드 변환은 <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> 바이트 배열에는 값입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source><ph id="ph1">&lt;xref:System.Byte&gt;</ph> values are represented in 8 bits by their magnitude only, without a sign bit.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값 부호 비트 없이 8 비트에서 크기만 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>This is important to keep in mind when you perform bitwise operations on <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values or when you work with individual bits.</source>
          <target state="translated">이 비트 작업을 수행할 때 고려해 야 하는 것이 중요 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값 또는 개별 비트를 사용 하 여 작업할 때.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</source>
          <target state="translated">숫자, 부울 또는 모든 두 개의 10 진수가 아닌 값 비교 작업을 수행 하려면 두 값이 동일한 표현을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>When an operation is performed on two <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values, the values share the same representation, so the result is accurate.</source>
          <target state="translated">두 개의 작업을 수행 하는 경우 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값, 값 공유 하는 동일한 표현의 하면 결과 정확 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>This is illustrated in the following example, which masks the lowest-order bit of a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to ensure that it is even.</source>
          <target state="translated">이의 가장 낮은 순서 비트 마스크는 다음 예에서 확인할 수는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값도 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>On the other hand, when you work with both unsigned and signed bits, bitwise operations are complicated by the fact that the <ph id="ph1">&lt;xref:System.SByte&gt;</ph> values use sign-and-magnitude representation for positive values, and two's complement representation for negative values.</source>
          <target state="translated">반면에 이전 및 서명 된 서명 되지 않은 비트 작업할 때 비트 연산은 때문에 복잡 하 고 <ph id="ph1">&lt;xref:System.SByte&gt;</ph> 값 부호 및 크기 표현을 사용 하 여 양수 및 음수 값에 대 한 2의 보수 표현에 대 한 .</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>In order to perform a meaningful bitwise operation, the values must be converted to two equivalent representations, and information about the sign bit must be preserved.</source>
          <target state="translated">의미 있는 비트 작업을 수행 하려면 값 두 개의 동일한 표현으로 변환 해야 하 고 부호 비트에 대 한 정보를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>The following example does this to mask out bits 2 and 4 of an array of 8-bit signed and unsigned values.</source>
          <target state="translated">다음 예제에서는을 마스크 비트 2, 4 8 비트 부호 있는 정수와 부호 없는 값의 배열로 처리 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>All members of this type are thread safe.</source>
          <target state="translated">이 유형의 모든 멤버는 스레드로부터 안전 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">멤버 인스턴스 상태를 수정 하려면 표시 되는 실제로 새 값으로 초기화 하는 새 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Byte">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">으로 다른 종류와이 형식의 인스턴스를 포함 하는 공유 변수를 읽고 쓰는 보호 해야 스레드로부터 안전을 보장 하려면 잠금에 의해.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Compares this instance to a specified object or <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">이 인스턴스를 지정된 개체나 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>와 비교하여 상대 값의 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>An 8-bit unsigned integer to compare.</source>
          <target state="translated">비교할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>Compares this instance to a specified 8-bit unsigned integer and returns an indication of their relative values.</source>
          <target state="translated">이 인스턴스를 지정된 8비트 부호 없는 정수와 비교하여 상대 값의 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>A signed integer that indicates the relative order of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스와 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 상대 순서를 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 반환 값</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>와 같습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Byte)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Byte.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">이 메서드를 구현 하는 <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> 인터페이스 및 수행 보다 조금 더 나은 <ph id="ph2">&lt;xref:System.Byte.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph> 메서드 변환할 필요가 없기 때문에 <ph id="ph3">`value`</ph> 매개 변수를 개체로 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>Depending on your programming language, it might be possible to code a <ph id="ph1">&lt;xref:System.Byte.CompareTo%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.</source>
          <target state="translated">프로그래밍 언어에 따라 코딩할 수는 <ph id="ph1">&lt;xref:System.Byte.CompareTo%2A&gt;</ph> 메서드 매개 변수 형식이 비트 수가 적은 보다 인스턴스 형식입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</source>
          <target state="translated">일부 프로그래밍 언어 매개 변수를 나타내는 형식으로 비트 수는 인스턴스와 암시적 확대 변환을 수행 하기 때문에 이것이 가능 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">예를 들어 인스턴스 형식이 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 매개 변수 형식이 고 <ph id="ph2">&lt;xref:System.Byte&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method that compares the values of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and the <ph id="ph4">&lt;xref:System.Int32&gt;</ph> parameter representation.</source>
          <target state="translated">Microsoft C# 컴파일러는 매개 변수의 값을 표시 하는 명령을 생성는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, 다음 생성 한 <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> 의 값을 비교 하는 메서드는 <ph id="ph3">&lt;xref:System.Int32&gt;</ph> 인스턴스 및 <ph id="ph4">&lt;xref:System.Int32&gt;</ph> 매개 변수 표현 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</source>
          <target state="translated">해당 컴파일러에서 숫자 형식에 암시적으로 확대 변환을 수행 여부를 확인 하려면 해당 프로그래밍 언어의 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Byte)">
          <source>The following code example demonstrates generic and non-generic versions of the <ph id="ph1">`CompareTo`</ph> method for several value and reference types.</source>
          <target state="translated">다음 코드 예제에서는 제네릭 및 비 제네릭 버전을 보여 줍니다.는 <ph id="ph1">`CompareTo`</ph> 여러 값 및 참조 형식에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">비교할 개체 또는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an indication of their relative values.</source>
          <target state="translated">이 인스턴스를 지정된 개체와 비교하여 상대 값의 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source>A signed integer that indicates the relative order of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스와 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 상대 순서를 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 반환 값</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>와 같습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">`value`</ph> must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">&lt;xref:System.Byte&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 해야 <ph id="ph2">`null`</ph> 또는 인스턴스의 <ph id="ph3">&lt;xref:System.Byte&gt;</ph>, 그러지 않으면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Object)">
          <source>Any instance of <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, regardless of its value, is considered greater than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">모든 인스턴스 <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, 해당 값에 관계 없이 보다 큰 것으로 간주 됩니다 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Object)">
          <source>This method is implemented to support the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">이 메서드는 지원 하도록 구현 된 <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.CompareTo(System.Object)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Byte.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Byte.CompareTo%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Byte.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>가 아닌 경우</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Returns a value indicating whether two instances of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> represent the same value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 두 인스턴스가 같은 값을 표시하는지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Byte)">
          <source>An object to compare to this instance.</source>
          <target state="translated">이 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Byte)">
          <source>Returns a value indicating whether this instance and a specified <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object represent the same value.</source>
          <target state="translated">이 인스턴스의 값과 지정된 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 개체의 값이 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Byte)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is equal to this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 이 인스턴스와 같으면 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>이고, 그러지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Equals(System.Byte)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Byte.Equals%28System.Object%29&gt;</ph> because it does not have to convert the <ph id="ph3">`obj`</ph> parameter to an object.</source>
          <target state="translated">이 메서드를 구현 하는 <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> 인터페이스를 하 고 수행 보다 조금 더 나은 <ph id="ph2">&lt;xref:System.Byte.Equals%28System.Object%29&gt;</ph> 변환할 필요가 없기 때문에 <ph id="ph3">`obj`</ph> 매개 변수를 개체로 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Equals(System.Byte)">
          <source>The following code example determines whether the first <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value is equal to the second <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value, and whether the first <ph id="ph3">&lt;xref:System.Byte&gt;</ph> value is equal to the boxed version of the second <ph id="ph4">&lt;xref:System.Byte&gt;</ph> value.</source>
          <target state="translated">다음 코드 예제에서는 확인 여부를 첫 번째 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값이 두 번째 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값 여부와 첫 번째 <ph id="ph3">&lt;xref:System.Byte&gt;</ph> 값은 두 번째 boxed 버전 <ph id="ph4">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Object)">
          <source>An object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스와 비교할 개체 또는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Byte.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.Byte" /&gt;</ph> and equals the value of this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>의 인스턴스이고 이 인스턴스의 값과 같으면 <ph id="ph3">&lt;see cref="T:System.Byte" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Equals(System.Object)">
          <source>The following code example determines whether the first <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value is equal to the second <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value, and whether the first <ph id="ph3">&lt;xref:System.Byte&gt;</ph> value is equal to the boxed version of the second <ph id="ph4">&lt;xref:System.Byte&gt;</ph> value.</source>
          <target state="translated">다음 코드 예제에서는 확인 여부를 첫 번째 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값이 두 번째 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값 여부와 첫 번째 <ph id="ph3">&lt;xref:System.Byte&gt;</ph> 값은 두 번째 boxed 버전 <ph id="ph4">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Byte.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">이 인스턴스의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Byte.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Byte.GetTypeCode">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> for value type <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> 값 형식에 대한 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Byte.GetTypeCode">
          <source>The enumerated constant, <ph id="ph1">&lt;see cref="F:System.TypeCode.Byte" /&gt;</ph>.</source>
          <target state="translated">열거형 상수인 <ph id="ph1">&lt;see cref="F:System.TypeCode.Byte" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="F:System.Byte.MaxValue">
          <source>Represents the largest possible value of a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 최대값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="F:System.Byte.MaxValue">
          <source>This field is constant.</source>
          <target state="translated">이 필드는 상수입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Byte.MaxValue">
          <source>The value of this constant is 255 (hexadecimal 0xFF).</source>
          <target state="translated">이 상수 값은 255 (16 진수 0xffff).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Byte.MaxValue">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Byte.MaxValue&gt;</ph> field to screen variable inputs for values that are outside the range of possible byte values.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Byte.MaxValue&gt;</ph> 변수로 입력할 수 없게 바이트 값의 범위 밖에 있는 값에 대 한 필드입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="F:System.Byte.MinValue">
          <source>Represents the smallest possible value of a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>의 최소값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="F:System.Byte.MinValue">
          <source>This field is constant.</source>
          <target state="translated">이 필드는 상수입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Byte.MinValue">
          <source>The value of this constant is 0.</source>
          <target state="translated">이 상수의 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Byte.MinValue">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Byte.MinValue&gt;</ph> field to screen variable inputs for values that are outside the range of possible byte values.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Byte.MinValue&gt;</ph> 변수로 입력할 수 없게 바이트 값의 범위 밖에 있는 값에 대 한 필드입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">숫자의 문자열 표현을 해당하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source>The string is interpreted using the <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> style.</source>
          <target state="translated">이 문자열은 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> 스타일을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">숫자의 문자열 표현을 해당하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source>A byte value that is equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 포함된 수와 같은 바이트 값입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter contains a number of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수 형식의 숫자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>[ws][sign]digits[ws]</source>
          <target state="translated">[ws][sign]digits[ws]</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>An optional positive or negative sign.</source>
          <target state="translated">선택적 양수 또는 음수 부호입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">0에서 9 사이의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수를 사용 하 여 해석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> 스타일입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</source>
          <target state="translated">바이트 값의 10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>(If the sign is present, it must be a positive sign or the method throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.) To explicitly define the style elements that can be present in <ph id="ph2">`s`</ph>, use either the <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph4">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">(부호가 있는, 양수 부호 여야 합니다 또는 메서드에서 throw 하는 경우는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.) 에 나타날 수 있는 스타일 요소를 명시적으로 정의 하려면 <ph id="ph2">`s`</ph>를 사용 하 여는 <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 시스템 문화권에 따라 초기화 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>To parse a string using the formatting information of some other culture, use the <ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다른 문화권의 서식 지정 정보를 사용 하 여 문자열의 구문을 분석을 사용 하 여는 <ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The following example demonstrates how to convert a string value into a byte value using the <ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 문자열 값을 사용 하 여 바이트 값으로 변환 하는 <ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String)">
          <source>The resulting byte value is then displayed to the console.</source>
          <target state="translated">결과 바이트 값 콘솔에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The string is interpreted using the style specified by <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">이 문자열은 <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>에서 지정하는 스타일을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">지정할 일반적인 값은 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Converts the string representation of a number in a specified style to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">숫자를 지정된 스타일로 나타낸 문자열 표현을 해당 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A byte value that is equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 포함된 수와 같은 바이트 값입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space or the positive sign) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph> 매개 변수 (예: 공백 또는 양수 부호)에 사용할 수 있는 스타일 요소를 정의 고 <ph id="ph2">`s`</ph> 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">비트 플래그의 조합 이어야 합니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">값에 따라 <ph id="ph1">`style`</ph>, <ph id="ph2">`s`</ph> 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Or, if <ph id="ph1">`style`</ph> includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</source>
          <target state="translated">또는 if <ph id="ph1">`style`</ph> 포함 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[ws]hexdigits[ws]</source>
          <target state="translated">[ws]hexdigits[ws]</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, or at the end of s if style includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">맨 앞에 공백이 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 플래그를 또는 끝 s 스타일을 포함 하는 경우에 <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Culture 별 통화 기호입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> property of the current culture.</source>
          <target state="translated">문자열에 해당 위치는 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> 현재 문화권의 속성입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">현재 문화권의 통화 기호에 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>An optional positive sign.</source>
          <target state="translated">선택적 양수 부호입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>(The method throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> if a negative sign is present in <ph id="ph2">`s`</ph>.) The sign can appear at the beginning of <ph id="ph3">`s`</ph> if <ph id="ph4">`style`</ph> includes the <ph id="ph5">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph6">`s`</ph> if <ph id="ph7">`style`</ph> includes the <ph id="ph8">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">(메서드에서 throw 된 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 에 음수 기호가 있으면 <ph id="ph2">`s`</ph>.) 부호의 시작 부분에 나타날 수 <ph id="ph3">`s`</ph> 경우 <ph id="ph4">`style`</ph> 포함는 <ph id="ph5">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> 플래그를 또는 끝날 때 <ph id="ph6">`s`</ph> 경우 <ph id="ph7">`style`</ph> 포함는 <ph id="ph8">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> 플래그 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">0부터 9 까지의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Culture 별 소수점 기호입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">에 현재 문화권의 소수점 기호가 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>One or more occurrences of the digit 0.</source>
          <target state="translated">하나 이상의 숫자 0입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">소수 자릿수에 나타날 수 <ph id="ph1">`s`</ph> 경우에만 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The e or E character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">E 또는 E 문자 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">16 진수 숫자 0 ~ f 또는 0-6.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">숫자만 있는 문자열 (해당 하는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> 스타일) 항상 성공적으로 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in this input string.</source>
          <target state="translated">나머지 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">다음 표에서 개별 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버에 나타날 수 있는 요소에 영향을 <ph id="ph2">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Non-composite NumberStyles values</source>
          <target state="translated">비 복합 NumberStyles 값</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">S에서 숫자 허용 되는 요소</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Decimal digits only.</source>
          <target state="translated">10 진수 숫자입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>and <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">및 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> must consist of only one or more 0 digits or an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown.</source>
          <target state="translated">그러나 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept> 0 숫자가 하나 이상 구성 되어야 합니다 또는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 시작 부분에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 끝에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A positive sign can appear before <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">양수 부호 앞에 올 수 <bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A positive sign can appear after <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">양수 부호 후 나타날 수 <bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Although this flag is supported, the use of parentheses in <ph id="ph1">`s`</ph> results in an <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">이 플래그는 지원 되지만에 괄호를 사용 하 여 <ph id="ph1">`s`</ph> 결과 <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Although the group separator symbol can appear in <ph id="ph1">`s`</ph>, it can be preceded by only one or more 0 digits.</source>
          <target state="translated">그룹 구분 기호에 나타날 수 있지만 <ph id="ph1">`s`</ph>, 0 하나 이상의 숫자가 뒤에 올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`s`</ph> must be a hexadecimal value without a prefix.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> 플래그를 사용할 <ph id="ph2">`s`</ph> 접두사 없이 16 진수 값 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For example, "F3" parses successfully, but "0xF3" does not.</source>
          <target state="translated">예를 들어 "F3" 성공적으로 구문 분석 하지만 "0xF3" 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The only other flags that can be combined with it are <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">만 다른 플래그를 함께 사용할 수 있는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration includes a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, that includes both white space flags.)</source>
          <target state="translated">(의 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형 복합 숫자 스타일에 포함 됩니다. <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, 공백 플래그가 모두를 포함 하는.)</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 시스템 문화권에 따라 초기화 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>To use the formatting information of some other culture, call the <ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> overload.</source>
          <target state="translated">다른 문화권의 서식 지정 정보를 사용 하려면 호출는 <ph id="ph1">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example parses string representations of <ph id="ph1">`Byte`</ph> values with the <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는의 문자열 표현을 구문 분석 <ph id="ph1">`Byte`</ph> 있는 값은 <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture for the example is en-US.</source>
          <target state="translated">이 예제에 대 한 현재 문화권이 EN-US입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> includes non-zero, fractional digits.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 0이 아닌 소수 자릿수가 포함되어 있는 경우</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a combination of <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 값의 조합이 아닌 경우</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The string is interpreted using the <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> style.</source>
          <target state="translated">이 문자열은 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> 스타일을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific parsing information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 대한 문화권별 구문 분석 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the thread current culture is used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 현재 스레드 문화권이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">숫자를 지정된 문화권별 형식으로 나타낸 문자열 표현을 해당 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>A byte value that is equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 포함된 수와 같은 바이트 값입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter contains a number of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수 형식의 숫자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>[ws][sign]digits[ws]</source>
          <target state="translated">[ws][sign]digits[ws]</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>An optional positive sign.</source>
          <target state="translated">선택적 양수 부호입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">0에서 9 사이의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수를 사용 하 여 해석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer&gt;</ph> 스타일입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</source>
          <target state="translated">바이트 값의 10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>(If the sign is present, it must be a positive sign or the method throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in <ph id="ph2">`s`</ph>, use the <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">(부호가 있는, 양수 부호 여야 합니다 또는 메서드에서 throw 하는 경우는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.) 명시적으로 함께 culture 별 서식 지정 정보에 포함 될 수 있는 스타일 요소를 정의 하려면 <ph id="ph2">`s`</ph>를 사용 하 여는 <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object supplied by <ph id="ph3">`provider`</ph>.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 제공한 개체가 <ph id="ph3">`provider`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 한 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 와 같은 구현은 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수에서 구문 분석에 사용 되는 문화권별 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>가 <ph id="ph2">`null`</ph>이면 현재 스레드 문화권이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source>The following example parses string representations of <ph id="ph1">`Byte`</ph> values with the <ph id="ph2">&lt;xref:System.Byte.Parse%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는의 문자열 표현을 구문 분석 <ph id="ph1">`Byte`</ph> 있는 값은 <ph id="ph2">&lt;xref:System.Byte.Parse%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The string is interpreted using the style specified by <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">이 문자열은 <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>에서 지정하는 스타일을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">지정할 일반적인 값은 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An object that supplies culture-specific information about the format of <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>의 형식에 대한 문화권별 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the thread current culture is used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 현재 스레드 문화권이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A byte value that is equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 포함된 수와 같은 바이트 값입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space or the positive sign) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph> 매개 변수 (예: 공백 또는 양수 부호)에 사용할 수 있는 스타일 요소를 정의 고 <ph id="ph2">`s`</ph> 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">비트 플래그의 조합 이어야 합니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">값에 따라 <ph id="ph1">`style`</ph>, <ph id="ph2">`s`</ph> 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Or, if the <ph id="ph1">`style`</ph> parameter includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</source>
          <target state="translated">또는 경우에는 <ph id="ph1">`style`</ph> 매개 변수를 포함 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[ws]hexdigits[ws]</source>
          <target state="translated">[ws]hexdigits[ws]</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">맨 앞에 공백이 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 플래그를 또는 끝날 때 <ph id="ph4">`s`</ph> 경우 <ph id="ph5">`style`</ph> 포함는 <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Culture 별 통화 기호입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph4">`provider`</ph> parameter.</source>
          <target state="translated">위치는 문자열에 의해 정의 됩니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 에서 반환 된 개체는 <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 의 메서드는 <ph id="ph4">`provider`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">통화 기호에 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An optional positive sign.</source>
          <target state="translated">선택적 양수 부호입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(The method throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> if a negative sign is present in <ph id="ph2">`s`</ph>.) The sign can appear at the beginning of <ph id="ph3">`s`</ph> if <ph id="ph4">`style`</ph> includes the <ph id="ph5">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph6">`s`</ph> if <ph id="ph7">`style`</ph> includes the <ph id="ph8">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">(메서드에서 throw 된 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 에 음수 기호가 있으면 <ph id="ph2">`s`</ph>.) 부호의 시작 부분에 나타날 수 <ph id="ph3">`s`</ph> 경우 <ph id="ph4">`style`</ph> 포함는 <ph id="ph5">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> 플래그를 또는 끝날 때 <ph id="ph6">`s`</ph> 경우 <ph id="ph7">`style`</ph> 포함는 <ph id="ph8">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> 플래그 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">0부터 9 까지의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Culture 별 소수점 기호입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">에 지정 된 문화권의 소수점 기호가 <ph id="ph1">`provider`</ph> 에 나타날 수 <ph id="ph2">`s`</ph> 경우 <ph id="ph3">`style`</ph> 포함는 <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>One or more occurrences of the digit 0.</source>
          <target state="translated">하나 이상의 숫자 0입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">소수 자릿수에 나타날 수 <ph id="ph1">`s`</ph> 경우에만 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The e or E character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">E 또는 E 문자 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The s parameter can represent a number in exponential notation if <ph id="ph1">`style`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">S 매개 변수는 경우 지 수 표기법으로 숫자를 나타낼 수 <ph id="ph1">`style`</ph> 포함는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">16 진수 숫자 0 ~ f 또는 0-6.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">숫자만 있는 문자열 (해당 하는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> 스타일) 항상 성공적으로 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in this input string.</source>
          <target state="translated">나머지 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">다음 표에서 개별 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버에 나타날 수 있는 요소에 영향을 <ph id="ph2">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Non-composite NumberStyles values</source>
          <target state="translated">비 복합 NumberStyles 값</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">S에서 숫자 허용 되는 요소</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Decimal digits only.</source>
          <target state="translated">10 진수 숫자입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>and <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">및 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> must consist of only one or more 0 digits or an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown.</source>
          <target state="translated">그러나 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept> 0 숫자가 하나 이상 구성 되어야 합니다 또는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 시작 부분에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 끝에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A positive sign can appear before <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">양수 부호 앞에 올 수 <bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A positive sign can appear after <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">양수 부호 후 나타날 수 <bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Although this flag is supported, the use of parentheses in <ph id="ph1">`s`</ph> results in an <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">이 플래그는 지원 되지만에 괄호를 사용 하 여 <ph id="ph1">`s`</ph> 결과 <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Although the group separator symbol can appear in <ph id="ph1">`s`</ph>, it can be preceded by only one or more 0 digits.</source>
          <target state="translated">그룹 구분 기호에 나타날 수 있지만 <ph id="ph1">`s`</ph>, 0 하나 이상의 숫자가 뒤에 올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`s`</ph> must be a hexadecimal value without a prefix.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> 플래그를 사용할 <ph id="ph2">`s`</ph> 접두사 없이 16 진수 값 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For example, "F3" parses successfully, but "0xF3" does not.</source>
          <target state="translated">예를 들어 "F3" 성공적으로 구문 분석 하지만 "0xF3" 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The only other flags that can be present in <ph id="ph1">`style`</ph> are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">다른 플래그만에 있을 수 있는 <ph id="ph1">`style`</ph> 는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, that includes both white space flags.)</source>
          <target state="translated">(의 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형에는 복합 숫자 스타일 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, 공백 플래그가 모두를 포함 하는.)</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 한 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 구현에서와 같은 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수에서 구문 분석에 사용 되는 문화권별 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the thread current culture is used.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>가 <ph id="ph2">`null`</ph>이면 현재 스레드 문화권이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following code example parses string representations of <ph id="ph1">`Byte`</ph> values with this overload of the <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는의 문자열 표현을 구문 분석 <ph id="ph1">`Byte`</ph> 이 오버 로드를 사용 하 여 값의 <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> includes non-zero, fractional digits.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 0이 아닌 소수 자릿수가 포함되어 있는 경우</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a combination of <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 값의 조합이 아닌 경우</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the current instance is not zero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 인스턴스의 값이 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The value of the current instance, unchanged.</source>
          <target state="translated">변경되지 않은 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToChar%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToChar%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 사용하려고 하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">모든 경우</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDouble%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToDouble%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The type to which to convert this <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> value.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 값을 변환할 대상 형식입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation that supplies information about the format of the returned value.</source>
          <target state="translated">반환된 값의 형식에 대한 정보를 제공하는 <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 구현입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The value of the current instance, converted to <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>으로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual basic에서) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The requested type conversion is not supported.</source>
          <target state="translated">요청된 형식 변환이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Byte%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Byte%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString">
          <source>The string representation of the value of this object, which consists of a sequence of digits that range from 0 to 9 with no leading zeroes.</source>
          <target state="translated">이 개체의 값에 대한 문자열 표현이며, 맨 앞에 0이 오지 않고 0에서 9 사이의 숫자 시퀀스로 구성됩니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>The return value is formatted with the general numeric format specifier ("G") and the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the thread current culture.</source>
          <target state="translated">형식은 일반 숫자 형식 지정자 ("G") 사용 하 여 반환 값의 서식을 지정 및 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 스레드 문화권에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>To define the formatting of the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value's string representation, call the <ph id="ph2">&lt;xref:System.Byte.ToString%2A&gt;</ph> method.</source>
          <target state="translated">서식을 정의 하는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값의 문자열 표현, 호출 된 <ph id="ph2">&lt;xref:System.Byte.ToString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>To define both the format specifiers and culture used to create the string representation of a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Byte.ToString%2A&gt;</ph> method.</source>
          <target state="translated">형식 지정자와의 문자열 표현을 만드는 데 사용 하는 문화권을 정의 하는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값, 호출 된 <ph id="ph2">&lt;xref:System.Byte.ToString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>For information about the thread current culture, see <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">현재 스레드 문화권에 대 한 정보를 참조 하십시오. <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>The following example displays an array of byte values.</source>
          <target state="translated">다음 예제에서는 바이트 값 배열을 표시합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>Note that the <ph id="ph1">&lt;xref:System.Byte.ToString&gt;</ph> method is not called explicitly in the example.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte.ToString&gt;</ph> 예제에서 메서드가 명시적으로 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString">
          <source>Instead, it is called implicitly, because of the use of the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> feature.</source>
          <target state="translated">대신, 라고 암시적으로 사용 하므로 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 기능입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object to its equivalent string representation using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 형식 지정 정보를 사용하여 현재 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 개체의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The string representation of the value of this object in the format specified by the <ph id="ph1">&lt;paramref name="provider" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="provider" /&gt;</ph> 매개 변수에 지정된 형식으로 이 개체의 값을 나타낸 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The return value is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">반환 값은 일반 숫자 형식 지정자 ("G")로 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an object that implements the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 구현 하는 개체는 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string that is returned by this method.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 이 메서드에 의해 반환 되는 문자열의 형식에 대 한 문화권별 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> can be any of the following:</source>
          <target state="translated">구현 하는 개체 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 다음 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting rules are to be used.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 해당 형식 지정 규칙을 사용 하려는 문화권을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that contains specific numeric formatting information for this value.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 이 값에 대 한 특정 숫자 형식 지정 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">구현 하는 사용자 지정 개체 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph> or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object cannot be obtained from <ph id="ph4">`provider`</ph>, the return value is formatted using the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the thread current culture.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체에서 가져올 수 없습니다 <ph id="ph4">`provider`</ph>를 사용 하 여 반환 값의 형식이 <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 스레드 문화권에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>For information about the thread current culture, see <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">현재 스레드 문화권에 대 한 정보를 참조 하십시오. <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.IFormatProvider)">
          <source>The following example iterates an array of byte values and displays each of them to the console by calling the <ph id="ph1">&lt;xref:System.Byte.ToString%28System.IFormatProvider%29&gt;</ph> method with different format providers.</source>
          <target state="translated">다음 예제에서는 반복 바이트의 배열 값을 호출 하 여 각각의 콘솔에 표시 된 <ph id="ph1">&lt;xref:System.Byte.ToString%28System.IFormatProvider%29&gt;</ph> 서로 다른 공급자로 사용 하 여 메서드.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String)">
          <source>A numeric format string.</source>
          <target state="translated">숫자 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String)">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object to its equivalent string representation using the specified format.</source>
          <target state="translated">지정된 형식을 사용하여 현재 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 개체의 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object, formatted as specified by the <ph id="ph2">&lt;paramref name="format" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 매개 변수로 지정된 형식에 따른 현재 <ph id="ph2">&lt;paramref name="format" /&gt;</ph> 개체의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be either a standard or a custom numeric format string.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 표준 또는 사용자 지정 숫자 형식 문자열 매개 변수 수 있습니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</source>
          <target state="translated">모든 사용자 지정 숫자 서식 문자 "R" (또는 "r") 이외의 모든 표준 숫자 형식 문자열은 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), the return value is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">경우 <ph id="ph1">`format`</ph> 은 <ph id="ph2">`null`</ph> 또는 빈 문자열 (""), 반환 값 ("G")는 일반 숫자 형식 지정자와 함께 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>The return value of this function is formatted using the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the thread current culture.</source>
          <target state="translated">사용 하 여이 함수의 반환 값 형식이 고 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 스레드 문화권에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>For information about the thread current culture, see <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">현재 스레드 문화권에 대 한 정보를 참조 하십시오. <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>To provide formatting information for cultures other than the current culture, call the <ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">현재 문화권이 아닌 문화권에 대 한 서식 지정 정보를 제공 하려면 호출 된 <ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>The following example initializes a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value and displays it to the console using each of the supported standard format strings and a custom format string.</source>
          <target state="translated">다음 예제에서는 초기화는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값 및 각 지원 되는 표준 형식 문자열 및 사용자 지정 서식 문자열을 사용 하 여 콘솔에 표시 합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String)">
          <source>The example is run with en-US as the current culture.</source>
          <target state="translated">이 예제는 현재 문화권이 EN-US 상태로 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> includes an unsupported specifier.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>에 지원되지 않는 지정자가 포함된 경우.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String)">
          <source>Supported format specifiers are listed in the Remarks section.</source>
          <target state="translated">지원되는 형식 지정자가 설명 섹션에 나열되어 있습니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">표준 또는 사용자 지정 숫자 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object to its equivalent string representation using the specified format and culture-specific formatting information.</source>
          <target state="translated">지정된 형식 및 문화권별 형식 지정 정보를 사용하여 현재 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 개체의 값을 해당 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> object, formatted as specified by the <ph id="ph2">&lt;paramref name="format" /&gt;</ph> and <ph id="ph3">&lt;paramref name="provider" /&gt;</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="format" /&gt;</ph> 매개 변수에 지정된 형식으로 현재 <ph id="ph3">&lt;paramref name="provider" /&gt;</ph> 개체를 나타낸 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value in a specified format of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> 메서드 형식을 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 지정된 된 문화권의 지정 된 형식에서 값입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>To format a number by using the default ("G") format of the current culture, call the <ph id="ph1">&lt;xref:System.Byte.ToString&gt;</ph> method.</source>
          <target state="translated">현재 문화권의 기본 ("G") 형식을 사용 하 여 번호의 서식을 지정 하려면 호출 된 <ph id="ph1">&lt;xref:System.Byte.ToString&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>To format a number by using a specified format of the current culture, call the <ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%29&gt;</ph> method.</source>
          <target state="translated">지정된 된 형식으로 현재 문화권의를 사용 하 여 번호의 서식을 지정 하려면 호출 된 <ph id="ph1">&lt;xref:System.Byte.ToString%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be either a standard or a custom numeric format string.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 표준 또는 사용자 지정 숫자 형식 문자열 매개 변수 수 있습니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</source>
          <target state="translated">모든 사용자 지정 숫자 서식 문자 "R" (또는 "r") 이외의 모든 표준 숫자 형식 문자열은 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), the return value of this method is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">경우 <ph id="ph1">`format`</ph> 은 <ph id="ph2">`null`</ph> 또는 빈 문자열 ("")를이 메서드의 반환 값 ("G")는 일반 숫자 형식 지정자와 함께 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an object that implements the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 구현 하는 개체는 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string that is returned by this method.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 이 메서드에 의해 반환 되는 문자열의 형식에 대 한 문화권별 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> can be any of the following:</source>
          <target state="translated">구현 하는 개체 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 다음 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting rules are to be used.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 해당 형식 지정 규칙을 사용 하려는 문화권을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that contains specific numeric formatting information for this value.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 이 값에 대 한 특정 숫자 형식 지정 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">구현 하는 사용자 지정 개체 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph> or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object cannot be obtained from <ph id="ph4">`provider`</ph>, the return value is formatted using the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the thread current culture.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체에서 가져올 수 없습니다 <ph id="ph4">`provider`</ph>를 사용 하 여 반환 값의 형식이 <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 스레드 문화권에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>For information about the thread current culture, see <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">현재 스레드 문화권에 대 한 정보를 참조 하십시오. <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>The following example uses the standard "N" format string and four different <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects to display the string representation of a byte value to the console.</source>
          <target state="translated">다음 예제에서는 "N" 표준 형식 문자열 및 서로 다른 네 개의 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 바이트 값의 문자열 표현을 콘솔에 표시 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> includes an unsupported specifier.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>에 지원되지 않는 지정자가 포함된 경우.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Byte.ToString(System.String,System.IFormatProvider)">
          <source>Supported format specifiers are listed in the Remarks section.</source>
          <target state="translated">지원되는 형식 지정자가 설명 섹션에 나열되어 있습니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="T:System.Byte">
          <source>Tries to convert the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">숫자의 문자열 표현을 해당 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The string is interpreted using the <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> style.</source>
          <target state="translated">이 문자열은 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph> 스타일을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> value equivalent to the number contained in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> if the conversion succeeded, or zero if the conversion failed.</source>
          <target state="translated">이 메서드는 변환이 성공한 경우 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 포함된 숫자에 해당하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>This parameter is passed uninitialized; any value originally supplied in <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> will be overwritten.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept>에 제공된 모든 값을 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>Tries to convert the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">숫자의 문자열 표현을 해당 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 성공적으로 변환되었으면 <ph id="ph2">&lt;paramref name="s" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The conversion fails and the method returns <ph id="ph1">`false`</ph> if the <ph id="ph2">`s`</ph> parameter is not in the correct format, if it is <ph id="ph3">`null`</ph> or <ph id="ph4">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, or if it represents a number less than <ph id="ph5">&lt;xref:System.Byte.MinValue&gt;</ph> or greater than <ph id="ph6">&lt;xref:System.Byte.MaxValue&gt;</ph>.</source>
          <target state="translated">변환이 실패 하 고 메서드가 반환 <ph id="ph1">`false`</ph> 경우는 <ph id="ph2">`s`</ph> 매개 변수 아니므로 올바른 형식이 있으면 <ph id="ph3">`null`</ph> 또는 <ph id="ph4">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, 숫자를 나타내는 경우 또는 보다 작은 <ph id="ph5">&lt;xref:System.Byte.MinValue&gt;</ph> 보다 큰 <ph id="ph6">&lt;xref:System.Byte.MaxValue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph> method is similar to the <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method, except that <ph id="ph3">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29&gt;</ph> does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph> 메서드는 비슷합니다는 <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드와 비슷하지만 <ph id="ph3">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29&gt;</ph> 변환이 실패할 경우 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter should be the string representation of a number in the following form:</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수는 다음과 같은 형태로 숫자의 문자열 표현 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>An optional positive sign, as specified by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> property of the current culture.</source>
          <target state="translated">에 지정 된 대로 선택적 양수 부호는 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> 현재 문화권의 속성입니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>A sequence of decimal digits that range from 0 to 9.</source>
          <target state="translated">0에서 9 까지의 있는 십진수의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수를 사용 하 여 해석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer&gt;</ph> 스타일입니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</source>
          <target state="translated">바이트 값의 10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>(If the sign is present, it must be a positive sign or the method throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in <ph id="ph2">`s`</ph>, use the <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">(부호가 있는, 양수 부호 여야 합니다 또는 메서드에서 throw 하는 경우는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.) 명시적으로 함께 culture 별 서식 지정 정보에 포함 될 수 있는 스타일 요소를 정의 하려면 <ph id="ph2">`s`</ph>를 사용 하 여는 <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 문화권에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph> method interprets all digits in the <ph id="ph2">`s`</ph> parameter as decimal digits.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph> 의 모든 자릿수 1 보다 크거나는 <ph id="ph2">`s`</ph> 소수 자리 수로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>To parse the string representation of a hexadecimal number, call the <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph> overload.</source>
          <target state="translated">16 진수 숫자의 문자열 표현을 구문 분석, 호출 된 <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29?displayProperty=nameWithType&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Byte@)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29&gt;</ph> method with a number of different string values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29&gt;</ph> 메서드를 여러 가지 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A string containing a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The string is interpreted using the style specified by <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">이 문자열은 <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>에서 지정하는 스타일을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">지정할 일반적인 값은 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the thread current culture is used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 현재 스레드 문화권이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>When this method returns, contains the 8-bit unsigned integer value equivalent to the number contained in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> if the conversion succeeded, or zero if the conversion failed.</source>
          <target state="translated">이 메서드는 변환이 성공한 경우 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 포함된 숫자에 해당하는 8비트 부호 없는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, is not of the correct format, or represents a number less than <ph id="ph3">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>이거나, 형식이 올바르지 않거나, <ph id="ph3">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우 변환이 실패합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>This parameter is passed uninitialized; any value originally supplied in <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> will be overwritten.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept>에 제공된 모든 값을 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> equivalent.</source>
          <target state="translated">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 성공적으로 변환되었으면 <ph id="ph2">&lt;paramref name="s" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">&lt;xref:System.Byte.TryParse%2A&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Byte.Parse%2A&gt;</ph> method, except the <ph id="ph3">&lt;xref:System.Byte.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte.TryParse%2A&gt;</ph> 방법은 <ph id="ph2">&lt;xref:System.Byte.Parse%2A&gt;</ph> 메서드를 제외 하 고는 <ph id="ph3">&lt;xref:System.Byte.TryParse%2A&gt;</ph> 메서드는 변환이 실패할 경우 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object supplied by the <ph id="ph3">`provider`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 에서 제공 된 개체는 <ph id="ph3">`provider`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The style parameter defines the style elements (such as white space or the positive sign) that are allowed in the <ph id="ph1">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated">스타일 매개 변수 (예: 공백 또는 양수 부호)에 사용할 수 있는 스타일 요소를 정의 고 <ph id="ph1">`s`</ph> 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">비트 플래그의 조합 이어야 합니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">값에 따라 <ph id="ph1">`style`</ph>, <ph id="ph2">`s`</ph> 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Or, if the <ph id="ph1">`style`</ph> parameter includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</source>
          <target state="translated">또는 경우에는 <ph id="ph1">`style`</ph> 매개 변수를 포함 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>[ws]hexdigits[ws]</source>
          <target state="translated">[ws]hexdigits[ws]</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Elements in square brackets ( [ and ] ) are optional.</source>
          <target state="translated">대괄호 ([및])은 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, or at the end of s if style includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">맨 앞에 공백이 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 플래그를 또는 끝 s 스타일을 포함 하는 경우에 <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Culture 별 통화 기호입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph4">`provider`</ph> parameter.</source>
          <target state="translated">위치는 문자열에 의해 정의 됩니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 에서 반환 된 개체는 <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 의 메서드는 <ph id="ph4">`provider`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">통화 기호에 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>An optional positive sign.</source>
          <target state="translated">선택적 양수 부호입니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>(The parse operation fails if a negative sign is present in <ph id="ph1">`s`</ph>.) The sign can appear at the beginning of <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph5">`s`</ph> if <ph id="ph6">`style`</ph> includes the <ph id="ph7">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">(구문 분석이 실패에 음수 기호가 있으면 <ph id="ph1">`s`</ph>.) 부호의 시작 부분에 나타날 수 <ph id="ph2">`s`</ph> 경우 <ph id="ph3">`style`</ph> 포함는 <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> 플래그를 또는 끝날 때 <ph id="ph5">`s`</ph> 경우 <ph id="ph6">`style`</ph> 포함는 <ph id="ph7">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> 플래그 합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">0부터 9 까지의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Culture 별 소수점 기호입니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The decimal point symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">에 지정 된 문화권의 소수점 기호가 <ph id="ph1">`provider`</ph> 에 나타날 수 <ph id="ph2">`s`</ph> 경우 <ph id="ph3">`style`</ph> 포함는 <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>One or more occurrences of the digit 0.</source>
          <target state="translated">하나 이상의 숫자 0입니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">소수 자릿수에 나타날 수 <ph id="ph1">`s`</ph> 경우에만 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The e or E character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">E 또는 E 문자 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">16 진수 숫자 0 ~ f 또는 0-6.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">숫자만 있는 문자열 (해당 하는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> 스타일) 항상 성공적으로 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in this input string.</source>
          <target state="translated">나머지 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">다음 표에서 개별 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버에 나타날 수 있는 요소에 영향을 <ph id="ph2">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Non-composite NumberStyles values</source>
          <target state="translated">비 복합 NumberStyles 값</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">S에서 숫자 허용 되는 요소</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Decimal digits only.</source>
          <target state="translated">10 진수 숫자입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>and <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">및 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>However, <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> must consist of only one or more 0 digits or the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">그러나 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept> 하나 이상의 0 자릿수 또는 메서드가 반환 되는 구성 되어야 합니다 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>If <ph id="ph1">`s`</ph> represents a number in exponential notation, it must represent an integer within the range of the <ph id="ph2">&lt;xref:System.Byte&gt;</ph> data type without a non-zero, fractional component.</source>
          <target state="translated">경우 <ph id="ph1">`s`</ph> 지 수 표기법으로 숫자를 나타내는, 나타내야의 범위 내의 정수는 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> , 0이 아닌 소수 부분이 없는 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 시작 부분에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 끝에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A positive sign can appear before <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">양수 부호 앞에 올 수 <bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>A positive sign can appear after <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">양수 부호 후 나타날 수 <bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Although this flag is supported, the method returns <ph id="ph1">`false`</ph> if parentheses are present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">메서드가 반환 하는이 플래그는 지원 되지만 <ph id="ph1">`false`</ph> 괄호에 있는 경우 <ph id="ph2">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>Although the group separator symbol can appear in <ph id="ph1">`s`</ph>, it can be preceded by only one or more 0 digits.</source>
          <target state="translated">그룹 구분 기호에 나타날 수 있지만 <ph id="ph1">`s`</ph>, 0 하나 이상의 숫자가 뒤에 올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`s`</ph> must be a hexadecimal value without a prefix.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> 플래그를 사용할 <ph id="ph2">`s`</ph> 접두사 없이 16 진수 값 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>For example, "F3" parses successfully, but "0xF3" does not.</source>
          <target state="translated">예를 들어 "F3" 성공적으로 구문 분석 하지만 "0xF3" 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The only other flags that can be present in <ph id="ph1">`style`</ph> are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">다른 플래그만에 있을 수 있는 <ph id="ph1">`style`</ph> 는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, that includes both white space flags.)</source>
          <target state="translated">(의 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형에는 복합 숫자 스타일 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, 공백 플래그가 모두를 포함 하는.)</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, whose <ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는는 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 구현에서와 같은 한 <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 개체 또는 <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 <ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`s`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29&gt;</ph> method with a number of different string values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29&gt;</ph> 메서드를 여러 가지 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a combination of <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 값의 조합이 아닌 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>