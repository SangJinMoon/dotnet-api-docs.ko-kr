<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d3253-101">관리되지 않는 호스트의 관리되는 항목을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-101">Provides a managed equivalent of an unmanaged host.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d3253-102">사용 하지 마십시오 <xref:System.AppDomainManager> ASP.NET에서 응용 프로그램 도메인을 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-102">Do not use <xref:System.AppDomainManager> to configure an application domain in ASP.NET.</span></span> <span data-ttu-id="d3253-103">ASP.NET을 구성을 호스트에서 처리 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-103">In ASP.NET, configuration must be handled by the host.</span></span>  
  
 <span data-ttu-id="d3253-104">구현 된 <xref:System.AppDomainManager> 클래스 호스팅 응용 프로그램을 새 응용 프로그램 도메인 생성에 참여를 활성화 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-104">Implementing the <xref:System.AppDomainManager> class enables a hosting application to participate in the creation of new application domains.</span></span> <span data-ttu-id="d3253-105">기본을 바꾸려면 <xref:System.AppDomainManager>, 어셈블리 및은 대체 값의 유형을 식별 <xref:System.AppDomainManager> APPDOMAIN_MANAGER_ASM 및 APPDOMAIN_MANAGER_TYPE 환경 변수 또는 사용에는 [ \<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) 및 [ \<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) 프로그램 구성 파일에는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-105">To replace the default <xref:System.AppDomainManager>, identify the assembly and type of the replacement <xref:System.AppDomainManager> in the APPDOMAIN_MANAGER_ASM and APPDOMAIN_MANAGER_TYPE environment variables, or use the [\<appDomainManagerAssembly>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) and [\<appDomainManagerType>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) elements in your configuration file.</span></span> <span data-ttu-id="d3253-106">어셈블리는 완전히 신뢰할 수 있는 이어야 하며 시작 응용 프로그램의 디렉터리 또는 전역 어셈블리 캐시에 포함 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-106">The assembly must be fully trusted and be contained in the global assembly cache or the directory of the starting application.</span></span> <span data-ttu-id="d3253-107">형식 및 어셈블리 이름은 환경 변수에서 정규화 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-107">The type and assembly names must be fully qualified in the environment variables.</span></span> <span data-ttu-id="d3253-108">예:</span><span class="sxs-lookup"><span data-stu-id="d3253-108">For example:</span></span>  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  <span data-ttu-id="d3253-109">어셈블리가 포함 된 경우의 서브 클래스 <xref:System.AppDomainManager> 조건부로 표시 된 어셈블리에 종속 된 <xref:System.Security.AllowPartiallyTrustedCallersAttribute> 특성 (APTCA)으로 전달 하는 목록에서 이러한 어셈블리를 포함 해야 합니다는 <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> 는 속성<xref:System.AppDomainSetup>응용 프로그램 도메인을 만드는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-109">If the assembly that contains your subclass of <xref:System.AppDomainManager> depends on assemblies that are marked with the conditional <xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) attribute, you must include those assemblies in the list that you pass to the <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> property of the <xref:System.AppDomainSetup> you use to create application domains.</span></span> <span data-ttu-id="d3253-110">그렇지 않은 경우 조건부 APTCA 특성으로 표시 되는 어셈블리를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-110">Otherwise, the assemblies that are marked with the conditional APTCA attribute will be disabled.</span></span>  
  
 <span data-ttu-id="d3253-111"><xref:System.AppDomainManager> 관리 되지 않는 호스트의 관리 되는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-111">The <xref:System.AppDomainManager> is the managed equivalent of the unmanaged host.</span></span> <span data-ttu-id="d3253-112"><xref:System.AppDomainManager> 개체 프로세스에서 새 응용 프로그램 도메인 생성에 참여 하 고 새 사용자 지정할 수 <xref:System.AppDomain> 다른 관리 코드를 실행 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="d3253-112">An <xref:System.AppDomainManager> object participates in the creation of new application domains in a process and can customize the new <xref:System.AppDomain> before other managed code runs.</span></span> <span data-ttu-id="d3253-113"><xref:System.AppDomainManager> 공용 언어 런타임 실행의 다른 측면에 참여 하는 호스트 관리자를 제공할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-113">The <xref:System.AppDomainManager> can also supply host managers that participate in other aspects of common language runtime execution.</span></span> <span data-ttu-id="d3253-114">예를 들어 한 <xref:System.AppDomainManager> 식별할 수는 <xref:System.Security.HostSecurityManager> 응용 프로그램 도메인의 보안 결정에 참여 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-114">For example, an <xref:System.AppDomainManager> can identify a <xref:System.Security.HostSecurityManager> object that participates in the security decisions of the application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3253-115">부여 된 어셈블리만 `FullTrust`, 예: 전역 어셈블리 캐시에 어셈블리 또는로 식별 된 `fullTrustAssemblies` 에 <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> 에서 메서드를 로드할 수는 <xref:System.AppDomainManager.%23ctor%2A> 생성자 및 <xref:System.AppDomainManager.InitializeNewDomain%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d3253-115">Only assemblies granted `FullTrust`, such as assemblies in the global assembly cache or identified as `fullTrustAssemblies` in the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method can be loaded in the  <xref:System.AppDomainManager.%23ctor%2A> constructor and the <xref:System.AppDomainManager.InitializeNewDomain%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3253-116">이 클래스는 클래스 수준에 상속 요청과 링크 요청을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-116">This class contains a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="d3253-117">A <xref:System.Security.SecurityException> 직접 실행 호출자 또는 파생된 클래스 중 하나에 인프라 권한이 없는 경우에 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-117">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have infrastructure permission.</span></span> <span data-ttu-id="d3253-118">보안 요청에 대 한 세부 정보를 참조 하십시오. [링크 요청](~/docs/framework/misc/link-demands.md) 및 [상속 요청](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-118">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3253-119">다음 예제에서는 매우 간단한 구현을 <xref:System.AppDomainManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-119">The following example shows a very simple implementation of <xref:System.AppDomainManager>.</span></span>  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d3253-120">호출자에게 올바른 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-120">The caller does not have the correct permissions.</span></span> <span data-ttu-id="d3253-121">요구 사항 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d3253-121">See the Requirements section.</span></span></exception>
    <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d3253-122">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-122">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d3253-123">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-123">This member cannot be used by partially trusted or transparent code.</span></span></permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="d3253-124">파생 클래스에 공용 언어 런타임 인프라를 호스팅 실행 파일 코드를 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-124">for derived classes to plug executable code into the common language runtime hosting infrastructure.</span></span> <span data-ttu-id="d3253-125">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="d3253-125">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3253-126"><see cref="T:System.AppDomainManager" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-126">Initializes a new instance of the <see cref="T:System.AppDomainManager" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d3253-127">부여 된 어셈블리만 `FullTrust`, 예: 전역 어셈블리 캐시에 어셈블리 또는로 식별 된 `fullTrustAssemblies` 에 <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> 에서 메서드를 로드할 수는 <xref:System.AppDomainManager.%23ctor%2A> 생성자 및 <xref:System.AppDomainManager.InitializeNewDomain%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d3253-127">Only assemblies granted `FullTrust`, such as assemblies in the global assembly cache or identified as `fullTrustAssemblies` in the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method can be loaded in the  <xref:System.AppDomainManager.%23ctor%2A> constructor and the <xref:System.AppDomainManager.InitializeNewDomain%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d3253-128">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-128">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d3253-129">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-129">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3253-130">도메인의 매니페스트 기반 응용 프로그램과 추가 기능의 활성화를 처리하는 응용 프로그램 활성기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-130">Gets the application activator that handles the activation of add-ins and manifest-based applications for the domain.</span></span></summary>
        <value><span data-ttu-id="d3253-131">응용 프로그램 활성기입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-131">The application activator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3253-132">지정 된 인스턴스는 단일는 <xref:System.Runtime.Hosting.ApplicationActivator> 각 클래스 <xref:System.AppDomain> 활성화 호출 어떤 모든 추가 기능 및 매니페스트 기반 응용 프로그램에 라우팅됩니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-132">There is a single designated instance of the <xref:System.Runtime.Hosting.ApplicationActivator> class in each <xref:System.AppDomain> to which all add-in and manifest-based application activation calls are routed.</span></span> <span data-ttu-id="d3253-133"><xref:System.AppDomainManager> 현재 <xref:System.AppDomain> 고유한 사용자 지정을 제공할 수 <xref:System.Runtime.Hosting.ApplicationActivator>, 기본 인스턴스 또는 <xref:System.Runtime.Hosting.ApplicationActivator> 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-133">The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom <xref:System.Runtime.Hosting.ApplicationActivator>, or an instance of the default <xref:System.Runtime.Hosting.ApplicationActivator> is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="d3253-134">보안 상태를 요청하는 작업을 식별하는 <see cref="T:System.Security.SecurityState" />의 하위 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-134">A subclass of <see cref="T:System.Security.SecurityState" /> that identifies the operation whose security status is requested.</span></span></param>
        <summary><span data-ttu-id="d3253-135">응용 프로그램 도메인에서 특정 작업이 허용되는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-135">Indicates whether the specified operation is allowed in the application domain.</span></span></summary>
        <returns>
          <span data-ttu-id="d3253-136">호스트에서 <paramref name="state" />로 지정된 작업을 응용 프로그램 도메인에서 수행할 수 있도록 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-136"><see langword="true" /> if the host allows the operation specified by <paramref name="state" /> to be performed in the application domain; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3253-137">이 메서드의 기본 구현에서는 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-137">The default implementation of this method returns `false`.</span></span>  
  
 <span data-ttu-id="d3253-138">이 메서드를 호출한 경우는 <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> 격리 된 저장소 할당량을 늘리려면 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-138">This method is called when the <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> method has been called to increase the isolated storage quota.</span></span> <span data-ttu-id="d3253-139">공용 언어 런타임 (CLR)를 호스팅하는 응용 프로그램을 재정의할 수는 <xref:System.AppDomainManager.CheckSecuritySettings%2A> 기반 정책 결정을 수행 하는 메서드는 <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> 개체 (상속 되는 <xref:System.Security.SecurityState>), 및 허용 하거나 수 증가 되지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-139">An application that hosts the common language runtime (CLR) can override the <xref:System.AppDomainManager.CheckSecuritySettings%2A> method to perform policy decisions based on an <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> object (which inherits <xref:System.Security.SecurityState>), and can then allow or prevent the increase.</span></span> <span data-ttu-id="d3253-140">예를 들어 호스트에서는 최종 사용자 승인 또는 거부할 할당량을 늘리려면 요청을 요구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-140">For example, a host could prompt the end user to approve or deny the request to increase the quota.</span></span> <span data-ttu-id="d3253-141">호스트의 구현을 <xref:System.AppDomainManager.CheckSecuritySettings%2A> 서비스 거부 공격의 가능성을 고려해 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-141">The host's implementation of <xref:System.AppDomainManager.CheckSecuritySettings%2A> should take into account the possibility of denial-of-service attacks.</span></span> <span data-ttu-id="d3253-142">예를 들어 단추 클릭과 같은 사용자가 시작한 이벤트에서 메서드가 호출 되는 경우에 사용자를 프롬프트 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-142">For example, it should prompt the user only if the method is called from a user-initiated event such as a button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName"><span data-ttu-id="d3253-143">도메인의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-143">The friendly name of the domain.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="d3253-144">스택의 맨 위 권한 집합을 설정하기 위해 보안 정책을 통해 매핑된 증명 정보를 포함하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-144">An object that contains evidence mapped through the security policy to establish a top-of-stack permission set.</span></span></param>
        <param name="appDomainInfo"><span data-ttu-id="d3253-145">응용 프로그램 도메인 초기화 정보를 포함하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-145">An object that contains application domain initialization information.</span></span></param>
        <summary><span data-ttu-id="d3253-146">새 응용 프로그램 도메인 또는 기존 응용 프로그램 도메인을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-146">Returns a new or existing application domain.</span></span></summary>
        <returns><span data-ttu-id="d3253-147">새 응용 프로그램 도메인 또는 기존 응용 프로그램 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-147">A new or existing application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3253-148">지정 이름은 `friendlyName` 도메인을 식별 하기 위해 사용자 인터페이스에 매개 변수를 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-148">The friendly name, specified by the `friendlyName` parameter, can be displayed in user interfaces to identify the domain.</span></span> <span data-ttu-id="d3253-149">자세한 내용은 <xref:System.AppDomain.FriendlyName%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d3253-149">For more information, see the <xref:System.AppDomain.FriendlyName%2A> property.</span></span>  
  
 <span data-ttu-id="d3253-150">기본 <xref:System.AppDomainManager.CreateDomain%2A> 보호 된 메서드를 호출 <xref:System.AppDomainManager.CreateDomainHelper%2A> 방법을 만들 수는 <xref:System.AppDomain>합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-150">The default <xref:System.AppDomainManager.CreateDomain%2A> method calls the protected <xref:System.AppDomainManager.CreateDomainHelper%2A> method to create the <xref:System.AppDomain>.</span></span> <span data-ttu-id="d3253-151">이 메서드의 재정의 호출할 필요가 없습니다는 <xref:System.AppDomainManager.CreateDomainHelper%2A> 메서드 되었지만 기존 도메인을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-151">Overrides of this method do not need to call the <xref:System.AppDomainManager.CreateDomainHelper%2A> method but can return an existing domain.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d3253-152">상속 하는 경우는 <see cref="T:System.AppDomainManager" /> 클래스 및 재정의 <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> 메서드를 호출 하기 전에 사용자 지정 응용 프로그램 도메인 초기화 작업을 수행할 수 있습니다는 <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> 메서드 또는 전혀 도우미 메서드를 호출 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-152">When you inherit from the <see cref="T:System.AppDomainManager" /> class and override the <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> method, you can perform custom application domain initialization activities before calling the <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> method, or not call the helper method at all.</span></span>  <span data-ttu-id="d3253-153">으로 전달 되는 증명 정보를 수정할 수는 예를 들어 <paramref name="securityInfo" />, 관련 된 필드를 업데이트 <see cref="T:System.AppDomainSetup" />을 하거나 기존 도메인을 다시 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-153">For example, you could modify the evidence passed in as <paramref name="securityInfo" />, update the fields of the associated <see cref="T:System.AppDomainSetup" />, or reuse an exiting domain.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName"><span data-ttu-id="d3253-154">도메인의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-154">The friendly name of the domain.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="d3253-155">스택의 맨 위 권한 집합을 설정하기 위해 보안 정책을 통해 매핑된 증명 정보를 포함하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-155">An object that contains evidence mapped through the security policy to establish a top-of-stack permission set.</span></span></param>
        <param name="appDomainInfo"><span data-ttu-id="d3253-156">응용 프로그램 도메인 초기화 정보를 포함하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-156">An object that contains application domain initialization information.</span></span></param>
        <summary><span data-ttu-id="d3253-157">응용 프로그램 도메인을 만들기 위해 도우미 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-157">Provides a helper method to create an application domain.</span></span></summary>
        <returns><span data-ttu-id="d3253-158">새로 만든 응용 프로그램 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-158">A newly created application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3253-159">새 응용 프로그램 도메인의 생성을 처리 하는이 보호 된 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-159">This protected helper method handles the creation of a new application domain.</span></span>  
  
 <span data-ttu-id="d3253-160">이 이름으로 지정 된는 `friendlyName` 도메인을 식별 하기 위해 사용자 인터페이스에 매개 변수를 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-160">This friendly name, specified by the `friendlyName` parameter, can be displayed in user interfaces to identify the domain.</span></span> <span data-ttu-id="d3253-161">자세한 내용은 <xref:System.AppDomain.FriendlyName%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d3253-161">For more information, see the <xref:System.AppDomain.FriendlyName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3253-162"><paramref name="friendlyName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d3253-162"><paramref name="friendlyName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d3253-163">증명 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-163">for controlling evidence.</span></span> <span data-ttu-id="d3253-164">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-164">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="d3253-165">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d3253-165">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3253-166">응용 프로그램의 진입 어셈블리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-166">Gets the entry assembly for an application.</span></span></summary>
        <value><span data-ttu-id="d3253-167">응용 프로그램의 진입 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-167">The entry assembly for the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3253-168">응용 프로그램 매니페스트 활성 응용 프로그램인 경우 항목 어셈블리가 응용 프로그램 매니페스트에서 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-168">If the application is a manifest-activated application, the entry assembly is determined from the application manifest.</span></span> <span data-ttu-id="d3253-169">응용 프로그램 매니페스트 활성화를 없으면 진입 어셈블리는 기본 응용 프로그램 도메인에서 실행 되는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-169">If the application is not manifest activated, the entry assembly is the process executable in the default application domain.</span></span> <span data-ttu-id="d3253-170">항목 어셈블리가에 의해 실행 된 첫 번째 실행 파일은 다른 응용 프로그램 도메인에서는 <xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d3253-170">In other application domains, the entry assembly is the first executable that was executed by the <xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3253-171">실행 컨텍스트의 흐름을 관리하는 호스트 실행 컨텍스트 관리자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-171">Gets the host execution context manager that manages the flow of the execution context.</span></span></summary>
        <value><span data-ttu-id="d3253-172">호스트 실행 컨텍스트 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-172">The host execution context manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3253-173">이 속성을 사용 하면 호스트를 제공 하는 데는 <xref:System.Threading.HostExecutionContextManager> 비동기 호출 간에 실행 컨텍스트의 흐름에 참여할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-173">This property allows a host to provide a <xref:System.Threading.HostExecutionContextManager> that can participate in the flow of the execution context across asynchronous calls.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3253-174">응용 프로그램 도메인의 보안 결정에 참여하는 호스트 보안 관리자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-174">Gets the host security manager that participates in security decisions for the application domain.</span></span></summary>
        <value><span data-ttu-id="d3253-175">호스트 보안 관리자입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-175">The host security manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3253-176">이 속성을 사용 하면 호스트를 제공 하는 데는 <xref:System.Security.HostSecurityManager> 응용 프로그램 도메인에 대 한 보안 결정에 참여할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-176">This property allows a host to provide a <xref:System.Security.HostSecurityManager> to participate in the security decisions for the application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3253-177">다음 예제에서는 재정의 <xref:System.AppDomainManager.HostSecurityManager%2A> 사용자 지정 응용 프로그램 도메인 관리자에 대 한 속성.</span><span class="sxs-lookup"><span data-stu-id="d3253-177">The following example shows an override of the <xref:System.AppDomainManager.HostSecurityManager%2A> property for a custom application domain manager.</span></span> <span data-ttu-id="d3253-178">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.AppDomainManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-178">This code example is part of a larger example provided for the <xref:System.AppDomainManager> class.</span></span>  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3253-179">사용자 지정 응용 프로그램 도메인 관리자의 초기화 플래그를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-179">Gets the initialization flags for custom application domain managers.</span></span></summary>
        <value><span data-ttu-id="d3253-180">수행할 초기화 작업을 설명하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-180">A bitwise combination of the enumeration values that describe the initialization action to perform.</span></span> <span data-ttu-id="d3253-181">기본값은 <see cref="F:System.AppDomainManagerInitializationOptions.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-181">The default is <see cref="F:System.AppDomainManagerInitializationOptions.None" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo"><span data-ttu-id="d3253-182">응용 프로그램 도메인 초기화 정보를 포함하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-182">An object that contains application domain initialization information.</span></span></param>
        <summary><span data-ttu-id="d3253-183">새 응용 프로그램 도메인을 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-183">Initializes the new application domain.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d3253-184">ASP.NET에서 응용 프로그램 도메인을 초기화 하는이 메서드를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="d3253-184">Do not use this method to initialize an application domain in ASP.NET.</span></span> <span data-ttu-id="d3253-185">ASP.NET을 구성을 호스트에서 처리 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-185">In ASP.NET, configuration must be handled by the host.</span></span> <span data-ttu-id="d3253-186">이 메서드를 사용 하 여 응용 프로그램 도메인 초기화 하는 경우 호스트 throw <xref:System.InvalidOperationException> 응용 프로그램 도메인 초기화 하려고 할 때입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-186">If you use this method to initialize the application domain, the host throws <xref:System.InvalidOperationException> when it attempts to initialize the application domain.</span></span> <span data-ttu-id="d3253-187">예외 메시지는 해당 초기화 이미 발생 한 것을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-187">The exception message indicates that initialization has already occurred.</span></span>  
  
 <span data-ttu-id="d3253-188">이 메서드는 생성자 직후 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-188">This method is called immediately after the constructor.</span></span> <span data-ttu-id="d3253-189">기본 <xref:System.AppDomainManager.InitializeNewDomain%2A> 구현은 아무 작업도 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-189">The default <xref:System.AppDomainManager.InitializeNewDomain%2A> implementation does nothing.</span></span>  <span data-ttu-id="d3253-190">사용자 지정 구현을 내부 클래스와 대리자를 설정, 관리 되지 않는 호스트 인터페이스를 사용 하 여 인터페이스를 설정 하거나, 새에 대 한 이벤트 처리기를 설정 수 <xref:System.AppDomain>합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-190">A custom implementation can set up internal classes and delegates, set up an interface with the unmanaged host interface, or set up event handlers for the new <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="d3253-191">또한 추가 기능 활성화에 대 한 사용자 지정 구현을 식별할 수 현재 <xref:System.AppDomain> 대상 응용 프로그램 도메인으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-191">Also, for add-in activations, a custom implementation could identify the current <xref:System.AppDomain> as the target application domain.</span></span>  
  
 <span data-ttu-id="d3253-192">부터는 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 응용 프로그램 시작 시 또는 새 응용 프로그램 도메인의 샌드박스를 수정 하려면이 메서드를 기본 응용 프로그램 도메인 샌드 박싱을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-192">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you can use this method to sandbox the default application domain at application startup, or to modify the sandbox of a new application domain.</span></span> <span data-ttu-id="d3253-193">이 작업을 수행 하려면 조정는 <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> 및 <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> 속성에는 <xref:System.Security.Policy.ApplicationTrust> 에 할당 된 개체는 <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> 속성 `appDomainInfo`응용 프로그램 도메인 초기화 되기 전에, 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-193">To do this, adjust the <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> and <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> properties on the <xref:System.Security.Policy.ApplicationTrust> object that is assigned to the <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> property of `appDomainInfo`, before you initialize the application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3253-194">부여 된 어셈블리만 `FullTrust`, 예: 전역 어셈블리 캐시에 어셈블리 또는로 식별 된 `fullTrustAssemblies` 에 <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> 에서 메서드를 로드할 수는 <xref:System.AppDomainManager.%23ctor%2A> 생성자 및 <xref:System.AppDomainManager.InitializeNewDomain%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d3253-194">Only assemblies granted `FullTrust`, such as assemblies in the global assembly cache or identified as `fullTrustAssemblies` in the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method can be loaded in the  <xref:System.AppDomainManager.%23ctor%2A> constructor and the <xref:System.AppDomainManager.InitializeNewDomain%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3253-195">다음 예제에서는 재정의 <xref:System.AppDomainManager.InitializeNewDomain%2A> 메서드는 사용자 지정 응용 프로그램 도메인 관리자에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-195">The following example shows an override of the <xref:System.AppDomainManager.InitializeNewDomain%2A> method for a custom application domain manager.</span></span> <span data-ttu-id="d3253-196">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.AppDomainManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d3253-196">This code example is part of a larger example provided for the <xref:System.AppDomainManager> class.</span></span>  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>