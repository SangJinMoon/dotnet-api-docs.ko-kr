<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AggregateException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a408cd8c65b6a1872bbc7ecc28fd7106d4fe9897.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a408cd8c65b6a1872bbc7ecc28fd7106d4fe9897</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AggregateException">
          <source>Represents one or more errors that occur during application execution.</source>
          <target state="translated">응용 프로그램을 실행하는 동안 발생하는 하나 이상의 오류를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source><ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> is used to consolidate multiple failures into a single, throwable exception object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 여러 오류를 throw 할 수 있는 단일 예외 개체를 통합 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>It is used extensively in the <bpt id="p1">[</bpt>Task Parallel Library (TPL)<ept id="p1">](~/docs/standard/parallel-programming/task-parallel-library-tpl.md)</ept> and <bpt id="p2">[</bpt>Parallel LINQ (PLINQ)<ept id="p2">](~/docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</source>
          <target state="translated">광범위 하 게 사용 되는 <bpt id="p1">[</bpt>라이브러리 TPL (작업 병렬)<ept id="p1">](~/docs/standard/parallel-programming/task-parallel-library-tpl.md)</ept> 및 <bpt id="p2">[</bpt>PLINQ (병렬 LINQ)<ept id="p2">](~/docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>For additional information, see the <bpt id="p1">[</bpt>Aggregating Exceptions<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=259617)</ept> entry in the .NET Matters blog.</source>
          <target state="translated">자세한 내용은 참조는 <bpt id="p1">[</bpt>집계 예외<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=259617)</ept> .NET 문제 블로그 항목입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>For an example, see <bpt id="p1">[</bpt>NIB: How to: Handle Exceptions Thrown by Tasks<ept id="p1">](http://msdn.microsoft.com/library/d6c47ec8-9de9-4880-beb3-ff19ae51565d)</ept> and <bpt id="p2">[</bpt>How to: Handle Exceptions in a PLINQ Query<ept id="p2">](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)</ept>.</source>
          <target state="translated">예제를 참조 하십시오. <bpt id="p1">[</bpt>NIB: 방법: 작업에서 발생 한 예외 처리<ept id="p1">](http://msdn.microsoft.com/library/d6c47ec8-9de9-4880-beb3-ff19ae51565d)</ept> 및 <bpt id="p2">[</bpt>하는 방법: PLINQ 쿼리의 예외 처리<ept id="p2">](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>The following example catches the <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception and calls the <ph id="ph2">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method to handle each exception it contains.</source>
          <target state="translated">다음 예제에서는 catch는 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 예외 및 호출은 <ph id="ph2">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> 포함 된 각 예외를 처리 하는 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>Compiling and running the example with the first <ph id="ph1">`task1`</ph> variable should result in an <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> object that contains an <ph id="ph3">&lt;xref:System.UnauthorizedAccessException&gt;</ph> exception.</source>
          <target state="translated">컴파일 및 첫 번째 예에서는 실행 <ph id="ph1">`task1`</ph> 변수를 유발는 <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> 포함 된 개체는 <ph id="ph3">&lt;xref:System.UnauthorizedAccessException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>Commenting out that line, uncommenting the second <ph id="ph1">`task1`</ph> variable, and compiling and running the example produces an <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> object that contains an <ph id="ph3">&lt;xref:System.IndexOutOfRangeException&gt;</ph> exception.</source>
          <target state="translated">해당 줄을 주석의 주석 처리 두 번째 <ph id="ph1">`task1`</ph> 및 변수를 컴파일하고 실행 하면이 예제에서는 생성 됩니다는 <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> 포함 된 개체는 <ph id="ph3">&lt;xref:System.IndexOutOfRangeException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AggregateException">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">모든 공용 및 보호 된 구성원 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 는 스레드로부터 안전 하 고 여러 스레드에서 동시에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.AggregateException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a system-supplied message that describes the error.</source>
          <target state="translated">오류를 설명하는 시스템 제공 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "System.AggregateException: One or more errors occurred."</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> 와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성을 "System.AggregateException: 하나 이상의 오류가 발생 했습니다."</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">이 메시지는 현재 시스템 문화권을 고려합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">지역화된 오류 메시지 문자열입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">이 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> 인수가 null입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph>의 요소가 null인 경우.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">이 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> 인수가 null입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Exception[])">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph>의 요소가 null인 경우.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The message that describes the exception.</source>
          <target state="translated">예외를 설명하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified message that describes the error.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 클래스의 새 인스턴스를 오류를 설명하는 지정된 메시지로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>에 지정된 오류 메시지 문자열입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">원본 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>XML 및 SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 인수가 null입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The exception could not be deserialized correctly.</source>
          <target state="translated">예외를 올바르게 역직렬화할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified error message and references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 이 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> 인수가 null입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph>의 요소가 null인 경우.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The message that describes the exception.</source>
          <target state="translated">예외를 설명하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아니면 현재 예외는 내부 예외를 처리하는 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 블록에서 발생합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외의 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, <ph id="ph2">`null`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>에 지정된 오류 메시지 문자열입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;paramref name="innerException" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerException" /&gt;</ph> 인수가 null입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>The exceptions that are the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with a specified error message and references to the inner exceptions that are the cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 이 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>The <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> 인수가 null입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.AggregateException.#ctor(System.String,System.Exception[])">
          <source>An element of <ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerExceptions" /&gt;</ph>의 요소가 null인 경우.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Flatten">
          <source>Flattens an <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> instances into a single, new instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 인스턴스를 단일 새 인스턴스로 평면화합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Flatten">
          <source>A new, flattened <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</source>
          <target state="translated">평면화된 새 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>If a task has an attached child task that throws an exception, that exception is wrapped in an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception before it is propagated to the parent task, which wraps that exception in its own <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> exception before it propagates it back to the calling thread.</source>
          <target state="translated">작업에 연결된 된 자식 작업 예외를 throw 하는 경우 해당 예외에 래핑됩니다는 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 자체에서 해당 예외를 래핑하는 부모 작업에 전파 되 고 예외 <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> 로 다시 전파 하기 전에 예외는 호출 스레드입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>In such cases, the <ph id="ph1">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> exception that is caught by the <ph id="ph3">&lt;xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.Tasks.Task.Wait*&gt;</ph>, <ph id="ph5">&lt;xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph6">&lt;xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType&gt;</ph> method contains one or more <ph id="ph7">&lt;xref:System.AggregateException&gt;</ph> instances, not the original exceptions that caused the fault.</source>
          <target state="translated">이러한 경우에는 <ph id="ph1">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> 에서 발견 된 예외는 <ph id="ph3">&lt;xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.Tasks.Task.Wait*&gt;</ph>, <ph id="ph5">&lt;xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph6">&lt;xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType&gt;</ph> 메서드 하나 이상 포함 <ph id="ph7">&lt;xref:System.AggregateException&gt;</ph> 인스턴스를 원래 예외가 아니라는 오류를 일으켰습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>To avoid having to iterate over nested <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exceptions, you can use the <ph id="ph2">&lt;xref:System.AggregateException.Flatten%2A&gt;</ph> method to remove all the nested <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> exceptions, so that the <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.AggregateException&gt;</ph> object contains the original exceptions.</source>
          <target state="translated">반복할 필요가 없도록 하려면 중첩 된 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 예외를 제외 하면 צ ְ ײ는 <ph id="ph2">&lt;xref:System.AggregateException.Flatten%2A&gt;</ph> 모두 제거 하는 메서드는 중첩 된 <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> 예외, 있도록는 <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> 반환 된 속성 <ph id="ph5">&lt;xref:System.AggregateException&gt;</ph> 원래 개체에 포함 되어 예외입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>This method recursively flattens all instances of  <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exceptions that are inner exceptions of the current <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instance .</source>
          <target state="translated">이 메서드를 재귀적으로의 모든 인스턴스를 평평 하 게 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 는 현재 내부 예외가 있는 예외 <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>The inner exceptions returned in the new <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> are the union of all the inner exceptions from exception tree rooted at the current <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instance.</source>
          <target state="translated">새 반환 된 내부 예외 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 현재에서 시작 하는 예외 트리에서 내부 예외를 모두의 union은 <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>In the following example, nested <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> instances are flattened and handled in just one loop.</source>
          <target state="translated">다음 예제에서는 중첩된 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 인스턴스가 하나의 루프에서 결합되고 처리됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Flatten">
          <source>You can also use the <ph id="ph1">&lt;xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType&gt;</ph> method to rethrow the inner exceptions from multiple <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instances thrown by multiple tasks in a single <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> instance, as the following example shows.</source>
          <target state="translated">또한 다음 예제가 보여주는 것처럼 <ph id="ph1">&lt;xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType&gt;</ph> 메서드를 사용하여 단일 <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> 인스턴스에서 여러 작업에 의해 throw된 여러 <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> 인스턴스의 내부 예외를 다시 throw할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetBaseException">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> that is the root cause of this exception.</source>
          <target state="translated">이 예외의 근본 원인인 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetBaseException">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> that is the root cause of this exception.</source>
          <target state="translated">이 예외의 근본 원인인 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">원본 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>XML 및 SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 인수가 null입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The predicate to execute for each exception.</source>
          <target state="translated">각 예외에 대해 실행할 조건자입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The predicate accepts as an argument the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> to be processed and returns a Boolean to indicate whether the exception was handled.</source>
          <target state="translated">조건자가 처리할 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>을 인수로 수락하여 예외가 처리되었는지 나타내는 부울을 반환합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Invokes a handler on each <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> contained by this <ph id="ph2">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.AggregateException" /&gt;</ph>에 포함된 각 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>에서 처리기를 호출합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Each invocation of the <ph id="ph1">`predicate`</ph> returns true or false to indicate whether the <ph id="ph2">&lt;xref:System.Exception&gt;</ph> was handled.</source>
          <target state="translated">호출할 때마다는 <ph id="ph1">`predicate`</ph> 반환 true 또는 false를 여부는 <ph id="ph2">&lt;xref:System.Exception&gt;</ph> 처리 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> which will be thrown.</source>
          <target state="translated">모든 호출 후 처리 되지 않은 예외 나 쳤으 면 처리 되지 않은 모든 예외에 놓이게 됩니다 새 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 는 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method simply returns.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> 메서드를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>If any invocations of the <ph id="ph1">`predicate`</ph> throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.</source>
          <target state="translated">하는 경우의 호출은 <ph id="ph1">`predicate`</ph> 예외를 throw 추가 예외 처리를 중단 하 고 throw 된 예외로 즉시 전파 해야-됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Ordinarily, an exception handler that catches an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception uses a <ph id="ph2">`foreach`</ph> loop (in C#) or <ph id="ph3">`For Each`</ph> loop (in Visual Basic) to handle each exception in its <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> collection.</source>
          <target state="translated">일반적으로 catch 하는 예외 처리기는 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 예외 사용 하 여는 <ph id="ph2">`foreach`</ph> 루프 (C#) 또는 <ph id="ph3">`For Each`</ph> 루프 (Visual Basic의 경우)에서 각 예외를 처리 하는 <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>Instead, the following example uses the <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method to handle each exception, and only re-throws exceptions that are not <ph id="ph2">`CustomException`</ph> instances.</source>
          <target state="translated">대신, 다음 예제에서는 사용 된 <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> 각 예외 및 없는 유일한를 다시 throw 예외를 처리할 메서드를 <ph id="ph2">`CustomException`</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The following is a more complete example that uses the <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method to provide special handling for an <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph> when enumerating files.</source>
          <target state="translated">다음은 사용 하는 전체 예제는 <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> 에 대 한 특수 처리를 제공 하는 메서드는 <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph> 파일을 열거 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>The <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> 인수가 null입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
          <source>An exception contained by this <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph> was not handled.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>에 포함된 예외는 처리되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.AggregateException.InnerExceptions">
          <source>Gets a read-only collection of the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> instances that caused the current exception.</source>
          <target state="translated">현재 예외를 발생시킨 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> 인스턴스의 읽기 전용 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AggregateException.InnerExceptions">
          <source>Returns a read-only collection of the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> instances that caused the current exception.</source>
          <target state="translated">현재 예외를 발생시킨 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> 인스턴스의 읽기 전용 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.AggregateException.ToString">
          <source>Creates and returns a string representation of the current <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.AggregateException" /&gt;</ph>의 문자열 표현을 만들고 반환합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.AggregateException.ToString">
          <source>A string representation of the current exception.</source>
          <target state="translated">현재 예외에 대한 문자열 표현입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>