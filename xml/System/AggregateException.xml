<Type Name="AggregateException" FullName="System.AggregateException">
  <TypeSignature Language="C#" Value="public class AggregateException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AggregateException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.AggregateException" />
  <TypeSignature Language="VB.NET" Value="Public Class AggregateException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class AggregateException : Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {InnerExceptionCount}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="efe1e-101">응용 프로그램을 실행하는 동안 발생하는 하나 이상의 오류를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-101">Represents one or more errors that occur during application execution.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe1e-102"><xref:System.AggregateException> 여러 오류를 throw 할 수 있는 단일 예외 개체를 통합 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-102"><xref:System.AggregateException> is used to consolidate multiple failures into a single, throwable exception object.</span></span> <span data-ttu-id="efe1e-103">광범위 하 게 사용 되는 [라이브러리 TPL (작업 병렬)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md) 및 [PLINQ (병렬 LINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-103">It is used extensively in the [Task Parallel Library (TPL)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md) and [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md).</span></span> <span data-ttu-id="efe1e-104">자세한 내용은 참조는 [집계 예외](http://go.microsoft.com/fwlink/p/?LinkId=259617) .NET 문제 블로그 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-104">For additional information, see the [Aggregating Exceptions](http://go.microsoft.com/fwlink/p/?LinkId=259617) entry in the .NET Matters blog.</span></span> <span data-ttu-id="efe1e-105">예제를 참조 하십시오. [NIB: 방법: 작업에서 발생 한 예외 처리](http://msdn.microsoft.com/library/d6c47ec8-9de9-4880-beb3-ff19ae51565d) 및 [하는 방법: PLINQ 쿼리의 예외 처리](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-105">For an example, see [NIB: How to: Handle Exceptions Thrown by Tasks](http://msdn.microsoft.com/library/d6c47ec8-9de9-4880-beb3-ff19ae51565d) and [How to: Handle Exceptions in a PLINQ Query](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe1e-106">다음 예제에서는 catch는 <xref:System.AggregateException> 예외 및 호출은 <xref:System.AggregateException.Handle%2A> 포함 된 각 예외를 처리 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe1e-106">The following example catches the <xref:System.AggregateException> exception and calls the <xref:System.AggregateException.Handle%2A> method to handle each exception it contains.</span></span> <span data-ttu-id="efe1e-107">컴파일 및 첫 번째 예에서는 실행 `task1` 변수를 유발는 <xref:System.AggregateException> 포함 된 개체는 <xref:System.UnauthorizedAccessException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-107">Compiling and running the example with the first `task1` variable should result in an <xref:System.AggregateException> object that contains an <xref:System.UnauthorizedAccessException> exception.</span></span> <span data-ttu-id="efe1e-108">해당 줄을 주석의 주석 처리 두 번째 `task1` 및 변수를 컴파일하고 실행 하면이 예제에서는 생성 됩니다는 <xref:System.AggregateException> 포함 된 개체는 <xref:System.IndexOutOfRangeException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-108">Commenting out that line, uncommenting the second `task1` variable, and compiling and running the example produces an <xref:System.AggregateException> object that contains an <xref:System.IndexOutOfRangeException> exception.</span></span>  
  
 [!code-csharp[System.AggregateException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.aggregateexception.class/cs/exception1.cs#1)]
 [!code-vb[System.AggregateException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.aggregateexception.class/vb/exception1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="efe1e-109">모든 공용 및 보호 된 구성원 <see cref="T:System.AggregateException" /> 는 스레드로부터 안전 하 고 여러 스레드에서 동시에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-109">All public and protected members of <see cref="T:System.AggregateException" /> are thread-safe and may be used concurrently from multiple threads.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="efe1e-110"><see cref="T:System.AggregateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-110">Initializes a new instance of the <see cref="T:System.AggregateException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efe1e-111">오류를 설명하는 시스템 제공 메시지를 사용하여 <see cref="T:System.AggregateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-111">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe1e-112">이 생성자는 <xref:System.Exception.Message%2A> 와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성을 "System.AggregateException: 하나 이상의 오류가 발생 했습니다."</span><span class="sxs-lookup"><span data-stu-id="efe1e-112">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "System.AggregateException: One or more errors occurred."</span></span> <span data-ttu-id="efe1e-113">이 메시지는 현재 시스템 문화권을 고려합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-113">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="efe1e-114">다음 표에서는 <xref:System.AggregateException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-114">The following table shows the initial property values for an instance of <xref:System.AggregateException>.</span></span>  
  
|<span data-ttu-id="efe1e-115">속성</span><span class="sxs-lookup"><span data-stu-id="efe1e-115">Property</span></span>|<span data-ttu-id="efe1e-116">값</span><span class="sxs-lookup"><span data-stu-id="efe1e-116">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="efe1e-117">`null`.</span><span class="sxs-lookup"><span data-stu-id="efe1e-117">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="efe1e-118">지역화된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-118">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (System.Collections.Generic.IEnumerable&lt;Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerExceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="innerExceptions"><span data-ttu-id="efe1e-119">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-119">The exceptions that are the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="efe1e-120">이 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.AggregateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-120">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with references to the inner exceptions that are the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efe1e-121"><paramref name="innerExceptions" /> 인수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-121">The <paramref name="innerExceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efe1e-122"><paramref name="innerExceptions" />의 요소가 null인 경우.</span><span class="sxs-lookup"><span data-stu-id="efe1e-122">An element of <paramref name="innerExceptions" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (params Exception[] innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception[] innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.Exception[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray innerExceptions As Exception())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(... cli::array &lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerExceptions" Type="System.Exception[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="innerExceptions"><span data-ttu-id="efe1e-123">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-123">The exceptions that are the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="efe1e-124">이 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.AggregateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-124">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with references to the inner exceptions that are the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efe1e-125"><paramref name="innerExceptions" /> 인수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-125">The <paramref name="innerExceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efe1e-126"><paramref name="innerExceptions" />의 요소가 null인 경우.</span><span class="sxs-lookup"><span data-stu-id="efe1e-126">An element of <paramref name="innerExceptions" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="efe1e-127">예외를 설명하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-127">The message that describes the exception.</span></span> <span data-ttu-id="efe1e-128">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-128">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="efe1e-129"><see cref="T:System.AggregateException" /> 클래스의 새 인스턴스를 오류를 설명하는 지정된 메시지로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-129">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe1e-130">다음 표에서는 <xref:System.AggregateException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-130">The following table shows the initial property values for an instance of <xref:System.AggregateException>.</span></span>  
  
|<span data-ttu-id="efe1e-131">속성</span><span class="sxs-lookup"><span data-stu-id="efe1e-131">Property</span></span>|<span data-ttu-id="efe1e-132">값</span><span class="sxs-lookup"><span data-stu-id="efe1e-132">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="efe1e-133">`null`.</span><span class="sxs-lookup"><span data-stu-id="efe1e-133">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="efe1e-134">`message`에 지정된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-134">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AggregateException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AggregateException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="efe1e-135">serialize된 개체 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-135">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="efe1e-136">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-136">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="efe1e-137">serialize된 데이터를 사용하여 <see cref="T:System.AggregateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-137">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe1e-138">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-138">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="efe1e-139">자세한 내용은 참조 [XML 및 SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-139">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efe1e-140"><paramref name="info" /> 인수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-140">The <paramref name="info" /> argument is null.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="efe1e-141">예외를 올바르게 역직렬화할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-141">The exception could not be deserialized correctly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message, System.Collections.Generic.IEnumerable&lt;Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerExceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message, System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="efe1e-142">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-142">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerExceptions"><span data-ttu-id="efe1e-143">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-143">The exceptions that are the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="efe1e-144">지정된 오류 메시지와 이 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.AggregateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-144">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and references to the inner exceptions that are the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efe1e-145"><paramref name="innerExceptions" /> 인수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-145">The <paramref name="innerExceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efe1e-146"><paramref name="innerExceptions" />의 요소가 null인 경우.</span><span class="sxs-lookup"><span data-stu-id="efe1e-146">An element of <paramref name="innerExceptions" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="efe1e-147">예외를 설명하는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-147">The message that describes the exception.</span></span> <span data-ttu-id="efe1e-148">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-148">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <param name="innerException"><span data-ttu-id="efe1e-149">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-149">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="efe1e-150"><c>innerException</c> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-150">If the <c>innerException</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="efe1e-151">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.AggregateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-151">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe1e-152">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-152">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="efe1e-153"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-153">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="efe1e-154">다음 표에서는 <xref:System.AggregateException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-154">The following table shows the initial property values for an instance of <xref:System.AggregateException>.</span></span>  
  
|<span data-ttu-id="efe1e-155">속성</span><span class="sxs-lookup"><span data-stu-id="efe1e-155">Property</span></span>|<span data-ttu-id="efe1e-156">값</span><span class="sxs-lookup"><span data-stu-id="efe1e-156">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="efe1e-157">`null`.</span><span class="sxs-lookup"><span data-stu-id="efe1e-157">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="efe1e-158">`message`에 지정된 오류 메시지 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-158">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efe1e-159"><paramref name="innerException" /> 인수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-159">The <paramref name="innerException" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AggregateException (string message, params Exception[] innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception[] innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.#ctor(System.String,System.Exception[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, ParamArray innerExceptions As Exception())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException(System::String ^ message, ... cli::array &lt;Exception ^&gt; ^ innerExceptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Exception[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="efe1e-160">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-160">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerExceptions"><span data-ttu-id="efe1e-161">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-161">The exceptions that are the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="efe1e-162">지정된 오류 메시지와 이 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.AggregateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-162">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with a specified error message and references to the inner exceptions that are the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efe1e-163"><paramref name="innerExceptions" /> 인수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-163">The <paramref name="innerExceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efe1e-164"><paramref name="innerExceptions" />의 요소가 null인 경우.</span><span class="sxs-lookup"><span data-stu-id="efe1e-164">An element of <paramref name="innerExceptions" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public AggregateException Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AggregateException Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Function Flatten () As AggregateException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AggregateException ^ Flatten();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AggregateException</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efe1e-165"><see cref="T:System.AggregateException" /> 인스턴스를 단일 새 인스턴스로 평면화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-165">Flattens an <see cref="T:System.AggregateException" /> instances into a single, new instance.</span></span></summary>
        <returns><span data-ttu-id="efe1e-166">평면화된 새 <see cref="T:System.AggregateException" />입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-166">A new, flattened <see cref="T:System.AggregateException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe1e-167">작업에 연결된 된 자식 작업 예외를 throw 하는 경우 해당 예외에 래핑됩니다는 <xref:System.AggregateException> 자체에서 해당 예외를 래핑하는 부모 작업에 전파 되 고 예외 <xref:System.AggregateException> 로 다시 전파 하기 전에 예외는 호출 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-167">If a task has an attached child task that throws an exception, that exception is wrapped in an <xref:System.AggregateException> exception before it is propagated to the parent task, which wraps that exception in its own <xref:System.AggregateException> exception before it propagates it back to the calling thread.</span></span> <span data-ttu-id="efe1e-168">이러한 경우에는 <xref:System.AggregateException.InnerExceptions%2A> 속성의는 <xref:System.AggregateException> 에서 발견 된 예외는 <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType>, <xref:System.Threading.Tasks.Task.Wait*>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType> 또는 <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> 메서드 하나 이상 포함 <xref:System.AggregateException> 인스턴스를 원래 예외가 아니라는 오류를 일으켰습니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-168">In such cases, the <xref:System.AggregateException.InnerExceptions%2A> property of the <xref:System.AggregateException> exception that is caught by the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=nameWithType>, <xref:System.Threading.Tasks.Task.Wait*>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=nameWithType> or <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method contains one or more <xref:System.AggregateException> instances, not the original exceptions that caused the fault.</span></span> <span data-ttu-id="efe1e-169">반복할 필요가 없도록 하려면 중첩 된 <xref:System.AggregateException> 예외를 제외 하면 צ ְ ײ는 <xref:System.AggregateException.Flatten%2A> 모두 제거 하는 메서드는 중첩 된 <xref:System.AggregateException> 예외, 있도록는 <xref:System.AggregateException.InnerExceptions%2A> 반환 된 속성 <xref:System.AggregateException> 원래 개체에 포함 되어 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-169">To avoid having to iterate over nested <xref:System.AggregateException> exceptions, you can use the <xref:System.AggregateException.Flatten%2A> method to remove all the nested <xref:System.AggregateException> exceptions, so that the <xref:System.AggregateException.InnerExceptions%2A> property of the returned <xref:System.AggregateException> object contains the original exceptions.</span></span>  
  
 <span data-ttu-id="efe1e-170">이 메서드를 재귀적으로의 모든 인스턴스를 평평 하 게 <xref:System.AggregateException> 는 현재 내부 예외가 있는 예외 <xref:System.AggregateException> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="efe1e-170">This method recursively flattens all instances of  <xref:System.AggregateException> exceptions that are inner exceptions of the current <xref:System.AggregateException> instance .</span></span> <span data-ttu-id="efe1e-171">새 반환 된 내부 예외 <xref:System.AggregateException> 현재에서 시작 하는 예외 트리에서 내부 예외를 모두의 union은 <xref:System.AggregateException> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="efe1e-171">The inner exceptions returned in the new <xref:System.AggregateException> are the union of all the inner exceptions from exception tree rooted at the current <xref:System.AggregateException> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe1e-172">다음 예제에서는 중첩된 <xref:System.AggregateException> 인스턴스가 하나의 루프에서 결합되고 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-172">In the following example, nested <xref:System.AggregateException> instances are flattened and handled in just one loop.</span></span>  
  
 [!code-csharp[TPL_Exceptions#22](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/flatten2.cs#22)]
 [!code-vb[TPL_Exceptions#22](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/flatten2.vb#22)]  
  
 <span data-ttu-id="efe1e-173">또한 다음 예제가 보여주는 것처럼 <xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType> 메서드를 사용하여 단일 <xref:System.AggregateException> 인스턴스에서 여러 작업에 의해 throw된 여러 <xref:System.AggregateException> 인스턴스의 내부 예외를 다시 throw할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-173">You can also use the <xref:System.AggregateException.Flatten%2A?displayProperty=nameWithType> method to rethrow the inner exceptions from multiple <xref:System.AggregateException> instances thrown by multiple tasks in a single <xref:System.AggregateException> instance, as the following example shows.</span></span>  
  
 [!code-csharp[TPL_Exceptions#13](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/taskexceptions2.cs#13)]
 [!code-vb[TPL_Exceptions#13](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/taskexceptions2.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public override Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Exception ^ GetBaseException();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efe1e-174">이 예외의 근본 원인인 <see cref="T:System.AggregateException" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-174">Returns the <see cref="T:System.AggregateException" /> that is the root cause of this exception.</span></span></summary>
        <returns><span data-ttu-id="efe1e-175">이 예외의 근본 원인인 <see cref="T:System.AggregateException" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-175">Returns the <see cref="T:System.AggregateException" /> that is the root cause of this exception.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="efe1e-176">serialize된 개체 데이터를 보유하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-176">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="efe1e-177">원본 또는 대상에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-177">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="efe1e-178">serialize된 데이터를 사용하여 <see cref="T:System.AggregateException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-178">Initializes a new instance of the <see cref="T:System.AggregateException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe1e-179">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-179">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="efe1e-180">자세한 내용은 참조 [XML 및 SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-180">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efe1e-181"><paramref name="info" /> 인수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-181">The <paramref name="info" /> argument is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public void Handle (Func&lt;Exception,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Handle(class System.Func`2&lt;class System.Exception, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Handle (predicate As Func(Of Exception, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Handle(Func&lt;Exception ^, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;System.Exception,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate"><span data-ttu-id="efe1e-182">각 예외에 대해 실행할 조건자입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-182">The predicate to execute for each exception.</span></span> <span data-ttu-id="efe1e-183">조건자가 처리할 <see cref="T:System.Exception" />을 인수로 수락하여 예외가 처리되었는지 나타내는 부울을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-183">The predicate accepts as an argument the <see cref="T:System.Exception" /> to be processed and returns a Boolean to indicate whether the exception was handled.</span></span></param>
        <summary><span data-ttu-id="efe1e-184">이 <see cref="T:System.AggregateException" />에 포함된 각 <see cref="T:System.Exception" />에서 처리기를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-184">Invokes a handler on each <see cref="T:System.Exception" /> contained by this <see cref="T:System.AggregateException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe1e-185">호출할 때마다는 `predicate` 반환 true 또는 false를 여부는 <xref:System.Exception> 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-185">Each invocation of the `predicate` returns true or false to indicate whether the <xref:System.Exception> was handled.</span></span> <span data-ttu-id="efe1e-186">모든 호출 후 처리 되지 않은 예외 나 쳤으 면 처리 되지 않은 모든 예외에 놓이게 됩니다 새 <xref:System.AggregateException> 는 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-186">After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <xref:System.AggregateException> which will be thrown.</span></span> <span data-ttu-id="efe1e-187">그렇지 않은 경우는 <xref:System.AggregateException.Handle%2A> 메서드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-187">Otherwise, the <xref:System.AggregateException.Handle%2A> method simply returns.</span></span> <span data-ttu-id="efe1e-188">하는 경우의 호출은 `predicate` 예외를 throw 추가 예외 처리를 중단 하 고 throw 된 예외로 즉시 전파 해야-됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-188">If any invocations of the `predicate` throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe1e-189">일반적으로 catch 하는 예외 처리기는 <xref:System.AggregateException> 예외 사용 하 여는 `foreach` 루프 (C#) 또는 `For Each` 루프 (Visual Basic의 경우)에서 각 예외를 처리 하는 <xref:System.AggregateException.InnerExceptions%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-189">Ordinarily, an exception handler that catches an <xref:System.AggregateException> exception uses a `foreach` loop (in C#) or `For Each` loop (in Visual Basic) to handle each exception in its <xref:System.AggregateException.InnerExceptions%2A> collection.</span></span> <span data-ttu-id="efe1e-190">대신, 다음 예제에서는 사용 된 <xref:System.AggregateException.Handle%2A> 각 예외 및 없는 유일한를 다시 throw 예외를 처리할 메서드를 `CustomException` 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="efe1e-190">Instead, the following example uses the <xref:System.AggregateException.Handle%2A> method to handle each exception, and only re-throws exceptions that are not `CustomException` instances.</span></span>  
  
 [!code-csharp[TPL_Exceptions#16](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/handlemethod2.cs#16)]
 [!code-vb[TPL_Exceptions#16](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/handlemethod2.vb#16)]  
  
 <span data-ttu-id="efe1e-191">다음은 사용 하는 전체 예제는 <xref:System.AggregateException.Handle%2A> 에 대 한 특수 처리를 제공 하는 메서드는 <xref:System.UnauthorizedAccessException> 파일을 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-191">The following is a more complete example that uses the <xref:System.AggregateException.Handle%2A> method to provide special handling for an <xref:System.UnauthorizedAccessException> when enumerating files.</span></span>  
  
 [!code-csharp[TPL_Exceptions#12](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/taskexceptions.cs#12)]
 [!code-vb[TPL_Exceptions#12](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/taskexceptions.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="efe1e-192"><paramref name="predicate" /> 인수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-192">The <paramref name="predicate" /> argument is null.</span></span></exception>
        <exception cref="T:System.AggregateException"><span data-ttu-id="efe1e-193">이 <see cref="T:System.AggregateException" />에 포함된 예외는 처리되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-193">An exception contained by this <see cref="T:System.AggregateException" /> was not handled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerExceptions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Exception&gt; InnerExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Exception&gt; InnerExceptions" />
      <MemberSignature Language="DocId" Value="P:System.AggregateException.InnerExceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerExceptions As ReadOnlyCollection(Of Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Exception ^&gt; ^ InnerExceptions { System::Collections::ObjectModel::ReadOnlyCollection&lt;Exception ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efe1e-194">현재 예외를 발생시킨 <see cref="T:System.Exception" /> 인스턴스의 읽기 전용 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-194">Gets a read-only collection of the <see cref="T:System.Exception" /> instances that caused the current exception.</span></span></summary>
        <value><span data-ttu-id="efe1e-195">현재 예외를 발생시킨 <see cref="T:System.Exception" /> 인스턴스의 읽기 전용 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-195">Returns a read-only collection of the <see cref="T:System.Exception" /> instances that caused the current exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.AggregateException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AggregateException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efe1e-196">현재 <see cref="T:System.AggregateException" />의 문자열 표현을 만들고 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-196">Creates and returns a string representation of the current <see cref="T:System.AggregateException" />.</span></span></summary>
        <returns><span data-ttu-id="efe1e-197">현재 예외에 대한 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="efe1e-197">A string representation of the current exception.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>