<Type Name="Int32" FullName="System.Int32">
  <TypeSignature Language="C#" Value="public struct Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int32" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IComparable(Of Integer), IConvertible, IEquatable(Of Integer), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fa6bb-101">부호 있는 32비트 정수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-101">Represents a 32-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-102"><xref:System.Int32> 부호 있는 음수 2147483648에서 범위의 값을 가진 정수를 나타내는 변경할 수 없는 값 형식을 (클래스로 표현 되는 <xref:System.Int32.MinValue?displayProperty=nameWithType> 상수)부터 양수 2,147,483,647 (클래스로 표현 되는 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-102"><xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=nameWithType> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="fa6bb-103">또한.NET Framework는 부호 없는 32 비트 정수 값 형식과 포함 <xref:System.UInt32>, 0에서 4294967295 까지의 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-103">The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.</span></span>  
  
## <a name="instantiating-an-int32-value"></a><span data-ttu-id="fa6bb-104">인스턴스화하는 Int32 값</span><span class="sxs-lookup"><span data-stu-id="fa6bb-104">Instantiating an Int32 Value</span></span>  
 <span data-ttu-id="fa6bb-105">인스턴스화할 수 있습니다는 <xref:System.Int32> 여러 가지 방법으로 값:</span><span class="sxs-lookup"><span data-stu-id="fa6bb-105">You can instantiate an <xref:System.Int32> value in several ways:</span></span>  
  
-   <span data-ttu-id="fa6bb-106">선언할 수는 <xref:System.Int32> 변수 범위 내에 있는 정수 리터럴 값을 할당 하 고는 <xref:System.Int32> 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-106">You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="fa6bb-107">다음 예제에서는 두 개의 선언 <xref:System.Int32> 변수가이 방식으로 값을 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-107">The following example declares two <xref:System.Int32> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]
     [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]  
  
-   <span data-ttu-id="fa6bb-108">해당 범위를 초과 하는 정수 형식의 값을 할당할 수의 <xref:System.Int32> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-108">You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type.</span></span> <span data-ttu-id="fa6bb-109">캐스트 연산자에서 C# 또는 Visual Basic의 변환 메서드는 필요 하지 않은 확대 변환입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]
     [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]  
  
-   <span data-ttu-id="fa6bb-110">해당 범위를 초과 하는 숫자 형식의 값을 할당할 수의 <xref:System.Int32> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type.</span></span> <span data-ttu-id="fa6bb-111">경우는 캐스트 연산자에서 C# 및 Visual Basic의 변환 메서드 필요한 축소 변환 이므로 `Option Strict` 켜져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="fa6bb-112">숫자 값이 한 <xref:System.Single>, <xref:System.Double>, 또는 <xref:System.Decimal> 소수 부분의 처리 소수 부분을 포함 하는 값은 변환이 수행 하는 컴파일러에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="fa6bb-113">다음 예제에서는 여러 가지 숫자 값을 할당 하는 축소 변환을 수행 <xref:System.Int32> 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]
     [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]  
  
-   <span data-ttu-id="fa6bb-114">메서드를 호출할 수는 <xref:System.Convert> 변환할 수는 클래스 형식을 지원 되는 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value.</span></span> <span data-ttu-id="fa6bb-115">이것이 가능 하기 때문에 <xref:System.Int32> 지원는 <xref:System.IConvertible> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-115">This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-116">다음 예제에서는 배열 변환 <xref:System.Decimal> 값을 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.</span></span>  
  
     [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
     [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
-   <span data-ttu-id="fa6bb-117">호출할 수 있습니다는 <xref:System.Int32.Parse%2A> 또는 <xref:System.Int32.TryParse%2A> 의 문자열 표현으로 변환 하는 메서드는 <xref:System.Int32> 값을 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-117">You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>.</span></span> <span data-ttu-id="fa6bb-118">문자열에는 10 진수 또는 16 진수로 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="fa6bb-119">다음 예제에서는 10 진수 및 16 진수 문자열 모두를 사용 하 여 구문 분석 작업을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#3)]
     [!code-vb[System.Int32.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#3)]  
  
## <a name="performing-operations-on-int32-values"></a><span data-ttu-id="fa6bb-120">Int32 값에 대 한 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-120">Performing Operations on Int32 Values</span></span>  
 <span data-ttu-id="fa6bb-121"><xref:System.Int32> 형식은 더하기, 빼기, 나누기, 곱하기, 부정, 단항 부정 연산자 등과 같이 표준 수학 연산을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-121">The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="fa6bb-122">다른 정수 계열 형식과 같이 <xref:System.Int32> 형식에서는 비트 `AND`, `OR`, `XOR`, 왼쪽 시프트 및 오른쪽 시프트 연산자.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-122">Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="fa6bb-123">표준 숫자 연산자를 사용 하 여 두 개를 비교 하려면 <xref:System.Int32> 값 또는 있습니다를 호출할 수는 <xref:System.Int32.CompareTo%2A> 또는 <xref:System.Int32.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-123">You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="fa6bb-124">멤버를 호출할 수도 있습니다는 <xref:System.Math> 다양 한 범위의 숫자의 몫과 정수 나누기의 나머지를 계산 합니다. 2의 최대값 또는 최소값 값을 판별한 절대 값을 가져오는 등의 숫자 작업을 수행 하는 클래스 정수, 숫자의 부호를 가져오고 숫자를 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int32-as-a-string"></a><span data-ttu-id="fa6bb-125">문자열로 서 Int32 나타내는</span><span class="sxs-lookup"><span data-stu-id="fa6bb-125">Representing an Int32 as a String</span></span>  
 <span data-ttu-id="fa6bb-126"><xref:System.Int32> 형식은 표준 및 사용자 지정 숫자 형식 문자열에 대 한 완벽 한 지원 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-126">The <xref:System.Int32> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="fa6bb-127">(자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md), [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md), 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span><span class="sxs-lookup"><span data-stu-id="fa6bb-127">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
 <span data-ttu-id="fa6bb-128">서식을 지정 하려면는 <xref:System.Int32> 값 선행 0이 없는 정수 계열 문자열로 매개 변수가 없는 호출 수 <xref:System.Int32.ToString> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-128">To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="fa6bb-129">"D" 형식 지정자를 사용 하 여 지정된 된 수의 문자열 표현에서 앞에 오는 0 포함할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="fa6bb-130">"N" 형식 지정자를 사용 하 여 그룹 구분 기호 등 숫자의 문자열 표현에 표시할 소수 자릿수 수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="fa6bb-131">"X" 형식 지정자를 사용 하 여 나타낼 수 있습니다는 <xref:System.Int32> 16 진수 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-131">By using the "X" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string.</span></span> <span data-ttu-id="fa6bb-132">다음 예제에서는 배열의 요소를 서식을 <xref:System.Int32> 이러한 네 가지 방법으로 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-132">The following example formats the elements in an array of <xref:System.Int32> values in these four ways.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#1)]
 [!code-vb[System.Int32.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#1)]  
  
 <span data-ttu-id="fa6bb-133">서식을 지정할 수 있습니다는 <xref:System.Int32> 8 진수 이진으로 호출 하 여 10 진수 또는 16 진수 문자열 값의 <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> 메서드와 메서드의 두 번째 매개 변수로 기본을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-133">You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="fa6bb-134">다음 예제에서는이 메서드를 호출 8 진수 이진 파일을 표시 하는 일련의 정수 값의 16 진수 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#2)]
 [!code-vb[System.Int32.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="fa6bb-135">10 진수가 아닌 32 비트 정수 값 작업</span><span class="sxs-lookup"><span data-stu-id="fa6bb-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="fa6bb-136">10 진수 값으로 개별 정수를 사용 하는 것 외에도 정수 값으로 비트 연산을 수행 하거나 정수 값의 이진 또는 16 진수 표현을 사용 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-136">In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values.</span></span> <span data-ttu-id="fa6bb-137"><xref:System.Int32> 값은 30 초 비트를 부호 비트로 사용 된 31 비트에서 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-137"><xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit.</span></span> <span data-ttu-id="fa6bb-138">양수 부호 및 크기 표현을 사용 하 여 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="fa6bb-139">음수 값은 2의 보수 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="fa6bb-140">이 비트 작업을 수행할 때 고려해 야 하는 것이 중요 <xref:System.Int32> 값 또는 개별 비트를 사용 하 여 작업할 때.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits.</span></span> <span data-ttu-id="fa6bb-141">숫자, 부울 또는 모든 두 개의 10 진수가 아닌 값 비교 작업을 수행 하려면 두 값이 동일한 표현을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="fa6bb-142">이 유형의 모든 멤버는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-142">All members of this type are thread safe.</span></span> <span data-ttu-id="fa6bb-143">멤버 인스턴스 상태를 수정 하려면 표시 되는 실제로 새 값으로 초기화 하는 새 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="fa6bb-144">으로 다른 종류와이 형식의 인스턴스를 포함 하는 공유 변수를 읽고 쓰는 보호 해야 스레드로부터 안전을 보장 하려면 잠금에 의해.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt32" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa6bb-145">이 인스턴스를 지정된 개체나 <see cref="T:System.Int32" />와 비교하여 상대 값의 표시를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-145">Compares this instance to a specified object or <see cref="T:System.Int32" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(int value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fa6bb-146">비교할 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-146">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="fa6bb-147">이 인스턴스를 지정된 32비트 부호 있는 정수와 비교하여 상대 값의 표시를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-147">Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-148">이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-148">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fa6bb-149"><list type="table"><listheader><term> 반환 값</span><span class="sxs-lookup"><span data-stu-id="fa6bb-149"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="fa6bb-150"></term><description> 설명</span><span class="sxs-lookup"><span data-stu-id="fa6bb-150"></term><description> Description</span></span>  
  
 <span data-ttu-id="fa6bb-151"></description></listheader><item><term> 0보다 작음</span><span class="sxs-lookup"><span data-stu-id="fa6bb-151"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="fa6bb-152"></term><description> 이 인스턴스는 <paramref name="value" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-152"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fa6bb-153"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="fa6bb-153"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="fa6bb-154"></term><description> 이 인스턴스는 <paramref name="value" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-154"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fa6bb-155"></description></item><item><term> 0보다 큼</span><span class="sxs-lookup"><span data-stu-id="fa6bb-155"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="fa6bb-156"></term><description> 이 인스턴스는 <paramref name="value" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-156"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-157">이 메서드를 구현 하는 <xref:System.IComparable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 메서드 변환할 필요가 없기 때문에 `value` 매개 변수를 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-157">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="fa6bb-158">프로그래밍 언어에 따라 코딩할 수는 <xref:System.Int32.CompareTo%2A> 메서드 매개 변수 형식이 비트 수가 적은 보다 인스턴스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-158">Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="fa6bb-159">일부 프로그래밍 언어 매개 변수를 나타내는 형식으로 비트 수는 인스턴스와 암시적 확대 변환을 수행 하기 때문에 이것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-159">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="fa6bb-160">예를 들어 인스턴스 형식이 <xref:System.Int32> 매개 변수 형식이 고 <xref:System.Byte>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-160">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="fa6bb-161">Microsoft C# 컴파일러는 매개 변수의 값을 표시 하는 명령을 생성는 <xref:System.Int32>, 다음 생성 한 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 의 값을 비교 하는 메서드는 <xref:System.Int32> 인스턴스 및 <xref:System.Int32> 매개 변수 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-161">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="fa6bb-162">해당 컴파일러에서 숫자 형식에 암시적으로 확대 변환을 수행 여부를 확인 하려면 해당 프로그래밍 언어의 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-162">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-163">다음 예제는 <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-163">The following example demonstrates the <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fa6bb-164">네 가지 비교 메서드에 의해 반환 되는 값을 표시할 뿐 아니라 사용자 지정의 멤버에 반환 값은 변환 `Comparison` 열거형도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-164">In addition to displaying the value returned by the method for four different comparisons, it converts the return value to a member of the custom `Comparison` enumeration, whose value it also displays.</span></span>  
  
 [!code-csharp[System.Int32.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.CompareTo/cs/CompareTo1.cs#1)]
 [!code-vb[System.Int32.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.CompareTo/vb/CompareTo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fa6bb-165">비교할 개체 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-165">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fa6bb-166">이 인스턴스를 지정된 개체와 비교하여 상대 값의 표시를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-166">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-167">이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-167">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fa6bb-168"><list type="table"><listheader><term> 반환 값</span><span class="sxs-lookup"><span data-stu-id="fa6bb-168"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="fa6bb-169"></term><description> 설명</span><span class="sxs-lookup"><span data-stu-id="fa6bb-169"></term><description> Description</span></span>  
  
 <span data-ttu-id="fa6bb-170"></description></listheader><item><term> 0보다 작음</span><span class="sxs-lookup"><span data-stu-id="fa6bb-170"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="fa6bb-171"></term><description> 이 인스턴스는 <paramref name="value" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-171"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fa6bb-172"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="fa6bb-172"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="fa6bb-173"></term><description> 이 인스턴스는 <paramref name="value" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-173"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fa6bb-174"></description></item><item><term> 0보다 큼</span><span class="sxs-lookup"><span data-stu-id="fa6bb-174"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="fa6bb-175"></term><description> 이 인스턴스는 <paramref name="value" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-175"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="fa6bb-176">또는</span><span class="sxs-lookup"><span data-stu-id="fa6bb-176">-or-</span></span>  
  
 <span data-ttu-id="fa6bb-177"><paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-177"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-178">모든 인스턴스 <xref:System.Int32>, 해당 값에 관계 없이 보다 큰 것으로 간주 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-178">Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="fa6bb-179">`value` 해야 `null` 또는 인스턴스의 <xref:System.Int32>, 그러지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-179">`value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fa6bb-180"><paramref name="value" />이 <see cref="T:System.Int32" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-180"><paramref name="value" /> is not an <see cref="T:System.Int32" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa6bb-181">이 인스턴스가 지정된 개체나 <see cref="T:System.Int32" />과 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-181">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(int obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fa6bb-182">이 인스턴스와 비교할 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-182">An <see cref="T:System.Int32" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="fa6bb-183">이 인스턴스가 지정된 <see cref="T:System.Int32" /> 값과 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-183">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="fa6bb-184"><see langword="true" />가 이 인터페이스와 같은 값을 가지면 <paramref name="obj" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-184"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-185">이 메서드를 구현 하는 <xref:System.IEquatable%601?displayProperty=nameWithType> 인터페이스를 하 고 수행 보다 조금 더 나은 <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> 변환할 필요가 없기 때문에 `obj` 매개 변수를 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-185">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="fa6bb-186">컴파일러 오버 로드 확인의 두 동작에는 명백한 차이 고려 될 수 있습니다 <see cref="M:System.Int32.Equals(System.Int32)" /> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-186">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="fa6bb-187">경우 간에 암시적 변환이 <paramref name="obj" /> 인수 및 <see cref="T:System.Int32" /> 정의 및 인수 인수로 형식화 되지 않습니다는 <see cref="T:System.Object" />, 컴파일러는 암시적 변환 및 호출을 수행는 <see cref="M:System.Int32.Equals(System.Int32)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-187">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="fa6bb-188">호출 그렇지 않은 경우는 <see cref="M:System.Int32.Equals(System.Object)" /> 메서드는 항상 반환 <see langword="false" /> 경우 해당 <paramref name="obj" /> 인수가 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-188">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="fa6bb-189">다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-189">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="fa6bb-190">경우에 <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, 및 <see cref="T:System.UInt16" /> 값을 반환 하는 첫 번째 비교 <see langword="true" /> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <see cref="M:System.Int32.Equals(System.Int32)" /> 메서드를 반면는 비교 반환의 두 번째 <see langword="false" /> 컴파일러를 호출 하기 때문에 <see cref="M:System.Int32.Equals(System.Object)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-190">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)]
 [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fa6bb-191">이 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-191">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="fa6bb-192">이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-192">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="fa6bb-193"><see langword="true" />가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.Int32" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-193"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa6bb-194">다음 예제에서는 `Equals` 의 컨텍스트에서 `Int32`, 두 개의 비교 `int` 값과 반환 `true` 같은 값을 나타내는 경우 또는 `false` 일치 하지 않을 경우.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-194">The following example illustrates the use of `Equals` in the context of `Int32`, comparing two `int` values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int32_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int32_Equals/CPP/int32_equals.cpp#1)]
 [!code-csharp[Int32_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int32_Equals/CS/int32_equals.cs#1)]
 [!code-vb[Int32_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int32_Equals/VB/int32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="fa6bb-195">컴파일러 오버 로드 확인의 두 동작에는 명백한 차이 고려 될 수 있습니다 <see cref="M:System.Int32.Equals(System.Int32)" /> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-195">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="fa6bb-196">경우 간에 암시적 변환이 <paramref name="obj" /> 인수 및 <see cref="T:System.Int32" /> 정의 및 인수 인수로 형식화 되지 않습니다는 <see cref="T:System.Object" />, 컴파일러는 암시적 변환 및 호출을 수행는 <see cref="M:System.Int32.Equals(System.Int32)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-196">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="fa6bb-197">호출 그렇지 않은 경우는 <see cref="M:System.Int32.Equals(System.Object)" /> 메서드는 항상 반환 <see langword="false" /> 경우 해당 <paramref name="obj" /> 인수가 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-197">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="fa6bb-198">다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-198">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="fa6bb-199">경우에 <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, 및 <see cref="T:System.UInt16" /> 값을 반환 하는 첫 번째 비교 <see langword="true" /> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <see cref="M:System.Int32.Equals(System.Int32)" /> 메서드를 반면는 비교 반환의 두 번째 <see langword="false" /> 컴파일러를 호출 하기 때문에 <see cref="M:System.Int32.Equals(System.Object)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-199">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)]
 [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</para>
        </block>
        <altmember cref="M:System.Int32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa6bb-200">이 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-200">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-201">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-201">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa6bb-202"><see cref="T:System.TypeCode" /> 값 형식에 대한 <see cref="T:System.Int32" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-202">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-203">열거형 상수인 <see cref="F:System.TypeCode.Int32" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-203">The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const int MaxValue = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValue = int32(2147483647)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Integer  = 2147483647" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxValue = 2147483647;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fa6bb-204"><see cref="T:System.Int32" />의 최대값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-204">Represents the largest possible value of an <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="fa6bb-205">이 필드는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-205">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-206">이 상수의 값은 2147483647; 즉, 16 진수 0x7FFFFFFF 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-206">The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-207">다음 예제에서는 <xref:System.Int32.MaxValue> 를 방지 하려면 속성은 <xref:System.OverflowException> 변환할 때는 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-207">The following example uses the <xref:System.Int32.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const int MinValue = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinValue = int32(-2147483648)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Integer  = -2147483648" />
      <MemberSignature Language="C++ CLI" Value="public: int MinValue = -2147483648;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fa6bb-208"><see cref="T:System.Int32" />의 가능한 최소값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-208">Represents the smallest possible value of <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="fa6bb-209">이 필드는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-209">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-210">이 상수의 값은-2147483648; 즉, 16 진수 0x80000000입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-210">The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-211">다음 예제에서는 <xref:System.Int32.MinValue> 를 방지 하려면 속성은 <xref:System.OverflowException> 변환할 때는 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-211">The following example uses the <xref:System.Int32.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa6bb-212">숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-212">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fa6bb-213">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-213">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="fa6bb-214">숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-214">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-215"><paramref name="s" />에 있는 수에 해당하는 32비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-215">A 32-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-216">`s` 매개 변수 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-216">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="fa6bb-217">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="fa6bb-217">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="fa6bb-218">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-218">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="fa6bb-219">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-219">The following table describes each element.</span></span>  
  
|<span data-ttu-id="fa6bb-220">요소</span><span class="sxs-lookup"><span data-stu-id="fa6bb-220">Element</span></span>|<span data-ttu-id="fa6bb-221">설명</span><span class="sxs-lookup"><span data-stu-id="fa6bb-221">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="fa6bb-222">ws</span><span class="sxs-lookup"><span data-stu-id="fa6bb-222">ws</span></span>|<span data-ttu-id="fa6bb-223">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-223">Optional white space.</span></span>|  
|<span data-ttu-id="fa6bb-224">sign</span><span class="sxs-lookup"><span data-stu-id="fa6bb-224">sign</span></span>|<span data-ttu-id="fa6bb-225">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-225">An optional sign.</span></span>|  
|<span data-ttu-id="fa6bb-226">digits</span><span class="sxs-lookup"><span data-stu-id="fa6bb-226">digits</span></span>|<span data-ttu-id="fa6bb-227">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-227">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="fa6bb-228">`s` 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-228">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="fa6bb-229">10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-229">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="fa6bb-230">에 나타날 수 있는 스타일 요소를 명시적으로 정의 하려면 `s`를 사용 하 여는 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 또는 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-230">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="fa6bb-231">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 초기화는 현재 시스템 문화권에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-231">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="fa6bb-232">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-232">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="fa6bb-233">다른 문화권의 서식 지정 정보를 사용 하 여 문자열의 구문을 분석을 사용 하 여는 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-233">To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-234">다음 예제에서는 문자열 값을 사용 하 여 32 비트 부호 있는 정수 값으로 변환 하는 <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-234">The following example demonstrates how to convert a string value into a 32-bit signed integer value using the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fa6bb-235">결과 정수 값 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-235">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int32.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int32.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Int32.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa6bb-236"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-236"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="fa6bb-237"><paramref name="s" />의 형식이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-237"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="fa6bb-238"><paramref name="s" />가 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-238"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fa6bb-239">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-239">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="fa6bb-240"><c>s</c>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-240">A bitwise combination of the enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="fa6bb-241">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-241">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="fa6bb-242">지정된 스타일로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-242">Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-243"><paramref name="s" />에 지정된 수에 해당하는 32비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-243">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-244">`style` 스타일 요소를 정의 하는 매개 변수 (예: 공백, 양수 또는 음수 부호 기호 또는 1000 단위 구분 기호)에 허용 되는 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-244">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="fa6bb-245">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-245">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="fa6bb-246">값에 따라 `style`, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-246">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="fa6bb-247">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="fa6bb-247">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="fa6bb-248">또는 if `style` 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="fa6bb-248">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="fa6bb-249">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="fa6bb-249">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="fa6bb-250">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-250">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="fa6bb-251">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-251">The following table describes each element.</span></span>  
  
|<span data-ttu-id="fa6bb-252">요소</span><span class="sxs-lookup"><span data-stu-id="fa6bb-252">Element</span></span>|<span data-ttu-id="fa6bb-253">설명</span><span class="sxs-lookup"><span data-stu-id="fa6bb-253">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="fa6bb-254">*ws*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-254">*ws*</span></span>|<span data-ttu-id="fa6bb-255">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-255">Optional white space.</span></span> <span data-ttu-id="fa6bb-256">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-256">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="fa6bb-257">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-257">A culture-specific currency symbol.</span></span> <span data-ttu-id="fa6bb-258">문자열에 해당 위치는 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 현재 문화권의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-258">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="fa6bb-259">현재 문화권의 통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-259">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-260">*sign*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-260">*sign*</span></span>|<span data-ttu-id="fa6bb-261">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-261">An optional sign.</span></span> <span data-ttu-id="fa6bb-262">부호의 시작 부분에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-262">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="fa6bb-263">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-263">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-264">*digits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-264">*digits*</span></span><br /><br /> <span data-ttu-id="fa6bb-265">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-265">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="fa6bb-266">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-266">*exponential_digits*</span></span>|<span data-ttu-id="fa6bb-267">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-267">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="fa6bb-268">에 대 한 *소수 자릿수*숫자 0은 유효한만 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-268">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="fa6bb-269">*,*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-269">*,*</span></span>|<span data-ttu-id="fa6bb-270">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-270">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="fa6bb-271">현재 문화권의 천 단위 구분 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-271">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-272">*.*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-272">*.*</span></span>|<span data-ttu-id="fa6bb-273">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-273">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="fa6bb-274">에 현재 문화권의 소수점 기호가 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-274">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="fa6bb-275">숫자 0만 구문 분석 작업이 성공; 소수 자리 수로 표시 될 수 있습니다. 경우 *소수 자릿수* 기타 숫자를 포함 한 <xref:System.OverflowException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-275">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="fa6bb-276">*e*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-276">*e*</span></span>|<span data-ttu-id="fa6bb-277">'E' 또는 'E' 문자는 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-277">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="fa6bb-278">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-278">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-279">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-279">*hexdigits*</span></span>|<span data-ttu-id="fa6bb-280">16 진수 숫자 0 ~ f 또는 0-6.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-280">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="fa6bb-281">숫자만 문자열 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 스타일) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-281">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="fa6bb-282">나머지 <xref:System.Globalization.NumberStyles> 멤버 요소는 입력된 문자열에 필요 하지 않을 수도 있는 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-282">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="fa6bb-283">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-283">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="fa6bb-284">NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="fa6bb-284">NumberStyles value</span></span>|<span data-ttu-id="fa6bb-285">S에서 숫자 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="fa6bb-285">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="fa6bb-286">*자릿수* 요소만 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-286">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="fa6bb-287">소수점 ( *합니다.*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-287">The decimal point ( *.*</span></span> <span data-ttu-id="fa6bb-288">) 및 *소수 자릿수가* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-288">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="fa6bb-289">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-289">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="fa6bb-290">*ws* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-290">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="fa6bb-291">*ws* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-291">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="fa6bb-292">*기호* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-292">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="fa6bb-293">*기호* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-293">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="fa6bb-294">*기호* 숫자 값이 들어 괄호 안에 형식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-294">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="fa6bb-295">1000 단위 구분 기호 ( *,* ) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-295">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="fa6bb-296">* $ * 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-296">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="fa6bb-297">모두.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-297">All.</span></span> <span data-ttu-id="fa6bb-298">`s` 매개 변수를 16 진수 숫자 또는 지 수 표기법으로 숫자를에서 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-298">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="fa6bb-299">*ws* 부분이 나 끝 부분에 요소 `s`, *기호* 맨 앞에 `s`, 소수점 및 ( *합니다.*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-299">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="fa6bb-300">) 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-300">) symbol.</span></span> <span data-ttu-id="fa6bb-301">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-301">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="fa6bb-302">`ws`, `sign`, 1000 단위 구분 기호 ( *,* ), 소수점 및 ( *합니다.*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-302">The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="fa6bb-303">) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-303">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="fa6bb-304">모든 스타일 제외 하 고 `s` 16 진수를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-304">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="fa6bb-305">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 접두사 없이 16 진수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-305">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="fa6bb-306">예를 들어 "C9AF3" 성공적으로 구문 분석 하지만 "0xC9AF3" 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-306">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="fa6bb-307">다른 플래그만 함께 사용할 수 있는 `s` 매개 변수는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-307">The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fa6bb-308">(의 <xref:System.Globalization.NumberStyles> 열거형 복합 숫자 스타일에 포함 됩니다. <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 공백 플래그가 모두를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="fa6bb-308">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="fa6bb-309">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 현재 시스템 문화권에 따라 초기화 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-309">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="fa6bb-310">구문 분석 작업에 대 한 서식 지정 정보를 가져올 사용 되는 문화권을 지정 하려면 호출는 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-310">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-311">다음 예제에서는 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 메서드를 여러의 문자열 표현을 구문 분석 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-311">The following example uses the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int32> values.</span></span> <span data-ttu-id="fa6bb-312">이 예제에 대 한 현재 문화권이 EN-US입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-312">The current culture for the example is en-US.</span></span>  
  
 [!code-cpp[System.Int32.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int32.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int32.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa6bb-313"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-313"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fa6bb-314"><paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-314"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="fa6bb-315">또는</span><span class="sxs-lookup"><span data-stu-id="fa6bb-315">-or-</span></span>  
  
 <span data-ttu-id="fa6bb-316"><paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 및 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 값의 조합이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-316"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="fa6bb-317"><paramref name="s" />의 형식이 <paramref name="style" />과 호환되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-317"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="fa6bb-318"><paramref name="s" />가 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-318"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="fa6bb-319">또는</span><span class="sxs-lookup"><span data-stu-id="fa6bb-319">-or-</span></span>  
  
 <span data-ttu-id="fa6bb-320"><paramref name="s" />에 0이 아닌 소수 자릿수가 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-320"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fa6bb-321">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-321">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="fa6bb-322"><c>s</c>에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-322">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fa6bb-323">지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-323">Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-324"><paramref name="s" />에 지정된 수에 해당하는 32비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-324">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-325">이 오버 로드는 <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> 메서드는 여러 가지 방법으로 서식을 지정할 수 있는 텍스트 변환 데 일반적으로 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-325">This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value.</span></span> <span data-ttu-id="fa6bb-326">예를 들어 숫자 값으로 HTML 텍스트 상자에 사용자가 입력 한 텍스트 변환에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-326">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="fa6bb-327">`s` 매개 변수 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-327">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="fa6bb-328">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="fa6bb-328">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="fa6bb-329">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-329">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="fa6bb-330">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-330">The following table describes each element.</span></span>  
  
|<span data-ttu-id="fa6bb-331">요소</span><span class="sxs-lookup"><span data-stu-id="fa6bb-331">Element</span></span>|<span data-ttu-id="fa6bb-332">설명</span><span class="sxs-lookup"><span data-stu-id="fa6bb-332">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="fa6bb-333">*ws*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-333">*ws*</span></span>|<span data-ttu-id="fa6bb-334">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-334">Optional white space.</span></span>|  
|<span data-ttu-id="fa6bb-335">*sign*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-335">*sign*</span></span>|<span data-ttu-id="fa6bb-336">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-336">An optional sign.</span></span>|  
|<span data-ttu-id="fa6bb-337">*digits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-337">*digits*</span></span>|<span data-ttu-id="fa6bb-338">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-338">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="fa6bb-339">`s` 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-339">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="fa6bb-340">10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-340">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="fa6bb-341">에 나타날 수 있는 스타일 요소를 명시적으로 정의 하려면 `s`를 사용 하 여는 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-341">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="fa6bb-342">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현에서와 같은 <xref:System.Globalization.NumberFormatInfo> 또는 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-342">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="fa6bb-343">`provider` 의 형식에 대 한 문화권별 정보를 제공 하는 매개 변수 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-343">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="fa6bb-344">경우 `provider` 은 `null`, <xref:System.Globalization.NumberFormatInfo> 개체가 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-344">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-345">다음 예제에서는 단추 클릭 Web form의 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-345">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="fa6bb-346">반환 된 배열을 사용 하 여는 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> 속성을 사용자의 로캘을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-346">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="fa6bb-347">그런 다음는 <xref:System.Globalization.CultureInfo> 해당 로캘에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-347">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="fa6bb-348"><xref:System.Globalization.NumberFormatInfo> 하에 속하는 개체는 <xref:System.Globalization.CultureInfo> 에 다음 전달 된 개체는 <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> 메서드는 사용자 입력을 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-348">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[ParseMethod#4](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#4)]
 [!code-vb[ParseMethod#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa6bb-349"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-349"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="fa6bb-350"><paramref name="s" />의 형식이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-350"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="fa6bb-351"><paramref name="s" />가 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-351"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fa6bb-352">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-352">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="fa6bb-353"><c>s</c>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-353">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="fa6bb-354">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-354">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="fa6bb-355"><c>s</c>의 형식에 대한 문화권별 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-355">An object that supplies culture-specific information about the format of <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="fa6bb-356">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-356">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-357"><paramref name="s" />에 지정된 수에 해당하는 32비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-357">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-358">`style` 매개 변수 (예: 공백 또는 양수 부호)에 사용할 수 있는 스타일 요소를 정의 고 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-358">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="fa6bb-359">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-359">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="fa6bb-360">값에 따라 `style`, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-360">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="fa6bb-361">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="fa6bb-361">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="fa6bb-362">또는 if `style` 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="fa6bb-362">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="fa6bb-363">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="fa6bb-363">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="fa6bb-364">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-364">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="fa6bb-365">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-365">The following table describes each element.</span></span>  
  
|<span data-ttu-id="fa6bb-366">요소</span><span class="sxs-lookup"><span data-stu-id="fa6bb-366">Element</span></span>|<span data-ttu-id="fa6bb-367">설명</span><span class="sxs-lookup"><span data-stu-id="fa6bb-367">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="fa6bb-368">*ws*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-368">*ws*</span></span>|<span data-ttu-id="fa6bb-369">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-369">Optional white space.</span></span> <span data-ttu-id="fa6bb-370">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-370">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="fa6bb-371">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-371">A culture-specific currency symbol.</span></span> <span data-ttu-id="fa6bb-372">위치는 문자열에 의해 정의 됩니다는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Globalization.NumberFormatInfo> 에서 반환 된 개체는 <xref:System.IFormatProvider.GetFormat%2A> 의 메서드는 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-372">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="fa6bb-373">통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-373">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-374">*sign*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-374">*sign*</span></span>|<span data-ttu-id="fa6bb-375">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-375">An optional sign.</span></span> <span data-ttu-id="fa6bb-376">부호의 시작 부분에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 플래그의 끝에 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-376">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="fa6bb-377">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-377">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-378">*digits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-378">*digits*</span></span><br /><br /> <span data-ttu-id="fa6bb-379">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-379">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="fa6bb-380">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-380">*exponential_digits*</span></span>|<span data-ttu-id="fa6bb-381">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-381">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="fa6bb-382">에 대 한 *소수 자릿수*숫자 0은 유효한만 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-382">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="fa6bb-383">*,*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-383">*,*</span></span>|<span data-ttu-id="fa6bb-384">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-384">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="fa6bb-385">1000 단위 구분 기호에 지정 된 문화권의 `provider` 에 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-385">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-386">*.*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-386">*.*</span></span>|<span data-ttu-id="fa6bb-387">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-387">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="fa6bb-388">에 지정 된 문화권의 소수점 기호가 `provider` 에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-388">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="fa6bb-389">숫자 0만 구문 분석 작업이 성공; 소수 자리 수로 표시 될 수 있습니다. 경우 *소수 자릿수* 기타 숫자를 포함 한 <xref:System.OverflowException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-389">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="fa6bb-390">*e*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-390">*e*</span></span>|<span data-ttu-id="fa6bb-391">'E' 또는 'E' 문자는 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-391">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="fa6bb-392">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-392">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-393">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-393">*hexdigits*</span></span>|<span data-ttu-id="fa6bb-394">16 진수 숫자 0 ~ f 또는 0-6.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-394">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="fa6bb-395">숫자만 있는 문자열 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 스타일)의 범위에 있으면 항상 성공적으로 구문 분석은 <xref:System.Int32> 형식.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-395">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int32> type.</span></span> <span data-ttu-id="fa6bb-396">나머지 <xref:System.Globalization.NumberStyles> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-396">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="fa6bb-397">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-397">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="fa6bb-398">비 복합 NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="fa6bb-398">Non-composite NumberStyles values</span></span>|<span data-ttu-id="fa6bb-399">S에서 숫자 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="fa6bb-399">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-400">10 진수 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-400">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-401">소수점 ( *합니다.*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-401">The decimal point ( *.*</span></span> <span data-ttu-id="fa6bb-402">) 및 *소수 자릿수가* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-402">) and *fractional-digits* elements.</span></span> <span data-ttu-id="fa6bb-403">그러나 *소수 자릿수가* 0 숫자가 하나 이상 구성 되어야 합니다 또는 <xref:System.OverflowException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-403">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-404">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-404">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="fa6bb-405">경우 `s` 지 수 표기법으로 숫자를 나타내는, 나타내야의 범위 내의 정수는 <xref:System.Int32> , 0이 아닌 소수 부분이 없는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-405">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-406">*ws* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-406">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-407">*ws* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-407">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-408">양수 부호 앞에 올 수 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-408">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-409">양수 부호 후 나타날 수 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-409">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-410">*기호* 숫자 값이 들어 괄호 안에 형식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-410">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-411">1000 단위 구분 기호 ( *,* ) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-411">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-412">* $ * 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-412">The *$* element.</span></span>|  
  
 <span data-ttu-id="fa6bb-413">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 접두사 없이 16 진수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-413">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="fa6bb-414">예를 들어 "C9AF3" 성공적으로 구문 분석 하지만 "0xC9AF3" 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-414">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="fa6bb-415">다른 플래그만에 있을 수 있는 `style` 는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-415">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fa6bb-416">(의 <xref:System.Globalization.NumberStyles> 열거형에는 복합 숫자 스타일 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 공백 플래그가 모두를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="fa6bb-416">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="fa6bb-417">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현에서와 같은 <xref:System.Globalization.NumberFormatInfo> 또는 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-417">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="fa6bb-418">`provider` 매개 변수에서 구문 분석에 사용 되는 문화권별 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-418">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="fa6bb-419">경우 `provider` 은 `null`, <xref:System.Globalization.NumberFormatInfo> 개체가 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-419">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-420">다음 예제에서는 다양 한 `style` 및 `provider` 의 문자열 표현을 구문 분석에 매개 변수 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-420">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int32> values.</span></span> <span data-ttu-id="fa6bb-421">일부 구문 분석 작업에 대 한 서식 지정 정보를 가져올 사용 되는 문화권에 따라 동일한 문자열을 해석할 수는 여러 가지 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-421">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  
  
 [!code-cpp[System.Int32.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int32.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse3.cs#3)]
 [!code-vb[System.Int32.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa6bb-422"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-422"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fa6bb-423"><paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-423"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="fa6bb-424">또는</span><span class="sxs-lookup"><span data-stu-id="fa6bb-424">-or-</span></span>  
  
 <span data-ttu-id="fa6bb-425"><paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 및 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 값의 조합이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-425"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="fa6bb-426"><paramref name="s" />의 형식이 <paramref name="style" />과 호환되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-426"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="fa6bb-427"><paramref name="s" />가 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-427"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="fa6bb-428">또는</span><span class="sxs-lookup"><span data-stu-id="fa6bb-428">-or-</span></span>  
  
 <span data-ttu-id="fa6bb-429"><paramref name="s" />에 0이 아닌 소수 자릿수가 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-429"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-430">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-430">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-431">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-431">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="fa6bb-432">현재 인스턴스의 값이 0이 아니면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-432"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-433">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-433">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-434"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-434">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-435">메서드 대신 호출 하는 것은 <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-435">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-436">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-436">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-437">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-437">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-438"><see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-438">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-439">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-439">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-440"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-440">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-441">메서드 대신 호출 하는 것은 <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-441">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-442">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-442">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-443">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-443">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-444"><see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-444">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-445">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-445">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-446"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-446">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-447">메서드 대신 호출 하는 것은 <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-447">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-448">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-448">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-449">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-449">This conversion is not supported.</span></span> <span data-ttu-id="fa6bb-450">이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-450">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-451">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-451">This conversion is not supported.</span></span> <span data-ttu-id="fa6bb-452">값이 반환되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-452">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="fa6bb-453">모든 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-453">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-454">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-454">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-455">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-455">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-456"><see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-456">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-457">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-457">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-458"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-458">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-459">메서드 대신 호출 하는 것은 <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-459">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-460">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-460">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-461">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-461">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-462"><see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-462">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-463">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-464"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-464">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-465">메서드 대신 호출 하는 것은 <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-465">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-466">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-466">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-467">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-467">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-468"><see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-468">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-469">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-470"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-470">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-471">메서드 대신 호출 하는 것은 <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-471">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-472">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-472">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-473">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-473">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-474">변경되지 않은 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-474">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-475">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-476"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-476">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-477">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-477">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-478">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-478">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-479"><see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-479">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-480">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-480">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-481"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-481">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-482">메서드 대신 호출 하는 것은 <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-482">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-483">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-483">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-484">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-484">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-485"><see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-485">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-486">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-486">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-487"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-487">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-488">메서드 대신 호출 하는 것은 <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-488">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-489">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-489">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-490">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-490">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-491"><see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-491">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-492">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-492">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-493"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-493">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-494">메서드 대신 호출 하는 것은 <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-494">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fa6bb-495">이 <see cref="T:System.Int32" /> 값을 변환할 대상 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-495">The type to which to convert this <see cref="T:System.Int32" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="fa6bb-496">반환된 값의 형식에 대한 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-496">An object that provides information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="fa6bb-497">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-497">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-498"><paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-498">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-499">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-499">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-500"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-500">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-501">메서드 대신 호출 하는 것은 `static` (`Shared` Visual basic에서) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-501">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-502">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-502">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-503">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-503">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-504"><see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-504">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-505">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-505">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-506"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-506">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-507">메서드 대신 호출 하는 것은 <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-507">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-508">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-508">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-509">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-509">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-510"><see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-510">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-511">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-511">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-512"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-512">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-513">메서드 대신 호출 하는 것은 <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-513">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-514">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-514">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="fa6bb-515">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-515">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-516"><see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-516">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-517">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fa6bb-517">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa6bb-518"><xref:System.Int32> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-518">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="fa6bb-519">메서드 대신 호출 하는 것은 <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-519">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa6bb-520">이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-520">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa6bb-521">이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-521">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-522">음수 부호(값이 음수일 경우)와 0부터 9 사이의 숫자(앞에 오는 0은 사용하지 않음)들로 구성된 이 인스턴스의 값에 대한 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-522">The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-523"><xref:System.Int32.ToString> 메서드 형식을 <xref:System.Int32> 기본값 ("G" 또는 일반)에서 값을 사용 하 여 형식은 <xref:System.Globalization.NumberFormatInfo> 현재 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-523">The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="fa6bb-524">다른 형식이 나 문화권을 지정 하려는 경우 사용의 다른 오버 로드는 <xref:System.Int32.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="fa6bb-524">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="fa6bb-525">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="fa6bb-525">To use format</span></span>|<span data-ttu-id="fa6bb-526">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="fa6bb-526">For culture</span></span>|<span data-ttu-id="fa6bb-527">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="fa6bb-527">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="fa6bb-528">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-528">Default ("G") format</span></span>|<span data-ttu-id="fa6bb-529">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-529">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="fa6bb-530">특정 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-530">A specific format</span></span>|<span data-ttu-id="fa6bb-531">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-531">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="fa6bb-532">특정 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-532">A specific format</span></span>|<span data-ttu-id="fa6bb-533">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-533">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="fa6bb-534">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-534">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="fa6bb-535">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-535">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="fa6bb-536">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-536">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-537">다음 예제에서는 표시 된 <xref:System.Int32> 기본값을 사용 하 여 값 <xref:System.Int32.ToString> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-537">The following example displays an <xref:System.Int32> value using the default <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="fa6bb-538">또한의 문자열 표현을 표시는 <xref:System.Int32> 다양 한 표준 형식 지정자를 사용 하 여 얻은 값을 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-538">It also displays the string representations of the <xref:System.Int32> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="fa6bb-539">예제에서는 EN-US 문화권의 형식 규칙을 사용 하 여 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-539">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString1.cpp#1)]
 [!code-csharp[System.Int32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="fa6bb-540">문화권별 서식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-540">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="fa6bb-541">지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-541">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-542">이 인스턴스의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-542">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-543"><xref:System.Int32.ToString%28System.IFormatProvider%29> 메서드 형식을 <xref:System.Int32> 기본값 ("G" 또는 일반)에서 값을 사용 하 여 형식은 <xref:System.Globalization.NumberFormatInfo> 지정된 된 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-543">The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="fa6bb-544">다른 형식이 나 현재 문화권을 지정 하려는 경우 사용의 다른 오버 로드는 <xref:System.Int32.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="fa6bb-544">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="fa6bb-545">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="fa6bb-545">To use format</span></span>|<span data-ttu-id="fa6bb-546">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="fa6bb-546">For culture</span></span>|<span data-ttu-id="fa6bb-547">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="fa6bb-547">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="fa6bb-548">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-548">Default ("G") format</span></span>|<span data-ttu-id="fa6bb-549">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-549">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="fa6bb-550">특정 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-550">A specific format</span></span>|<span data-ttu-id="fa6bb-551">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-551">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="fa6bb-552">특정 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-552">A specific format</span></span>|<span data-ttu-id="fa6bb-553">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-553">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="fa6bb-554">`provider` 매개 변수는 구현 하는 개체는 <xref:System.IFormatProvider> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-554">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="fa6bb-555">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 이 메서드에 의해 반환 되는 문자열의 형식에 대 한 문화권별 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-555">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="fa6bb-556">구현 하는 개체 <xref:System.IFormatProvider> 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-556">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="fa6bb-557">A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 사용 하려는 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-557">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="fa6bb-558">A <xref:System.Globalization.NumberFormatInfo> 이 값에 대 한 특정 숫자 형식 지정 정보를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-558">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="fa6bb-559">구현 하는 사용자 지정 개체 <xref:System.IFormatProvider> 및 해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-559">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="fa6bb-560">경우 `provider` 은 `null` 또는 <xref:System.Globalization.NumberFormatInfo> 개체에서 가져올 수 없습니다 `provider`를 사용 하 여 반환 값의 형식이 <xref:System.Globalization.NumberFormatInfo> 현재 스레드 문화권에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-560">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="fa6bb-561">현재 스레드 문화권에 대 한 정보를 참조 하십시오. <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-561">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fa6bb-562">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-562">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="fa6bb-563">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-563">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="fa6bb-564">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-564">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-565">다음 예제에서는 표시의 문자열 표현을 <xref:System.Int32> 를 사용 하 여 값 <xref:System.Globalization.CultureInfo> 서로 다른 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-565">The following example displays the string representation of an <xref:System.Int32> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString2.cpp#2)]
 [!code-csharp[System.Int32.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#2)]
 [!code-vb[System.Int32.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="fa6bb-566">표준 또는 사용자 지정 숫자 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-566">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="fa6bb-567">지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-567">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-568">이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-568">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-569"><xref:System.Int32.ToString%28System.String%29> 메서드 형식을 <xref:System.Int32> 를 사용 하 여 지정 된 형식에서 값을 <xref:System.Globalization.NumberFormatInfo> 현재 문화권의 규칙을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-569">The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="fa6bb-570">기본값 ("G" 또는 일반)을 사용 하려는 경우 다른 문화권이 지정, 다른 오버 로드를 사용 하거나 형식는 <xref:System.Int32.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="fa6bb-570">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="fa6bb-571">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="fa6bb-571">To use format</span></span>|<span data-ttu-id="fa6bb-572">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="fa6bb-572">For culture</span></span>|<span data-ttu-id="fa6bb-573">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="fa6bb-573">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="fa6bb-574">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-574">Default ("G") format</span></span>|<span data-ttu-id="fa6bb-575">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-575">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="fa6bb-576">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-576">Default ("G") format</span></span>|<span data-ttu-id="fa6bb-577">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-577">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="fa6bb-578">특정 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-578">A specific format</span></span>|<span data-ttu-id="fa6bb-579">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-579">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="fa6bb-580">`format` 매개 변수는 "R"을 제외한 모든 유효한 표준 숫자 서식 지정자 및 사용자 지정 숫자 서식 지정자의 조합이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-580">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="fa6bb-581">경우 `format` 은 `null` 또는 빈 문자열 (""),이 인스턴스의 반환 값 ("G")는 일반 숫자 형식 지정자와 함께 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-581">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="fa6bb-582">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-582">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="fa6bb-583">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-583">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="fa6bb-584">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-584">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="fa6bb-585">이 인스턴스의 반환 값으로 지정 되는 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-585">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-586">다음 예제에서는 표시는 <xref:System.Int32> 각 지원 되는 표준 숫자 서식 지정자와 두 개의 사용자 지정 숫자 형식 문자열을 함께 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-586">The following example displays an <xref:System.Int32> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="fa6bb-587">숫자 값을 문자열로 변환,이 예제에서는 EN-US 문화권의 형식 규칙을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-587">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString3.cpp#3)]
 [!code-csharp[System.Int32.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#3)]
 [!code-vb[System.Int32.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="fa6bb-588"><paramref name="format" />이 잘못되었거나 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-588"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="fa6bb-589">표준 또는 사용자 지정 숫자 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-589">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="fa6bb-590">문화권별 서식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-590">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="fa6bb-591">지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-591">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="fa6bb-592"><paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-592">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-593"><xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> 메서드 형식을 <xref:System.Int32> 값을 사용 하 여 지정 된 형식에서 <xref:System.Globalization.NumberFormatInfo> 지정된 된 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-593">The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="fa6bb-594">다른 오버 로드를 사용 하 여 기본 형식 또는 문화권 설정을 사용 하려는 경우는 <xref:System.Int32.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="fa6bb-594">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="fa6bb-595">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="fa6bb-595">To use format</span></span>|<span data-ttu-id="fa6bb-596">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="fa6bb-596">For culture</span></span>|<span data-ttu-id="fa6bb-597">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="fa6bb-597">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="fa6bb-598">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-598">Default ("G") format</span></span>|<span data-ttu-id="fa6bb-599">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-599">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="fa6bb-600">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-600">Default ("G") format</span></span>|<span data-ttu-id="fa6bb-601">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-601">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="fa6bb-602">특정 형식</span><span class="sxs-lookup"><span data-stu-id="fa6bb-602">A specific format</span></span>|<span data-ttu-id="fa6bb-603">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="fa6bb-603">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
  
 <span data-ttu-id="fa6bb-604">`format` 표준 또는 사용자 지정 숫자 형식 문자열 매개 변수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-604">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="fa6bb-605">모든 사용자 지정 숫자 서식 문자 "R" (또는 "r") 이외의 모든 표준 숫자 형식 문자열은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-605">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="fa6bb-606">경우 `format` 은 `null` 또는 빈 문자열 ("")을이 인스턴스에 대 한 반환 값 ("G")는 일반 숫자 형식 지정자와 함께 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-606">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="fa6bb-607">`provider` 매개 변수는 구현 하는 개체는 <xref:System.IFormatProvider> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-607">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="fa6bb-608">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 이 메서드에 의해 반환 되는 문자열의 형식에 대 한 문화권별 형식 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-608">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="fa6bb-609">구현 하는 개체 <xref:System.IFormatProvider> 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-609">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="fa6bb-610">A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 사용 하려는 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-610">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="fa6bb-611">A <xref:System.Globalization.NumberFormatInfo> 이 값에 대 한 특정 숫자 형식 지정 정보를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-611">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="fa6bb-612">구현 하는 사용자 지정 개체 <xref:System.IFormatProvider> 및 해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-612">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="fa6bb-613">경우 `provider` 은 `null` 또는 <xref:System.Globalization.NumberFormatInfo> 개체에서 가져올 수 없습니다 `provider`,이 인스턴스에 대 한 반환 값으로 지정 됩니다는 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-613">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="fa6bb-614">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-614">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="fa6bb-615">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-615">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="fa6bb-616">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-616">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-617">다음 예에서는 양수 및 각 지원 되는 표준 숫자 서식 지정자를 사용 하 여 세 개의 서로 다른 문화권에 대 한 음수 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-617">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString4.cpp#4)]
 [!code-csharp[System.Int32.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#4)]
 [!code-vb[System.Int32.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="fa6bb-618"><paramref name="format" />이 잘못되었거나 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-618"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa6bb-619">숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-619">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="fa6bb-620">반환 값은 작업의 성공 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-620">A return value indicates whether the operation succeeded.</span></span></summary>
        <altmember cref="Overload:System.Int32.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fa6bb-621">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-621">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="fa6bb-622">이 메서드는 변환이 성공한 경우 <c>s</c>에 포함된 숫자의 32비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-622">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="fa6bb-623"><c>s</c> 매개 변수가 <see langword="null" /> 또는 <see cref="F:System.String.Empty" />이거나, 형식이 올바르지 않거나, <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-623">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="fa6bb-624">이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <c>result</c>에 제공된 모든 값을 덮어쓰게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-624">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="fa6bb-625">숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-625">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="fa6bb-626">반환 값은 변환의 성공 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-626">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="fa6bb-627"><see langword="true" />가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-627"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-628"><xref:System.Int32.TryParse%2A> 방법은 <xref:System.Int32.Parse%2A> 메서드를 제외 하 고는 <xref:System.Int32.TryParse%2A> 메서드는 변환이 실패할 경우 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-628">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="fa6bb-629">테스트 하기 위해 예외 처리를 사용할 필요가 <xref:System.FormatException> 에 `s` 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-629">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="fa6bb-630">`s` 매개 변수 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-630">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="fa6bb-631">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="fa6bb-631">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="fa6bb-632">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-632">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="fa6bb-633">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-633">The following table describes each element.</span></span>  
  
|<span data-ttu-id="fa6bb-634">요소</span><span class="sxs-lookup"><span data-stu-id="fa6bb-634">Element</span></span>|<span data-ttu-id="fa6bb-635">설명</span><span class="sxs-lookup"><span data-stu-id="fa6bb-635">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="fa6bb-636">*ws*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-636">*ws*</span></span>|<span data-ttu-id="fa6bb-637">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-637">Optional white space.</span></span>|  
|<span data-ttu-id="fa6bb-638">*sign*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-638">*sign*</span></span>|<span data-ttu-id="fa6bb-639">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-639">An optional sign.</span></span>|  
|<span data-ttu-id="fa6bb-640">*digits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-640">*digits*</span></span>|<span data-ttu-id="fa6bb-641">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-641">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="fa6bb-642">`s` 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-642">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="fa6bb-643">10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-643">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="fa6bb-644">명시적으로 함께 culture 별 서식 지정 정보에 포함 될 수 있는 스타일 요소를 정의 하려면 `s`를 사용 하 여는 <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-644">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="fa6bb-645">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 초기화는 현재 시스템 문화권에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-645">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="fa6bb-646">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-646">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="fa6bb-647">이 오버 로드는 <xref:System.Int32.TryParse%2A> 의 모든 자릿수 1 보다 크거나는 `s` 소수 자리 수로 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-647">This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="fa6bb-648">16 진수 숫자의 문자열 표현을 구문 분석, 호출 된 <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-648">To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-649">다음 예제에서는 <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> 메서드를 여러 가지 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-649">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse1.cpp#1)]
 [!code-csharp[System.Int32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="fa6bb-650">문자열 중 일부는 <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> 메서드는이 예제는 변환할 수 없습니다 됩니다:</span><span class="sxs-lookup"><span data-stu-id="fa6bb-650">Some of the strings that the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="fa6bb-651">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="fa6bb-651">"9432.0".</span></span> <span data-ttu-id="fa6bb-652">문자열에서 소수 구분 기호;를 포함할 수 없기 때문에 변환이 실패 정수 계열 자릿수만 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-652">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="fa6bb-653">"16,667".</span><span class="sxs-lookup"><span data-stu-id="fa6bb-653">"16,667".</span></span> <span data-ttu-id="fa6bb-654">문자열에는 그룹 구분 기호; 포함할 수 없기 때문에 변환이 실패 정수 계열 자릿수만 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-654">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="fa6bb-655">"(100)".</span><span class="sxs-lookup"><span data-stu-id="fa6bb-655">"(100)".</span></span> <span data-ttu-id="fa6bb-656">문자열의 현재 문화권에 의해 정의 된 것과 다른 음수 기호를 포함할 수 없기 때문에 변환이 실패 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-656">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="fa6bb-657">"01FA"입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-657">"01FA".</span></span> <span data-ttu-id="fa6bb-658">변환은 문자열이 16 진수; 포함할 수 없기 때문에 실패 10 진수 숫자만 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-658">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="fa6bb-659">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-659">A string containing a number to convert.</span></span> <span data-ttu-id="fa6bb-660">이 문자열은 <c>style</c>에서 지정하는 스타일을 사용하여 해석됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-660">The string is interpreted using the style specified by <c>style</c>.</span></span></param>
        <param name="style"><span data-ttu-id="fa6bb-661"><c>s</c>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-661">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="fa6bb-662">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-662">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="fa6bb-663"><c>s</c>에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-663">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="fa6bb-664">이 메서드는 변환이 성공한 경우 <c>s</c>에 포함된 숫자의 32비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-664">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="fa6bb-665"><c>s</c> 매개 변수가 <see langword="null" /> 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <c>style</c>과 호환되지 않거나, <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-665">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="fa6bb-666">이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <c>result</c>에 제공된 모든 값을 덮어쓰게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-666">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="fa6bb-667">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-667">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="fa6bb-668">반환 값은 변환의 성공 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-668">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="fa6bb-669"><see langword="true" />가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-669"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6bb-670"><xref:System.Int32.TryParse%2A> 방법은 <xref:System.Int32.Parse%2A> 메서드를 제외 하 고는 <xref:System.Int32.TryParse%2A> 메서드는 변환이 실패할 경우 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-670">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="fa6bb-671">테스트 하기 위해 예외 처리를 사용할 필요가 <xref:System.FormatException> 에 `s` 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-671">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="fa6bb-672">`style` 매개 변수 (예: 공백 또는 양수 또는 음수 기호)에 사용할 수 있는 스타일 요소를 정의 고 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-672">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="fa6bb-673">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-673">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="fa6bb-674">값에 따라 `style`, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-674">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="fa6bb-675">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="fa6bb-675">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="fa6bb-676">또는 경우에는 `style` 매개 변수를 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="fa6bb-676">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="fa6bb-677">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="fa6bb-677">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="fa6bb-678">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-678">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="fa6bb-679">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-679">The following table describes each element.</span></span>  
  
|<span data-ttu-id="fa6bb-680">요소</span><span class="sxs-lookup"><span data-stu-id="fa6bb-680">Element</span></span>|<span data-ttu-id="fa6bb-681">설명</span><span class="sxs-lookup"><span data-stu-id="fa6bb-681">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="fa6bb-682">*ws*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-682">*ws*</span></span>|<span data-ttu-id="fa6bb-683">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-683">Optional white space.</span></span> <span data-ttu-id="fa6bb-684">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 플래그를 또는 끝날 때 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-684">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="fa6bb-685">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-685">A culture-specific currency symbol.</span></span> <span data-ttu-id="fa6bb-686">위치는 문자열에 의해 정의 됩니다는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 의 속성은 <xref:System.Globalization.NumberFormatInfo> 에서 반환 된 개체는 <xref:System.IFormatProvider.GetFormat%2A> 의 메서드는 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-686">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="fa6bb-687">통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-687">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-688">*sign*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-688">*sign*</span></span>|<span data-ttu-id="fa6bb-689">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-689">An optional sign.</span></span> <span data-ttu-id="fa6bb-690">에 나타날 수는 부호 기호 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 또는 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-690">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="fa6bb-691">*digits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-691">*digits*</span></span>|<span data-ttu-id="fa6bb-692">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-692">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="fa6bb-693">*,*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-693">*,*</span></span>|<span data-ttu-id="fa6bb-694">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-694">A culture-specific thousands separator.</span></span> <span data-ttu-id="fa6bb-695">1000 단위 구분 기호에 지정 된 문화권의 `provider` 에 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-695">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-696">*.*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-696">*.*</span></span>|<span data-ttu-id="fa6bb-697">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-697">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="fa6bb-698">에 지정 된 문화권의 소수점 기호가 `provider` 에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-698">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-699">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-699">*fractional_digits*</span></span>|<span data-ttu-id="fa6bb-700">하나 이상의 숫자 0입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-700">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="fa6bb-701">소수 자릿수에 나타날 수 `s` 경우에만 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-701">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-702">*e*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-702">*e*</span></span>|<span data-ttu-id="fa6bb-703">'E' 또는 'E' 문자는 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-703">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="fa6bb-704">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-704">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="fa6bb-705">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="fa6bb-705">*hexdigits*</span></span>|<span data-ttu-id="fa6bb-706">16 진수 숫자 0 ~ f 또는 0-6.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-706">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="fa6bb-707">숫자만 있는 문자열 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 플래그) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-707">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="fa6bb-708">나머지 <xref:System.Globalization.NumberStyles> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-708">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="fa6bb-709">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-709">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="fa6bb-710">비 복합 NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="fa6bb-710">Non-composite NumberStyles values</span></span>|<span data-ttu-id="fa6bb-711">S에서 숫자 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="fa6bb-711">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-712">10 진수 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-712">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-713">소수점 (*.*) 및 *소수 자릿수* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-713">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="fa6bb-714">그러나 *소수 자릿수* 하나 이상의 0 자릿수 또는 메서드가 반환 되는 구성 되어야 합니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-714">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-715">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-715">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="fa6bb-716">경우 `s` 지 수 표기법으로 숫자를 나타내는, 나타내야의 범위 내의 정수는 <xref:System.Int32> , 0이 아닌 소수 부분이 없는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-716">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-717">*ws* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-717">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-718">*ws* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-718">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-719">기호 앞에 올 수 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-719">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-720">뒤에 기호 표시 될 수 있습니다 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-720">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-721">*기호* 숫자 값이 들어 괄호 안에 형식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-721">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-722">1000 단위 구분 기호 (*,*) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-722">The thousands separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-723">* $ * 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-723">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-724">모든 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-724">All elements.</span></span> <span data-ttu-id="fa6bb-725">`s` 매개 변수를 16 진수 숫자 또는 지 수 표기법으로 숫자를에서 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-725">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-726">*ws* 부분이 나 끝 부분에 요소 `s`, *기호* 맨 앞에 `s`, 소수점 및 (*.*) 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-726">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="fa6bb-727">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-727">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-728">*ws*, *기호*, 1000 단위 구분 기호 (*,*), 소수점 및 (*.*) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-728">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="fa6bb-729">모든 스타일 제외 하 고 `s` 16 진수를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-729">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="fa6bb-730">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 접두사 없이 16 진수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-730">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="fa6bb-731">예를 들어 "C9AF3" 성공적으로 구문 분석 하지만 "0xC9AF3" 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-731">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="fa6bb-732">다른 플래그만에 있을 수 있는 `style` 는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-732">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fa6bb-733">(의 <xref:System.Globalization.NumberStyles> 열거형에는 복합 스타일 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 공백 플래그가 모두를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="fa6bb-733">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="fa6bb-734">`provider` 매개 변수는는 <xref:System.IFormatProvider> 구현에서와 같은 한 <xref:System.Globalization.CultureInfo> 개체 또는 <xref:System.Globalization.NumberFormatInfo> 개체의 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-734">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="fa6bb-735"><xref:System.Globalization.NumberFormatInfo> 개체의 형식에 대 한 문화권별 정보를 제공 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-735">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="fa6bb-736">경우 `provider` 은 `null`, <xref:System.Globalization.NumberFormatInfo> 개체가 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-736">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa6bb-737">다음 예제에서는 <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> 메서드는 여러 가지 다른 문자열 및 <xref:System.Globalization.NumberStyles> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-737">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse2.cpp#2)]
 [!code-csharp[System.Int32.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int32.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fa6bb-738"><paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="fa6bb-738"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="fa6bb-739">또는</span><span class="sxs-lookup"><span data-stu-id="fa6bb-739">-or-</span></span>  
  
 <span data-ttu-id="fa6bb-740"><paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 및 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 값의 조합이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="fa6bb-740"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>