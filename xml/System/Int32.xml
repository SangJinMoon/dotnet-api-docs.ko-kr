<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Int32.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a761dd229f8dca7bce672ead43967acdbfa072d6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a761dd229f8dca7bce672ead43967acdbfa072d6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Int32">
          <source>Represents a 32-bit signed integer.</source>
          <target state="translated">부호 있는 32비트 정수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source><ph id="ph1">&lt;xref:System.Int32&gt;</ph> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <ph id="ph2">&lt;xref:System.Int32.MinValue?displayProperty=nameWithType&gt;</ph> constant) through positive 2,147,483,647 (which is represented by the <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> constant.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 부호 있는 음수 2147483648에서 범위의 값을 가진 정수를 나타내는 변경할 수 없는 값 형식을 (클래스로 표현 되는 <ph id="ph2">&lt;xref:System.Int32.MinValue?displayProperty=nameWithType&gt;</ph> 상수)부터 양수 2,147,483,647 (클래스로 표현 되는 <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> 상수입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>The .NET Framework also includes an unsigned 32-bit integer value type, <ph id="ph1">&lt;xref:System.UInt32&gt;</ph>, which represents values that range from 0 to 4,294,967,295.</source>
          <target state="translated">또한.NET Framework는 부호 없는 32 비트 정수 값 형식과 포함 <ph id="ph1">&lt;xref:System.UInt32&gt;</ph>, 0에서 4294967295 까지의 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>Instantiating an Int32 Value</source>
          <target state="translated">인스턴스화하는 Int32 값</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>You can instantiate an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value in several ways:</source>
          <target state="translated">인스턴스화할 수 있습니다는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 여러 가지 방법으로 값:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>You can declare an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> variable and assign it a literal integer value that is within the range of the <ph id="ph2">&lt;xref:System.Int32&gt;</ph> data type.</source>
          <target state="translated">선언할 수는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 변수 범위 내에 있는 정수 리터럴 값을 할당 하 고는 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>The following example declares two <ph id="ph1">&lt;xref:System.Int32&gt;</ph> variables and assigns them values in this way.</source>
          <target state="translated">다음 예제에서는 두 개의 선언 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 변수가이 방식으로 값을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>You can assign the value of an integer type whose range is a subset of the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> type.</source>
          <target state="translated">해당 범위를 초과 하는 정수 형식의 값을 할당할 수의 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 유형입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</source>
          <target state="translated">캐스트 연산자에서 C# 또는 Visual Basic의 변환 메서드는 필요 하지 않은 확대 변환입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>You can assign the value of a numeric type whose range exceeds that of the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> type.</source>
          <target state="translated">해당 범위를 초과 하는 숫자 형식의 값을 할당할 수의 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 유형입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if <ph id="ph1">`Option Strict`</ph> is on.</source>
          <target state="translated">경우는 캐스트 연산자에서 C# 및 Visual Basic의 변환 메서드 필요한 축소 변환 이므로 <ph id="ph1">`Option Strict`</ph> 켜져 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>If the numeric value is a <ph id="ph1">&lt;xref:System.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph>, or <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</source>
          <target state="translated">숫자 값이 한 <ph id="ph1">&lt;xref:System.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> 소수 부분의 처리 소수 부분을 포함 하는 값은 변환이 수행 하는 컴파일러에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>The following example performs narrowing conversions to assign several numeric values to <ph id="ph1">&lt;xref:System.Int32&gt;</ph> variables.</source>
          <target state="translated">다음 예제에서는 여러 가지 숫자 값을 할당 하는 축소 변환을 수행 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 변수입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>You can call a method of the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class to convert any supported type to an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">메서드를 호출할 수는 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 변환할 수는 클래스 형식을 지원 되는 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>This is possible because <ph id="ph1">&lt;xref:System.Int32&gt;</ph> supports the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">이것이 가능 하기 때문에 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 지원는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>The following example illustrates the conversion of an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열 변환 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>You can call the <ph id="ph1">&lt;xref:System.Int32.Parse%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method to convert the string representation of an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value to an <ph id="ph4">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Int32.Parse%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Int32.TryParse%2A&gt;</ph> 의 문자열 표현으로 변환 하는 메서드는 <ph id="ph3">&lt;xref:System.Int32&gt;</ph> 값을 <ph id="ph4">&lt;xref:System.Int32&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>The string can contain either decimal or hexadecimal digits.</source>
          <target state="translated">문자열에는 10 진수 또는 16 진수로 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</source>
          <target state="translated">다음 예제에서는 10 진수 및 16 진수 문자열 모두를 사용 하 여 구문 분석 작업을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>Performing Operations on Int32 Values</source>
          <target state="translated">Int32 값에 대 한 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>The <ph id="ph1">&lt;xref:System.Int32&gt;</ph> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 형식은 더하기, 빼기, 나누기, 곱하기, 부정, 단항 부정 연산자 등과 같이 표준 수학 연산을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>Like the other integral types, the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> type also supports the bitwise <ph id="ph2">`AND`</ph>, <ph id="ph3">`OR`</ph>, <ph id="ph4">`XOR`</ph>, left shift, and right shift operators.</source>
          <target state="translated">다른 정수 계열 형식과 같이 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 형식에서는 비트 <ph id="ph2">`AND`</ph>, <ph id="ph3">`OR`</ph>, <ph id="ph4">`XOR`</ph>, 왼쪽 시프트 및 오른쪽 시프트 연산자.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>You can use the standard numeric operators to compare two <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values, or you can call the <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Int32.Equals%2A&gt;</ph> method.</source>
          <target state="translated">표준 숫자 연산자를 사용 하 여 두 개를 비교 하려면 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 값 또는 있습니다를 호출할 수는 <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Int32.Equals%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>You can also call the members of the <ph id="ph1">&lt;xref:System.Math&gt;</ph> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</source>
          <target state="translated">멤버를 호출할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Math&gt;</ph> 다양 한 범위의 숫자의 몫과 정수 나누기의 나머지를 계산 합니다. 2의 최대값 또는 최소값 값을 판별한 절대 값을 가져오는 등의 숫자 작업을 수행 하는 클래스 정수, 숫자의 부호를 가져오고 숫자를 반올림 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>Representing an Int32 as a String</source>
          <target state="translated">문자열로 서 Int32 나타내는</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>The <ph id="ph1">&lt;xref:System.Int32&gt;</ph> type provides full support for standard and custom numeric format strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 형식은 표준 및 사용자 지정 숫자 형식 문자열에 대 한 완벽 한 지원 제공 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>(For more information, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>, <bpt id="p2">[</bpt>Standard Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, and <bpt id="p3">[</bpt>Custom Numeric Format Strings<ept id="p3">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)</source>
          <target state="translated">(자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>, <bpt id="p2">[</bpt>표준 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, 및 <bpt id="p3">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p3">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>To format an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value as an integral string with no leading zeros, you can call the parameterless <ph id="ph2">&lt;xref:System.Int32.ToString&gt;</ph> method.</source>
          <target state="translated">서식을 지정 하려면는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 값 선행 0이 없는 정수 계열 문자열로 매개 변수가 없는 호출 수 <ph id="ph2">&lt;xref:System.Int32.ToString&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</source>
          <target state="translated">"D" 형식 지정자를 사용 하 여 지정된 된 수의 문자열 표현에서 앞에 오는 0 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</source>
          <target state="translated">"N" 형식 지정자를 사용 하 여 그룹 구분 기호 등 숫자의 문자열 표현에 표시할 소수 자릿수 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>By using the "X" format specifier, you can represent an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value as a hexadecimal string.</source>
          <target state="translated">"X" 형식 지정자를 사용 하 여 나타낼 수 있습니다는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 16 진수 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>The following example formats the elements in an array of <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values in these four ways.</source>
          <target state="translated">다음 예제에서는 배열의 요소를 서식을 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 이러한 네 가지 방법으로 값입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>You can also format an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value as a binary, octal, decimal, or hexadecimal string by calling the <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29&gt;</ph> method and supplying the base as the method's second parameter.</source>
          <target state="translated">서식을 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 8 진수 이진으로 호출 하 여 10 진수 또는 16 진수 문자열 값의 <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29&gt;</ph> 메서드와 메서드의 두 번째 매개 변수로 기본을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</source>
          <target state="translated">다음 예제에서는이 메서드를 호출 8 진수 이진 파일을 표시 하는 일련의 정수 값의 16 진수 표현입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>Working with Non-Decimal 32-Bit Integer Values</source>
          <target state="translated">10 진수가 아닌 32 비트 정수 값 작업</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values.</source>
          <target state="translated">10 진수 값으로 개별 정수를 사용 하는 것 외에도 정수 값으로 비트 연산을 수행 하거나 정수 값의 이진 또는 16 진수 표현을 사용 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source><ph id="ph1">&lt;xref:System.Int32&gt;</ph> values are represented in 31 bits, with the thirty-second bit used as a sign bit.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 값은 30 초 비트를 부호 비트로 사용 된 31 비트에서 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>Positive values are represented by using sign-and-magnitude representation.</source>
          <target state="translated">양수 부호 및 크기 표현을 사용 하 여 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>Negative values are in two's complement representation.</source>
          <target state="translated">음수 값은 2의 보수 표현입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>This is important to keep in mind when you perform bitwise operations on <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values or when you work with individual bits.</source>
          <target state="translated">이 비트 작업을 수행할 때 고려해 야 하는 것이 중요 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 값 또는 개별 비트를 사용 하 여 작업할 때.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</source>
          <target state="translated">숫자, 부울 또는 모든 두 개의 10 진수가 아닌 값 비교 작업을 수행 하려면 두 값이 동일한 표현을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>All members of this type are thread safe.</source>
          <target state="translated">이 유형의 모든 멤버는 스레드로부터 안전 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">멤버 인스턴스 상태를 수정 하려면 표시 되는 실제로 새 값으로 초기화 하는 새 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Int32">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">으로 다른 종류와이 형식의 인스턴스를 포함 하는 공유 변수를 읽고 쓰는 보호 해야 스레드로부터 안전을 보장 하려면 잠금에 의해.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Int32">
          <source>Compares this instance to a specified object or <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">이 인스턴스를 지정된 개체나 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>와 비교하여 상대 값의 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>An integer to compare.</source>
          <target state="translated">비교할 정수입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</source>
          <target state="translated">이 인스턴스를 지정된 32비트 부호 있는 정수와 비교하여 상대 값의 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스와 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 상대 값을 나타내는 부호 있는 숫자입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 반환 값</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>와 같습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">이 메서드를 구현 하는 <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> 인터페이스 및 수행 보다 조금 더 나은 <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> 메서드 변환할 필요가 없기 때문에 <ph id="ph3">`value`</ph> 매개 변수를 개체로 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>Depending on your programming language, it might be possible to code a <ph id="ph1">&lt;xref:System.Int32.CompareTo%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.</source>
          <target state="translated">프로그래밍 언어에 따라 코딩할 수는 <ph id="ph1">&lt;xref:System.Int32.CompareTo%2A&gt;</ph> 메서드 매개 변수 형식이 비트 수가 적은 보다 인스턴스 형식입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</source>
          <target state="translated">일부 프로그래밍 언어 매개 변수를 나타내는 형식으로 비트 수는 인스턴스와 암시적 확대 변환을 수행 하기 때문에 이것이 가능 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">예를 들어 인스턴스 형식이 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 매개 변수 형식이 고 <ph id="ph2">&lt;xref:System.Byte&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method that compares the values of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and the <ph id="ph4">&lt;xref:System.Int32&gt;</ph> parameter representation.</source>
          <target state="translated">Microsoft C# 컴파일러는 매개 변수의 값을 표시 하는 명령을 생성는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, 다음 생성 한 <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> 의 값을 비교 하는 메서드는 <ph id="ph3">&lt;xref:System.Int32&gt;</ph> 인스턴스 및 <ph id="ph4">&lt;xref:System.Int32&gt;</ph> 매개 변수 표현 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</source>
          <target state="translated">해당 컴파일러에서 숫자 형식에 암시적으로 확대 변환을 수행 여부를 확인 하려면 해당 프로그래밍 언어의 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.CompareTo(System.Int32)">
          <source>In addition to displaying the value returned by the method for four different comparisons, it converts the return value to a member of the custom <ph id="ph1">`Comparison`</ph> enumeration, whose value it also displays.</source>
          <target state="translated">네 가지 비교 메서드에 의해 반환 되는 값을 표시할 뿐 아니라 사용자 지정의 멤버에 반환 값은 변환 <ph id="ph1">`Comparison`</ph> 열거형도 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">비교할 개체 또는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an indication of their relative values.</source>
          <target state="translated">이 인스턴스를 지정된 개체와 비교하여 상대 값의 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스와 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 상대 값을 나타내는 부호 있는 숫자입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 반환 값</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>와 같습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.CompareTo(System.Object)">
          <source>Any instance of <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, regardless of its value, is considered greater than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">모든 인스턴스 <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, 해당 값에 관계 없이 보다 큰 것으로 간주 됩니다 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">`value`</ph> must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">&lt;xref:System.Int32&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 해야 <ph id="ph2">`null`</ph> 또는 인스턴스의 <ph id="ph3">&lt;xref:System.Int32&gt;</ph>, 그러지 않으면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Int32.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="T:System.Int32">
          <source>Returns a value indicating whether this instance is equal to a specified object or <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스가 지정된 개체나 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>과 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Int32.Equals(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value to compare to this instance.</source>
          <target state="translated">이 인스턴스와 비교할 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Int32.Equals(System.Int32)">
          <source>Returns a value indicating whether this instance is equal to a specified <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">이 인스턴스가 지정된 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값과 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Int32.Equals(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> has the same value as this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 이 인터페이스와 같은 값을 가지면 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Int32)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> because it does not have to convert the <ph id="ph3">`obj`</ph> parameter to an object.</source>
          <target state="translated">이 메서드를 구현 하는 <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> 인터페이스를 하 고 수행 보다 조금 더 나은 <ph id="ph2">&lt;xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> 변환할 필요가 없기 때문에 <ph id="ph3">`obj`</ph> 매개 변수를 개체로 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Int32)">
          <source>Compiler overload resolution may account for an apparent difference in the behavior of the two <ph id="ph1">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> method overloads.</source>
          <target state="translated">컴파일러 오버 로드 확인의 두 동작에는 명백한 차이 고려 될 수 있습니다 <ph id="ph1">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Int32)">
          <source>If an implicit conversion between the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument and an <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> is defined and the argument is not typed as an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilers perform an implicit conversion and call the <ph id="ph4">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">경우 간에 암시적 변환이 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 인수 및 <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> 정의 및 인수 인수로 형식화 되지 않습니다는 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, 컴파일러는 암시적 변환 및 호출을 수행는 <ph id="ph4">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Int32)">
          <source>Otherwise, they call the <ph id="ph1">&lt;see cref="M:System.Int32.Equals(System.Object)" /&gt;</ph> method, which always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> if its <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument is not an <ph id="ph4">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">호출 그렇지 않은 경우는 <ph id="ph1">&lt;see cref="M:System.Int32.Equals(System.Object)" /&gt;</ph> 메서드는 항상 반환 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 경우 해당 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 인수가 <ph id="ph4">&lt;see cref="T:System.Int32" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Int32)">
          <source>The following example illustrates the difference in behavior between the two method overloads.</source>
          <target state="translated">다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Int32)">
          <source>In the case of the <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.SByte" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.UInt16" /&gt;</ph> values, the first comparison returns <ph id="ph5">&lt;see langword="true" /&gt;</ph> because the compiler automatically performs a widening conversion and calls the <ph id="ph6">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> method, whereas the second comparison returns <ph id="ph7">&lt;see langword="false" /&gt;</ph> because the compiler calls the <ph id="ph8">&lt;see cref="M:System.Int32.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">경우에 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.SByte" /&gt;</ph>, 및 <ph id="ph4">&lt;see cref="T:System.UInt16" /&gt;</ph> 값을 반환 하는 첫 번째 비교 <ph id="ph5">&lt;see langword="true" /&gt;</ph> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <ph id="ph6">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> 메서드를 반면는 비교 반환의 두 번째 <ph id="ph7">&lt;see langword="false" /&gt;</ph> 컴파일러를 호출 하기 때문에 <ph id="ph8">&lt;see cref="M:System.Int32.Equals(System.Object)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Int32.Equals(System.Object)">
          <source>An object to compare with this instance.</source>
          <target state="translated">이 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Int32.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Int32.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph> and equals the value of this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>의 인스턴스이고 이 인스턴스의 값과 같으면 <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Object)">
          <source>The following example illustrates the use of <ph id="ph1">`Equals`</ph> in the context of <ph id="ph2">`Int32`</ph>, comparing two <ph id="ph3">`int`</ph> values and returning <ph id="ph4">`true`</ph> if they represent the same number, or <ph id="ph5">`false`</ph> if they do not.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Equals`</ph> 의 컨텍스트에서 <ph id="ph2">`Int32`</ph>, 두 개의 비교 <ph id="ph3">`int`</ph> 값과 반환 <ph id="ph4">`true`</ph> 같은 값을 나타내는 경우 또는 <ph id="ph5">`false`</ph> 일치 하지 않을 경우.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Object)">
          <source>Compiler overload resolution may account for an apparent difference in the behavior of the two <ph id="ph1">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> method overloads.</source>
          <target state="translated">컴파일러 오버 로드 확인의 두 동작에는 명백한 차이 고려 될 수 있습니다 <ph id="ph1">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Object)">
          <source>If an implicit conversion between the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument and an <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> is defined and the argument is not typed as an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilers perform an implicit conversion and call the <ph id="ph4">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">경우 간에 암시적 변환이 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 인수 및 <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> 정의 및 인수 인수로 형식화 되지 않습니다는 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, 컴파일러는 암시적 변환 및 호출을 수행는 <ph id="ph4">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Object)">
          <source>Otherwise, they call the <ph id="ph1">&lt;see cref="M:System.Int32.Equals(System.Object)" /&gt;</ph> method, which always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> if its <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument is not an <ph id="ph4">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">호출 그렇지 않은 경우는 <ph id="ph1">&lt;see cref="M:System.Int32.Equals(System.Object)" /&gt;</ph> 메서드는 항상 반환 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 경우 해당 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 인수가 <ph id="ph4">&lt;see cref="T:System.Int32" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Object)">
          <source>The following example illustrates the difference in behavior between the two method overloads.</source>
          <target state="translated">다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Equals(System.Object)">
          <source>In the case of the <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.SByte" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.UInt16" /&gt;</ph> values, the first comparison returns <ph id="ph5">&lt;see langword="true" /&gt;</ph> because the compiler automatically performs a widening conversion and calls the <ph id="ph6">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> method, whereas the second comparison returns <ph id="ph7">&lt;see langword="false" /&gt;</ph> because the compiler calls the <ph id="ph8">&lt;see cref="M:System.Int32.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">경우에 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.SByte" /&gt;</ph>, 및 <ph id="ph4">&lt;see cref="T:System.UInt16" /&gt;</ph> 값을 반환 하는 첫 번째 비교 <ph id="ph5">&lt;see langword="true" /&gt;</ph> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <ph id="ph6">&lt;see cref="M:System.Int32.Equals(System.Int32)" /&gt;</ph> 메서드를 반면는 비교 반환의 두 번째 <ph id="ph7">&lt;see langword="false" /&gt;</ph> 컴파일러를 호출 하기 때문에 <ph id="ph8">&lt;see cref="M:System.Int32.Equals(System.Object)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Int32.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">이 인스턴스의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Int32.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Int32.GetTypeCode">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> for value type <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> 값 형식에 대한 <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Int32.GetTypeCode">
          <source>The enumerated constant, <ph id="ph1">&lt;see cref="F:System.TypeCode.Int32" /&gt;</ph>.</source>
          <target state="translated">열거형 상수인 <ph id="ph1">&lt;see cref="F:System.TypeCode.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="F:System.Int32.MaxValue">
          <source>Represents the largest possible value of an <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>의 최대값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="F:System.Int32.MaxValue">
          <source>This field is constant.</source>
          <target state="translated">이 필드는 상수입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Int32.MaxValue">
          <source>The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.</source>
          <target state="translated">이 상수의 값은 2147483647; 즉, 16 진수 0x7FFFFFFF 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Int32.MaxValue">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph> property to prevent an <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph> when converting to an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph> 를 방지 하려면 속성은 <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph> 변환할 때는 <ph id="ph3">&lt;xref:System.Int32&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="F:System.Int32.MinValue">
          <source>Represents the smallest possible value of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>의 가능한 최소값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="F:System.Int32.MinValue">
          <source>This field is constant.</source>
          <target state="translated">이 필드는 상수입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Int32.MinValue">
          <source>The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.</source>
          <target state="translated">이 상수의 값은-2147483648; 즉, 16 진수 0x80000000입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Int32.MinValue">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Int32.MinValue&gt;</ph> property to prevent an <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph> when converting to an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Int32.MinValue&gt;</ph> 를 방지 하려면 속성은 <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph> 변환할 때는 <ph id="ph3">&lt;xref:System.Int32&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Int32">
          <source>Converts the string representation of a number to its 32-bit signed integer equivalent.</source>
          <target state="translated">숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String)">
          <source>A string containing a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String)">
          <source>Converts the string representation of a number to its 32-bit signed integer equivalent.</source>
          <target state="translated">숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String)">
          <source>A 32-bit signed integer equivalent to the number contained in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 있는 수에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter contains a number of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수 형식의 숫자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>[ws][sign]digits[ws]</source>
          <target state="translated">[ws][sign]digits[ws]</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>Items in square brackets ([ and ]) are optional.</source>
          <target state="translated">항목 대괄호 ([및])는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>ws</source>
          <target state="translated">ws</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>sign</source>
          <target state="translated">sign</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>An optional sign.</source>
          <target state="translated">가 선택적 부호입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>digits</source>
          <target state="translated">digits</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">0에서 9 사이의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수를 사용 하 여 해석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> 스타일입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</source>
          <target state="translated">10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>To explicitly define the style elements that can be present in <ph id="ph1">`s`</ph>, use either the <ph id="ph2">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">에 나타날 수 있는 스타일 요소를 명시적으로 정의 하려면 <ph id="ph1">`s`</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 초기화는 현재 시스템 문화권에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>To parse a string using the formatting information of some other culture, use the <ph id="ph1">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다른 문화권의 서식 지정 정보를 사용 하 여 문자열의 구문을 분석을 사용 하 여는 <ph id="ph1">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>The following example demonstrates how to convert a string value into a 32-bit signed integer value using the <ph id="ph1">&lt;xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 문자열 값을 사용 하 여 32 비트 부호 있는 정수 값으로 변환 하는 <ph id="ph1">&lt;xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String)">
          <source>The resulting integer value is then displayed to the console.</source>
          <target state="translated">결과 정수 값 콘솔에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string containing a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A bitwise combination of the enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">지정할 일반적인 값은 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</source>
          <target state="translated">지정된 스타일로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A 32-bit signed integer equivalent to the number specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 지정된 수에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph> 스타일 요소를 정의 하는 매개 변수 (예: 공백, 양수 또는 음수 부호 기호 또는 1000 단위 구분 기호)에 허용 되는 <ph id="ph2">`s`</ph> 구문 분석 작업이 성공 하려면에 대 한 매개 변수.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">비트 플래그의 조합 이어야 합니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">값에 따라 <ph id="ph1">`style`</ph>, <ph id="ph2">`s`</ph> 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</source>
          <target state="translated">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Or, if <ph id="ph1">`style`</ph> includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</source>
          <target state="translated">또는 if <ph id="ph1">`style`</ph> 포함 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[ws]hexdigits[ws]</source>
          <target state="translated">[ws]hexdigits[ws]</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Items in square brackets ([ and ]) are optional.</source>
          <target state="translated">항목 대괄호 ([및])는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">맨 앞에 공백이 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 의 끝에 있고, 나타날 수 있습니다 <ph id="ph4">`s`</ph> 경우 <ph id="ph5">`style`</ph> 포함는 <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Culture 별 통화 기호입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">문자열에 해당 위치는 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> 현재 문화권의 속성입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">현재 문화권의 통화 기호에 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>An optional sign.</source>
          <target state="translated">가 선택적 부호입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">부호의 시작 부분에 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> 의 끝에 있고, 나타날 수 있습니다 <ph id="ph4">`s`</ph> 경우 <ph id="ph5">`style`</ph> 포함는 <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">괄호를 사용할 수 있습니다 <ph id="ph1">`s`</ph> 경우 음수 값을 나타내는 데 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">0부터 9 까지의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>, only the digit 0 is valid.</source>
          <target state="translated">에 대 한 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept>숫자 0은 유효한만 필요 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Culture 별 1000 단위 구분 기호입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's thousands separator can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">현재 문화권의 천 단위 구분 기호에 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> 플래그 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Culture 별 소수점 기호입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">에 현재 문화권의 소수점 기호가 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> includes any other digit, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown.</source>
          <target state="translated">숫자 0만 구문 분석 작업이 성공; 소수 자리 수로 표시 될 수 있습니다. 경우 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept> 기타 숫자를 포함 한 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">'E' 또는 'E' 문자는 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">16 진수 숫자 0 ~ f 또는 0-6.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">숫자만 문자열 (해당 하는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> 스타일) 항상 성공적으로 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in the input string.</source>
          <target state="translated">나머지 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버 요소는 입력된 문자열에 필요 하지 않을 수도 있는 제어 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">다음 표에서 개별 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버에 나타날 수 있는 요소에 영향을 <ph id="ph2">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>NumberStyles value</source>
          <target state="translated">NumberStyles 값</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">S에서 숫자 허용 되는 요소</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept> 요소만 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The decimal point ( <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated">소수점 ( <bpt id="p1">*</bpt>합니다.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>) and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">) 및 <bpt id="p1">*</bpt>소수 자릿수가<ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 시작 부분에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 끝에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>기호<ept id="p1">*</ept> 의 시작 부분에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>기호<ept id="p1">*</ept> 의 끝에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>기호<ept id="p1">*</ept> 숫자 값이 들어 괄호 안에 형식 요소입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The thousands separator ( <bpt id="p1">*</bpt>,<ept id="p1">*</ept> ) element.</source>
          <target state="translated">1000 단위 구분 기호 ( <bpt id="p1">*</bpt>,<ept id="p1">*</ept> ) 요소입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All.</source>
          <target state="translated">모두.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수를 16 진수 숫자 또는 지 수 표기법으로 숫자를에서 나타낼 수 없습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the decimal point ( <bpt id="p3">*</bpt>.<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 부분이 나 끝 부분에 요소 <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>기호<ept id="p2">*</ept> 맨 앞에 <ph id="ph2">`s`</ph>, 소수점 및 ( <bpt id="p3">*</bpt>합니다.<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>) symbol.</source>
          <target state="translated">) 기호입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, thousands separator ( <bpt id="p1">*</bpt>,<ept id="p1">*</ept> ), and decimal point ( <bpt id="p2">*</bpt>.<ept id="p2">*</ept></source>
          <target state="translated"><ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, 1000 단위 구분 기호 ( <bpt id="p1">*</bpt>,<ept id="p1">*</ept> ), 소수점 및 ( <bpt id="p2">*</bpt>합니다.<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>) elements.</source>
          <target state="translated">) 요소입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All styles, except <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">모든 스타일 제외 하 고 <ph id="ph1">`s`</ph> 16 진수를 나타낼 수 없습니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`s`</ph> must be a hexadecimal value without a prefix.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> 플래그를 사용할 <ph id="ph2">`s`</ph> 접두사 없이 16 진수 값 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</source>
          <target state="translated">예를 들어 "C9AF3" 성공적으로 구문 분석 하지만 "0xC9AF3" 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The only other flags that can be combined with the <ph id="ph1">`s`</ph> parameter it are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">다른 플래그만 함께 사용할 수 있는 <ph id="ph1">`s`</ph> 매개 변수는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration includes a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, that includes both white space flags.)</source>
          <target state="translated">(의 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형 복합 숫자 스타일에 포함 됩니다. <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, 공백 플래그가 모두를 포함 하는.)</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 시스템 문화권에 따라 초기화 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>To specify the culture whose formatting information is used for the parse operation, call the <ph id="ph1">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> overload.</source>
          <target state="translated">구문 분석 작업에 대 한 서식 지정 정보를 가져올 사용 되는 문화권을 지정 하려면 호출는 <ph id="ph1">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> method to parse the string representations of several <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> 메서드를 여러의 문자열 표현을 구문 분석 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture for the example is en-US.</source>
          <target state="translated">이 예제에 대 한 현재 문화권이 EN-US입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a combination of <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 값의 조합이 아닌 경우</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in a format compliant with <ph id="ph2">&lt;paramref name="style" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>의 형식이 <ph id="ph2">&lt;paramref name="style" /&gt;</ph>과 호환되지 않는 경우</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> includes non-zero, fractional digits.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 0이 아닌 소수 자릿수가 포함되어 있는 경우</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>A string containing a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</source>
          <target state="translated">지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>A 32-bit signed integer equivalent to the number specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 지정된 수에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is typically used to convert text that can be formatted in a variety of ways to an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> 메서드는 여러 가지 방법으로 서식을 지정할 수 있는 텍스트 변환 데 일반적으로 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</source>
          <target state="translated">예를 들어 숫자 값으로 HTML 텍스트 상자에 사용자가 입력 한 텍스트 변환에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter contains a number of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수 형식의 숫자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>[ws][sign]digits[ws]</source>
          <target state="translated">[ws][sign]digits[ws]</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>Items in square brackets ([ and ]) are optional.</source>
          <target state="translated">항목 대괄호 ([및])는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">가 선택적 부호입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">0에서 9 사이의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수를 사용 하 여 해석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> 스타일입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</source>
          <target state="translated">10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>To explicitly define the style elements that can be present in <ph id="ph1">`s`</ph>, use the <ph id="ph2">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">에 나타날 수 있는 스타일 요소를 명시적으로 정의 하려면 <ph id="ph1">`s`</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 한 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 구현에서와 같은 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information about the format of <ph id="ph2">`s`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 의 형식에 대 한 문화권별 정보를 제공 하는 매개 변수 <ph id="ph2">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체가 현재 문화권이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>The following example is the button click event handler of a Web form.</source>
          <target state="translated">다음 예제에서는 단추 클릭 Web form의 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>It uses the array returned by the <ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType&gt;</ph> property to determine the user's locale.</source>
          <target state="translated">반환 된 배열을 사용 하 여는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType&gt;</ph> 속성을 사용자의 로캘을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>It then instantiates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to that locale.</source>
          <target state="translated">그런 다음는 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 해당 로캘에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that belongs to that <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is then passed to the <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method to convert the user's input to an <ph id="ph4">&lt;xref:System.Int32&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 하에 속하는 개체는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 에 다음 전달 된 개체는 <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> 메서드는 사용자 입력을 <ph id="ph4">&lt;xref:System.Int32&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not of the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string containing a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">지정할 일반적인 값은 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An object that supplies culture-specific information about the format of <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>의 형식에 대한 문화권별 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</source>
          <target state="translated">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A 32-bit signed integer equivalent to the number specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 지정된 수에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space or the positive sign) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph> 매개 변수 (예: 공백 또는 양수 부호)에 사용할 수 있는 스타일 요소를 정의 고 <ph id="ph2">`s`</ph> 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">비트 플래그의 조합 이어야 합니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">값에 따라 <ph id="ph1">`style`</ph>, <ph id="ph2">`s`</ph> 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</source>
          <target state="translated">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Or, if <ph id="ph1">`style`</ph> includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</source>
          <target state="translated">또는 if <ph id="ph1">`style`</ph> 포함 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[ws]hexdigits[ws]</source>
          <target state="translated">[ws]hexdigits[ws]</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Items in square brackets ([ and ]) are optional.</source>
          <target state="translated">항목 대괄호 ([및])는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">맨 앞에 공백이 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 의 끝에 있고, 나타날 수 있습니다 <ph id="ph4">`s`</ph> 경우 <ph id="ph5">`style`</ph> 포함는 <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Culture 별 통화 기호입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph4">`provider`</ph> parameter.</source>
          <target state="translated">위치는 문자열에 의해 정의 됩니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 에서 반환 된 개체는 <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 의 메서드는 <ph id="ph4">`provider`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">통화 기호에 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">가 선택적 부호입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag or at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">부호의 시작 부분에 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> 플래그의 끝에 <ph id="ph4">`s`</ph> 경우 <ph id="ph5">`style`</ph> 포함는 <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> 플래그 합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">괄호를 사용할 수 있습니다 <ph id="ph1">`s`</ph> 경우 음수 값을 나타내는 데 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">0부터 9 까지의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>, only the digit 0 is valid.</source>
          <target state="translated">에 대 한 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept>숫자 0은 유효한만 필요 합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">Culture 별 1000 단위 구분 기호입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The thousands separator of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">1000 단위 구분 기호에 지정 된 문화권의 <ph id="ph1">`provider`</ph> 에 나타날 수 있습니다 <ph id="ph2">`s`</ph> 경우 <ph id="ph3">`style`</ph> 포함는 <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> 플래그 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Culture 별 소수점 기호입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">에 지정 된 문화권의 소수점 기호가 <ph id="ph1">`provider`</ph> 에 나타날 수 <ph id="ph2">`s`</ph> 경우 <ph id="ph3">`style`</ph> 포함는 <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> includes any other digit, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown.</source>
          <target state="translated">숫자 0만 구문 분석 작업이 성공; 소수 자리 수로 표시 될 수 있습니다. 경우 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept> 기타 숫자를 포함 한 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">'E' 또는 'E' 문자는 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">16 진수 숫자 0 ~ f 또는 0-6.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully if it is in the range of the <ph id="ph2">&lt;xref:System.Int32&gt;</ph> type.</source>
          <target state="translated">숫자만 있는 문자열 (해당 하는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> 스타일)의 범위에 있으면 항상 성공적으로 구문 분석은 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 형식.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in this input string.</source>
          <target state="translated">나머지 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">다음 표에서 개별 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버에 나타날 수 있는 요소에 영향을 <ph id="ph2">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Non-composite NumberStyles values</source>
          <target state="translated">비 복합 NumberStyles 값</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">S에서 숫자 허용 되는 요소</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Decimal digits only.</source>
          <target state="translated">10 진수 숫자입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point ( <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated">소수점 ( <bpt id="p1">*</bpt>합니다.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>) and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">) 및 <bpt id="p1">*</bpt>소수 자릿수가<ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> must consist of only one or more 0 digits or an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown.</source>
          <target state="translated">그러나 <bpt id="p1">*</bpt>소수 자릿수가<ept id="p1">*</ept> 0 숫자가 하나 이상 구성 되어야 합니다 또는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`s`</ph> represents a number in exponential notation, it must represent an integer within the range of the <ph id="ph2">&lt;xref:System.Int32&gt;</ph> data type without a non-zero, fractional component.</source>
          <target state="translated">경우 <ph id="ph1">`s`</ph> 지 수 표기법으로 숫자를 나타내는, 나타내야의 범위 내의 정수는 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> , 0이 아닌 소수 부분이 없는 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 시작 부분에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 끝에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A positive sign can appear before <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">양수 부호 앞에 올 수 <bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A positive sign can appear after <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">양수 부호 후 나타날 수 <bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>기호<ept id="p1">*</ept> 숫자 값이 들어 괄호 안에 형식 요소입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The thousands separator ( <bpt id="p1">*</bpt>,<ept id="p1">*</ept> ) element.</source>
          <target state="translated">1000 단위 구분 기호 ( <bpt id="p1">*</bpt>,<ept id="p1">*</ept> ) 요소입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`s`</ph> must be a hexadecimal value without a prefix.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> 플래그를 사용할 <ph id="ph2">`s`</ph> 접두사 없이 16 진수 값 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</source>
          <target state="translated">예를 들어 "C9AF3" 성공적으로 구문 분석 하지만 "0xC9AF3" 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The only other flags that can be present in <ph id="ph1">`style`</ph> are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">다른 플래그만에 있을 수 있는 <ph id="ph1">`style`</ph> 는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, that includes both white space flags.)</source>
          <target state="translated">(의 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형에는 복합 숫자 스타일 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, 공백 플래그가 모두를 포함 하는.)</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 한 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 구현에서와 같은 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수에서 구문 분석에 사용 되는 문화권별 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체가 현재 문화권이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following example uses a variety of <ph id="ph1">`style`</ph> and <ph id="ph2">`provider`</ph> parameters to parse the string representations of <ph id="ph3">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 다양 한 <ph id="ph1">`style`</ph> 및 <ph id="ph2">`provider`</ph> 의 문자열 표현을 구문 분석에 매개 변수 <ph id="ph3">&lt;xref:System.Int32&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</source>
          <target state="translated">일부 구문 분석 작업에 대 한 서식 지정 정보를 가져올 사용 되는 문화권에 따라 동일한 문자열을 해석할 수는 여러 가지 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a combination of <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 값의 조합이 아닌 경우</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not in a format compliant with <ph id="ph2">&lt;paramref name="style" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>의 형식이 <ph id="ph2">&lt;paramref name="style" /&gt;</ph>과 호환되지 않는 경우</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> includes non-zero, fractional digits.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 0이 아닌 소수 자릿수가 포함되어 있는 경우</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the current instance is not zero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 인스턴스의 값이 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 사용하려고 하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">모든 경우</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The value of the current instance, unchanged.</source>
          <target state="translated">변경되지 않은 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The type to which to convert this <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값을 변환할 대상 형식입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An object that provides information about the format of the returned value.</source>
          <target state="translated">반환된 값의 형식에 대한 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The value of the current instance, converted to <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>으로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual basic에서) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>로 변환된 현재 인스턴스의 값입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="T:System.Int32">
          <source>Converts the numeric value of this instance to its equivalent string representation.</source>
          <target state="translated">이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString">
          <source>Converts the numeric value of this instance to its equivalent string representation.</source>
          <target state="translated">이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString">
          <source>The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</source>
          <target state="translated">음수 부호(값이 음수일 경우)와 0부터 9 사이의 숫자(앞에 오는 0은 사용하지 않음)들로 구성된 이 인스턴스의 값에 대한 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Int32.ToString&gt;</ph> method formats an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value in the default ("G", or general) format by using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32.ToString&gt;</ph> 메서드 형식을 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 기본값 ("G" 또는 일반)에서 값을 사용 하 여 형식은 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 문화권의 개체입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>If you want to specify a different format or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Int32.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">다른 형식이 나 문화권을 지정 하려는 경우 사용의 다른 오버 로드는 <ph id="ph1">&lt;xref:System.Int32.ToString%2A&gt;</ph> 다음과 같이 메서드:</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>To use format</source>
          <target state="translated">형식을 사용 하려면</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>For culture</source>
          <target state="translated">문화권에 대 한</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>Use the overload</source>
          <target state="translated">오버 로드를 사용 하 여</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>Default ("G") format</source>
          <target state="translated">기본 ("G") 형식</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>A specific culture</source>
          <target state="translated">특정 문화권</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>A specific format</source>
          <target state="translated">특정 형식</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>Default (current) culture</source>
          <target state="translated">기본 (현재) 문화권</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>A specific format</source>
          <target state="translated">특정 형식</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>A specific culture</source>
          <target state="translated">특정 문화권</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>The following example displays an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value using the default <ph id="ph2">&lt;xref:System.Int32.ToString&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 표시 된 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 기본값을 사용 하 여 값 <ph id="ph2">&lt;xref:System.Int32.ToString&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>It also displays the string representations of the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value that results from using a number of standard format specifiers.</source>
          <target state="translated">또한의 문자열 표현을 표시는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 다양 한 표준 형식 지정자를 사용 하 여 얻은 값을 합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString">
          <source>The examples are displayed using the formatting conventions of the en-US culture.</source>
          <target state="translated">예제에서는 EN-US 문화권의 형식 규칙을 사용 하 여 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</source>
          <target state="translated">지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값을 <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>에 지정된 내용에 따라 나타낸 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29&gt;</ph> method formats an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value in the default ("G", or general) format by using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29&gt;</ph> 메서드 형식을 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 기본값 ("G" 또는 일반)에서 값을 사용 하 여 형식은 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 지정된 된 문화권의 개체입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>If you want to specify a different format or the current culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Int32.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">다른 형식이 나 현재 문화권을 지정 하려는 경우 사용의 다른 오버 로드는 <ph id="ph1">&lt;xref:System.Int32.ToString%2A&gt;</ph> 다음과 같이 메서드:</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">형식을 사용 하려면</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">문화권에 대 한</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">오버 로드를 사용 하 여</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">기본 ("G") 형식</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">기본 (현재) 문화권</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">특정 형식</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">기본 (현재) 문화권</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">특정 형식</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">특정 문화권</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an object that implements the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 구현 하는 개체는 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string that is returned by this method.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 이 메서드에 의해 반환 되는 문자열의 형식에 대 한 문화권별 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>The object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> can be any of the following:</source>
          <target state="translated">구현 하는 개체 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 다음 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting rules are to be used.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 해당 형식 지정 규칙을 사용 하려는 문화권을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that contains specific numeric formatting information for this value.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 이 값에 대 한 특정 숫자 형식 지정 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and whose <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">구현 하는 사용자 지정 개체 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 및 해당 <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 서식 지정 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph> or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object cannot be obtained from <ph id="ph4">`provider`</ph>, the return value is formatted using the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the thread current culture.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체에서 가져올 수 없습니다 <ph id="ph4">`provider`</ph>를 사용 하 여 반환 값의 형식이 <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 스레드 문화권에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>For information about the thread current culture, see <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">현재 스레드 문화권에 대 한 정보를 참조 하십시오. <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.IFormatProvider)">
          <source>The following example displays the string representation of an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value using <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent several different cultures.</source>
          <target state="translated">다음 예제에서는 표시의 문자열 표현을 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 를 사용 하 여 값 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 서로 다른 문화권을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.String)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">표준 또는 사용자 지정 숫자 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.String)">
          <source>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</source>
          <target state="translated">지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.String)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값을 <ph id="ph1">&lt;paramref name="format" /&gt;</ph>에 지정된 내용에 따라 나타낸 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Int32.ToString%28System.String%29&gt;</ph> method formats an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value in a specified format by using a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the conventions of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32.ToString%28System.String%29&gt;</ph> 메서드 형식을 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 를 사용 하 여 지정 된 형식에서 값을 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 문화권의 규칙을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Int32.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">기본값 ("G" 또는 일반)을 사용 하려는 경우 다른 문화권이 지정, 다른 오버 로드를 사용 하거나 형식는 <ph id="ph1">&lt;xref:System.Int32.ToString%2A&gt;</ph> 다음과 같이 메서드:</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>To use format</source>
          <target state="translated">형식을 사용 하려면</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>For culture</source>
          <target state="translated">문화권에 대 한</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>Use the overload</source>
          <target state="translated">오버 로드를 사용 하 여</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>Default ("G") format</source>
          <target state="translated">기본 ("G") 형식</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>Default (current) culture</source>
          <target state="translated">기본 (현재) 문화권</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>Default ("G") format</source>
          <target state="translated">기본 ("G") 형식</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">특정 문화권</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>A specific format</source>
          <target state="translated">특정 형식</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">특정 문화권</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 매개 변수는 "R"을 제외한 모든 유효한 표준 숫자 서식 지정자 및 사용자 지정 숫자 서식 지정자의 조합이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">경우 <ph id="ph1">`format`</ph> 은 <ph id="ph2">`null`</ph> 또는 빈 문자열 (""),이 인스턴스의 반환 값 ("G")는 일반 숫자 형식 지정자와 함께 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>The return value of this instance is formatted with the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture.</source>
          <target state="translated">이 인스턴스의 반환 값으로 지정 되는 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>The following example displays an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</source>
          <target state="translated">다음 예제에서는 표시는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 각 지원 되는 표준 숫자 서식 지정자와 두 개의 사용자 지정 숫자 형식 문자열을 함께 사용 하 여 값입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String)">
          <source>In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</source>
          <target state="translated">숫자 값을 문자열로 변환,이 예제에서는 EN-US 문화권의 형식 규칙을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid or not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었거나 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">표준 또는 사용자 지정 숫자 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</source>
          <target state="translated">지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph> and <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>로 지정된 이 인스턴스 값의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value in a specified format by using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> 메서드 형식을 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 값을 사용 하 여 지정 된 형식에서 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 지정된 된 문화권의 개체입니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>If you want to use default format or culture settings, use the other overloads of the <ph id="ph1">&lt;xref:System.Int32.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">다른 오버 로드를 사용 하 여 기본 형식 또는 문화권 설정을 사용 하려는 경우는 <ph id="ph1">&lt;xref:System.Int32.ToString%2A&gt;</ph> 다음과 같이 메서드:</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">형식을 사용 하려면</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">문화권에 대 한</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">오버 로드를 사용 하 여</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">기본 ("G") 형식</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">기본 (현재) 문화권</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">기본 ("G") 형식</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">특정 문화권</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">특정 형식</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">기본 (현재) 문화권</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be either a standard or a custom numeric format string.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 표준 또는 사용자 지정 숫자 형식 문자열 매개 변수 수 있습니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</source>
          <target state="translated">모든 사용자 지정 숫자 서식 문자 "R" (또는 "r") 이외의 모든 표준 숫자 형식 문자열은 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">경우 <ph id="ph1">`format`</ph> 은 <ph id="ph2">`null`</ph> 또는 빈 문자열 ("")을이 인스턴스에 대 한 반환 값 ("G")는 일반 숫자 형식 지정자와 함께 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an object that implements the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 구현 하는 개체는 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific format information about the format of the string that is returned by this method.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 이 메서드에 의해 반환 되는 문자열의 형식에 대 한 문화권별 형식 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>The object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> can be any of the following:</source>
          <target state="translated">구현 하는 개체 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 다음 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting rules are to be used.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 해당 형식 지정 규칙을 사용 하려는 문화권을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that contains specific numeric formatting information for this value.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 이 값에 대 한 특정 숫자 형식 지정 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and whose <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">구현 하는 사용자 지정 개체 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 및 해당 <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 서식 지정 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph> or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object cannot be obtained from <ph id="ph4">`provider`</ph>, the return value for this instance is formatted with the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체에서 가져올 수 없습니다 <ph id="ph4">`provider`</ph>,이 인스턴스에 대 한 반환 값으로 지정 됩니다는 <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source>The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</source>
          <target state="translated">다음 예에서는 양수 및 각 지원 되는 표준 숫자 서식 지정자를 사용 하 여 세 개의 서로 다른 문화권에 대 한 음수 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Int32.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid or not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었거나 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="T:System.Int32">
          <source>Converts the string representation of a number to its 32-bit signed integer equivalent.</source>
          <target state="translated">숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="T:System.Int32">
          <source>A return value indicates whether the operation succeeded.</source>
          <target state="translated">반환 값은 작업의 성공 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>A string containing a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>, if the conversion succeeded, or zero if the conversion failed.</source>
          <target state="translated">이 메서드는 변환이 성공한 경우 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 포함된 숫자의 32비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, is not of the correct format, or represents a number less than <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>이거나, 형식이 올바르지 않거나, <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우 변환이 실패합니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>This parameter is passed uninitialized; any value originally supplied in <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> will be overwritten.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept>에 제공된 모든 값을 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>Converts the string representation of a number to its 32-bit signed integer equivalent.</source>
          <target state="translated">숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>A return value indicates whether the conversion succeeded.</source>
          <target state="translated">반환 값은 변환의 성공 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 성공적으로 변환되었으면 <ph id="ph2">&lt;paramref name="s" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The <ph id="ph1">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Int32.Parse%2A&gt;</ph> method, except the <ph id="ph3">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32.TryParse%2A&gt;</ph> 방법은 <ph id="ph2">&lt;xref:System.Int32.Parse%2A&gt;</ph> 메서드를 제외 하 고는 <ph id="ph3">&lt;xref:System.Int32.TryParse%2A&gt;</ph> 메서드는 변환이 실패할 경우 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>It eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id="ph2">`s`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">테스트 하기 위해 예외 처리를 사용할 필요가 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 에 <ph id="ph2">`s`</ph> 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The <ph id="ph1">`s`</ph> parameter contains a number of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수 형식의 숫자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>[ws][sign]digits[ws]</source>
          <target state="translated">[ws][sign]digits[ws]</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>Items in square brackets ([ and ]) are optional.</source>
          <target state="translated">항목 대괄호 ([및])는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>An optional sign.</source>
          <target state="translated">가 선택적 부호입니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">0에서 9 사이의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수를 사용 하 여 해석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> 스타일입니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</source>
          <target state="translated">10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>To explicitly define the style elements together with the culture-specific formatting information that can be present in <ph id="ph1">`s`</ph>, use the <ph id="ph2">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">명시적으로 함께 culture 별 서식 지정 정보에 포함 될 수 있는 스타일 요소를 정의 하려면 <ph id="ph1">`s`</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 초기화는 현재 시스템 문화권에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method interprets all digits in the <ph id="ph2">`s`</ph> parameter as decimal digits.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Int32.TryParse%2A&gt;</ph> 의 모든 자릿수 1 보다 크거나는 <ph id="ph2">`s`</ph> 소수 자리 수로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>To parse the string representation of a hexadecimal number, call the <ph id="ph1">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType&gt;</ph> overload.</source>
          <target state="translated">16 진수 숫자의 문자열 표현을 구문 분석, 호출 된 <ph id="ph1">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType&gt;</ph> method with a number of different string values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType&gt;</ph> 메서드를 여러 가지 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>Some of the strings that the <ph id="ph1">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29&gt;</ph> method is unable to convert in this example are:</source>
          <target state="translated">문자열 중 일부는 <ph id="ph1">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29&gt;</ph> 메서드는이 예제는 변환할 수 없습니다 됩니다:</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>"9432.0".</source>
          <target state="translated">"9432.0".</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</source>
          <target state="translated">문자열에서 소수 구분 기호;를 포함할 수 없기 때문에 변환이 실패 정수 계열 자릿수만 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>"16,667".</source>
          <target state="translated">"16,667".</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The conversion fails because the string cannot contain group separators; it must contain integral digits only.</source>
          <target state="translated">문자열에는 그룹 구분 기호; 포함할 수 없기 때문에 변환이 실패 정수 계열 자릿수만 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>"(100)".</source>
          <target state="translated">"(100)".</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">문자열의 현재 문화권에 의해 정의 된 것과 다른 음수 기호를 포함할 수 없기 때문에 변환이 실패 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>"01FA".</source>
          <target state="translated">"01FA"입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Int32@)">
          <source>The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</source>
          <target state="translated">변환은 문자열이 16 진수; 포함할 수 없기 때문에 실패 10 진수 숫자만 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A string containing a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The string is interpreted using the style specified by <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">이 문자열은 <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>에서 지정하는 스타일을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">지정할 일반적인 값은 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>, if the conversion succeeded, or zero if the conversion failed.</source>
          <target state="translated">이 메서드는 변환이 성공한 경우 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>에 포함된 숫자의 32비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, is not in a format compliant with <bpt id="p2">&lt;c&gt;</bpt>style<ept id="p2">&lt;/c&gt;</ept>, or represents a number less than <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>이거나, 형식이 <bpt id="p2">&lt;c&gt;</bpt>style<ept id="p2">&lt;/c&gt;</ept>과 호환되지 않거나, <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타내는 경우 변환이 실패합니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>This parameter is passed uninitialized; any value originally supplied in <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> will be overwritten.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept>에 제공된 모든 값을 덮어쓰게 됩니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</source>
          <target state="translated">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A return value indicates whether the conversion succeeded.</source>
          <target state="translated">반환 값은 변환의 성공 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 성공적으로 변환되었으면 <ph id="ph2">&lt;paramref name="s" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <ph id="ph1">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Int32.Parse%2A&gt;</ph> method, except the <ph id="ph3">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32.TryParse%2A&gt;</ph> 방법은 <ph id="ph2">&lt;xref:System.Int32.Parse%2A&gt;</ph> 메서드를 제외 하 고는 <ph id="ph3">&lt;xref:System.Int32.TryParse%2A&gt;</ph> 메서드는 변환이 실패할 경우 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>It eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id="ph2">`s`</ph> is invalid and cannot be parsed successfully.</source>
          <target state="translated">테스트 하기 위해 예외 처리를 사용할 필요가 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 에 <ph id="ph2">`s`</ph> 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph> 매개 변수 (예: 공백 또는 양수 또는 음수 기호)에 사용할 수 있는 스타일 요소를 정의 고 <ph id="ph2">`s`</ph> 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">비트 플래그의 조합 이어야 합니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">값에 따라 <ph id="ph1">`style`</ph>, <ph id="ph2">`s`</ph> 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</source>
          <target state="translated">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Or, if the <ph id="ph1">`style`</ph> parameter includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</source>
          <target state="translated">또는 경우에는 <ph id="ph1">`style`</ph> 매개 변수를 포함 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>[ws]hexdigits[ws]</source>
          <target state="translated">[ws]hexdigits[ws]</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Items in square brackets ([ and ]) are optional.</source>
          <target state="translated">항목 대괄호 ([및])는 선택적 요소입니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Optional white space.</source>
          <target state="translated">선택적 공백입니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">맨 앞에 공백이 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 플래그를 또는 끝날 때 <ph id="ph4">`s`</ph> 경우 <ph id="ph5">`style`</ph> 포함는 <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Culture 별 통화 기호입니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph4">`provider`</ph> parameter.</source>
          <target state="translated">위치는 문자열에 의해 정의 됩니다는 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 에서 반환 된 개체는 <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 의 메서드는 <ph id="ph4">`provider`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">통화 기호에 나타날 수 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>An optional sign.</source>
          <target state="translated">가 선택적 부호입니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A sign symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flags.</source>
          <target state="translated">에 나타날 수는 부호 기호 <ph id="ph1">`s`</ph> 경우 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">0부터 9 까지의 숫자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A culture-specific thousands separator.</source>
          <target state="translated">Culture 별 1000 단위 구분 기호입니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The thousands separator of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">1000 단위 구분 기호에 지정 된 문화권의 <ph id="ph1">`provider`</ph> 에 나타날 수 있습니다 <ph id="ph2">`s`</ph> 경우 <ph id="ph3">`style`</ph> 포함는 <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> 플래그 합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Culture 별 소수점 기호입니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The decimal point symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`s`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">에 지정 된 문화권의 소수점 기호가 <ph id="ph1">`provider`</ph> 에 나타날 수 <ph id="ph2">`s`</ph> 경우 <ph id="ph3">`style`</ph> 포함는 <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>One or more occurrences of the digit 0.</source>
          <target state="translated">하나 이상의 숫자 0입니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">소수 자릿수에 나타날 수 <ph id="ph1">`s`</ph> 경우에만 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</source>
          <target state="translated">'E' 또는 'E' 문자는 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 <ph id="ph2">`style`</ph> 포함는 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">16 진수 숫자 0 ~ f 또는 0-6.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> flag) always parses successfully.</source>
          <target state="translated">숫자만 있는 문자열 (해당 하는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> 플래그) 항상 성공적으로 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in this input string.</source>
          <target state="translated">나머지 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">다음 표에서 개별 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 멤버에 나타날 수 있는 요소에 영향을 <ph id="ph2">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Non-composite NumberStyles values</source>
          <target state="translated">비 복합 NumberStyles 값</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">S에서 숫자 허용 되는 요소</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>Decimal digits only.</source>
          <target state="translated">10 진수 숫자입니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The decimal point (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) and <bpt id="p2">*</bpt>fractional_digits<ept id="p2">*</ept> elements.</source>
          <target state="translated">소수점 (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) 및 <bpt id="p2">*</bpt>소수 자릿수<ept id="p2">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>However, <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> must consist of only one or more 0 digits or the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">그러나 <bpt id="p1">*</bpt>소수 자릿수<ept id="p1">*</ept> 하나 이상의 0 자릿수 또는 메서드가 반환 되는 구성 되어야 합니다 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>If <ph id="ph1">`s`</ph> represents a number in exponential notation, it must represent an integer within the range of the <ph id="ph2">&lt;xref:System.Int32&gt;</ph> data type without a non-zero, fractional component.</source>
          <target state="translated">경우 <ph id="ph1">`s`</ph> 지 수 표기법으로 숫자를 나타내는, 나타내야의 범위 내의 정수는 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> , 0이 아닌 소수 부분이 없는 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 시작 부분에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 의 끝에 요소 <ph id="ph1">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A sign can appear before <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">기호 앞에 올 수 <bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>A sign can appear after <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>.</source>
          <target state="translated">뒤에 기호 표시 될 수 있습니다 <bpt id="p1">*</bpt>자릿수<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>기호<ept id="p1">*</ept> 숫자 값이 들어 괄호 안에 형식 요소입니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The thousands separator (<bpt id="p1">*</bpt>,<ept id="p1">*</ept>) element.</source>
          <target state="translated">1000 단위 구분 기호 (<bpt id="p1">*</bpt>,<ept id="p1">*</ept>) 요소입니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>All elements.</source>
          <target state="translated">모든 요소입니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <ph id="ph1">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수를 16 진수 숫자 또는 지 수 표기법으로 숫자를에서 나타낼 수 없습니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the decimal point (<bpt id="p3">*</bpt>.<ept id="p3">*</ept>) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept> 부분이 나 끝 부분에 요소 <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>기호<ept id="p2">*</ept> 맨 앞에 <ph id="ph2">`s`</ph>, 소수점 및 (<bpt id="p3">*</bpt>.<ept id="p3">*</ept>) 기호입니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph> 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept>, thousands separator (<bpt id="p3">*</bpt>,<ept id="p3">*</ept>), and decimal point (<bpt id="p4">*</bpt>.<ept id="p4">*</ept>) elements.</source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept>, <bpt id="p2">*</bpt>기호<ept id="p2">*</ept>, 1000 단위 구분 기호 (<bpt id="p3">*</bpt>,<ept id="p3">*</ept>), 소수점 및 (<bpt id="p4">*</bpt>.<ept id="p4">*</ept>) 요소입니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>All styles, except <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">모든 스타일 제외 하 고 <ph id="ph1">`s`</ph> 16 진수를 나타낼 수 없습니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`s`</ph> must be a hexadecimal value without a prefix.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> 플래그를 사용할 <ph id="ph2">`s`</ph> 접두사 없이 16 진수 값 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</source>
          <target state="translated">예를 들어 "C9AF3" 성공적으로 구문 분석 하지만 "0xC9AF3" 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The only other flags that can be present in <ph id="ph1">`style`</ph> are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">다른 플래그만에 있을 수 있는 <ph id="ph1">`style`</ph> 는 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, that includes both white space flags.)</source>
          <target state="translated">(의 <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 열거형에는 복합 스타일 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType&gt;</ph>, 공백 플래그가 모두를 포함 하는.)</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, whose <ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는는 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 구현에서와 같은 한 <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 개체 또는 <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 <ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`s`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`s`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체가 현재 문화권이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType&gt;</ph> method with a number of different string and <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType&gt;</ph> 메서드는 여러 가지 다른 문자열 및 <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a combination of <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 값의 조합이 아닌 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>