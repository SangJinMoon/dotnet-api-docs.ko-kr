<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;">
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`8&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`8" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
    <TypeParameter Name="TRest" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="0da1e-101">튜플의 첫 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="0da1e-102">튜플의 두 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="0da1e-103">튜플의 세 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="0da1e-104">튜플의 네 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="0da1e-105">튜플의 다섯 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="0da1e-106">튜플의 여섯 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-106">The type of the tuple's sixth component.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="0da1e-107">튜플의 일곱 번째 구성 요소 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-107">The type of the tuple's seventh component.</span></span></typeparam>
    <typeparam name="TRest"><span data-ttu-id="0da1e-108">튜플의 나머지 구성 요소 형식을 정의하는 제네릭 <see langword="Tuple" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-108">Any generic <see langword="Tuple" /> object that defines the types of the tuple's remaining components.</span></span></typeparam>
    <summary><span data-ttu-id="0da1e-109">*n* 튜플을 나타냅니다. 여기에서 *n*은 8 이상입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-109">Represents an *n*-tuple, where *n* is 8 or greater.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-110">튜플은 특정 수 및 값의 시퀀스를 포함 하는 데이터 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-110">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="0da1e-111"><xref:System.Tuple%608> 클래스는 *n*-8 개 이상의 구성 요소가 있는 튜플 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-111">The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components.</span></span>  
  
 <span data-ttu-id="0da1e-112">인스턴스화할 수 있습니다는 <xref:System.Tuple%608> 정적을 호출 하 여 정확히 8 구성 요소와 개체 <xref:System.Tuple.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-112">You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0da1e-113">다음 예제는 8-튜플 (개의 요소로 구성 된) 소수 20 보다 작은 포함 하는 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-113">The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20.</span></span> <span data-ttu-id="0da1e-114">형식 유추 사용 하 여 각 구성 요소의 유형을 확인할 수 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-114">Note that it uses type inference to determine the type of each component.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="0da1e-115">또한 호출 하 여 8 개 이상의 구성 요소와 n-튜플을 개체를 인스턴스화할 수 있습니다는 <xref:System.Tuple%608.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-115">You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="0da1e-116">다음 예제에서는 <xref:System.Tuple%608.%23ctor%2A> 이전 예에서 만든 튜플에 해당 하는 8 튜플을 만드는 데 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-116">The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="0da1e-117">N-튜플을 9 개 이상의 구성 요소를 만들려면 호출 해야 합니다는 <xref:System.Tuple%608.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-117">To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="0da1e-118">정적 팩터리 메서드는 <xref:System.Tuple> 클래스의 생성을 지원 하지 않는 `Tuple` 8 개 이상의 구성 요소를 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-118">The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.</span></span>  
  
 <span data-ttu-id="0da1e-119">가진 8 개 이상의 구성 요소가 있는 n-튜플을 인스턴스화하는 <xref:System.Tuple%608.%23ctor%2A> 생성자를 제네릭 제공 `Tuple` 개체를 `rest` 매개 변수를 통해 8 번째 정의를 *n*튜플의 번째 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-119">To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple.</span></span> <span data-ttu-id="0da1e-120">중첩 제네릭으로 `Tuple` 개체를 이러한 방식으로 구성 요소 수에 대 한 실제 제한이 없는 하는 튜플을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-120">By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components.</span></span>  
  
 <span data-ttu-id="0da1e-121">다음 예에서는 2000 1860에서 각 인구에 대 한 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-121">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000.</span></span> <span data-ttu-id="0da1e-122">튜플의 첫 번째 구성 요소는 도시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-122">The first component of the tuple is the city name.</span></span> <span data-ttu-id="0da1e-123">두 번째 구성 요소는 데이터 계열의 시작 날짜 및 세 번째 구성 요소는 인구 시작 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-123">The second component is the start date of the data series, and the third component is the population at the start date.</span></span> <span data-ttu-id="0da1e-124">각 후속 구성 요소는 10 년 간격으로 인구를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-124">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="0da1e-125">17 튜플을 중첩 하 여 생성 됩니다는 <xref:System.Tuple%603> 내부 개체는 <xref:System.Tuple%608> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-125">The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="0da1e-126">(즉, <xref:System.Tuple%603> 개체의 값으로 제공 되는 `rest` 에서 매개 변수는 <xref:System.Tuple%608> 클래스 생성자입니다.) 이 <xref:System.Tuple%608> 개체를 차례로에 포함 된 외부 <xref:System.Tuple%608> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-126">(That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="0da1e-127">(즉, <xref:System.Tuple%608> 개체의 값으로 제공 되는 `rest` 외부 매개 변수 <xref:System.Tuple%608> 개체의 클래스 생성자입니다.)</span><span class="sxs-lookup"><span data-stu-id="0da1e-127">(That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 <span data-ttu-id="0da1e-128">읽기 전용을 사용 하 여 튜플의 처음 7 구성의 값을 검색할 수 있습니다 <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, 및 <xref:System.Tuple%607.Item7%2A> 인스턴스 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-128">You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.</span></span> <span data-ttu-id="0da1e-129">추가 구성 요소가 중첩 되어 있고에서 검색할 수는 <xref:System.Tuple%608.Rest%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-129">Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property.</span></span> <span data-ttu-id="0da1e-130">이전 예에서 <xref:System.Tuple%608.Item1%2A> 통해 <xref:System.Tuple%608.Item7%2A> 속성 튜플의 일곱 번째 구성 요소를 통해 첫 번째 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-130">In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple.</span></span> <span data-ttu-id="0da1e-131">8 번째 열 네 번째 구성 요소에서 두 번째 수준에서 중첩 된 튜플을에 포함 되어 있으며으로 표시 됩니다는 `Rest.Item1` 통해 `Rest.Item7` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-131">The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties.</span></span> <span data-ttu-id="0da1e-132">열다섯 번째 통해 17 번째 구성 요소는 세 번째 수준에서 중첩 되는 튜플의에 포함 되어 있으며으로 표시 됩니다는 `Rest.Rest.Item1` 있지만 `Rest.Rest.Item3` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-132">The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties.</span></span>  
  
 <span data-ttu-id="0da1e-133">튜플의 네 가지 방법으로 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-133">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="0da1e-134">단일 데이터 집합이 나타내려는 경우.</span><span class="sxs-lookup"><span data-stu-id="0da1e-134">To represent a single set of data.</span></span> <span data-ttu-id="0da1e-135">예를 들어 튜플을 데이터베이스 레코드를 나타내고 해당 구성 요소 레코드의 개별 필드를 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-135">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="0da1e-136">및 제공 하기 위해 쉽게 액세스 하는 데이터 집합의 조작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-136">To provide easy access to, and manipulation of, a data set.</span></span>  
  
-   <span data-ttu-id="0da1e-137">메서드에서 사용 하지 않고 여러 값을 반환 하려면 `out` 매개 변수 (C#) 또는 `ByRef` 매개 변수 (Visual Basic의 경우).</span><span class="sxs-lookup"><span data-stu-id="0da1e-137">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="0da1e-138">이전 예제에서 도시 이름 함께 계산된 된 통계를 반환 하는 예를 들어 한 <xref:System.Tuple%607> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-138">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="0da1e-139">값이 여러 개인 단일 매개 변수를 통해 메서드에 전달 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-139">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="0da1e-140">예를 들어는 <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> 메서드는 스레드가 시작 시 실행 되는 메서드를 하나의 값을 제공할 수 있는 단일 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-140">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="0da1e-141">제공 하는 경우는 <xref:System.Tuple%607> 메서드 인수로 개체에 7 항목 데이터의 스레드 시작 루틴을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-141">If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the thread’s startup routine with seven items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7, !TRest rest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, rest As TRest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="rest" Type="TRest" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="0da1e-142">튜플의 첫 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-142">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="0da1e-143">튜플의 두 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-143">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="0da1e-144">튜플의 세 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-144">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="0da1e-145">튜플의 네 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-145">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="0da1e-146">튜플의 다섯 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-146">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="0da1e-147">튜플의 여섯 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-147">The value of the tuple's sixth component.</span></span></param>
        <param name="item7"><span data-ttu-id="0da1e-148">튜플의 일곱 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-148">The value of the tuple's seventh component.</span></span></param>
        <param name="rest"><span data-ttu-id="0da1e-149">튜플의 나머지 구성 요소 값을 포함하는 제네릭 <see langword="Tuple" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-149">Any generic <see langword="Tuple" /> object that contains the values of the tuple's remaining components.</span></span></param>
        <summary><span data-ttu-id="0da1e-150"><see cref="T:System.Tuple`8" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-150">Initializes a new instance of the <see cref="T:System.Tuple`8" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-151">정적을 사용할 수도 있습니다 <xref:System.Tuple.Create%2A?displayProperty=nameWithType> 메서드를 명시적으로 구성 요소의 유형을 지정 하지 않고 8-튜플 (개의 요소로 구성 된) 개체를 인스턴스화합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-151">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="0da1e-152">다음 예제에서는 <xref:System.Tuple.Create%2A?displayProperty=nameWithType> 소수 20 보다 작은 포함 하는 8-튜플 개체를 인스턴스화하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-152">The following example uses the <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="0da1e-153">이 다음 호출에 해당 하는 <xref:System.Tuple%607.%23ctor%2A> 클래스 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-153">This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
 <span data-ttu-id="0da1e-154">그러나 정적 <xref:System.Tuple.Create%2A?displayProperty=nameWithType> 메서드 8 개 이상의 구성 요소가 있는 튜플 개체를 만드는 데 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-154">However, the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method cannot be used to create a tuple object with more than eight components.</span></span>  
  
 <span data-ttu-id="0da1e-155">사용 하는 경우는 <xref:System.Tuple%608.%23ctor%2A> 8 개 이상의 구성 요소와 n-튜플을 만드는 데 생성자 사용 하면는 `rest` 매개 변수를 중첩된 n-튜플을 만드는 있는 1 ~ 7 개 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-155">When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components.</span></span> <span data-ttu-id="0da1e-156">연속 된 수준의 중첩을 사용 하 여 구성 요소 수가 거의 제한이 있는 n-튜플을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-156">By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components.</span></span> <span data-ttu-id="0da1e-157">예를 들어, 25-튜플을 만들려면 인스턴스화하는 <xref:System.Tuple%608> 다음과 같은 세 가지 수준의 중첩 개체:</span><span class="sxs-lookup"><span data-stu-id="0da1e-157">For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:</span></span>  
  
-   <span data-ttu-id="0da1e-158">가장 바깥쪽 <xref:System.Tuple%608> 일곱 번째 구성 요소를 통해 첫 번째 개체에 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-158">The outermost <xref:System.Tuple%608> object contains the first through seventh components.</span></span> <span data-ttu-id="0da1e-159">해당 <xref:System.Tuple%608.Rest%2A> 속성에 대 한 액세스를 제공는 <xref:System.Tuple%608> 중첩의 첫 번째 수준에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-159">Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.</span></span>  
  
-   <span data-ttu-id="0da1e-160">가장 바깥쪽 중첩 <xref:System.Tuple%608> 개체에는 열 네 번째 구성 요소를 통해 8 번째 포함 및 해당 <xref:System.Tuple%608.Rest%2A> 속성에 대 한 액세스를 제공는 <xref:System.Tuple%608> 중첩의 두 번째 수준에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-160">The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting.</span></span>  
  
-   <span data-ttu-id="0da1e-161"><xref:System.Tuple%608> 중첩의 두 번째 수준에는 개체는 열다섯 번째 21 번째 구성 요소를 통해 포함 및 해당 <xref:System.Tuple%608.Rest%2A> 속성에 대 한 액세스를 제공는 <xref:System.Tuple%604> 중첩의 세 번째 수준에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-161">The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting.</span></span>  
  
-   <span data-ttu-id="0da1e-162">가장 안쪽의 튜플은 <xref:System.Tuple%604> 22 번째-25 번째 구성 요소를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-162">The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-163">다음 예제에서는 각 인구 조사 1860 2000에 대 한 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-163">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each census from 1860 to 2000.</span></span> <span data-ttu-id="0da1e-164">튜플의 첫 번째 구성 요소는 도시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-164">The first component of the tuple is the city name.</span></span> <span data-ttu-id="0da1e-165">두 번째 구성 요소는 데이터를 일련의 시작 날짜 및 세 번째 구성 요소는 인구 시작 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-165">The second component is the start date of the series of data, and the third component is the population at the start date.</span></span> <span data-ttu-id="0da1e-166">각 후속 구성 요소는 10 년 간격으로 인구를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-166">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="0da1e-167">이 예제에서는 두 중첩 레이어를 사용 하 여 17 튜플을 만드는 데: 1970 년 1을 통해 1910에 대 한 인구 데이터를 포함 하는 중첩 된 7 튜플을 대 한 인구 데이터를 포함 하는 일곱 번째 구성 요소를 통해 해당 제 3 7-튜플 정의 및 내부 중첩 3-튜플 부터 2000 1980에 대 한 인구 데이터를 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-167">The example uses two layers of nesting to create the 17-tuple: It defines a 7-tuple whose third through seventh components contain population data for 1860 through 1900, a nested 7-tuple that contains population data for 1910 through 1970, and an inner nested 3-tuple that contains population data for 1980 through 2000.</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0da1e-168"><paramref name="rest" />가 제네릭 <see langword="Tuple" /> 개체가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="0da1e-168"><paramref name="rest" /> is not a generic <see langword="Tuple" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0da1e-169">이 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-169">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="0da1e-170">현재 <see cref="T:System.Tuple`8" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-170">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="0da1e-171">현재 인스턴스가 지정된 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-171"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-172">`obj` 매개 변수는 다음 조건을 모두 충족 하는 경우 현재 인스턴스를 동일한 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-172">The `obj` parameter is considered to be equal to the current instance if it meets all the following conditions:</span></span>  
  
-   <span data-ttu-id="0da1e-173">한 <xref:System.Tuple%608> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-173">It is a <xref:System.Tuple%608> object.</span></span>  
  
-   <span data-ttu-id="0da1e-174">현재 인스턴스와 동일한 형식의 된 구성 요소의 동일한 총 수 있음</span><span class="sxs-lookup"><span data-stu-id="0da1e-174">It has the same total number of components that are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="0da1e-175">해당 구성 요소 (중첩된 된 구성 요소 포함)은 현재 인스턴스와 같지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-175">Its components (including its nested components) are equal to those of the current instance.</span></span> <span data-ttu-id="0da1e-176">같음은 각 구성 요소에 대 한 기본 같음 비교자에 따라 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-176">Equality is determined by the default equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-177">다음 예제에서는 5 <xref:System.Tuple%608> 소수를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-177">The following example defines five <xref:System.Tuple%608> objects that contain prime numbers.</span></span> <span data-ttu-id="0da1e-178">각각의 나머지 개체와 첫 번째 개체를 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-178">It then compares the first object with each of the remaining objects.</span></span> <span data-ttu-id="0da1e-179">첫 번째 및 마지막 출력 에서처럼 <xref:System.Tuple%608> 개체가 같은지 동일한 수의 값이 같은 구성 요소를 갖기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-179">As the output shows, only the first and the last <xref:System.Tuple%608> objects are equal, because they have an identical number of components with identical values.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`8.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0da1e-180">현재 <see cref="T:System.Tuple`8" /> 개체에 대한 해시 코드를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-180">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object.</span></span></summary>
        <returns><span data-ttu-id="0da1e-181">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-181">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da1e-182">현재 <see cref="T:System.Tuple`8" /> 개체의 첫 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-182">Gets the value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="0da1e-183">현재 <see cref="T:System.Tuple`8" /> 개체의 첫 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-183">The value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-184">종류를 동적으로 결정할 수 있습니다는 <xref:System.Tuple%608.Item1%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="0da1e-184">You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0da1e-185">호출 하 여는 `GetType` 에서 반환 되는 값에 대 한 메서드는 <xref:System.Tuple%608.Item1%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-185">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="0da1e-186">검색 하 여는 <xref:System.Type> 을 나타내는 개체는 <xref:System.Tuple%608> 개체를 통해 반환 되는 배열에서 첫 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-186">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-187">다음 예에서는 2000 1860에서 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-187">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="0da1e-188">17 튜플의 첫 번째 구성 요소는 도시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-188">The first component of the 17-tuple is the city name.</span></span> <span data-ttu-id="0da1e-189">이 예제에서는 사용은 <xref:System.Tuple%608.Item1%2A> 속성을 인구 데이터를 표시 하기 전에 테이블 머리글에 도시 이름을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-189">The example uses the <xref:System.Tuple%608.Item1%2A> property to display the city name in the table header before displaying the population data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da1e-190">현재 <see cref="T:System.Tuple`8" /> 개체의 두 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-190">Gets the value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="0da1e-191">현재 <see cref="T:System.Tuple`8" /> 개체의 두 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-191">The value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-192">종류를 동적으로 결정할 수 있습니다는 <xref:System.Tuple%608.Item2%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="0da1e-192">You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0da1e-193">호출 하 여는 `GetType` 에서 반환 되는 값에 대 한 메서드는 <xref:System.Tuple%608.Item2%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-193">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="0da1e-194">검색 하 여는 <xref:System.Type> 을 나타내는 개체는 <xref:System.Tuple%608> 개체를 통해 반환 되는 배열에서 두 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-194">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-195">다음 예에서는 2000 1860에서 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-195">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="0da1e-196">17 튜플의 두 번째 구성 요소에는 데이터 계열의 첫 번째 연도의입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-196">The second component of the 17-tuple is the first year of the data series.</span></span> <span data-ttu-id="0da1e-197">값을 할당 하는 예제는 <xref:System.Tuple%608.Item2%2A> 변수에을 설정한 다음 해당 데이터가 표시 되는 연도를 나타내는 변수를 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-197">The example assigns the value of the <xref:System.Tuple%608.Item2%2A> property to a variable, and then uses that variable to represent the year whose data is displayed.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da1e-198">현재 <see cref="T:System.Tuple`8" /> 개체의 세 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-198">Gets the value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="0da1e-199">현재 <see cref="T:System.Tuple`8" /> 개체의 세 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-199">The value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-200">종류를 동적으로 결정할 수 있습니다는 <xref:System.Tuple%608.Item3%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="0da1e-200">You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0da1e-201">호출 하 여는 `GetType` 에서 반환 되는 값에 대 한 메서드는 <xref:System.Tuple%608.Item3%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-201">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="0da1e-202">검색 하 여는 <xref:System.Type> 을 나타내는 개체는 <xref:System.Tuple%608> 개체를 세 번째 요소에서 반환 되는 배열에서 검색 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-202">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-203">다음 예에서는 2000 1860에서 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-203">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="0da1e-204">17 튜플의 세 번째 구성 요소는 1860에서 채우기입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-204">The third component of the 17-tuple is the population in 1860.</span></span> <span data-ttu-id="0da1e-205">이 예제에서는 사용은 <xref:System.Tuple%608.Item3%2A> 인구 값을 표시 하 고 연간 1860과 1870 년 사이의 population 변경 비율을 계산 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-205">The example uses the <xref:System.Tuple%608.Item3%2A> property to display the population value and to calculate the annual rate of population change between 1860 and 1870.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da1e-206">현재 <see cref="T:System.Tuple`8" /> 개체의 네 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-206">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="0da1e-207">현재 <see cref="T:System.Tuple`8" /> 개체의 네 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-207">The value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-208">종류를 동적으로 결정할 수 있습니다는 <xref:System.Tuple%608.Item4%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="0da1e-208">You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0da1e-209">호출 하 여는 `GetType` 에서 반환 되는 값에 대 한 메서드는 <xref:System.Tuple%608.Item4%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-209">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="0da1e-210">검색 하 여는 <xref:System.Type> 을 나타내는 개체는 <xref:System.Tuple%608> 개체를 통해 반환 되는 배열에서 네 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-210">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-211">다음 예에서는 2000 1860에서 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-211">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="0da1e-212">17 튜플의 네 번째 구성 요소는 1870에서 채우기입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-212">The fourth component of the 17-tuple is the population in 1870.</span></span> <span data-ttu-id="0da1e-213">이 예제에서는 사용은 <xref:System.Tuple%608.Item4%2A> 인구 값을 표시 하 고 연간 1870 년과 1880 사이의 population 변경 비율을 계산 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-213">The example uses the <xref:System.Tuple%608.Item4%2A> property to display the population value and to calculate the annual rate of population change between 1870 and 1880.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da1e-214">현재 <see cref="T:System.Tuple`8" /> 개체의 다섯 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-214">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="0da1e-215">현재 <see cref="T:System.Tuple`8" /> 개체의 다섯 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-215">The value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-216">종류를 동적으로 결정할 수 있습니다는 <xref:System.Tuple%608.Item5%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="0da1e-216">You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0da1e-217">호출 하 여는 `GetType` 에서 반환 되는 값에 대 한 메서드는 <xref:System.Tuple%608.Item5%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-217">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="0da1e-218">검색 하 여는 <xref:System.Type> 을 나타내는 개체는 <xref:System.Tuple%608> 개체를 통해 반환 되는 배열에서 다섯 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-218">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-219">다음 예에서는 2000 1860에서 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-219">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="0da1e-220">17 튜플의 다섯 번째 구성 요소는 1880에서 채우기입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-220">The fifth component of the 17-tuple is the population in 1880.</span></span> <span data-ttu-id="0da1e-221">이 예제에서는 사용은 <xref:System.Tuple%608.Item5%2A> 인구 값을 표시 하 고 연간 1880과 1890 년 사이의 population 변경 비율을 계산 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-221">The example uses the <xref:System.Tuple%608.Item5%2A> property to display the population value and to calculate the annual rate of population change between 1880 and 1890.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da1e-222">현재 <see cref="T:System.Tuple`8" /> 개체의 여섯 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-222">Gets the value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="0da1e-223">현재 <see cref="T:System.Tuple`8" /> 개체의 여섯 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-223">The value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-224">종류를 동적으로 결정할 수 있습니다는 <xref:System.Tuple%608.Item6%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="0da1e-224">You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0da1e-225">호출 하 여는 `GetType` 에서 반환 되는 값에 대 한 메서드는 <xref:System.Tuple%608.Item6%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-225">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="0da1e-226">검색 하 여는 <xref:System.Type> 을 나타내는 개체는 <xref:System.Tuple%608> 개체를 통해 반환 되는 배열에서 6 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-226">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-227">다음 예에서는 2000 1860에서 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-227">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="0da1e-228">17 튜플의 여섯 번째 구성 요소는 1890에서 채우기입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-228">The sixth component of the 17-tuple is the population in 1890.</span></span> <span data-ttu-id="0da1e-229">이 예제에서는 사용은 <xref:System.Tuple%608.Item6%2A> 인구 값을 표시 하 고 연간 1890 년과 1900 사이의 population 변경 비율을 계산 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-229">The example uses the <xref:System.Tuple%608.Item6%2A> property to display the population value and to calculate the annual rate of population change between 1890 and 1900.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T7 Item7" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item7" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item7 As T7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T7 Item7 { T7 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da1e-230">현재 <see cref="T:System.Tuple`8" /> 개체의 일곱 번째 구성 요소 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-230">Gets the value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></summary>
        <value><span data-ttu-id="0da1e-231">현재 <see cref="T:System.Tuple`8" /> 개체의 일곱 번째 구성 요소 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-231">The value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-232">종류를 동적으로 결정할 수 있습니다는 <xref:System.Tuple%608.Item7%2A> 두 가지 방법 중 하나에서 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="0da1e-232">You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="0da1e-233">호출 하 여는 `GetType` 에서 반환 되는 값에 대 한 메서드는 <xref:System.Tuple%608.Item7%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-233">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item7%2A> property.</span></span>  
  
-   <span data-ttu-id="0da1e-234">검색 하 여는 <xref:System.Type> 을 나타내는 개체는 <xref:System.Tuple%608> 개체를 통해 반환 되는 배열에서 일곱 번째 요소를 검색 합니다. 해당 <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-234">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-235">다음 예에서는 2000 1860에서 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-235">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="0da1e-236">17 튜플의 일곱 번째 구성 요소는 1900에서 채우기입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-236">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="0da1e-237">이 예제에서는 사용은 <xref:System.Tuple%608.Item7%2A> 인구 값을 표시 하 고 연간 1900 사이의 1910 population 변경 비율을 계산 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-237">The example uses the <xref:System.Tuple%608.Item7%2A> property to display the population value and to calculate the annual rate of population change between 1900 and 1910.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rest">
      <MemberSignature Language="C#" Value="public TRest Rest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TRest Rest" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Rest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rest As TRest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TRest Rest { TRest get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da1e-238">현재 <see cref="T:System.Tuple`8" /> 개체의 나머지 구성 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-238">Gets the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></summary>
        <value><span data-ttu-id="0da1e-239">현재 <see cref="T:System.Tuple`8" /> 개체의 나머지 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-239">The value of the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-240"><xref:System.Tuple%608.Rest%2A> 속성은 중첩 된 반환 `Tuple` 8에 대 한 액세스를 통해 사용할 수 있는 개체 *n*튜플의 번째 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-240">The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple.</span></span> <span data-ttu-id="0da1e-241">튜플에 있는 구성의 총 수에 따라 열 네 번째 구성 요소를 통해 8 분의 값을 검색할 있습니다에서 중첩 된 `Tuple` 개체의 <xref:System.Tuple%608.Item1%2A> 통해 <xref:System.Tuple%608.Item7%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-241">Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="0da1e-242">사용할 수 있습니다는 <xref:System.Tuple%608.Rest%2A> 속성의 중첩 된 <xref:System.Tuple%608> 검색할 개체는 `Tuple` 중첩의 다음 수준에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-242">You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting.</span></span>  
  
 <span data-ttu-id="0da1e-243">중첩 된 구성 요소 수를 동적으로 결정 `Tuple` 에서 반환 되는 개체는 <xref:System.Tuple%608.Rest%2A> 유형 이름에서 숫자를 추출 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-243">You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name.</span></span> <span data-ttu-id="0da1e-244">다음 예제에서 이에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-244">The following example provides an illustration.</span></span>  
  
 [!code-vb[System.Tuple\`8.Item1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-245">다음 예에서는 2000 1860에서 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-245">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="0da1e-246">17 튜플의 일곱 번째 구성 요소는 1900에서 채우기입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-246">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="0da1e-247">이 예제에서는 사용은 <xref:System.Tuple%608.Rest%2A> 8 번째 하며 열 네 번째 구성 요소에서 값을 검색 하는 속성에 사용 되는 <xref:System.Tuple%608.Rest%2A> 는 중첩 된 속성 <xref:System.Tuple%608> 나머지 구성 요소 값을 검색 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-247">The example uses the <xref:System.Tuple%608.Rest%2A> property to retrieve the values of the eighth through fourteenth components, and it uses the <xref:System.Tuple%608.Rest%2A> property of the nested <xref:System.Tuple%608> object to retrieve the values of the remaining components.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="0da1e-248">현재 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-248">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="0da1e-249">비교를 위한 사용자 지정 규칙을 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-249">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="0da1e-250">지정된 비교자를 사용하여 현재 <see cref="T:System.Tuple`8" /> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-250">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="0da1e-251">다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="other" />의 상대적 위치를 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-251">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="0da1e-252"><list type="table"><listheader><term> 값</span><span class="sxs-lookup"><span data-stu-id="0da1e-252"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="0da1e-253"></term><description> 설명</span><span class="sxs-lookup"><span data-stu-id="0da1e-253"></term><description> Description</span></span>  
  
 <span data-ttu-id="0da1e-254"></description></listheader><item><term> 음의 정수</span><span class="sxs-lookup"><span data-stu-id="0da1e-254"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="0da1e-255"></term><description> 이 인스턴스가 <paramref name="other" /> 앞에 오는 경우</span><span class="sxs-lookup"><span data-stu-id="0da1e-255"></term><description> This instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="0da1e-256"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="0da1e-256"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="0da1e-257"></term><description> 이 인스턴스와 <paramref name="other" />의 위치가 정렬 순서에서 같은 경우</span><span class="sxs-lookup"><span data-stu-id="0da1e-257"></term><description> This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="0da1e-258"></description></item><item><term> 양의 정수</span><span class="sxs-lookup"><span data-stu-id="0da1e-258"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="0da1e-259"></term><description> 이 인스턴스가 <paramref name="other" /> 다음에 오는 경우</span><span class="sxs-lookup"><span data-stu-id="0da1e-259"></term><description> This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-260">이 멤버는 명시적 인터페이스 구현이며,</span><span class="sxs-lookup"><span data-stu-id="0da1e-260">This member is an explicit interface implementation.</span></span> <span data-ttu-id="0da1e-261"><xref:System.Tuple%608> 인스턴스가 <xref:System.Collections.IStructuralComparable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-261">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="0da1e-262">이 메서드를 사용 하면 정의의 사용자 지정 된 비교 <xref:System.Tuple%608> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-262">This method lets you define customized comparisons of <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="0da1e-263">예를 들어이 메서드는 순서를 사용할 수 있습니다 <xref:System.Tuple%608> 특정 구성 요소 값을 기반으로 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-263">For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="0da1e-264">이 메서드를 직접 호출할 수 있지만 가장 일반적으로 호출한 컬렉션 정렬 포함 하는 메서드 <xref:System.Collections.IComparer> 매개 변수를 컬렉션의 멤버를 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-264">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="0da1e-265">예를 들어에 의해 호출 됩니다는 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 메서드 및 <xref:System.Collections.SortedList.Add%2A> 의 메서드는 <xref:System.Collections.SortedList> 를 사용 하 여 인스턴스화된 개체는 <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-265">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0da1e-266"><xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> 정렬 작업에서 사용 하기 위해 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-266">The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="0da1e-267">비교의 기본 목적은 두 개체가 같은지 여부를 결정 하는 경우 하지 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-267">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="0da1e-268">두 개체가 같은지 여부를 확인 하려면 호출 된 <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-268">To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-269">다음 예제에서는 배열을 <xref:System.Tuple%608> 1940 2000에 4 개의 미국 도시에 대 한 인구 데이터에 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-269">The following example creates an array of <xref:System.Tuple%608> objects that contains population data for four U.S. cities from 1940 to 2000.</span></span> <span data-ttu-id="0da1e-270">개의 요소로 구성 된의 첫 번째 구성 요소는 도시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-270">The octuple's first component is the city name.</span></span> <span data-ttu-id="0da1e-271">나머지 6 가지 구성 요소를 2000 1940에서 10 년 간격 인구를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-271">The remaining six components represent the population at 10-year intervals from 1940 to 2000.</span></span>  
  
 <span data-ttu-id="0da1e-272">`PopulationComparer` 클래스를 제공는 <xref:System.Collections.IComparer> 배열을 옥 구성 요소 중 하나를 정렬할 수 있도록 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-272">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of octuples to be sorted by any one of its components.</span></span> <span data-ttu-id="0da1e-273">두 값에 제공 되는 `PopulationComparer` 클래스의 생성자에: 정렬 순서를 정의 하는 구성의 위치 및 <xref:System.Boolean> 튜플 개체를 오름차순 또는 내림차순으로 정렬할지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-273">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="0da1e-274">이 예제에서는 다음 순서로 정렬 되지 않은 배열 요소를 표시, 세 번째 구성 요소 (1950의 인구)를 기준으로 정렬 하 고, 및 다음 여덟 번째 구성 요소 (2000에서 인구)를 기준으로 정렬을 표시 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-274">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1950) and displays them, and then sorts them by the eighth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`8.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0da1e-275"><paramref name="other" />이 <see cref="T:System.Tuple`8" /> 개체가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-275"><paramref name="other" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="0da1e-276">이 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-276">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="0da1e-277">두 개체가 같은지 여부를 평가하는 데 사용할 방법을 정의하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-277">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="0da1e-278">지정된 비교 메서드를 기반으로 현재 <see cref="T:System.Tuple`8" /> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-278">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns>
          <span data-ttu-id="0da1e-279">현재 인스턴스가 지정된 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-279"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-280">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="0da1e-280">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0da1e-281"><xref:System.Tuple%608> 인스턴스가 <xref:System.Collections.IStructuralEquatable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-281">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="0da1e-282"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 경우에 구현이 호출 될 `other` 않습니다 `null`, 캐스팅 (C#) 또는 변환 (Visual Basic)에서는 성공적으로 하나일 수 있습니다는 <xref:System.Tuple%608> 개체 구성 요소의 총 수입니다 (포함 하 여 중첩 `Tuple` 개체)에 현재 인스턴스와 동일한 형식의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-282">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance.</span></span> <span data-ttu-id="0da1e-283"><xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> 메서드가 첫 번째 전달에서 <xref:System.Tuple%608.Item1%2A> 값은 <xref:System.Tuple%608> 비교할 개체는 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-283">The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="0da1e-284">이 메서드 호출에서 반환 하는 경우 `true`, 메서드가 다시 호출 되 고 전달 된 <xref:System.Tuple%608.Item2%2A> 두 값 <xref:System.Tuple%608> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-284">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="0da1e-285">메서드 호출이 반환 될 때까지이 과정이 계속 `false` 값 또는 둘의 특정 쌍을 비교할 때 <xref:System.Tuple%608.Rest%2A> 값이 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-285">This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="0da1e-286"><see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 사용하여 현재 <see cref="T:System.Tuple`8" /> 개체의 해시 코드를 계산하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-286">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`8" /> object.</span></span></param>
        <summary><span data-ttu-id="0da1e-287">지정된 계산 메서드를 사용하여 현재 <see cref="T:System.Tuple`8" /> 개체에 대한 해시 코드를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-287">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="0da1e-288">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-288">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-289">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="0da1e-289">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0da1e-290"><xref:System.Tuple%608> 인스턴스가 <xref:System.Collections.IStructuralEquatable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-290">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="0da1e-291">메서드는 단순히 한 호출을 래핑합니다는 `comparer` 개체의 <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-291">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="0da1e-292">두에 대 한 해시 코드를 계산 하는 데 사용 되는 알고리즘 같은 해시 코드를 반환 해야 <xref:System.Tuple%608> 를 동일한 것으로 간주 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-292">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0da1e-293">현재 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-293">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="0da1e-294">현재 <see cref="T:System.Tuple`8" /> 개체를 지정된 개체와 비교하고 현재 개체가 정렬 순서에 지정된 개체보다 이전인지, 이후인지 또는 같은 위치인지를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-294">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="0da1e-295">다음 표와 같이 정렬 순서에서 이 인스턴스와 <paramref name="obj" />의 상대적 위치를 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-295">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="0da1e-296"><list type="table"><listheader><term> 값</span><span class="sxs-lookup"><span data-stu-id="0da1e-296"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="0da1e-297"></term><description> 설명</span><span class="sxs-lookup"><span data-stu-id="0da1e-297"></term><description> Description</span></span>  
  
 <span data-ttu-id="0da1e-298"></description></listheader><item><term> 음의 정수</span><span class="sxs-lookup"><span data-stu-id="0da1e-298"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="0da1e-299"></term><description> 이 인스턴스가 <paramref name="obj" /> 앞에 오는 경우</span><span class="sxs-lookup"><span data-stu-id="0da1e-299"></term><description> This instance precedes <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="0da1e-300"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="0da1e-300"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="0da1e-301"></term><description> 이 인스턴스와 <paramref name="obj" />의 위치가 정렬 순서에서 같은 경우</span><span class="sxs-lookup"><span data-stu-id="0da1e-301"></term><description> This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="0da1e-302"></description></item><item><term> 양의 정수</span><span class="sxs-lookup"><span data-stu-id="0da1e-302"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="0da1e-303"></term><description> 이 인스턴스가 <paramref name="obj" /> 다음에 오는 경우</span><span class="sxs-lookup"><span data-stu-id="0da1e-303"></term><description> This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-304">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="0da1e-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0da1e-305"><xref:System.Tuple%608> 인스턴스가 <xref:System.IComparable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-305">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="0da1e-306">이 메서드는 제공 된 <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> 에 대 한 구현을 <xref:System.Tuple%608> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-306">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%608> class.</span></span> <span data-ttu-id="0da1e-307">메서드를 직접 호출할 수 있지만 가장 일반적으로 컬렉션 정렬의 경우 기본 오버 로드에 의해 호출 됩니다 메서드 같은 <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> 및 <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, 컬렉션의 멤버 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-307">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0da1e-308"><xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> 정렬 작업에서 사용 하기 위해 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-308">The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="0da1e-309">비교의 기본 목적은 두 개체가 같은지 여부를 결정 하는 경우 하지 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-309">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="0da1e-310">두 개체가 같은지 여부를 확인 하려면 호출 된 <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-310">To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0da1e-311">이 메서드는 각 구성 요소를 비교할 기본 개체 비교 연산자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-311">This method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-312">다음 예제에서는 구성 요소가 소수의 범위를 포함 하는 정수 옥의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-312">The following example creates an array of octuples whose components are integers that contain a range of prime numbers.</span></span> <span data-ttu-id="0da1e-313">이 예제에서는 정렬 되지 않은 순서로 배열 요소를 표시 하 고 배열에 정렬 및 다음 배열을 정렬 된 순서로 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-313">The example displays the elements of the array in unsorted order, sorts the array, and then displays the array in sorted order.</span></span> <span data-ttu-id="0da1e-314">출력으로 배열을 정렬 된 것을 보여 줍니다. <xref:System.Tuple%608.Item1%2A>, 또는 튜플의 첫 번째 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-314">The output shows that the array has been sorted by <xref:System.Tuple%608.Item1%2A>, or the tuple's first component.</span></span> <span data-ttu-id="0da1e-315">이 예제에서는 직접 호출 하지 않는 참고는 <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0da1e-315">Note that the example does not directly call the <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="0da1e-316">이 메서드를 암시적으로 호출 된 <xref:System.Array.Sort%28System.Array%29> 메서드는 배열의 각 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-316">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`8.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0da1e-317"><paramref name="obj" />이 <see cref="T:System.Tuple`8" /> 개체가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-317"><paramref name="obj" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0da1e-318">지정한 <see langword="Tuple" /> 요소의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-318">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="0da1e-319"><c>index</c>의 범위는 <see langword="Item1" />에 대해 0부터 <see langword="Tuple" />의 요소 수보다 하나 작은 수까지 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-319"><c>index</c> can range from 0 for <see langword="Item1" /> to one less than the number of elements in the <see langword="Tuple" />.</span></span></param>
        <summary><span data-ttu-id="0da1e-320">지정한 <see langword="Tuple" /> 요소의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-320">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="0da1e-321">지정한 위치에 있는 <see langword="Tuple" /> 요소의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-321">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-322"><xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> 속성은 명시적 인터페이스 구현.</span><span class="sxs-lookup"><span data-stu-id="0da1e-322">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="0da1e-323">를 호출 하려면 캐스팅 하거나 변환 해야 합니다는 <xref:System.Tuple%608> 개체는 <xref:System.Runtime.CompilerServices.ITuple> 인터페이스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-323">To call it, you must cast or convert the <xref:System.Tuple%608> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0da1e-324"><paramref name="index" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-324"><paramref name="index" /> is less than 0.</span></span>  
  
 <span data-ttu-id="0da1e-325">또는</span><span class="sxs-lookup"><span data-stu-id="0da1e-325">-or-</span></span>  
  
 <span data-ttu-id="0da1e-326"><paramref name="index" />가 <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="0da1e-326"><paramref name="index" /> is greater than or equal to <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da1e-327"><see langword="Tuple" />의 요소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-327">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="0da1e-328"><see langword="Tuple" />의 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-328">The number of elements in the <see langword="Tuple" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-329"><xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> 속성은 명시적 인터페이스 구현.</span><span class="sxs-lookup"><span data-stu-id="0da1e-329">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="0da1e-330">를 호출 하려면 캐스팅 하거나 변환 해야 합니다는 <xref:System.Tuple%608> 를 입력 한 <xref:System.Runtime.CompilerServices.ITuple> 인터페이스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-330">To call it, you must cast or convert the <xref:System.Tuple%608> type to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0da1e-331">이 <see cref="T:System.Tuple`8" /> 인스턴스의 값을 나타내는 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-331">Returns a string that represents the value of this <see cref="T:System.Tuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="0da1e-332">이 <see cref="T:System.Tuple`8" /> 개체의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-332">The string representation of this <see cref="T:System.Tuple`8" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da1e-333">이 메서드에서 반환 된 문자열은 형식 (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, * Item8*...) 여기서 *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, 및 *Item7* 의 값을 나타냅니다는 <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, 및 <xref:System.Tuple%608.Item7%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-333">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="0da1e-334">*Item8* 의 값을 나타내는 <xref:System.Tuple%608> 개체의 `Next.Item1` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-334">*Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property.</span></span> <span data-ttu-id="0da1e-335">추가 중첩 구성 요소 값에 따라 *Item8*합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-335">The value of any additional nested components follow *Item8*.</span></span> <span data-ttu-id="0da1e-336">속성 값 중 하나라도 `null`로 표시 됩니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-336">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da1e-337">다음 예제에서는 1860 1900에서에서 Michigan, 디트로이트의에 대 한 인구 데이터를 포함 하는 17 튜플을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-337">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, from 1860 to 1900.</span></span> <span data-ttu-id="0da1e-338">다음 사용 하 여는 <xref:System.Tuple%608.ToString%2A> 메서드 튜플의 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="0da1e-338">It then uses the <xref:System.Tuple%608.ToString%2A> method to display the tuple's data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`8.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>