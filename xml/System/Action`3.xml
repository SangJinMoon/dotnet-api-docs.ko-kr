<Type Name="Action&lt;T1,T2,T3&gt;" FullName="System.Action&lt;T1,T2,T3&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86d72e271293100e8741fcbeb18c528401e420b6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433564" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3&gt;(T1 arg1, T2 arg2, T3 arg3);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`3&lt;- T1, - T2, - T3&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`3" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3)(arg1 As T1, arg2 As T2, arg3 As T3)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3);" />
  <TypeSignature Language="F#" Value="type Action&lt;'T1, 'T2, 'T3&gt; = delegate of 'T1 * 'T2 * 'T3 -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">
      <span data-ttu-id="a4f64-101">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4f64-101">The type of the first parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T2">
      <span data-ttu-id="a4f64-102">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4f64-102">The type of the second parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T3">
      <span data-ttu-id="a4f64-103">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4f64-103">The type of the third parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <param name="arg1">
      <span data-ttu-id="a4f64-104">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4f64-104">The first parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg2">
      <span data-ttu-id="a4f64-105">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4f64-105">The second parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg3">
      <span data-ttu-id="a4f64-106">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4f64-106">The third parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="a4f64-107">3개의 매개 변수가 있으며 반환하지 않는 메서드를 캡슐화합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4f64-107">Encapsulates a method that has three parameters and does not return a value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f64-108">사용할 수는 <xref:System.Action%603> 대리자를 명시적으로 사용자 지정 대리자를 선언 하지 않고 메서드 매개 변수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-108">You can use the <xref:System.Action%603> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="a4f64-109">캡슐화 된 메서드에이 대리자에 의해 정의 되는 메서드 시그니처와 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-109">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="a4f64-110">즉, 캡슐화 된 메서드에 모두 값에 전달 되는 세 개의 매개 변수가 있어야 합니다. 값을 반환 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-110">This means that the encapsulated method must have three parameters that are all passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="a4f64-111">(C#에서 메서드 반환 해야 `void`합니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-111">(In C#, the method must return `void`.</span></span> <span data-ttu-id="a4f64-112">Visual Basic에서 정의 되어야 하 여는 `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="a4f64-112">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="a4f64-113">구문입니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-113">construct.</span></span> <span data-ttu-id="a4f64-114">일 수도 있습니다 무시 되는 값을 반환 하는 메서드입니다.) 일반적을 이러한 메서드는 연산을 수행 하기 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-114">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a4f64-115">세 개의 매개 변수가 있으며 값을 반환 하는 메서드를 참조 하려면 원본을 사용 하 여 <xref:System.Func%604> 대리자를 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-115">To reference a method that has three parameters and returns a value, use the generic <xref:System.Func%604> delegate instead.</span></span>  
  
 <span data-ttu-id="a4f64-116">사용 하는 경우는 <xref:System.Action%603> 대리자를 않아도를 명시적으로 세 개의 매개 변수를 사용 하 여 메서드를 캡슐화 하는 대리자를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-116">When you use the <xref:System.Action%603> delegate, you do not have to explicitly define a delegate that encapsulates a method with three parameters.</span></span> <span data-ttu-id="a4f64-117">예를 들어 다음 코드 라는 대리자를 명시적으로 선언 `StringCopy` 할당에 대 한 참조는 `CopyStrings` 메서드는 대리자 인스턴스를 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-117">For example, the following code explicitly declares a delegate named `StringCopy` and assigns a reference to the `CopyStrings` method to its delegate instance.</span></span>  
  
 [!code-csharp[System.Action~3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~3/cs/Delegate.cs#1)]
 [!code-vb[System.Action~3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~3/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="a4f64-118">다음 예제에서는이 코드를 인스턴스화하여 간소화는 <xref:System.Action%603> 명시적으로 새 대리자를 정의 하 고 명명 된 메서드를 할당 하는 대신 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-118">The following example simplifies this code by instantiating the <xref:System.Action%603> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-csharp[System.Action~3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~3/cs/Action3.cs#2)]
 [!code-vb[System.Action~3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~3/vb/Action3.vb#2)]  
  
 <span data-ttu-id="a4f64-119">사용할 수도 있습니다는 <xref:System.Action%603> 다음 예제와 같이 C# 무명 메서드와 함께 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-119">You can also use the <xref:System.Action%603> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="a4f64-120">(무명 메서드에 대 한 소개를 참조 하십시오. [무명 메서드](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="a4f64-120">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Action~3#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~3/cs/Anon.cs#3)]  
  
 <span data-ttu-id="a4f64-121">람다 식을 지정할 수도 있습니다는 <xref:System.Action%603> 다음 예제와 같이 인스턴스를 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4f64-121">You can also assign a lambda expression to an <xref:System.Action%603> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="a4f64-122">(람다 식에 대 한 소개를 참조 하십시오. [람다 식](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="a4f64-122">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Action~3#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~3/cs/Lambda.cs#4)]
 [!code-vb[System.Action~3#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~3/vb/lambda.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`4" />
  </Docs>
</Type>