<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NullReferenceException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5871adebd50877699047b62f9d350cf2555dfe480.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">871adebd50877699047b62f9d350cf2555dfe480</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.NullReferenceException">
          <source>The exception that is thrown when there is an attempt to dereference a null object reference.</source>
          <target state="translated">null 개체 참조를 역참조하려고 할 때 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>A <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception is thrown when you try to access a member on a type whose value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 값 형식의 멤버에 액세스 하려고 할 때 예외가 throw 됩니다 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>A <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception typically reflects developer error and is thrown in the following scenarios:</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 예외에서 일반적으로 개발자 오류를 반영 하 고 다음과 같은 시나리오에서 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>You've forgotten to instantiate a reference type.</source>
          <target state="translated">참조 형식을 인스턴스화할 하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>In the following example, <ph id="ph1">`names`</ph> is declared but never instantiated:</source>
          <target state="translated">다음 예에서 <ph id="ph1">`names`</ph> 선언 되었지만 절대 인스턴스화되지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>Some compilers issue a warning when they compile this code.</source>
          <target state="translated">일부 컴파일러에서는이 코드를 컴파일할 때 경고가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>Others issue an error, and the compilation fails.</source>
          <target state="translated">다른 오류를를 실행 하 고, 컴파일이 실패 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>To address this problem, instantiate the object so that its value is no longer <ph id="ph1">`null`</ph>.</source>
          <target state="translated">해당 값이 더 이상 더이 문제를 해결 하기 위해 개체를 인스턴스화할 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>The following example does this by calling a type's class constructor.</source>
          <target state="translated">다음 예제에서는 형식의 클래스 생성자를 호출 하 여이 수행 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>You've forgotten to dimension an array before initializing it.</source>
          <target state="translated">배열 초기화 하기 전에 차원 하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>In the following example, <ph id="ph1">`values`</ph> is declared to be an integer array, but the number of elements that it contains is never specified.</source>
          <target state="translated">다음 예에서 <ph id="ph1">`values`</ph> 정수 배열을 것으로 선언 하지만 포함 된 요소의 수를 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>The attempt to initialize its values therefore thrown a  <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">따라서 발생 하는 값 초기화를 시도 <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>You can eliminate the exception by declaring the number of elements in the array before initializing it, as the following example does.</source>
          <target state="translated">다음 예제에서는 마찬가지로 초기화 하기 전에 배열의 요소 수를 선언 하 여 예외를 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>For more information on declaring and initializing arrays, see <bpt id="p1">[</bpt>Arrays<ept id="p1">](http://msdn.microsoft.com/library/bb79bdde-e570-4c30-adb0-1dd5759ae041)</ept> and <bpt id="p2">[</bpt>Arrays<ept id="p2">](http://msdn.microsoft.com/library/dbf29737-b589-4443-bee6-a27588d9c67e)</ept>.</source>
          <target state="translated">선언 및 배열 초기화에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>배열<ept id="p1">](http://msdn.microsoft.com/library/bb79bdde-e570-4c30-adb0-1dd5759ae041)</ept> 및 <bpt id="p2">[</bpt>배열<ept id="p2">](http://msdn.microsoft.com/library/dbf29737-b589-4443-bee6-a27588d9c67e)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>You get a <bpt id="p1">**</bpt>null<ept id="p1">**</ept> return value from a method, and then call a method on the returned type.</source>
          <target state="translated">얻게는 <bpt id="p1">**</bpt>null<ept id="p1">**</ept> 메서드로부터 값을 반환 하 고 반환 되는 형식에서 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>This sometimes is the result of a documentation error; the documentation fails to note that a method call can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">다음 경우에 따라은 문서 오류; 결과 메서드 호출이 반환 될 수 있는지 확인 하는 설명서 실패 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>In other cases, your code erroneously assumes that the method will always return a non-<bpt id="p1">**</bpt>null<ept id="p1">**</ept> value.</source>
          <target state="translated">경우에 따라 코드 잘못 가정 하는 메서드는 항상 반환 이외<bpt id="p1">**</bpt>null<ept id="p1">**</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>The code in the following example assumes that the <ph id="ph1">&lt;xref:System.Array.Find%2A?displayProperty=nameWithType&gt;</ph> method always returns <ph id="ph2">`Person`</ph> object whose <ph id="ph3">`FirstName`</ph> field matches a search string.</source>
          <target state="translated">다음 예제에서 코드를 가정 하는 <ph id="ph1">&lt;xref:System.Array.Find%2A?displayProperty=nameWithType&gt;</ph> 메서드는 항상 반환 <ph id="ph2">`Person`</ph> 개체 <ph id="ph3">`FirstName`</ph> 필드가 검색 문자열과 일치 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>Because there is no match, the runtime throws a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">일치 항목이 없는 이기 때문에 런타임에서 throw 된 <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>To address this problem, test the method's return value to ensure that it is not <ph id="ph1">`null`</ph> before calling any of its members, as the following example does.</source>
          <target state="translated">이 문제를 해결 하려면 있지 않은지 확인 하는 메서드의 반환 값을 테스트 <ph id="ph1">`null`</ph> 호출 하기 전에 모든 해당 멤버의 다음 예제에서는 마찬가지로 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>You're using an expression (for example, you're chaining a list of methods or properties together) to retrieve a value and, although you're checking whether the value is <ph id="ph1">`null`</ph>, the runtime still throws a <ph id="ph2">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">식을 사용 하는 (예를 들어 연결 메서드 또는 속성의 목록을 함께) 값을 검색 하 고 값이 있는지 여부를 확인 하지만 <ph id="ph1">`null`</ph>, 런타임에서 throw 여전히는 <ph id="ph2">&lt;xref:System.NullReferenceException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>This occurs because one of the intermediate values in the expression returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">식의 중간 값 중 하나를 반환 하기 때문에 발생 하는이 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>As a result, your rest for <ph id="ph1">`null`</ph> is never evaluated.</source>
          <target state="translated">결과적으로 사용자에 대해 나머지 <ph id="ph1">`null`</ph> 계산 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>The following example defines a <ph id="ph1">`Pages`</ph> object that  caches information about web pages, which are presented by <ph id="ph2">`Page`</ph> objects.</source>
          <target state="translated">다음 예제에서는 정의 <ph id="ph1">`Pages`</ph> 하 여 표시 되는 웹 페이지에 대 한 정보를 캐시 하는 개체 <ph id="ph2">`Page`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>The <ph id="ph1">`Example.Main`</ph> method checks whether the current web page has a non-null title and, if it does, displays the title.</source>
          <target state="translated"><ph id="ph1">`Example.Main`</ph> 메서드 인지 확인 하는 현재 웹 페이지에 null이 아닌 제목이, 그렇지 않으면 제목을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>Despite this check, however, the method throws a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">하지만 메서드에서 throw이 검사 불구 하 고는 <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>The exception is thrown because <ph id="ph1">`pages.CurrentPage`</ph> returns <ph id="ph2">`null`</ph> if no page information is  stored in the cache.</source>
          <target state="translated">때문에 예외가 throw 된 <ph id="ph1">`pages.CurrentPage`</ph> 반환 <ph id="ph2">`null`</ph> 캐시에 저장 된 페이지 정보가 없는 경우.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>This exception can be corrected by testing the value of the <ph id="ph1">`CurrentPage`</ph> property before retrieving the current <ph id="ph2">`Page`</ph> object's <ph id="ph3">`Title`</ph> property, as the following example does:</source>
          <target state="translated">값을 테스트 하 여이 예외를 해결할 수는 <ph id="ph1">`CurrentPage`</ph> 현재 검색 하기 전에 속성 <ph id="ph2">`Page`</ph> 개체의 <ph id="ph3">`Title`</ph> 속성을 다음 예제와 같이 않습니다:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>You're enumerating the elements of an array that contains reference types, and your attempt to process one of the elements throws a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">참조 형식 및 요소 중 하나를 throw 하는 프로세스를 포함 하는 배열의 요소를 열거 하는 <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>The following example defines a string array.</source>
          <target state="translated">다음 예제에서는 문자열 배열을 정의합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>A <ph id="ph1">`for`</ph> statement enumerates the elements in the array and calls each string's <ph id="ph2">&lt;xref:System.String.Trim%2A&gt;</ph> method before displaying the string.</source>
          <target state="translated">A <ph id="ph1">`for`</ph> 문이 배열의 요소를 열거 하 고 호출 하는 각 문자열 <ph id="ph2">&lt;xref:System.String.Trim%2A&gt;</ph> 문자열을 표시 하기 전에 메서드.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>This exception occurs if you assume that each element of the array must contain a non-null value, and the value of the array element is in fact <ph id="ph1">`null`</ph>.</source>
          <target state="translated">배열의 각 요소는 null이 아닌 값을 포함 해야 하 고 배열 요소의 값이 실제로 가정 하는 경우이 예외가 발생 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>The exception can be eliminated by testing whether the element is <ph id="ph1">`null`</ph> before performing any operation on that element, as the following example shows.</source>
          <target state="translated">요소가 있는지 여부를 테스트 하 여 예외를 제거할 수 있습니다 <ph id="ph1">`null`</ph> 해당 요소에 대 한 작업을 수행 하기 전에 다음 예제와 같이 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>A <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception is thrown by a method that is passed <ph id="ph2">`null`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 전달 되는 메서드가 예외를 throw <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>Some methods validate the arguments that are passed to them.</source>
          <target state="translated">일부 메서드는에 전달 된 인수를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>If they do and one of the arguments is <ph id="ph1">`null`</ph>, the method throws an <ph id="ph2">&lt;xref:System.ArgumentNullException?displayProperty=nameWithType&gt;</ph> exception.</source>
          <target state="translated">수행 하 고 인수 중 하나가 <ph id="ph1">`null`</ph>, 메서드에서 throw 한 <ph id="ph2">&lt;xref:System.ArgumentNullException?displayProperty=nameWithType&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>Otherwise, it throws a <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> exception.</source>
          <target state="translated">그렇지 않으면 throw 된 <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>The following example illustrates this scenario.</source>
          <target state="translated">다음 예제에서는이 시나리오를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>To address this issue, make sure that the argument passed to the method is not <ph id="ph1">`null`</ph>, or handle the thrown exception in a <ph id="ph2">`try…catch…finally`</ph> block.</source>
          <target state="translated">이 문제를 해결 하기 위해 아닌지 확인 하는 메서드에 전달 된 인수 <ph id="ph1">`null`</ph>에서 throw 된 예외를 처리 또는 한 <ph id="ph2">`try…catch…finally`</ph> 블록입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>For more information, see <bpt id="p1">[</bpt>Exceptions<ept id="p1">](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>예외<ept id="p1">](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>The following Microsoft intermediate language (MSIL) instructions throw <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph>: <ph id="ph2">`callvirt`</ph>, <ph id="ph3">`cpblk`</ph>, <ph id="ph4">`cpobj`</ph>, <ph id="ph5">`initblk`</ph>, <ph id="ph6">`ldelem.&lt;type&gt;`</ph>, <ph id="ph7">`ldelema`</ph>, <ph id="ph8">`ldfld`</ph>, <ph id="ph9">`ldflda`</ph>, <ph id="ph10">`ldind.&lt;type&gt;`</ph>, <ph id="ph11">`ldlen`</ph>, <ph id="ph12">`stelem.&lt;type&gt;`</ph>, <ph id="ph13">`stfld`</ph>, <ph id="ph14">`stind.&lt;type&gt;`</ph>, <ph id="ph15">`throw`</ph>, and <ph id="ph16">`unbox`</ph>.</source>
          <target state="translated">MSIL (intermediate language) 명령은 throw 다음 Microsoft <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph>: <ph id="ph2">`callvirt`</ph>, <ph id="ph3">`cpblk`</ph>, <ph id="ph4">`cpobj`</ph>, <ph id="ph5">`initblk`</ph>, <ph id="ph6">`ldelem.&lt;type&gt;`</ph>, <ph id="ph7">`ldelema`</ph>, <ph id="ph8">`ldfld`</ph>, <ph id="ph9">`ldflda`</ph>, <ph id="ph10">`ldind.&lt;type&gt;`</ph> <ph id="ph11">`ldlen`</ph>, <ph id="ph12">`stelem.&lt;type&gt;`</ph>, <ph id="ph13">`stfld`</ph>, <ph id="ph14">`stind.&lt;type&gt;`</ph>, <ph id="ph15">`throw`</ph>, 및 <ph id="ph16">`unbox`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source><ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> uses the HRESULT COR_E_NULLREFERENCE, which has the value 0x80004003.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 0x80004003 값이 있는 HRESULT COR_E_NULLREFERENCE를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.NullReferenceException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">인스턴스에 대 한 초기 속성 값 목록은 <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph>, 참조는 <ph id="ph2">&lt;xref:System.NullReferenceException.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source><bpt id="p1">**</bpt>Handling NullReferenceException in release code<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>릴리스 코드에서 NullReferenceException 처리<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>It's usually better to avoid a NullReferenceException than to handle it after it occurs.</source>
          <target state="translated">일반적으로 발생 한 후 처리 하기 보다 nullreferenceexception이 발생 하지 않도록 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>Handling an exception can make your code harder to maintain and understand, and can sometimes introduce other bugs.</source>
          <target state="translated">예외 처리로 인해 코드는 유지 관리하고 이해하기가 더 어려워지며 때로는 다른 버그가 발생할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>A NullReferenceException is often a non-recoverable error.</source>
          <target state="translated">NullReferenceException은 대개 복구할 수 없는 오류입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>In these cases, letting the exception stop the app might be the best alternative.</source>
          <target state="translated">이러한 경우 예외로 인해 앱이 중지되도록 하는 것이 최상의 방법일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>However, there are many situations where handling the error can be useful:</source>
          <target state="translated">하지만 오류 처리가 유용한 경우도 많이 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>Your app can ignore objects that are null.</source>
          <target state="translated">앱에서 null 개체를 무시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>For example, if your app retrieves and processes records in a database, you might be able to ignore some number of bad records that result in null objects.</source>
          <target state="translated">예를 들어 앱에서 데이터베이스의 레코드를 검색하고 처리하는 경우 null 개체를 발생시키는 잘못된 레코드를 무시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>Recording the bad data in a log file or in the application UI might be all you have to do.</source>
          <target state="translated">로그 파일이나 응용 프로그램 UI에 있는 잘못된 데이터를 기록하기만 하면 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>You can recover from the exception.</source>
          <target state="translated">예외에서 복구할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>For example, a call to a web service that returns a reference type might return null if the connection is lost or the connection times out. You can attempt to reestablish the connection and try the call again.</source>
          <target state="translated">예를 들어 참조 형식을 반환하는 웹 서비스에 대한 호출은 연결이 끊어졌거나 연결 시간이 초과된 경우 null을 반환할 수 있습니다. 연결을 다시 설정한 다음 다시 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>You can restore the state of your app to a valid state.</source>
          <target state="translated">앱 상태를 올바른 상태로 복원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>For example, you might be performing a multi-step task that requires you to save information to a data store before you call a method that throws a NullReferenceException.</source>
          <target state="translated">예를 들어 NullReferenceException을 throw하는 메서드를 호출하기 전에 정보를 데이터 저장소에 저장하도록 하는 다단계 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>If the uninitialized object would corrupt the data record, you can remove the previous data before you close the app.</source>
          <target state="translated">초기화되지 않은 개체로 인해 데이터 레코드가 손상될 경우 앱을 종료하기 전에 이전 데이터를 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>You want to report the exception.</source>
          <target state="translated">그리고 예외 보고를 원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>For example, if the error was caused by a mistake from the user of your app, you can generate a message to help him supply the correct information.</source>
          <target state="translated">예를 들어 앱 사용자의 실수로 오류가 발생한 경우 사용자가 올바른 정보를 제공할 수 있도록 도와 주는 메시지를 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>You can also log information about the error to help you fix the problem.</source>
          <target state="translated">문제를 해결할 수 있도록 오류에 대한 정보를 기록할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NullReferenceException">
          <source>Some frameworks, like ASP.NET, have a high-level exception handler that captures all errors to that the app never crashes; in that case, logging the exception might be the only way you can know that it occurs.</source>
          <target state="translated">ASP.NET과 같은 일부 프레임워크에는 앱이 충돌하지 않도록 모든 오류를 캡처하는 수준 높은 예외 처리기가 포함되어 있습니다. 이러한 경우 예외 발생 여부를 확인할 수 있는 방법은 예외를 로깅하는 것뿐입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="T:System.NullReferenceException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NullReferenceException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.NullReferenceException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NullReferenceException" /&gt;</ph> class, setting the <ph id="ph2">&lt;see cref="P:System.Exception.Message" /&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The value 'null' was found where an instance of an object was required."</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.NullReferenceException" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고, 새 인스턴스의 <ph id="ph2">&lt;see cref="P:System.Exception.Message" /&gt;</ph> 속성을 오류를 설명하는 시스템 제공 메시지(예: "개체 인스턴스가 있어야 하는 곳에 'null' 값이 있습니다.")로 설정합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">이 메시지는 현재 시스템 문화권을 고려합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">지역화된 오류 메시지 문자열입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">오류를 설명하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.String)">
          <source>The content of <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is intended to be understood by humans.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>메시지<ept id="p1">&lt;/c&gt;</ept> 콘텐츠는 사용자의 이해를 돕기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NullReferenceException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">지정된 오류 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.NullReferenceException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">원본 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NullReferenceException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.NullReferenceException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>XML 및 SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아니면 현재 예외는 내부 예외를 처리하는 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 블록에서 발생합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NullReferenceException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.NullReferenceException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외의 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, <ph id="ph2">`null`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.NullReferenceException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">내부 예외 참조</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>