<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AttributeUsageAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51c82c87b356ecafd83697520f6eee06e0ff81fae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c82c87b356ecafd83697520f6eee06e0ff81fae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AttributeUsageAttribute">
          <source>Specifies the usage of another attribute class.</source>
          <target state="translated">다른 특성 클래스의 사용을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.AttributeUsageAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>When you are defining your own attribute class, you can control the manner in which it is used by placing an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> on your attribute class.</source>
          <target state="translated">사용자 고유의 특성 클래스를 정의 하는 배치에 사용 되는 방식으로 제어할 수 있습니다는 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> 특성 클래스에 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>The indicated attribute class must derive from <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, either directly or indirectly.</source>
          <target state="translated">지정한 특성 클래스에서 파생 되어야 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, 직접 또는 간접적으로 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>Attribute classes have positional and named parameters.</source>
          <target state="translated">위치 및 명명 된 매개 변수가 포함 하는 특성 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>Each public constructor for an attribute class defines a valid sequence of positional parameters for that class.</source>
          <target state="translated">특성 클래스에 대 한 public 생성자는 각각 해당 클래스에 대 한 위치 매개 변수의 올바른 순서를 정의합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>Named parameters are defined by the non-static, public, and read-write fields or properties of the attribute class.</source>
          <target state="translated">명명 된 매개 변수는 static이 아닌, public 및 읽기 / 쓰기 필드 또는 특성 클래스의 속성에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>The three properties of <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> are set by defining the following parameters:</source>
          <target state="translated">세 가지 속성 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> 다음 매개 변수를 정의 하 여 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>This positional parameter specifies the program elements that the indicated attribute can be placed on.</source>
          <target state="translated">이 위치 매개 변수에서 지정한 특성을 지정할 수 있는 프로그램 요소를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>The set of all possible elements that you can place an attribute on is listed in the <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> enumeration.</source>
          <target state="translated">특성에 배치할 수 있는 사용 가능한 모든 요소 집합에 나열 된는 <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>You can combine several <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> values using a bitwise OR operation to get the desired combination of valid program elements.</source>
          <target state="translated">여러를 조합 <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> 비트 OR 연산을 사용 하 여 원하는 조합의 유효한 프로그램 요소를 가져올 값입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>This named parameter specifies whether the indicated attribute can be specified more than once for a given program element.</source>
          <target state="translated">이 명명 된 매개 변수는 표시 된 특성에 지정된 된 프로그램 요소에 대 한 두 번 이상 지정할 수 있는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>This named parameter specifies whether the indicated attribute can be inherited by derived classes and overriding members.</source>
          <target state="translated">이 명명 된 매개 변수 파생 된 클래스 및 재정의 하는 멤버는 표시 된 특성을 상속할 수 있는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AttributeUsageAttribute">
          <source>For more information about using attributes, see <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> and <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> 및 <bpt id="p1">[</bpt>특성<ept id="p1">](~/docs/standard/attributes/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
          <source>The set of values combined using a bitwise OR operation to indicate which program elements are valid.</source>
          <target state="translated">올바른 프로그램 요소임을 나타내도록 비트 OR 연산을 사용하여 결합된 값 집합입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AttributeUsageAttribute" /&gt;</ph> class with the specified list of <ph id="ph2">&lt;see cref="T:System.AttributeTargets" /&gt;</ph>, the <ph id="ph3">&lt;see cref="P:System.AttributeUsageAttribute.AllowMultiple" /&gt;</ph> value, and the <ph id="ph4">&lt;see cref="P:System.AttributeUsageAttribute.Inherited" /&gt;</ph> value.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.AttributeUsageAttribute" /&gt;</ph> 목록, <ph id="ph2">&lt;see cref="T:System.AttributeTargets" /&gt;</ph> 값 및 <ph id="ph3">&lt;see cref="P:System.AttributeUsageAttribute.AllowMultiple" /&gt;</ph> 값을 사용하여 <ph id="ph4">&lt;see cref="P:System.AttributeUsageAttribute.Inherited" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
          <source>You can combine several <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> values using a bitwise OR operation to get the desired combination of valid program elements.</source>
          <target state="translated">여러를 조합 <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> 비트 OR 연산을 사용 하 여 원하는 조합의 유효한 프로그램 요소를 가져올 값입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
          <source>For default property values, see the <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.ValidOn%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> properties.</source>
          <target state="translated">기본 속성 값에 대 한 참조는 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.ValidOn%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
          <source>The definition of the DispId attribute illustrates the use of a bitwise OR operation to combine several <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> values.</source>
          <target state="translated">DispId 특성의 정의에서는 여러 조합에 비트 OR 연산 사용 <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.AttributeUsageAttribute.AllowMultiple">
          <source>Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</source>
          <target state="translated">표시된 특성의 인스턴스가 하나의 프로그램 요소에 여러 개 지정될 수 있는지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.AllowMultiple">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if more than one instance is allowed to be specified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">여러 개의 인스턴스가 지정될 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.AllowMultiple">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.AllowMultiple">
          <source>An attribute that can be specified more than once for a program element is called a multi-use attribute.</source>
          <target state="translated">프로그램 요소에 대해 두 번 이상 지정할 수 있는 다용도 특성을 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.AllowMultiple">
          <source>An attribute that can be specified only once is called a single-use attribute.</source>
          <target state="translated">한 번만 지정할 수 있는 사용 가능한 단일 특성을 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</source>
          <target state="translated">지정된 특성이 파생된 클래스에서 상속되고 멤버를 재정의하는지 여부를 결정하는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute can be inherited by derived classes and overriding members; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 특성이 파생된 클래스에서 상속되고 멤버를 재정의할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>The <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> property determines:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> 속성을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>Whether classes derived from a base class tagged with the attribute to which the <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> attribute is applied inherit that attribute.</source>
          <target state="translated">여부를 기본 클래스에서 파생 된 클래스를 특성으로 태그가 지정 된 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> 특성이 적용 된 해당 특성을 상속 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>Whether methods of derived classes that override a base class method tagged with the attribute to which the <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> attribute is applied inherit that attribute.</source>
          <target state="translated">특성을 태그로 지정의 메서드는 기본 클래스 메서드를 재정의 하는 클래스를 파생 하는 여부는 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> 특성이 적용 된 해당 특성을 상속 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>(If a class inherits a base class member, it also inherits any attributes applied to that member.)</source>
          <target state="translated">(기본 클래스 멤버를 상속 하는 클래스를 경우 상속 해당 멤버에 적용 된 모든 특성입니다.)</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>The following example illustrates the difference between an attribute to which an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> attribute with an <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> property value of <ph id="ph3">`true`</ph> is applied and one to which  <ph id="ph4">&lt;xref:System.AttributeUsageAttribute&gt;</ph> attribute with an <ph id="ph5">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> property value of <ph id="ph6">`false`</ph> is applied .</source>
          <target state="translated">다음 예제는 특성 간의 차이점을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> 특성이 <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> 의 속성 값 <ph id="ph3">`true`</ph> 적용 된 다른 하나는 <ph id="ph4">&lt;xref:System.AttributeUsageAttribute&gt;</ph> 특성이 <ph id="ph5">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> 의 속성 값 <ph id="ph6">`false`</ph> 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>The example defines two attributes, <ph id="ph1">`InheritedAttribute`</ph> and <ph id="ph2">`NotInheritedAttribute`</ph>.</source>
          <target state="translated">이 예제에서는 두 가지 특성을 정의 <ph id="ph1">`InheritedAttribute`</ph> 및 <ph id="ph2">`NotInheritedAttribute`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>Both attributes can apply to classes and methods.</source>
          <target state="translated">두 특성 클래스 및 메서드를 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>Because the <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute&gt;</ph> attribute applied to <ph id="ph3">`InheritedAttribute`</ph> is <ph id="ph4">`true`</ph>, it is inherited by derived classes and the members of derived classes that override the base class method.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.AttributeUsageAttribute&gt;</ph> 에 적용 된 특성 <ph id="ph3">`InheritedAttribute`</ph> 은 <ph id="ph4">`true`</ph>, 파생된 클래스에서 상속 된 및의 멤버는 기본 클래스 메서드를 재정의 하는 클래스를 파생 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>On the other hand, because the <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.AttributeUsageAttribute&gt;</ph> attribute applied to <ph id="ph3">`NotInheritedAttribute`</ph> is <ph id="ph4">`false`</ph>, it is not inherited by derived classes and the members of derived classes that override the base class method.</source>
          <target state="translated">반면에 때문에 <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.AttributeUsageAttribute&gt;</ph> 에 적용 된 특성 <ph id="ph3">`NotInheritedAttribute`</ph> 은 <ph id="ph4">`false`</ph>, 파생된 클래스에서 상속 하지는 및의 멤버는 기본 클래스 메서드를 재정의 하는 클래스를 파생 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>The example then defines two  base classes.</source>
          <target state="translated">다음 예에서는 두 개의 기본 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>The first, <ph id="ph1">`BaseA`</ph>, has a single method, <ph id="ph2">`MethodA`</ph>.</source>
          <target state="translated">첫 번째 <ph id="ph1">`BaseA`</ph>, 단일 메서드가 <ph id="ph2">`MethodA`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>The second, <ph id="ph1">`BaseB`</ph>, has a single method, <ph id="ph2">`MethodB`</ph>.</source>
          <target state="translated">두 번째 페이지인 <ph id="ph1">`BaseB`</ph>, 단일 메서드가 <ph id="ph2">`MethodB`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source><ph id="ph1">`BaseA`</ph> and <ph id="ph2">`MethodA`</ph> are tagged with the <ph id="ph3">`InheritedAttribute`</ph> attribute, and <ph id="ph4">`BaseB`</ph> and <ph id="ph5">`MethodB`</ph> are tagged with the <ph id="ph6">`NotInheritedAttribute`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">`BaseA`</ph> 및 <ph id="ph2">`MethodA`</ph> 태그로 지정 됩니다는 <ph id="ph3">`InheritedAttribute`</ph> 특성 및 <ph id="ph4">`BaseB`</ph> 및 <ph id="ph5">`MethodB`</ph> 태그로 지정 됩니다는 <ph id="ph6">`NotInheritedAttribute`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source><ph id="ph1">`DerivedA`</ph> inherits from <ph id="ph2">`BaseA`</ph> and overrides its <ph id="ph3">`MethodA`</ph> method.</source>
          <target state="translated"><ph id="ph1">`DerivedA`</ph> 상속 <ph id="ph2">`BaseA`</ph> 재정의 하 고 해당 <ph id="ph3">`MethodA`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source><ph id="ph1">`DerivedB`</ph> inherits from <ph id="ph2">`BaseB`</ph> and overrides its <ph id="ph3">`MethodB`</ph> method.</source>
          <target state="translated"><ph id="ph1">`DerivedB`</ph> 상속 <ph id="ph2">`BaseB`</ph> 재정의 하 고 해당 <ph id="ph3">`MethodB`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.Inherited">
          <source>As the output from the example shows, <ph id="ph1">`DerivedA`</ph> and <ph id="ph2">`DerivedA.MethodA`</ph> inherit the <ph id="ph3">`InheritedAttribute`</ph> attribute, but <ph id="ph4">`DerivedB`</ph> and <ph id="ph5">`DerivedB.MethodB`</ph> do not inherit the <ph id="ph6">`NotInheritedAttribute`</ph> attribute.</source>
          <target state="translated">예제에서 출력으로 <ph id="ph1">`DerivedA`</ph> 및 <ph id="ph2">`DerivedA.MethodA`</ph> 상속는 <ph id="ph3">`InheritedAttribute`</ph> 특성 하지만 <ph id="ph4">`DerivedB`</ph> 및 <ph id="ph5">`DerivedB.MethodB`</ph> 상속 하지 않습니다는 <ph id="ph6">`NotInheritedAttribute`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.AttributeUsageAttribute.ValidOn">
          <source>Gets a set of values identifying which program elements that the indicated attribute can be applied to.</source>
          <target state="translated">표시된 특성이 적용될 수 있는 프로그램 요소를 식별하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.ValidOn">
          <source>One or several <ph id="ph1">&lt;see cref="T:System.AttributeTargets" /&gt;</ph> values.</source>
          <target state="translated">하나 또는 여러 개의 <ph id="ph1">&lt;see cref="T:System.AttributeTargets" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AttributeUsageAttribute.ValidOn">
          <source>The default is <ph id="ph1">&lt;see langword="All" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="All" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>