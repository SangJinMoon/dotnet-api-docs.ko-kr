<Type Name="Decimal" FullName="System.Decimal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21d399bb6ab16180910e704f47a0a42624bfa5f7" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34255416" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Decimal : IComparable, IComparable&lt;decimal&gt;, IConvertible, IEquatable&lt;decimal&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Decimal" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IComparable(Of Decimal), IConvertible, IDeserializationCallback, IEquatable(Of Decimal), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IComparable&lt;System::Decimal&gt;, IConvertible, IEquatable&lt;System::Decimal&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b0d62-101">10진수를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0d62-101">Represents a decimal number.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-102"><xref:System.Decimal> 값 형식은 음수 79228162514264337593543950335에서 양수 79228162514264337593543950335 사이의 10 진수 숫자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-102">The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335.</span></span> <span data-ttu-id="b0d62-103">기본값을 `Decimal` 은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-103">The default value of a `Decimal` is 0.</span></span> <span data-ttu-id="b0d62-104"><xref:System.Decimal> 값 형식은 많은 수의 중요 한 정수 부분과 소수 부분 및 반올림 오류가 없는지 필요로 하는 회계 계산에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-104">The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors.</span></span> <span data-ttu-id="b0d62-105"><xref:System.Decimal> 형식 반올림 하는 것에 대 한 필요성을 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-105">The <xref:System.Decimal> type does not eliminate the need for rounding.</span></span> <span data-ttu-id="b0d62-106">대신, 반올림 오류를 최소화합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-106">Rather, it minimizes errors due to rounding.</span></span> <span data-ttu-id="b0d62-107">예를 들어 다음 코드는 1이 아닌 0.9999999999999999999999999999의 결과 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-107">For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.</span></span>  
  
 [!code-cpp[System.Decimal.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp#1)]
 [!code-csharp[System.Decimal.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#1)]
 [!code-vb[System.Decimal.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#1)]  
  
 <span data-ttu-id="b0d62-108">나누기 및 곱하기의 결과를 전달 하는 경우는 <xref:System.Math.Round%2A> 메서드를 결과 손실이 발생 하지 않습니다 정밀도, 다음 코드 에서처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-108">When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows.</span></span>  
  
 [!code-cpp[System.Decimal.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp#2)]
 [!code-csharp[System.Decimal.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#2)]
 [!code-vb[System.Decimal.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#2)]  
  
 <span data-ttu-id="b0d62-109">10 진수 숫자는 부호 구성 된 부동 소수점 값, 여기서 각 숫자 값의 범위는 0에서 9, 숫자 값 및의 정수 부분과 소수 부분을 구분 하는 부동 소수점의 위치를 나타내는 배율 인수는 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-109">A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.</span></span>  
  
 <span data-ttu-id="b0d62-110">이진 표현은 <xref:System.Decimal> 부호 1 비트, 96 비트 정수의 수 및 96 비트 정수의 나누고 어떤 부분이 소수 부분을 지정 하는 데 사용 되는 배율 인수 값으로 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-110">The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="b0d62-111">배율 인수는 범위: 0 ~ 28 지수가 숫자 10을 암시적으로.</span><span class="sxs-lookup"><span data-stu-id="b0d62-111">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span> <span data-ttu-id="b0d62-112">따라서의 이진 표현은 <xref:System.Decimal> 폼 값 ((-2<sup>96</sup> 2로<sup>96</sup>) / 10<sup>(0 ~ 28)</sup>) 여기서-(2<sup>96</sup>-1) 같으면 <xref:System.Decimal.MinValue>, 2 및<sup>96</sup>-1과 같음 <xref:System.Decimal.MaxValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-112">Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>.</span></span> <span data-ttu-id="b0d62-113">이진 표현에 대 한 자세한 내용은 <xref:System.Decimal> 값 및 예를 들어 참조는 <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> 생성자 및 <xref:System.Decimal.GetBits%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-113">For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="b0d62-114">소수 자릿수 인수에 0 모든 후행 전처리도는 <xref:System.Decimal> 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-114">The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number.</span></span> <span data-ttu-id="b0d62-115">뒤에 오는 0의 값에 영향을 주지 않는 <xref:System.Decimal> 산술 또는 비교 연산에서 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-115">Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations.</span></span> <span data-ttu-id="b0d62-116">그러나 뒤에 오는 0 수 여 표시할 수는 <xref:System.Decimal.ToString%2A> 메서드는 적절 한 형식 문자열 적용 된 경우.</span><span class="sxs-lookup"><span data-stu-id="b0d62-116">However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.</span></span>  
  
## <a name="conversion-considerations"></a><span data-ttu-id="b0d62-117">변환 고려 사항</span><span class="sxs-lookup"><span data-stu-id="b0d62-117">Conversion Considerations</span></span>  
 <span data-ttu-id="b0d62-118">이 형식으로 변환 하는 메서드를 제공 <xref:System.Decimal> 값을 <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, 및 <xref:System.UInt64> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-118">This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values.</span></span> <span data-ttu-id="b0d62-119">이러한 정수 계열 형식으로 변환할 때 <xref:System.Decimal> 확대 변환 하는 정보가 손실 하거나 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-119">Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.</span></span>  
  
 <span data-ttu-id="b0d62-120">변환할 때 <xref:System.Decimal> 정수 계열 형식 중 하나에 축소 변환 반올림 하는 <xref:System.Decimal> 값 0은 가장 가까운 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-120">Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero.</span></span> <span data-ttu-id="b0d62-121">C#과 같은 일부 언어에는 또한의 변환을 지원 <xref:System.Decimal> 값을 <xref:System.Char> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-121">Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values.</span></span> <span data-ttu-id="b0d62-122">대상 형식에 이러한 변환의 결과 표현할 수 없는 경우는 <xref:System.OverflowException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-122">If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.</span></span>  
  
 <span data-ttu-id="b0d62-123"><xref:System.Decimal> 형식으로 변환 하는 메서드도 제공 <xref:System.Decimal> 값을 <xref:System.Single> 및 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-123">The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values.</span></span> <span data-ttu-id="b0d62-124">변환할 때 <xref:System.Decimal> 를 <xref:System.Single> 또는 <xref:System.Double> 정밀도 하지만 크기에 대 한 정보가 아닌 변환된 된 값의 손실 될 수 하는 축소 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-124">Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value.</span></span> <span data-ttu-id="b0d62-125">변환 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-125">The conversion does not throw an exception.</span></span>  
  
 <span data-ttu-id="b0d62-126">변환할 때 <xref:System.Single> 또는 <xref:System.Double> 를 <xref:System.Decimal> throw 한 <xref:System.OverflowException> 으로 변환의 결과 표현할 수 없는 경우 예외는 <xref:System.Decimal>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-126">Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>.</span></span>  
  
## <a name="performing-operations-on-decimal-values"></a><span data-ttu-id="b0d62-127">10 진수 값에 대 한 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-127">Performing Operations on Decimal Values</span></span>  
 <span data-ttu-id="b0d62-128"><xref:System.Decimal> 형식은 더하기, 빼기, 나누기, 곱하기 및 단항 부정 같은 표준 수학 연산을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-128">The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation.</span></span> <span data-ttu-id="b0d62-129">이진 표현으로 직접 사용할 수도 있습니다는 <xref:System.Decimal> 호출 하 여 값의 <xref:System.Decimal.GetBits%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-129">You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="b0d62-130">두 개를 비교 하려면 <xref:System.Decimal> 값을 표준 숫자 비교 연산자를 사용 하거나 호출할 수 있습니다는 <xref:System.Decimal.CompareTo%2A> 또는 <xref:System.Decimal.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-130">To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="b0d62-131">멤버를 호출할 수도 있습니다는 <xref:System.Math> 다양 한 범위의 최대값 또는 최소값 2의 값을 판별한 숫자의 절대 값을 가져오는 등의 숫자 작업을 수행 하도록 클래스 <xref:System.Decimal> 값을 숫자의 부호를 가져오고 반올림 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-131">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-132">다음 코드 예제에서는 <xref:System.Decimal>의 사용법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-132">The following code example demonstrates the use of <xref:System.Decimal>.</span></span>  
  
 [!code-cpp[Decimal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#1)]
 [!code-csharp[Decimal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#1)]
 [!code-vb[Decimal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="b0d62-133">이 유형의 모든 멤버는 스레드로부터 안전 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0d62-133">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="b0d62-134">멤버 인스턴스 상태를 수정 하려면 표시 되는 실제로 새 값으로 초기화 하는 새 인스턴스를 반환 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0d62-134">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="b0d62-135">으로 다른 종류와이 형식의 인스턴스를 포함 하는 공유 변수를 읽고 쓰는 보호 해야 스레드로부터 안전을 보장 하려면 잠금에 의해.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0d62-135">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Char" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-136">
            <see cref="T:System.Decimal" />의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-136">Initializes a new instance of <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(double value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-137">
            <see cref="T:System.Decimal" />로 나타낼 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-137">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-138">
            <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 배정밀도 부동 소수점 숫자의 값으로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-138">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified double-precision floating-point number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-139">이 생성자는 반올림 `value` 하는 가장 가까운 수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-139">This constructor rounds `value` to 15 significant digits using rounding to nearest.</span></span> <span data-ttu-id="b0d62-140">이 최대 15 개 많고 덜 유효 자릿수가 0 하는 경우에 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-140">This is done even if the number has more than 15 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-141">다음 코드 예제에서는 여러 개 만들고 `Decimal` 생성자 오버 로드를 사용 하 여 숫자는 `Decimal` 구조체는 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-141">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctordo.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Reals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctordo.cs#2)]
 [!code-vb[System.Decimal.Ctor.Reals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctordo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-142">
            <paramref name="value" />가 <see cref="F:System.Decimal.MaxValue" />보다 크거나 <see cref="F:System.Decimal.MinValue" />보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-142">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
          <span data-ttu-id="b0d62-143">-또는-  <paramref name="value" />가 <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> 또는 <see cref="F:System.Double.NegativeInfinity" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-143">-or-  <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-144">
            <see cref="T:System.Decimal" />로 나타낼 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-144">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-145">
            <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 32비트 부호 있는 정수 값으로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-145">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit signed integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-146">다음 코드 예제에서는 여러 개 만들고 `Decimal` 생성자 오버 로드를 사용 하 여 숫자는 `Decimal` 구조체는 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-146">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctori.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Ints#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctori.cs#1)]
 [!code-vb[System.Decimal.Ctor.Ints#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctori.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int[] bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(cli::array &lt;int&gt; ^ bits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="bits">
          <span data-ttu-id="b0d62-147">10진 값 표현을 포함하는 32비트 부호 있는 정수 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-147">An array of 32-bit signed integers containing a representation of a decimal value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-148">
            <see cref="T:System.Decimal" />의 새 인스턴스를 이진으로 표현되며 지정한 배열에 포함된 10진 값으로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-148">Initializes a new instance of <see cref="T:System.Decimal" /> to a decimal value represented in binary and contained in a specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-149">이진 표현은 <xref:System.Decimal> 번호는 부호 1 비트, 96 비트 정수의 수 및 정수 숫자를 나누고 어떤 부분이 소수 부분을 지정 하는 데 사용 되는 배율 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-149">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="b0d62-150">배율 인수는 범위: 0 ~ 28 지수가 숫자 10을 암시적으로.</span><span class="sxs-lookup"><span data-stu-id="b0d62-150">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="b0d62-151">`bits` 네 개의 요소로 긴 32 비트 부호 있는 정수 배열이입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-151">`bits` is a four-element long array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="b0d62-152">`bits` [0], `bits` [1] 및 `bits` [2]-96 비트 정수의 하위, 중간 및 높은 32 비트를 포함 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-152">`bits` [0], `bits` [1], and `bits` [2] contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="b0d62-153">`bits` [3] 배율 및 기호를 포함 하며 다음 부분으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-153">`bits` [3] contains the scale factor and sign, and consists of following parts:</span></span>  
  
 <span data-ttu-id="b0d62-154">하위 워드 비트 0 ~ 15는 사용 되지 않으며 0 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-154">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="b0d62-155">16-23 비트 나누는 10의 거듭제곱을 나타내는 0에서 28 사이의 지 수를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-155">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="b0d62-156">24-30 비트는 사용 되지 않으며 0 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-156">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="b0d62-157">31 비트의 부호가 포함 됩니다. 0은 양수를 나타내고 1은 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-157">Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</span></span>  
  
 <span data-ttu-id="b0d62-158">숫자 값을 여러 가지 가능한 이진 표현을; 있을 수 있습니다. 모두 동일 하 게 유효 하 고 해당 하는 숫자로 하십시오입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-158">A numeric value might have several possible binary representations; all are equally valid and numerically equivalent.</span></span> <span data-ttu-id="b0d62-159">양수 및 음수 0 비트 표시를 구분할 수 있는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-159">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="b0d62-160">이러한 값은 모든 작업에 동일한 것으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-160">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-161">다음 코드 예제에서는 여러 개 만들고 `Decimal` 생성자 오버 로드를 사용 하 여 숫자는 `Decimal` 4의 배열 사용 하 여 구조 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-161">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an array of four <xref:System.Int32> values.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriarr.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriarr.cs#1)]
 [!code-vb[System.Decimal.Ctor.Arrays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriarr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0d62-162">
            <paramref name="bits" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-162">
              <paramref name="bits" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0d62-163">
            <paramref name="bits" />의 길이가 4가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-163">The length of the <paramref name="bits" /> is not 4.</span>
          </span>
          <span data-ttu-id="b0d62-164">-또는-  <paramref name="bits" />의 10진 값 표시가 유효하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-164">-or-  The representation of the decimal value in <paramref name="bits" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.GetBits(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(long value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-165">
            <see cref="T:System.Decimal" />로 나타낼 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-165">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-166">
            <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 64비트 부호 있는 정수 값으로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-166">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit signed integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-167">다음 코드 예제에서는 여러 개 만들고 `Decimal` 생성자 오버 로드를 사용 하 여 숫자는 `Decimal` 구조체는 <xref:System.Int64> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-167">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorl.cpp#3)]
 [!code-csharp[System.Decimal.Ctor.Ints#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorl.cs#3)]
 [!code-vb[System.Decimal.Ctor.Ints#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorl.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(float value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-168">
            <see cref="T:System.Decimal" />로 나타낼 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-168">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-169">
            <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 단정밀도 부동 소수점 숫자의 값으로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-169">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified single-precision floating-point number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-170">이 생성자는 반올림 `value` 하는 가장 가까운 수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-170">This constructor rounds `value` to 7 significant digits using rounding to nearest.</span></span> <span data-ttu-id="b0d62-171">이 7 개를 넘지 개 많고 덜 유효 자릿수가 0 하는 경우에 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-171">This is done even if the number has more than 7 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-172">다음 코드 예제에서는 여러 개 만들고 `Decimal` 생성자 오버 로드를 사용 하 여 숫자는 `Decimal` 구조체는 <xref:System.Single> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-172">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Single> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctors.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Reals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctors.cs#1)]
 [!code-vb[System.Decimal.Ctor.Reals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-173">
            <paramref name="value" />가 <see cref="F:System.Decimal.MaxValue" />보다 크거나 <see cref="F:System.Decimal.MinValue" />보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-173">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
          <span data-ttu-id="b0d62-174">-또는-  <paramref name="value" />가 <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> 또는 <see cref="F:System.Single.NegativeInfinity" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-174">-or-  <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt32 value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-175">
            <see cref="T:System.Decimal" />로 나타낼 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-175">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-176">
            <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 32비트 부호 없는 정수 값으로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-176">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit unsigned integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-177">다음 코드 예제에서는 여러 개 만들고 `Decimal` 생성자 오버 로드를 사용 하 여 숫자는 `Decimal` 구조체는 <xref:System.UInt32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-177">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorui.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Ints#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorui.cs#2)]
 [!code-vb[System.Decimal.Ctor.Ints#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorui.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt64 value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-178">
            <see cref="T:System.Decimal" />로 나타낼 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-178">The value to represent as a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-179">
            <see cref="T:System.Decimal" />의 새 인스턴스를 지정된 64비트 부호 없는 정수 값으로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-179">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit unsigned integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-180">다음 코드 예제에서는 여러 개 만들고 `Decimal` 생성자 오버 로드를 사용 하 여 숫자는 `Decimal` 구조체는 <xref:System.UInt64> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-180">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorul.cpp#4)]
 [!code-csharp[System.Decimal.Ctor.Ints#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorul.cs#4)]
 [!code-vb[System.Decimal.Ctor.Ints#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorul.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int lo, int mid, int hi, bool isNegative, byte scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lo, int32 mid, int32 hi, bool isNegative, unsigned int8 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lo As Integer, mid As Integer, hi As Integer, isNegative As Boolean, scale As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int lo, int mid, int hi, bool isNegative, System::Byte scale);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lo" Type="System.Int32" />
        <Parameter Name="mid" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
        <Parameter Name="isNegative" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="lo">
          <span data-ttu-id="b0d62-181">96비트 정수의 하위 32비트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-181">The low 32 bits of a 96-bit integer.</span>
          </span>
        </param>
        <param name="mid">
          <span data-ttu-id="b0d62-182">96비트 정수의 중간 32비트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-182">The middle 32 bits of a 96-bit integer.</span>
          </span>
        </param>
        <param name="hi">
          <span data-ttu-id="b0d62-183">96비트 정수의 상위 32비트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-183">The high 32 bits of a 96-bit integer.</span>
          </span>
        </param>
        <param name="isNegative">
          <span data-ttu-id="b0d62-184">음수를 나타내려면 <see langword="true" />이고, 양수를 나타내려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-184">
              <see langword="true" /> to indicate a negative number; <see langword="false" /> to indicate a positive number.</span>
          </span>
        </param>
        <param name="scale">
          <span data-ttu-id="b0d62-185">10의 거듭제곱(범위: 0~28)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-185">A power of 10 ranging from 0 to 28.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-186">인스턴스의 구성 부분을 지정하는 매개 변수에서 <see cref="T:System.Decimal" />의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-186">Initializes a new instance of <see cref="T:System.Decimal" /> from parameters specifying the instance's constituent parts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-187">이진 표현은 <xref:System.Decimal> 번호는 부호 1 비트, 96 비트 정수의 수 및 정수 숫자를 나누고 어떤 부분이 소수 부분을 지정 하는 데 사용 되는 배율 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-187">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="b0d62-188">배율 인수는 암시적으로 숫자 0에서 28 사이 범위의 소수 10.</span><span class="sxs-lookup"><span data-stu-id="b0d62-188">The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-189">다음 코드 예제에서는 여러 `Decimal` 생성자 오버 로드를 사용 하 여 숫자는 `Decimal` 구조는 세 <xref:System.Int32> 단어 값는 <xref:System.Boolean> 기호 및 <xref:System.Byte> 인수의 크기를 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-189">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with three <xref:System.Int32> value words, a <xref:System.Boolean> sign, and a <xref:System.Byte> scale factor.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriiibby.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriiibby.cs#2)]
 [!code-vb[System.Decimal.Ctor.Arrays#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriiibby.vb#2)]  
  
 <span data-ttu-id="b0d62-190">다음 예제에서는 <xref:System.Decimal.GetBits%2A> 배열의 구성 요소 부분을 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-190">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="b0d62-191">다음이 배열에 대 한 호출에서 사용 하 여는 <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> 생성자를 인스턴스화하는 새 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-191">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0d62-192">
            <paramref name="scale" />이 28보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-192">
              <paramref name="scale" /> is greater than 28.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static decimal Add (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Add(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Add(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-193">더할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-193">The first value to add.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-194">더할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-194">The second value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-195">지정된 두 <see cref="T:System.Decimal" /> 값을 더합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-195">Adds two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-196">
            <paramref name="d1" />와 <paramref name="d2" />의 합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-196">The sum of <paramref name="d1" /> and <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-197">다음 코드 샘플에서는 `Add` :</span><span class="sxs-lookup"><span data-stu-id="b0d62-197">The following code sample illustrates the use of `Add` :</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-198">
            <paramref name="d1" /> 및 <paramref name="d2" /> 합계가 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-198">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-199">10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-199">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-200">지정된 10진수보다 크거나 같은 최소 정수 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-200">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-201">
            <paramref name="d" /> 매개 변수보다 크거나 같은 최소 정수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-201">The smallest integral value that is greater than or equal to the <paramref name="d" /> parameter.</span>
          </span>
          <span data-ttu-id="b0d62-202">이 메서드는 정수 계열 형식이 아니라 <see cref="T:System.Decimal" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-202">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-203">이 메서드의 동작은 IEEE 표준 754, 섹션 4 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-203">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b0d62-204">이러한 종류의 반올림이 양의 무한대로 반올림 라고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-204">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="b0d62-205">즉, 경우 `d` 가 양수 이면 손해 소수 부분이 발생의 존재 여부 `d` 다음 가장 큰 정수로 내림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-205">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="b0d62-206">경우 `d` 가 음수 이면 반올림 작업의 결과로의 소수 부분이 `d` 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-206">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="b0d62-207">이 메서드의 작업에서 다른는 <xref:System.Decimal.Floor%2A> 메서드를 음의 무한대로 반올림을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-207">The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-208">다음 예제에서는 <xref:System.Decimal.Ceiling%2A> 메서드를 사용할 때의 차이점은 <xref:System.Decimal.Floor%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-208">The following example illustrates the <xref:System.Decimal.Ceiling%2A> method and contrasts it with the <xref:System.Decimal.Floor%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (d1 As Decimal, d2 As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-209">비교할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-209">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-210">비교할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-210">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-211">지정된 두 <see cref="T:System.Decimal" /> 값을 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-211">Compares two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-212">
            <paramref name="d1" />과 <paramref name="d2" />의 상대 값을 나타내는 부호 있는 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-212">A signed number indicating the relative values of <paramref name="d1" /> and <paramref name="d2" />.</span>
          </span>
          <span data-ttu-id="b0d62-213">
            <list type="table">
              <listheader>
                <term> 반환 값  </term>
                <description> 의미  </description>
              </listheader>
              <item>
                <term> 0보다 작음  </term>
                <description>
                  <paramref name="d1" />은 <paramref name="d2" />보다 작습니다.  </description>
              </item>
              <item>
                <term> 0  </term>
                <description>
                  <paramref name="d1" />와 <paramref name="d2" />가 같습니다.  </description>
              </item>
              <item>
                <term> 0보다 큼  </term>
                <description>
                  <paramref name="d1" />이 <paramref name="d2" />보다 큽니다.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-213">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="d1" /> is less than <paramref name="d2" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="d1" /> and <paramref name="d2" /> are equal.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="d1" /> is greater than <paramref name="d2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-214">다음 예제에서는 여러 비교 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-214">The following example compares several <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-215">첫 번째 비교는 두 값에 수행 하는 빼기 연산을 불구 하 고 같음을 나타냅니다 참고는 `value2` 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-215">Note that the first comparison indicates that the two values are equal despite the subtraction operation performed on the `value2` variable.</span></span> <span data-ttu-id="b0d62-216">때문에 이것이 <xref:System.Decimal> 형식이 29 자리 전체 자릿수, 반면 30 자리 전체 자릿수에 이러한 두 값 간의 차이 감지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-216">This is because the <xref:System.Decimal> type has 29 digits of precision, whereas a difference between these two values can be detected only with 30 digits of precision.</span></span>  
  
 [!code-csharp[System.Decimal.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Decimal.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-217">이 인스턴스를 지정된 개체나 <see cref="T:System.Decimal" />와 비교하여 상대 값의 표시를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-217">Compares this instance to a specified object or <see cref="T:System.Decimal" /> and returns an indication of their relative values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-218">이 인스턴스와 비교할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-218">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-219">이 인스턴스를 지정된 <see cref="T:System.Decimal" /> 개체와 비교하여 상대 값의 비교를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-219">Compares this instance to a specified <see cref="T:System.Decimal" /> object and returns a comparison of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-220">이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-220">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="b0d62-221">
            <list type="table">
              <listheader>
                <term> 반환 값  </term>
                <description> 의미  </description>
              </listheader>
              <item>
                <term> 0보다 작음  </term>
                <description> 이 인스턴스는 <paramref name="value" />보다 작습니다.  </description>
              </item>
              <item>
                <term> 0  </term>
                <description> 이 인스턴스는 <paramref name="value" />와 같습니다.  </description>
              </item>
              <item>
                <term> 0보다 큼  </term>
                <description> 이 인스턴스는 <paramref name="value" />보다 큽니다.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-221">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-222">이 메서드를 구현 하는 <xref:System.IComparable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 <xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType> 메서드 변환할 필요가 없기 때문에 `value` 매개 변수를 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-222">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="b0d62-223">프로그래밍 언어에 따라 코딩할 수는 <xref:System.Decimal.CompareTo%2A> 메서드 매개 변수 형식이 비트 수가 적은 보다 인스턴스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-223">Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="b0d62-224">일부 프로그래밍 언어 매개 변수를 나타내는 형식으로 비트 수는 인스턴스와 암시적 확대 변환을 수행 하기 때문에 이것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-224">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="b0d62-225">예를 들어 인스턴스 형식이 <xref:System.Int32> 매개 변수 형식이 고 <xref:System.Byte>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-225">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="b0d62-226">Microsoft C# 컴파일러로 매개 변수를 나타내는 명령을 생성 한 <xref:System.Int32> 개체를 생성 합니다는 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 의 값을 비교 하는 메서드는 <xref:System.Int32> 인스턴스 및 <xref:System.Int32> 매개 변수 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-226">The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="b0d62-227">해당 컴파일러에서 숫자 형식에 암시적으로 확대 변환을 수행 여부를 확인 하려면 해당 프로그래밍 언어의 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="b0d62-227">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-228">다음 코드 예제에서는 제네릭 및 제네릭이 아닌 버전을 보여 줍니다.는 <xref:System.Decimal.CompareTo%2A> 여러 값 및 참조 형식에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-228">The following code example demonstrates generic and nongeneric versions of the <xref:System.Decimal.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-229">이 인스턴스와 비교할 개체 또는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-229">The object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-230">이 인스턴스를 지정된 개체와 비교하여 상대 값의 비교를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-230">Compares this instance to a specified object and returns a comparison of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-231">이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-231">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="b0d62-232">
            <list type="table">
              <listheader>
                <term> 반환 값  </term>
                <description> 의미  </description>
              </listheader>
              <item>
                <term> 0보다 작음  </term>
                <description> 이 인스턴스는 <paramref name="value" />보다 작습니다.  </description>
              </item>
              <item>
                <term> 0  </term>
                <description> 이 인스턴스는 <paramref name="value" />와 같습니다.  </description>
              </item>
              <item>
                <term> 0보다 큼  </term>
                <description> 이 인스턴스는 <paramref name="value" />보다 큽니다.  -또는-  <paramref name="value" />가 <see langword="null" />입니다.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-232">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-233">모든 인스턴스 <xref:System.Decimal>, 해당 값에 관계 없이 보다 큰 것으로 간주 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-233">Any instance of <xref:System.Decimal>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="b0d62-234">매개 변수 `value` 해야 `null` 또는 인스턴스의 <xref:System.Decimal>, 그러지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-234">Parameter `value` must be `null` or an instance of <xref:System.Decimal>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-235">다음 코드 예제에서는 여러 비교 `Decimal` 및 기타 개체에 대 한 참조 `Decimal` 를 사용 하 여 값의 `CompareTo` 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-235">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `CompareTo` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0d62-236">
            <paramref name="value" />가 <see cref="T:System.Decimal" />가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-236">
              <paramref name="value" /> is not a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static decimal Divide (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Divide(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Divide(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-237">피제수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-237">The dividend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-238">제수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-238">The divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-239">지정된 두 <see cref="T:System.Decimal" /> 값을 나눕니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-239">Divides two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-240">
            <paramref name="d1" />를 <paramref name="d2" />로 나눈 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-240">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-241">다음 예제에서는 <xref:System.Decimal.Divide%2A> 메서드를 22.1 값의 범위를 나눕니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-241">The following example calls the <xref:System.Decimal.Divide%2A> method to divide a range of values by 22.1.</span></span>  
  
 [!code-csharp[System.Decimal.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Decimal.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="b0d62-242">
            <paramref name="d2" />가 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-242">
              <paramref name="d2" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-243">반환 값(즉, 몫)이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-243">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-244">
            <see cref="T:System.Decimal" />의 두 인스턴스가 같은 값을 표시하는지를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-244">Returns a value indicating whether two instances of <see cref="T:System.Decimal" /> represent the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-245">이 인스턴스와 비교할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-245">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-246">이 인스턴스의 값과 지정된 <see cref="T:System.Decimal" /> 개체의 값이 같은지를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-246">Returns a value indicating whether this instance and a specified <see cref="T:System.Decimal" /> object represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-247">
            <see langword="true" />가 이 인스턴스와 같으면 <paramref name="value" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-247">
              <see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-248">이 메서드를 구현 하는 <xref:System.IEquatable%601?displayProperty=nameWithType> 인터페이스를 하 고 수행 보다 조금 더 나은 <xref:System.Decimal.Equals%2A> 변환할 필요가 없기 때문에 `value` 매개 변수를 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-248">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Decimal.Equals%2A> because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="b0d62-249">경우 `value` 비트 수가 적은 일부 프로그래밍 언어를 인스턴스 형식 보다 더 많은 비트 값으로 매개 변수의 값을 변환 하는 암시적 확대 변환이 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-249">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="b0d62-250">예를 들어 인스턴스 형식이 <xref:System.Int32> 매개 변수 형식이 고 <xref:System.Byte>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-250">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="b0d62-251">Microsoft C# 컴파일러는 매개 변수의 값을 표시 하는 명령을 생성는 <xref:System.Int32> 개체를 생성 합니다.는 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 비교 하는 메서드는 <xref:System.Int32> 인스턴스와 매개 변수 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-251">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="b0d62-252">해당 컴파일러에서 숫자 형식에 암시적으로 확대 변환을 수행 여부를 확인 하려면 해당 프로그래밍 언어의 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="b0d62-252">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="b0d62-253">
            <para>컴파일러 오버 로드 확인의 두 동작에는 명백한 차이 고려 될 수 있습니다 <see cref="M:System.Decimal.Equals(System.Object)" /> 메서드 오버 로드 합니다. 경우 간에 암시적 변환이 <paramref name="obj" /> 인수 및 <see cref="T:System.Decimal" /> 정의 및 인수 인수로 형식화 되지 않습니다는 <see cref="T:System.Object" />, 컴파일러는 암시적 변환 및 호출 수행할 수 있습니다는 <see cref="M:System.Decimal.Equals(System.Decimal)" /> 메서드. 호출 그렇지 않은 경우는 <see cref="M:System.Decimal.Equals(System.Object)" /> 메서드는 항상 반환 <see langword="false" /> 경우 해당 <paramref name="obj" /> 인수가 <see cref="T:System.Decimal" /> 값입니다. 다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다. 경우 모든 기본 정수 계열 형식 둘 다를 포함 하 여 서명 하 고 첫 번째 비교 반환 형식에 부호 없는 <see langword="true" /> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <see cref="M:System.Decimal.Equals(System.Decimal)" /> 메서드를 반면 두 번째 비교 반환 <see langword="false" /> 컴파일러를 호출 하기 때문에 <see cref="M:System.Decimal.Equals(System.Object)" /> 메서드.  [! code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [! code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-253">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method. Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.  [!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="Overload:System.Decimal.CompareTo" />
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-254">이 인스턴스와 비교할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-254">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-255">이 인스턴스와 지정된 <see cref="T:System.Object" />가 같은 형식과 값을 표시하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-255">Returns a value indicating whether this instance and a specified <see cref="T:System.Object" /> represent the same type and value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-256">
            <paramref name="value" />가 <see cref="T:System.Decimal" />이고 이 인스턴스와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-256">
              <see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.Decimal" /> and equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-257">다음 코드 예제에서는 여러 비교 `Decimal` 및 기타 개체에 대 한 참조 `Decimal` 를 사용 하 여 값의 `Equals` 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-257">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="b0d62-258">
            <para>컴파일러 오버 로드 확인의 두 동작에는 명백한 차이 고려 될 수 있습니다 <see cref="M:System.Decimal.Equals(System.Object)" /> 메서드 오버 로드 합니다. 경우 간에 암시적 변환이 <paramref name="obj" /> 인수 및 <see cref="T:System.Decimal" /> 정의 및 인수 인수로 형식화 되지 않습니다는 <see cref="T:System.Object" />, 컴파일러는 암시적 변환 및 호출 수행할 수 있습니다는 <see cref="M:System.Decimal.Equals(System.Decimal)" /> 메서드. 호출 그렇지 않은 경우는 <see cref="M:System.Decimal.Equals(System.Object)" /> 메서드는 항상 반환 <see langword="false" /> 경우 해당 <paramref name="obj" /> 인수가 <see cref="T:System.Decimal" /> 값입니다. 다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다. 경우 모든 기본 정수 계열 형식 둘 다를 포함 하 여 서명 하 고 첫 번째 비교 반환 형식에 부호 없는 <see langword="true" /> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <see cref="M:System.Decimal.Equals(System.Decimal)" /> 메서드를 반면 두 번째 비교 반환 <see langword="false" /> 컴파일러를 호출 하기 때문에 <see cref="M:System.Decimal.Equals(System.Object)" /> 메서드.  [! code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [! code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-258">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method. Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.  [!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-259">비교할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-259">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-260">비교할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-260">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-261">지정된 두 개의 <see cref="T:System.Decimal" /> 인스턴스가 같은 값을 표시하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-261">Returns a value indicating whether two specified instances of <see cref="T:System.Decimal" /> represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-262">
            <paramref name="d1" />과 <paramref name="d2" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-262">
              <see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-263">다음 코드 예제에서는 여러 비교 `Decimal` 값 참조에 `Decimal` 정적을 사용 하 여 값 `Equals` 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-263">The following code example compares several `Decimal` values to a reference `Decimal` value using the static `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/comp_equal.cpp#2)]
 [!code-csharp[System.Decimal.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/comp_equal.cs#2)]
 [!code-vb[System.Decimal.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/comp_equal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-264">반올림할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-264">The value to round.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-265">지정된 <see cref="T:System.Decimal" /> 수를 음의 무한대에 가장 가까운 정수로 반올림합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-265">Rounds a specified <see cref="T:System.Decimal" /> number to the closest integer toward negative infinity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-266">
            <paramref name="d" />에 소수 부분이 있으면 다음 정수 <see cref="T:System.Decimal" />은 <paramref name="d" />보다 작은 음의 무한대로 반올림됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-266">If <paramref name="d" /> has a fractional part, the next whole <see cref="T:System.Decimal" /> number toward negative infinity that is less than <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="b0d62-267">-또는-  <paramref name="d" />에 소수 부분이 없으면 <paramref name="d" />는 변경되지 않은 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-267">-or-  If <paramref name="d" /> doesn't have a fractional part, <paramref name="d" /> is returned unchanged.</span>
          </span>
          <span data-ttu-id="b0d62-268">메서드는 형식 <see cref="T:System.Decimal" />의 정수 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-268">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-269">이 메서드의 동작은 IEEE 표준 754, 섹션 4를 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-269">The behavior of this method follows IEEE Standard 754, Section 4.</span></span> <span data-ttu-id="b0d62-270">이러한 종류의 반올림이 음의 무한대로 반올림 라고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-270">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="b0d62-271">즉, 경우 `d` 이 양수인 경우 소수 부분이 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-271">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="b0d62-272">경우 `d` 가 음수 이면 소수 부분이 있으면 존재 하면 마법사가 더 작은 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-272">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="b0d62-273">이 메서드의 작업에서 다른는 <xref:System.Decimal.Ceiling%2A> 메서드를 양의 무한대로 반올림을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-273">The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-274">다음 예제에서는 <xref:System.Decimal.Floor%2A> 메서드를 사용할 때의 차이점은 <xref:System.Decimal.Ceiling%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-274">The following example illustrates the <xref:System.Decimal.Floor%2A> method and contrasts it with the <xref:System.Decimal.Ceiling%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="FromOACurrency">
      <MemberSignature Language="C#" Value="public static decimal FromOACurrency (long cy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal FromOACurrency(int64 cy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.FromOACurrency(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOACurrency (cy As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal FromOACurrency(long cy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cy" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="cy">
          <span data-ttu-id="b0d62-275">OLE Automation Currency 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-275">An OLE Automation Currency value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-276">OLE Automation Currency 값을 포함하는 지정된 64비트 부호 있는 정수를 해당하는 <see cref="T:System.Decimal" /> 값으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-276">Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <see cref="T:System.Decimal" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-277">
            <see cref="T:System.Decimal" />에 해당하는 값을 가진 <paramref name="cy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-277">A <see cref="T:System.Decimal" /> that contains the equivalent of <paramref name="cy" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-278">다음 코드 예제에서는 `FromOACurrency` 메서드 <xref:System.Int64> 을 해당 OLE Automation Currency 값이 포함 된 필드 `Decimal` 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-278">The following code example uses the `FromOACurrency` method to convert <xref:System.Int64> fields that contain OLE Automation Currency values to the equivalent `Decimal` numbers.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/fromoacurrency.cpp#2)]
 [!code-csharp[System.Decimal.OACurrency#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/fromoacurrency.cs#2)]
 [!code-vb[System.Decimal.OACurrency#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/fromoacurrency.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.ToOACurrency(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="GetBits">
      <MemberSignature Language="C#" Value="public static int[] GetBits (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] GetBits(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetBits(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBits (d As Decimal) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ GetBits(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-279">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-279">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-280">
            <see cref="T:System.Decimal" />의 지정된 인스턴스 값을 해당하는 이진 표현으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-280">Converts the value of a specified instance of <see cref="T:System.Decimal" /> to its equivalent binary representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-281">
            <paramref name="d" />의 이진 표현을 포함하는 네 개의 요소로 이루어진 32비트 부호 있는 정수 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-281">A 32-bit signed integer array with four elements that contain the binary representation of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-282">이진 표현은 <xref:System.Decimal> 번호는 부호 1 비트, 96 비트 정수의 수 및 정수 숫자를 나누고 어떤 부분이 소수 부분을 지정 하는 데 사용 되는 배율 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-282">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="b0d62-283">배율 인수는 범위: 0 ~ 28 지수가 숫자 10을 암시적으로.</span><span class="sxs-lookup"><span data-stu-id="b0d62-283">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="b0d62-284">반환 값은 32 비트 부호 있는 정수는 네 개의 요소로 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-284">The return value is a four-element array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="b0d62-285">첫 번째, 두 번째 및 세 번째 요소 반환 된 배열의 96 비트 정수의 숫자의 낮은, 중간 및 높은 32 비트를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-285">The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="b0d62-286">반환 된 배열의 네 번째 요소는 배율 인수 및 기호를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-286">The fourth element of the returned array contains the scale factor and sign.</span></span> <span data-ttu-id="b0d62-287">다음 부분으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-287">It consists of the following parts:</span></span>  
  
 <span data-ttu-id="b0d62-288">하위 워드 비트 0 ~ 15는 사용 되지 않으며 0 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-288">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="b0d62-289">16-23 비트 나누는 10의 거듭제곱을 나타내는 0에서 28 사이의 지 수를 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-289">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="b0d62-290">24-30 비트는 사용 되지 않으며 0 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-290">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="b0d62-291">31 비트의 부호가 포함: 양수, 0을 의미 하 고 1 음수를 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-291">Bit 31 contains the sign: 0 mean positive, and 1 means negative.</span></span>  
  
 <span data-ttu-id="b0d62-292">양수 및 음수 0 비트 표시를 구분할 수 있는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-292">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="b0d62-293">이러한 값은 모든 작업에 동일한 것으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-293">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-294">다음 예제에서는 `GetBits` 여러 메서드 `Decimal` 값을 해당 하는 이진 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-294">The following example uses the `GetBits` method to convert several `Decimal` values to their equivalent binary representations.</span></span> <span data-ttu-id="b0d62-295">그런 다음 표시 10 진수 값과 요소 16 진수 값에서 반환 된 배열에는 <xref:System.Decimal.GetBits%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-295">It then displays the decimal values and the hexadecimal value of the elements in the array returned by the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/getbits.cpp#2)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/getbits.cs#2)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/getbits.vb#2)]  
  
 <span data-ttu-id="b0d62-296">다음 예제에서는 <xref:System.Decimal.GetBits%2A> 배열의 구성 요소 부분을 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-296">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="b0d62-297">다음이 배열에 대 한 호출에서 사용 하 여는 <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> 생성자를 인스턴스화하는 새 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-297">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-298">이 인스턴스의 해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-298">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-299">부호 있는 32비트 정수 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-299">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-300">
            <see cref="T:System.TypeCode" /> 값 형식에 대한 <see cref="T:System.Decimal" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-300">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-301">열거형 상수 <see cref="F:System.TypeCode.Decimal" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-301">The enumerated constant <see cref="F:System.TypeCode.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-302">다음 코드 예제에서는 `GetTypeCode` 에 대 한 형식 코드를 반환 하는 메서드 `Decimal` 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-302">The following code example uses the `GetTypeCode` method to return the type code for `Decimal` value type.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/gettypecode.cpp#3)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/gettypecode.cs#3)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/gettypecode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MaxValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-303">
            <see cref="T:System.Decimal" />의 최대값을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-303">Represents the largest possible value of <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="b0d62-304">이 필드는 상수이며 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-304">This field is constant and read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-305">이 상수 값이 양수 79228162514264337593543950335 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-305">The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-306">다음 코드 샘플에서는 `MaxValue` :</span><span class="sxs-lookup"><span data-stu-id="b0d62-306">The following code sample illustrates the use of `MaxValue` :</span></span>  
  
 [!code-cpp[Decimal Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#2)]
 [!code-csharp[Decimal Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#2)]
 [!code-vb[Decimal Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static readonly decimal MinusOne;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinusOne" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinusOne As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinusOne;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-307">음수 1(-1)을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-307">Represents the number negative one (-1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-308">다음 코드 예제에서는 `MinusOne` 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-308">The following code example illustrates the use of the `MinusOne` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-309">
            <see cref="T:System.Decimal" />의 가능한 최소값을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-309">Represents the smallest possible value of <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="b0d62-310">이 필드는 상수이며 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-310">This field is constant and read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-311">이 상수 값이 음수 79228162514264337593543950335 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-311">The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-312">다음 코드 예제에서는 `MinValue` 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-312">The following code example illustrates the use of the `MinValue` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static decimal Multiply (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Multiply(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-313">피승수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-313">The multiplicand.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-314">승수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-314">The multiplier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-315">지정된 두 <see cref="T:System.Decimal" /> 값을 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-315">Multiplies two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-316">
            <paramref name="d1" />와 <paramref name="d2" />를 곱한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-316">The result of multiplying <paramref name="d1" /> and <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-317">다음 코드 예제에서는 몇 `Decimal` 값을 해당 제품에서 계산 된 `Multiply` 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-317">The following code example creates several pairs of `Decimal` values and calculates their products with the `Multiply` method.</span></span>  
  
 [!code-cpp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CPP/mul_div_rem.cpp#1)]
 [!code-csharp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CS/mul_div_rem.cs#1)]
 [!code-vb[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/VB/mul_div_rem.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-318">반환 값이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-318">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static decimal Negate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Negate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Negate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Negate(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-319">부정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-319">The value to negate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-320">지정된 <see cref="T:System.Decimal" /> 값과 음수 1을 곱한 결과를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-320">Returns the result of multiplying the specified <see cref="T:System.Decimal" /> value by negative one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-321">
            <paramref name="d" />와 값은 같지만 부호가 반대인 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-321">A decimal number with the value of <paramref name="d" />, but the opposite sign.</span>
          </span>
          <span data-ttu-id="b0d62-322">-또는-  <paramref name="d" />가 0인 경우 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-322">-or-  Zero, if <paramref name="d" /> is zero.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-323">다음 코드 예제에서는 `Negate` 여러의 부호를 변경 하려면 메서드 `Decimal` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-323">The following code example uses the `Negate` method to change the sign of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly decimal One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal One" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly One As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal One;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-324">숫자 1을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-324">Represents the number one (1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-325">다음 코드 예제에서는 `One` 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-325">The following code example illustrates the use of the `One` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Addition(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-326">더할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-326">The first value to add.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-327">더할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-327">The second value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-328">지정된 두 <see cref="T:System.Decimal" /> 값을 더합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-328">Adds two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-329">
            <paramref name="d1" />과 <paramref name="d2" />를 더한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-329">The result of adding <paramref name="d1" /> and <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-330"><xref:System.Decimal.op_Addition%2A> 더하기 연산자에 대 한 작업을 정의 하는 메서드 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-330">The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-331">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-331">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)]
 [!code-vb[System.Decimal.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)]  
  
 <span data-ttu-id="b0d62-332">사용자 지정 연산자를 사용 하는 언어에서 지원 하지 않는 경우에 호출 된 <xref:System.Decimal.Add%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-332">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="b0d62-333">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-333">The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-334">반환 값이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-334">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static decimal operator -- (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Decrement(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Decrement(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator --(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-335">감소시킬 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-335">The value to decrement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-336">
            <see cref="T:System.Decimal" /> 피연산자를 1씩 감소시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-336">Decrements the <see cref="T:System.Decimal" /> operand by one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-337">1씩 감소된 <paramref name="d" />의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-337">The value of <paramref name="d" /> decremented by 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-338"><xref:System.Decimal.op_Decrement%2A> 에 대 한 감소 연산자의 작업을 정의 하는 메서드 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-338">The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-339">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-339">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)]  
  
 <span data-ttu-id="b0d62-340">증가 연산자 없는 일부 언어 (예: Visual Basic)를 호출할 수는 <xref:System.Decimal.op_Decrement%2A> 메서드를 직접 다음 예제와 같이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-340">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)]  
  
 <span data-ttu-id="b0d62-341">해당 언어는 사용자 지정 연산자를 지원 하지 않으면, 호출 된 <xref:System.Decimal.Subtract%2A> 메서드 대신, 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-341">If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)]
 [!code-vb[System.Decimal.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-342">반환 값이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-342">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static decimal operator / (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Division(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Division(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator /(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-343">피제수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-343">The dividend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-344">제수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-344">The divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-345">지정된 두 <see cref="T:System.Decimal" /> 값을 나눕니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-345">Divides two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-346">
            <paramref name="d1" />를 <paramref name="d2" />로 나눈 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-346">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-347"><xref:System.Decimal.op_Division%2A> 에 대 한 나누기 연산자의 작업을 정의 하는 메서드 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-347">The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-348">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-348">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs#7)]
 [!code-vb[System.Decimal.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb#7)]  
  
 <span data-ttu-id="b0d62-349">사용자 지정 연산자를 사용 하는 언어에서 지원 하지 않는 경우에 호출 된 <xref:System.Decimal.Divide%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-349">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="b0d62-350">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-350">The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="b0d62-351">
            <paramref name="d2" />가 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-351">
              <paramref name="d2" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-352">반환 값이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-352">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-353">비교할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-353">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-354">비교할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-354">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-355">두 <see cref="T:System.Decimal" /> 값이 같은지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-355">Returns a value that indicates whether two <see cref="T:System.Decimal" /> values are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-356">
            <paramref name="d1" />과 <paramref name="d2" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-356">
              <see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-357"><xref:System.Decimal.op_Equality%2A> 같음 연산자에 대 한 작업을 정의 하는 메서드 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-357">The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-358">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-358">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)]
 [!code-vb[System.Decimal.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)]  
  
 <span data-ttu-id="b0d62-359">사용자 지정 연산자를 사용 하는 언어에서 지원 하지 않는 경우에 호출 된 <xref:System.Decimal.Equals%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-359">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead.</span></span>  
  
 <span data-ttu-id="b0d62-360">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-360">The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-361">
            <see cref="T:System.Decimal" /> 개체와 다른 형식 간의 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-361">Defines an explicit conversion between a <see cref="T:System.Decimal" /> object and another type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-362">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-362">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-363">
            <see cref="T:System.Decimal" />을 8비트 부호 없는 정수로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-363">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-364">변환된 <see cref="T:System.Decimal" />을 나타내는 8비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-364">An 8-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-365">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.Byte>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-365">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Byte>.</span></span> <span data-ttu-id="b0d62-366">이러한 명시적 변환에 대 한 구문은 언어 종속적 및 개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-366">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b0d62-367">이 예제에서는 명시적으로 변환할 때 서로 다른 반환 값을 보여 줍니다는 <xref:System.Decimal> 값을 한 <xref:System.Byte> C#, c + + 및 Visual Basic을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-367">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="b0d62-368">언어 독립적인 변환을 수행 하려면 호출할 수 있습니다는 <xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType> 또는 <xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-368">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples 
 <span data-ttu-id="b0d62-369">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.Byte> 명시적을 사용 하 여 값 <xref:System.Decimal> 를 <xref:System.Byte> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-369">The following example converts <xref:System.Decimal> numbers to <xref:System.Byte> values by using the explicit <xref:System.Decimal> to <xref:System.Byte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctos_byte.cpp#4)] 
 [!code-csharp[System.Decimal.ConvTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctos_byte.cs#4)] 
 [!code-vb[System.Decimal.ConvTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctos_byte.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-370">
            <paramref name="value" />가 <see cref="F:System.Byte.MinValue" />보다 작거나 <see cref="F:System.Byte.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-370">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator char (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Char" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator char(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-371">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-371">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-372">
            <see cref="T:System.Decimal" />을 유니코드 문자로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-372">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-373">변환된 <see cref="T:System.Decimal" />을 나타내는 유니코드 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-373">A Unicode character that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-374">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.Char>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-374">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Char>.</span></span> <span data-ttu-id="b0d62-375">개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 및 이러한 명시적 변환에 대 한 구문은 언어 종속적 또는 변환을 지원 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-375">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results, or might not support the conversion at all.</span></span> <span data-ttu-id="b0d62-376">예를 들어 Visual Basic 및 c + + 컴파일러 지원 하지 않는 명시적 <xref:System.Decimal> 에 <xref:System.Char> 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-376">For example, the Visual Basic and C++ compilers do not support an explicit <xref:System.Decimal> to a <xref:System.Char> conversion.</span></span>
 

## Examples 
 <span data-ttu-id="b0d62-377">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.Char> 명시적를 사용 하 여 값 (유니코드 문자) <xref:System.Decimal> 를 <xref:System.Char> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-377">The following example converts <xref:System.Decimal> numbers to <xref:System.Char> values (Unicode characters) by using the explicit <xref:System.Decimal> to <xref:System.Char> conversion operator.</span></span>

 [!code-csharp[System.Decimal.ConvTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctochar.cs#6)]
 [!code-vb[System.Decimal.ConvTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctochar.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-378">
            <paramref name="value" />가 <see cref="F:System.Char.MinValue" />보다 작거나 <see cref="F:System.Char.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-378">
              <paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-379">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-379">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-380">
            <see cref="T:System.Decimal" />을 배정밀도 부동 소수점 숫자로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-380">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-381">변환된 <see cref="T:System.Decimal" />을 나타내는 배정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-381">A double-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-382">배정밀도 부동 소수점 숫자 보다 적은 유효 자릿수에 있기 때문에이 작업의 전체 자릿수 손실이 발생할 수 있습니다는 <xref:System.Decimal>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-382">This operation can result in a loss of precision, because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>
 
 <span data-ttu-id="b0d62-383">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.Double>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-383">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Double>.</span></span> <span data-ttu-id="b0d62-384">이러한 명시적 변환에 대 한 구문은 언어 종속적 및 개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-384">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b0d62-385">이 예제에서는 명시적으로 변환할 때 서로 다른 반환 값을 보여 줍니다는 <xref:System.Decimal> 값을 한 <xref:System.Double> C#, c + + 및 Visual Basic을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-385">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Double> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="b0d62-386">언어 독립적인 변환을 수행 하려면 호출할 수 있습니다는 <xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType> 또는 <xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-386">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="b0d62-387">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.Double> 명시적을 사용 하 여 값 <xref:System.Decimal> 를 <xref:System.Double> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-387">The following example converts <xref:System.Decimal> numbers to <xref:System.Double> values by using the explicit <xref:System.Decimal> to <xref:System.Double> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctosgl_dbl.cpp#5)] 
 [!code-csharp[System.Decimal.ConvTo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ConvTo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctosgl_dbl.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-388">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-388">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-389">
            <see cref="T:System.Decimal" />을 16비트 부호 있는 정수로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-389">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-390">변환된 <see cref="T:System.Decimal" />을 나타내는 16비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-390">A 16-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="b0d62-391">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.Int16>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-391">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int16>.</span></span> <span data-ttu-id="b0d62-392">이러한 명시적 변환에 대 한 구문은 언어 종속적 및 개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-392">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b0d62-393">이 예제에서는 명시적으로 변환할 때 서로 다른 반환 값을 보여 줍니다는 <xref:System.Decimal> 값을 한 <xref:System.Int16> C#, Visual Basic 및 c + +를 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-393">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int16> value by using C#, Visual Basic, and C++.</span></span> <span data-ttu-id="b0d62-394">언어 독립적인 변환을 수행 하려면 호출할 수 있습니다는 <xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType> 또는 <xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-394">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="b0d62-395">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.Int16> 명시적을 사용 하 여 값 <xref:System.Decimal> 를 <xref:System.Int16> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-395">The following example converts <xref:System.Decimal> numbers to <xref:System.Int16> values by using the explicit <xref:System.Decimal> to <xref:System.Int16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)] 
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-396">
            <paramref name="value" />가 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-396">
              <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-397">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-397">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-398">
            <see cref="T:System.Decimal" />을 32비트 부호 있는 정수로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-398">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-399">변환된 <see cref="T:System.Decimal" />을 나타내는 32비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-399">A 32-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-400">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-400">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int32>.</span></span> <span data-ttu-id="b0d62-401">이러한 명시적 변환에 대 한 구문은 언어 종속적 및 개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-401">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b0d62-402">이 예제에서는 명시적으로 변환할 때 서로 다른 반환 값을 보여 줍니다는 <xref:System.Decimal> 값을 한 <xref:System.Int32> C#, c + + 및 Visual Basic을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-402">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int32> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="b0d62-403">언어 독립적인 변환을 수행 하려면 호출할 수 있습니다는 <xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType> 또는 <xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-403">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="b0d62-404">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.Int32> 명시적을 사용 하 여 값 <xref:System.Decimal> 를 <xref:System.Int32> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-404">The following example converts <xref:System.Decimal> numbers to <xref:System.Int32> values by using the explicit <xref:System.Decimal> to <xref:System.Int32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)] 
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-405">
            <paramref name="value" />가 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-405">
              <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-406">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-406">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-407">
            <see cref="T:System.Decimal" />을 64비트 부호 있는 정수로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-407">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-408">변환된 <see cref="T:System.Decimal" />을 나타내는 64비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-408">A 64-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-409">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.Int64>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-409">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int64>.</span></span> <span data-ttu-id="b0d62-410">이러한 명시적 변환에 대 한 구문은 언어 종속적 및 개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-410">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b0d62-411">이 예제에서는 명시적으로 변환할 때 서로 다른 반환 값을 보여 줍니다는 <xref:System.Decimal> 값을 한 <xref:System.Int64> C# 및 Visual Basic을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-411">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b0d62-412">언어 독립적인 변환을 수행 하려면 호출할 수 있습니다는 <xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType> 또는 <xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-412">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 
## Examples
 <span data-ttu-id="b0d62-413">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.Int64> 명시적을 사용 하 여 값 <xref:System.Decimal> 를 <xref:System.Int64> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-413">The following example converts <xref:System.Decimal> numbers to <xref:System.Int64> values by using the explicit <xref:System.Decimal> to <xref:System.Int64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)] 
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-414">
            <paramref name="value" />가 <see cref="F:System.Int64.MinValue" />보다 작거나 <see cref="F:System.Int64.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-414">
              <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-415">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-415">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-416">
            <see cref="T:System.Decimal" />을 8비트 부호 있는 정수로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-416">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit signed integer.</span>
          </span>
          <span data-ttu-id="b0d62-417">이 API는 CLS 규격이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-417">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-418">변환된 <see cref="T:System.Decimal" />을 나타내는 8비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-418">An 8-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-419">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.SByte>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-419">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.SByte>.</span></span> <span data-ttu-id="b0d62-420">이러한 명시적 변환에 대 한 구문은 언어 종속적 및 개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-420">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b0d62-421">이 예제에서는 명시적으로 변환할 때 서로 다른 반환 값을 보여 줍니다는 <xref:System.Decimal> 값을 한 <xref:System.Byte> 및 <xref:System.SByte> C# 및 Visual Basic을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-421">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> and an <xref:System.SByte> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b0d62-422">언어 독립적인 변환을 수행 하려면 호출할 수 있습니다는 <xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-422">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>   


## Examples 
 <span data-ttu-id="b0d62-423">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.SByte> 명시적을 사용 하 여 값 <xref:System.Decimal> 를 <xref:System.SByte> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-423">The following example converts <xref:System.Decimal> numbers to <xref:System.SByte> values by using the explicit <xref:System.Decimal> to <xref:System.SByte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosbyte.cpp#1)] 
 [!code-csharp[System.Decimal.Operators.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosbyte.cs#1)]
 [!code-vb[System.Decimal.Operators.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosbyte.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-424">
            <paramref name="value" />가 <see cref="F:System.SByte.MinValue" />보다 작거나 <see cref="F:System.SByte.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-424">
              <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-425">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-425">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-426">
            <see cref="T:System.Decimal" />을 단정밀도 부동 소수점 숫자로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-426">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-427">변환된 <see cref="T:System.Decimal" />을 나타내는 단정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-427">A single-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-428">단 정밀도 부동 소수점 숫자 보다 적은 유효 자릿수에 있기 때문에이 작업의 전체 자릿수 손실이 발생할 수 있습니다는 <xref:System.Decimal>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-428">This operation can result in a loss of precision, because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>

 <span data-ttu-id="b0d62-429">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.Single>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-429">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Single>.</span></span> <span data-ttu-id="b0d62-430">이러한 명시적 변환에 대 한 구문은 언어 종속적 및 개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-430">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b0d62-431">이 예제에서는 명시적으로 변환할 때 서로 다른 반환 값을 보여 줍니다는 <xref:System.Decimal> 값을 한 <xref:System.Single> C# 및 Visual Basic을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-431">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Single> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b0d62-432">언어 독립적인 변환을 수행 하려면 호출할 수 있습니다는 <xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType> 또는 <xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-432">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="b0d62-433">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.Single> 명시적을 사용 하 여 값 <xref:System.Decimal> 를 <xref:System.Single> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-433">The following example converts <xref:System.Decimal> numbers to <xref:System.Single> values by using the explicit <xref:System.Decimal> to <xref:System.Single> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosingle1.cpp#2)] 
 [!code-csharp[System.Decimal.Operators.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosingle1.cs#2)]
 [!code-vb[System.Decimal.Operators.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosingle1.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-434">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-434">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-435">
            <see cref="T:System.Decimal" />을 16비트 부호 없는 정수로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-435">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="b0d62-436">이 API는 CLS 규격이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-436">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-437">변환된 <see cref="T:System.Decimal" />을 나타내는 16비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-437">A 16-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-438">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.UInt16>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-438">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt16>.</span></span> <span data-ttu-id="b0d62-439">이러한 명시적 변환에 대 한 구문은 언어 종속적 및 개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-439">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b0d62-440">이 예제에서는 명시적으로 변환할 때 서로 다른 반환 값을 보여 줍니다는 <xref:System.Decimal> 값을 한 <xref:System.UInt16> C# 및 Visual Basic을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-440">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt16> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b0d62-441">언어 독립적인 변환을 수행 하려면 호출할 수 있습니다는 <xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> 또는 <xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-441">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="b0d62-442">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.UInt16> 명시적을 사용 하 여 값 <xref:System.Decimal> 를 <xref:System.UInt16> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-442">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt16> values by using the explicit <xref:System.Decimal> to <xref:System.UInt16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)]
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-443">
            <paramref name="value" />가 <see cref="F:System.UInt16.MinValue" />보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-443">
              <paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-444">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-444">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-445">
            <see cref="T:System.Decimal" />을 32비트 부호 없는 정수로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-445">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="b0d62-446">이 API는 CLS 규격이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-446">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-447">변환된 <see cref="T:System.Decimal" />을 나타내는 32비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-447">A 32-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-448">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.UInt32>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-448">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt32>.</span></span> <span data-ttu-id="b0d62-449">이러한 명시적 변환에 대 한 구문은 언어 종속적 및 개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-449">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b0d62-450">이 예제에서는 명시적으로 변환할 때 서로 다른 반환 값을 보여 줍니다는 <xref:System.Decimal> 값을 한 <xref:System.UInt32> C# 및 Visual Basic을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-450">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt32> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b0d62-451">언어 독립적인 변환을 수행 하려면 호출할 수 있습니다는 <xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> 또는 <xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-451">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples
 <span data-ttu-id="b0d62-452">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.UInt32> 명시적을 사용 하 여 값 <xref:System.Decimal> 를 <xref:System.UInt32> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-452">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt32> values by using the explicit <xref:System.Decimal> to <xref:System.UInt32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)]
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-453">
            <paramref name="value" />가 <see cref="F:System.UInt32.MinValue" />보다 작거나 <see cref="F:System.UInt32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-453">
              <paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-454">변환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-454">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-455">
            <see cref="T:System.Decimal" />을 64비트 부호 없는 정수로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-455">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit unsigned integer.</span>
          </span>
          <span data-ttu-id="b0d62-456">이 API는 CLS 규격이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-456">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-457">변환된 <see cref="T:System.Decimal" />을 나타내는 64비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-457">A 64-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-458">이 연산자의 명시적 변환을 지원는 <xref:System.Decimal> 에 <xref:System.UInt64>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-458">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt64>.</span></span> <span data-ttu-id="b0d62-459">이러한 명시적 변환에 대 한 구문은 언어 종속적 및 개별 언어 컴파일러에서 서로 다른 구현을 제공 하 고 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-459">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="b0d62-460">이 예제에서는 명시적으로 변환할 때 서로 다른 반환 값을 보여 줍니다는 <xref:System.Decimal> 값을 한 <xref:System.UInt64> C# 및 Visual Basic을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-460">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="b0d62-461">언어 독립적인 변환을 수행 하려면 호출할 수 있습니다는 <xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> 또는 <xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-461">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples 
 <span data-ttu-id="b0d62-462">다음 예제에서는 변환 <xref:System.Decimal> 숫자를 <xref:System.UInt64> 명시적을 사용 하 여 값 <xref:System.Decimal> 를 <xref:System.UInt64> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-462">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt64> values by using the explicit <xref:System.Decimal> to <xref:System.UInt64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)]
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-463">
            <paramref name="value" />가 음수이거나 <see cref="F:System.UInt64.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-463">
              <paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Double)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-464">변환할 배정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-464">The double-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-465">배정밀도 부동 소수점 숫자를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-465">Defines an explicit conversion of a double-precision floating-point number to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-466">변환된 배정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-466">The converted double-precision floating point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  

 <span data-ttu-id="b0d62-467">다음 예제에서는 변환 <xref:System.Double> 값을 <xref:System.Decimal> 를 사용 하 여 숫자는 <xref:System.Double> 를 <xref:System.Decimal> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-467">The following example converts <xref:System.Double> values to <xref:System.Decimal> numbers by using the <xref:System.Double> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="b0d62-468">이 변환은 Visual Basic의 op_Explicit 연산자가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-468">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromdouble.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromdouble.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromdouble.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-469">
            <paramref name="value" />가 <see cref="F:System.Decimal.MaxValue" />보다 크거나 <see cref="F:System.Decimal.MinValue" />보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-469">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
          <span data-ttu-id="b0d62-470">-또는-  <paramref name="value" />가 <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> 또는 <see cref="F:System.Double.NegativeInfinity" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-470">-or-  <paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Single)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-471">변환할 단정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-471">The single-precision floating-point number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-472">단정밀도 부동 소수점 숫자를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-472">Defines an explicit conversion of a single-precision floating-point number to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-473">변환된 단정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-473">The converted single-precision floating point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-474">다음 예제에서는 변환 <xref:System.Single> 값을 <xref:System.Decimal> 를 사용 하 여 숫자는 <xref:System.Single> 를 <xref:System.Decimal> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-474">The following example converts <xref:System.Single> values to <xref:System.Decimal> numbers by using the <xref:System.Single> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="b0d62-475">이 변환은 Visual Basic의 op_Explicit 연산자가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-475">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromsingle.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromsingle.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromsingle.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-476">
            <paramref name="value" />가 <see cref="F:System.Decimal.MaxValue" />보다 크거나 <see cref="F:System.Decimal.MinValue" />보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-476">
              <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
          <span data-ttu-id="b0d62-477">-또는-  <paramref name="value" />가 <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> 또는 <see cref="F:System.Single.NegativeInfinity" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-477">-or-  <paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-478">비교할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-478">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-479">비교할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-479">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-480">지정된 <see cref="T:System.Decimal" />이 지정된 다른 <see cref="T:System.Decimal" />보다 큰지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-480">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than another specified <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-481">
            <see langword="true" />이 <paramref name="d1" />보다 크면 <paramref name="d2" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-481">
              <see langword="true" /> if <paramref name="d1" /> is greater than <paramref name="d2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-482"><xref:System.Decimal.op_GreaterThan%2A> 의 보다 큼 연산자에 대 한 작업을 정의 하는 메서드 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-482">The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-483">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-483">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs#8)]
 [!code-vb[System.Decimal.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb#8)]  
  
 <span data-ttu-id="b0d62-484">사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <xref:System.Decimal.Compare%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-484">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="b0d62-485">호출할 수 있습니다도 <xref:System.Decimal.op_GreaterThan%2A> 메서드를 직접 다음 예제와 같이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-485">They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)]  
  
 <span data-ttu-id="b0d62-486">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-486">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-487">비교할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-487">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-488">비교할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-488">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-489">지정된 <see cref="T:System.Decimal" />이 지정된 다른 <see cref="T:System.Decimal" />보다 크거나 같은지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-489">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than or equal to another specified <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-490">
            <paramref name="d1" />가 <paramref name="d2" />보다 크거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-490">
              <see langword="true" /> if <paramref name="d1" /> is greater than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-491"><xref:System.Decimal.op_GreaterThanOrEqual%2A> 메서드 정의 대 한 보다 크거나 같음 연산자의 연산을 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-491">The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-492">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-492">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)]
 [!code-vb[System.Decimal.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)]  
  
 <span data-ttu-id="b0d62-493">사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <xref:System.Decimal.Compare%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-493">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="b0d62-494">호출할 수 있습니다도 <xref:System.Decimal.op_GreaterThanOrEqual%2A> 메서드를 직접 다음 예제와 같이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-494">They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)]  
  
 <span data-ttu-id="b0d62-495">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-495">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-496">한 형식의 값을 <see cref="T:System.Decimal" /> 값으로 변환하는 암시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-496">Defines an implicit conversion of the value of a type to a <see cref="T:System.Decimal" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-497">오버 로드는 <xref:System.Decimal.op_Implicit%2A> 메서드 컴파일러가 자동으로 변환할 수 형식 정의 <xref:System.Decimal> 가 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수에 대 한 호출 없는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-497">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b0d62-498">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <xref:System.OverflowException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-498">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-499">변환할 8비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-499">The 8-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-500">8비트 부호 없는 정수를 <see cref="T:System.Decimal" />로 변환하는 명시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-500">Defines an implicit conversion of an 8-bit unsigned integer to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-501">변환된 8비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-501">The converted 8-bit unsigned integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-502">오버 로드는 <xref:System.Decimal.op_Implicit%2A> 메서드 컴파일러가 자동으로 변환할 수 형식 정의 <xref:System.Decimal> 가 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수에 대 한 호출 없는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-502">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b0d62-503">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <xref:System.OverflowException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-503">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b0d62-504">다음 예제에서는 변환 <xref:System.Byte> 값을 <xref:System.Decimal> 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-504">The following example converts <xref:System.Byte> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfrombyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfrombyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfrombyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Char)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-505">변환할 유니코드 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-505">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-506">유니코드 문자를 <see cref="T:System.Decimal" />로 변환하는 암시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-506">Defines an implicit conversion of a Unicode character to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-507">변환된 유니코드 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-507">The converted Unicode character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-508">오버 로드는 <xref:System.Decimal.op_Implicit%2A> 메서드 컴파일러가 자동으로 변환할 수 형식 정의 <xref:System.Decimal> 가 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수에 대 한 호출 없는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-508">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b0d62-509">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <xref:System.OverflowException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-509">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b0d62-510">다음 예제에서는 변환 <xref:System.Char> 값 (유니코드 문자)을 <xref:System.Decimal> 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-510">The following example converts <xref:System.Char> values (Unicode characters) to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="b0d62-511">이 변환은 op_Implicit 연산자 C# 및 c + +는 있지만 Visual Basic의 경우에 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-511">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromchar.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromchar.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromchar.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-512">변환할 16비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-512">The 16-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-513">16비트 부호 있는 정수를 <see cref="T:System.Decimal" />로 변환하는 암시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-513">Defines an implicit conversion of a 16-bit signed integer to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-514">변환된 16비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-514">The converted 16-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-515">오버 로드는 <xref:System.Decimal.op_Implicit%2A> 메서드 컴파일러가 자동으로 변환할 수 형식 정의 <xref:System.Decimal> 가 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수에 대 한 호출 없는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-515">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b0d62-516">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <xref:System.OverflowException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-516">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b0d62-517">다음 예제에서는 변환 <xref:System.Int16> 값을 <xref:System.Decimal> 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-517">The following example converts <xref:System.Int16> values to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="b0d62-518">이 변환은 op_Implicit 연산자 C# 및 c + +는 있지만 Visual Basic의 경우에 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-518">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-519">변환할 32비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-519">The 32-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-520">32비트 부호 있는 정수를 <see cref="T:System.Decimal" />로 변환하는 암시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-520">Defines an implicit conversion of a 32-bit signed integer to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-521">변환된 32비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-521">The converted 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-522">오버 로드는 <xref:System.Decimal.op_Implicit%2A> 메서드 컴파일러가 자동으로 변환할 수 형식 정의 <xref:System.Decimal> 가 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수에 대 한 호출 없는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-522">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b0d62-523">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <xref:System.OverflowException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-523">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b0d62-524">다음 예제에서는 변환 <xref:System.Int32> 값을 <xref:System.Decimal> 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-524">The following example converts <xref:System.Int32> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint32.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint32.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint32.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-525">변환할 64비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-525">The 64-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-526">64비트 부호 있는 정수를 <see cref="T:System.Decimal" />로 변환하는 암시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-526">Defines an implicit conversion of a 64-bit signed integer to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-527">변환된 64비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-527">The converted 64-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-528">오버 로드는 <xref:System.Decimal.op_Implicit%2A> 메서드 컴파일러가 자동으로 변환할 수 형식 정의 <xref:System.Decimal> 가 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수에 대 한 호출 없는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-528">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b0d62-529">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <xref:System.OverflowException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-529">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b0d62-530">다음 예제에서는 변환 <xref:System.Int64> 값을 <xref:System.Decimal> 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-530">The following example converts <xref:System.Int64> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint64.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint64.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint64.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-531">변환할 8비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-531">The 8-bit signed integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-532">부호 있는 8비트 정수를 <see cref="T:System.Decimal" /> 값으로 변환하는 암시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-532">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="b0d62-533">이 API는 CLS 규격이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-533">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-534">변환된 8비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-534">The converted 8-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-535">오버 로드는 <xref:System.Decimal.op_Implicit%2A> 메서드 컴파일러가 자동으로 변환할 수 형식 정의 <xref:System.Decimal> 가 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수에 대 한 호출 없는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-535">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b0d62-536">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <xref:System.OverflowException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-536">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b0d62-537">다음 예제에서는 변환 <xref:System.SByte> 값을 <xref:System.Decimal> 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-537">The following example converts <xref:System.SByte> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromsbyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromsbyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromsbyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-538">변환할 16비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-538">The 16-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-539">부호 없는 16비트 정수를 <see cref="T:System.Decimal" />로 변환하는 암시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-539">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="b0d62-540">이 API는 CLS 규격이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-540">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-541">변환된 16비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-541">The converted 16-bit unsigned integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-542">오버 로드는 <xref:System.Decimal.op_Implicit%2A> 메서드 컴파일러가 자동으로 변환할 수 형식 정의 <xref:System.Decimal> 가 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수에 대 한 호출 없는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-542">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b0d62-543">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <xref:System.OverflowException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-543">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b0d62-544">다음 예제에서는 변환 <xref:System.UInt16> 값을 <xref:System.Decimal> 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-544">The following example converts <xref:System.UInt16> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-545">변환할 32비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-545">The 32-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-546">부호 없는 32비트 정수를 <see cref="T:System.Decimal" />로 변환하는 암시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-546">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="b0d62-547">이 API는 CLS 규격이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-547">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-548">변환된 32비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-548">The converted 32-bit unsigned integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-549">오버 로드는 <xref:System.Decimal.op_Implicit%2A> 메서드 컴파일러가 자동으로 변환할 수 형식 정의 <xref:System.Decimal> 가 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수에 대 한 호출 없는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-549">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b0d62-550">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <xref:System.OverflowException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-550">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b0d62-551">다음 예제에서는 변환 <xref:System.UInt32> 값을 <xref:System.Decimal> 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-551">The following example converts <xref:System.UInt32> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint32.cs#2)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint32.vb#2)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-552">변환할 64비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-552">The 64-bit unsigned integer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-553">부호 없는 64비트 정수를 <see cref="T:System.Decimal" />로 변환하는 암시적 변환을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-553">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Decimal" />.</span>
          </span>
          <span data-ttu-id="b0d62-554">이 API는 CLS 규격이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-554">This API is not CLS-compliant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-555">변환된 64비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-555">The converted 64-bit unsigned integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-556">오버 로드는 <xref:System.Decimal.op_Implicit%2A> 메서드 컴파일러가 자동으로 변환할 수 형식 정의 <xref:System.Decimal> 가 명시적 캐스팅 연산자 (C#) 또는 (Visual Basic)에서는 변환 함수에 대 한 호출 없는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-556">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="b0d62-557">확대 변환 데이터가 손실 되지를 throw 하지 않습니다는 <xref:System.OverflowException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-557">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="b0d62-558">다음 예제에서는 변환 <xref:System.UInt64> 값을 <xref:System.Decimal> 를 사용 하 여 숫자는 <xref:System.UInt64> 를 <xref:System.Decimal> 변환 연산자.</span><span class="sxs-lookup"><span data-stu-id="b0d62-558">The following example converts <xref:System.UInt64> values to <xref:System.Decimal> numbers by using the <xref:System.UInt64> to <xref:System.Decimal> conversion operator.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint64.cs#1)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint64.vb#1)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static decimal operator ++ (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Increment(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Increment(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator ++(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-559">증가시킬 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-559">The value to increment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-560">
            <see cref="T:System.Decimal" /> 피연산자를 1씩 증가시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-560">Increments the <see cref="T:System.Decimal" /> operand by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-561">1씩 증가된 <paramref name="d" />의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-561">The value of <paramref name="d" /> incremented by 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-562"><xref:System.Decimal.op_Increment%2A> 에 대 한 증가 연산자의 작업을 정의 하는 메서드 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-562">The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-563">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-563">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)]  
  
 <span data-ttu-id="b0d62-564">증가 연산자 없는 일부 언어 (예: Visual Basic)를 호출할 수는 <xref:System.Decimal.op_Increment%2A> 메서드를 직접 다음 예제와 같이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-564">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)]  
  
 <span data-ttu-id="b0d62-565">해당 언어는 사용자 지정 연산자를 지원 하지 않으면, 호출 된 <xref:System.Decimal.Add%2A> 메서드 대신, 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-565">If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)]
 [!code-vb[System.Decimal.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-566">반환 값이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-566">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-567">비교할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-567">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-568">비교할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-568">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-569">두 <see cref="T:System.Decimal" /> 개체의 값이 다른지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-569">Returns a value that indicates whether two <see cref="T:System.Decimal" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-570">
            <paramref name="d1" />과 <paramref name="d2" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-570">
              <see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-571"><xref:System.Decimal.op_Inequality%2A> 같지 않음 연산자에 대 한 작업을 정의 하는 메서드 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-571">The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-572">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-572">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)]
 [!code-vb[System.Decimal.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)]  
  
 <span data-ttu-id="b0d62-573">사용자 지정 연산자를 사용 하는 언어에서 지원 하지 않는 경우 다음 방법 중 하나를 사용 하 여 같지 않음을 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-573">If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="b0d62-574">호출 된 <xref:System.Decimal.Compare%2A> 메서드를 두 개의 간의 관계를 나타내는 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-574">Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values.</span></span>  
  
-   <span data-ttu-id="b0d62-575">호출 된 <xref:System.Decimal.Equals%2A> 메서드 고 값을 반전 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-575">Calling the <xref:System.Decimal.Equals%2A> method and reversing its value.</span></span>  
  
 <span data-ttu-id="b0d62-576">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-576">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-577">비교할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-577">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-578">비교할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-578">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-579">지정된 <see cref="T:System.Decimal" />이 지정된 다른 <see cref="T:System.Decimal" />보다 작은지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-579">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than another specified <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-580">
            <paramref name="d1" />가 <paramref name="d2" />보다 작으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-580">
              <see langword="true" /> if <paramref name="d1" /> is less than <paramref name="d2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-581"><xref:System.Decimal.op_LessThan%2A> 의 보다 작음 연산자에 대 한 작업을 정의 하는 메서드 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-581">The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-582">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-582">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)]
 [!code-vb[System.Decimal.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)]  
  
 <span data-ttu-id="b0d62-583">사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <xref:System.Decimal.Compare%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-583">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="b0d62-584">호출할 수 있습니다도 <xref:System.Decimal.op_LessThan%2A> 메서드를 직접 다음 예제와 같이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-584">They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)]  
  
 <span data-ttu-id="b0d62-585">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-585">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-586">비교할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-586">The first value to compare.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-587">비교할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-587">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-588">지정된 <see cref="T:System.Decimal" />이 지정된 다른 <see cref="T:System.Decimal" />보다 작거나 같은지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-588">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than or equal to another specified <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-589">
            <paramref name="d1" />가 <paramref name="d2" />보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-589">
              <see langword="true" /> if <paramref name="d1" /> is less than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-590"><xref:System.Decimal.op_LessThanOrEqual%2A> 메서드 작음 연산을 정의 보다 같음 연산자에 대 한 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-590">The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-591">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-591">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)]
 [!code-vb[System.Decimal.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)]  
  
 <span data-ttu-id="b0d62-592">사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <xref:System.Decimal.Compare%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-592">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="b0d62-593">호출할 수 있습니다도 <xref:System.Decimal.op_LessThanOrEqual%2A> 메서드를 직접 다음 예제와 같이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-593">They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)]  
  
 <span data-ttu-id="b0d62-594">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-594">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static decimal operator % (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Modulus(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator %(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-595">피제수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-595">The dividend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-596">제수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-596">The divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-597">지정된 두 <see cref="T:System.Decimal" /> 값을 나눈 나머지를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-597">Returns the remainder resulting from dividing two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-598">
            <paramref name="d1" />을 <paramref name="d2" />로 나눈 나머지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-598">The remainder resulting from dividing <paramref name="d1" /> by <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-599"><xref:System.Decimal.op_Modulus%2A> 연산자가 지정 된 두 나눈 나머지를 반환 하는 나머지 연산을 정의 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-599">The <xref:System.Decimal.op_Modulus%2A> operator defines the remainder operation that returns the remainder resulting from dividing two specified <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-600">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-600">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs#19)]
 [!code-vb[System.Decimal.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb#19)]  
  
 <span data-ttu-id="b0d62-601">나머지 작업에 의해 반환 되는 값의 부호는 피제수의 부호에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-601">The sign of the value returned by the remainder operation depends on the sign of dividend.</span></span> <span data-ttu-id="b0d62-602">나머지 연산의 반환 긍정적인 결과; 피제수 양수 이면 음수 이면 나머지 연산을 음수 결과 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-602">If dividend is positive, the remainder operation returns a positive result; if it is negative, the remainder operation returns a negative result.</span></span>  
  
 <span data-ttu-id="b0d62-603">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-603">The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b0d62-604">사용자 지정 연산자를 사용 하는 언어에서 지원 하지 않는 경우에 호출 된 <xref:System.Decimal.Remainder%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-604">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead.</span></span>  
         ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="b0d62-605">
            <paramref name="d2" />가 <see langword="zero" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-605">
              <paramref name="d2" /> is <see langword="zero" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-606">반환 값이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-606">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static decimal operator * (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator *(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-607">곱할 첫 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-607">The first value to multiply.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-608">곱할 두 번째 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-608">The second value to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-609">지정된 두 <see cref="T:System.Decimal" /> 값을 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-609">Multiplies two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-610">
            <paramref name="d1" />에 <paramref name="d2" />를 곱한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-610">The result of multiplying <paramref name="d1" /> by <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-611"><xref:System.Decimal.op_Multiply%2A> 메서드 정의 대 한 곱하기 연산자의 연산을 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-611">The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-612">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-612">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)]
 [!code-vb[System.Decimal.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)]  
  
 <span data-ttu-id="b0d62-613">사용자 지정 연산자를 사용 하는 언어에서 지원 하지 않는 경우에 호출 된 <xref:System.Decimal.Multiply%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-613">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead.</span></span>  
  
 <span data-ttu-id="b0d62-614">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-614">The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-615">반환 값이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-615">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Subtraction(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-616">피감수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-616">The minuend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-617">감수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-617">The subtrahend.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-618">지정된 두 <see cref="T:System.Decimal" /> 값을 뺍니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-618">Subtracts two specified <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-619">
            <paramref name="d2" />에서 <paramref name="d1" />를 뺀 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-619">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-620"><xref:System.Decimal.op_Subtraction%2A> 빼기 연산자에 대 한 작업을 정의 하는 메서드 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-620">The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-621">다음과 같은 코드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-621">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)]
 [!code-vb[System.Decimal.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)]  
  
 <span data-ttu-id="b0d62-622">사용자 지정 연산자를 사용 하는 언어에서 지원 하지 않는 경우에 호출 된 <xref:System.Decimal.Subtract%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-622">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead.</span></span>  
  
 <span data-ttu-id="b0d62-623">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-623">The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-624">반환 값이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-624">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryNegation(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryNegation(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-625">부정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-625">The value to negate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-626">지정된 <see cref="T:System.Decimal" /> 피연산자 값의 부정입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-626">Negates the value of the specified <see cref="T:System.Decimal" /> operand.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-627">
            <paramref name="d" />에 -1을 곱한 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-627">The result of <paramref name="d" /> multiplied by negative one (-1).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-628"><xref:System.Decimal.op_UnaryPlus%2A> 메서드는 단항 부정 연산자 (또는 덧셈 역 원을 연산자)의 작업에 대 한 정의 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-628">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-629">작업을 0 (영) 원래 수에 추가 될 때 발생 하는 값을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-629">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="b0d62-630">사용자 지정 연산자를 지원 하지 않는 언어를 호출할 수는 <xref:System.Decimal.Negate%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-630">Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="b0d62-631">이 연산자는 해당 하는 방법은 <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d62-631">The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Negate(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryPlus(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryPlus(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-632">반환할 피연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-632">The operand to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-633">
            <see cref="T:System.Decimal" /> 피연산자의 값을 반환합니다(피연산자의 부호는 변경되지 않음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-633">Returns the value of the <see cref="T:System.Decimal" /> operand (the sign of the operand is unchanged).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-634">피연산자 <paramref name="d" />의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-634">The value of the operand, <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-635"><xref:System.Decimal.op_UnaryPlus%2A> 메서드 정의 대 한 단항 부정 연산자의 작업 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-635">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-636">숫자의 문자열 표현을 해당하는 <see cref="T:System.Decimal" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-636">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Decimal.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="b0d62-637">변환할 숫자의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-637">The string representation of the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-638">숫자의 문자열 표현을 해당하는 <see cref="T:System.Decimal" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-638">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-639">
            <paramref name="s" />에 포함된 숫자에 해당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-639">The equivalent to the number contained in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-640">매개 변수 `s` 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-640">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="b0d62-641">[ws][sign][digits,]digits[.fractional-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="b0d62-641">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="b0d62-642">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-642">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b0d62-643">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-643">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b0d62-644">요소</span><span class="sxs-lookup"><span data-stu-id="b0d62-644">Element</span></span>|<span data-ttu-id="b0d62-645">설명</span><span class="sxs-lookup"><span data-stu-id="b0d62-645">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="b0d62-646">*ws*</span><span class="sxs-lookup"><span data-stu-id="b0d62-646">*ws*</span></span>|<span data-ttu-id="b0d62-647">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-647">Optional white space.</span></span>|  
|<span data-ttu-id="b0d62-648">*sign*</span><span class="sxs-lookup"><span data-stu-id="b0d62-648">*sign*</span></span>|<span data-ttu-id="b0d62-649">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-649">An optional sign.</span></span>|  
|<span data-ttu-id="b0d62-650">*digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-650">*digits*</span></span>|<span data-ttu-id="b0d62-651">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-651">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b0d62-652">*,*</span><span class="sxs-lookup"><span data-stu-id="b0d62-652">*,*</span></span>|<span data-ttu-id="b0d62-653">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-653">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="b0d62-654">*.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-654">*.*</span></span>|<span data-ttu-id="b0d62-655">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-655">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="b0d62-656">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-656">*fractional-digits*</span></span>|<span data-ttu-id="b0d62-657">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-657">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="b0d62-658">매개 변수 `s` 를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-658">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="b0d62-659">즉, 공백과 천 단위 구분 기호는 사용할 수 있지만 통화 기호를 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-659">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="b0d62-660">요소를 명시적으로 정의 하려면 (통화 기호, 1000 단위와 같은 구분 기호 및 공백)에 나타날 수 있는 `s`, 사용 하 여는 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 또는 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-660">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b0d62-661">매개 변수 `s` 의 형식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 현재 시스템 문화권에 대 한 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-661">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture.</span></span> <span data-ttu-id="b0d62-662">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="b0d62-662">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="b0d62-663">다른 문화권의 서식 지정 정보를 사용 하 여 문자열의 구문을 분석을 사용 하 여는 <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 또는 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-663">To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b0d62-664">필요한 경우 값 `s` 가장 가까운 수로 반올림을 사용 하 여 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-664">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b0d62-665">A <xref:System.Decimal> 29 자릿수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-665">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="b0d62-666">경우 `s` 숫자 자릿수가 29 개 이상인 하지만 소수 부분이 고의 범위를 나타내는 <xref:System.Decimal.MaxValue> 및 <xref:System.Decimal.MinValue>, 잘리지 않은 가장 가까운 수로 반올림을 사용 하 여 29 자리 숫자가 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-666">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b0d62-667">발견 되는 구분 기호 구문 분석 작업 동안는 `s` 매개 변수를 적용 가능한 통화 또는 숫자의 소수와 그룹 구분 기호가 동일, 구문 분석 작업의 구분 기호는 그룹 보다는 소수 구분 기호로 간주 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-667">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b0d62-668">구분 기호에 대 한 자세한 내용은 참조 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, 및 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-668">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-669">다음 코드 예제에서는 <xref:System.Decimal.Parse%28System.String%29> 의 문자열 표현을 구문 분석할 메서드의 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-669">The following code example uses the <xref:System.Decimal.Parse%28System.String%29> method to parse string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#1)]
 [!code-vb[System.Decimal.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0d62-670">
            <paramref name="s" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-670">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="b0d62-671">
            <paramref name="s" />의 형식이 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-671">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-672">
            <paramref name="s" />가 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큰 숫자를 나타내는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-672">
              <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="b0d62-673">변환할 숫자의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-673">The string representation of the number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="b0d62-674">
            <c>s</c>에 있을 수 있는 스타일 요소를 나타내는 <see cref="T:System.Globalization.NumberStyles" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-674">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="b0d62-675">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Number" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-675">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-676">숫자를 지정된 스타일로 나타낸 문자열 표현을 해당 <see cref="T:System.Decimal" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-676">Converts the string representation of a number in a specified style to its <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-677">
            <see cref="T:System.Decimal" />로 지정된 <paramref name="s" />에 포함된 숫자에 해당하는 <paramref name="style" /> 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-677">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-678">`style` 스타일 요소를 정의 하는 매개 변수 (예: 1000 단위 구분 기호, 공백 및 통화 기호)에 허용 되는 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-678">The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="b0d62-679">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-679">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="b0d62-680">다음 <xref:System.Globalization.NumberStyles> 멤버가 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-680">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="b0d62-681">값에 따라 `style`, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-681">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="b0d62-682">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="b0d62-682">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="b0d62-683">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-683">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b0d62-684">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-684">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b0d62-685">요소</span><span class="sxs-lookup"><span data-stu-id="b0d62-685">Element</span></span>|<span data-ttu-id="b0d62-686">설명</span><span class="sxs-lookup"><span data-stu-id="b0d62-686">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="b0d62-687">*ws*</span><span class="sxs-lookup"><span data-stu-id="b0d62-687">*ws*</span></span>|<span data-ttu-id="b0d62-688">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-688">Optional white space.</span></span> <span data-ttu-id="b0d62-689">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-689">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="b0d62-690">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-690">A culture-specific currency symbol.</span></span> <span data-ttu-id="b0d62-691">문자열에 해당 위치는 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 현재 문화권의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-691">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="b0d62-692">현재 문화권의 통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-692">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-693">*sign*</span><span class="sxs-lookup"><span data-stu-id="b0d62-693">*sign*</span></span>|<span data-ttu-id="b0d62-694">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-694">An optional sign.</span></span> <span data-ttu-id="b0d62-695">부호의 시작 부분에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-695">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="b0d62-696">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-696">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-697">*digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-697">*digits*</span></span>|<span data-ttu-id="b0d62-698">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-698">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b0d62-699">*,*</span><span class="sxs-lookup"><span data-stu-id="b0d62-699">*,*</span></span>|<span data-ttu-id="b0d62-700">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-700">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="b0d62-701">현재 문화권의 천 단위 구분 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-701">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-702">*.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-702">*.*</span></span>|<span data-ttu-id="b0d62-703">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-703">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="b0d62-704">에 현재 문화권의 소수점 기호가 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-704">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-705">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-705">*fractional-digits*</span></span>|<span data-ttu-id="b0d62-706">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-706">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="b0d62-707">소수 자릿수에 나타날 수 `s` 경우에만 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-707">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-708">*e*</span><span class="sxs-lookup"><span data-stu-id="b0d62-708">*e*</span></span>|<span data-ttu-id="b0d62-709">'E' 또는 'E' 문자는 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-709">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="b0d62-710">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-710">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
 <span data-ttu-id="b0d62-711">숫자만 문자열 (해당 하는 <xref:System.Globalization.NumberStyles.None> 스타일) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-711">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="b0d62-712">나머지 <xref:System.Globalization.NumberStyles> 멤버 요소는 입력된 문자열에 필요 하지 않을 수도 있는 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-712">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="b0d62-713">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-713">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="b0d62-714">NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="b0d62-714">NumberStyles value</span></span>|<span data-ttu-id="b0d62-715">S에서 숫자 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="b0d62-715">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="b0d62-716">*자릿수* 요소만 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-716">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="b0d62-717">*.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-717">The *.*</span></span> <span data-ttu-id="b0d62-718">및 *소수 자릿수가* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-718">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="b0d62-719">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-719">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="b0d62-720">이 플래그는 폼의 값을 지원 *자리*E*자릿수*추가; 양수 또는 음수 기호 소수점 기호 등의 요소를 사용 하 여 문자열을 구문 분석 하는 데 필요한 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-720">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="b0d62-721">*ws* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-721">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="b0d62-722">*ws* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-722">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="b0d62-723">*기호* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-723">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="b0d62-724">*기호* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-724">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="b0d62-725">*기호* 숫자 값이 들어 괄호 안에 형식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-725">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="b0d62-726">*,* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-726">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="b0d62-727">* $ * 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-727">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="b0d62-728">모두.</span><span class="sxs-lookup"><span data-stu-id="b0d62-728">All.</span></span> <span data-ttu-id="b0d62-729">`s` 매개 변수를 16 진수 숫자 또는 지 수 표기법으로 숫자를에서 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-729">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="b0d62-730">*ws* 부분이 나 끝 부분에 요소 `s`, *기호* 맨 앞에 `s`, 및 *합니다.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-730">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="b0d62-731">기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-731">symbol.</span></span> <span data-ttu-id="b0d62-732">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-732">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="b0d62-733">`ws`, `sign`, *,*, 및 *합니다.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-733">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="b0d62-734">요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-734">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="b0d62-735">모든 스타일 제외 하 고 `s` 16 진수를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-735">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="b0d62-736">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 초기화는 현재 시스템 문화권에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-736">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="b0d62-737">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b0d62-737">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="b0d62-738">A <xref:System.Decimal> 29 자릿수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-738">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="b0d62-739">경우 `s` 숫자 자릿수가 29 개 이상인 하지만 소수 부분이 고의 범위를 나타내는 <xref:System.Decimal.MaxValue> 및 <xref:System.Decimal.MinValue>, 잘리지 않은 가장 가까운 수로 반올림을 사용 하 여 29 자리 숫자가 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-739">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b0d62-740">구분 기호가 발견 되는 `s` 구문 분석 작업을 사용 하는 동안 매개 변수 `styles` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 값, 및 적용 가능한 통화 또는 숫자의 소수와 그룹 구분 기호가 동일 구문 분석 작업 그룹 구분 기호가 아니라 소수 구분 기호로 구분 기호 이라고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-740">If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b0d62-741">구분 기호에 대 한 자세한 내용은 참조 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, 및 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-741">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-742">다음 코드 예제에서는 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> 의 문자열 표현을 구문 분석할 메서드의 <xref:System.Decimal> EN-US 문화권을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-742">The following code example uses the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Decimal> values using the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#2)]
 [!code-vb[System.Decimal.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0d62-743">
            <paramref name="s" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-743">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0d62-744">
            <paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-744">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="b0d62-745">-또는-  <paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-745">-or-  <paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="b0d62-746">
            <paramref name="s" />의 형식이 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-746">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-747">
            <paramref name="s" />가 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큰 숫자를 나타내는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-747">
              <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="b0d62-748">변환할 숫자의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-748">The string representation of the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="b0d62-749">
            <c>s</c>에 대한 문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-749">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific parsing information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-750">지정된 문화권별 형식 정보를 사용하여 숫자의 문자열 표현을 해당 <see cref="T:System.Decimal" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-750">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-751">
            <see cref="T:System.Decimal" />로 지정된 <paramref name="s" />에 포함된 숫자에 해당하는 <paramref name="provider" /> 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-751">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-752">이 오버 로드는 <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> 메서드는 여러 가지 방법으로 서식을 지정할 수 있는 텍스트 변환 하는 데 주로 사용 된 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-752">This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value.</span></span> <span data-ttu-id="b0d62-753">예를 들어 숫자 값으로 HTML 텍스트 상자에 사용자가 입력 한 텍스트 변환에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-753">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="b0d62-754">`s` 매개 변수 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-754">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="b0d62-755">[ws][sign][digits,]digits[.fractional-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="b0d62-755">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="b0d62-756">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-756">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b0d62-757">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-757">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b0d62-758">요소</span><span class="sxs-lookup"><span data-stu-id="b0d62-758">Element</span></span>|<span data-ttu-id="b0d62-759">설명</span><span class="sxs-lookup"><span data-stu-id="b0d62-759">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="b0d62-760">*ws*</span><span class="sxs-lookup"><span data-stu-id="b0d62-760">*ws*</span></span>|<span data-ttu-id="b0d62-761">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-761">Optional white space.</span></span>|  
|<span data-ttu-id="b0d62-762">*sign*</span><span class="sxs-lookup"><span data-stu-id="b0d62-762">*sign*</span></span>|<span data-ttu-id="b0d62-763">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-763">An optional sign.</span></span>|  
|<span data-ttu-id="b0d62-764">*digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-764">*digits*</span></span>|<span data-ttu-id="b0d62-765">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-765">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b0d62-766">*,*</span><span class="sxs-lookup"><span data-stu-id="b0d62-766">*,*</span></span>|<span data-ttu-id="b0d62-767">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-767">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="b0d62-768">*.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-768">*.*</span></span>|<span data-ttu-id="b0d62-769">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-769">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="b0d62-770">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-770">*fractional-digits*</span></span>|<span data-ttu-id="b0d62-771">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-771">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="b0d62-772">`s` 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-772">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="b0d62-773">즉, 공백과 천 단위 구분 기호는 사용할 수 있지만 통화 기호를 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-773">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="b0d62-774">요소를 명시적으로 정의 하려면 (통화 기호, 1000 단위와 같은 구분 기호 및 공백)에 나타날 수 있는 `s`를 사용 하 여는 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-774">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b0d62-775">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현에서와 같은 <xref:System.Globalization.NumberFormatInfo> 또는 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-775">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="b0d62-776">`provider` 매개 변수에서 구문 분석에 사용 되는 문화권별 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-776">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="b0d62-777">`provider`가 `null`이면 현재 스레드 문화권이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-777">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="b0d62-778">A <xref:System.Decimal> 개체에는 29 자리 전체 자릿수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-778">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="b0d62-779">경우 `s` 숫자 자릿수가 29 개 이상인 하지만 소수 부분이 고의 범위를 나타내는 <xref:System.Decimal.MaxValue> 및 <xref:System.Decimal.MinValue>, 잘리지 않은 가장 가까운 수로 반올림을 사용 하 여 29 자리 숫자가 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-779">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b0d62-780">구분 기호에서 발견 되는 `s` 분석 및 적용 가능한 통화 또는 숫자의 소수 하는 동안 매개 변수 및 그룹 구분 기호가 동일 합니다. 구문 분석 작업의 구분 기호는 그룹 보다는 소수 구분 기호로 간주 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-780">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b0d62-781">구분 기호에 대 한 자세한 내용은 참조 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, 및 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-781">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-782">다음 예제에서는 단추 클릭 Web form의 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-782">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="b0d62-783">반환 된 배열을 사용 하 여는 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> 속성을 사용자의 로캘을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-783">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="b0d62-784">그런 다음는 <xref:System.Globalization.CultureInfo> 해당 로캘에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-784">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="b0d62-785"><xref:System.Globalization.NumberFormatInfo> 하에 속하는 개체는 <xref:System.Globalization.CultureInfo> 에 다음 전달 된 개체는 <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> 메서드는 사용자 입력을 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-785">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[ParseMethod#3](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#3)]
 [!code-vb[ParseMethod#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0d62-786">
            <paramref name="s" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-786">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="b0d62-787">
            <paramref name="s" />의 형식이 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-787">
              <paramref name="s" /> is not of the correct format</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-788">
            <paramref name="s" />가 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큰 숫자를 나타내는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-788">
              <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Number, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Number, Optional provider As IFormatProvider = null) As Decimal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="b0d62-789">변환할 숫자의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-789">The string representation of the number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="b0d62-790">
            <c>s</c>에 있을 수 있는 스타일 요소를 나타내는 <see cref="T:System.Globalization.NumberStyles" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-790">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="b0d62-791">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Number" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-791">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="b0d62-792">
            <c>s</c>의 형식에 대한 문화권별 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-792">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific information about the format of <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-793">지정된 스타일 및 문화권별 형식을 사용하여 숫자의 문자열 표현을 해당하는 <see cref="T:System.Decimal" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-793">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-794">
            <see cref="T:System.Decimal" /> 및 <paramref name="s" />로 지정된 <paramref name="style" />에 포함된 숫자에 해당하는 <paramref name="provider" /> 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-794">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-795">`style` 매개 변수를 허용 되는 형식을 정의 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-795">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="b0d62-796">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-796">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="b0d62-797">다음 <xref:System.Globalization.NumberStyles> 멤버가 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-797">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="b0d62-798">값에 따라 `style`, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-798">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="b0d62-799">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="b0d62-799">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="b0d62-800">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-800">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b0d62-801">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-801">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b0d62-802">요소</span><span class="sxs-lookup"><span data-stu-id="b0d62-802">Element</span></span>|<span data-ttu-id="b0d62-803">설명</span><span class="sxs-lookup"><span data-stu-id="b0d62-803">Description</span></span>|  
|-------------|-----------------|  
|*$*|<span data-ttu-id="b0d62-804">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-804">A culture-specific currency symbol.</span></span> <span data-ttu-id="b0d62-805">위치는 문자열에 의해 정의 됩니다는 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> 및 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 의 속성은 <xref:System.Globalization.NumberFormatInfo> 에서 반환 된 개체는 <xref:System.IFormatProvider.GetFormat%2A> 의 메서드는 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-805">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="b0d62-806">통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-806">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-807">*ws*</span><span class="sxs-lookup"><span data-stu-id="b0d62-807">*ws*</span></span>|<span data-ttu-id="b0d62-808">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-808">Optional white space.</span></span> <span data-ttu-id="b0d62-809">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-809">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-810">*sign*</span><span class="sxs-lookup"><span data-stu-id="b0d62-810">*sign*</span></span>|<span data-ttu-id="b0d62-811">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-811">An optional sign.</span></span> <span data-ttu-id="b0d62-812">부호의 시작 부분에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-812">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="b0d62-813">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-813">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-814">*digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-814">*digits*</span></span>|<span data-ttu-id="b0d62-815">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-815">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b0d62-816">*,*</span><span class="sxs-lookup"><span data-stu-id="b0d62-816">*,*</span></span>|<span data-ttu-id="b0d62-817">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-817">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="b0d62-818">1000 단위 구분 기호에 정의 된 문화권의 `provider` 에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-818">The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-819">*.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-819">*.*</span></span>|<span data-ttu-id="b0d62-820">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-820">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="b0d62-821">에 정의 된 문화권의 소수점 기호가 `provider` 에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-821">The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-822">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-822">*fractional-digits*</span></span>|<span data-ttu-id="b0d62-823">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-823">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="b0d62-824">소수 자릿수에 나타날 수 `s` 경우에만 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-824">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-825">*e*</span><span class="sxs-lookup"><span data-stu-id="b0d62-825">*e*</span></span>|<span data-ttu-id="b0d62-826">'E' 또는 'E' 문자는 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-826">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="b0d62-827">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-827">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
 <span data-ttu-id="b0d62-828">숫자만 문자열 (해당 하는 <xref:System.Globalization.NumberStyles.None> 스타일) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-828">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="b0d62-829">나머지 <xref:System.Globalization.NumberStyles> 멤버 요소는 입력된 문자열에 필요 하지 않을 수도 있는 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-829">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="b0d62-830">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-830">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="b0d62-831">NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="b0d62-831">NumberStyles value</span></span>|<span data-ttu-id="b0d62-832">S에서 숫자 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="b0d62-832">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="b0d62-833">*자릿수* 요소만 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-833">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="b0d62-834">*.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-834">The *.*</span></span> <span data-ttu-id="b0d62-835">및 *소수 자릿수가* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-835">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="b0d62-836">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-836">The `s` parameter can also use exponential notation.</span></span>  <span data-ttu-id="b0d62-837">이 플래그는 폼의 값을 지원 *자리*E*자릿수*추가; 양수 또는 음수 기호 소수점 기호 등의 요소를 사용 하 여 문자열을 구문 분석 하는 데 필요한 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-837">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="b0d62-838">*ws* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-838">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="b0d62-839">*ws* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-839">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="b0d62-840">*기호* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-840">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="b0d62-841">*기호* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-841">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="b0d62-842">*기호* 숫자 값이 들어 괄호 안에 형식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-842">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="b0d62-843">*,* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-843">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="b0d62-844">* $ * 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-844">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="b0d62-845">모두.</span><span class="sxs-lookup"><span data-stu-id="b0d62-845">All.</span></span> <span data-ttu-id="b0d62-846">`s` 매개 변수를 16 진수 숫자 또는 지 수 표기법으로 숫자를에서 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-846">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="b0d62-847">*ws* 부분이 나 끝 부분에 요소 `s`, *기호* 맨 앞에 `s`, 및 *.* 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-847">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.* symbol.</span></span> <span data-ttu-id="b0d62-848">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-848">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="b0d62-849">`ws`, `sign`, *,*, 및 *합니다.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-849">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="b0d62-850">요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-850">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="b0d62-851">모든 스타일 제외 하 고 `s` 16 진수를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-851">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="b0d62-852">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현에서와 같은 <xref:System.Globalization.NumberFormatInfo> 또는 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-852">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="b0d62-853">`provider` 매개 변수에서 구문 분석에 사용 되는 문화권별 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-853">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="b0d62-854">`provider`가 `null`이면 현재 스레드 문화권이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-854">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="b0d62-855">A <xref:System.Decimal> 개체에는 29 자리 전체 자릿수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-855">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="b0d62-856">경우 `s` 숫자 자릿수가 29 개 이상인 하지만 소수 부분이 고의 범위를 나타내는 <xref:System.Decimal.MaxValue> 및 <xref:System.Decimal.MinValue>, 잘리지 않은 가장 가까운 수로 반올림을 사용 하 여 29 자리 숫자가 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-856">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b0d62-857">구분 기호에서 발견 되는 `s` 분석 및 적용 가능한 통화 또는 숫자의 소수 하는 동안 매개 변수 및 그룹 구분 기호가 동일 합니다. 구문 분석 작업의 구분 기호는 그룹 보다는 소수 구분 기호로 간주 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-857">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b0d62-858">구분 기호에 대 한 자세한 내용은 참조 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, 및 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-858">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-859">다음 예제에서는 다양 한 `style` 및 `provider` 의 문자열 표현을 구문 분석에 매개 변수 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-859">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#3)]
 [!code-vb[System.Decimal.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="b0d62-860">
            <paramref name="s" />의 형식이 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-860">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-861">
            <paramref name="s" />가 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큰 숫자를 나타내는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-861">
              <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0d62-862">
            <paramref name="s" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-862">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0d62-863">
            <paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-863">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="b0d62-864">-또는-  <paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-864">-or-  <paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static decimal Remainder (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Remainder(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Remainder(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-865">피제수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-865">The dividend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-866">제수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-866">The divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-867">두 <see cref="T:System.Decimal" /> 값을 나눈 나머지를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-867">Computes the remainder after dividing two <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-868">
            <paramref name="d1" />를 <paramref name="d2" />로 나눈 나머지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-868">The remainder after dividing <paramref name="d1" /> by <paramref name="d2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-869">다음 예제에서는 <xref:System.Decimal.Remainder%2A> 메서드를 일련의 나누기 작업의 나머지를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-869">The following example uses the <xref:System.Decimal.Remainder%2A> method to calculate the remainder in a series of division operations.</span></span>  
  
 [!code-csharp[System.Decimal.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.remainder/cs/remainder.cs#1)]
 [!code-vb[System.Decimal.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.remainder/vb/remainder.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="b0d62-870">
            <paramref name="d2" />가 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-870">
              <paramref name="d2" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-871">반환 값이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-871">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-872">값을 가장 가까운 정수나 지정된 소수 자릿수로 반올림합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-872">Rounds a value to the nearest integer or specified number of decimal places.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-873">반올림할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-873">A decimal number to round.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-874">10진 값을 가장 가까운 정수로 반올림합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-874">Rounds a decimal value to the nearest integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-875">
            <paramref name="d" /> 매개 변수에 가장 가까운 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-875">The integer that is nearest to the <paramref name="d" /> parameter.</span>
          </span>
          <span data-ttu-id="b0d62-876">
            <paramref name="d" />가 두 숫자의 중간에 있으며 이 숫자 중 하나는 짝수이고 다른 하나는 홀수이면 짝수가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-876">If <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-877">이 메서드의 동작은 IEEE 표준 754, 섹션 4 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-877">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b0d62-878">이러한 종류의 반올림 라고도 *반올림을 일정 절반* 또는 *banker rounding*합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-878">This kind of rounding is sometimes called *round half to even* or *banker's rounding*.</span></span> <span data-ttu-id="b0d62-879">일관 되 게 한 방향에서 중간점 값을 반올림 하 여 발생 하는 반올림 오류를 최소화 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-879">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span> <span data-ttu-id="b0d62-880">호출 하는 것과 같습니다는 <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> 메서드는 `mode` 의 인수 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-880">It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-881">다음 예제에서는 다양 한 반올림 <xref:System.Decimal> 가장 가까운 정수로 102과 100 사이의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-881">The following example rounds a range of <xref:System.Decimal> values between 100 and 102 to the nearest integer.</span></span> <span data-ttu-id="b0d62-882">메서드는 은행원의 반올림을 사용 하므로 100.5 100이 고 101.5 102로 반올림을 반올림 하 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-882">Because the method uses banker's rounding, note that 100.5 rounds to 100 and 101.5 rounds to 102.</span></span>  
  
 [!code-csharp[System.Decimal.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round1.cs#1)]
 [!code-vb[System.Decimal.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-883">결과가 <see cref="T:System.Decimal" /> 값의 범위를 벗어났습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-883">The result is outside the range of a <see cref="T:System.Decimal" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-884">반올림할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-884">A decimal number to round.</span>
          </span>
        </param>
        <param name="decimals">
          <span data-ttu-id="b0d62-885">반올림할 소수 자릿수를 지정하는 0부터 28까지의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-885">A value from 0 to 28 that specifies the number of decimal places to round to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-886">
            <see cref="T:System.Decimal" /> 값을 지정된 소수 자릿수로 반올림합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-886">Rounds a <see cref="T:System.Decimal" /> value to a specified number of decimal places.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-887">소수 <paramref name="decimals" />자리로 반올림된 <paramref name="d" />에 해당하는 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-887">The decimal number equivalent to <paramref name="d" /> rounded to <paramref name="decimals" /> number of decimal places.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-888">이 메서드는 호출에 해당 하는 <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> 메서드는 `mode` 의 인수 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>합니다. 때 `d` 정확 하 게 짝수 반올림 된 두 값의 결과 짝수는 소수 자릿수 맨 오른쪽에 있는 반올림된 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-888">This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position.</span></span> <span data-ttu-id="b0d62-889">예를 들어, 소수점 두 자리로 반올림하면 2.345는 2.34가 되고 2.355는 2.36이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-889">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span> <span data-ttu-id="b0d62-890">이 프로세스 라고 *짝수로*, 또는 *banker rounding*합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-890">This process is known as *rounding toward even*, or *banker's rounding*.</span></span> <span data-ttu-id="b0d62-891">일관 되 게 한 방향에서 중간점 값을 반올림 하 여 발생 하는 반올림 오류를 최소화 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-891">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-892">다음 예제에서는 몇 가지 반올림 `Decimal` 소수 자릿수를 사용 하 여 지정 된 수의 값은 `Round` 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-892">The following example rounds several `Decimal` values to a specified number of decimal places using the `Round` method.</span></span>  
  
 [!code-csharp[System.Decimal.Round#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round12.cs#12)]
 [!code-vb[System.Decimal.Round#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round12.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0d62-893">
            <paramref name="decimals" />가 0에서 28 범위의 값이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-893">
              <paramref name="decimals" /> is not a value from 0 to 28.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-894">반올림할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-894">A decimal number to round.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="b0d62-895">서로 다른 두 숫자의 중간에 있는 <c>d</c>를 반올림하는 방법을 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-895">A value that specifies how to round <c>d</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-896">10진 값을 가장 가까운 정수로 반올림합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-896">Rounds a decimal value to the nearest integer.</span>
          </span>
          <span data-ttu-id="b0d62-897">서로 다른 두 숫자의 중간에 있는 값을 반올림하는 방법을 지정하는 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-897">A parameter specifies how to round the value if it is midway between two other numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-898">
            <paramref name="d" /> 매개 변수에 가장 가까운 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-898">The integer that is nearest to the <paramref name="d" /> parameter.</span>
          </span>
          <span data-ttu-id="b0d62-899">
            <paramref name="d" />가 두 숫자의 중간에 있으며 이 숫자 중 하나는 짝수이고 다른 하나는 홀수이면 <paramref name="mode" /> 매개 변수에 의해 두 숫자 중 반환될 숫자가 결정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-899">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-900">중간점 값을 다음 결과에 가장 덜 중요 한 자리 값은 정확 하 게 절반만 두 숫자는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-900">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="b0d62-901">예를 들어 7.5 중간점 값을 정수로 반올림 하는 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-901">For example, 7.5 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="b0d62-902">중간점 값에 대 한 가장 가까운 값 쉽게를 식별할 수 없으면 반올림 하 여 지정한 규칙에 없이 `mode` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-902">For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="b0d62-903"><xref:System.Decimal.Round%2A> 메서드 중간점 값을 처리 하기 위한 두 가지 반올림 규칙을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-903">The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="b0d62-904">0에서 멀어지는 쪽 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-904">Rounding away from zero.</span></span>  
 <span data-ttu-id="b0d62-905">중간점 값은 0에서 멀어지는 쪽 다음 번호로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-905">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="b0d62-906">3.5 4로, 반올림 하는 예를 들어-4, 5로 4.5 라운드에서-3.5 반올림-4.5를-5로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-906">For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5.</span></span> <span data-ttu-id="b0d62-907">이러한 형태의 반올림으로 표시 됩니다는 <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> 열거형 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-907">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="b0d62-908">0에서 멀어지는 쪽으로 반올림 하는 것은 가장 널리 알려진된 형태의 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-908">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="b0d62-909">와 상관 없이로 반올림 또는 은행원의 반올림</span><span class="sxs-lookup"><span data-stu-id="b0d62-909">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="b0d62-910">중간점 값은 가장 가까운 짝수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-910">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="b0d62-911">예를 들어 4로, 3.5와 4.5 반올림 및-3.5와-4.5-4 반내림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-911">For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4.</span></span> <span data-ttu-id="b0d62-912">이러한 형태의 반올림으로 표시 됩니다는 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> 열거형 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-912">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="b0d62-913">가장 가까운 수로 반올림는 반올림 재무 및 통계 작업에 사용 하 여 표준 형식의 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-913">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="b0d62-914">IEEE 표준 754, 섹션 4 준수합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-914">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b0d62-915">여러 반올림 연산에 사용 하는 경우에 일관 되 게 한 방향 중간점 값을 반올림 하 여 발생 하는 반올림 오류가 줄어듭니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-915">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="b0d62-916">경우에 따라이 반올림 오류가 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-916">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-917">반환 된 값을 표시 하는 다음 예제는 <xref:System.Math.Round%28System.Decimal%29> 메서드를는 <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> 메서드는 `mode` 의 인수 <xref:System.MidpointRounding.ToEven>, 및 <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> 사용 하 여 메서드는 `mode` 의 인수 <xref:System.MidpointRounding.AwayFromZero>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-917">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0d62-918">
            <paramref name="mode" />이 <see cref="T:System.MidpointRounding" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-918">
              <paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-919">결과가 <see cref="T:System.Decimal" /> 개체의 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-919">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-920">반올림할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-920">A decimal number to round.</span>
          </span>
        </param>
        <param name="decimals">
          <span data-ttu-id="b0d62-921">반환 값에서 유효 소수 자릿수(전체 자릿수)의 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-921">The number of significant decimal places (precision) in the return value.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="b0d62-922">서로 다른 두 숫자의 중간에 있는 <c>d</c>를 반올림하는 방법을 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-922">A value that specifies how to round <c>d</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-923">10진 값을 지정된 전체 자릿수로 반올림합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-923">Rounds a decimal value to a specified precision.</span>
          </span>
          <span data-ttu-id="b0d62-924">서로 다른 두 숫자의 중간에 있는 값을 반올림하는 방법을 지정하는 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-924">A parameter specifies how to round the value if it is midway between two other numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-925">전체 자릿수가 <paramref name="decimals" /> 매개 변수와 같은, <paramref name="d" /> 매개 변수에 가장 가까운 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-925">The number that is nearest to the <paramref name="d" /> parameter with a precision equal to the <paramref name="decimals" /> parameter.</span>
          </span>
          <span data-ttu-id="b0d62-926">
            <paramref name="d" />가 두 숫자의 중간에 있으며 이 숫자 중 하나는 짝수이고 다른 하나는 홀수이면 <paramref name="mode" /> 매개 변수에 의해 두 숫자 중 반환될 숫자가 결정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-926">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span>
          </span>
          <span data-ttu-id="b0d62-927">
            <paramref name="d" />의 전체 자릿수가 <paramref name="decimals" />보다 작으면 <paramref name="d" />는 변경되지 않은 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-927">If the precision of <paramref name="d" /> is less than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-928">`decimals` 매개 변수는 반환 값의 중요 한 소수 자릿수를 지정 하며 범위는 0에서 28 사이입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-928">The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28.</span></span> <span data-ttu-id="b0d62-929">경우 `decimals` 가 0 이면 매개 변수는 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-929">If `decimals` is zero, an integer is returned.</span></span>  
  
 <span data-ttu-id="b0d62-930">중간점 값을 다음 결과에 가장 덜 중요 한 자리 값은 정확 하 게 절반만 두 숫자는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-930">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="b0d62-931">예를 들어, 3.47500 중간값 해야 하면 두 소수 자릿수를 반올림 하 고 7.500는 정수로 반올림 하는 경우 중간점 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-931">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="b0d62-932">이러한 경우에 가장 가까운 값 쉽게를 식별할 수 없으면 반올림 하 여 지정한 규칙에 없이 `mode` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-932">In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="b0d62-933"><xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> 메서드 중간점 값을 처리 하기 위한 두 가지 반올림 규칙을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-933">The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="b0d62-934">0에서 멀어지는 쪽 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-934">Rounding away from zero.</span></span>  
 <span data-ttu-id="b0d62-935">중간점 값은 0에서 멀어지는 쪽 다음 번호로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-935">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="b0d62-936">3.75 3.8, 예를 들어 반올림-3.8, 3.9 3.85 반올림-3.75 반올림-3.85-3.9를 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-936">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="b0d62-937">이러한 형태의 반올림으로 표시 됩니다는 <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> 열거형 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-937">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="b0d62-938">0에서 멀어지는 쪽으로 반올림 하는 것은 가장 널리 알려진된 형태의 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-938">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="b0d62-939">와 상관 없이로 반올림 또는 은행원의 반올림</span><span class="sxs-lookup"><span data-stu-id="b0d62-939">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="b0d62-940">중간점 값은 가장 가까운 짝수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-940">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="b0d62-941">예를 들어 3.75와 3.85 3.8, 반올림 및-3.75와-3.85-3.8 반내림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-941">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="b0d62-942">이러한 형태의 반올림으로 표시 됩니다는 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> 열거형 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-942">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="b0d62-943">가장 가까운 수로 반올림는 반올림 재무 및 통계 작업에 사용 하 여 표준 형식의 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-943">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="b0d62-944">IEEE 표준 754, 섹션 4 준수합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-944">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="b0d62-945">여러 반올림 연산에 사용 하는 경우에 일관 되 게 한 방향 중간점 값을 반올림 하 여 발생 하는 반올림 오류가 줄어듭니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-945">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="b0d62-946">경우에 따라이 반올림 오류가 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-946">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-947">다음 예제에서는 사용 하는 방법을 <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> 메서드는 <xref:System.MidpointRounding> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-947">The following example demonstrates how to use the <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0d62-948">
            <paramref name="decimals" />가 0보다 작거나 28보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-948">
              <paramref name="decimals" /> is less than 0 or greater than 28.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0d62-949">
            <paramref name="mode" />이 <see cref="T:System.MidpointRounding" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-949">
              <paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-950">결과가 <see cref="T:System.Decimal" /> 개체의 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-950">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static decimal Subtract (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Subtract(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Subtract(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1">
          <span data-ttu-id="b0d62-951">피감수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-951">The minuend.</span>
          </span>
        </param>
        <param name="d2">
          <span data-ttu-id="b0d62-952">감수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-952">The subtrahend.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-953">다른 값에서 지정된 <see cref="T:System.Decimal" /> 값을 뺍니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-953">Subtracts one specified <see cref="T:System.Decimal" /> value from another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-954">
            <paramref name="d2" />에서 <paramref name="d1" />를 뺀 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-954">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-955">다음 예제에서는 `Subtract`합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-955">The following example illustrates the use of `Subtract`.</span></span>  
  
 [!code-cpp[Decimal Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#4)]
 [!code-csharp[Decimal Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#4)]
 [!code-vb[Decimal Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-956">반환 값이 <see cref="F:System.Decimal.MinValue" />보다 작거나 <see cref="F:System.Decimal.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-956">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-957">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-957">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-958">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-958">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-959">현재 인스턴스의 값이 0이 아니면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-959">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-960">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-960">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-961"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-961">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-962">메서드 대신 호출 하는 것은 <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-962">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-963">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-963">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-964">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-964">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-965">
            <see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-965">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-966">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-966">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-967"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-967">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-968">메서드 대신 하는 것입니다는 <xref:System.Decimal.ToByte%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-968">The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-969">결과 정수 값이 <see cref="F:System.Byte.MinValue" />보다 작거나 <see cref="F:System.Byte.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-969">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-970">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-970">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-971">이 변환은 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-971">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="b0d62-972">이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-972">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-973">없음</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-973">None.</span>
          </span>
          <span data-ttu-id="b0d62-974">이 변환은 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-974">This conversion is not supported.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b0d62-975">모든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-975">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-976">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-976">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-977">이 변환은 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-977">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="b0d62-978">이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-978">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-979">없음</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-979">None.</span>
          </span>
          <span data-ttu-id="b0d62-980">이 변환은 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-980">This conversion is not supported.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b0d62-981">모든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-981">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-982">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-982">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-983">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-983">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-984">변경되지 않은 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-984">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-985">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-985">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-986"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-986">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-987">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-987">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-988">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-988">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-989">
            <see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-989">The value of the current instance, converted to a <see cref="T:System.Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-990">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-990">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-991"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-991">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-992">메서드 대신 하는 것입니다는 <xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-992">The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b0d62-993">때문에 <xref:System.Double> 가 보다 적은 유효 자릿수는 <xref:System.Decimal>,이 작업에서 반올림 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-993">Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-994">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-994">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-995">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-995">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-996">
            <see cref="T:System.Int16" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-996">The value of the current instance, converted to a <see cref="T:System.Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-997">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-997">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-998"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-998">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-999">메서드 대신 하는 것입니다는 <xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-999">The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b0d62-1000"><xref:System.Decimal> 값은 0에 가장 가까운 정수 값으로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1000">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1001">결과 정수 값이 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1001">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-1002">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1002">The parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1003">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1003">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1004">
            <see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1004">The value of the current instance, converted to a <see cref="T:System.Int32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1005">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-1005">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-1006"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1006">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-1007">메서드 대신 하는 것입니다는 <xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1007">The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b0d62-1008"><xref:System.Decimal> 값은 0에 가장 가까운 정수 값으로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1008">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1009">결과 정수 값이 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1009">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-1010">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1010">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1011">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1012">
            <see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1012">The value of the current instance, converted to a <see cref="T:System.Int64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1013">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-1013">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-1014"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1014">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-1015">메서드 대신 하는 것입니다는 <xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToInt64%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1015">The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1016">결과 정수 값이 <see cref="F:System.Int64.MinValue" />보다 작거나 <see cref="F:System.Int64.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1016">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-1017">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1017">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1018">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1018">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1019">
            <see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1019">The value of the current instance, converted to a <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1020">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-1020">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-1021"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1021">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-1022">메서드 대신 하는 것입니다는 <xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToSByte%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1022">The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1023">결과 정수 값이 <see cref="F:System.SByte.MinValue" />보다 작거나 <see cref="F:System.SByte.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1023">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-1024">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1024">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1025">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1025">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1026">
            <see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1026">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1027">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-1027">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-1028"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1028">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-1029">메서드 대신 하는 것입니다는 <xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToSingle%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1029">The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSingle%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0d62-1030">이 <see cref="T:System.Decimal" /> 인스턴스의 값을 변환할 대상 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1030">The type to which to convert the value of this <see cref="T:System.Decimal" /> instance.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="b0d62-1031">반환된 값의 형식에 대한 문화권별 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1031">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1032">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1032">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1033">
            <paramref name="type" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1033">The value of the current instance, converted to a <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1034">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-1034">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-1035"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1035">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-1036">메서드 대신 호출 하는 것은 `static` (`Shared` Visual basic에서) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1036">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0d62-1037">
            <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1037">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b0d62-1038">요청된 형식 변환이 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1038">The requested type conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-1039">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1039">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1040">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1040">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1041">
            <see cref="T:System.UInt16" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1041">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1042">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-1042">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-1043"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1043">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-1044">메서드 대신 하는 것입니다는 <xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1044">The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1045">결과 정수 값이 <see cref="F:System.UInt16.MinValue" />보다 작거나 <see cref="F:System.UInt16.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1045">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-1046">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1046">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1047">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1047">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1048">
            <see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1048">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1049">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-1049">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-1050"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1050">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-1051">메서드 대신 하는 것입니다는 <xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1051">The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b0d62-1052"><xref:System.Decimal> 값은 0에 가장 가까운 정수 값으로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1052">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1053">결과 정수 값이 <see cref="F:System.UInt32.MinValue" />보다 작거나 <see cref="F:System.UInt32.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1053">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-1054">이 매개 변수는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1054">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1055">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1055">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1056">
            <see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1056">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1057">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b0d62-1057">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b0d62-1058"><xref:System.Decimal> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1058">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="b0d62-1059">메서드 대신 하는 것입니다는 <xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType> 메서드 또는 <xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1059">The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b0d62-1060"><xref:System.Decimal> 값은 0에 가장 가까운 정수 값으로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1060">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1061">결과 정수 값이 <see cref="F:System.UInt64.MinValue" />보다 작거나 <see cref="F:System.UInt64.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1061">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="b0d62-1062">콜백을 시작한 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1062">The object that initiated the callback.</span>
          </span>
          <span data-ttu-id="b0d62-1063">이 매개 변수의 기능은 현재 구현되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1063">The functionality for this parameter is not currently implemented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1064">개체의 deserialization이 완료될 때 실행됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1064">Runs when the deserialization of an object has been completed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="b0d62-1065">
            <see cref="T:System.Decimal" /> 개체에 잘못되거나 손상된 데이터가 들어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1065">The <see cref="T:System.Decimal" /> object contains invalid or corrupted data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-1066">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1066">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1067">지정된 <see cref="T:System.Decimal" />의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1067">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1068">
            <paramref name="value" />에 해당하는 8비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1068">An 8-bit unsigned integer equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1069">매개 변수 `value` 0에 가까워지도록 가장 가까운 정수 값으로 반올림 하 고 결과 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1069">Parameter `value` is rounded to the nearest integer value toward zero, and that result is returned.</span></span>  
  
 <span data-ttu-id="b0d62-1070">변환할 수도 있습니다는 <xref:System.Decimal> 값을 사용 하 여 8 비트 부호 없는 정수로 <xref:System.Decimal.op_Explicit%2A> 대입 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1070">You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b0d62-1071">축소 변환을 수행 하는 연산자, 하기 때문에 C#에서는 캐스팅 연산자 또는 Visual Basic의 변환 함수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1071">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1072">다음 예제에서는 <xref:System.Decimal.ToByte%2A> 10 진수 변환 하는 메서드 <xref:System.Byte> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1072">The following example uses the <xref:System.Decimal.ToByte%2A> method to convert decimal numbers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tobyte/cs/tobyte_1.cs#1)]
 [!code-vb[System.Decimal.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tobyte/vb/tobyte_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1073">
            <paramref name="value" />가 <see cref="F:System.Byte.MinValue" />보다 작거나 <see cref="F:System.Byte.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1073">
              <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (d As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-1074">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1074">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1075">지정된 <see cref="T:System.Decimal" />의 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1075">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1076">
            <paramref name="d" />와 값이 같은 배정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1076">A double-precision floating-point number equivalent to <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1077">배정밀도 부동 소수점 숫자 보다 적은 유효 자릿수에 있기 때문에이 작업에서 반올림 오류를 생성할 수는 <xref:System.Decimal>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1077">This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="b0d62-1078">변환할 수도 있습니다는 <xref:System.Decimal> 에 <xref:System.Double> 를 사용 하 여 값의 <xref:System.Decimal.op_Explicit%2A> 대입 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1078">You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b0d62-1079">변환에는 정밀도 손실 수반 수 있습니다, 때문에 C#에서는 캐스팅 연산자 또는 Visual Basic의 변환 함수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1079">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1080">다음 코드 예제에서는 `Decimal` 숫자를 <xref:System.Double> 사용 하 여 값 `ToDouble` 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1080">The following code example converts `Decimal` numbers to <xref:System.Double> values using `ToDouble` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-1081">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1081">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1082">지정된 <see cref="T:System.Decimal" />의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1082">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1083">
            <paramref name="value" />에 해당하는 16비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1083">A 16-bit signed integer equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1084">변환할 수도 있습니다는 <xref:System.Decimal> 값을 사용 하 여 16 비트 정수로 <xref:System.Decimal.op_Explicit%2A> 대입 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1084">You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b0d62-1085">축소 변환을 수행 하는 연산자, 하기 때문에 C#에서는 캐스팅 연산자 또는 Visual Basic의 변환 함수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1085">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1086">다음 예제에서는 <xref:System.Decimal.ToInt16%2A> 10 진수 변환 하는 메서드 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1086">The following example uses the <xref:System.Decimal.ToInt16%2A> method to convert decimal numbers to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Decimal.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1087">
            <paramref name="value" />가 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1087">
              <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (d As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-1088">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1088">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1089">지정된 <see cref="T:System.Decimal" />의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1089">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1090">
            <paramref name="d" />의 값에 해당하는 32비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1090">A 32-bit signed integer equivalent to the value of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1091">반환 값은 10 진수 값;의 정수 부분 소수 자릿수는 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1091">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="b0d62-1092">변환할 수도 있습니다는 <xref:System.Decimal> 값을 사용 하 여 32 비트 정수로 <xref:System.Decimal.op_Explicit%2A> 대입 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1092">You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b0d62-1093">축소 변환을 수행 하는 연산자, 하기 때문에 C#에서는 캐스팅 연산자 또는 Visual Basic의 변환 함수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1093">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1094">다음 예제에서는 <xref:System.Decimal.ToInt32%2A> 10 진수 변환 하는 메서드 <xref:System.Int32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1094">The following example uses the <xref:System.Decimal.ToInt32%2A> method to convert decimal numbers to <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Decimal.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1095">
            <paramref name="d" />가 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1095">
              <paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (d As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-1096">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1096">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1097">지정된 <see cref="T:System.Decimal" />의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1097">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1098">
            <paramref name="d" />의 값에 해당하는 64비트의 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1098">A 64-bit signed integer equivalent to the value of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1099">반환 값은 10 진수 값;의 정수 부분 소수 자릿수는 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1099">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="b0d62-1100">변환할 수도 있습니다는 <xref:System.Decimal> 값을 사용 하 여 64 비트 정수로 <xref:System.Decimal.op_Explicit%2A> 대입 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1100">You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b0d62-1101">축소 변환을 수행 하는 연산자, 하기 때문에 C#에서는 캐스팅 연산자 또는 Visual Basic의 변환 함수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1101">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1102">다음 예제에서는 <xref:System.Decimal.ToInt64%2A> 10 진수 변환 하는 메서드 <xref:System.Int64> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1102">The following example uses the <xref:System.Decimal.ToInt64%2A> method to convert decimal numbers to <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Decimal.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1103">
            <paramref name="d" />가 <see cref="F:System.Int64.MinValue" />보다 작거나 <see cref="F:System.Int64.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1103">
              <paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToOACurrency">
      <MemberSignature Language="C#" Value="public static long ToOACurrency (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToOACurrency(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToOACurrency(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToOACurrency (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToOACurrency(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-1104">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1104">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1105">지정된 <see cref="T:System.Decimal" /> 값을 64비트 부호 있는 정수에 포함된 해당 OLE Automation Currency 값으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1105">Converts the specified <see cref="T:System.Decimal" /> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1106">
            <paramref name="value" />에 해당하는 OLE Automation이 포함된 64비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1106">A 64-bit signed integer that contains the OLE Automation equivalent of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-1107">다음 코드 예제에서는 `ToOACurrency` 메서드 `Decimal` 에 포함 된 해당 OLE Automation Currency 값에 숫자 <xref:System.Int64> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1107">The following code example uses the `ToOACurrency` method to convert `Decimal` numbers to the equivalent OLE Automation Currency values that are contained in <xref:System.Int64> fields.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/tooacurrency.cpp#1)]
 [!code-csharp[System.Decimal.OACurrency#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/tooacurrency.cs#1)]
 [!code-vb[System.Decimal.OACurrency#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/tooacurrency.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.FromOACurrency(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-1108">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1108">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1109">지정된 <see cref="T:System.Decimal" />의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1109">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1110">
            <paramref name="value" />에 해당하는 8비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1110">An 8-bit signed integer equivalent to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1111">변환할 수도 있습니다는 <xref:System.Decimal> 값을 사용 하 여는 8 비트 부호 있는 정수는 <xref:System.Decimal.op_Explicit%2A> 대입 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1111">You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b0d62-1112">축소 변환을 수행 하는 연산자, 하기 때문에 C#에서는 캐스팅 연산자 또는 Visual Basic의 변환 함수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1112">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1113">다음 예제에서는 <xref:System.Decimal.ToSByte%2A> 10 진수 변환 하는 메서드 <xref:System.SByte> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1113">The following example uses the <xref:System.Decimal.ToSByte%2A> method to convert decimal numbers to <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Decimal.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1114">
            <paramref name="value" />가 <see cref="F:System.SByte.MinValue" />보다 작거나 <see cref="F:System.SByte.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1114">
              <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (d As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-1115">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1115">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1116">지정된 <see cref="T:System.Decimal" />의 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1116">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1117">
            <paramref name="d" />의 값에 해당하는 단정밀도 부동 소수점 숫자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1117">A single-precision floating-point number equivalent to the value of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1118">단 정밀도 부동 소수점 숫자 보다 적은 유효 자릿수에 있기 때문에이 작업에서 반올림 오류를 생성할 수는 <xref:System.Decimal>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1118">This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="b0d62-1119">변환할 수도 있습니다는 <xref:System.Decimal> 에 <xref:System.Single> 를 사용 하 여 값의 <xref:System.Decimal.op_Explicit%2A> 대입 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1119">You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b0d62-1120">변환에는 정밀도 손실 수반 수 있습니다, 때문에 C#에서는 캐스팅 연산자 또는 Visual Basic의 변환 함수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1120">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1121">다음 코드 예제에서는 `Decimal` 숫자를 <xref:System.Single> 사용 하 여 값의 `ToSingle` 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1121">The following code example converts `Decimal` numbers to <xref:System.Single> values using the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-1122">이 인스턴스의 숫자 값을 해당하는 <see cref="T:System.String" /> 표현으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1122">Converts the numeric value of this instance to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-1123">이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1123">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1124">이 인스턴스의 값을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1124">A string that represents the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1125"><xref:System.Decimal.ToString> 메서드 형식을 <xref:System.Decimal> 에서 값을 기본값 ("G" 또는 일반)는 현재 문화권의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1125">The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="b0d62-1126">다른 형식이 나 문화권을 지정 하려는 경우 사용의 다른 오버 로드는 <xref:System.Decimal.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="b0d62-1126">If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="b0d62-1127">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="b0d62-1127">To use format</span></span>|<span data-ttu-id="b0d62-1128">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="b0d62-1128">For culture</span></span>|<span data-ttu-id="b0d62-1129">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="b0d62-1129">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="b0d62-1130">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1130">Default ("G") format</span></span>|<span data-ttu-id="b0d62-1131">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1131">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="b0d62-1132">특정 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1132">A specific format</span></span>|<span data-ttu-id="b0d62-1133">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1133">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="b0d62-1134">특정 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1134">A specific format</span></span>|<span data-ttu-id="b0d62-1135">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1135">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="b0d62-1136">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1136">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="b0d62-1137">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1137">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="b0d62-1138">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1138">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1139">다음 예제에서는 표시 된 <xref:System.Decimal> 기본값을 사용 하 여 값 <xref:System.Decimal.ToString> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1139">The following example displays a <xref:System.Decimal> value using the default <xref:System.Decimal.ToString> method.</span></span> <span data-ttu-id="b0d62-1140">또한의 문자열 표현을 표시는 <xref:System.Decimal> 다양 한 표준 형식 지정자를 사용 하 여 발생 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1140">It also displays the string representations of the <xref:System.Decimal> value that result from using a number of standard format specifiers.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#2)]
 [!code-vb[System.Decimal.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#2)]  
  
 <span data-ttu-id="b0d62-1141">다음 예제에서는 계정에서 금액을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1141">The following example displays the amount of money in an account.</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b0d62-1142">문화권별 서식 지정 정보를 제공하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1142">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1143">지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1143">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1144">이 인스턴스의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1144">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1145"><xref:System.Decimal.ToString%28System.IFormatProvider%29> 메서드 형식을 <xref:System.Decimal> 에서 값을 기본값 ("G" 또는 일반) 지정된 된 문화권의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1145">The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="b0d62-1146">다른 형식이 나 현재 문화권을 지정 하려는 경우 사용의 다른 오버 로드는 <xref:System.Decimal.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="b0d62-1146">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="b0d62-1147">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="b0d62-1147">To use format</span></span>|<span data-ttu-id="b0d62-1148">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="b0d62-1148">For culture</span></span>|<span data-ttu-id="b0d62-1149">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="b0d62-1149">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="b0d62-1150">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1150">Default ("G") format</span></span>|<span data-ttu-id="b0d62-1151">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1151">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="b0d62-1152">특정 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1152">A specific format</span></span>|<span data-ttu-id="b0d62-1153">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1153">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="b0d62-1154">특정 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1154">A specific format</span></span>|<span data-ttu-id="b0d62-1155">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1155">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="b0d62-1156">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1156">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="b0d62-1157">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1157">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="b0d62-1158">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1158">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="b0d62-1159">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현 인 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1159">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="b0d62-1160">일반적으로 `provider` 는 <xref:System.Globalization.NumberFormatInfo> 개체 또는 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1160">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="b0d62-1161">`provider` 매개 변수에서 서식 지정에 사용 되는 문화권별 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1161">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="b0d62-1162">`provider`가 `null`이면 현재 스레드 문화권이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1162">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="b0d62-1163">변환 하는 <xref:System.Decimal> 값을 지정 된 문화권 및 호출 하는 특정 형식 문자열을 사용 하 여 해당 문자열 표현에서 <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1163">To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1164">다음 예제에서는 표시의 문자열 표현을 <xref:System.Decimal> 를 사용 하 여 값 <xref:System.Globalization.CultureInfo> 서로 다른 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1164">The following example displays the string representation of a <xref:System.Decimal> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#3)]
 [!code-vb[System.Decimal.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="b0d62-1165">표준 또는 사용자 지정 숫자 서식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1165">A standard or custom numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1166">지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1166">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1167">이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1167">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1168"><xref:System.Decimal.ToString%28System.String%29> 메서드 형식을 <xref:System.Decimal> 현재 문화권의 규칙을 사용 하 여 지정 된 형식에서 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1168">The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="b0d62-1169">기본값 ("G" 또는 일반)을 사용 하려는 경우 다른 문화권이 지정, 다른 오버 로드를 사용 하거나 형식는 <xref:System.Decimal.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="b0d62-1169">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="b0d62-1170">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="b0d62-1170">To use format</span></span>|<span data-ttu-id="b0d62-1171">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="b0d62-1171">For culture</span></span>|<span data-ttu-id="b0d62-1172">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="b0d62-1172">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="b0d62-1173">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1173">Default ("G") format</span></span>|<span data-ttu-id="b0d62-1174">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1174">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="b0d62-1175">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1175">Default ("G") format</span></span>|<span data-ttu-id="b0d62-1176">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1176">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="b0d62-1177">특정 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1177">A specific format</span></span>|<span data-ttu-id="b0d62-1178">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1178">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="b0d62-1179"><xref:System.Decimal.ToString%2A> 메서드는 지정 된 표준 또는 사용자 지정 숫자 서식 문자열을 사용 합니다.는 `format` 현재 인스턴스의 값의 문자열 표현으로 변환 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1179">The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation.</span></span> <span data-ttu-id="b0d62-1180">`format` 매개 변수는 유효한 수 [표준 숫자 서식 지정자](~/docs/standard/base-types/standard-numeric-format-strings.md) D, R, X, 뿐 아니라 조합을 제외 하 고 [사용자 지정 숫자 서식 지정자](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1180">The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md) except for D, R, and X, as well as any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="b0d62-1181">경우 `format` 은 `null` 이거나 빈 문자열이 면 반환 값이 인스턴스의 형식은 일반 숫자 형식 지정자 (G)로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1181">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).</span></span>  
  
 <span data-ttu-id="b0d62-1182">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1182">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="b0d62-1183">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1183">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="b0d62-1184">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1184">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="b0d62-1185">사용 하 여 반환 값의 서식을 지정는 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1185">The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="b0d62-1186">지정된 된 문화권의 서식 지정 규칙을 적용 하려면 호출 된 <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1186">To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1187">다음 예제에서는 표시 된 <xref:System.Decimal> 각 지원 되는 표준 숫자 서식 지정자와 두 개의 사용자 지정 숫자 형식 문자열을 함께 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1187">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="b0d62-1188">숫자 값을 문자열로 변환,이 예제에서는 EN-US 문화권의 형식 규칙을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1188">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#4)]
 [!code-vb[System.Decimal.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="b0d62-1189">
            <paramref name="format" />이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1189">
              <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="b0d62-1190">숫자 서식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1190">A numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="b0d62-1191">문화권별 서식 지정 정보를 제공하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1191">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1192">지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1192">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1193">
            <paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1193">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1194"><xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> 메서드 형식을 <xref:System.Double> 지정된 된 문화권의 지정 된 형식에서 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1194">The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture.</span></span> <span data-ttu-id="b0d62-1195">다른 오버 로드를 사용 하 여 기본 형식 또는 문화권 설정을 사용 하려는 경우는 <xref:System.Double.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="b0d62-1195">If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="b0d62-1196">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="b0d62-1196">To use format</span></span>|<span data-ttu-id="b0d62-1197">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="b0d62-1197">For culture</span></span>|<span data-ttu-id="b0d62-1198">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="b0d62-1198">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="b0d62-1199">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1199">Default ("G") format</span></span>|<span data-ttu-id="b0d62-1200">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1200">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="b0d62-1201">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1201">Default ("G") format</span></span>|<span data-ttu-id="b0d62-1202">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1202">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="b0d62-1203">특정 형식</span><span class="sxs-lookup"><span data-stu-id="b0d62-1203">A specific format</span></span>|<span data-ttu-id="b0d62-1204">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="b0d62-1204">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
  
 <span data-ttu-id="b0d62-1205">`format` 매개 변수는 D, R, 및 X를 제외한 모든 유효한 표준 숫자 서식 지정자 및 사용자 지정 숫자 서식 지정자의 조합이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1205">The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="b0d62-1206">경우 `format` 은 `null` 이거나 빈 문자열을이 인스턴스에 대 한 반환 값 ("G")는 일반 숫자 형식 지정자와 함께 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1206">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="b0d62-1207">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1207">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="b0d62-1208">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1208">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="b0d62-1209">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1209">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="b0d62-1210">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현 인 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1210">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="b0d62-1211">일반적으로 `provider` 는 <xref:System.Globalization.NumberFormatInfo> 또는 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1211">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="b0d62-1212">`provider` 매개 변수에서 서식 지정에 사용 되는 문화권별 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1212">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="b0d62-1213">`provider`가 `null`이면 현재 스레드 문화권이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1213">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1214">다음 예제에서는 표시 된 <xref:System.Decimal> 각 지원 되는 표준 숫자 서식 지정자를 사용 하 여 다양 한 문화권에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1214">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#5)]
 [!code-vb[System.Decimal.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="b0d62-1215">
            <paramref name="format" />이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1215">
              <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0d62-1216">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1216">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1217">지정된 <see cref="T:System.Decimal" />의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1217">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1218">
            <paramref name="value" />의 값에 해당하는 16비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1218">A 16-bit unsigned integer equivalent to the value of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1219">반환 값은 10 진수 값;의 정수 부분 소수 자릿수는 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1219">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="b0d62-1220">변환할 수도 있습니다는 <xref:System.Decimal> 값을 사용 하 여 16 비트 부호 없는 정수는 <xref:System.Decimal.op_Explicit%2A> 대입 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1220">You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b0d62-1221">축소 변환을 수행 하는 연산자, 하기 때문에 C#에서는 캐스팅 연산자 또는 Visual Basic의 변환 함수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1221">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1222">다음 예제에서는 <xref:System.Decimal.ToUInt16%2A> 10 진수 변환 하는 메서드 <xref:System.UInt16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1222">The following example uses the <xref:System.Decimal.ToUInt16%2A> method to convert decimal numbers to <xref:System.UInt16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt32(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1223">
            <paramref name="value" />가 <see cref="F:System.UInt16.MaxValue" />보다 크거나 <see cref="F:System.UInt16.MinValue" />보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1223">
              <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (d As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-1224">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1224">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1225">지정된 <see cref="T:System.Decimal" />의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1225">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1226">
            <paramref name="d" />의 값에 해당하는 32비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1226">A 32-bit unsigned integer equivalent to the value of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1227">반환 값은 10 진수 값;의 정수 부분 소수 자릿수는 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1227">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="b0d62-1228">변환할 수도 있습니다는 <xref:System.Decimal> 값을 사용 하 여 32 비트 부호 없는 정수로 <xref:System.Decimal.op_Explicit%2A> 대입 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1228">You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b0d62-1229">축소 변환을 수행 하는 연산자, 하기 때문에 C#에서는 캐스팅 연산자 또는 Visual Basic의 변환 함수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1229">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1230">다음 예제에서는 <xref:System.Decimal.ToUInt32%2A> 10 진수 변환 하는 메서드 <xref:System.UInt32> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1230">The following example uses the <xref:System.Decimal.ToUInt32%2A> method to convert decimal numbers to <xref:System.UInt32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1231">
            <paramref name="d" />가 음수이거나 <see cref="F:System.UInt32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1231">
              <paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (d As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-1232">변환할 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1232">The decimal number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1233">지정된 <see cref="T:System.Decimal" />의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1233">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1234">
            <paramref name="d" />의 값에 해당하는 64비트 부호 없는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1234">A 64-bit unsigned integer equivalent to the value of <paramref name="d" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1235">반환 값은 10 진수 값;의 정수 부분 소수 자릿수는 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1235">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="b0d62-1236">변환할 수도 있습니다는 <xref:System.Decimal> 값을 사용 하 여 64 비트 부호 없는 정수로 <xref:System.Decimal.op_Explicit%2A> 대입 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1236">You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="b0d62-1237">축소 변환을 수행 하는 연산자, 하기 때문에 C#에서는 캐스팅 연산자 또는 Visual Basic의 변환 함수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1237">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1238">다음 예제에서는 <xref:System.Decimal.ToUInt64%2A> 10 진수 변환 하는 메서드 <xref:System.UInt64> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1238">The following example uses the <xref:System.Decimal.ToUInt64%2A> method to convert decimal numbers to <xref:System.UInt64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="b0d62-1239">
            <paramref name="d" />가 음수이거나 <see cref="F:System.UInt64.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1239">
              <paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="b0d62-1240">잘라낼 10진수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1240">The decimal number to truncate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0d62-1241">소수 자리를 삭제하고 지정된 <see cref="T:System.Decimal" />의 정수 자리만 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1241">Returns the integral digits of the specified <see cref="T:System.Decimal" />; any fractional digits are discarded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1242">0에 가까운 가장 근사한 정수로 반올림된 <paramref name="d" />의 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1242">The result of <paramref name="d" /> rounded toward zero, to the nearest whole number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1243">이 메서드 반올림 `d` 0 가장 근사한 정수로에 해당 하는 소수점 자릿수를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1243">This method rounds `d` toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1244">다음 코드 예제에서는 `Truncate` 여러 소수 자릿수를 취소 하는 메서드 `Decimal` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1244">The following code example uses the `Truncate` method to discard the fractional digits of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-1245">숫자의 문자열 표현을 해당하는 <see cref="T:System.Decimal" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1245">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
          <span data-ttu-id="b0d62-1246">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1246">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Decimal.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="b0d62-1247">변환할 숫자의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1247">The string representation of the number to convert.</span>
          </span>
        </param>
        <param name="result">To be added.</param>
        <summary>
          <span data-ttu-id="b0d62-1248">숫자의 문자열 표현을 해당하는 <see cref="T:System.Decimal" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1248">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
          <span data-ttu-id="b0d62-1249">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1249">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1250">
            <see langword="true" />가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1250">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1251">와 다른이 오버 로드는 <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> 메서드 구문 분석 된 숫자 값을 반환 하는 대신 구문 분석 작업이 성공 했는지를 나타내는 부울 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1251">This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="b0d62-1252">테스트 하기 위해 예외 처리를 사용할 필요가 <xref:System.FormatException> 에 `s` 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1252">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="b0d62-1253">매개 변수 `s` 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1253">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="b0d62-1254">[ws][sign][digits,]digits[.fractional-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="b0d62-1254">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="b0d62-1255">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1255">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b0d62-1256">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1256">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b0d62-1257">요소</span><span class="sxs-lookup"><span data-stu-id="b0d62-1257">Element</span></span>|<span data-ttu-id="b0d62-1258">설명</span><span class="sxs-lookup"><span data-stu-id="b0d62-1258">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="b0d62-1259">*ws*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1259">*ws*</span></span>|<span data-ttu-id="b0d62-1260">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1260">Optional white space.</span></span>|  
|<span data-ttu-id="b0d62-1261">*sign*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1261">*sign*</span></span>|<span data-ttu-id="b0d62-1262">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1262">An optional sign.</span></span>|  
|<span data-ttu-id="b0d62-1263">*digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1263">*digits*</span></span>|<span data-ttu-id="b0d62-1264">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1264">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b0d62-1265">*,*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1265">*,*</span></span>|<span data-ttu-id="b0d62-1266">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1266">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="b0d62-1267">*.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1267">*.*</span></span>|<span data-ttu-id="b0d62-1268">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1268">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="b0d62-1269">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1269">*fractional-digits*</span></span>|<span data-ttu-id="b0d62-1270">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1270">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="b0d62-1271">매개 변수 `s` 를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1271">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="b0d62-1272">즉, 공백과 천 단위 구분 기호는 사용할 수 있지만 통화 기호를 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1272">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="b0d62-1273">요소를 명시적으로 정의 하려면 (통화 기호, 1000 단위와 같은 구분 기호 및 공백)에 나타날 수 있는 `s`를 사용 하 여는 <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1273">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="b0d62-1274">매개 변수 `s` 의 형식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 초기화는 현재 시스템 문화권에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1274">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="b0d62-1275">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1275">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="b0d62-1276">구문 분석 하려면 문화권 지정 다른 서식 지정 정보를 사용 하 여, 사용 된 <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1276">To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="b0d62-1277">필요한 경우 값 `s` 가장 가까운 수로 반올림을 사용 하 여 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1277">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b0d62-1278">A <xref:System.Decimal> 개체에는 29 자리 전체 자릿수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1278">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="b0d62-1279">경우 `s` 숫자 자릿수가 29 개 이상인 하지만 소수 부분이 고의 범위를 나타내는 <xref:System.Decimal.MaxValue> 및 <xref:System.Decimal.MinValue>, 잘리지 않은 가장 가까운 수로 반올림을 사용 하 여 29 자리 숫자가 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1279">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b0d62-1280">발견 되는 구분 기호 구문 분석 작업 동안는 `s` 매개 변수를 적용 가능한 통화 또는 숫자의 소수와 그룹 구분 기호가 동일, 구문 분석 작업의 구분 기호는 그룹 보다는 소수 구분 기호로 간주 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1280">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b0d62-1281">구분 기호에 대 한 자세한 내용은 참조 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, 및 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1281">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1282">다음 예제에서는 <xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType> 숫자 값의 문자열 표현을 상호 변환 하는 메서드 <xref:System.Decimal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1282">The following example uses the <xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType> method to convert the string representations of numeric values to <xref:System.Decimal> values.</span></span> <span data-ttu-id="b0d62-1283">해당 EN-US가 현재 문화권이 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1283">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.Decimal.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="b0d62-1284">변환할 숫자의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1284">The string representation of the number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="b0d62-1285">
            <c>s</c>에 사용할 수 있는 형식을 나타내는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1285">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span>
          </span>
          <span data-ttu-id="b0d62-1286">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Number" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1286">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="b0d62-1287">
            <c>s</c>에 대한 문화권별 구문 분석 정보를 제공하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1287">An object that supplies culture-specific parsing information about <c>s</c>.</span>
          </span>
        </param>
        <param name="result">To be added.</param>
        <summary>
          <span data-ttu-id="b0d62-1288">지정된 스타일 및 문화권별 형식을 사용하여 숫자의 문자열 표현을 해당하는 <see cref="T:System.Decimal" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1288">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span>
          </span>
          <span data-ttu-id="b0d62-1289">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1289">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0d62-1290">
            <see langword="true" />가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1290">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d62-1291">와 다른이 오버 로드는 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드 구문 분석 된 숫자 값을 반환 하는 대신 구문 분석 작업이 성공 했는지를 나타내는 부울 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1291">This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="b0d62-1292">테스트 하기 위해 예외 처리를 사용할 필요가 <xref:System.FormatException> 에 `s` 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1292">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="b0d62-1293">`style` 매개 변수를 허용 되는 형식을 정의 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1293">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="b0d62-1294">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1294">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="b0d62-1295">다음 <xref:System.Globalization.NumberStyles> 멤버가 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1295">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="b0d62-1296">스타일의 값에 따라는 `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1296">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="b0d62-1297">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="b0d62-1297">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="b0d62-1298">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1298">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="b0d62-1299">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1299">The following table describes each element.</span></span>  
  
|<span data-ttu-id="b0d62-1300">요소</span><span class="sxs-lookup"><span data-stu-id="b0d62-1300">Element</span></span>|<span data-ttu-id="b0d62-1301">설명</span><span class="sxs-lookup"><span data-stu-id="b0d62-1301">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="b0d62-1302">*ws*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1302">*ws*</span></span>|<span data-ttu-id="b0d62-1303">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1303">Optional white space.</span></span> <span data-ttu-id="b0d62-1304">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1304">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="b0d62-1305">끝에 나 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1305">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="b0d62-1306">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1306">A culture-specific currency symbol.</span></span> <span data-ttu-id="b0d62-1307">위치는 문자열에 의해 정의 됩니다는 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 또는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Globalization.NumberFormatInfo> 에서 반환 된 개체는 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 의 메서드는 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1307">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="b0d62-1308">통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1308">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="b0d62-1309">*sign*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1309">*sign*</span></span>|<span data-ttu-id="b0d62-1310">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1310">An optional sign.</span></span>|  
|<span data-ttu-id="b0d62-1311">*digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1311">*digits*</span></span>|<span data-ttu-id="b0d62-1312">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1312">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="b0d62-1313">*.*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1313">*.*</span></span>|<span data-ttu-id="b0d62-1314">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1314">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="b0d62-1315">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="b0d62-1315">*fractional-digits*</span></span>|<span data-ttu-id="b0d62-1316">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1316">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="b0d62-1317">`style` 매개 변수를 사용할 수 있는 형식을 지정는 `s` 매개 변수를 하나 이상 있을 수 있습니다 및 <xref:System.Globalization.NumberStyles> 열거형 상수는 비트 OR 연산을 사용 하 여 결합 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1317">The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation.</span></span> <span data-ttu-id="b0d62-1318">경우 `style` 매개 변수가 null 이면 `s` 를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1318">If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span>  
  
 <span data-ttu-id="b0d62-1319">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 와 같은 구현은 <xref:System.Globalization.NumberFormatInfo> 또는 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1319">The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="b0d62-1320">`provider` 매개 변수에서 구문 분석에 사용 되는 문화권별 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1320">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="b0d62-1321">`provider`가 `null`이면 현재 스레드 문화권이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1321">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="b0d62-1322">A <xref:System.Decimal> 개체에는 29 자리 전체 자릿수입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1322">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="b0d62-1323">경우 `s` 숫자 자릿수가 29 개 이상인 하지만 소수 부분이 고의 범위를 나타내는 <xref:System.Decimal.MaxValue> 및 <xref:System.Decimal.MinValue>, 잘리지 않은 가장 가까운 수로 반올림을 사용 하 여 29 자리 숫자가 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1323">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="b0d62-1324">구분 기호에서 발견 되는 `s` 분석 및 적용 가능한 통화 또는 숫자의 소수 하는 동안 매개 변수 및 그룹 구분 기호가 동일 합니다. 구문 분석 작업의 구분 기호는 그룹 보다는 소수 구분 기호로 간주 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1324">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="b0d62-1325">구분 기호에 대 한 자세한 내용은 참조 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, 및 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1325">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0d62-1326">다음 예제에서는 <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29> 특정 스타일 있으며 특정 문화권의 규칙을 사용 하 여 포맷 되는 숫자의 문자열 표현을 구문 분석 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1326">The following example demonstrates the use of the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29> method to parse the string representation of a number that has a particular style and is formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.Decimal.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0d62-1327">
            <paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1327">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="b0d62-1328">-또는-  <paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1328">-or-  <paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly decimal Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal Zero" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal Zero;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0d62-1329">숫자 0을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0d62-1329">Represents the number zero (0).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0d62-1330">다음 코드 예제에서는 `Zero` 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="b0d62-1330">The following code example illustrates the use of the `Zero` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
  </Members>
</Type>