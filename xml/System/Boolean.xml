<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Boolean.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55c74586023e1e3eff46870d9a381696caa8b39fd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c74586023e1e3eff46870d9a381696caa8b39fd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Represents a Boolean (<ph id="ph1">&lt;see langword="true" /&gt;</ph> or <ph id="ph2">&lt;see langword="false" /&gt;</ph>) value.</source>
          <target state="translated">부울(<ph id="ph1">&lt;see langword="true" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="false" /&gt;</ph>) 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance can have either of two values: <ph id="ph2">`true`</ph>, or <ph id="ph3">`false`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스 두 값 중 하나를 가질 수 있습니다: <ph id="ph2">`true`</ph>, 또는 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure provides methods that support the following tasks:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 구조는 다음 작업을 지 원하는 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Converting Boolean values to strings: <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph></source>
          <target state="translated">부울 값을 문자열로 변환 합니다. <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Parsing strings to convert them to Boolean values: <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph></source>
          <target state="translated">부울 값으로 변환 하기 위해 문자열 구문 분석: <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Comparing values: <ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph></source>
          <target state="translated">값 비교: <ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following sections explain these tasks and other usage details:</source>
          <target state="translated">다음 섹션에서는 이러한 작업 및 기타 사용 현황 세부 정보를 설명합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Formatting Boolean values<ept id="p1">](#Formatting)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>부울 값의 서식 지정<ept id="p1">](#Formatting)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Converting to and from Boolean values<ept id="p1">](#Converting)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>부울 값 사이의 변환<ept id="p1">](#Converting)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Parsing Boolean values<ept id="p1">](#Parsing)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>부울 값을 구문 분석<ept id="p1">](#Parsing)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Comparing Boolean values<ept id="p1">](#Comparing)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>부울 값 비교<ept id="p1">](#Comparing)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Working with Booleans as binary values<ept id="p1">](#Binary)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>부울 이진 값으로 사용<ept id="p1">](#Binary)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Performing operations with Boolean values<ept id="p1">](#Operations)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>부울 값으로 작업을 수행<ept id="p1">](#Operations)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Booleans and Interop<ept id="p1">](#Interop)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>부울 및 Interop<ept id="p1">](#Interop)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Formatting Boolean values</source>
          <target state="translated">부울 값의 서식 지정</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> is either "True" for a <ph id="ph2">`true`</ph> value or "False" for a <ph id="ph3">`false`</ph> value.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 에 대 한 "True"는는 <ph id="ph2">`true`</ph> 값 또는 "False"에 대 한는 <ph id="ph3">`false`</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value is defined by the read-only <ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph> and <ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph> fields.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 읽기 전용으로 값이 정의 <ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You use the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method to convert Boolean values to strings.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> 메서드를 부울 값을 문자열로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The Boolean structure includes two <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> overloads: the parameterless <ph id="ph2">&lt;xref:System.Boolean.ToString&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method, which includes a parameter that controls formatting.</source>
          <target state="translated">두 개의 부울 구조 포함 <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> 오버 로드: 매개 변수가 없는 <ph id="ph2">&lt;xref:System.Boolean.ToString&gt;</ph> 메서드 및 <ph id="ph3">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> 서식 지정을 제어 하는 매개 변수를 포함 하는 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, because this parameter is ignored, the two overloads produce identical strings.</source>
          <target state="translated">그러나이 매개 변수는 무시 됩니다 때문에 두 개의 오버 로드 동일한 문자열을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method does not support culture-sensitive formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> 방법은 문화권 구분 서식 지정을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example illustrates formatting with the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제를 사용한 형식 지정은 <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Note that the example uses the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> feature, so the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method is called implicitly.</source>
          <target state="translated">이 예에서는 사용 하는 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 기능을 하므로 <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> 메서드를 암시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Because the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure can have only two values, it is easy to add custom formatting.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 구조에는 두 개의 값만 있을 수 있습니다, 사용자 지정 서식을 추가 하는 것이 쉽습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For simple custom formatting in which other string literals are substituted for "True" and "False", you can use any conditional evaluation feature supported by your language, such as the <bpt id="p1">[</bpt>conditional operator<ept id="p1">](~/docs/csharp/language-reference/operators/conditional-operator.md)</ept> in C# or the <bpt id="p2">[</bpt>If operator<ept id="p2">](~/docs/visual-basic/language-reference/operators/if-operator.md)</ept> in Visual Basic.</source>
          <target state="translated">간단한 사용자 지정 서식 지정을 위해 다른 문자열 리터럴 "True"와 "False"에 대 한 대체 됩니다와 같은 언어에서 지 원하는 모든 조건부 평가 기능을 사용할 수 있습니다는 <bpt id="p1">[</bpt>조건부 연산자<ept id="p1">](~/docs/csharp/language-reference/operators/conditional-operator.md)</ept> C# 또는 <bpt id="p2">[</bpt>경우 연산자<ept id="p2">](~/docs/visual-basic/language-reference/operators/if-operator.md)</ept> Visual Basic의 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example uses this technique to format <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values as "Yes" and "No" rather than "True" and "False".</source>
          <target state="translated">다음 예제에서는이 방법을 사용 하 여 서식을 지정 하려면 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 값 "Yes"로 하 고 "True" 및 "False" 대신 "No"입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For more complex custom formatting operations, including culture-sensitive formatting, you can call the <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method and provide an <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> implementation.</source>
          <target state="translated">더 복잡 한 사용자 지정 서식 지정 작업을 위해 문화권 구분 서식 지정을 포함 하 여 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> 메서드를 제공 하 고는 <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.</source>
          <target state="translated">다음 예제에서는 구현 된 <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 인터페이스 영어 (미국), 프랑스어 (프랑스) 및 러시아어 (러시아) 문화권에 대 한 문화권별 부울 문자열을 제공 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Optionally, you can use <bpt id="p1">[</bpt>resource files<ept id="p1">](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890)</ept> to define culture-specific Boolean strings.</source>
          <target state="translated">사용할 수 있습니다 <bpt id="p1">[</bpt>리소스 파일<ept id="p1">](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890)</ept> 문화권별 부울 문자열을 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Converting to and from Boolean values</source>
          <target state="translated">부울 값 사이의 변환</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 구현 구조는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>As a result, you can use the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class to perform conversions between a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value and any other primitive type in the .NET Framework, or you can call the <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> structure's explicit implementations.</source>
          <target state="translated">결과적으로, 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 간의 변환을 수행 하는 클래스는 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값과 다른 기본 형식을.NET Framework에서 호출할 수는 <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> 구조체의 명시적 구현입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, conversions between a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> and the following types are not supported, so the corresponding conversion methods throw an <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph> exception:</source>
          <target state="translated">그러나 사이의 변환은 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 해지고 다음과 같은 종류는 지원 되지 않으므로 해당 변환 메서드를 throw 한 <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph> 예외:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Conversion between <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> and <ph id="ph2">&lt;xref:System.Char&gt;</ph> (the <ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> methods)</source>
          <target state="translated">간의 변환을 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Char&gt;</ph> (의 <ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드)</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Conversion between <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> (the <ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> methods)</source>
          <target state="translated">간의 변환을 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 및 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> (의 <ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>All conversions from integral or floating-point numbers to Boolean values convert non-zero values to <ph id="ph1">`true`</ph> and zero values to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">정수 계열 또는 부동 소수점 숫자 부울 값으로 변환할 때 모든 0이 아닌 값을 변환 <ph id="ph1">`true`</ph> 및 0 값을 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example illustrates this by calling selected overloads of the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 선택한 오버 로드를 호출 하 여이 <ph id="ph1">&lt;xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.</source>
          <target state="translated">부동 소수점 값에서 부울 값으로 변환할 때 변환 메서드는 0이 표시는 정확한 비교를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>If the floating-point value has lost precision, the result can be unexpected.</source>
          <target state="translated">부동 소수점 값에 전체 자릿수를 무시할 경우 결과 예기치 않은 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This is illustrated in the following example, in which a <ph id="ph1">&lt;xref:System.Double&gt;</ph> variable whose value should be zero is converted to a Boolean value.</source>
          <target state="translated">이 다음 예제를 확인할 수는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 해당 값은 0 이어야 하는 변수는 부울 값으로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>As the example shows, the result is <ph id="ph1">`true`</ph> because repeated additions of 0.2 have resulted in a loss of precision.</source>
          <target state="translated">결과 위의 예제와 같이 <ph id="ph1">`true`</ph> 0.2 추가 자릿수 손실을 초래할 반복 하기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>When converting from Boolean to numeric values, the conversion methods of the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class convert <ph id="ph2">`true`</ph> to 1 and <ph id="ph3">`false`</ph> to 0.</source>
          <target state="translated">변환 메서드는 숫자 값을 Boolean로는 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 클래스 convert <ph id="ph2">`true`</ph> 1 및 <ph id="ph3">`false`</ph> 0으로 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, Visual Basic conversion functions convert <ph id="ph1">`true`</ph> to either 255 (for conversions to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values) or -1 (for all other numeric conversions).</source>
          <target state="translated">그러나 Visual Basic 변환 함수 변환 <ph id="ph1">`true`</ph> 어느 255 (에 변환에 대 한 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값) 또는 (다른 모든 숫자 변환의)에 대 한-1입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example converts <ph id="ph1">`true`</ph> to numeric values by using a <ph id="ph2">&lt;xref:System.Convert&gt;</ph> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.</source>
          <target state="translated">다음 예제에서는 변환 <ph id="ph1">`true`</ph> 를 사용 하 여 숫자 값으로는 <ph id="ph2">&lt;xref:System.Convert&gt;</ph> 메서드, 및 Visual Basic 예제에서는 Visual Basic 언어의 자체 변환 연산자를 사용 하 여의 경우.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For conversions from <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> to string values, see the <bpt id="p1">[</bpt>Formatting Boolean Values<ept id="p1">](#Formatting)</ept> section.</source>
          <target state="translated">로 변환을 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 문자열 값, 참조에 <bpt id="p1">[</bpt>부울 값 서식 지정<ept id="p1">](#Formatting)</ept> 섹션.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For conversions from strings to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values, see the <bpt id="p1">[</bpt>Parsing Boolean Values<ept id="p1">](#Parsing)</ept> section.</source>
          <target state="translated">문자열을 변환할 때에 대 한 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 값, 참조는 <bpt id="p1">[</bpt>부울 값을 구문 분석<ept id="p1">](#Parsing)</ept> 섹션.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Parsing Boolean values</source>
          <target state="translated">부울 값을 구문 분석</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure includes two static parsing methods, <ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>, that convert a string to a Boolean value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 두 정적 구문 분석 메서드를 포함 하는 구조 <ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>, 문자열을 부울 값을 변환 하는 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph> fields, which are "True" and "False", respectively.</source>
          <target state="translated">부울 값의 문자열 표현을 해당 하는 대/소문자 구분의 값에 의해 정의 됩니다는 <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph> 인 "True" 및 "False", 각각 필드입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>In other words, the only strings that parse successfully are "True", "False", "true", "false", or some mixed-case equivalent.</source>
          <target state="translated">즉, 성공적으로 구문 분석 하는 유일한 문자열은 "True", "False", "true", "false" 또는 일부 소문자가 혼합 된 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You cannot successfully parse numeric strings such as "0" or "1".</source>
          <target state="translated">"0" 또는 "1"와 같은 숫자 문자열을 성공적으로 분석할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Leading or trailing white-space characters are not considered when performing the string comparison.</source>
          <target state="translated">문자열 비교를 수행 하는 경우에 선행 또는 후행 공백 문자 고려 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> methods to parse a number of strings.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> 다양 한 문자열을 구문 분석 하는 메서드.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Note that only the case-insensitive equivalents of "True" and "False" can be successfully parsed.</source>
          <target state="translated">Note 수 "True" 및 "False"의 해당 항목에 대/소문자 구분 성공적으로 구문 분석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>If you are programming in Visual Basic, you can use the <ph id="ph1">`CBool`</ph> function to convert the string representation of a number to a Boolean value.</source>
          <target state="translated">Visual Basic에서 프로그래밍 하는 경우 사용할 수 있습니다는 <ph id="ph1">`CBool`</ph> 부울 값으로 숫자의 문자열 표현을 변환 하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>"0" is converted to <ph id="ph1">`false`</ph>, and the string representation of any non-zero value is converted to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">"0"으로 변환 됩니다 <ph id="ph1">`false`</ph>, 0이 아닌 모든 값의 문자열 표현으로 변환 됩니다 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.</source>
          <target state="translated">Visual Basic에서 프로그래밍 하는 하지 경우 부울으로 변환 하기 전에 숫자로 문자열에 숫자를 변환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example illustrates this by converting an array of integers to Boolean values.</source>
          <target state="translated">다음 예는 정수의 배열을 부울 값으로 변환 하 여이 보여줍니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Comparing Boolean values</source>
          <target state="translated">부울 값 비교</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Because Boolean values are either <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>, there is little reason to explicitly call the <ph id="ph3">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> method, which indicates whether an instance is greater than, less than, or equal to a specified value.</source>
          <target state="translated">부울 값은 때문에 <ph id="ph1">`true`</ph> 또는 <ph id="ph2">`false`</ph>, 이유는 거의 없습니다 명시적으로 호출 하는 <ph id="ph3">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> 인지 여부를 나타내는 인스턴스 보다 큼, 보다 작거나, 메서드 또는 등호를 지정 된 값입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Typically, to compare two Boolean variables, you call the <ph id="ph1">&lt;xref:System.Boolean.Equals%2A&gt;</ph> method or use your language's equality operator.</source>
          <target state="translated">일반적으로 두 개의 부울 변수를 비교 하려면 호출는 <ph id="ph1">&lt;xref:System.Boolean.Equals%2A&gt;</ph> 메서드 하거나 해당 언어의 같음 연산자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, when you want to compare a Boolean variable with the literal Boolean value <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.</source>
          <target state="translated">그러나 하려는 경우 부울 리터럴 값 부울 변수 비교 <ph id="ph1">`true`</ph> 또는 <ph id="ph2">`false`</ph>, 필요 없는 명시적 비교를 수행 하는 부울 값을 평가의 결과 부울 값이 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For example, the expressions</source>
          <target state="translated">예를 들어 식</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>and</source>
          <target state="translated">를 갖는</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>are equivalent, but the second is more compact.</source>
          <target state="translated">동일 하지만 두 번째 용량이 줄어듭니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, both techniques offer comparable performance.</source>
          <target state="translated">그러나 두 가지 방법을 모두 비슷한 성능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Working with Booleans as binary values</source>
          <target state="translated">부울 이진 값으로 사용</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A Boolean value occupies one byte of memory, as the following C# example shows.</source>
          <target state="translated">다음 C# 예제와 같이 1 바이트의 메모리를 차지 하는 부울 값을 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The example must be compiled with the <ph id="ph1">`/unsafe`</ph> switch.</source>
          <target state="translated">이 예제에서는로 컴파일해야는 <ph id="ph1">`/unsafe`</ph> 전환 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The byte's low-order bit is used to represent its value.</source>
          <target state="translated">바이트의 낮은 순서 비트는 해당 값을 나타내는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A value of 1 represents <ph id="ph1">`true`</ph>; a value of 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">값이 1 <ph id="ph1">`true`</ph>; 값을 나타내는 0 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType&gt;</ph> structure to work with sets of Boolean values.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType&gt;</ph> 구조 부울 값의 집합을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You can convert a Boolean value to its binary representation by calling the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">호출 하 여 부울 값을 이진 표현으로 변환할 수 있습니다는 <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The method returns a byte array with a single element.</source>
          <target state="translated">메서드는 단일 요소가 있는 바이트 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>To restore a Boolean value from its binary representation, you can call the <ph id="ph1">&lt;xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">부울 값을 이진 표현에서 복원 하려면 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <ph id="ph2">&lt;xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> method to restore the value from its binary representation.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> 이진 표현 및 표시 값 및 호출의 개별 비트에 부울 값을 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> 값의 이진 표현에서 복원 하는 메서드.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Performing operations with Boolean values</source>
          <target state="translated">부울 값으로 작업을 수행</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This section illustrates how Boolean values are used in apps.</source>
          <target state="translated">이 섹션 방법을 부울 값을 보여 줍니다. 앱에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The first section discusses its use as a flag.</source>
          <target state="translated">첫 번째 섹션에서는 플래그로 용도 설명합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The second illustrates its use for arithmetic operations.</source>
          <target state="translated">두 번째 산술 연산에 대 한 용도를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Boolean values as flags</source>
          <target state="translated">플래그로 부울 값</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.</source>
          <target state="translated">부울 변수 조건의 유무 신호를 보내 플래그로, 가장 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For example, in the <ph id="ph1">&lt;xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> method, the final parameter, <ph id="ph2">`ignoreCase`</ph>, is a flag that indicates whether the comparison of two strings is case-insensitive (<ph id="ph3">`ignoreCase`</ph> is <ph id="ph4">`true`</ph>) or case-sensitive (<ph id="ph5">`ignoreCase`</ph> is <ph id="ph6">`false`</ph>).</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드, 마지막 매개 변수 <ph id="ph2">`ignoreCase`</ph>, 두 문자열의 비교는 대/소문자 구분 여부를 나타내는 플래그 (<ph id="ph3">`ignoreCase`</ph> 은 <ph id="ph4">`true`</ph>) 대/소문자 구분 또는 (<ph id="ph5">`ignoreCase`</ph> 은 <ph id="ph6">`false`</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The value of the flag can then be evaluated in a conditional statement.</source>
          <target state="translated">그런 다음 조건문에서 플래그의 값을 계산할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example uses a simple console app to illustrate the use of Boolean variables as flags.</source>
          <target state="translated">다음 예제에서는 간단한 콘솔 응용 프로그램을 사용 하 여 플래그로 부울 변수 사용법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The app accepts command-line parameters that enable output to be redirected to a specified file (the <ph id="ph1">`/f`</ph> switch), and that enable output to be sent both to a specified file and to the console (the <ph id="ph2">`/b`</ph> switch).</source>
          <target state="translated">응용 프로그램에서는 지정된 된 파일에 리디렉션이 출력을 사용할 수 있는 명령줄 매개 변수 (의 <ph id="ph1">`/f`</ph> 전환), 및 출력을 콘솔 및 지정된 된 파일에 보낼 수 있도록 하는 (의 <ph id="ph2">`/b`</ph> 전환).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The app defines a flag named <ph id="ph1">`isRedirected`</ph> to indicate whether output is to be sent to a file, and a flag named <ph id="ph2">`isBoth`</ph> to indicate that output should be sent to the console.</source>
          <target state="translated">명명 된 플래그를 정의 하는 응용 프로그램 <ph id="ph1">`isRedirected`</ph> 파일을 전송할 출력은 및 플래그 라는 여부를 나타내는 데 <ph id="ph2">`isBoth`</ph> 출력을 콘솔에 보내야 한다고 나타냅니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Booleans and arithmetic operations</source>
          <target state="translated">부울 및 산술 연산</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.</source>
          <target state="translated">부울 값은 때때로 수학적 계산을 트리거하는 조건의 있음을 표시 하기 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For example, a <ph id="ph1">`hasShippingCharge`</ph> variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.</source>
          <target state="translated">예를 들어 한 <ph id="ph1">`hasShippingCharge`</ph> 변수 운송 요금 청구 금액에 추가할 것인지를 지정 하는 플래그도 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Because an operation with a <ph id="ph1">`false`</ph> value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.</source>
          <target state="translated">때문에 포함 된 작업을 <ph id="ph1">`false`</ph> 값에 영향을 주지 않습니다 작업의 결과에 필요 없는 부울 수학 연산에서 사용 하는 정수 값으로 변환 하 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Instead, you can use conditional logic.</source>
          <target state="translated">대신, 조건부 논리를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.</source>
          <target state="translated">다음 예제에서는 부분합, 운송 요금 및 경우 선택적 서비스 요금으로 구성 하는 금액을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">`hasServiceCharge`</ph> variable determines whether the service charge is applied.</source>
          <target state="translated"><ph id="ph1">`hasServiceCharge`</ph> 변수 서비스 요금 적용 되는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Instead of converting <ph id="ph1">`hasServiceCharge`</ph> to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.</source>
          <target state="translated">변환 하는 대신 <ph id="ph1">`hasServiceCharge`</ph> 를 숫자 값을 서비스 요금에 따라 곱한 예제를 사용 하 여 조건부 논리 적용 가능한 경우 서비스 요금이 청구 금액을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Booleans and interop</source>
          <target state="translated">부울 및 interop</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>While marshaling base data types to COM is generally straightforward, the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> data type is an exception.</source>
          <target state="translated">일반적으로 간단 하 게는 COM에 대 한 기본 데이터 형식을 마샬링하는 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 데이터 형식은 예외입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to marshal the <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> type to any of the following representations:</source>
          <target state="translated">적용할 수는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> 특성을 마샬링하는 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 다음 표현 중 어느 것에 형식:</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Enumeration type</source>
          <target state="translated">열거형 형식</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Unmanaged format</source>
          <target state="translated">관리 되지 않는 형식</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A 4-byte integer value, where any nonzero value represents <ph id="ph1">`true`</ph> and 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">여기서 0이 아닌 모든 값은 4 바이트 정수 값, <ph id="ph1">`true`</ph> 0 나타냅니다 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This is the default format of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> field in a structure and of a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> parameter in platform invoke calls.</source>
          <target state="translated">기본 형식은 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 는 구조, 필드는 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 플랫폼에서 매개 변수는 호출을 호출 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A 1-byte integer value, where the 1 represents <ph id="ph1">`true`</ph> and 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">여기서는 1은 1 바이트 정수 값, <ph id="ph1">`true`</ph> 0 나타냅니다 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A 2-byte integer value, where -1 represents <ph id="ph1">`true`</ph> and 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">여기서은-1, 2 바이트 정수 값 <ph id="ph1">`true`</ph> 0 나타냅니다 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This is the default format of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> parameter in COM interop calls.</source>
          <target state="translated">기본 형식은 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> COM interop 호출에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>All members of this type are thread safe.</source>
          <target state="translated">이 유형의 모든 멤버는 스레드로부터 안전 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">멤버 인스턴스 상태를 수정 하려면 표시 되는 실제로 새 값으로 초기화 하는 새 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">으로 다른 종류와이 형식의 인스턴스를 포함 하는 공유 변수를 읽고 쓰는 보호 해야 스레드로부터 안전을 보장 하려면 잠금에 의해.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Compares this instance to a specified object or <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object and returns an integer that indicates their relationship to one another.</source>
          <target state="translated">이 인스턴스를 지정된 개체 또는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체와 비교하고 서로의 관계를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object to compare to this instance.</source>
          <target state="translated">이 인스턴스와 비교할 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>Compares this instance to a specified <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object and returns an integer that indicates their relationship to one another.</source>
          <target state="translated">이 인스턴스와 지정된 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체를 비교하고 서로의 관계를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>A signed integer that indicates the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스와 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 상대 값을 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 반환 값</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 조건</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="false" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;see langword="false" /&gt;</ph>이고 <ph id="ph4">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph5">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> are equal (either both are <ph id="ph4">&lt;see langword="true" /&gt;</ph> or both are <ph id="ph5">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스와 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>는 같습니다. 즉, 둘 다 <ph id="ph4">&lt;see langword="true" /&gt;</ph>이거나 둘 다 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;see langword="true" /&gt;</ph>이고 <ph id="ph4">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">이 메서드를 구현 하는 <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> 인터페이스 및 수행 보다 조금 더 나은 <ph id="ph2">&lt;xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType&gt;</ph> 메서드 변환할 필요가 없기 때문에 <ph id="ph3">`value`</ph> 매개 변수를 개체로 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 비트 수가 적은 일부 프로그래밍 언어를 인스턴스 형식 보다 더 많은 비트 값으로 매개 변수의 값을 변환 하는 암시적 확대 변환이 수행 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">예를 들어 인스턴스 형식이 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 매개 변수 형식이 고 <ph id="ph2">&lt;xref:System.Byte&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method to compare the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and parameter representation.</source>
          <target state="translated">Microsoft C# 컴파일러는 매개 변수의 값을 표시 하는 명령을 생성는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 개체를 생성 합니다.는 <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> 비교 하는 메서드는 <ph id="ph3">&lt;xref:System.Int32&gt;</ph> 인스턴스와 매개 변수 표현 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</source>
          <target state="translated">해당 컴파일러에서 숫자 형식에 암시적으로 확대 변환을 수행 여부를 확인 하려면 해당 프로그래밍 언어의 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> method for several value and reference types.</source>
          <target state="translated">다음 코드 예제에서는 제네릭 및 제네릭이 아닌 버전을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> 여러 값 및 참조 형식에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>An object to compare to this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스와 비교할 개체 또는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</source>
          <target state="translated">이 인스턴스와 지정된 개체를 비교하고 서로의 관계를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>A signed integer that indicates the relative order of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스와 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>의 상대 순서를 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 반환 값</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 조건</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="false" /&gt;</ph> and <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;see langword="false" /&gt;</ph>이고 <ph id="ph4">&lt;paramref name="obj" /&gt;</ph>는 <ph id="ph5">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> are equal (either both are <ph id="ph4">&lt;see langword="true" /&gt;</ph> or both are <ph id="ph5">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스와 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>는 같습니다. 즉, 둘 다 <ph id="ph4">&lt;see langword="true" /&gt;</ph>이거나 둘 다 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스는 <ph id="ph3">&lt;see langword="true" /&gt;</ph>이고 <ph id="ph4">&lt;paramref name="obj" /&gt;</ph>는 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">`obj`</ph> must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">`Boolean`</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`obj`</ph> 해야 <ph id="ph2">`null`</ph> 또는 인스턴스의 <ph id="ph3">`Boolean`</ph>, 그러지 않으면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">이 메서드를 구현 하는 <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>가 아닌 경우</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Returns a value indicating whether this instance is equal to a specified object or <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스가 지정된 개체나 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>과 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to compare to this instance.</source>
          <target state="translated">이 인스턴스와 비교할 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Boolean)">
          <source>Returns a value indicating whether this instance is equal to a specified <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">이 인스턴스가 지정된 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체와 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> has the same value as this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 이 인터페이스와 같은 값을 가지면 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Equals(System.Boolean)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph> because it does not have to convert the <ph id="ph3">`obj`</ph> parameter to an object.</source>
          <target state="translated">이 메서드를 구현 하는 <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> 인터페이스를 하 고 수행 보다 조금 더 나은 <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph> 변환할 필요가 없기 때문에 <ph id="ph3">`obj`</ph> 매개 변수를 개체로 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Object)">
          <source>An object to compare to this instance.</source>
          <target state="translated">이 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph> and has the same value as this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>이며 이 인스턴스와 값이 같으면 <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Equals(System.Object)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="F:System.Boolean.FalseString">
          <source>Represents the Boolean value <ph id="ph1">&lt;see langword="false" /&gt;</ph> as a string.</source>
          <target state="translated">부울 값 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 문자열로 나타냅니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="F:System.Boolean.FalseString">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.FalseString">
          <source>This field is equal to the string "False".</source>
          <target state="translated">이 필드는 문자열 "False"와 같습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.FalseString">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.FalseString&gt;</ph> property defines the string representation of a <ph id="ph2">`False`</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value in formatting and parsing operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.FalseString&gt;</ph> 속성의 문자열 표현을 정의 <ph id="ph2">`False`</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> 서식 지정 및 구문 분석 작업의 값입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">이 인스턴스의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.GetHashCode">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> class implements <ph id="ph2">`true`</ph> as the integer, one, and <ph id="ph3">`false`</ph> as the integer, zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 클래스 구현 <ph id="ph2">`true`</ph> integer로 하나, 및 <ph id="ph3">`false`</ph> integer로 0입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.GetHashCode">
          <source>However, a particular programming language might represent <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph> with other values.</source>
          <target state="translated">그러나 특정 프로그래밍 언어를 나타낼 수 있습니다 <ph id="ph1">`true`</ph> 및 <ph id="ph2">`false`</ph> 다른 값으로.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetTypeCode">
          <source>Returns the type code for the <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값 형식에 대한 형식 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetTypeCode">
          <source>The enumerated constant <ph id="ph1">&lt;see cref="F:System.TypeCode.Boolean" /&gt;</ph>.</source>
          <target state="translated">열거형 상수 <ph id="ph1">&lt;see cref="F:System.TypeCode.Boolean" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source>A string containing the value to convert.</source>
          <target state="translated">변환할 값이 들어 있는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source>Converts the specified string representation of a logical value to its <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> equivalent.</source>
          <target state="translated">논리 값의 지정된 문자열 표현을 해당하는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is equivalent to <ph id="ph3">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>; <ph id="ph4">&lt;see langword="false" /&gt;</ph> if <ph id="ph5">&lt;paramref name="value" /&gt;</ph> is equivalent to <ph id="ph6">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>과 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph5">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph6">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>과 같으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Parse(System.String)">
          <source>The <ph id="ph1">`value`</ph> parameter, optionally preceded or trailed by white space, must contain either <ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph> or <ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 매개 변수를 필요에 따라 앞 이나 후행 공백이, 포함 해야 <ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph>, 그러지 않으면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Parse(System.String)">
          <source>The comparison is case-insensitive.</source>
          <target state="translated">비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Parse(System.String)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not equivalent to <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>과 같지 않은 경우</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> or <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="false" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>1 if the value of this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스의 값이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToByte%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToByte%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 사용하려고 하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>You attempt to convert a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> 값으로 변환하려고 한 경우.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 사용하려고 하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>You attempt to convert a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> 값으로 변환하려고 한 경우.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>..</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>..</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDouble%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToDouble%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt16%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToInt16%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToInt32%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>..</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The desired type.</source>
          <target state="translated">필요한 형식입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation that supplies culture-specific information about the format of the returned value.</source>
          <target state="translated">반환된 값의 형식에 대한 문화권별 정보를 제공하는 <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 구현입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An object of the specified type, with a value that is equivalent to the value of this <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 개체의 값과 같은 값이 들어 있는 지정된 형식의 개체입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The requested type conversion is not supported.</source>
          <target state="translated">요청된 형식 변환이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">이 인스턴스가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 1이고, 그렇지 않으면 0입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">메서드 대신 호출 하는 것은 <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Converts the value of this instance to its equivalent string representation (either "True" or "False").</source>
          <target state="translated">이 인스턴스의 값을 해당하는 문자열 표현("True" 또는 "False")으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString">
          <source>Converts the value of this instance to its equivalent string representation (either "True" or "False").</source>
          <target state="translated">이 인스턴스의 값을 해당하는 문자열 표현("True" 또는 "False")으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString">
          <source>"True" (the value of the <ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> property) if the value of this instance is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, or "False" (the value of the <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> property) if the value of this instance is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 "True"(<ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 속성의 값)이고, 이 인스턴스의 값이 <ph id="ph4">&lt;see langword="false" /&gt;</ph>이면 "False"(<ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> 속성의 값)입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>This method returns the constants "True" or "False".</source>
          <target state="translated">이 메서드는 "True" 또는 "False" 상수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</source>
          <target state="translated">XML은 대/소문자를 구분 하 고 XML 사양 "true"와 "false"로 유효한 부울 값을 인식 있는지 note 합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>If the string returned by the <ph id="ph1">&lt;xref:System.Boolean.ToString&gt;</ph> method is to be written to an XML file, its <ph id="ph2">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> method should be called first to convert it to lowercase.</source>
          <target state="translated">문자열에서 반환 하는 경우는 <ph id="ph1">&lt;xref:System.Boolean.ToString&gt;</ph> 메서드는 XML 파일에 쓰여지도록 해당 <ph id="ph2">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> 를 소문자로 변환 메서드를 먼저 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>(Reserved) An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object.</source>
          <target state="translated">(예약됨) <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>Converts the value of this instance to its equivalent string representation (either "True" or "False").</source>
          <target state="translated">이 인스턴스의 값을 해당하는 문자열 표현("True" 또는 "False")으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> if the value of this instance is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> if the value of this instance is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 <ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>이면 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, 이 인스턴스의 값이 <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>이면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is reserved.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 예약 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>It does not participate in the execution of this method.</source>
          <target state="translated">이 메서드의 실행에 참여 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>This means that the <ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method, unlike most methods with a <ph id="ph2">`provider`</ph> parameter, does not reflect culture-specific settings.</source>
          <target state="translated">즉는 <ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 있는 대부분의 메서드와 달리 메서드는 <ph id="ph2">`provider`</ph> 매개 변수를 문화권별 설정을 반영 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>This method returns the constants "True" or "False".</source>
          <target state="translated">이 메서드는 "True" 또는 "False" 상수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</source>
          <target state="translated">XML은 대/소문자를 구분 하 고 XML 사양 "true"와 "false"로 유효한 부울 값을 인식 있는지 note 합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>If the <ph id="ph1">&lt;xref:System.String&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method is to be written to an XML file, its <ph id="ph3">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> method should be called first to convert it to lowercase.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.String&gt;</ph> 에서 반환 된 개체는 <ph id="ph2">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> 메서드는 XML 파일에 쓰여지도록 해당 <ph id="ph3">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> 를 소문자로 변환 메서드를 먼저 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="F:System.Boolean.TrueString">
          <source>Represents the Boolean value <ph id="ph1">&lt;see langword="true" /&gt;</ph> as a string.</source>
          <target state="translated">부울 값 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 문자열로 나타냅니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="F:System.Boolean.TrueString">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.TrueString">
          <source>This field is equal to the string "True".</source>
          <target state="translated">이 필드는 문자열 "True"와 같습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.TrueString">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> property defines the string representation of a <ph id="ph2">`True`</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value in formatting and parsing operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> 속성의 문자열 표현을 정의 <ph id="ph2">`True`</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> 서식 지정 및 구문 분석 작업의 값입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>A string containing the value to convert.</source>
          <target state="translated">변환할 값이 들어 있는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>When this method returns, if the conversion succeeded, contains <ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is equal to <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see langword="false" /&gt;</ph> if <bpt id="p2">&lt;c&gt;</bpt>value<ept id="p2">&lt;/c&gt;</ept> is equal to <ph id="ph4">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated">변환이 성공하는 경우 이 메서드에서 반환될 때 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>이 <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>과 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>가 포함되고, <bpt id="p2">&lt;c&gt;</bpt>값<ept id="p2">&lt;/c&gt;</ept>이 <ph id="ph4">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>과 같으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>If the conversion failed, contains <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">변환이 실패한 경우에는 <ph id="ph1">&lt;see langword="false" /&gt;</ph>가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The conversion fails if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not equal to the value of either the <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> field.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이거나 <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> 필드 값과 동일하지 않으면 변환에 실패합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>Tries to convert the specified string representation of a logical value to its <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> equivalent.</source>
          <target state="translated">논리 값의 지정된 문자열 표현을 해당하는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>으로 변환하려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 성공적으로 변환되었으면 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph> method, except the <ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> 방법은 <ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph> 메서드를 제외 하 고는 <ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> 메서드는 변환이 실패할 경우 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The <ph id="ph1">`value`</ph> parameter can be preceded or followed by white space.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 매개 변수를 앞 이나 뒤에 공백 수 있습니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The comparison is ordinal and case-insensitive.</source>
          <target state="translated">비교는 서 수 이며 대 소문자를 구분 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method to parse an array of strings.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> 메서드 문자열의 배열을 구문 분석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>Note that the parse operation succeeds only if the string to be parsed is "True" (the value of the <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> field) or "False" (the value of the <ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph> field) in a case-insensitive comparison.</source>
          <target state="translated">분석할 문자열은 "True" 경우에 구문 분석 작업이 성공 하는 (의 값은 <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> 필드) 또는 "False" (의 값은 <ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph> 필드)는 대/소문자 비구분 비교에서 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>