<Type Name="IComparable" FullName="System.IComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8f557e994926a1defd28f5baf14b4c7ba5a4b70" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430824" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>값 형식 또는 클래스에서 해당 인스턴스를 정렬 및 순서 지정하기 위해 구현하는 일반화된 형식별 비교 메서드를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스는 해당 값을 정렬 하거나 정렬할 수 형식에서 구현 됩니다. 구현 형식, 단일 메서드에서 정의 필요 <xref:System.IComparable.CompareTo%28System.Object%29>, 하 고 정렬 순서에서 현재 인스턴스의 위치 인지 나타내는 이전에 뒤 동일한 형식의 두 번째 개체와 동일 합니다. 인스턴스의 <xref:System.IComparable> 구현 메서드에서 호출 됩니다 자동으로 같은 <xref:System.Array.Sort%2A?displayProperty=nameWithType> 및 <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>합니다.  
  
 구현에서 <xref:System.IComparable.CompareTo%28System.Object%29> 메서드 반환 해야 합니다는 <xref:System.Int32> 된 세 값 중 하나는 다음 표에 나와 있는 것 처럼 합니다.  
  
|값|의미|  
|-----------|-------------|  
|0보다 작음|현재 인스턴스가 지정한 개체 앞에 <xref:System.IComparable.CompareTo%2A> 정렬 순서에서 메서드.|  
|0|이 현재 인스턴스에 지정한 개체와 정렬 순서에서 같은 위치에서 발생 된 <xref:System.IComparable.CompareTo%2A> 메서드.|  
|0보다 큼|이 현재 인스턴스에 의해 지정 된 개체 다음에 오는 <xref:System.IComparable.CompareTo%2A> 정렬 순서에서 메서드.|  
  
 모든 숫자 형식 (예: <xref:System.Int32> 및 <xref:System.Double>) 구현 <xref:System.IComparable>할 <xref:System.String>, <xref:System.Char>, 및 <xref:System.DateTime>합니다. 사용자 지정 형식을의 자체 구현을 제공 해야 <xref:System.IComparable> 개체 인스턴스 순서를 지정 하거나 정렬할 수를 사용할 수 있도록 합니다.  
  
   
  
## Examples  
 다음 예제에는의 구현 방법을 보여 줍니다. <xref:System.IComparable> 필수 <xref:System.IComparable.CompareTo%2A> 메서드.  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
        <summary>현재 인스턴스와 동일한 형식의 다른 개체를 비교하고 정렬 순서에서 현재 인스턴스의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</summary>
        <returns>비교되는 개체의 상대 순서를 나타내는 값입니다. 반환 값에는 다음과 같은 의미가 있습니다.  <list type="table"><listheader><term> 값  </term><description> 의미  </description></listheader><item><term> 0보다 작음  </term><description> 이 인스턴스는 정렬 순서에서 <paramref name="obj" /> 앞에 옵니다.  </description></item><item><term> 0  </term><description> 이 인스턴스가 정렬 순서에서 <paramref name="obj" />와 동일한 위치에서 발생합니다.  </description></item><item><term> 0보다 큼  </term><description> 이 인스턴스가 정렬 순서에서 <paramref name="obj" /> 뒤에 옵니다.  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IComparable.CompareTo%2A> 메서드 형식 값을 가진 정렬 하거나 정렬할 수에 의해 구현 됩니다. 와 같은 제네릭이 아닌 컬렉션에서 개체의 메서드에 의해 자동으로 호출 됩니다 <xref:System.Array.Sort%2A?displayProperty=nameWithType>, 배열의 각 멤버를 정렬 합니다. 사용자 지정 클래스 또는 구조체 구현 하지 않는 경우 <xref:System.IComparable>, 해당 멤버를 정렬할 수 없습니다 및 정렬 작업에서 throw 할 수는 <xref:System.InvalidOperationException>합니다.  
  
 이 메서드 정의만 고 효과가 사용 되는 특정 클래스 또는 값 형식으로 구현 되어야 합니다. 섹션 ("앞 에", "와 같은 위치에서 발생" 및 "뒤에 오는")은 특정 구현에 따라 반환 값에 지정 된 비교의 의미 합니다.  
  
 기본적으로 모든 개체 보다 큰 것으로 간주 (또는 뒤에 오는) `null`, 서로 다른 두 개의 null 참조 비교 합니다.  
  
 매개 변수를 `obj`, 클래스와 동일한 형식 이어야 합니다 또는 값 형식이이 인터페이스를 구현 하 고, 그러지는 <xref:System.ArgumentException> throw 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.IComparable.CompareTo%2A> 비교 하는 `Temperature` 구현 개체 <xref:System.IComparable> 다른 개체와 합니다. `Temperature` 개체 구현 <xref:System.IComparable.CompareTo%2A> 에 대 한 호출에 래핑하여는 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 메서드.  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" />가 이 인스턴스와 같은 형식이 아닌 경우</exception>
        <block subset="none" type="overrides">
          <para>A, B 및 C 개체에는 다음 사항을 충족 해야: <c>A.CompareTo(A)</c> 0을 반환 해야 합니다.  경우 <c>A.CompareTo(B)</c> 0을 반환, 다음 <c>B.CompareTo(A)</c> 0을 반환 해야 합니다.  경우 <c>A.CompareTo(B)</c> 0을 반환 하 고 <c>B.CompareTo(C)</c> 0을 반환, 다음 <c>A.CompareTo(C)</c> 0을 반환 해야 합니다.  경우 <c>A.CompareTo(B)</c> 다음 0이 아닌 값을 반환 <c>B.CompareTo(A)</c> 부호가 다른 값을 반환 해야 합니다.  경우 <c>A.CompareTo(B)</c> 값을 반환 <paramref name="x" /> 0, 같지 않음 및 <c>B.CompareTo(C)</c> 값을 반환 <paramref name="y" /> 같은 부호의 <paramref name="x" />, 다음 <c>1. CompareTo(C)</c> 같은 부호의 값을 반환 해야 <paramref name="x" /> 및 <paramref name="y" />합니다.</para>
        </block>
        <block subset="none" type="usage">
          <para>사용 된 <see cref="M:System.IComparable.CompareTo(System.Object)" /> 메서드는 클래스의 인스턴스 순서를 결정 합니다.</para>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>