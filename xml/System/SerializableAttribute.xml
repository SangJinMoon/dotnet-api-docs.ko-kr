<Type Name="SerializableAttribute" FullName="System.SerializableAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd48e14937faf34fa3c27578c0bcd1c50bf3ecc6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36428785" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SerializableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SerializableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.SerializableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SerializableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializableAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SerializableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Delegate, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ccfa2-101">클래스를 직렬화할 수 있다는 것을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccfa2-101">Indicates that a class can be serialized.</span>
      </span>
      <span data-ttu-id="ccfa2-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccfa2-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfa2-103">형식에 <xref:System.SerializableAttribute> 특성을 적용하여 이 형식의 인스턴스를 직렬화할 수 있음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-103">Apply the <xref:System.SerializableAttribute> attribute to a type to indicate that instances of this type can be serialized.</span></span> <span data-ttu-id="ccfa2-104">공용 언어 런타임에서 throw <xref:System.Runtime.Serialization.SerializationException> 모든 형식의 그래프에서 serialize 되는 개체에 없는 경우는 <xref:System.SerializableAttribute> 특성이 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-104">The common language runtime throws <xref:System.Runtime.Serialization.SerializationException> if any type in the graph of objects being serialized does not have the <xref:System.SerializableAttribute> attribute applied.</span></span>  
  
 <span data-ttu-id="ccfa2-105">적용 된 <xref:System.SerializableAttribute> 클래스도 구현 하는 경우에 특성는 <xref:System.Runtime.Serialization.ISerializable> serialization 프로세스를 제어 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-105">Apply the <xref:System.SerializableAttribute> attribute even if the class also implements the <xref:System.Runtime.Serialization.ISerializable> interface to control the serialization process.</span></span>  
  
 <span data-ttu-id="ccfa2-106">적용 하는 경우는 <xref:System.SerializableAttribute> 특성을 형식으로 모든 개인 및 공용 필드는 기본적으로 serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-106">When you apply the <xref:System.SerializableAttribute> attribute to a type, all private and public fields are serialized by default.</span></span> <span data-ttu-id="ccfa2-107">구현 하 여 serialization을 세부적으로 제어할 수 있습니다는 <xref:System.Runtime.Serialization.ISerializable> serialization 프로세스를 재정의 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-107">You can control serialization more granularly by implementing the <xref:System.Runtime.Serialization.ISerializable> interface to override the serialization process.</span></span>  
  
 <span data-ttu-id="ccfa2-108">필드의 serialization을 적용 하 여 제외할 수 있습니다 또는 <xref:System.NonSerializedAttribute> 특성을 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-108">Or you can exclude fields from serialization by applying the <xref:System.NonSerializedAttribute> attribute to the field.</span></span> <span data-ttu-id="ccfa2-109">직렬화 가능 형식의 필드에 대 한 포인터, 핸들을 다른 환경에서 의미 있게 재구성 될 수 없습니다와 특정 환경에 관련 된 다른 데이터 구조가 경우 적용 해야 할 수는 <xref:System.NonSerializedAttribute> 특성 해당 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-109">If a field of a serializable type contains a pointer, a handle, or some other data structure that is specific to a particular environment, and cannot be meaningfully reconstituted in a different environment, then you might want to apply the <xref:System.NonSerializedAttribute> attribute to that field.</span></span>  
  
 <span data-ttu-id="ccfa2-110">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-110">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span> <span data-ttu-id="ccfa2-111">serialization에 대한 자세한 내용은 <xref:System.Runtime.Serialization>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-111">For more information about serialization, see <xref:System.Runtime.Serialization>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccfa2-112">다음 예제에서는으로 표시 되는 개체의 직렬화는 <xref:System.SerializableAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-112">The following example demonstrates serialization of an object that is marked with the <xref:System.SerializableAttribute> attribute.</span></span> <span data-ttu-id="ccfa2-113">사용 하는 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 대신는 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>, 적절 한 줄 주석 처리를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="ccfa2-113">To use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> instead of the <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>, uncomment the appropriate lines.</span></span>  
  
 [!code-cpp[SerializationAttributes#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SerializationAttributes/CPP/s.cpp#1)]
 [!code-csharp[SerializationAttributes#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SerializationAttributes/CS/s.cs#1)]
 [!code-vb[SerializationAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SerializationAttributes/VB/s.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.NonSerializedAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerializableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.SerializableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerializableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccfa2-114">
            <see cref="T:System.SerializableAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfa2-114">Initializes a new instance of the <see cref="T:System.SerializableAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>