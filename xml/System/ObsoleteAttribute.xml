<Type Name="ObsoleteAttribute" FullName="System.ObsoleteAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e829312a2ceefed50ba28dad9523370b08913bb7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728327" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObsoleteAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ObsoleteAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ObsoleteAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObsoleteAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObsoleteAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>더 이상 사용하지 않는 프로그램 요소를 표시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ObsoleteAttribute> 어셈블리, 모듈, 매개 변수 및 반환 값을 제외한 모든 프로그램 요소에 적용 됩니다. 않음으로 요소 표시 요소가 됩니다 사용자가 이후 버전의 제품 제거를 알립니다.  
  
 <xref:System.ObsoleteAttribute> 클래스에 두 개의 속성이 포함 됩니다.  
  
-   <xref:System.ObsoleteAttribute.Message%2A>. 에 할당 된 문자열은 <xref:System.ObsoleteAttribute.Message%2A> 속성이 코드에서 특성 대상을 사용 하는 경우 컴파일러에서 내보내집니다. 문자열에는 특성 대상 사용 되지 않으며, 가능한 경우 몇 가지 해결 방법이 나 프로그래밍 방식 대신 제공 점에 유의 해야 합니다.  
  
-   <xref:System.ObsoleteAttribute.IsError%2A>. 이 사용 하 여 여부를 컴파일러에 나타내는 부울 값은는 <xref:System.ObsoleteAttribute> 특성에 오류를 발생 시키는 지 (<xref:System.ObsoleteAttribute.IsError%2A> 은 `true`) 또는 경고 (<xref:System.ObsoleteAttribute.IsError%2A> 은 `false`).  
  
 특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 응용 프로그램  
 Windows 메타 데이터 라이브러리 (.winmd 파일)을 만들 때의 <xref:System.ObsoleteAttribute> 둘 다로 내보내집니다는 <xref:System.ObsoleteAttribute> 특성 및 [Windows.Foundation.Metadata.DeprecatedAttribute](http://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.deprecatedattribute.aspx) 경우에 특성은 <xref:System.ObsoleteAttribute> 은 소스 코드에 존재 합니다. <xref:System.ObsoleteAttribute> 으로 변환 됩니다는 `DeprecatedAttribute` 다음과 같습니다.  
  
-   경우는 `message` 및 `error` 인수는 둘 다 있는 `message` 에 할당 되는 `DeprecatedAttribute` `message` 인수입니다. 오류 값 `true` 매핑됩니다 [DeprecationType.Remove](http://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.deprecationtype.aspx), 및 `error` 의 값 `false` 매핑됩니다 [DeprecationType.Deprecate](http://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.deprecationtype.aspx)합니다.  
  
-   경우는 `message` 에 인수가 제공 되지 않은 <xref:System.ObsoleteAttribute>에 값이 기본값으로 `DeprecatedAttribute` 은 "*element_name* 는 사용 되지 않습니다" 여기서 *element_name* 대상의 이름 특성이 적용 되는 프로그램 요소입니다.  
  
-   경우는 `error` 인수에 없으면는 <xref:System.ObsoleteAttribute>에 값이 기본값으로 `DeprecatedAttribute` 은 [DeprecationType.Deprecate](http://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.deprecationtype.aspx)합니다.  
  
> [!IMPORTANT]
>  직접 적용 된 [Windows.Foundation.Metadata.DeprecatedAttribute](http://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.deprecatedattribute.aspx) 관리 코드에 특성 것은 좋지이 내보내기는 자동으로 발생 하기 때문에 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 정의 속성과로 표시 된 메서드를 포함 하는 클래스는 <xref:System.ObsoleteAttribute> 특성입니다. 값에 액세스 하기는 `OldProperty` 경고, 있지만 호출 컴파일러에서는 발생 하는 코드에서 속성의 `CallOldMethod` 메서드 컴파일러 오류를 생성 합니다. 또한 소스 코드를 컴파일하려고 할 때 발생 하는 출력을 보여 줍니다.  
  
 [!code-csharp[ObsoleteAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObsoleteAttribute/CS/obsoleteattributeex1.cs#1)]
 [!code-vb[ObsoleteAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObsoleteAttribute/vb/obsoleteattributeex1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ObsoleteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObsoleteAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ObsoleteAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObsoleteAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>기본 속성을 사용하여 <see cref="T:System.ObsoleteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.ObsoleteAttribute> 인스턴스의 초기 속성 값을 보여 줍니다.  
  
|속성|값|  
|--------------|-----------|  
|<xref:System.ObsoleteAttribute.IsError%2A>|`false`|  
|<xref:System.ObsoleteAttribute.Message%2A>|`null`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObsoleteAttribute (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ObsoleteAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObsoleteAttribute(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">대체 해결 방법을 설명하는 텍스트 문자열입니다.</param>
        <summary>지정된 해결 메시지를 사용하여 <see cref="T:System.ObsoleteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.ObsoleteAttribute> 인스턴스의 초기 속성 값을 보여 줍니다.  
  
|속성|값|  
|--------------|-----------|  
|<xref:System.ObsoleteAttribute.IsError%2A>|`false`.|  
|<xref:System.ObsoleteAttribute.Message%2A>|해결 방법 메시지입니다.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObsoleteAttribute (string message, bool error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, bool error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ObsoleteAttribute.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, error As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObsoleteAttribute(System::String ^ message, bool error);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="error" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="message">대체 해결 방법을 설명하는 텍스트 문자열입니다.</param>
        <param name="error">
          사용되지 않는 요소 사용에서 컴파일러 오류가 발생하는 경우 <see langword="true" />이고, 컴파일러 경고가 발생하는 경우 <see langword="false" />입니다.</param>
        <summary>해결 메시지와, 오래된 요소를 사용하는 것이 오류로 간주되는지 여부를 나타내는 부울 값을 사용하여 <see cref="T:System.ObsoleteAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.ObsoleteAttribute> 인스턴스의 초기 속성 값을 보여 줍니다.  
  
|속성|값|  
|--------------|-----------|  
|<xref:System.ObsoleteAttribute.IsError%2A>|`error` 값입니다.|  
|<xref:System.ObsoleteAttribute.Message%2A>|`message` 값입니다.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public bool IsError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsError" />
      <MemberSignature Language="DocId" Value="P:System.ObsoleteAttribute.IsError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsError { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컴파일러에서 오래된 프로그램 요소를 사용하는 것을 오류로 처리하는지 여부를 나타내는 부울 값을 가져옵니다.</summary>
        <value>
          오래된 요소를 사용하는 것이 오류로 간주되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 되지 않는 것으로 표시 하는 두 명의 멤버를 포함 하는 클래스를 정의 합니다. 첫 번째, 라는 속성이 `OldProperty`를 호출 하는 경우 컴파일러 경고를 생성 합니다. 두 번째, 라는 메서드가 `CallOldMethod`, 컴파일러 오류를 생성 합니다. 이 예제에서는 리플렉션을 사용 하 여에 대 한 정보를 가져올는 <xref:System.ObsoleteAttribute> 특성 형식의 멤버에 적용 하 고 값을 표시 자신의 <xref:System.ObsoleteAttribute.Message%2A> 및 <xref:System.ObsoleteAttribute.IsError%2A> 속성입니다.  
  
 [!code-csharp[System.ObsoleteAttribute.Message#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.obsoleteattribute.message/cs/obsoleteattribute_message.cs#1)]
 [!code-vb[System.ObsoleteAttribute.Message#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.obsoleteattribute.message/vb/obsoleteattribute_message.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.ObsoleteAttribute.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대체 프로그램 요소에 대한 설명이 있는 해결 메시지를 가져옵니다.</summary>
        <value>해결 방법 텍스트 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 되지 않는 것으로 표시 하는 두 명의 멤버를 포함 하는 클래스를 정의 합니다. 첫 번째, 라는 속성이 `OldProperty`를 호출 하는 경우 컴파일러 경고를 생성 합니다. 두 번째, 라는 메서드가 `CallOldMethod`, 컴파일러 오류를 생성 합니다. 이 예제에서는 리플렉션을 사용 하 여에 대 한 정보를 가져올는 <xref:System.ObsoleteAttribute> 특성 형식의 멤버에 적용 하 고 값을 표시 자신의 <xref:System.ObsoleteAttribute.Message%2A> 및 <xref:System.ObsoleteAttribute.IsError%2A> 속성입니다.  
  
 [!code-csharp[System.ObsoleteAttribute.Message#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.obsoleteattribute.message/cs/obsoleteattribute_message.cs#1)]
 [!code-vb[System.ObsoleteAttribute.Message#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.obsoleteattribute.message/vb/obsoleteattribute_message.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>