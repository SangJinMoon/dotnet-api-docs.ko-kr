<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IFormattable.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f1ee32cae285a624ff6ceecaa94663848cf18034.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1ee32cae285a624ff6ceecaa94663848cf18034</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IFormattable">
          <source>Provides functionality to format the value of an object into a string representation.</source>
          <target state="translated">개체의 값을 문자열 표현으로 서식 지정하는 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface converts an object to its string representation based on a format string and a format provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> 인터페이스 개체는 형식 문자열과 형식 공급자에 따라 해당 문자열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>A format string typically defines the general appearance of an object.</source>
          <target state="translated">형식 문자열에는 일반적으로 개체의 일반 모양을 정의합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>For example, the .NET Framework supports the following:</source>
          <target state="translated">예를 들어 다음.NET Framework를 지원합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Standard format strings for formatting enumeration values (see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>).</source>
          <target state="translated">열거형 값의 서식을 지정 하기 위한 표준 형식 문자열 (참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Standard and custom format strings for formatting numeric values (see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>).</source>
          <target state="translated">숫자 값의 서식을 지정 하기 위한 표준 및 사용자 지정 형식 문자열 (참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Standard and custom format strings for formatting date and time values (see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>).</source>
          <target state="translated">날짜 및 시간 값의 서식을 지정 하기 위한 표준 및 사용자 지정 형식 문자열 (참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Standard and custom format strings for formatting time intervals (see <bpt id="p1">[</bpt>Standard TimeSpan Format Strings<ept id="p1">](~/docs/standard/base-types/standard-timespan-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom TimeSpan Format Strings<ept id="p2">](~/docs/standard/base-types/custom-timespan-format-strings.md)</ept>).</source>
          <target state="translated">시간 간격의 서식을 지정 하기 위한 표준 및 사용자 지정 형식 문자열 (참조 <bpt id="p1">[</bpt>표준 TimeSpan 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-timespan-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 TimeSpan 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-timespan-format-strings.md)</ept>).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>You can also define your own format strings to support formatting of your application-defined types.</source>
          <target state="translated">또한 응용 프로그램 정의 형식의 형식을 지원 하기 위해 사용자 고유의 형식 문자열을 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation.</source>
          <target state="translated">형식 공급자는 일반적으로 개체를 문자열 표현으로 변환에 사용 되는 기호를 정의 하는 형식 지정 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string.</source>
          <target state="translated">예를 들어 통화 값에 숫자를 변환할 때 형식 공급자는 결과 문자열에 표시 되는 통화 기호를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The .NET Framework defines three format providers:</source>
          <target state="translated">.NET Framework는 세 가지 형식 공급자를 정의합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph> class, which returns either a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for formatting numeric values, or a <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object for formatting date and time values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph> 클래스 중 하나를 반환 하는 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 숫자 값의 서식 지정에 대 한 개체 또는 <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 날짜 및 시간 값의 서식을 지정 하기 위한 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType&gt;</ph> class, which returns an instance of itself for formatting numeric values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType&gt;</ph> 숫자 값의 서식을 지정 하기 위한 자체의 인스턴스를 반환 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType&gt;</ph> class, which returns an instance of itself for formatting date and time values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType&gt;</ph> 날짜 및 시간 값의 서식을 지정 하기 위한 자체의 인스턴스를 반환 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting.</source>
          <target state="translated">또한 문화권별 직업 관련 제공 하려면 사용자 고유의 사용자 지정 형식 공급자를 정의할 수 있습니다 또는 서식 지정에 사용 되는 업계 관련 정보입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>For more information about implementing custom formatting by using a custom format provider, see <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>.</source>
          <target state="translated">사용자 지정 형식 공급자를 사용 하 여 사용자 지정 서식을 구현 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface defines a single method, <ph id="ph2">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>, that supplies formatting services for the implementing type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> 인터페이스 정의 단일 메서드에서 <ph id="ph2">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>를 구현 하는 형식에 대 한 형식 지정 서비스를 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method can be called directly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> 메서드를 직접 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>In addition, it is called automatically by the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> methods, and by methods that use the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> in the .NET Framework.</source>
          <target state="translated">또한 라고에서 자동으로 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드 및 사용 하는 메서드에 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> .NET Framework의 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Such methods include <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>, among others.</source>
          <target state="translated">이러한 메서드에 <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>, 등입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method is called for each format item in the method's format string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> 메서드는 형식 문자열의 각 서식 항목에 대해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface is implemented by the base data types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> 인터페이스는 기본 데이터 형식에서 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> class that implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Temperature`</ph> 인터페이스를 구현하는 <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The class supports four format specifiers: "G" and "C", which indicate that the temperature is to be displayed in Celsius; "F", which indicates that the temperature is to be displayed in Fahrenheit; and "K", which indicates that the temperature is to be displayed in Kelvin.</source>
          <target state="translated">이 클래스는 네 가지 형식 지정자를 지원: 온도를 섭씨로; 표시 임을 나타내는 "G" 및 "C", 온도가 화씨;에 표시 된다는 의미는 "F" 및 "K" 온도를 켈빈 표시 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>In addition, the <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation also can handle a format string that is <ph id="ph2">`null`</ph> or empty.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> 구현도 처리할 수 있는 형식 문자열 <ph id="ph2">`null`</ph> 이거나 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The other two <ph id="ph1">`ToString`</ph> methods defined by the <ph id="ph2">`Temperature`</ph> class simply wrap a call to the <ph id="ph3">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">다른 두 <ph id="ph1">`ToString`</ph> 의해 정의 된 메서드는 <ph id="ph2">`Temperature`</ph> 클래스에는 단순히 호출을 래핑하는 <ph id="ph3">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>The following example then calls the <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation either directly or by using a composite format string.</source>
          <target state="translated">다음 예제에서는 다음 호출에서 <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> 구현 직접적으로 또는 복합 형식 문자열을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Classes that require more control over the formatting of strings than <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> provides should implement <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph>.</source>
          <target state="translated">이상으로 문자열의 서식을 더 많이 제어할 필요가 있는 클래스 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 제공을 구현 해야 <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>A class that implements <ph id="ph1">&lt;see cref="T:System.IFormattable" /&gt;</ph> must support the "G" (general) format specifier.</source>
          <target state="translated">구현 하는 클래스 <ph id="ph1">&lt;see cref="T:System.IFormattable" /&gt;</ph> "G" (일반) 형식 지정자를 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>Besides the "G" specifier, the class can define the list of format specifiers that it supports.</source>
          <target state="translated">"G" 지정자 외 클래스에는 지원 되는 형식 지정자의 목록을 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>In addition, the class must be prepared to handle a format specifier that is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">클래스 형식 지정자에 처리 하도록 준비 해야 또한 <ph id="ph1">&lt;see langword="null" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IFormattable">
          <source>For more information about formatting and formatting codes, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept></source>
          <target state="translated">서식 지정 및 형식 지정 코드에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The format to use.</source>
          <target state="translated">사용할 형식입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to use the default format defined for the type of the <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> 구현의 형식에 정의된 기본 형식을 사용하기 위한 null 참조(Visual Basic의 경우 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The provider to use to format the value.</source>
          <target state="translated">값의 형식을 지정하는 데 사용할 공급자입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</source>
          <target state="translated">운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오기 위한 null 참조(Visual Basic의 경우 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>Formats the value of the current instance using the specified format.</source>
          <target state="translated">지정된 형식을 사용하여 현재 인스턴스 값의 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The value of the current instance in the specified format.</source>
          <target state="translated">지정된 형식의 현재 인스턴스 값입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method converts a value to a string representation that can be expressed in multiple ways.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> 메서드 값을 여러 가지 방법으로 표현할 수 있는 문자열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries.</source>
          <target state="translated">정확한 형식은 특정 기호 또는 특정 문화권, 직업 또는 산업에 정의 된 순서에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>You can call the method directly.</source>
          <target state="translated">메서드를 직접 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>It is also called automatically by the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <ph id="ph3">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, and <ph id="ph5">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">자동으로 호출 또한는 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드 및 복합 형식 지정을 사용 하는 메서드에서 기능.NET Framework에서와 같은 <ph id="ph3">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>(For more information, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.)</source>
          <target state="translated">(자세한 내용은 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>Composite formatting methods call the <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method once for each format item in a format string.</source>
          <target state="translated">합성 메서드 호출의 서식 지정은 <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> 형식 문자열의 각 형식 항목에 대해 한 번씩 메서드.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:</source>
          <target state="translated">메서드에 전달 된 매개 변수에 따라 달라 집니다 특정 형식 지정 메서드가 호출 되는 서식 항목의 내용에 다음과 같이:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>If the format item does not include a format string (for example, if the format item is simply <ph id="ph1">`{0}`</ph>), it is passed <ph id="ph2">`null`</ph> as the value of the <ph id="ph3">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> parameter.</source>
          <target state="translated">형식 항목이 형식 문자열을 포함 하지 않을 경우 (서식 항목은 단순히 하는 경우에 예를 들어 <ph id="ph1">`{0}`</ph>), 전달 된 <ph id="ph2">`null`</ph> 의 값으로는 <ph id="ph3">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>If the format item includes a format string (for example, <ph id="ph1">`{0:G}`</ph>), that format string is passed as the value of the <ph id="ph2">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> parameter.</source>
          <target state="translated">형식 항목에 형식 문자열을 포함 하는 경우 (예를 들어 <ph id="ph1">`{0:G}`</ph>), 형식 문자열의 값으로 전달 되는 <ph id="ph2">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>If the original method call does not include an <ph id="ph1">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> parameter, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> is passed as the value of the <ph id="ph3">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> parameter.</source>
          <target state="translated">원래 메서드 호출에 포함 되어 있지 않으면는 <ph id="ph1">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> 매개 변수를 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> 의 값으로 전달 되는 <ph id="ph3">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>If the original method call includes an <ph id="ph1">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> parameter, the provider that is supplied in the method call is passed as the value of the <ph id="ph2">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> parameter.</source>
          <target state="translated">원래 메서드 호출을 포함 하는 경우는 <ph id="ph1">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> 매개 변수를 메서드 호출에서 제공 되는 공급자의 값으로 전달 되는 <ph id="ph2">&lt;xref:System.IFormatProvider?displayProperty=nameWithType&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>An object's <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> implementation is called by composite formatting methods only if they are not passed an <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> format provider, or if the <ph id="ph3">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> method of the custom format provider returns <ph id="ph4">`null`</ph>.</source>
          <target state="translated">개체의 <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> 전달 되지 않은 경우에 복합 서식 지정 메서드에 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> 형식 공급자 또는 경우에는 <ph id="ph3">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> 사용자 지정 형식 공급자의 반환 <ph id="ph4">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework includes three format providers, all of which implement the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface:</source>
          <target state="translated">모두 구현 하는 세 가지 형식 공급자를 포함 하는.NET Framework는 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 인터페이스:</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 숫자 형식 지정 정보를 그룹 구분 기호 및 소수에 사용할 문자 등 맞춤법 및 통화 값의 통화 기호 위치를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 월, 일, 연도 패턴의 위치와 같은 날짜 및 시간 관련 형식 지정 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 기본 숫자 형식 정보를 포함 하 여 특정 문화권의 정보와 날짜 및 시간 관련 형식 지정 정보를 서식 지정을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>In addition, you can define your own custom format provider.</source>
          <target state="translated">또한 사용자 고유의 사용자 지정 형식 공급자를 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The following example demonstrates a <ph id="ph1">`Temperature`</ph> class that implements the <ph id="ph2">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">`Temperature`</ph> 구현 하는 클래스는 <ph id="ph2">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /&gt;</ph> method must support the "G" (general) format specifier.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /&gt;</ph> 메서드 "G" (일반) 형식 지정자를 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>Besides the "G" specifier, the class can define the list of format specifiers that it supports.</source>
          <target state="translated">"G" 지정자 외 클래스에는 지원 되는 형식 지정자의 목록을 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>In addition, the class must be prepared to handle a format specifier that is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">클래스 형식 지정자에 처리 하도록 준비 해야 또한 <ph id="ph1">&lt;see langword="null" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting and formatting codes, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 및 형식 지정 코드에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>