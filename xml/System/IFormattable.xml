<Type Name="IFormattable" FullName="System.IFormattable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cda42210ed442bf30f4dea80139a23c9ca54a766" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39943685" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.IFormattable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormattable" />
  <TypeSignature Language="F#" Value="type IFormattable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3af88-101">개체의 값을 문자열 표현으로 서식 지정하는 기능을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3af88-101">Provides functionality to format the value of an object into a string representation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3af88-102"><xref:System.IFormattable> 인터페이스 개체는 형식 문자열과 형식 공급자에 따라 해당 문자열 표현으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-102">The <xref:System.IFormattable> interface converts an object to its string representation based on a format string and a format provider.</span></span>  
  
 <span data-ttu-id="3af88-103">형식 문자열에는 일반적으로 개체의 전반적인 모양은 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-103">A format string typically defines the general appearance of an object.</span></span> <span data-ttu-id="3af88-104">예를 들어 다음.NET Framework를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-104">For example, the .NET Framework supports the following:</span></span>  
  
-   <span data-ttu-id="3af88-105">열거형 값의 서식을 지정 하는 것에 대 한 표준 형식 문자열 (참조 [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)).</span><span class="sxs-lookup"><span data-stu-id="3af88-105">Standard format strings for formatting enumeration values (see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md)).</span></span>  
  
-   <span data-ttu-id="3af88-106">숫자 값의 서식을 지정 하는 것에 대 한 표준 및 사용자 지정 형식 문자열 (참조 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)).</span><span class="sxs-lookup"><span data-stu-id="3af88-106">Standard and custom format strings for formatting numeric values (see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)).</span></span>  
  
-   <span data-ttu-id="3af88-107">날짜 및 시간 값의 서식을 지정 하는 것에 대 한 표준 및 사용자 지정 형식 문자열 (참조 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span><span class="sxs-lookup"><span data-stu-id="3af88-107">Standard and custom format strings for formatting date and time values (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span></span>  
  
-   <span data-ttu-id="3af88-108">시간 간격 형식 지정에 대 한 표준 및 사용자 지정 형식 문자열 (참조 [표준 TimeSpan 서식 문자열](~/docs/standard/base-types/standard-timespan-format-strings.md) 하 고 [사용자 지정 TimeSpan 형식 문자열](~/docs/standard/base-types/custom-timespan-format-strings.md)).</span><span class="sxs-lookup"><span data-stu-id="3af88-108">Standard and custom format strings for formatting time intervals (see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md)).</span></span>  
  
 <span data-ttu-id="3af88-109">또한 응용 프로그램 정의 형식의 서식 지정을 지원 하기 위해 사용자 고유의 형식 문자열을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-109">You can also define your own format strings to support formatting of your application-defined types.</span></span>  
  
 <span data-ttu-id="3af88-110">형식 공급자는 일반적으로 개체를 문자열 표현으로 변환할 때 사용 되는 기호를 정의 하는 서식 지정 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-110">A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation.</span></span> <span data-ttu-id="3af88-111">예를 들어 통화 값을 숫자로 변환할 때 형식 공급자는 결과 문자열에 표시 되는 통화 기호를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-111">For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string.</span></span> <span data-ttu-id="3af88-112">.NET Framework는 세 가지 형식 공급자를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-112">The .NET Framework defines three format providers:</span></span>  
  
-   <span data-ttu-id="3af88-113">합니다 <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> 중 하나를 반환 하는 클래스를 <xref:System.Globalization.NumberFormatInfo> 숫자 값의 서식을 지정 하는 것에 대 한 개체 또는 <xref:System.Globalization.DateTimeFormatInfo> 날짜 및 시간 값의 서식을 지정 하는 것에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-113">The <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> class, which returns either a <xref:System.Globalization.NumberFormatInfo> object for formatting numeric values, or a <xref:System.Globalization.DateTimeFormatInfo> object for formatting date and time values.</span></span>  
  
-   <span data-ttu-id="3af88-114"><xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> 숫자 값의 서식을 지정 하는 것에 대 한 자체의 인스턴스를 반환 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-114">The <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> class, which returns an instance of itself for formatting numeric values.</span></span>  
  
-   <span data-ttu-id="3af88-115"><xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType> 날짜 및 시간 값의 서식을 지정 하는 것에 대 한 자체의 인스턴스를 반환 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-115">The <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType> class, which returns an instance of itself for formatting date and time values.</span></span>  
  
 <span data-ttu-id="3af88-116">또한 문화권별, 직업 별로 제공할 사용자 고유의 사용자 지정 형식 공급자를 정의할 수 있습니다 또는 산업별 정보 서식 지정에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-116">In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting.</span></span> <span data-ttu-id="3af88-117">사용자 지정 형식 공급자를 사용 하 여 사용자 지정 서식을 구현 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.ICustomFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-117">For more information about implementing custom formatting by using a custom format provider, see <xref:System.ICustomFormatter>.</span></span>  
  
 <span data-ttu-id="3af88-118">합니다 <xref:System.IFormattable> 는 단일 메서드를 정의 하는 인터페이스 <xref:System.IFormattable.ToString%2A>를 구현 하는 형식에 대 한 서식 지정 서비스를 제공 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-118">The <xref:System.IFormattable> interface defines a single method, <xref:System.IFormattable.ToString%2A>, that supplies formatting services for the implementing type.</span></span> <span data-ttu-id="3af88-119"><xref:System.IFormattable.ToString%2A> 메서드를 직접 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-119">The <xref:System.IFormattable.ToString%2A> method can be called directly.</span></span> <span data-ttu-id="3af88-120">또한 라고 자동으로 <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> 및 <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드 및 사용 하는 방법으로는 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) .NET Framework에서.</span><span class="sxs-lookup"><span data-stu-id="3af88-120">In addition, it is called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods, and by methods that use the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) in the .NET Framework.</span></span> <span data-ttu-id="3af88-121">이러한 메서드를 포함 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, <xref:System.String.Format%2A?displayProperty=nameWithType>, 및 <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, 특히 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-121">Such methods include <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, <xref:System.String.Format%2A?displayProperty=nameWithType>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, among others.</span></span> <span data-ttu-id="3af88-122"><xref:System.IFormattable.ToString%2A> 메서드의 형식 문자열의 각 서식 항목에 대 한 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-122">The <xref:System.IFormattable.ToString%2A> method is called for each format item in the method's format string.</span></span>  
  
 <span data-ttu-id="3af88-123"><xref:System.IFormattable> 인터페이스는 기본 데이터 형식으로 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-123">The <xref:System.IFormattable> interface is implemented by the base data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3af88-124">다음 예제에서는 `Temperature` 인터페이스를 구현하는 <xref:System.IFormattable> 클래스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-124">The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="3af88-125">이 클래스는 4 명의 형식 지정 자가 지원: 온도 섭씨;에 표시 되는 여부를 나타내는 "G" 및 "C" "F" 온도를 화씨로; 표시할 임을 나타냅니다 및 "K" 온도를 켈빈 표시할 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-125">The class supports four format specifiers: "G" and "C", which indicate that the temperature is to be displayed in Celsius; "F", which indicates that the temperature is to be displayed in Fahrenheit; and "K", which indicates that the temperature is to be displayed in Kelvin.</span></span> <span data-ttu-id="3af88-126">또한 합니다 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 구현도 처리할 수는 서식 문자열입니다 `null` 이거나 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-126">In addition, the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation also can handle a format string that is `null` or empty.</span></span> <span data-ttu-id="3af88-127">다른 두 `ToString` 정의한 메서드를 `Temperature` 클래스는 호출을 래핑하는 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-127">The other two `ToString` methods defined by the `Temperature` class simply wrap a call to the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 <span data-ttu-id="3af88-128">다음 예제에서는 호출을 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 구현을 직접 또는 합성 서식 문자열을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-128">The following example then calls the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation either directly or by using a composite format string.</span></span>  
  
 [!code-csharp[System.IFormattable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]
 [!code-vb[System.IFormattable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="3af88-129">
        <para>보다는 문자열의 서식을 제어할 필요가 있는 클래스 <see cref="M:System.Object.ToString" /> 제공 구현 해야 <see cref="T:System.IFormattable" />합니다.  구현 하는 클래스 <see cref="T:System.IFormattable" /> "G" (일반) 서식 지정자를 지원 해야 합니다. "G" 지정자 외 클래스 목록은 지원 되는 형식 지정자를 정의할 수 있습니다. 클래스는 형식 지정자를 처리 하도록 준비 해야 합니다 또한 <see langword="null" />합니다. 서식 지정 및 코드 서식 지정에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="3af88-129">
          <para>Classes that require more control over the formatting of strings than <see cref="M:System.Object.ToString" /> provides should implement <see cref="T:System.IFormattable" />.  A class that implements <see cref="T:System.IFormattable" /> must support the "G" (general) format specifier. Besides the "G" specifier, the class can define the list of format specifiers that it supports. In addition, the class must be prepared to handle a format specifier that is <see langword="null" />. For more information about formatting and formatting codes, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.IFormatProvider" />
    <altmember cref="M:System.Object.ToString" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="abstract member ToString : string * IFormatProvider -&gt; string" Usage="iFormattable.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="3af88-130">사용할 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3af88-130">The format to use.</span>
          </span>
          <span data-ttu-id="3af88-131">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3af88-131">-or-</span>
          </span>
          <span data-ttu-id="3af88-132">
            <see cref="T:System.IFormattable" /> 구현의 형식에 정의된 기본 형식을 사용하기 위한 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3af88-132">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="3af88-133">값의 형식을 지정하는 데 사용할 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3af88-133">The provider to use to format the value.</span>
          </span>
          <span data-ttu-id="3af88-134">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3af88-134">-or-</span>
          </span>
          <span data-ttu-id="3af88-135">운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오기 위한 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3af88-135">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3af88-136">지정된 형식을 사용하여 현재 인스턴스 값의 형식을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3af88-136">Formats the value of the current instance using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3af88-137">지정된 형식의 현재 인스턴스 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3af88-137">The value of the current instance in the specified format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3af88-138"><xref:System.IFormattable.ToString%2A> 메서드 값을 여러 가지 방법으로 표현할 수 있는 문자열 표현으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-138">The <xref:System.IFormattable.ToString%2A> method converts a value to a string representation that can be expressed in multiple ways.</span></span> <span data-ttu-id="3af88-139">정확한 형식은 특정 기호 또는 특정 문화권, 직업 또는 산업에서 정의한 지정된 된 순서에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-139">Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries.</span></span> <span data-ttu-id="3af88-140">직접 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-140">You can call the method directly.</span></span> <span data-ttu-id="3af88-141">자동으로 라고도 합니다 <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> 및 <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드 및 복합 형식 지정을 사용 하는 방법으로 기능.NET framework에서 같은 <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, 및 <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3af88-141">It is also called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3af88-142">(자세한 내용은 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md).)</span><span class="sxs-lookup"><span data-stu-id="3af88-142">(For more information, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).)</span></span>  
  
 <span data-ttu-id="3af88-143">형식 메서드를 호출 하는 복합을 <xref:System.IFormattable.ToString%2A> 형식 문자열의 각 서식 항목에 한 번씩 메서드.</span><span class="sxs-lookup"><span data-stu-id="3af88-143">Composite formatting methods call the <xref:System.IFormattable.ToString%2A> method once for each format item in a format string.</span></span> <span data-ttu-id="3af88-144">메서드에 전달 된 매개 변수를 다음과 같이 형식 항목의 콘텐츠 및 호출 되는 특정 형식 지정 방법을 따라:</span><span class="sxs-lookup"><span data-stu-id="3af88-144">The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:</span></span>  
  
-   <span data-ttu-id="3af88-145">형식 항목 형식 문자열을 포함 하지 않습니다 (서식 항목은 경우에 예를 들어 `{0}`)에 전달 됩니다 `null` 값으로는 <xref:System.String?displayProperty=nameWithType> 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="3af88-145">If the format item does not include a format string (for example, if the format item is simply `{0}`), it is passed `null` as the value of the <xref:System.String?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="3af88-146">형식 항목에는 서식 문자열을 포함 하는 경우 (예를 들어 `{0:G}`), 형식 문자열의 값으로 전달 되도록는 <xref:System.String?displayProperty=nameWithType> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-146">If the format item includes a format string (for example, `{0:G}`), that format string is passed as the value of the <xref:System.String?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="3af88-147">원래 메서드 호출을 포함 하지 않는 경우는 <xref:System.IFormatProvider?displayProperty=nameWithType> 매개 변수를 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> 값으로 전달 되는 <xref:System.IFormatProvider?displayProperty=nameWithType> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-147">If the original method call does not include an <xref:System.IFormatProvider?displayProperty=nameWithType> parameter, <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> is passed as the value of the <xref:System.IFormatProvider?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="3af88-148">원래 메서드 호출에 포함 된 경우는 <xref:System.IFormatProvider?displayProperty=nameWithType> 매개 변수를 메서드 호출에서 제공 되는 공급자의 값으로 전달 되는 <xref:System.IFormatProvider?displayProperty=nameWithType> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-148">If the original method call includes an <xref:System.IFormatProvider?displayProperty=nameWithType> parameter, the provider that is supplied in the method call is passed as the value of the <xref:System.IFormatProvider?displayProperty=nameWithType> parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3af88-149">개체의 <xref:System.IFormattable.ToString%2A> 전달 되지 않은 경우에 복합 형식 지정 메서드 구현을 호출는 <xref:System.ICustomFormatter> 형식 공급자 또는 경우에는 <xref:System.ICustomFormatter.Format%2A> 사용자 지정 형식 공급자의 메서드에 반환 `null`.</span><span class="sxs-lookup"><span data-stu-id="3af88-149">An object's <xref:System.IFormattable.ToString%2A> implementation is called by composite formatting methods only if they are not passed an <xref:System.ICustomFormatter> format provider, or if the <xref:System.ICustomFormatter.Format%2A> method of the custom format provider returns `null`.</span></span>  
  
 <span data-ttu-id="3af88-150">.NET Framework에 모두를 구현 하는 세 가지 형식 공급자는 <xref:System.IFormatProvider> 인터페이스:</span><span class="sxs-lookup"><span data-stu-id="3af88-150">The .NET Framework includes three format providers, all of which implement the <xref:System.IFormatProvider> interface:</span></span>  
  
-   <span data-ttu-id="3af88-151"><xref:System.Globalization.NumberFormatInfo> 숫자 그룹 구분 기호 및 소수에 사용할 문자 등의 정보를 서식 지정 맞춤법 및 통화 값의 통화 기호 배치를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-151"><xref:System.Globalization.NumberFormatInfo> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.</span></span>  
  
-   <span data-ttu-id="3af88-152"><xref:System.Globalization.DateTimeFormatInfo> 월, 일 및 연도 날짜 패턴의 위치와 같은 관련 된 날짜 및 시간 관련 형식 지정 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-152"><xref:System.Globalization.DateTimeFormatInfo> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.</span></span>  
  
-   <span data-ttu-id="3af88-153"><xref:System.Globalization.CultureInfo> 기본 숫자 형식 정보를 포함 하 여 특정 문화권의 정보와 관련 된 날짜 및 시간 관련 서식 지정 정보를 서식 지정을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-153"><xref:System.Globalization.CultureInfo> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.</span></span>  
  
 <span data-ttu-id="3af88-154">또한 사용자 고유의 사용자 지정 형식 공급자를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-154">In addition, you can define your own custom format provider.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3af88-155">다음 예제는 `Temperature` 클래스를 구현 하는 <xref:System.IFormattable.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3af88-155">The following example demonstrates a `Temperature` class that implements the <xref:System.IFormattable.ToString%2A> method.</span></span> <span data-ttu-id="3af88-156">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IFormattable> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3af88-156">This code example is part of a larger example provided for the <xref:System.IFormattable> class.</span></span>  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3af88-157">
            <para>
              <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> 메서드는 "G" (일반) 형식 지정자를 지원 해야 합니다. "G" 지정자 외 클래스 목록은 지원 되는 형식 지정자를 정의할 수 있습니다. 클래스는 형식 지정자를 처리 하도록 준비 해야 합니다 또한 <see langword="null" />합니다. 서식 지정 및 코드 서식 지정에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3af88-157">
              <para>The <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> method must support the "G" (general) format specifier. Besides the "G" specifier, the class can define the list of format specifiers that it supports. In addition, the class must be prepared to handle a format specifier that is <see langword="null" />. For more information about formatting and formatting codes, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.String" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>