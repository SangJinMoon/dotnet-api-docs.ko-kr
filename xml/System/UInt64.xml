<Type Name="UInt64" FullName="System.UInt64">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d6d46f3b07bf3fdd4c0e46dd5437c4441c091e3f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36428523" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct UInt64 : IComparable, IComparable&lt;ulong&gt;, IConvertible, IEquatable&lt;ulong&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt64" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt64&#xA;Implements IComparable, IComparable(Of ULong), IConvertible, IEquatable(Of ULong), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt64 : IComparable, IComparable&lt;System::UInt64&gt;, IConvertible, IEquatable&lt;System::UInt64&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type uint64 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9a0a3-101">Represents a 64-bit unsigned integer.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a0a3-101">Represents a 64-bit unsigned integer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-102"><xref:System.UInt64> 값 형식은 0에서 18446744073709551615 까지의 값을 가진 부호 없는 정수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-102">The <xref:System.UInt64> value type represents unsigned integers with values ranging from 0 to 18,446,744,073,709,551,615.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9a0a3-103"><xref:System.UInt64> 형식이 CLS 규격이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-103">The <xref:System.UInt64> type is not CLS-compliant.</span></span> <span data-ttu-id="9a0a3-104">CLS 규격 대체 형식이 <xref:System.Decimal>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-104">The CLS-compliant alternative type is <xref:System.Decimal>.</span></span> <span data-ttu-id="9a0a3-105"><xref:System.Int64> 바꿀 대신 사용할 수 있습니다는 <xref:System.UInt64> 인 0 ~ 까지의 값을 <xref:System.Int64.MaxValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-105"><xref:System.Int64> can be used instead to replace a <xref:System.UInt64> value that ranges from zero to <xref:System.Int64.MaxValue>.</span></span> <span data-ttu-id="9a0a3-106">CLS 규격에 대 한 자세한 내용은 참조 [언어 독립성 및 언어 독립적 구성 요소](~/docs/standard/language-independence-and-language-independent-components.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="9a0a3-107"><xref:System.UInt64> 이 형식의 인스턴스를 비교 하 고, 인스턴스 값을 문자열 표현으로 변환 및 숫자의 문자열 표현을이 형식의 인스턴스로 변환 하는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-107"><xref:System.UInt64> provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="9a0a3-108">이 유형의 모든 멤버는 스레드로부터 안전 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a0a3-108">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="9a0a3-109">멤버 인스턴스 상태를 수정 하려면 표시 되는 실제로 새 값으로 초기화 하는 새 인스턴스를 반환 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a0a3-109">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="9a0a3-110">으로 다른 종류와이 형식의 인스턴스를 포함 하는 공유 변수를 읽고 쓰는 보호 해야 스레드로부터 안전을 보장 하려면 잠금에 의해.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a0a3-110">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Int64" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9a0a3-111">Compares this instance to a specified object or <see cref="T:System.UInt64" /> and returns an indication of their relative values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-111">Compares this instance to a specified object or <see cref="T:System.UInt64" /> and returns an indication of their relative values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="uint64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9a0a3-112">An object to compare, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-112">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-113">Compares this instance to a specified object and returns an indication of their relative values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-113">Compares this instance to a specified object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-114">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-114">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="9a0a3-115">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance is less than <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance is equal to <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance is greater than <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-115">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-116">모든 인스턴스 <xref:System.UInt64>, 해당 값에 관계 없이 보다 큰 것으로 간주 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-116">Any instance of <xref:System.UInt64>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="9a0a3-117">`value` 해야 `null` 또는 인스턴스의 <xref:System.UInt64>, 그러지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-117">`value` must be `null` or an instance of <xref:System.UInt64>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-118">다음 코드 예제는 <xref:System.UInt64.CompareTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-118">The following code example demonstrates the <xref:System.UInt64.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt64 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt64 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64 Example/CS/source.cs#3)]
 [!code-vb[UInt64 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9a0a3-119">
            <paramref name="value" /> is not a <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-119">
              <paramref name="value" /> is not a <see cref="T:System.UInt64" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint64 -&gt; int&#xA;override this.CompareTo : uint64 -&gt; int" Usage="uint64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9a0a3-120">An unsigned integer to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-120">An unsigned integer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-121">Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-121">Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-122">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-122">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="9a0a3-123">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance is less than <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance is equal to <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance is greater than <paramref name="value" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-123">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-124">이 메서드를 구현 하는 <xref:System.IComparable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 <xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType> 메서드 변환할 필요가 없기 때문에 `value` 매개 변수를 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-124">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="9a0a3-125">프로그래밍 언어에 따라 코딩할 수는 <xref:System.UInt64.CompareTo%2A> 메서드 매개 변수 형식이 비트 수가 적은 보다 인스턴스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-125">Depending on your programming language, it might be possible to code a <xref:System.UInt64.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="9a0a3-126">일부 프로그래밍 언어 매개 변수를 나타내는 형식으로 비트 수는 인스턴스와 암시적 확대 변환을 수행 하기 때문에 이것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-126">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="9a0a3-127">예를 들어 인스턴스 형식이 <xref:System.Int32> 매개 변수 형식이 고 <xref:System.Byte>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-127">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="9a0a3-128">Microsoft C# 컴파일러는 매개 변수의 값을 나타내는 명령을 생성 한 <xref:System.Int32> 개체를 생성 합니다.는 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 의 값을 비교 하는 메서드는 <xref:System.Int32> 인스턴스 및 <xref:System.Int32> 매개 변수 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-128">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="9a0a3-129">해당 컴파일러에서 숫자 형식에 암시적으로 확대 변환을 수행 여부를 확인 하려면 해당 프로그래밍 언어의 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-129">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-130">다음 코드 예제에서는 제네릭 및 제네릭이 아닌 버전을 보여 줍니다.는 <xref:System.UInt64.CompareTo%2A> 여러 값 및 참조 형식에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-130">The following code example demonstrates generic and nongeneric versions of the <xref:System.UInt64.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9a0a3-131">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-131">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uint64.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9a0a3-132">An object to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-132">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-133">Returns a value indicating whether this instance is equal to a specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-133">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-134">
            <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-134">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9a0a3-135">다음 예제는 <xref:System.UInt64.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-135">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.UInt64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equals1.cs#1)]
 [!code-vb[System.UInt64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9a0a3-136">
            <para>컴파일러 오버 로드 확인의 두 동작에는 명백한 차이 고려 될 수 있습니다 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 메서드 오버 로드 합니다. 경우 간에 암시적 변환이 <paramref name="obj" /> 인수 및 <see cref="T:System.UInt64" /> 정의 및 인수 인수로 형식화 되지 않습니다는 <see cref="T:System.Object" />, 컴파일러는 암시적 변환 및 호출을 수행는 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 메서드. 호출 그렇지 않은 경우는 <see cref="M:System.UInt64.Equals(System.Object)" /> 메서드는 항상 반환 <see langword="false" /> 경우 해당 <paramref name="obj" /> 인수가 <see cref="T:System.UInt64" /> 값입니다. 다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다. 경우에 <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, 및 <see cref="T:System.UInt32" /> 값을 반환 하는 첫 번째 비교 <see langword="true" /> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 메서드를 반면 두 번째 비교 반환 <see langword="false" /> 컴파일러를 호출 하기 때문에 <see cref="M:System.UInt64.Equals(System.Object)" /> 메서드.  [! code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [! code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-136">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method. Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.  [!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.UInt64.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt64 obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="uint64.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9a0a3-137">A <see cref="T:System.UInt64" /> value to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-137">A <see cref="T:System.UInt64" /> value to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-138">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt64" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-138">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt64" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-139">
            <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-139">
              <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-140">이 메서드를 구현 하는 <xref:System.IEquatable%601?displayProperty=nameWithType> 인터페이스를 하 고 수행 보다 조금 더 나은 <xref:System.UInt64.Equals%2A> 변환할 필요가 없기 때문에 `obj` 매개 변수를 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-140">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.UInt64.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-141">다음 예제는 <xref:System.UInt64.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-141">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt64_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64_Equals/CPP/uint64_equals.cpp#1)]
 [!code-csharp[UInt64_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64_Equals/CS/uint64_equals.cs#1)]
 [!code-vb[UInt64_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64_Equals/VB/uint64_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9a0a3-142">
            <para>컴파일러 오버 로드 확인의 두 동작에는 명백한 차이 고려 될 수 있습니다 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 메서드 오버 로드 합니다. 경우 간에 암시적 변환이 <paramref name="obj" /> 인수 및 <see cref="T:System.UInt64" /> 정의 및 인수 인수로 형식화 되지 않습니다는 <see cref="T:System.Object" />, 컴파일러는 암시적 변환 및 호출을 수행는 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 메서드. 호출 그렇지 않은 경우는 <see cref="M:System.UInt64.Equals(System.Object)" /> 메서드는 항상 반환 <see langword="false" /> 경우 해당 <paramref name="obj" /> 인수가 <see cref="T:System.UInt64" /> 값입니다. 다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다. 경우에 <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, 및 <see cref="T:System.UInt32" /> 값을 반환 하는 첫 번째 비교 <see langword="true" /> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <see cref="M:System.UInt64.Equals(System.UInt64)" /> 메서드를 반면 두 번째 비교 반환 <see langword="false" /> 컴파일러를 호출 하기 때문에 <see cref="M:System.UInt64.Equals(System.Object)" /> 메서드.  [! code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [! code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-142">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method. Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.  [!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)] [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uint64.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a0a3-143">Returns the hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-143">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-144">A 32-bit signed integer hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-144">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="uint64.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a0a3-145">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-145">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-146">The enumerated constant, <see cref="F:System.TypeCode.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-146">The enumerated constant, <see cref="F:System.TypeCode.UInt64" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const ulong MaxValue = 18446744073709551615;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MaxValue = unsigned int64(18446744073709551615)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As ULong  = 18446744073709551615" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MaxValue = 18446744073709551615;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : uint64" Usage="System.uint64.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>18446744073709551615</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a0a3-147">Represents the largest possible value of <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-147">Represents the largest possible value of <see cref="T:System.UInt64" />.</span>
          </span>
          <span data-ttu-id="9a0a3-148">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-148">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-149">이 상수의 값은 18446744073709551615; 즉, 16 진수 0xFFFFFFFFFFFFFFFF 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-149">The value of this constant is 18,446,744,073,709,551,615; that is, hexadecimal 0xFFFFFFFFFFFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-150">다음 예제에서는 <xref:System.UInt64.MinValue> 및 <xref:System.UInt64.MaxValue> 되었는지 확인 하는 필드는 <xref:System.Double> 값이 범위 내에 <xref:System.UInt64> 형식 변환을 수행 하기 전에 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-150">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="9a0a3-151">이렇게 하면 한 <xref:System.OverflowException> 런타임 시.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-151">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const ulong MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MinValue = unsigned int64(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As ULong  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MinValue = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : uint64" Usage="System.uint64.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a0a3-152">Represents the smallest possible value of <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-152">Represents the smallest possible value of <see cref="T:System.UInt64" />.</span>
          </span>
          <span data-ttu-id="9a0a3-153">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-153">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-154">이 상수의 값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-154">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-155">다음 예제에서는 <xref:System.UInt64.MinValue> 및 <xref:System.UInt64.MaxValue> 되었는지 확인 하는 필드는 <xref:System.Double> 값이 범위 내에 <xref:System.UInt64> 형식 변환을 수행 하기 전에 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-155">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="9a0a3-156">이렇게 하면 한 <xref:System.OverflowException> 런타임 시.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-156">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9a0a3-157">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-157">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.UInt64.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; uint64" Usage="System.uint64.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9a0a3-158">A string that represents the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-158">A string that represents the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-159">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-159">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-160">A 64-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-160">A 64-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-161">`s` 매개 변수는 다음과 같은 형태로 숫자의 문자열 표현 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-161">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="9a0a3-162">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="9a0a3-162">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="9a0a3-163">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-163">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="9a0a3-164">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-164">The following table describes each element.</span></span>  
  
|<span data-ttu-id="9a0a3-165">요소</span><span class="sxs-lookup"><span data-stu-id="9a0a3-165">Element</span></span>|<span data-ttu-id="9a0a3-166">설명</span><span class="sxs-lookup"><span data-stu-id="9a0a3-166">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="9a0a3-167">*ws*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-167">*ws*</span></span>|<span data-ttu-id="9a0a3-168">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-168">Optional white space.</span></span>|  
|<span data-ttu-id="9a0a3-169">*sign*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-169">*sign*</span></span>|<span data-ttu-id="9a0a3-170">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-170">An optional sign.</span></span> <span data-ttu-id="9a0a3-171">유효한 기호 문자에서 결정 됩니다는 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> 현재 문화권의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-171">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="9a0a3-172">그러나,에 0이; 음수 기호를 사용할 수 있습니다. 그렇지 않으면 메서드에서 throw 된 <xref:System.OverflowException>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-172">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="9a0a3-173">*digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-173">*digits*</span></span>|<span data-ttu-id="9a0a3-174">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-174">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="9a0a3-175">모든 앞에 오는 0은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-175">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="9a0a3-176">지정 된 문자열의 `s` 매개 변수를 사용 하 여 해석 됩니다는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-176">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="9a0a3-177">그룹 구분 기호 또는 소수 구분 기호를 포함할 수 없습니다 하며에 소수 부분이 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-177">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="9a0a3-178">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> 현재 시스템 문화권에 따라 초기화 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-178">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="9a0a3-179">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-179">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9a0a3-180">특정 문화권의 서식 지정 정보를 사용 하 여 문자열의 구문을 분석을 사용 하 여는 <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-180">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-181">다음 예제에서는 <xref:System.UInt64.Parse%2A> 메서드를 문자열 값의 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-181">The following example uses the <xref:System.UInt64.Parse%2A> method to parse an array of string values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parse1.cs#1)]
 [!code-vb[System.UInt64.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9a0a3-182">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-182">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9a0a3-183">The <paramref name="s" /> parameter is not in the correct format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-183">The <paramref name="s" /> parameter is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9a0a3-184">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-184">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.UInt64.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; uint64" Usage="System.uint64.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9a0a3-185">A string that represents the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-185">A string that represents the number to convert.</span>
          </span>
          <span data-ttu-id="9a0a3-186">The string is interpreted by using the style specified by the <c>style</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-186">The string is interpreted by using the style specified by the <c>style</c> parameter.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="9a0a3-187">A bitwise combination of the enumeration values that specifies the permitted format of <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-187">A bitwise combination of the enumeration values that specifies the permitted format of <c>s</c>.</span>
          </span>
          <span data-ttu-id="9a0a3-188">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-188">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-189">Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-189">Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-190">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-190">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-191">`style` 매개 변수 (예: 공백, 양수 또는 음수 부호 기호, 그룹 구분 기호 또는 소수점 기호)에 사용할 수 있는 스타일 요소를 정의 고 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-191">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="9a0a3-192">`style` 비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-192">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="9a0a3-193">`style` 매개 변수에서는 이러한 메서드 오버 로드 유용한 경우 `s` 번호 시스템 (10 진수 또는 16 진수)으로 표시 하는 경우 16 진수 값의 문자열 표현을 포함 `s` 실행된 시간에만 알려진 경우 또는 있습니다 공백을 허용 안 함 또는 부호 기호를 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-193">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="9a0a3-194">값에 따라 `style`, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-194">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="9a0a3-195">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="9a0a3-195">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="9a0a3-196">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-196">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="9a0a3-197">경우 `style` 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-197">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="9a0a3-198">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="9a0a3-198">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="9a0a3-199">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-199">The following table describes each element.</span></span>  
  
|<span data-ttu-id="9a0a3-200">요소</span><span class="sxs-lookup"><span data-stu-id="9a0a3-200">Element</span></span>|<span data-ttu-id="9a0a3-201">설명</span><span class="sxs-lookup"><span data-stu-id="9a0a3-201">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="9a0a3-202">*ws*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-202">*ws*</span></span>|<span data-ttu-id="9a0a3-203">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-203">Optional white space.</span></span> <span data-ttu-id="9a0a3-204">시작 부분에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-204">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="9a0a3-205">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-205">A culture-specific currency symbol.</span></span> <span data-ttu-id="9a0a3-206">문자열에 해당 위치는 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 현재 문화권의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-206">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="9a0a3-207">현재 문화권의 통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-207">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-208">*sign*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-208">*sign*</span></span>|<span data-ttu-id="9a0a3-209">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-209">An optional sign.</span></span> <span data-ttu-id="9a0a3-210">부호의 시작 부분에 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-210">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="9a0a3-211">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-211">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="9a0a3-212">그러나,에 0이; 음수 기호를 사용할 수 있습니다. 그렇지 않으면 메서드에서 throw 된 <xref:System.OverflowException>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-212">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="9a0a3-213">*digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-213">*digits*</span></span><br /><br /> <span data-ttu-id="9a0a3-214">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-214">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="9a0a3-215">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-215">*exponential_digits*</span></span>|<span data-ttu-id="9a0a3-216">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-216">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="9a0a3-217">에 대 한 *소수 자릿수*숫자 0은 유효한만 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-217">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="9a0a3-218">*,*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-218">*,*</span></span>|<span data-ttu-id="9a0a3-219">Culture 관련 그룹 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-219">A culture-specific group separator symbol.</span></span> <span data-ttu-id="9a0a3-220">현재 문화권의 그룹 구분 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-220">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-221">*.*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-221">*.*</span></span>|<span data-ttu-id="9a0a3-222">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-222">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="9a0a3-223">에 현재 문화권의 소수점 기호가 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-223">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="9a0a3-224">숫자 0만 구문 분석 작업이 성공; 소수 자리 수로 표시 될 수 있습니다. 경우 *소수 자릿수* 기타 숫자를 포함 한 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-224">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="9a0a3-225">E</span><span class="sxs-lookup"><span data-stu-id="9a0a3-225">E</span></span>|<span data-ttu-id="9a0a3-226">"E" 또는 "E" 문자 값은 지 수 (과학적 표기법) 표기법으로 표현 됨을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-226">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="9a0a3-227">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-227">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-228">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-228">*hexdigits*</span></span>|<span data-ttu-id="9a0a3-229">16 진수 숫자 0 ~ f 또는 0-6.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-229">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="9a0a3-230">숫자만 문자열 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 스타일) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-230">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="9a0a3-231">나머지 <xref:System.Globalization.NumberStyles> 멤버 있을 수 있지만 입력된 문자열에서 제공 되어야 할 필요는 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-231">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="9a0a3-232">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-232">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="9a0a3-233">`NumberStyles` 값</span><span class="sxs-lookup"><span data-stu-id="9a0a3-233">`NumberStyles` value</span></span>|<span data-ttu-id="9a0a3-234">에 허용 되는 요소 `s` 숫자 이외에</span><span class="sxs-lookup"><span data-stu-id="9a0a3-234">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="9a0a3-235">*자릿수* 요소만 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-235">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="9a0a3-236">소수점 (.) 및 *소수 자릿수가* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-236">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="9a0a3-237">"E" 또는 "E"를 나타내는 문자를 지 수 표기법과 함께 *지 수 표기법*합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-237">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="9a0a3-238">*ws* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-238">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="9a0a3-239">*ws* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-239">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="9a0a3-240">*기호* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-240">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="9a0a3-241">*기호* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-241">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="9a0a3-242">*기호* 숫자 값이 들어 괄호 안에 형식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-242">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="9a0a3-243">그룹 구분 기호 (,) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-243">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="9a0a3-244">통화 ($) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-244">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="9a0a3-245">모든 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-245">All elements.</span></span> <span data-ttu-id="9a0a3-246">그러나 `s` 16 진수 또는 숫자를 지 수 표기법으로 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-246">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="9a0a3-247">*ws* 시작 또는 끝에 요소 `s`, *기호* 의 시작 부분에 `s`, 소수점 및 (*.*) 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-247">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="9a0a3-248">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-248">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="9a0a3-249">`ws`, `sign`, 그룹 구분 기호 (*,*), 소수점 및 (*.*) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-249">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="9a0a3-250">모든 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-250">All elements.</span></span> <span data-ttu-id="9a0a3-251">그러나 `s` 16 진수를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-251">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="9a0a3-252">다른 달리 <xref:System.Globalization.NumberStyles> 에 대 한 허용 하지만 특정 스타일 요소에 있으면 필요 하지 않습니다는 값을 `s`, <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 스타일 값 즉 숫자의 개별 문자에서 `s` 은 항상로 해석 16 진수 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-252">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="9a0a3-253">유효한 16 진수는 0-9, A-F 및 a-f 문자.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-253">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="9a0a3-254">구문 분석 작업이 실패 하는 접두사 "0x"와 같은 고 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-254">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="9a0a3-255">다른 플래그만 함께 사용할 수 있는 `style` 매개 변수는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-255">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9a0a3-256">(의 <xref:System.Globalization.NumberStyles> 열거형 복합 숫자 스타일에 포함 됩니다. <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 공백 플래그가 모두를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="9a0a3-256">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a0a3-257">경우 `s` 문자열 표현인 16 진수 숫자의 것 없습니다 수 기호가 앞에 나올 (같은 `0x` 또는 `&h`)는 16 진수 숫자로 구분 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-257">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="9a0a3-258">이렇게 하면 변환이 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-258">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="9a0a3-259">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 현재 시스템 문화권에 따라 초기화 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-259">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="9a0a3-260">구문 분석 작업에 대 한 서식 지정 정보를 가져올 사용 되는 문화권을 지정 하려면 호출는 <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-260">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-261">다음 예제에서는 여러 가지를 사용 하 여 문자열 배열의 각 요소를 구문 분석을 시도 <xref:System.Globalization.NumberStyles> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-261">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex2.cs#2)]
 [!code-vb[System.UInt64.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9a0a3-262">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-262">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9a0a3-263">
            <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-263">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="9a0a3-264">-or-  <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-264">-or-  <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9a0a3-265">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-265">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9a0a3-266">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-266">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="9a0a3-267">-or-  <paramref name="s" /> includes non-zero, fractional digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-267">-or-  <paramref name="s" /> includes non-zero, fractional digits.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9a0a3-268">A string that represents the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-268">A string that represents the number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="9a0a3-269">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-269">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-270">Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-270">Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-271">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-271">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-272">이 오버 로드는 <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> 메서드는 여러 가지 방법으로 서식을 지정할 수 있는 텍스트 변환 데 일반적으로 <xref:System.UInt64> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-272">This overload of the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="9a0a3-273">예를 들어 숫자 값으로 HTML 텍스트 상자에 사용자가 입력 한 텍스트 변환에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-273">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="9a0a3-274">`s` 매개 변수 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-274">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="9a0a3-275">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="9a0a3-275">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="9a0a3-276">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-276">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="9a0a3-277">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-277">The following table describes each element.</span></span>  
  
|<span data-ttu-id="9a0a3-278">요소</span><span class="sxs-lookup"><span data-stu-id="9a0a3-278">Element</span></span>|<span data-ttu-id="9a0a3-279">설명</span><span class="sxs-lookup"><span data-stu-id="9a0a3-279">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="9a0a3-280">*ws*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-280">*ws*</span></span>|<span data-ttu-id="9a0a3-281">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-281">Optional white space.</span></span>|  
|<span data-ttu-id="9a0a3-282">*sign*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-282">*sign*</span></span>|<span data-ttu-id="9a0a3-283">선택적 양수 부호 또는 음수 부호 경우 `s` 0 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-283">An optional positive sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="9a0a3-284">*digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-284">*digits*</span></span>|<span data-ttu-id="9a0a3-285">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-285">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="9a0a3-286">S 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-286">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="9a0a3-287">부호 없는 정수 값의 10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-287">In addition to the unsigned integer value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="9a0a3-288">(음수 기호가 있으면 `s` 0 또는 메서드가 throw의 값을 나타내야는 <xref:System.OverflowException>.) 명시적으로 함께 culture 별 서식 지정 정보에 포함 될 수 있는 스타일 요소를 정의 하려면 `s`를 사용 하 여는 <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-288">(If the negative sign is present, `s` must represent a value of zero, or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="9a0a3-289">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현 인 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 의 형식에 대 한 문화권별 정보를 제공 하는 개체 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-289">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="9a0a3-290">세 가지 방법으로 사용 하 여 `provider` 매개 변수를 구문 분석 작업에 사용자 지정 서식 지정 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-290">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="9a0a3-291">실제 전달할 수 있습니다 <xref:System.Globalization.NumberFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-291">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="9a0a3-292">(구현 <xref:System.IFormatProvider.GetFormat%2A> 자기 자신을 반환 합니다.)</span><span class="sxs-lookup"><span data-stu-id="9a0a3-292">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="9a0a3-293">전달할 수는 <xref:System.Globalization.CultureInfo> 서식을 데 사용할 문화권을 지정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-293">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="9a0a3-294">해당 <xref:System.Globalization.CultureInfo.NumberFormat%2A> 속성은 형식 지정 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-294">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="9a0a3-295">사용자 지정을 전달할 수 있습니다 <xref:System.IFormatProvider> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-295">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="9a0a3-296">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드 인스턴스화하고 반환 해야는 <xref:System.Globalization.NumberFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-296">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="9a0a3-297">경우 `provider` 은 `null`, <xref:System.Globalization.NumberFormatInfo> 현재 culture가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-297">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-298">다음 예제에서는 단추 클릭 Web form의 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-298">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="9a0a3-299">반환 된 배열을 사용 하 여는 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> 속성을 사용자의 로캘을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-299">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="9a0a3-300">그런 다음는 <xref:System.Globalization.CultureInfo> 해당 로캘에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-300">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="9a0a3-301"><xref:System.Globalization.NumberFormatInfo> 하에 속하는 개체는 <xref:System.Globalization.CultureInfo> 에 다음 전달 된 개체는 <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> 메서드는 사용자 입력을 <xref:System.UInt64> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-301">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.UInt64> value.</span></span>  
  
 [!code-csharp[ParseMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#1)]
 [!code-vb[ParseMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9a0a3-302">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-302">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9a0a3-303">The <paramref name="s" /> parameter is not in the correct style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-303">The <paramref name="s" /> parameter is not in the correct style.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9a0a3-304">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-304">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As ULong" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; uint64" Usage="System.uint64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9a0a3-305">A string that represents the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-305">A string that represents the number to convert.</span>
          </span>
          <span data-ttu-id="9a0a3-306">The string is interpreted by using the style specified by the <c>style</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-306">The string is interpreted by using the style specified by the <c>style</c> parameter.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="9a0a3-307">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-307">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="9a0a3-308">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-308">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="9a0a3-309">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-309">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-310">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-310">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-311">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-311">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-312">`style` 매개 변수 (예: 공백 또는 양수 또는 음수 부호 기호)에 사용할 수 있는 스타일 요소를 정의 고 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-312">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="9a0a3-313">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-313">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="9a0a3-314">값에 따라 `style`, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-314">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="9a0a3-315">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="9a0a3-315">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="9a0a3-316">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-316">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="9a0a3-317">경우 `style` 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-317">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="9a0a3-318">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="9a0a3-318">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="9a0a3-319">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-319">The following table describes each element.</span></span>  
  
|<span data-ttu-id="9a0a3-320">요소</span><span class="sxs-lookup"><span data-stu-id="9a0a3-320">Element</span></span>|<span data-ttu-id="9a0a3-321">설명</span><span class="sxs-lookup"><span data-stu-id="9a0a3-321">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="9a0a3-322">*ws*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-322">*ws*</span></span>|<span data-ttu-id="9a0a3-323">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-323">Optional white space.</span></span> <span data-ttu-id="9a0a3-324">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-324">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="9a0a3-325">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-325">A culture-specific currency symbol.</span></span> <span data-ttu-id="9a0a3-326">위치는 문자열에 의해 정의 됩니다는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 속성은 <xref:System.Globalization.NumberFormatInfo> 에서 반환 되는 개체는 <xref:System.IFormatProvider.GetFormat%2A> 의 메서드는 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-326">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="9a0a3-327">통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-327">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-328">*sign*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-328">*sign*</span></span>|<span data-ttu-id="9a0a3-329">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-329">An optional sign.</span></span> <span data-ttu-id="9a0a3-330">(메서드에서 throw 된 <xref:System.OverflowException> 경우 `s` 음수 부호를 포함 하 고 0이 아닌 숫자를 나타냅니다.) 부호의 시작 부분에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 의 끝에 나타날 수 있고, `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-330">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="9a0a3-331">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-331">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-332">*digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-332">*digits*</span></span>|<span data-ttu-id="9a0a3-333">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-333">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="9a0a3-334">*.*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-334">*.*</span></span>|<span data-ttu-id="9a0a3-335">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-335">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="9a0a3-336">에 현재 문화권의 소수점 기호가 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-336">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-337">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-337">*fractional_digits*</span></span>|<span data-ttu-id="9a0a3-338">하나 이상의 숫자 0-9 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 하나 이상의 숫자 그렇지 않은 경우 0 또는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-338">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="9a0a3-339">소수 자릿수에 나타날 수 `s` 경우에만 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-339">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-340">E</span><span class="sxs-lookup"><span data-stu-id="9a0a3-340">E</span></span>|<span data-ttu-id="9a0a3-341">"E" 또는 "E" 문자 값은 지 수 (과학적 표기법) 표기법으로 표현 됨을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-341">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="9a0a3-342">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-342">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-343">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-343">*exponential_digits*</span></span>|<span data-ttu-id="9a0a3-344">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-344">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="9a0a3-345">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-345">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-346">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-346">*hexdigits*</span></span>|<span data-ttu-id="9a0a3-347">16 진수 숫자 0 ~ f 또는 0-6.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-347">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="9a0a3-348">숫자만 있는 문자열 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 스타일) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-348">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="9a0a3-349">나머지 <xref:System.Globalization.NumberStyles> 멤버 있을 수 있지만이 입력된 문자열에서 제공 되어야 할 필요는 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-349">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="9a0a3-350">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-350">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="9a0a3-351">비 복합 `NumberStyles` 값</span><span class="sxs-lookup"><span data-stu-id="9a0a3-351">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="9a0a3-352">에 허용 되는 요소 `s` 숫자 이외에</span><span class="sxs-lookup"><span data-stu-id="9a0a3-352">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="9a0a3-353">10 진수 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-353">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="9a0a3-354">소수점 (*.*) 및 *소수 자릿수* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-354">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="9a0a3-355">그러나 스타일 포함 되어 있지 않으면는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그를 *소수 자릿수* 0 숫자가 하나 이상 구성 되어야 합니다, 그러지 않으면는 <xref:System.OverflowException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-355">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="9a0a3-356">"E" 또는 "E"를 나타내는 문자를 지 수 표기법과 함께 *지 수 표기법*합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-356">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="9a0a3-357">*ws* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-357">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="9a0a3-358">*ws* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-358">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="9a0a3-359">앞에 기호 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-359">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="9a0a3-360">로그인 후 로그인 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-360">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="9a0a3-361">괄호 앞과 뒤 *자릿수* 음수 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-361">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="9a0a3-362">그룹 구분 기호 (*,*) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-362">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="9a0a3-363">통화 (*$*) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-363">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="9a0a3-364">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 16 진수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-364">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="9a0a3-365">유효한 16 진수는 0-9, A-F 및 a-f 문자.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-365">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="9a0a3-366">구문 분석 작업이 실패 하는 접두사 "0x"와 같은 고 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-366">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="9a0a3-367">만 다른 플래그를 함께 사용할 수 있는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-367">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9a0a3-368">(의 <xref:System.Globalization.NumberStyles> 열거형 복합 숫자 스타일에 포함 됩니다. <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 공백 플래그가 모두를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="9a0a3-368">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a0a3-369">경우는 `s` 매개 변수는 16 진수 숫자의 문자열 표현을, 모든 장식 올 수 없습니다 (같은 `0x` 또는 `&h`)는 16 진수 숫자로 구분 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-369">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="9a0a3-370">이렇게 하면 구문 분석 작업에서 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-370">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="9a0a3-371">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현 인 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 의 형식에 대 한 문화권별 정보를 제공 하는 개체 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-371">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="9a0a3-372">세 가지 방법으로 사용 하 여 `provider` 매개 변수를 구문 분석 작업에 사용자 지정 서식 지정 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-372">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="9a0a3-373">실제 전달할 수 있습니다 <xref:System.Globalization.NumberFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-373">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="9a0a3-374">(구현 <xref:System.IFormatProvider.GetFormat%2A> 자기 자신을 반환 합니다.)</span><span class="sxs-lookup"><span data-stu-id="9a0a3-374">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="9a0a3-375">전달할 수는 <xref:System.Globalization.CultureInfo> 서식을 데 사용할 문화권을 지정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-375">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="9a0a3-376">해당 <xref:System.Globalization.CultureInfo.NumberFormat%2A> 속성은 형식 지정 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-376">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="9a0a3-377">사용자 지정을 전달할 수 있습니다 <xref:System.IFormatProvider> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-377">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="9a0a3-378">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드 인스턴스화하고 반환 해야는 <xref:System.Globalization.NumberFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-378">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="9a0a3-379">경우 `provider` 은 `null`, <xref:System.Globalization.NumberFormatInfo> 개체가 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-379">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-380">다음 예제에서는 <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 숫자의 다양 한 문자열 표현을 64 비트 부호 없는 정수 값으로 변환 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-380">The following example uses the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 64-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt64.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9a0a3-381">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-381">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9a0a3-382">
            <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-382">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="9a0a3-383">-or-  <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-383">-or-  <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9a0a3-384">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-384">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9a0a3-385">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-385">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="9a0a3-386">-or-  <paramref name="s" /> includes non-zero, fractional digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-386">-or-  <paramref name="s" /> includes non-zero, fractional digits.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.UInt64.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-387">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-387">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-388">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-388">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-389">
            <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-389">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-390">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-390">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-391"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-391">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-392">메서드 대신 호출 하는 것은 <xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-392">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-393">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-393">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-394">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-394">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-395">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-395">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-396">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-396">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-397"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-397">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-398">메서드 대신 호출 하는 것은 <xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-398">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-399">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-399">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-400">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-400">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-401">The value of the current instance, converted to a <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-401">The value of the current instance, converted to a <see cref="T:System.Char" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-402">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-402">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-403"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-403">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-404">메서드 대신 호출 하는 것은 <xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-404">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-405">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-405">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-406">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-406">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9a0a3-407">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-407">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-408">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-408">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9a0a3-409">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-409">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9a0a3-410">In all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-410">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-411">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-411">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-412">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-412">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-413">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-413">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-414">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-414">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-415"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-415">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-416">메서드 대신 호출 하는 것은 <xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-416">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-417">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-417">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-418">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-418">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-419">The value of the current instance, converted to a <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-419">The value of the current instance, converted to a <see cref="T:System.Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-420">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-420">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-421"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-421">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-422">메서드 대신 호출 하는 것은 <xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-422">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-423">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-423">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-424">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-424">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-425">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-425">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-426">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-426">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-427"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-427">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-428">메서드 대신 호출 하는 것은 <xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-428">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-429">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-429">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-430">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-430">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-431">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-431">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-432">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-432">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-433"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-433">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-434">메서드 대신 호출 하는 것은 <xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-434">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-435">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-435">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-436">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-436">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-437">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-437">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-438">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-438">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-439"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-439">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-440">메서드 대신 호출 하는 것은 <xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-440">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-441">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-441">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-442">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-442">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-443">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-443">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-444">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-444">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-445"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-445">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-446">메서드 대신 호출 하는 것은 <xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-446">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-447">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-447">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-448">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-448">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-449">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-449">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-450">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-450">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-451"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-451">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-452">메서드 대신 호출 하는 것은 <xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-452">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9a0a3-453">The type to which to convert this <see cref="T:System.UInt64" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-453">The type to which to convert this <see cref="T:System.UInt64" /> value.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="9a0a3-454">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-454">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-455">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-455">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-456">The value of the current instance, converted to <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-456">The value of the current instance, converted to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-457">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-457">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-458"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-458">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-459">메서드 대신 호출 하는 것은 `static` (`Shared` Visual basic에서) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-459">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-460">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-460">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-461">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-461">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-462">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-462">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-463">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-464"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-464">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-465">메서드 대신 호출 하는 것은 <xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-465">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-466">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-466">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-467">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-467">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-468">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-468">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-469">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-470"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-470">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9a0a3-471">메서드 대신 호출 하는 것은 <xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-471">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-472">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-472">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-473">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-473">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-474">The value of the current instance, unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-474">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-475">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9a0a3-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9a0a3-476"><xref:System.UInt64> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-476">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9a0a3-477">Converts the numeric value of this instance to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-477">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uint64.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a0a3-478">Converts the numeric value of this instance to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-478">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-479">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-479">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-480"><xref:System.UInt64.ToString> 메서드 형식을 <xref:System.UInt64> 기본값 ("G" 또는 일반)에서 값을 사용 하 여 형식은 <xref:System.Globalization.NumberFormatInfo> 현재 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-480">The <xref:System.UInt64.ToString> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="9a0a3-481">다른 형식이 나 문화권을 지정 하려는 경우 사용의 다른 오버 로드는 <xref:System.UInt64.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="9a0a3-481">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="9a0a3-482">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="9a0a3-482">To use format</span></span>|<span data-ttu-id="9a0a3-483">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="9a0a3-483">For culture</span></span>|<span data-ttu-id="9a0a3-484">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="9a0a3-484">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="9a0a3-485">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-485">Default ("G") format</span></span>|<span data-ttu-id="9a0a3-486">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-486">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="9a0a3-487">특정 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-487">A specific format</span></span>|<span data-ttu-id="9a0a3-488">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-488">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="9a0a3-489">특정 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-489">A specific format</span></span>|<span data-ttu-id="9a0a3-490">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-490">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-491">다음 예제에서는 표시 된 <xref:System.UInt64> 기본값을 사용 하 여 값 <xref:System.UInt64.ToString> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-491">The following example displays a <xref:System.UInt64> value by using the default <xref:System.UInt64.ToString> method.</span></span> <span data-ttu-id="9a0a3-492">또한의 문자열 표현을 표시는 <xref:System.UInt64> 일부 표준 형식 지정자를 사용 하 여 얻은 값을 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-492">It also displays the string representations of the <xref:System.UInt64> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="9a0a3-493">예제에서는 EN-US 문화권의 형식 규칙을 사용 하 여 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-493">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt64.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="uint64.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9a0a3-494">An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-494">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-495">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-495">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-496">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-496">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-497"><xref:System.UInt64.ToString%28System.IFormatProvider%29> 메서드 형식을 <xref:System.UInt64> 기본값 ("G" 또는 일반)에서 값을 사용 하 여 형식은 <xref:System.Globalization.NumberFormatInfo> 지정된 된 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-497">The <xref:System.UInt64.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="9a0a3-498">다른 형식이 나 현재 문화권을 지정 하려는 경우 사용의 다른 오버 로드는 <xref:System.UInt64.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="9a0a3-498">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="9a0a3-499">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="9a0a3-499">To use format</span></span>|<span data-ttu-id="9a0a3-500">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="9a0a3-500">For culture</span></span>|<span data-ttu-id="9a0a3-501">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="9a0a3-501">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="9a0a3-502">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-502">Default ("G") format</span></span>|<span data-ttu-id="9a0a3-503">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-503">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="9a0a3-504">특정 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-504">A specific format</span></span>|<span data-ttu-id="9a0a3-505">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-505">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="9a0a3-506">특정 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-506">A specific format</span></span>|<span data-ttu-id="9a0a3-507">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-507">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="9a0a3-508">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-508">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="9a0a3-509">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> culture 별 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-509">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="9a0a3-510">그러나의 속성이 없는 <xref:System.Globalization.NumberFormatInfo> 형식은 일반 숫자 형식 지정자 ("G")로 서식을 지정할 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-510">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-511">다음 예제에서는 고정 문화권의 하나를 포함 하 여 여러 명의 형식 공급자를 사용 하 여 64 비트 부호 있는 정수 값의 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-511">The following example formats a 64-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="9a0a3-512">예제의 출력에서 반환 되는 형식이 지정 된 문자열을 보여 줍니다.는 <xref:System.UInt64.ToString%28System.IFormatProvider%29> 메서드는 형식 공급자에 관계 없이 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-512">The output from the example illustrates that the formatted string returned by the <xref:System.UInt64.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt64.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="uint64.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="9a0a3-513">A numeric format string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-513">A numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-514">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-514">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-515">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-515">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-516"><xref:System.UInt64.ToString%28System.String%29> 메서드 형식을 <xref:System.UInt64> 를 사용 하 여 지정 된 형식에서 값을 <xref:System.Globalization.NumberFormatInfo> 현재 문화권의 규칙을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-516">The <xref:System.UInt64.ToString%28System.String%29> method formats a <xref:System.UInt64> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="9a0a3-517">기본값 ("G" 또는 일반)을 사용 하려는 경우 다른 문화권이 지정, 다른 오버 로드를 사용 하거나 형식는 <xref:System.UInt64.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="9a0a3-517">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="9a0a3-518">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="9a0a3-518">To use format</span></span>|<span data-ttu-id="9a0a3-519">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="9a0a3-519">For culture</span></span>|<span data-ttu-id="9a0a3-520">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="9a0a3-520">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="9a0a3-521">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-521">Default ("G") format</span></span>|<span data-ttu-id="9a0a3-522">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-522">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="9a0a3-523">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-523">Default ("G") format</span></span>|<span data-ttu-id="9a0a3-524">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-524">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="9a0a3-525">특정 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-525">A specific format</span></span>|<span data-ttu-id="9a0a3-526">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-526">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="9a0a3-527">`format` 매개 변수는 유효한 수 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md), 또는의 임의 조합 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-527">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="9a0a3-528">경우 `format` 같은지를 <xref:System.String.Empty?displayProperty=nameWithType> 아니거나 `null`, 현재의 반환 값 <xref:System.UInt64> 개체는 일반 형식 지정자 ("G")로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-528">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="9a0a3-529">경우 `format` 다른 값을 메서드가 throw 한 <xref:System.FormatException>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-529">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="9a0a3-530">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-530">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="9a0a3-531">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-531">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="9a0a3-532">.NET Framework에서 형식 지정에 대 한 지원에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-532">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="9a0a3-533">반환된 된 문자열의 형식은 따라 결정 됩니다는 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-533">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="9a0a3-534">에 따라는 `format` 그룹 구분 기호 등의 기호 및 소수점 기호가 출력 문자열에 매개 변수를이 개체를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-534">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="9a0a3-535">현재 문화권이 아닌 문화권에 대 한 서식 지정 정보를 제공 하려면 호출는 <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-535">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-536">다음 예제에서는 각 표준 형식 문자열 및 일부 사용자 지정 형식 문자열을 사용 하 여 64 비트 부호 없는 정수 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-536">The following example displays a 64-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt64.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9a0a3-537">The <paramref name="format" /> parameter is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-537">The <paramref name="format" /> parameter is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="uint64.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="9a0a3-538">A numeric format string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-538">A numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="9a0a3-539">An object that supplies culture-specific formatting information about this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-539">An object that supplies culture-specific formatting information about this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-540">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-540">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-541">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-541">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-542"><xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> 메서드 형식을 <xref:System.UInt64> 값을 사용 하 여 지정 된 형식에서 <xref:System.Globalization.NumberFormatInfo> 지정된 된 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-542">The <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt64> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="9a0a3-543">다른 오버 로드를 사용 하 여 기본 형식 또는 문화권 설정을 사용 하려는 경우는 <xref:System.UInt64.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="9a0a3-543">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="9a0a3-544">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="9a0a3-544">To use format</span></span>|<span data-ttu-id="9a0a3-545">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="9a0a3-545">For culture</span></span>|<span data-ttu-id="9a0a3-546">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="9a0a3-546">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="9a0a3-547">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-547">Default ("G") format</span></span>|<span data-ttu-id="9a0a3-548">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-548">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="9a0a3-549">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-549">Default ("G") format</span></span>|<span data-ttu-id="9a0a3-550">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-550">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="9a0a3-551">특정 형식</span><span class="sxs-lookup"><span data-stu-id="9a0a3-551">A specific format</span></span>|<span data-ttu-id="9a0a3-552">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="9a0a3-552">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
  
 <span data-ttu-id="9a0a3-553">`format` 매개 변수는 유효한 수 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md), 또는의 임의 조합 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-553">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="9a0a3-554">경우 `format` 같은지를 <xref:System.String.Empty?displayProperty=nameWithType> 아니거나 `null`, 현재의 반환 값 <xref:System.UInt64> 개체는 일반 형식 지정자 ("G")로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-554">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="9a0a3-555">경우 `format` 다른 값을 메서드가 throw 한 <xref:System.FormatException>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-555">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="9a0a3-556">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-556">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="9a0a3-557">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-557">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="9a0a3-558">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-558">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="9a0a3-559">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-559">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="9a0a3-560">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 이 메서드에서 반환 된 문자열의 형식에 대 한 문화권별 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-560">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="9a0a3-561">때는 <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> 메서드가 호출 되 면 호출는 `provider` 매개 변수의 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드 전달는 <xref:System.Type> 을 나타내는 개체는 <xref:System.Globalization.NumberFormatInfo> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-561">When the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="9a0a3-562"><xref:System.IFormatProvider.GetFormat%2A> 다음 메서드는 <xref:System.Globalization.NumberFormatInfo> 현재 서식을 지정 하기 위한 정보를 제공 하는 개체 <xref:System.UInt64> 그룹 구분 기호 또는 소수점 기호 등의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-562">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt64> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="9a0a3-563">세 가지 방법으로 사용 하 여 `provider` 서식 지정 정보를 제공 하는 매개 변수는 <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> 메서드:</span><span class="sxs-lookup"><span data-stu-id="9a0a3-563">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="9a0a3-564">전달할 수는 <xref:System.Globalization.CultureInfo> 서식 지정 정보를 제공 하는 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-564">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="9a0a3-565">해당 <xref:System.Globalization.CultureInfo.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 해당 culture에 대 한 숫자 형식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-565">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="9a0a3-566">실제 전달할 수 있습니다 <xref:System.Globalization.NumberFormatInfo> 숫자 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-566">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="9a0a3-567">(구현 <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> 자체를 반환 합니다.)</span><span class="sxs-lookup"><span data-stu-id="9a0a3-567">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="9a0a3-568">구현 하는 사용자 지정 개체를 전달할 수 있습니다 <xref:System.IFormatProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-568">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="9a0a3-569">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드를 인스턴스화하고 반환 된 <xref:System.Globalization.NumberFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-569">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="9a0a3-570">경우 `provider` 은 `null`를 기반으로 반환된 된 문자열의 서식을 <xref:System.Globalization.NumberFormatInfo> 현재 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-570">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-571">다음 예제에서는 표준 숫자 서식 지정자와 다 수의 지정을 사용 하 여 32 비트 부호 없는 정수 값을 표시 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-571">The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt64.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9a0a3-572">The <paramref name="format" /> parameter is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-572">The <paramref name="format" /> parameter is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="uint64.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9a0a3-573">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-573">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          </span>
          <span data-ttu-id="9a0a3-574">A return value indicates whether the conversion succeeded or failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-574">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.UInt64.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.uint64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.UInt64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.uint64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.UInt64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9a0a3-575">A string that represents the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-575">A string that represents the number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="9a0a3-576">When this method returns, contains the 64-bit unsigned integer value that is equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-576">When this method returns, contains the 64-bit unsigned integer value that is equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="9a0a3-577">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-577">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="9a0a3-578">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-578">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-579">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-579">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span>
          </span>
          <span data-ttu-id="9a0a3-580">A return value indicates whether the conversion succeeded or failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-580">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-581">
            <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-581">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-582"><xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> 방법은 <xref:System.UInt64.Parse%28System.String%29> 메서드와 변환이 실패할 경우 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-582">The <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="9a0a3-583">이 메서드를 테스트 하려면 예외 처리를 사용 하지 않아도 <xref:System.FormatException> 경우 `s` 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-583">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="9a0a3-584">`s` 매개 변수는 다음과 같은 형태로 10 진수 숫자의 문자열 표현 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-584">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="9a0a3-585">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="9a0a3-585">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="9a0a3-586">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-586">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="9a0a3-587">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-587">The following table describes each element.</span></span>  
  
|<span data-ttu-id="9a0a3-588">요소</span><span class="sxs-lookup"><span data-stu-id="9a0a3-588">Element</span></span>|<span data-ttu-id="9a0a3-589">설명</span><span class="sxs-lookup"><span data-stu-id="9a0a3-589">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="9a0a3-590">*ws*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-590">*ws*</span></span>|<span data-ttu-id="9a0a3-591">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-591">Optional white space.</span></span>|  
|<span data-ttu-id="9a0a3-592">*sign*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-592">*sign*</span></span>|<span data-ttu-id="9a0a3-593">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-593">An optional sign.</span></span> <span data-ttu-id="9a0a3-594">유효한 기호 문자에서 결정 됩니다는 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> 현재 문화권의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-594">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="9a0a3-595">*digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-595">*digits*</span></span>|<span data-ttu-id="9a0a3-596">0에서 9 사이의 10 진수의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-596">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="9a0a3-597">`s` 매개 변수를 사용 하 여 해석 됩니다는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-597">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="9a0a3-598">10 진수 숫자, 이외에 선행 및 후행 공백 앞에 부호가 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-598">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="9a0a3-599">명시적으로와 culture 별 서식 지정 정보에 포함 될 수 있는 스타일 요소를 정의 하려면 `s`, 호출의 <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-599">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a0a3-600">지정 된 문자열의 `s` 매개 변수는 그룹 구분 기호 또는 소수 구분 기호를 포함할 수 없습니다 및 소수 부분을 가질 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-600">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion.</span></span>  
  
 <span data-ttu-id="9a0a3-601">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 초기화는 현재 시스템 문화권에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-601">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="9a0a3-602">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-602">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9a0a3-603">모든 자릿수를 해석 하는이 오버 로드는 `s` 소수 자리 수로 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-603">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="9a0a3-604">16 진수 숫자의 문자열 표현을 구문 분석, 호출 된 <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> 오버 로드를 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-604">To parse the string representation of a hexadecimal number, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-605">다음 예제에서는 <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> 문자열 배열의 각 요소에 대해 한 번씩 메서드.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-605">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt64.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.uint64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.uint64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9a0a3-606">A string that represents the number to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-606">A string that represents the number to convert.</span>
          </span>
          <span data-ttu-id="9a0a3-607">The string is interpreted by using the style specified by the <c>style</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-607">The string is interpreted by using the style specified by the <c>style</c> parameter.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="9a0a3-608">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-608">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span>
          </span>
          <span data-ttu-id="9a0a3-609">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-609">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="9a0a3-610">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-610">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="9a0a3-611">When this method returns, contains the 64-bit unsigned integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-611">When this method returns, contains the 64-bit unsigned integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="9a0a3-612">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-612">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="9a0a3-613">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-613">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a0a3-614">Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-614">Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span>
          </span>
          <span data-ttu-id="9a0a3-615">A return value indicates whether the conversion succeeded or failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-615">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a0a3-616">
            <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-616">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a0a3-617"><xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> 방법은 <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 메서드와 변환이 실패할 경우 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-617">The <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="9a0a3-618">이 메서드를 테스트 하려면 예외 처리를 사용 하지 않아도 <xref:System.FormatException> 경우 `s` 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-618">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="9a0a3-619">`style` 매개 변수 (예: 공백 또는 양수 또는 음수 기호)에 사용할 수 있는 스타일 요소를 정의 고 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-619">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="9a0a3-620">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-620">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="9a0a3-621">값에 따라 `style`, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-621">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="9a0a3-622">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="9a0a3-622">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="9a0a3-623">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-623">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="9a0a3-624">또는 경우에는 `style` 매개 변수를 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-624">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="9a0a3-625">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="9a0a3-625">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="9a0a3-626">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-626">The following table describes each element.</span></span>  
  
|<span data-ttu-id="9a0a3-627">요소</span><span class="sxs-lookup"><span data-stu-id="9a0a3-627">Element</span></span>|<span data-ttu-id="9a0a3-628">설명</span><span class="sxs-lookup"><span data-stu-id="9a0a3-628">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="9a0a3-629">*ws*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-629">*ws*</span></span>|<span data-ttu-id="9a0a3-630">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-630">Optional white space.</span></span> <span data-ttu-id="9a0a3-631">시작 부분에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 플래그를 또는 끝날 때 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-631">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="9a0a3-632">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-632">A culture-specific currency symbol.</span></span> <span data-ttu-id="9a0a3-633">위치는 문자열에 의해 정의 됩니다는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 의 속성은 <xref:System.Globalization.NumberFormatInfo> 에서 반환 된 개체는 <xref:System.IFormatProvider.GetFormat%2A> 의 메서드는 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-633">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="9a0a3-634">통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-634">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-635">*sign*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-635">*sign*</span></span>|<span data-ttu-id="9a0a3-636">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-636">An optional sign.</span></span> <span data-ttu-id="9a0a3-637">부호의 시작 부분에 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-637">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="9a0a3-638">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-638">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="9a0a3-639">그러나 음수 기호가 있는 `s` 구문 분석 작업이 성공 하기 위해 0 값 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-639">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>|  
|<span data-ttu-id="9a0a3-640">*digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-640">*digits*</span></span>|<span data-ttu-id="9a0a3-641">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-641">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="9a0a3-642">*,*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-642">*,*</span></span>|<span data-ttu-id="9a0a3-643">Culture 관련 그룹 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-643">A culture-specific group separator.</span></span> <span data-ttu-id="9a0a3-644">그룹 구분 기호를 지정 하는 문화권의 `provider` 에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-644">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-645">*.*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-645">*.*</span></span>|<span data-ttu-id="9a0a3-646">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-646">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="9a0a3-647">에 지정 된 문화권의 소수점 기호가 `provider` 에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-647">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-648">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-648">*fractional_digits*</span></span>|<span data-ttu-id="9a0a3-649">하나 이상의 숫자 0입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-649">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="9a0a3-650">소수 자릿수에 나타날 수 `s` 경우에만 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-650">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-651">E</span><span class="sxs-lookup"><span data-stu-id="9a0a3-651">E</span></span>|<span data-ttu-id="9a0a3-652">"E" 또는 "E" 문자 값은 지 수 (과학적 표기법) 표기법으로 표현 됨을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-652">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="9a0a3-653">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-653">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-654">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-654">*exponential_digits*</span></span>|<span data-ttu-id="9a0a3-655">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-655">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="9a0a3-656">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-656">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="9a0a3-657">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="9a0a3-657">*hexdigits*</span></span>|<span data-ttu-id="9a0a3-658">16 진수 숫자 0 ~ f 또는 0-6.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-658">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="9a0a3-659">숫자만 있는 문자열 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 플래그) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-659">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="9a0a3-660">나머지 <xref:System.Globalization.NumberStyles> 멤버 있을 수 있지만이 입력된 문자열에서 제공 되어야 할 필요는 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-660">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="9a0a3-661">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-661">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="9a0a3-662">비 복합 `NumberStyles` 값</span><span class="sxs-lookup"><span data-stu-id="9a0a3-662">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="9a0a3-663">숫자 이외에 값에 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="9a0a3-663">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="9a0a3-664">10 진수 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-664">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="9a0a3-665">소수점 (*.*) 및 *소수 자릿수* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-665">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="9a0a3-666">그러나 *소수 자릿수* 하나 이상의 0 자릿수 또는 메서드가 반환 되는 구성 되어야 합니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-666">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="9a0a3-667">"E" 또는 "E"를 나타내는 문자를 지 수 표기법과 함께 *지 수 표기법*합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-667">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="9a0a3-668">경우 `s` 숫자를 나타내는 소수, 0이 아닌 구성 요소 지 수 표기법으로 가질 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-668">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="9a0a3-669">*ws* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-669">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="9a0a3-670">*ws* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-670">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="9a0a3-671">*기호* 하기 전에 요소 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-671">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="9a0a3-672">*기호* 다음 요소의 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-672">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="9a0a3-673">*기호* 0 숫자 값을 묶는 괄호의 형태로 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-673">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="9a0a3-674">그룹 구분 기호 (*,*) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-674">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="9a0a3-675">통화 (*$*) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-675">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="9a0a3-676">모든 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-676">All elements.</span></span> <span data-ttu-id="9a0a3-677">그러나 `s` 16 진수 또는 숫자를 지 수 표기법으로 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-677">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="9a0a3-678">*ws* 시작 또는 끝에 요소 `s`, *기호* 의 시작 부분에 `s`, 소수점 및 (*.*) 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-678">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="9a0a3-679">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-679">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="9a0a3-680">*ws*, *기호*, 그룹 구분 기호 (*,*), 소수점 및 (*.*) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-680">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="9a0a3-681">모든 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-681">All elements.</span></span> <span data-ttu-id="9a0a3-682">그러나 `s` 16 진수를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-682">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="9a0a3-683">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 16 진수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-683">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="9a0a3-684">유효한 16 진수는 0-9, A-F 및 a-f 문자.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-684">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="9a0a3-685">구문 분석 작업이 실패 하는 접두사 "0x"와 같은 고 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-685">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="9a0a3-686">다른 플래그만에 있을 수 있는 `style` 는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-686">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9a0a3-687">(의 <xref:System.Globalization.NumberStyles> 열거형에는 복합 스타일 <xref:System.Globalization.NumberStyles.HexNumber>, 공백 플래그가 모두를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="9a0a3-687">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a0a3-688">경우 `s` 문자열 표현인 16 진수 숫자의 것 없습니다 수 기호가 앞에 나올 (같은 `0x` 또는 `&h`)는 16 진수 숫자로 구분 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-688">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="9a0a3-689">이렇게 하면 변환이 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-689">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="9a0a3-690">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-690">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="9a0a3-691">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 의 형식에 대 한 문화권별 정보를 제공 하는 개체 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-691">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="9a0a3-692">`provider` 매개 변수는 다음 중 하나가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-692">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="9a0a3-693">A <xref:System.Globalization.CultureInfo> 서식 지정 정보를 제공 하는 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-693">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="9a0a3-694">해당 <xref:System.Globalization.CultureInfo.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 해당 culture에 대 한 숫자 형식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-694">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="9a0a3-695">A <xref:System.Globalization.NumberFormatInfo> 숫자 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-695">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="9a0a3-696">(구현 <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> 자체를 반환 합니다.)</span><span class="sxs-lookup"><span data-stu-id="9a0a3-696">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="9a0a3-697">구현 하는 사용자 지정 개체 <xref:System.IFormatProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-697">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="9a0a3-698">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드를 인스턴스화하고 반환 된 <xref:System.Globalization.NumberFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-698">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="9a0a3-699">경우 `provider` 은 `null`, <xref:System.Globalization.NumberFormatInfo> 개체가 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-699">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a0a3-700">다음 예제에서는 <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> 메서드는 여러 가지 다른 문자열 및 <xref:System.Globalization.NumberStyles> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9a0a3-700">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt64.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9a0a3-701">
            <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-701">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="9a0a3-702">-or-  <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a0a3-702">-or-  <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>