<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MissingMemberException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac545d9eb037ab898a940ab474bc71592b42430c9ce.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45d9eb037ab898a940ab474bc71592b42430c9ce</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.MissingMemberException">
          <source>The exception that is thrown when there is an attempt to dynamically access a class member that does not exist or that is not declared as public.</source>
          <target state="translated">존재하지 않거나 public으로 선언되지 않은 클래스 멤버에 동적으로 액세스하려고 할 때 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.MissingMemberException">
          <source>If a member in a class library has been removed or renamed, recompile any assemblies that reference that library.</source>
          <target state="translated">클래스 라이브러리에서 멤버가 제거되거나 이름이 변경된 경우 해당 라이브러리를 참조하는 모든 어셈블리를 다시 컴파일하십시오.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>Normally a compilation error is generated if the code attempts to access a nonexistent member of a class.</source>
          <target state="translated">일반적으로 코드는 클래스의 존재 하지 않는 멤버에 액세스 하려고 시도 하는 경우 컴파일 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> is designed to handle cases where a field or a method is deleted or renamed in one assembly and the change is not reflected in a second assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 필드나 메서드가 삭제 되거나 이름이 한 어셈블리에 대 한 경우 두 번째 어셈블리에 변경 내용을 반영 되지 처리 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>At runtime, <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> will be thrown when the code in the second assembly attempts to access the missing member in the first assembly.</source>
          <target state="translated">런타임 시 <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 두 번째 어셈블리의 코드에서 첫 번째 어셈블리에 포함 된 누락 된 멤버에 액세스 하려고 할 때 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> is the base class for <ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph> and <ph id="ph3">&lt;xref:System.MissingMethodException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 기본 클래스에 대 한 <ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph> 및 <ph id="ph3">&lt;xref:System.MissingMethodException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>In general it is better to use one of the derived classes of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> to more precisely indicate the exact nature of the error.</source>
          <target state="translated">파생된 클래스 중 하나를 사용 하는 것이 좋습니다 일반적 <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 보다 정확 하 게 오류의 정확한 원인을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>Throw a <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> if you are only interested in capturing the general case of a missing member error.</source>
          <target state="translated">Throw 한 <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 캡처 누락 된 멤버 오류의 일반적인 경우에만 관심이 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> uses the HRESULT COR_E_MISSINGMEMBER, that has the value 0x80131512.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 0x80131512 값을 가진 HRESULT COR_E_MISSINGMEMBER를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.MissingMemberException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">인스턴스에 대 한 초기 속성 값 목록은 <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>, 참조는 <ph id="ph2">&lt;xref:System.MissingMemberException.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>This example shows what happens if you attempt to use reflection to call a method that does not exist and access a field that does not exist.</source>
          <target state="translated">이 예제에서는 리플렉션을 사용 하 여 존재 하지 않는 메서드를 호출 하려고 하면 어떤 일이 생기 및 존재 하지 않는 필드 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMemberException">
          <source>The application recovers by catching the <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>, <ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph>, and <ph id="ph3">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
          <target state="translated">Catch 하 여 응용 프로그램 복구는 <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>, <ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.MissingMemberException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.MissingMemberException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Attempted to access a missing member."</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph> 는 새 인스턴스의 속성을 "예: 누락 된 멤버에 액세스 하려고 했습니다."</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">이 메시지는 현재 시스템 문화권을 고려합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 참조(Visual Basic의 경우 <ph id="ph1">`Nothing`</ph>)</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">지역화된 오류 메시지 문자열입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">@FSHO2@오류를 설명하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">지정된 오류 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter should be understandable by the user.</source>
          <target state="translated">콘텐츠는 <ph id="ph1">`message`</ph> 매개 변수는 사용자가 이해할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 참조(Visual Basic의 경우 <ph id="ph1">`Nothing`</ph>)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">원본 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>XML 및 SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that is the cause of the current <ph id="ph2">&lt;see langword="Exception" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph2">&lt;see langword="Exception" /&gt;</ph>의 원인인 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), then the current <ph id="ph2">&lt;see langword="Exception" /&gt;</ph> is raised in a catch block handling <bpt id="p2">&lt;c&gt;</bpt>inner<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept>가 null 참조(Visual Basic의 경우 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)가 아니면 현재 <ph id="ph2">&lt;see langword="Exception" /&gt;</ph>은 catch 블록 처리 <bpt id="p2">&lt;c&gt;</bpt>inner<ept id="p2">&lt;/c&gt;</ept>에서 발생합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the root cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외는 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에 이전 예외에 대한 참조를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달된 값과 같은 값을 반환하거나 <ph id="ph2">`Nothing`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 null 참조(Visual Basic의 경우 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">내부 예외 참조</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.String)">
          <source>The name of the class in which access to a nonexistent member was attempted.</source>
          <target state="translated">존재하지 않는 멤버에 대한 액세스가 시도된 클래스 이름입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.String)">
          <source>The name of the member that cannot be accessed.</source>
          <target state="translated">액세스할 수 없는 멤버 이름입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> class with the specified class name and member name.</source>
          <target state="translated">지정된 클래스 이름과 멤버 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.MissingMemberException.ClassName">
          <source>Holds the class name of the missing member.</source>
          <target state="translated">손실된 멤버의 클래스 이름을 보유합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">원본 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the class name, the member name, the signature of the missing member, and additional exception information.</source>
          <target state="translated">손실된 멤버의 클래스 이름, 멤버 이름 및 시그니처와 추가 예외 정보를 사용하여 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체를 설정합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.TypeLoadException.GetObjectData%2A&gt;</ph> sets a <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with all the exception object data targeted for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TypeLoadException.GetObjectData%2A&gt;</ph>는 serialization을 위해 대상으로 하는 모든 예외 개체 데이터를 사용하여 <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>를 설정합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>During deserialization, the exception object is reconstituted from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> transmitted over the stream.</source>
          <target state="translated">역직렬화 하는 동안 예외 개체에서 다시 구성 되는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> 스트림을 통해 전송 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">serialization 서비스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> 보안 동작: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="F:System.MissingMemberException.MemberName">
          <source>Holds the name of the missing member.</source>
          <target state="translated">손실된 멤버의 이름을 보유합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.MissingMemberException.Message">
          <source>Gets the text string showing the class name, the member name, and the signature of the missing member.</source>
          <target state="translated">클래스 이름, 멤버 이름, 누락된 멤버의 서명을 표시하는 텍스트 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>If the class name is not specified when the object is constructed, the default text string inherited from the base class is returned.</source>
          <target state="translated">개체가 생성 될 경우에 클래스 이름을 지정 하지 않으면, 기본 클래스에서 상속 되며, 기본 텍스트 문자열 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>This property overrides <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>.</source>
          <target state="translated">이 속성을 재정의 <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>The error message should be localized.</source>
          <target state="translated">오류 메시지를 지역화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>This property is read-only.</source>
          <target state="translated">이 속성은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMemberException.Message">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="F:System.MissingMemberException.Signature">
          <source>Holds the signature of the missing member.</source>
          <target state="translated">손실된 멤버의 시그니처를 보유합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.MissingMemberException.Signature">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException.Signature&gt;</ph> contains a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value that represents the signature of the missing member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMemberException.Signature&gt;</ph> 포함 된 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 누락 된 멤버의 시그니처를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.MissingMemberException.Signature">
          <source><ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> is used to format the signature.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> 서명의 서식을 지정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.MissingMemberException.Signature">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.Reflection.Emit.SignatureHelper&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Emit.SignatureToken&gt;</ph>, and <ph id="ph3">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Reflection.Emit.SignatureHelper&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Emit.SignatureToken&gt;</ph> 및 <ph id="ph3">&lt;xref:System.String&gt;</ph>을 참조하십시오.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>