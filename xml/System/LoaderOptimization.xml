<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LoaderOptimization.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59c2bf923c2cbb9c770bc771eff10fb0882c45ba9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c2bf923c2cbb9c770bc771eff10fb0882c45ba9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.LoaderOptimization">
          <source>An enumeration used with the <ph id="ph1">&lt;see cref="T:System.LoaderOptimizationAttribute" /&gt;</ph> class to specify loader optimizations for an executable.</source>
          <target state="translated">실행 파일에 대한 로더 최적화를 지정하도록 <ph id="ph1">&lt;see cref="T:System.LoaderOptimizationAttribute" /&gt;</ph> 클래스에서 사용되는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LoaderOptimization">
          <source>The meaning of MultiDomainHost changed in the .NET Framework version 2.0.</source>
          <target state="translated">MultiDomainHost의 의미는.NET Framework 버전 2.0에서에서 변경 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LoaderOptimization">
          <source>The loader now shares resources across application domains only for assemblies that have been added to the global assembly cache.</source>
          <target state="translated">로더는 이제 전역 어셈블리 캐시에 추가 된 어셈블리에 대해서만 응용 프로그램 도메인 간에 리소스를 공유 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LoaderOptimization">
          <source>If custom code access security policy is set for the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, by using the <ph id="ph2">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph> is created using the MultiDomain flag, the effect is the same as specifying the MultiDomainHost flag; that is, only assemblies in the GAC are shared.</source>
          <target state="translated">사용자 지정 코드 액세스 보안 정책에 설정 되어 있으면는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph> 효과 다중 도메인 플래그를 있는 MultiDomainHost 플래그;에서 전용 어셈블리를 지정 하는 것과 같습니다를 사용 하 여 만들어집니다는 GAC 공유 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LoaderOptimization">
          <source>When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the MultiDomain flag.</source>
          <target state="translated">이 경우 로더 예외를 throw 하지 않는 및 응용 프로그램은 다중 도메인 플래그와 관련 된 성능 향상을 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LoaderOptimization">
          <source>For more information on assembly sharing and domain-neutral assembly loading, see <bpt id="p1">[</bpt>Application Domains and Assemblies<ept id="p1">](http://msdn.microsoft.com/library/433b04ae-4ba8-4849-9dbd-79194f240346)</ept>.</source>
          <target state="translated">공유 어셈블리 및 도메인 중립 어셈블리 로드에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>응용 프로그램 도메인과 어셈블리<ept id="p1">](http://msdn.microsoft.com/library/433b04ae-4ba8-4849-9dbd-79194f240346)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.DisallowBindings">
          <source>Ignored by the common language runtime.</source>
          <target state="translated">공용 언어 런타임에서 무시됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.DomainMask">
          <source>Do not use.</source>
          <target state="translated">사용하지 마십시오.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.DomainMask">
          <source>This mask selects the domain-related values, screening out the unused <ph id="ph1">&lt;see cref="F:System.LoaderOptimization.DisallowBindings" /&gt;</ph> flag.</source>
          <target state="translated">이 마스크는 도메인 관련 값을 선택하고 사용하지 않는 <ph id="ph1">&lt;see cref="F:System.LoaderOptimization.DisallowBindings" /&gt;</ph> 플래그를 제외시킵니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.MultiDomain">
          <source>Indicates that the application will probably have many domains that use the same code, and the loader must share maximal internal resources across application domains.</source>
          <target state="translated">응용 프로그램에 동일한 코드를 사용하는 여러 도메인이 있고, 로더에서 응용 프로그램 도메인 간에 최대 내부 리소스를 공유해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.MultiDomainHost">
          <source>Indicates that the application will probably host unique code in multiple domains, and the loader must share resources across application domains only for globally available (strong-named) assemblies that have been added to the global assembly cache.</source>
          <target state="translated">응용 프로그램에서 여러 도메인에 고유한 코드를 호스트하며, 로더에서 전역 어셈블리 캐시에 추가된 전체적으로 사용 가능한(강력한 이름의) 어셈블리에 대해서만 응용 프로그램 도메인 간에 리소스를 공유해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.NotSpecified">
          <source>Indicates that no optimizations for sharing internal resources are specified.</source>
          <target state="translated">내부 리소스 공유에 대한 최적화가 지정되지 않았음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.NotSpecified">
          <source>If the default domain or hosting interface specified an optimization, then the loader uses that; otherwise, the loader uses <ph id="ph1">&lt;see cref="F:System.LoaderOptimization.SingleDomain" /&gt;</ph>.</source>
          <target state="translated">기본 도메인 또는 호스팅 인터페이스에서 최적화를 지정한 경우 로더는 지정된 최적화 방식을 따르고, 그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.LoaderOptimization.SingleDomain" /&gt;</ph>을 사용합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.SingleDomain">
          <source>Indicates that the application will probably have a single domain, and loader must not share internal resources across application domains.</source>
          <target state="translated">응용 프로그램에 단일 도메인이 있고, 로더에서 응용 프로그램 도메인 간에 내부 리소스를 공유하지 않아야 함을 나타냅니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>