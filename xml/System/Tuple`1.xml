<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Tuple`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53044bd444e3a6c2f61f4d017885cb26a95364fae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3044bd444e3a6c2f61f4d017885cb26a95364fae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`1">
          <source>The type of the tuple's only component.</source>
          <target state="translated">튜플의 유일한 구성 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Tuple`1">
          <source>Represents a 1-tuple, or singleton.</source>
          <target state="translated">1-튜플 또는 단독을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`1">
          <source>A tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">튜플은 특정 수 및 값의 시퀀스를 포함 하는 데이터 구조입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`1">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> class represents a 1-tuple, or singleton, which is a tuple that has a single component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> 1-튜플 또는 singleton 단일 요소가 있는 튜플이 있는 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`1">
          <source>A singleton is used comparatively rarely in application development.</source>
          <target state="translated">Singleton 응용 프로그램 개발에 상대적으로 거의 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`1">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> object by calling either the <ph id="ph2">&lt;xref:System.Tuple%601.%23ctor%2A&gt;</ph> constructor or the static <ph id="ph3">&lt;xref:System.Tuple.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">인스턴스화할 수 있습니다는 <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> 호출 하 여 개체는 <ph id="ph2">&lt;xref:System.Tuple%601.%23ctor%2A&gt;</ph> 생성자 또는 정적 <ph id="ph3">&lt;xref:System.Tuple.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Tuple`1">
          <source>You can retrieve the value of the tuple's single component by using the read-only <ph id="ph1">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> instance property.</source>
          <target state="translated">읽기 전용을 사용 하 여 튜플의 단일 구성의 값을 검색할 수 있습니다 <ph id="ph1">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> 인스턴스 속성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.#ctor(`0)">
          <source>The value of the tuple's only component.</source>
          <target state="translated">튜플의 유일한 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.#ctor(`0)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.#ctor(`0)">
          <source>You can also use the static <ph id="ph1">&lt;xref:System.Tuple.Create%2A?displayProperty=nameWithType&gt;</ph> method to instantiate a 1-tuple object without having to explicitly specify the type of its component.</source>
          <target state="translated">정적을 사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Tuple.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드를 명시적으로 구성 요소의 유형을 지정할 필요 없이 1-튜플 개체를 인스턴스화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.#ctor(`0)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> method to instantiate a 1-tuple whose component is of type <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Tuple.Create%2A&gt;</ph> 메서드를 가진 구성 요소가 형식 1-튜플 인스턴스화하 <ph id="ph2">&lt;xref:System.Int32&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.#ctor(`0)">
          <source>This is equivalent to the following call to the <ph id="ph1">&lt;xref:System.Tuple%601.%23ctor%2A&gt;</ph> class constructor.</source>
          <target state="translated">이 다음 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Tuple%601.%23ctor%2A&gt;</ph> 클래스 생성자입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">이 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 인스턴스가 지정된 개체와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated"><ph id="ph1">`obj`</ph> 매개 변수는 다음과 같은 경우 현재 인스턴스를 동일한 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>It is a <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> object.</source>
          <target state="translated">한 <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>Its single component is of the same type as the current instance.</source>
          <target state="translated">단일 구성 요소는 현재 인스턴스와 동일한 형식입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>Its single component is equal to that of the current instance.</source>
          <target state="translated">단일 구성 요소는 현재 인스턴스의 해당와 같습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>Equality is determined by the default object equality comparer for each component.</source>
          <target state="translated">일치 여부는 각 구성 요소에 대한 기본 개체 같음 비교 연산자에 따라 결정됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Tuple%601.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method to compare a <ph id="ph2">&lt;xref:System.Tuple%601&gt;</ph> object whose component is a <ph id="ph3">&lt;xref:System.Double&gt;</ph> value with three <ph id="ph4">&lt;xref:System.Tuple%601&gt;</ph> objects whose components have the following characteristics:</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Tuple%601.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> 비교 하는 메서드는 <ph id="ph2">&lt;xref:System.Tuple%601&gt;</ph> 해당 구성 요소는 개체는 <ph id="ph3">&lt;xref:System.Double&gt;</ph> 3 개 값 <ph id="ph4">&lt;xref:System.Tuple%601&gt;</ph> 구성 요소는 다음과 같은 특징이 개체:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>Same type (<ph id="ph1">&lt;xref:System.Double&gt;</ph>) and same value.</source>
          <target state="translated">동일한 형식 (<ph id="ph1">&lt;xref:System.Double&gt;</ph>)와 동일한 값입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>Same type (<ph id="ph1">&lt;xref:System.Double&gt;</ph>), but different value.</source>
          <target state="translated">동일한 형식 (<ph id="ph1">&lt;xref:System.Double&gt;</ph>), 하지만 서로 다른 값입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.Equals(System.Object)">
          <source>Different type (<ph id="ph1">&lt;xref:System.Single&gt;</ph>), but same value.</source>
          <target state="translated">다른 유형 (<ph id="ph1">&lt;xref:System.Single&gt;</ph>), 하지만 동일한 값입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체에 대한 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Tuple`1.Item1">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object's single component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체의 단일 구성 요소 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.Item1">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object's single component.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체의 단일 구성 요소 값입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.Item1">
          <source>You can determine the type of the <ph id="ph1">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> component in one of two ways:</source>
          <target state="translated">형식을 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> 두 가지 방법 중 하나에서 구성 요소:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.Item1">
          <source>By calling the <ph id="ph1">`GetType`</ph> method on the value that is returned by the <ph id="ph2">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> property.</source>
          <target state="translated">호출 하 여는 <ph id="ph1">`GetType`</ph> 에서 반환 되는 값에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.Item1">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">&lt;xref:System.Tuple%601&gt;</ph> object, and retrieving the first element from the array that is returned by its <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">검색 하 여는 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 을 나타내는 개체는 <ph id="ph2">&lt;xref:System.Tuple%601&gt;</ph> 개체를 통해 반환 되는 배열에서 첫 번째 요소를 검색 합니다. 해당 <ph id="ph3">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.Item1">
          <source>The example illustrates both approaches.</source>
          <target state="translated">이 예제에서는 두 가지 방법을 모두 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.Item1">
          <source>The following example displays information about two singletons and their components.</source>
          <target state="translated">다음 예제에서는 두 개의 단일 항목 및 해당 구성 요소에 대 한 정보를 표시합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">현재 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">비교를 위한 사용자 지정 규칙을 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">지정된 비교자를 사용하여 현재 <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">다음 표와 같이 정렬 순서에서 이 인스턴스와 <ph id="ph1">&lt;paramref name="other" /&gt;</ph>의 상대적 위치를 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 음의 정수</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 앞에 오는 경우</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스와 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>의 위치가 정렬 순서에서 같은 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 양의 정수</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 다음에 오는 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Although this method can be called directly, it is most commonly called by collection sorting methods that include <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> parameters to order the members of a collection.</source>
          <target state="translated">이 메서드를 직접 호출할 수 있지만 가장 일반적으로 컬렉션 정렬 포함 하는 메서드에 의해 호출 됩니다 <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> 매개 변수를 컬렉션의 멤버를 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>For example, it is called by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object that is instantiated by using the <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">예를 들어에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> 를 사용 하 여 인스턴스화된 개체는 <ph id="ph4">&lt;xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> 정렬 작업에서 사용 하기 위해 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">비교의 기본 목적은 두 개체가 같은지 여부를 결정 하는 경우 하지 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%601.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> method.</source>
          <target state="translated">두 개체가 같은지 여부를 확인 하려면 호출 된 <ph id="ph1">&lt;xref:System.Tuple%601.System%23Collections%23IStructuralEquatable%23Equals%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The following example defines a generic class named <ph id="ph1">`DescendingComparer`</ph> that implements the <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 제네릭 클래스를 정의 <ph id="ph1">`DescendingComparer`</ph> 구현 하는 <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">`DescendingComparer`</ph> sorts objects in descending rather than ascending order by reversing the value returned by the default comparer for a particular type.</source>
          <target state="translated"><ph id="ph1">`DescendingComparer`</ph> 개체를 특정 형식에 대 한 기본 비교 연산자에 따라 반환 되는 값을 반대로 하 여 오름차순이 아닌 내림차순으로 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An instance of the generic <ph id="ph1">`DescendingComparer`</ph> class is then passed to the <ph id="ph2">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method to sort an array of <ph id="ph3">&lt;xref:System.Tuple%601&gt;</ph> objects in descending order.</source>
          <target state="translated">제네릭의 인스턴스 <ph id="ph1">`DescendingComparer`</ph> 클래스에 전달 되는 <ph id="ph2">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> 배열을 정렬 메서드 <ph id="ph3">&lt;xref:System.Tuple%601&gt;</ph> 내림차순으로 정렬 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">이 예제에서는 직접 호출 하지 않는 참고는 <ph id="ph1">&lt;xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> method for each element in the array.</source>
          <target state="translated">이 메서드를 암시적으로 호출 된 <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType&gt;</ph> 메서드는 배열의 각 요소에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체가 아닙니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">이 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">두 개체가 같은지 여부를 평가하는 데 사용할 방법을 정의하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">지정된 비교 메서드를 기반으로 현재 <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 인스턴스가 지정된 개체와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation is called only if <ph id="ph2">`other`</ph> is not <ph id="ph3">`null`</ph>, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <ph id="ph4">&lt;xref:System.Tuple%601&gt;</ph> object whose single component is of the same type as the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> 경우에 구현이 호출 될 <ph id="ph2">`other`</ph> 않습니다 <ph id="ph3">`null`</ph>, 캐스팅 (C#) 또는 변환 (Visual Basic)에서는 성공적으로 하나일 수 있습니다는 <ph id="ph4">&lt;xref:System.Tuple%601&gt;</ph> 단일 구성 요소가 현재 인스턴스와 동일한 형식의 개체입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The method is passed the <ph id="ph1">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> component of the current instance and the <ph id="ph2">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> component of the <ph id="ph3">&lt;xref:System.Tuple%601&gt;</ph> object represented by the <ph id="ph4">`other`</ph> parameter.</source>
          <target state="translated">메서드에 전달 됩니다는 <ph id="ph1">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> 현재 인스턴스의 구성 요소 및 <ph id="ph2">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> 의 구성 요소는 <ph id="ph3">&lt;xref:System.Tuple%601&gt;</ph> 가 나타내는 개체는 <ph id="ph4">`other`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines an <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementation that considers two floating-point values to be equal if they are approximately equal to each other (that is, if one value is within .01 percent of the other).</source>
          <target state="translated">다음 예제에서는 정의 <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> 두 부동 소수점 값 (즉, 내에 있으면 하나의 값은 다른 0.1%)을 서로 약 동일 하면 동일한 것으로 간주 하는 구현 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> 메서드를 사용하여 현재 <ph id="ph2">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체의 해시 코드를 계산하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object by using a specified computation method.</source>
          <target state="translated">지정된 계산 메서드를 사용하여 현재 <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체에 대한 해시 코드를 계산합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The method simply wraps a call to the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">메서드는 단순히 한 호출을 래핑합니다는 <ph id="ph1">`comparer`</ph> 개체의 <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>The algorithm used to compute the hash code should return the same hash code for two <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> objects that are considered to be equal.</source>
          <target state="translated">두에 대 한 해시 코드를 계산 하는 데 사용 되는 알고리즘 같은 해시 코드를 반환 해야 <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> 를 동일한 것으로 간주 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>An object to compare with the current instance.</source>
          <target state="translated">현재 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object to a specified object, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체와 지정된 개체를 비교하고 정렬 순서에서 현재 개체의 위치가 지정된 개체보다 앞인지, 뒤인지 또는 동일한지를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">다음 표와 같이 정렬 순서에서 이 인스턴스와 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>의 상대적 위치를 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 설명</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 음의 정수</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 앞에 오는 경우</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스와 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>의 위치가 정렬 순서에서 같은 경우</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 양의 정수</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 다음에 오는 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.IComparable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>This method provides the <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation for the <ph id="ph2">&lt;xref:System.Tuple%601&gt;</ph> class.</source>
          <target state="translated">이 메서드는 제공 된 <ph id="ph1">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> 에 대 한 구현을 <ph id="ph2">&lt;xref:System.Tuple%601&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, to order the members of a collection.</source>
          <target state="translated">메서드를 직접 호출할 수 있지만 가장 일반적으로 정렬 메서드의 같은 컬렉션의 경우 기본 오버 로드에 의해 호출 됩니다 <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType&gt;</ph>, 컬렉션의 멤버를 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method is intended for use in sorting operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> 정렬 작업에서 사용 하기 위해 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</source>
          <target state="translated">비교의 기본 목적은 두 개체가 같은지 여부를 결정 하는 경우 하지 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>To determine whether two objects are equal, call the <ph id="ph1">&lt;xref:System.Tuple%601.Equals%2A&gt;</ph> method.</source>
          <target state="translated">두 개체가 같은지 여부를 확인 하려면 호출 된 <ph id="ph1">&lt;xref:System.Tuple%601.Equals%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method uses the default object  comparer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> 메서드는 기본 개체 비교 연산자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>The following example creates an array of singletons whose component is a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 해당 구성 요소는 단일 항목의 배열을 만듭니다는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>It displays the value of each tuple component in unsorted order, sorts the array, and then displays the values in sorted order.</source>
          <target state="translated">정렬 되지 않은 순서로 각 튜플 구성의 값을 표시, 고 배열을 정렬 하 고 정렬 순서에 따라 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>Note that the example does not directly call the <ph id="ph1">&lt;xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 예제에서는 직접 호출 하지 않는 참고는 <ph id="ph1">&lt;xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source>This method is called implicitly by the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> method for each element in the array.</source>
          <target state="translated">이 메서드를 암시적으로 호출 된 <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%29&gt;</ph> 메서드는 배열의 각 요소에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체가 아닙니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 요소의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> must be 0.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>는 0이어야 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 요소의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> 속성은 명시적 인터페이스 구현.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">를 호출 하려면 캐스팅 하거나 변환 해야 합니다는 <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> 인터페이스 개체입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작거나 0보다 큽니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph>의 요소 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Length">
          <source>1, the number of elements in a <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체의 요소 수는 1입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A&gt;</ph> 속성은 명시적 인터페이스 구현.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">를 호출 하려면 캐스팅 하거나 변환 해야 합니다는 <ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> 인터페이스 개체입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 인스턴스의 값을 나타내는 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Tuple`1.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Tuple`1" /&gt;</ph> 개체의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>), where <bpt id="p2">*</bpt>Item1<ept id="p2">*</ept> represents the value of the <ph id="ph1">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드에서 반환 된 문자열은 형식 (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>) 여기서 <bpt id="p2">*</bpt>Item1<ept id="p2">*</ept> 의 값을 나타내는 <ph id="ph1">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.ToString">
          <source>If the value of <ph id="ph1">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> is <ph id="ph2">`null`</ph>, it is represented as <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">하는 경우의 값 <ph id="ph1">&lt;xref:System.Tuple%601.Item1%2A&gt;</ph> 은 <ph id="ph2">`null`</ph>로 표시 됩니다 <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Tuple`1.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Tuple%601.ToString%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Tuple%601.ToString%2A&gt;</ph> 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>