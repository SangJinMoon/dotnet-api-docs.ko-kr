<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Environment.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b8f2716206a0d7c4bbbc8310b3ec10e214e0d3af.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8f2716206a0d7c4bbbc8310b3ec10e214e0d3af</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Provides information about, and means to manipulate, the current environment and platform.</source>
          <target state="translated">현재 환경 및 플랫폼에 대한 정보 및 조작 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Environment">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment&gt;</ph> class to retrieve information such as command-line arguments, the exit code, environment variable settings, contents of the call stack, time since last system boot, and the version of the common language runtime.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Environment&gt;</ph> 마지막 시스템 부팅 및 공용 언어 런타임의 버전 이후 명령줄 인수, 종료 코드, 환경 변수 설정, 시간, 호출 스택의 내용을 같은 정보를 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Environment">
          <source>The following example demonstrates displays a list of information about the current environment.</source>
          <target state="translated">다음 예제에서는 현재 환경에 대 한 정보 목록을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Environment.CommandLine">
          <source>Gets the command line for this process.</source>
          <target state="translated">이 프로세스에 대한 명령줄을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>A string containing command-line arguments.</source>
          <target state="translated">명령줄 인수가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>This property provides access to the program name and any arguments specified on the command line when the current process was started.</source>
          <target state="translated">이 속성은 프로그램 이름 및 현재 프로세스를 시작 했을 때 명령줄에 지정 된 인수에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>The program name can  include path information, but is not required to do so.</source>
          <target state="translated">프로그램 이름은 경로 정보를 포함할 수 있지만 이렇게 하는 데 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> method to retrieve the command-line information parsed and stored in an array of strings.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> 명령줄 정보를 검색 하는 메서드는 구문 분석 하 고 문자열의 배열에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>The maximum size of the command-line buffer is not set to a specific number of characters; it varies depending on the Windows operating system that is running on the computer.</source>
          <target state="translated">특정 수의 문자로; 명령줄 버퍼의 최대 크기를 설정 하지 않으면 이 컴퓨터에서 실행 되는 Windows 운영 체제에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>The following example displays its own command line.</source>
          <target state="translated">다음 예제에서는 명령줄을 사용 하는 자체를 표시합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>for read access to the PATH environment variable.</source>
          <target state="translated">PATH 환경 변수에 읽기 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CommandLine">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>Gets or sets the fully qualified path of the current working directory.</source>
          <target state="translated">현재 작업 디렉터리의 정규화된 경로를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>A string containing a directory path.</source>
          <target state="translated">디렉터리 경로가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>By definition, if this process starts in the root directory of a local or network drive, the value of this property is the drive name followed by a trailing slash (for example, "C:<ph id="ph1">\\</ph>").</source>
          <target state="translated">이론적으로는 로컬의 루트 디렉터리 또는 네트워크 드라이브에이 프로세스가 시작 된 경우이 속성의 값은 후행 슬래시 뒤에 오는 드라이브 이름 (예를 들어, "c:<ph id="ph1">\\</ph>").</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>If this process starts in a subdirectory, the value of this property is the drive and subdirectory path, without a trailing slash (for example, "C:\mySubDirectory").</source>
          <target state="translated">하위 디렉터리에이 프로세스가 시작 되 면이 속성의 값은 드라이브와 하위 디렉터리 경로 후행 슬래시 (예: "C:\mySubDirectory") 없이 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>The following example demonstrates setting the <ph id="ph1">&lt;xref:System.Environment.CurrentDirectory%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 설정 된 <ph id="ph1">&lt;xref:System.Environment.CurrentDirectory%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>Attempted to set to an empty string ("").</source>
          <target state="translated">빈 문자열("")로 설정하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>Attempted to set to <ph id="ph1">&lt;see langword="null." /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see langword="null." /&gt;</ph>로 설정하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>Attempted to set a local path that cannot be found.</source>
          <target state="translated">찾을 수 없는 로컬 경로를 설정하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentDirectory">
          <source>The caller does not have the appropriate permission.</source>
          <target state="translated">호출자에게 해당 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>for writing to files or directories in a set operation.</source>
          <target state="translated">set 작업의 파일 또는 디렉터리를 쓰려고 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>for access to the information in the path itself in a get operation.</source>
          <target state="translated">get 작업에서 자체 경로에 대 한 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentDirectory">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Environment.CurrentManagedThreadId">
          <source>Gets a unique identifier for the current managed thread.</source>
          <target state="translated">현재 관리되는 스레드의 고유 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.CurrentManagedThreadId">
          <source>An integer that represents a unique identifier for this managed thread.</source>
          <target state="translated">이 관리되는 스레드의 고유 식별자를 나타내는 정수입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Environment.Exit(System.Int32)">
          <source>The exit code to return to the operating system.</source>
          <target state="translated">운영 체제에 반환할 종료 코드입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Environment.Exit(System.Int32)">
          <source>Use 0 (zero) to indicate that the process completed successfully.</source>
          <target state="translated">프로세스가 완료되었음을 나타내려면 0을 사용합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Environment.Exit(System.Int32)">
          <source>Terminates this process and returns an exit code to the operating system.</source>
          <target state="translated">이 프로세스를 종료하고 운영 체제에 종료 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>For the <ph id="ph1">`exitCode`</ph> parameter, use a non-zero number to indicate an error.</source>
          <target state="translated">에 대 한는 <ph id="ph1">`exitCode`</ph> 매개 변수를 사용 하 여 0이 아닌 숫자는 오류를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>In your application, you can define your own error codes in an enumeration, and return the appropriate error code based on the scenario.</source>
          <target state="translated">응용 프로그램에서 고유한 오류 코드는 열거형에서 정의 하 고 시나리오에 따라 적절 한 오류 코드를 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>For example, return a value of 1 to indicate that the required file is not present, and a value of 2 to indicate that the file is in the wrong format.</source>
          <target state="translated">예를 들어 값이 필요한 파일이 존재 함을 나타내는 1 및 값이 잘못 된 형식으로 파일 임을 나타내기 위해 2 반환 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>For a list of exit codes used by the Windows operating system, see <bpt id="p1">[</bpt>System Error Codes<ept id="p1">](http://msdn.microsoft.com/library/ms681381.aspx)</ept> in the Windows documentation.</source>
          <target state="translated">목록이 Windows 운영 체제에 의해 사용 되는 종료 코드에 대 한 참조 <bpt id="p1">[</bpt>시스템 오류 코드<ept id="p1">](http://msdn.microsoft.com/library/ms681381.aspx)</ept> Windows 설명서의 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> method differs from using your programming language's <ph id="ph2">`return`</ph> statement in the following ways:</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> 방법은 선택한 프로그래밍 언어를 사용 하 여 차이가 <ph id="ph2">`return`</ph> 문은 다음과 같은 방법으로:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> always terminates an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> 항상 응용 프로그램을 종료합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>Using the <ph id="ph1">`return`</ph> statement may terminate an application only if it is used in the application entry point, such as in the <ph id="ph2">`Main`</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">`return`</ph> 문을에서 같은 응용 프로그램 진입점에 사용 됩니다 하는 경우에 응용 프로그램을 종료할 수 있습니다는 <ph id="ph2">`Main`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> terminates an application immediately, even if other threads are running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> 다른 스레드가 실행 하는 경우에 즉시 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>If the <ph id="ph1">`return`</ph> statement is called in the application entry point, it causes an application to terminate only after all foreground threads have terminated.</source>
          <target state="translated">경우는 <ph id="ph1">`return`</ph> 문이 응용 프로그램 진입점에서 호출 될, 응용 프로그램을 모든 포그라운드 스레드 종료 후에 종료 하면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> requires the caller to have permission to call unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> 비관리 코드를 호출할 수 있는 권한이 호출자가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>The <ph id="ph1">`return`</ph> statement does not.</source>
          <target state="translated"><ph id="ph1">`return`</ph> 문에 그렇지 않습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> is called from a <ph id="ph2">`try`</ph> or <ph id="ph3">`catch`</ph> block, the code in any <ph id="ph4">`finally`</ph> block does not execute.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> 에서 호출 되는 <ph id="ph2">`try`</ph> 또는 <ph id="ph3">`catch`</ph> 모든 코드를 차단 <ph id="ph4">`finally`</ph> 블록 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>If the <ph id="ph1">`return`</ph> statement is used, the code in the <ph id="ph2">`finally`</ph> block does execute.</source>
          <target state="translated">경우는 <ph id="ph1">`return`</ph> 문이 사용 되 면 코드에는 <ph id="ph2">`finally`</ph> 블록 실행지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> is called when code in a <bpt id="p1">[</bpt>constrained execution region<ept id="p1">](~/docs/framework/performance/constrained-execution-regions.md)</ept> (CER) is running, the CER will not complete execution.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Environment.Exit%2A&gt;</ph> 될 때 호출 됩니다의 코드는 <bpt id="p1">[</bpt>제약이 있는 실행 영역<ept id="p1">](~/docs/framework/performance/constrained-execution-regions.md)</ept> (CER)에서 실행 되 고, CER 실행 완료 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>If the <ph id="ph1">`return`</ph> statement is used, the CER completes execution.</source>
          <target state="translated">경우는 <ph id="ph1">`return`</ph> 문을 사용, CER 실행을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Environment.Exit(System.Int32)">
          <source>The caller does not have sufficient security permission to perform this function.</source>
          <target state="translated">호출자에게 이 기능을 수행하기 위한 충분한 보안 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>for the ability to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.Exit(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Environment.ExitCode">
          <source>Gets or sets the exit code of the process.</source>
          <target state="translated">프로세스의 종료 코드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>A 32-bit signed integer containing the exit code.</source>
          <target state="translated">종료 코드가 포함된 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The default value is 0 (zero), which indicates that the process completed successfully.</source>
          <target state="translated">기본값은 프로세스가 완료되었음을 나타내는 0입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>If the <ph id="ph1">`Main`</ph> method returns <ph id="ph2">`void`</ph>, you can use this property to set the exit code that will be returned to the calling environment.</source>
          <target state="translated">경우는 <ph id="ph1">`Main`</ph> 메서드 반환 <ph id="ph2">`void`</ph>, 호출 환경에 반환 되는 종료 코드를 설정 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>If <ph id="ph1">`Main`</ph> does not return <ph id="ph2">`void`</ph>, this property is ignored.</source>
          <target state="translated">경우 <ph id="ph1">`Main`</ph> 반환 하지 않는 <ph id="ph2">`void`</ph>,이 속성이 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The initial value of this property is zero.</source>
          <target state="translated">이 속성의 초기 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The <ph id="ph1">&lt;xref:System.Environment.ExitCode%2A&gt;</ph> property is a signed 32-bit integer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.ExitCode%2A&gt;</ph> 속성은 부호 있는 32 비트 정수입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>To prevent the property from returning a negative exit code, you should not use values greater than or equal to 0x80000000.</source>
          <target state="translated">음수 종료 코드를 반환 하는 속성을 방지 하려면 하지 보다 크거나 0x80000000 같은 값을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>Use a non-zero number to indicate an error.</source>
          <target state="translated">오류를 나타내는 데 0이 아닌 숫자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>In your application, you can define your own error codes in an enumeration, and return the appropriate error code based on the scenario.</source>
          <target state="translated">응용 프로그램에서 고유한 오류 코드는 열거형에서 정의 하 고 시나리오에 따라 적절 한 오류 코드를 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>For example, return a value of 1 to indicate that the required file is not present and a value of 2 to indicate that the file is in the wrong format.</source>
          <target state="translated">예를 들어 값이 필요한 파일이 존재 함을 나타내는 1 및 값이 잘못 된 형식으로 파일 임을 나타내기 위해 2 반환 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>For a list of exit codes used by the Windows operating system, see <bpt id="p1">[</bpt>System Error Codes<ept id="p1">](http://msdn.microsoft.com/library/ms681381\(v=vs.85\))</ept> in the Windows documentation.</source>
          <target state="translated">목록이 Windows 운영 체제에 의해 사용 되는 종료 코드에 대 한 참조 <bpt id="p1">[</bpt>시스템 오류 코드<ept id="p1">](http://msdn.microsoft.com/library/ms681381\(v=vs.85\))</ept> Windows 설명서의 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The following is a simple app named Double.exe that doubles an integer value passed to it as a command-line argument.</source>
          <target state="translated">다음은 명령줄 인수로 전달 하는 정수 값을 두 배로 만듭니다 Double.exe 라는 간단한 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The value assigns error codes to the <ph id="ph1">&lt;xref:System.Environment.ExitCode%2A&gt;</ph> property to indicate error conditions.</source>
          <target state="translated">값 할당에 대 한 오류 코드는 <ph id="ph1">&lt;xref:System.Environment.ExitCode%2A&gt;</ph> 속성을 오류 상태를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>Note that you must add a reference to the System.Numerics.dll assembly to successfully compile the example.</source>
          <target state="translated">참고를 성공적으로 예제를 컴파일하려면 System.Numerics.dll 어셈블리에 대 한 참조를 추가 해야 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The example can then be invoked from a batch file such as the following, which makes its error codes accessible by using the <ph id="ph1">`ERRORLEVEL`</ph> command.</source>
          <target state="translated">이 예제를 사용 하 여 해당 오류 코드에 액세스할 수 있게 다음과 같은 배치 파일에서 호출할 수 있습니다는 <ph id="ph1">`ERRORLEVEL`</ph> 명령입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>The following shows some sample output produced by invoking the batch file.</source>
          <target state="translated">다음은 배치 파일을 호출 하 여 생성 되는 몇 가지 샘플 출력입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ExitCode">
          <source>Note that code for Double.exe is identical in function to the following example, except that the former defines an entry point named <ph id="ph1">`Main`</ph> that has no return value, whereas this example defines an entry point named <ph id="ph2">`Main`</ph> that returns an integer.</source>
          <target state="translated">Double.exe는 전자 라는 진입점을 정의 한다는 점을 제외 하면 동일 함수에 다음 예제에서는 해당 코드를 확인 <ph id="ph1">`Main`</ph> 반면 라는 진입점을 정의 하는이 예제에서는 반환 값 없음이 <ph id="ph2">`Main`</ph> 하는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>A string containing the names of zero or more environment variables.</source>
          <target state="translated">0개 이상의 환경 변수 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>Each environment variable is quoted with the percent sign character (%).</source>
          <target state="translated">각 환경 변수는 백분율 기호(%)로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>Replaces the name of each environment variable embedded in the specified string with the string equivalent of the value of the variable, then returns the resulting string.</source>
          <target state="translated">지정된 문자열에 있는 각 환경 변수 이름을 해당 변수의 값에 해당하는 문자열로 바꾼 다음 결과 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>A string with each environment variable replaced by its value.</source>
          <target state="translated">각 환경 변수가 해당 값으로 바뀌는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>COM interop is used to retrieve the environment variables from the operating system.</source>
          <target state="translated">COM interop는 운영 체제에서 환경 변수를 검색 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>If the environment variables cannot be retrieved due to a COM error, the HRESULT that explains the cause of the failure is used to generate one of several possible exceptions; that is, the exception depends on the HRESULT.</source>
          <target state="translated">HRESULT는 실패의 원인을 설명 하는 몇 가지 가능한 예외; 중 하나를 생성 하는 데 사용 COM 오류 때문에 환경 변수를 검색할 수 없는 경우 즉, 예외는 HRESULT에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>For more information about how the HRESULT is processed, see the Remarks section of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">HRESULT 처리 되는 방식에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>Replacement only occurs for environment variables that are set.</source>
          <target state="translated">설정 된 환경 변수에 대 한 대체만 발생 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>For example, suppose <ph id="ph1">`name`</ph> is "MyENV = %MyENV%".</source>
          <target state="translated">예를 들어 <ph id="ph1">`name`</ph> 은 "MyENV = % MyENV %"입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>If the environment variable, MyENV, is set to 42, this method returns "MyENV = 42".</source>
          <target state="translated">이 메서드가 반환 하는 경우 환경 변수 MyENV, 42로 설정 되어, "MyENV 42 =".</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>If MyENV is not set, no change occurs; this method returns "MyENV = %MyENV%".</source>
          <target state="translated">MyENV 설정 되지 않은 경우에 변경 되지 발생 합니다. 이 메서드가 반환 "MyENV = % MyENV %"입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>The size of the return value is limited to 32K.</source>
          <target state="translated">반환 값의 크기는 32k 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>The following example shows how to obtain the system drive and system root variables.</source>
          <target state="translated">다음 예제에는 시스템 드라이브 및 시스템 루트 변수를 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>for the ability to access the environment variables in <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">환경 변수에 액세스 하는 기능에 대 한 <ph id="ph1">&lt;paramref name="name" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.ExpandEnvironmentVariables(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and optional exception information in error reporting to Microsoft.</source>
          <target state="translated">Windows 응용 프로그램 이벤트 로그에 메시지를 쓴 후 프로세스를 즉시 종료한 다음 해당 메시지와 선택적 예외 정보를 Microsoft로 보내는 오류 보고에 포함시킵니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String)">
          <source>A message that explains why the process was terminated, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no explanation is provided.</source>
          <target state="translated">프로세스가 종료된 이유를 설명하는 메시지이거나, 설명이 제공되지 않는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String)">
          <source>Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message in error reporting to Microsoft.</source>
          <target state="translated">Windows 응용 프로그램 이벤트 로그에 메시지를 쓴 후 프로세스를 즉시 종료한 다음 해당 메시지를 Microsoft로 보내는 오류 보고에 포함시킵니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>This method terminates a process without running any active <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`finally`</ph> blocks or finalizers.</source>
          <target state="translated">이 메서드는 활성 실행 하지 않고는 프로세스를 종료 <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`finally`</ph> 블록 또는 종료자 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> method writes the <ph id="ph2">`message`</ph> string to the Windows Application event log, creates a dump of your application, and then terminates the current process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> 메서드 쓰기는 <ph id="ph2">`message`</ph> 문자열 Windows 응용 프로그램 이벤트 로그에 응용 프로그램의 덤프를 만들고 다음 현재 프로세스를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>The <ph id="ph1">`message`</ph> string is also included in error reporting to Microsoft.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 문자열 오류를 Microsoft로 보고에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Environment.Exit%2A&gt;</ph> method to terminate your application if the state of your application is damaged beyond repair, and executing your application's <ph id="ph3">`try`</ph><ph id="ph4">/</ph><ph id="ph5">`finally`</ph> blocks and finalizers will corrupt program resources.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> 메서드 대신는 <ph id="ph2">&lt;xref:System.Environment.Exit%2A&gt;</ph> 응용 프로그램의 상태는 복구할 수 없을 정도로 손상 된 경우 응용 프로그램을 종료 하는 메서드 및 응용 프로그램의 실행 <ph id="ph3">`try`</ph> <ph id="ph4">/</ph> <ph id="ph5">`finally`</ph> 블록 및 종료자 프로그램 리소스를 손상 됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>Information is reported to Microsoft by using Windows Error Reporting.</source>
          <target state="translated">정보는 Windows 오류 보고를 사용 하 여 Microsoft로 보고 됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Windows Error Reporting: Getting Started<ept id="p1">](http://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows 오류 보고: Getting Started<ept id="p1">](http://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>The following example writes a log entry to the Windows Application event log and terminates the current process.</source>
          <target state="translated">다음 예제에서는 Windows 응용 프로그램 이벤트 로그에 로그 항목을 기록 하 고 현재 프로세스를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>A message that explains why the process was terminated, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no explanation is provided.</source>
          <target state="translated">프로세스가 종료된 이유를 설명하는 메시지이거나, 설명이 제공되지 않는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>An exception that represents the error that caused the termination.</source>
          <target state="translated">종료의 원인이 된 오류를 나타내는 예외입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>This is typically the exception in a <ph id="ph1">&lt;see langword="catch" /&gt;</ph> block.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;see langword="catch" /&gt;</ph> 블록의 예외입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and exception information in error reporting to Microsoft.</source>
          <target state="translated">Windows 응용 프로그램 이벤트 로그에 메시지를 쓴 후 프로세스를 즉시 종료한 다음 해당 메시지와 예외 정보를 Microsoft로 보내는 오류 보고에 포함시킵니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>This method terminates the process without running any active <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`finally`</ph> blocks or finalizers.</source>
          <target state="translated">이 메서드는 활성 실행 하지 않고 프로세스를 종료 <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`finally`</ph> 블록 또는 종료자 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> method writes the <ph id="ph2">`message`</ph> string to the Windows Application event log, creates a dump of your application, and then terminates the current process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> 메서드 쓰기는 <ph id="ph2">`message`</ph> 문자열 Windows 응용 프로그램 이벤트 로그에 응용 프로그램의 덤프를 만들고 다음 현재 프로세스를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>Information is reported to Microsoft by using Windows Error Reporting.</source>
          <target state="translated">정보는 Windows 오류 보고를 사용 하 여 Microsoft로 보고 됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>For more information, see <bpt id="p1">[</bpt>Windows Error Reporting: Getting Started<ept id="p1">](http://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Windows 오류 보고: Getting Started<ept id="p1">](http://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>Error reporting to Microsoft includes <ph id="ph1">`message`</ph> and <ph id="ph2">`exception`</ph> information, which provides details used to classify the error.</source>
          <target state="translated">오류를 Microsoft로 보고 포함 <ph id="ph1">`message`</ph> 및 <ph id="ph2">`exception`</ph> 정보는 오류를 분류 하는 데 사용 되는 세부 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>Although <ph id="ph1">`exception`</ph> is not handled because the process is terminated, the contextual information that raised the exception is still obtained.</source>
          <target state="translated">하지만 <ph id="ph1">`exception`</ph> 는 프로세스가 종료 되기 때문에 처리 되지 예외를 발생 시킨 컨텍스트 정보를 얻을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>If <ph id="ph1">`exception`</ph> is <ph id="ph2">`null`</ph>, or if <ph id="ph3">`exception`</ph> is not thrown, this method operates the same as the <ph id="ph4">&lt;xref:System.Environment.FailFast%28System.String%29&gt;</ph> method overload.</source>
          <target state="translated">경우 <ph id="ph1">`exception`</ph> 은 <ph id="ph2">`null`</ph>, if 또는 <ph id="ph3">`exception`</ph> 가 throw 되지 않는이 메서드에 동일한 방식으로 작동는 <ph id="ph4">&lt;xref:System.Environment.FailFast%28System.String%29&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Environment.Exit%2A&gt;</ph> method to terminate your application if the state of your application is damaged beyond repair, and executing your application's <ph id="ph3">`try`</ph><ph id="ph4">/</ph><ph id="ph5">`finally`</ph> blocks and finalizers will corrupt program resources.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Environment.FailFast%2A&gt;</ph> 메서드 대신는 <ph id="ph2">&lt;xref:System.Environment.Exit%2A&gt;</ph> 응용 프로그램의 상태는 복구할 수 없을 정도로 손상 된 경우 응용 프로그램을 종료 하는 메서드 및 응용 프로그램의 실행 <ph id="ph3">`try`</ph> <ph id="ph4">/</ph> <ph id="ph5">`finally`</ph> 블록 및 종료자 프로그램 리소스를 손상 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.FailFast(System.String,System.Exception)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Environment.GetCommandLineArgs">
          <source>Returns a string array containing the command-line arguments for the current process.</source>
          <target state="translated">현재 프로세스에 대한 명령줄 인수가 포함된 문자열 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Environment.GetCommandLineArgs">
          <source>An array of string where each element contains a command-line argument.</source>
          <target state="translated">각 요소에 명령줄 인수가 포함된 문자열의 배열입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Environment.GetCommandLineArgs">
          <source>The first element is the executable file name, and the following zero or more elements contain the remaining command-line arguments.</source>
          <target state="translated">첫 번째 요소는 실행 파일 이름이며 다음에 나오는 0개 이상의 요소에는 나머지 명령줄 인수가 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The first element in the array contains the file name of the executing program.</source>
          <target state="translated">배열의 첫 번째 요소에는 실행 중인 프로그램의 파일 이름을 포함합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>If the file name is not available, the first element is equal to <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">첫 번째 요소는 같은 파일 이름을 사용할 수 없는 경우 <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The remaining elements contain any additional tokens entered on the command line.</source>
          <target state="translated">나머지 요소는 명령줄에 입력 한 추가 토큰을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The program file name can, but is not required to, include path information.</source>
          <target state="translated">프로그램 파일 이름. 하지만 경로 정보를 포함 하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>Command line arguments are delimited by spaces.</source>
          <target state="translated">명령줄 인수는 공백으로 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>You can use double quotation marks (") to include spaces within an argument.</source>
          <target state="translated">인수 내에 공백을 포함 하도록 큰따옴표 (")를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The single quotation mark ('), however, does not provide this functionality.</source>
          <target state="translated">그러나 작은따옴표 (')는이 기능을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>If a double quotation mark follows two or an even number of backslashes, each proceeding backslash pair is replaced with one backslash and the double quotation mark is removed.</source>
          <target state="translated">큰따옴표 뒤 2 개 또는 백슬래시 수가 짝수인 경우 각 백슬래시 쌍은 하나 이상의 백슬래시도 대체 하 고 큰따옴표 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>If a double quotation mark follows an odd number of backslashes, including just one, each preceding pair is replaced with one backslash and the remaining backslash is removed; however, in this case the double quotation mark is not removed.</source>
          <target state="translated">큰따옴표 뒤에 백슬래시를 하나 또는 수가 홀수인 경우 각 이전 쌍 하나의 백슬래시로 대체 되 고 나머지 백슬래시 제거 됩니다. 그러나이 경우 큰따옴표 제거 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The following table shows how command line arguments can be delimited, and assumes <ph id="ph1">`MyApp`</ph> as the current executing application.</source>
          <target state="translated">다음 표는 명령줄 인수 구분 기호로 분리 된, 수 있는 방법을 보여 주고 가정 <ph id="ph1">`MyApp`</ph> 현재 실행 중인 응용 프로그램으로 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>Input at the command line</source>
          <target state="translated">명령줄에 입력 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>Resulting command line arguments</source>
          <target state="translated">결과 명령줄 인수</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>To obtain the command line as a single string, use the <ph id="ph1">&lt;xref:System.Environment.CommandLine%2A&gt;</ph> property.</source>
          <target state="translated">명령줄을 단일 문자열로 가져오려면는 <ph id="ph1">&lt;xref:System.Environment.CommandLine%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>The following example displays the application's command line arguments.</source>
          <target state="translated">다음 예제에서는 응용 프로그램의 명령줄 인수를 표시합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Environment.GetCommandLineArgs">
          <source>The system does not support command-line arguments.</source>
          <target state="translated">시스템에서 명령줄 인수를 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>for read access to the PATH environment variable.</source>
          <target state="translated">PATH 환경 변수에 읽기 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetCommandLineArgs">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Retrieves the value of an environment variable.</source>
          <target state="translated">환경 변수 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The name of the environment variable.</source>
          <target state="translated">환경 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>Retrieves the value of an environment variable from the current process.</source>
          <target state="translated">현재 프로세스에서 환경 변수의 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The value of the environment variable specified by <ph id="ph1">&lt;paramref name="variable" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the environment variable is not found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph>로 지정한 환경 변수의 값이 반환되거나, 환경 변수를 찾을 수 없는 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%28System.String%29&gt;</ph> method retrieves an environment variable from the environment block of the current process only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%28System.String%29&gt;</ph> 메서드는 현재 프로세스의 환경 블록에서 환경 변수를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%28System.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> method with a <ph id="ph2">`target`</ph> value of <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%28System.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> 메서드는 <ph id="ph2">`target`</ph> 값 <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The environment block of the current process includes the following environment variables:</source>
          <target state="translated">현재 프로세스의 환경 블록에 다음과 같은 환경 변수를 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>All per-machine environment variables that are defined at the time the process is created, along with their values.</source>
          <target state="translated">모든 컴퓨터에서 해당 값과 함께 프로세스를 만들 때 정의 되는 환경 변수입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>All per-user environment variables that are defined at the time the process is created, along with their values.</source>
          <target state="translated">시간에 정의 된 모든 사용자 환경 변수는 프로세스가 해당 값과 함께 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>Any variables added to the process block while the process is running by calling either the <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> method with a <ph id="ph3">`target`</ph> value of <ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">호출 하 여 진행 하는 동안 프로세스 블록에 추가 된 모든 변수는 <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29&gt;</ph> 메서드 또는 <ph id="ph2">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> 메서드는 <ph id="ph3">`target`</ph> 값 <ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>If environment variables are created after the process has started, you can use this method to retrieve only those variables that were created by calling the <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> method with a <ph id="ph3">`target`</ph> value of .<ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">환경 변수는 프로세스가 시작 된 후에 생성 되 면를 호출 하 여 생성 된 해당 변수를 검색 합니다.이 메서드를 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29&gt;</ph> 메서드 또는 <ph id="ph2">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> 메서드는 <ph id="ph3">`target`</ph> 값.<ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>To retrieve all environment variables along with their values, call the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph> method.</source>
          <target state="translated">해당 값과 함께 모든 환경 변수를 검색 하려면는 <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>Environment variable names are not case-sensitive.</source>
          <target state="translated">환경 변수 이름은 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%2A&gt;</ph> method to retrieve the <ph id="ph2">`windir`</ph> environment variable, which contains the path of the Windows directory.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariable%2A&gt;</ph> 를 검색할 메서드는 <ph id="ph2">`windir`</ph> 환경 변수를 Windows 디렉터리의 경로 포함 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The following example attempts to retrieve the value of an environment variable named <ph id="ph1">`Test1`</ph> from the process environment block.</source>
          <target state="translated">다음 예에서는 라는 환경 변수 값을 검색 하려고 하는데 <ph id="ph1">`Test1`</ph> 프로세스 환경 블록에서 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>If the variable doesn't exist, the example creates its and retrieves its value.</source>
          <target state="translated">이 예에서는 만듭니다 변수가 존재 하지 않으면 해당 하 고 해당 값을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The example displays the value of the variable.</source>
          <target state="translated">이 예제에서는 변수 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>If the example created the variable, it also calls the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29&gt;</ph> method with each member of the <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget&gt;</ph> enumeration to establish that the variable can be retrieved only from the current process environment block.</source>
          <target state="translated">또한 호출의 예에서는 변수를 만든 경우의 <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29&gt;</ph> 의 각 멤버와 메서드는 <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget&gt;</ph> 현재 프로세스 환경 블록의 변수를 검색할 수 있는 설정 하는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>Finally, if the example created the variable, it deletes it.</source>
          <target state="translated">마지막으로,이 예제에서는 변수를 만든 경우이 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>The caller does not have the required permission to perform this operation.</source>
          <target state="translated">호출자에게 이 작업을 수행하는 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>for the ability to read the value of <ph id="ph1">&lt;paramref name="variable" /&gt;</ph>.</source>
          <target state="translated">값을 읽을 수 있는 기능에 대 한 <ph id="ph1">&lt;paramref name="variable" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>The name of an environment variable.</source>
          <target state="translated">환경 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>Retrieves the value of an environment variable from the current process or from the Windows operating system registry key for the current user or local machine.</source>
          <target state="translated">현재 프로세스 또는 현재 사용자나 로컬 컴퓨터의 Windows 운영 체제 레지스트리 키에서 환경 변수의 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>The value of the environment variable specified by the <ph id="ph1">&lt;paramref name="variable" /&gt;</ph> and <ph id="ph2">&lt;paramref name="target" /&gt;</ph> parameters, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the environment variable is not found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="target" /&gt;</ph> 매개 변수로 지정한 환경 변수의 값이 반환되거나, 환경 변수를 찾을 수 없는 경우 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>The <ph id="ph1">`target`</ph> parameter specifies whether the environment variable is retrieved from the current process or from the Windows operating system registry key for the current user or local machine.</source>
          <target state="translated"><ph id="ph1">`target`</ph> 매개 변수는 현재 프로세스 또는 현재 사용자나 로컬 컴퓨터에 대 한 Windows 운영 체제 레지스트리 키에서 환경 변수는 검색할 수 있는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>All per-user and per-machine environment variables are automatically copied into the environment block of the current process.</source>
          <target state="translated">모든 사용자 및 컴퓨터 단위로 환경 변수는 현재 프로세스의 환경 블록에 자동으로 복사 됩니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>However, environment variables added only to the environment block of the current process  persist only for the duration of the process.</source>
          <target state="translated">그러나 현재 프로세스의 환경 블록에만 추가 하는 환경 변수 프로세스의 기간에만 유지 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>To retrieve all environment variables along with their values, call the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph> method.</source>
          <target state="translated">해당 값과 함께 모든 환경 변수를 검색 하려면는 <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>Environment variable names are not case-sensitive.</source>
          <target state="translated">환경 변수 이름은 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>The following example creates environment variables for the Process, User, and Machine targets, checks whether the operating system registry contains the User and Machine environment variables, then deletes the environment variables.</source>
          <target state="translated">다음 예제에서는 프로세스, 사용자 및 컴퓨터 대상에 대 한 환경 변수를 만들고, 확인 여부를 운영 체제 레지스트리에 사용자와 컴퓨터 환경 변수를 포함 한 다음 환경 변수를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>The caller does not have the required permission to perform this operation.</source>
          <target state="translated">호출자에게 이 작업을 수행하는 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>for the ability to read the value of <ph id="ph1">&lt;paramref name="variable" /&gt;</ph> if <ph id="ph2">&lt;paramref name="target" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph> (Associated enumeration: <ph id="ph4">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph>),</source>
          <target state="translated">값을 읽을 수 있는 기능에 대 한 <ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 경우 <ph id="ph2">&lt;paramref name="target" /&gt;</ph> 은 <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph> (연관 된 열거형: <ph id="ph4">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph>),</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>or</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
          <source>for full access to environment variables if <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph> (Associated enumeration: <ph id="ph4">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>).</source>
          <target state="translated">환경 변수를 전체 액세스 권한의 경우 <ph id="ph1">&lt;paramref name="target" /&gt;</ph> 은 <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph> (연관 된 열거형: <ph id="ph4">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Retrieves all environment variable names and their values.</source>
          <target state="translated">모든 환경 변수 이름과 해당 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables">
          <source>Retrieves all environment variable names and their values from the current process.</source>
          <target state="translated">현재 프로세스에서 모든 환경 변수 이름과 해당 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables">
          <source>A dictionary that contains all environment variable names and their values; otherwise, an empty dictionary if no environment variables are found.</source>
          <target state="translated">모든 환경 변수 이름과 해당 값을 포함하는 사전이 반환되고, 환경 변수를 찾을 수 없는 경우 빈 사전이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables">
          <source>The names and values for the environment variables are stored as key-value pairs in the returned <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>.</source>
          <target state="translated">이름 및 환경 변수에 대 한 값은 반환 된 키-값 쌍으로 저장 됩니다 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables">
          <source>The caller does not have the required permission to perform this operation.</source>
          <target state="translated">호출자에게 이 작업을 수행하는 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables">
          <source>The buffer is out of memory.</source>
          <target state="translated">버퍼 메모리가 부족합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables">
          <source>for the ability to read the names and values of environment variables.</source>
          <target state="translated">이름 및 환경 변수 값을 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>Retrieves all environment variable names and their values from the current process, or from the Windows operating system registry key for the current user or local machine.</source>
          <target state="translated">현재 프로세스 또는 현재 사용자나 로컬 컴퓨터의 Windows 운영 체제 레지스트리 키에서 모든 환경 변수 이름과 해당 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>A dictionary that contains all environment variable names and their values from the source specified by the <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter; otherwise, an empty dictionary if no environment variables are found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 매개 변수로 지정한 원본의 모든 환경 변수 이름과 해당 값을 포함하는 사전이 반환되거나, 환경 변수를 찾을 수 없는 경우 빈 사전이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>The <ph id="ph1">`target`</ph> parameter specifies whether the source is the current process, the registry key for the current user, or the registry key for the local machine.</source>
          <target state="translated"><ph id="ph1">`target`</ph> 매개 변수는 현재 프로세스, 현재 사용자에 대 한 레지스트리 키 또는 로컬 컴퓨터에 대 한 레지스트리 키 원본 인지를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>The names and values of the environment variables are stored as key/value pairs in the returned <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object.</source>
          <target state="translated">이름 및 환경 변수 값은 반환 된 키/값 쌍으로 저장 됩니다 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>The following example creates environment variables for the Process, User, and Machine targets, checks whether the operating system registry contains the User and Machine environment variables, then deletes the environment variables.</source>
          <target state="translated">다음 예제에서는 프로세스, 사용자 및 컴퓨터 대상에 대 한 환경 변수를 만들고, 확인 여부를 운영 체제 레지스트리에 사용자와 컴퓨터 환경 변수를 포함 한 다음 환경 변수를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>The caller does not have the required permission to perform this operation for the specified value of <ph id="ph1">&lt;paramref name="target" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;paramref name="target" /&gt;</ph> 값에 대해 이 작업을 수행하는 데 필요한 권한이 호출자에게 없는 경우</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> contains an illegal value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>에 잘못된 값이 포함된 경우</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>for the ability to read the names and values of environment variables if <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph> (Associated enumeration: <ph id="ph3">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph>),</source>
          <target state="translated">하는 경우 이름 및 환경 변수 값을 읽을 수 있는 기능에 대 한 <ph id="ph1">&lt;paramref name="target" /&gt;</ph> 은 <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph> (연관 된 열거형: <ph id="ph3">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph>),</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>or</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
          <source>for full access to environment variables if <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph> (Associated enumeration: <ph id="ph4">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>).</source>
          <target state="translated">환경 변수를 전체 액세스 권한의 경우 <ph id="ph1">&lt;paramref name="target" /&gt;</ph> 은 <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph> (연관 된 열거형: <ph id="ph4">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Gets the path to the system special folder that is identified by the specified enumeration.</source>
          <target state="translated">지정된 열거형으로 식별되는 시스템 특수 폴더의 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>An enumerated constant that identifies a system special folder.</source>
          <target state="translated">시스템 관련 폴더를 식별하는 열거형 상수입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>Gets the path to the system special folder that is identified by the specified enumeration.</source>
          <target state="translated">지정된 열거형으로 식별되는 시스템 특수 폴더의 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").</source>
          <target state="translated">해당 폴더가 실제로 컴퓨터에 있으면 지정한 시스템 특수 폴더에 대한 경로이고, 그렇지 않으면 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</source>
          <target state="translated">운영 체제에서 폴더를 만들지 않았거나, 기존 폴더가 삭제되었거나, 폴더가 My Computer와 같이 실제 경로에 해당하지 않는 가상 디렉터리인 경우 해당 폴더는 실제로 존재하지 않습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>This method retrieves the path to a system special folder, such as Program Files, Programs, System, or Startup, which can be used to access common information.</source>
          <target state="translated">이 메서드는 프로그램 파일, 프로그램, 시스템 또는 공용 정보에 액세스 하려면 사용할 수 있는 시작 등 시스템 특수 폴더의 경로를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>Special folders are set by default by the system, or explicitly by the user, when installing a version of Windows.</source>
          <target state="translated">특수 폴더는 기본적으로 설정 또는 명시적으로 사용자를 시스템에서 Windows 버전을 설치 하는 경우.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>The <ph id="ph1">`folder`</ph> parameter designates the special folder to retrieve and must be one of the values in the <ph id="ph2">&lt;xref:System.Environment.SpecialFolder&gt;</ph> enumeration; any other value throws an exception.</source>
          <target state="translated"><ph id="ph1">`folder`</ph> 매개 변수는 특수 폴더는 검색은 지정 하 고 있는 값 중 하나 여야 합니다는 <ph id="ph2">&lt;xref:System.Environment.SpecialFolder&gt;</ph> 열거는 모든 다른 값이 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>For more information about special folders, see the <bpt id="p1">[</bpt>CSIDL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=116664)</ept> values topic.</source>
          <target state="translated">특수 폴더에 대 한 자세한 내용은 참조는 <bpt id="p1">[</bpt>CSIDL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=116664)</ept> 값 항목입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Environment.GetFolderPath%2A&gt;</ph> method to return and display the path associated with the <ph id="ph2">`folder`</ph> parameter.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Environment.GetFolderPath%2A&gt;</ph> 반환 하 고 연관 된 경로 표시 하는 메서드는 <ph id="ph2">`folder`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source><ph id="ph1">&lt;paramref name="folder" /&gt;</ph> is not a member of <ph id="ph2">&lt;see cref="T:System.Environment.SpecialFolder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="folder" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Environment.SpecialFolder" /&gt;</ph>의 멤버가 아닌 경우</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>The current platform is not supported.</source>
          <target state="translated">현재 플랫폼이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>for access to the information in the path itself.</source>
          <target state="translated">경로 자체의 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>An enumerated constant that identifies a system special folder.</source>
          <target state="translated">시스템 관련 폴더를 식별하는 열거형 상수입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>Specifies options to use for accessing a special folder.</source>
          <target state="translated">특수 폴더에 액세스하는 데 사용할 옵션을 지정합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>Gets the path to the system special folder that is identified by the specified enumeration, and uses a specified option for accessing special folders.</source>
          <target state="translated">지정된 열거형으로 식별되는 시스템 특수 폴더에 대한 경로를 가져오고 특수 폴더에 액세스하는 데 지정한 옵션을 사용합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").</source>
          <target state="translated">해당 폴더가 실제로 컴퓨터에 있으면 지정한 시스템 특수 폴더에 대한 경로이고, 그렇지 않으면 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</source>
          <target state="translated">운영 체제에서 폴더를 만들지 않았거나, 기존 폴더가 삭제되었거나, 폴더가 My Computer와 같이 실제 경로에 해당하지 않는 가상 디렉터리인 경우 해당 폴더는 실제로 존재하지 않습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>This method retrieves the path to a system special folder, such as Program Files, Programs, System, or Startup, which can be used to access common information.</source>
          <target state="translated">이 메서드는 프로그램 파일, 프로그램, 시스템 또는 공용 정보에 액세스 하려면 사용할 수 있는 시작 등 시스템 특수 폴더의 경로를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>Special folders are set by default by the system, or explicitly by the user, when installing a version of Windows.</source>
          <target state="translated">특수 폴더는 기본적으로 설정 또는 명시적으로 사용자를 시스템에서 Windows 버전을 설치 하는 경우.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>The <ph id="ph1">`folder`</ph> parameter designates the special folder to retrieve and must be one of the values in the <ph id="ph2">&lt;xref:System.Environment.SpecialFolder&gt;</ph> enumeration; any other value throws an exception.</source>
          <target state="translated"><ph id="ph1">`folder`</ph> 매개 변수는 특수 폴더는 검색은 지정 하 고 있는 값 중 하나 여야 합니다는 <ph id="ph2">&lt;xref:System.Environment.SpecialFolder&gt;</ph> 열거는 모든 다른 값이 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>For more information about special folders, see the <bpt id="p1">[</bpt>CSIDL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=116664)</ept> values topic.</source>
          <target state="translated">특수 폴더에 대 한 자세한 내용은 참조는 <bpt id="p1">[</bpt>CSIDL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=116664)</ept> 값 항목입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source><ph id="ph1">&lt;paramref name="folder" /&gt;</ph> is not a member of <ph id="ph2">&lt;see cref="T:System.Environment.SpecialFolder" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="folder" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Environment.SpecialFolder" /&gt;</ph>의 멤버가 아닌 경우</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>for access to the information in the path itself.</source>
          <target state="translated">경로 자체의 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Environment.GetLogicalDrives">
          <source>Returns an array of string containing the names of the logical drives on the current computer.</source>
          <target state="translated">현재 컴퓨터의 논리 드라이브 이름이 포함된 문자열의 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Environment.GetLogicalDrives">
          <source>An array of strings where each element contains the name of a logical drive.</source>
          <target state="translated">각 요소에 논리 드라이브의 이름이 포함된 문자열의 배열입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Environment.GetLogicalDrives">
          <source>For example, if the computer's hard drive is the first logical drive, the first element returned is "C:<ph id="ph1">\\</ph>".</source>
          <target state="translated">예를 들어 컴퓨터의 하드 드라이브가 첫 번째 논리 드라이브일 경우, 반환되는 첫 번째 요소는 "C:<ph id="ph1">\\</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetLogicalDrives">
          <source>The following example shows how to display the logical drives of the current computer using the <ph id="ph1">&lt;xref:System.Environment.GetLogicalDrives%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 사용 하 여 현재 컴퓨터의 논리 드라이브를 표시 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Environment.GetLogicalDrives%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Environment.GetLogicalDrives">
          <source>An I/O error occurs.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Environment.GetLogicalDrives">
          <source>The caller does not have the required permissions.</source>
          <target state="translated">호출자에게 필요한 사용 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetLogicalDrives">
          <source>for full access to the resource protected by this permission.</source>
          <target state="translated">이 사용 권한으로 보호 되는 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.GetLogicalDrives">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Environment.HasShutdownStarted">
          <source>Gets a value that indicates whether the current application domain is being unloaded or the common language runtime (CLR) is shutting down.</source>
          <target state="translated">현재 응용 프로그램 도메인이 언로드되고 있는지 또는 CLR(공용 언어 런타임)이 종료되고 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current application domain is being unloaded or the CLR is shutting down; otherwise, <ph id="ph2">&lt;see langword="false." /&gt;</ph></source>
          <target state="translated">현재 응용 프로그램 도메인이 언로드되거나 CLR이 종료되는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false." /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>When the CLR unloads an application domain, it runs the finalizers on all objects that have a finalizer method in that application domain.</source>
          <target state="translated">CLR이 응용 프로그램 도메인이 언로드되면 종료자 메서드에 해당 응용 프로그램 도메인에 포함 된 모든 개체에는 종료 자가 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>When the CLR shuts down, it starts the finalizer thread on all objects that have a finalizer method.</source>
          <target state="translated">CLR 종료 되 면 종료자 메서드가 모든 개체에 대해 종료자 스레드를 시작 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>The <ph id="ph1">&lt;xref:System.Environment.HasShutdownStarted%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> only after the finalizer thread has been started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.HasShutdownStarted%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`true`</ph> 종료자 스레드가 시작 된 후에 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>When the property returns <ph id="ph1">`true`</ph>, you can determine whether an application domain is being unloaded or the CLR itself is shutting down by calling the <ph id="ph2">&lt;xref:System.AppDomain.IsFinalizingForUnload%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">속성이 반환 하는 경우 <ph id="ph1">`true`</ph>, 응용 프로그램 도메인이 언로드되고 또는 CLR 자체 종료 되 고 호출 하 여 확인할 수는 <ph id="ph2">&lt;xref:System.AppDomain.IsFinalizingForUnload%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>This method returns <ph id="ph1">`true`</ph> if finalizers are called because the application domain is unloading or <ph id="ph2">`false`</ph> if the CLR is shutting down.</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`true`</ph> 응용 프로그램 도메인이 언로드되고 때문에 종료 자가 호출 하는 경우 또는 <ph id="ph2">`false`</ph> CLR를 종료 하는 경우.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>The <ph id="ph1">&lt;xref:System.Environment.HasShutdownStarted%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> if the finalizer thread has not been started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.HasShutdownStarted%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`false`</ph> 종료자 스레드가 시작 되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>By using this property, you can determine whether to access static variables in your finalization code.</source>
          <target state="translated">이 속성을 사용 하면 정적 변수 종료 코드에서 액세스할 지 여부를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>If either an application domain or the CLR is shutting down, you cannot reliably access any object that has a finalization method and that is referenced by a static field.</source>
          <target state="translated">응용 프로그램 도메인 또는 CLR 종료 되 면 종료 메서드를 포함 하는 개체에 대 한 정적 필드 안정적으로 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.HasShutdownStarted">
          <source>This is because these objects may have already been finalized.</source>
          <target state="translated">이러한 개체 수 이미 종료 되었을 때문입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.Environment.Is64BitOperatingSystem">
          <source>Determines whether the current operating system is a 64-bit operating system.</source>
          <target state="translated">현재 운영 체제가 64비트 운영 체제인지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Is64BitOperatingSystem">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operating system is 64-bit; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">운영 체제가 64비트이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="P:System.Environment.Is64BitProcess">
          <source>Determines whether the current process is a 64-bit process.</source>
          <target state="translated">현재 프로세스가 64비트 프로세스인지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Is64BitProcess">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the process is 64-bit; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">프로세스가 64비트이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="P:System.Environment.MachineName">
          <source>Gets the NetBIOS name of this local computer.</source>
          <target state="translated">이 로컬 컴퓨터의 NetBIOS 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>A string containing the name of this computer.</source>
          <target state="translated">이 컴퓨터의 이름이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>The name of this computer is established at system startup when the name is read from the registry.</source>
          <target state="translated">이 컴퓨터의 이름의 이름을 레지스트리에서 읽을 때 시스템 시작 시 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>If this computer is a node in a cluster, the name of the node is returned.</source>
          <target state="translated">이 컴퓨터는 클러스터의 노드인 경우 노드 이름이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>The following example displays the name of the computer that runs the code example.</source>
          <target state="translated">다음 예제에서는 코드 예제를 실행 하는 컴퓨터의 이름이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>(The machine name is omitted from the example output for security reasons.)</source>
          <target state="translated">(컴퓨터 이름은 보안상의 이유로 예제의 출력에서 생략 됨).</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Environment.MachineName">
          <source>The name of this computer cannot be obtained.</source>
          <target state="translated">이 컴퓨터의 이름을 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>for read access to the COMPUTERNAME environment variable.</source>
          <target state="translated">에 대 한 읽기 액세스 COMPUTERNAME 환경 변수입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.MachineName">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.Environment.NewLine">
          <source>Gets the newline string defined for this environment.</source>
          <target state="translated">이 환경에 대해 정의된 줄 바꿈 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source>A string containing "\r\n" for non-Unix platforms, or a string containing "\n" for Unix platforms.</source>
          <target state="translated">Unix 이외의 플랫폼의 경우 "\r\n"을 포함하는 문자열이거나 Unix 플랫폼의 경우 "\n"을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source>The property value of <ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> is a constant customized specifically for the current platform and implementation of the .NET Framework.</source>
          <target state="translated">속성 값 <ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> 현재 플랫폼 및.NET Framework의 구현에 대해 구체적으로 사용자 지정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source>For more information about the escape characters in the property value, see <bpt id="p1">[</bpt>Character Escapes<ept id="p1">](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)</ept>.</source>
          <target state="translated">속성 값에 이스케이프 문자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>문자 이스케이프<ept id="p1">](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source>The functionality provided by <ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> is often what is meant by the terms newline, line feed, line break, carriage return, CRLF, and end of line.</source>
          <target state="translated">제공 하는 기능 <ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> 의미 용어 줄 바꿈, 줄 바꿈, 줄 바꿈, 캐리지 리턴, CRLF, 및 줄의 끝이 있습니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source><ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> can be used in conjunction with language-specific newline support such as the escape characters '\r' and '\n' in Microsoft C# and C/C++, or <ph id="ph2">`vbCrLf`</ph> in Microsoft Visual Basic.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> 이스케이프 문자 '\r' 및 '\n' Microsoft C# 및 C/c + +와 같은 언어별 줄 바꿈 지원와 함께에서 사용할 수 있습니다 또는 <ph id="ph2">`vbCrLf`</ph> Microsoft Visual Basic입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source><ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> is automatically appended to text processed by the <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendLine%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.NewLine%2A&gt;</ph> 처리 하는 텍스트를 자동으로 추가 된 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendLine%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.NewLine">
          <source>The following example displays three lines separated by newlines.</source>
          <target state="translated">다음 예제에서는 세 줄 바꿈으로 구분 된 표시 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="P:System.Environment.OSVersion">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.OperatingSystem" /&gt;</ph> object that contains the current platform identifier and version number.</source>
          <target state="translated">현재 플랫폼 식별자와 버전 번호가 들어 있는 <ph id="ph1">&lt;see cref="T:System.OperatingSystem" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>An object that contains the platform identifier and version number.</source>
          <target state="translated">플랫폼 식별자와 버전 번호가 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>Starting with Windows 8, the  <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property returns the same major and minor version numbers for all Windows platforms.</source>
          <target state="translated">Windows 8 부터는 <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> 속성 모든 Windows 플랫폼에 대해 동일한 주 및 부 버전 번호를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>Therefore, we do not recommend that you retrieve the value of this property to determine the operating system version.</source>
          <target state="translated">따라서 운영 체제 버전을 확인 하려면이 속성의 값을 검색 하지 않는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property is used to ensure that an app is running on some base version of an operating system in which a particular feature was introduced.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> 속성을 사용 하는 응용 프로그램에서 특정 기능 도입 된 운영 체제의 일부 기본 버전에서 실행 되 고 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>When this is the case, you should perform a version check by testing whether the current operating system version returned by the <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property is the same as, or greater than, the base operating system version.</source>
          <target state="translated">현재 운영 체제 버전에서 반환 하는지 여부를 테스트 하 여 버전 확인을 수행 해야이 경우는 <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> 속성은 동일한 이름으로 또는 기본 운영 체제 버전 보다 이후입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Version&gt;</ph> class topic.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Version&gt;</ph> 클래스 항목입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>Through Windows 8, the <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property returns the version reported by the Windows <bpt id="p1">[</bpt>GetVersionEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724451\(v=vs.85\).aspx)</ept> function.</source>
          <target state="translated">Windows 8을 통해는 <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> 속성의 Windows에서 보고 된 버전을 반환 합니다. <bpt id="p1">[</bpt>GetVersionEx<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724451\(v=vs.85\).aspx)</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>For a list of Windows desktop operating system versions and their corresponding version numbers, see <bpt id="p1">[</bpt>Operating System Version<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms724832.aspx)</ept> in the Windows Dev Center.</source>
          <target state="translated">Windows 데스크톱 운영 체제 버전 및 해당 버전 번호의 목록에 대 한 참조 <bpt id="p1">[</bpt>운영 체제 버전<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms724832.aspx)</ept> Windows 개발자 센터에서.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>The <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property reports the same version number (6.2.0.0) for both <ph id="ph2">[!INCLUDE[win8](~/includes/win8-md.md)]</ph> and <ph id="ph3">[!INCLUDE[win81](~/includes/win81-md.md)]</ph> and the same major and minor version number for Windows 10.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> 속성 모두에 대 한 동일한 버전 번호 (6.2.0.0) 보고 <ph id="ph2">[!INCLUDE[win8](~/includes/win8-md.md)]</ph> 및 <ph id="ph3">[!INCLUDE[win81](~/includes/win81-md.md)]</ph> 및 Windows 10에 대 한 동일한 주 및 부 버전 번호입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>In some cases, the <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property may not return the operating system version that matches the version specified for the Windows Program Compatibility mode feature.</source>
          <target state="translated">일부 경우에는 <ph id="ph1">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> 속성 Windows 프로그램 호환성 모드 기능에 대해 지정 된 버전과 일치 하는 운영 체제 버전을 반환 하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.OSVersion">
          <source>The following example displays the platform identifier and version number of the computer that runs the code example.</source>
          <target state="translated">다음 예제에서는 플랫폼 식별자 및 코드 예제를 실행 하는 컴퓨터의 버전 번호를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Environment.OSVersion">
          <source>This property was unable to obtain the system version.</source>
          <target state="translated">이 속성은 시스템 버전을 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.Environment.OSVersion">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="P:System.Environment.OSVersion">
          <source>The obtained platform identifier is not a member of <ph id="ph1">&lt;see cref="T:System.PlatformID" /&gt;</ph></source>
          <target state="translated">가져온 플랫폼 식별자가 <ph id="ph1">&lt;see cref="T:System.PlatformID" /&gt;</ph>의 멤버가 아닙니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.Environment.ProcessorCount">
          <source>Gets the number of processors on the current machine.</source>
          <target state="translated">현재 컴퓨터의 프로세서 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ProcessorCount">
          <source>The 32-bit signed integer that specifies the number of processors on the current machine.</source>
          <target state="translated">현재 컴퓨터의 프로세서 수를 지정하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ProcessorCount">
          <source>There is no default.</source>
          <target state="translated">기본값은 없습니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ProcessorCount">
          <source>If the current machine contains multiple processor groups, this property returns the number of logical processors that are available for use by the common language runtime (CLR).</source>
          <target state="translated">현재 컴퓨터에 여러 프로세서 그룹이 포함되어 있으면 이 속성을 통해 CLR(공용 언어 런타임)에서 사용할 수 있는 논리 프로세서 수가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ProcessorCount">
          <source>For more information about processor groups and logical processors, see <bpt id="p1">[</bpt>Processor Groups<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd405503.aspx)</ept>.</source>
          <target state="translated">논리 프로세서 및 프로세서 그룹에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>프로세서 그룹<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/dd405503.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.ProcessorCount">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Environment.ProcessorCount%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Environment.ProcessorCount%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="T:System.Environment">
          <source>Creates, modifies, or deletes an environment variable.</source>
          <target state="translated">환경 변수를 생성, 수정 또는 삭제합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The name of an environment variable.</source>
          <target state="translated">환경 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>A value to assign to <bpt id="p1">&lt;c&gt;</bpt>variable<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>variable<ept id="p1">&lt;/c&gt;</ept>에 할당할 값입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Creates, modifies, or deletes an environment variable stored in the current process.</source>
          <target state="translated">현재 프로세스에 저장되어 있는 환경 변수를 생성, 수정 또는 삭제합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Calling this method is equivalent to calling the <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> overload with a value of <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph> for the <ph id="ph3">`target`</ph> argument.</source>
          <target state="translated">이 메서드를 호출 하는 것은 <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> 값이 오버 로드 <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph> 에 대 한는 <ph id="ph3">`target`</ph> 인수입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If the <ph id="ph1">`value`</ph> argument is not empty (see the discussion of deleting an environment variable later in this section for the definition of an empty value) and the environment variable named by the <ph id="ph2">`variable`</ph> parameter does not exist, the environment variable is created and assigned the contents of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`value`</ph> 인수가 비어 (빈 값의 정의 대 한이 섹션의 뒷부분에 나오는 환경 변수 삭제에 대 한 설명 참조) 및 의해 이름이 지정 된 환경 변수는 <ph id="ph2">`variable`</ph> 매개 변수가 존재 하지 않는 환경 변수를 만들고 할당의 내용을 <ph id="ph3">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If it does exist, its value is modified.</source>
          <target state="translated">파일이 존재 하는 경우 해당 값을 수정 합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Because the environment variable is defined in the environment block of the current process only, it does not persist after the process has ended.</source>
          <target state="translated">를 현재 프로세스의 환경 블록에서 환경 변수를 정의 하기 때문에 프로세스가 종료 된 후 지속 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If <ph id="ph1">`variable`</ph> contains a non-initial hexadecimal zero character, the characters before the zero character are considered the environment variable name and all subsequent characters are ignored.</source>
          <target state="translated">경우 <ph id="ph1">`variable`</ph> 문자를 포함 초기 비 16 진수 0 문자, 숫자 0에는 환경 변수 이름으로 간주 됩니다 하 고 모든 후속 문자는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If <ph id="ph1">`value`</ph> contains a non-initial hexadecimal zero character, the characters before the zero character are assigned to the environment variable and all subsequent characters are ignored.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 문자가 들어 있는 초기 비 16 진수 0 문자, 숫자 0 환경 변수에 할당 되 고 모든 후속 문자는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If <ph id="ph1">`value`</ph> is empty and the environment variable named by <ph id="ph2">`variable`</ph> exists, the environment variable is deleted.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 가 비어 있고 의해 명명 된 환경 변수가 <ph id="ph2">`variable`</ph> 존재 하면 환경 변수가 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If <ph id="ph1">`variable`</ph> does not exist, no error occurs even though the operation cannot be performed.</source>
          <target state="translated">경우 <ph id="ph1">`variable`</ph> 존재 하지 않는 오류가 발생 하지 않는 경우에 작업을 수행할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source><ph id="ph1">`value`</ph> is considered empty under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">`value`</ph> 다음 조건에서 빈으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>It is <ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>It is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>It consists of a single character whose value is U+0000.</source>
          <target state="translated">값이 U + 0000 단일 문자 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The following example tests whether an environment variable named <ph id="ph1">`APPDOMAIN`</ph> exists in the current process.</source>
          <target state="translated">다음 예제에서는 있는지 라는 환경 변수를 테스트 <ph id="ph1">`APPDOMAIN`</ph> 현재 프로세스에 존재 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If it does not, it creates it and sets its value to "True".</source>
          <target state="translated">그렇지 않으면으로 작성 하 고 해당 값을 "true"로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If the value of the <ph id="ph1">`APPDOMAIN`</ph> environment variable is "True", it calls the <ph id="ph2">`Message.Display`</ph> method in a new application domain.</source>
          <target state="translated">하는 경우의 값은 <ph id="ph1">`APPDOMAIN`</ph> 환경 변수가 "True", 호출는 <ph id="ph2">`Message.Display`</ph> 메서드는 새 응용 프로그램 도메인의 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Otherwise, it executes the <ph id="ph1">`Message.Display`</ph> method in the current application domain.</source>
          <target state="translated">그렇지 않은 경우 실행는 <ph id="ph1">`Message.Display`</ph> 메서드는 현재 응용 프로그램 도메인입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If you run the example for the first time, the message "Executing in domain Domain2" displays to the console.</source>
          <target state="translated">처음에 대 한 예제를 실행 하는 경우 "도메인 도메인 2에서 실행" 메시지는 콘솔에 표시 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If you set the environment variable from the command line by using the command:</source>
          <target state="translated">명령을 사용 하 여 명령줄에서 환경 변수 설정:</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>the example displays the message "Executing in domain <bpt id="p1">*</bpt>exeName<ept id="p1">*</ept>.exe", where <bpt id="p2">*</bpt>exeName<ept id="p2">*</ept> is the name of the executable.</source>
          <target state="translated">이 예제에서는 메시지를 표시 합니다. "도메인에서 실행 되 <bpt id="p1">*</bpt>exeName<ept id="p1">*</ept>.exe" 여기서 <bpt id="p2">*</bpt>exeName<ept id="p2">*</ept> 실행 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The following example attempts to retrieve the value of an environment variable named <ph id="ph1">`Test1`</ph> from the process environment block.</source>
          <target state="translated">다음 예에서는 라는 환경 변수 값을 검색 하려고 하는데 <ph id="ph1">`Test1`</ph> 프로세스 환경 블록에서 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If the variable doesn't exist, the example creates the variable and retrieves its value.</source>
          <target state="translated">변수가 존재 하지 않는 경우이 예제에서는 변수를 만들고 해당 값을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The example displays the value of the variable.</source>
          <target state="translated">이 예제에서는 변수 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>If the example created the variable, it also calls the <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29&gt;</ph> method with each member of the <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget&gt;</ph> enumeration to establish that the variable can be retrieved only from the current process environment block.</source>
          <target state="translated">또한 호출의 예에서는 변수를 만든 경우의 <ph id="ph1">&lt;xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29&gt;</ph> 의 각 멤버와 메서드는 <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget&gt;</ph> 현재 프로세스 환경 블록의 변수를 검색할 수 있는 설정 하는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Finally, if the example created the variable, it deletes it.</source>
          <target state="translated">마지막으로,이 예제에서는 변수를 만든 경우이 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("=").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph>에 길이가 0인 문자열, 16진 문자(0x00) 또는 등호("=")가 포함된 경우</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="variable" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is greater than or equal to 32,767 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>의 길이가 32,767자보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">이 작업을 실행하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>The caller does not have the required permission to perform this operation.</source>
          <target state="translated">호출자에게 이 작업을 수행하는 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>for full access to environment variables.</source>
          <target state="translated">환경 변수에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The name of an environment variable.</source>
          <target state="translated">환경 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>A value to assign to <bpt id="p1">&lt;c&gt;</bpt>variable<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>variable<ept id="p1">&lt;/c&gt;</ept>에 할당할 값입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>One of the enumeration values that specifies the location of the environment variable.</source>
          <target state="translated">환경 변수의 위치를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>Creates, modifies, or deletes an environment variable stored in the current process or in the Windows operating system registry key reserved for the current user or local machine.</source>
          <target state="translated">현재 프로세스 또는 현재 사용자나 로컬 컴퓨터에 예약된 Windows 운영 체제 레지스트리 키에 저장되어 있는 환경 변수를 생성, 수정 또는 삭제합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The <ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> method lets you define an environment variable that is available to all processes that run on a machine (the <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph> value), to all processes run by a user (the <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph> value), or to the current process (the <ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process&gt;</ph> value).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29&gt;</ph> 메서드를 사용 하면 컴퓨터에서 실행 되는 모든 프로세스를 사용할 수 있는 환경 변수를 정의할 수 (의 <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph> 값), 사용자가 모든 프로세스를 실행 (는 <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph> 값), 또는 현재 프로세스에 (의 <ph id="ph4">&lt;xref:System.EnvironmentVariableTarget.Process&gt;</ph> 값).</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>Per-machine and per-user environment variables are copied into the environment block of the current process.</source>
          <target state="translated">컴퓨터 및 사용자 환경 변수는 현재 프로세스의 환경 블록에 복사 됩니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>However, environment variables that are unique to the current process environment block persist only until the process ends.</source>
          <target state="translated">그러나 현재 프로세스 환경 블록에 고유한 환경 변수는 프로세스가 끝날 때 까지만 유지 합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If the <ph id="ph1">`value`</ph> argument is not empty (see the discussion of deleting an environment variable later in this section for the definition of an empty value) and the environment variable named by the <ph id="ph2">`variable`</ph> parameter does not exist, the environment variable is created and assigned the contents of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`value`</ph> 인수가 비어 (빈 값의 정의 대 한이 섹션의 뒷부분에 나오는 환경 변수 삭제에 대 한 설명 참조) 및 의해 이름이 지정 된 환경 변수는 <ph id="ph2">`variable`</ph> 매개 변수가 존재 하지 않는 환경 변수를 만들고 할당의 내용을 <ph id="ph3">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If it does exist, its value is modified.</source>
          <target state="translated">파일이 존재 하는 경우 해당 값을 수정 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`variable`</ph> contains a non-initial hexadecimal zero character, the characters before the zero character are considered the environment variable name and all subsequent characters are ignored.</source>
          <target state="translated">경우 <ph id="ph1">`variable`</ph> 문자를 포함 초기 비 16 진수 0 문자, 숫자 0에는 환경 변수 이름으로 간주 됩니다 하 고 모든 후속 문자는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`value`</ph> contains a non-initial hexadecimal zero character, the characters before the zero character are assigned to the environment variable and all subsequent characters are ignored.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 문자가 들어 있는 초기 비 16 진수 0 문자, 숫자 0 환경 변수에 할당 되 고 모든 후속 문자는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`value`</ph> is empty and the environment variable named by <ph id="ph2">`variable`</ph> exists, the environment variable is deleted.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 가 비어 있고 의해 명명 된 환경 변수가 <ph id="ph2">`variable`</ph> 존재 하면 환경 변수가 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">`value`</ph> is considered empty under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">`value`</ph> 다음 조건에서 빈으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>It is <ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>It is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>It consists of a single character whose value is U+0000.</source>
          <target state="translated">값이 U + 0000 단일 문자 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`variable`</ph> does not exist, no error occurs although the operation cannot be performed.</source>
          <target state="translated">경우 <ph id="ph1">`variable`</ph> 존재 하지 않는 오류가 발생 하지 않지만 작업을 수행할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>Be careful when <ph id="ph1">`target`</ph> is <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph>, because you can accidentally delete an environment variable that affects your entire local machine, not just the current process or user.</source>
          <target state="translated">때는 주의 기울여야 <ph id="ph1">`target`</ph> 은 <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph>이므로 전체 로컬 컴퓨터, 뿐 아니라 현재 프로세스 또는 사용자에 영향을 주는 환경 변수를 실수로 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`target`</ph> is <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User&gt;</ph>, the environment variable is stored in the HKEY_CURRENT_USER\Environment key of the local computer's registry.</source>
          <target state="translated">경우 <ph id="ph1">`target`</ph> 은 <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User&gt;</ph>, 환경 변수는 로컬 컴퓨터의 레지스트리에의 HKEY_CURRENT_USER\Environment 키에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>It is also copied to instances of File Explorer that are running as the current user.</source>
          <target state="translated">또한 파일 탐색기의 현재 사용자로 실행 되는 인스턴스에 복사 됩니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The environment variable is then inherited by any new processes that the user launches from File Explorer.</source>
          <target state="translated">환경 변수는 사용자가 파일 탐색기에서 시작 하는 새 프로세스에서 상속 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>Similarly, if <ph id="ph1">`target`</ph> is <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph>, the environment variable is stored in the HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment key of the local computer's registry.</source>
          <target state="translated">마찬가지로, 경우 <ph id="ph1">`target`</ph> 은 <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph>, 환경 변수는 로컬 컴퓨터의 레지스트리에의 HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment 키에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>It is also copied to all instances of File Explorer.</source>
          <target state="translated">파일 탐색기의 모든 인스턴스에 복사 됩니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The environment variable is then inherited by any new processes that are launched from File Explorer.</source>
          <target state="translated">환경 변수는 다음 파일 탐색기에서 실행 되는 모든 새로운 프로세스에 상속 됩니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`target`</ph> is <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User&gt;</ph> or <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph>, other applications are notified of the set operation by a Windows <ph id="ph4">`WM_SETTINGCHANGE`</ph> message.</source>
          <target state="translated">경우 <ph id="ph1">`target`</ph> 은 <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph>, 다른 응용 프로그램을 Windows에 의해 설정 작업의 알림을 보내는 <ph id="ph4">`WM_SETTINGCHANGE`</ph> 메시지입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>If <ph id="ph1">`target`</ph> is <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph>, we recommend that the length of <ph id="ph4">`value`</ph> be less than 2048 characters.</source>
          <target state="translated">경우 <ph id="ph1">`target`</ph> 은 <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType&gt;</ph>, 길이의 좋습니다 <ph id="ph4">`value`</ph> 미만 2048 자가 하 여야 합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The following example creates environment variables for the <ph id="ph1">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph> targets, checks whether the operating system registry contains the user and machine environment variables, then deletes the environment variables.</source>
          <target state="translated">다음 예제에 대 한 환경 변수를 만들고는 <ph id="ph1">&lt;xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.EnvironmentVariableTarget.Machine&gt;</ph> 대상, 확인 여부는 운영 체제 레지스트리에 사용자 및 컴퓨터 환경 변수를 포함 한 다음 환경이 삭제 변수입니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="variable" /&gt;</ph> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("=").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph>에 길이가 0인 문자열, 16진 문자(0x00) 또는 등호("=")가 포함된 경우</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The length of <ph id="ph1">&lt;paramref name="variable" /&gt;</ph> is greater than or equal to 32,767 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variable" /&gt;</ph>의 길이가 32,767자보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not a member of the <ph id="ph2">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.EnvironmentVariableTarget" /&gt;</ph> 열거형의 멤버가 아닌 경우</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph>, and the length of <ph id="ph4">&lt;paramref name="variable" /&gt;</ph> is greater than or equal to 255.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Machine" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.EnvironmentVariableTarget.User" /&gt;</ph>이고 <ph id="ph4">&lt;paramref name="variable" /&gt;</ph>의 길이가 255보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph> and the length of <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is greater than or equal to 32,767 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.EnvironmentVariableTarget.Process" /&gt;</ph>이고 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>의 길이가 32,767자보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">이 작업을 실행하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>The caller does not have the required permission to perform this operation.</source>
          <target state="translated">호출자에게 이 작업을 수행하는 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>for full access to environment variables.</source>
          <target state="translated">환경 변수에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.Environment.StackTrace">
          <source>Gets current stack trace information.</source>
          <target state="translated">현재 스택 추적 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>A string containing stack trace information.</source>
          <target state="translated">스택 추적 정보가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>This value can be <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> property lists method calls in reverse chronological order, that is, the most recent method call is described first, and one line of stack trace information is listed for each method call on the stack.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> 속성 목록 역시간순에서 메서드 호출, 즉, 가장 최근의 메서드 호출이 먼저, 설명 및 스택의 각 메서드 호출에 대 한 한 줄의 스택 추적 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>However, the <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> property might not report as many method calls as expected due to code transformations that occur during optimization.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> 속성 최적화 하는 동안 발생 하는 코드 변환으로 인해 예상 대로 많은 메서드 호출을 보고 하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>For a hierarchical view of the stack trace information by class, use the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> class.</source>
          <target state="translated">클래스에 의해 스택 추적 정보 요소의 계층 뷰를 사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> property formats the stack trace information for each method call as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> 속성 형식을 각 메서드 호출에 대 한 스택 추적 정보를 다음과 같이 지정 합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>"at <ph id="ph1">`FullClassName`</ph>.<ph id="ph2">`MethodName`</ph>(<ph id="ph3">`MethodParams`</ph>) in <ph id="ph4">`FileName`</ph> :line <ph id="ph5">`LineNumber`</ph> "</source>
          <target state="translated">"에서 <ph id="ph1">`FullClassName`</ph>.<ph id="ph2">`MethodName`</ph> (<ph id="ph3">`MethodParams`</ph>)에서 <ph id="ph4">`FileName`</ph> : 선 <ph id="ph5">`LineNumber`</ph> "</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The literal "at" is preceded by three spaces, and the entire substring starting with "in" is omitted if debug symbols are not available.</source>
          <target state="translated">리터럴 "at" 공백 3 개가 옵니다 하 고 디버그 기호를 사용할 수 없는 경우의 "in"로 시작 하는 전체 부분 문자열이 생략 하면 키를 누릅니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The placeholders, <ph id="ph1">`FullClassName`</ph>, <ph id="ph2">`MethodName`</ph>, <ph id="ph3">`MethodParams`</ph>, <ph id="ph4">`FileName`</ph>, and <ph id="ph5">`LineNumber`</ph>, are replaced by actual values, and are defined as follows:</source>
          <target state="translated">자리 표시자를 <ph id="ph1">`FullClassName`</ph>, <ph id="ph2">`MethodName`</ph>, <ph id="ph3">`MethodParams`</ph>, <ph id="ph4">`FileName`</ph>, 및 <ph id="ph5">`LineNumber`</ph>는 실제 값으로 대체 되 고 ´ ï ´ ù.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>FullClassName</source>
          <target state="translated">FullClassName</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The full name of the class, including the namespace.</source>
          <target state="translated">네임 스페이스를 포함 하는 클래스의 전체 이름입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The name of the method.</source>
          <target state="translated">메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The list of parameter type/name pairs.</source>
          <target state="translated">매개 변수 형식/이름 쌍의 목록입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>Each pair is separated by a comma (",").</source>
          <target state="translated">각 쌍은 쉼표로 구분 됩니다 (",").</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>This information is omitted if <ph id="ph1">`MethodName`</ph> takes no parameters.</source>
          <target state="translated">이 정보를 생략 하면 <ph id="ph1">`MethodName`</ph> 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The name of the source file where the <ph id="ph1">`MethodName`</ph> method is declared.</source>
          <target state="translated">원본의 이름을 파일 위치는 <ph id="ph1">`MethodName`</ph> 메서드를 선언 합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>This information is omitted if debug symbols are not available.</source>
          <target state="translated">디버그 기호를 사용할 수 없는 경우이 정보는 생략 됩니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The number of the line in <ph id="ph1">`FileName`</ph> that contains the source code from <ph id="ph2">`MethodName`</ph> for the instruction that is on the call stack.</source>
          <target state="translated">줄 번호 <ph id="ph1">`FileName`</ph> 에서 소스 코드를 있는 <ph id="ph2">`MethodName`</ph> 호출 스택에 있는 명령에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>This information is omitted if debug symbols are not available.</source>
          <target state="translated">디버그 기호를 사용할 수 없는 경우이 정보는 생략 됩니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> string terminates each line of the stack trace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> 스택 추적의 각 줄을 종료 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>for full access to the resource protected by the permission.</source>
          <target state="translated">에 대 한 전체 액세스 권한으로 보호 되는 리소스입니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.StackTrace">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="P:System.Environment.SystemDirectory">
          <source>Gets the fully qualified path of the system directory.</source>
          <target state="translated">시스템 디렉터리의 정규화된 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>A string containing a directory path.</source>
          <target state="translated">디렉터리 경로가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>An example of the value returned is the string "C:\WinNT\System32".</source>
          <target state="translated">반환 값의 예는 "C:\WinNT\System32" 문자열입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>The following example displays the system directory of the computer that runs the code example.</source>
          <target state="translated">다음 예제에서는 코드 예제를 실행 하는 컴퓨터의 시스템 디렉터리를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>(The system directory is omitted from the example output for security reasons.)</source>
          <target state="translated">(시스템 디렉터리는 보안상의 이유로 예제의 출력에서 생략 됨).</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>for access to the information in the path itself.</source>
          <target state="translated">경로 자체의 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemDirectory">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="P:System.Environment.SystemPageSize">
          <source>Gets the number of bytes in the operating system's memory page.</source>
          <target state="translated">운영 체제의 메모리 페이지에서 바이트 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemPageSize">
          <source>The number of bytes in the system memory page.</source>
          <target state="translated">시스템 메모리 페이지의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemPageSize">
          <source>This information can be useful when determining whether to use the <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages?displayProperty=nameWithType&gt;</ph> option when you work with memory-mapped files.</source>
          <target state="translated">이 정보를 사용할지 여부를 결정할 때 유용할 수 있습니다는 <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages?displayProperty=nameWithType&gt;</ph> 메모리 매핑된 파일을 사용 하 여 작업할 때 옵션입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemPageSize">
          <source>In Windows, this value is the <ph id="ph1">`dwPageSize`</ph> member in the <ph id="ph2">`SYSTEM_INFO`</ph> structure.</source>
          <target state="translated">이 값은 windows에서 <ph id="ph1">`dwPageSize`</ph> 의 멤버는 <ph id="ph2">`SYSTEM_INFO`</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemPageSize">
          <source>for access to system and user environment variables.</source>
          <target state="translated">시스템 및 사용자 환경 변수에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.SystemPageSize">
          <source>Associated exception:</source>
          <target state="translated">연결 된 예외:</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="P:System.Environment.TickCount">
          <source>Gets the number of milliseconds elapsed since the system started.</source>
          <target state="translated">시스템 시작 이후 경과 시간(밀리초)을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>A 32-bit signed integer containing the amount of time in milliseconds that has passed since the last time the computer was started.</source>
          <target state="translated">컴퓨터가 마지막으로 시작된 이후 경과된 시간(밀리초)을 포함하는 부호 있는 32비트 정수입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>The value of this property is derived from the system timer and is stored as a 32-bit signed integer.</source>
          <target state="translated">이 속성의 값은 시스템 타이머에서 파생 하 고 32 비트 부호 있는 정수로 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>Note that, because it is derived from the system timer, the resolution of the <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> property is limited to the resolution of the system timer, which is typically in the range of 10 to 16 milliseconds.</source>
          <target state="translated">시스템 타이머를 해상도에서 파생 된 때문에 <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> 속성은 일반적으로 10-16 밀리초의 범위에 있는 시스템 타이머의 해상도로 제한 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>Because the value of the <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> property value is a 32-bit signed integer, if the system runs continuously, <ph id="ph2">&lt;xref:System.Environment.TickCount%2A&gt;</ph> will increment from zero to <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> for approximately 24.9 days, then jump to <ph id="ph4">&lt;xref:System.Int32.MinValue?displayProperty=nameWithType&gt;</ph>, which is a negative number, then increment back to zero during the next 24.9 days.</source>
          <target state="translated">때문에 값은 <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> 시스템 계속 실행 되는 경우 속성 값은 32 비트 부호 있는 정수 <ph id="ph2">&lt;xref:System.Environment.TickCount%2A&gt;</ph> 인 0 ~를 하나씩 늘립니다 <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> 약 24.9 일에 대 한 다음로 이동 <ph id="ph4">&lt;xref:System.Int32.MinValue?displayProperty=nameWithType&gt;</ph>, 음수는 다음 24.9 일 동안 0으로 다시 증가 합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>You can work around this issue by calling the Windows <bpt id="p1">[</bpt>GetTickCount<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms724408.aspx)</ept> function, which resets to zero after approximately 49.7 days, or by calling the <bpt id="p2">[</bpt>GetTickCount64<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms724411.aspx)</ept> function.</source>
          <target state="translated">Windows를 호출 하 여이 문제를 해결할 수 있습니다 <bpt id="p1">[</bpt>GetTickCount<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms724408.aspx)</ept> 약 49.7 일 후 또는 호출 하 여 0으로 다시 설정 하는 함수는 <bpt id="p2">[</bpt>GetTickCount64<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms724411.aspx)</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source><ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> is different from the <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A?displayProperty=nameWithType&gt;</ph> property, which is the number of 100-nanosecond intervals that have elapsed since 1/1/0001, 12:00am.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> 와 다른는 <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A?displayProperty=nameWithType&gt;</ph> 속성을 1/1/0001, 오전 12시 경과한 100 나노초 간격의 수입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>Use the <ph id="ph1">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> property to obtain the current local date and time on this computer.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> 속성을 현재 현지 날짜와 시간을이 컴퓨터에 가져옵니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>The following example demonstrates how to retrieve the positive range of values returned by the <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 반환 값의 양의 범위를 검색 하는 방법을 <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>The <ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> property cycles between <ph id="ph2">&lt;xref:System.Int32.MinValue?displayProperty=nameWithType&gt;</ph>, which is a negative number, and <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> once every 49.8 days.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.TickCount%2A&gt;</ph> 속성 사이 순환 <ph id="ph2">&lt;xref:System.Int32.MinValue?displayProperty=nameWithType&gt;</ph>, 음수 값이 되 고 <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> 49.8 일 마다 한 번씩입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.TickCount">
          <source>This code sample removes the sign bit to yield a nonnegative number that cycles between zero and <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph> once every 24.9 days.</source>
          <target state="translated">이 코드 샘플 0 사이 순환 하는 음수가 아닌 숫자를 산출 하는 부호 비트를 제거 하 고 <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph> 24.9 일 마다 한 번씩입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="P:System.Environment.UserDomainName">
          <source>Gets the network domain name associated with the current user.</source>
          <target state="translated">현재 사용자와 관련된 네트워크 도메인 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>The network domain name associated with the current user.</source>
          <target state="translated">현재 사용자와 연결된 네트워크 도메인 이름입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>The domain account credentials for a user are formatted as the user's domain name, the '<ph id="ph1">\\</ph>' character, and user name.</source>
          <target state="translated">사용자에 대 한 도메인 계정 자격 증명 서식 사용자의 도메인 이름으로 지정 되는 '<ph id="ph1">\\</ph>' 문자와 사용자 이름입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> property to obtain the user's domain name without the user name, and the <ph id="ph2">&lt;xref:System.Environment.UserName%2A&gt;</ph> property to obtain the user name without the domain name.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> 사용자 이름 없이 사용자의 도메인 이름을 가져오는 속성 및 <ph id="ph2">&lt;xref:System.Environment.UserName%2A&gt;</ph> 속성 도메인 이름이 없는 사용자 이름을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>For example, if a user's domain name and user name are CORPORATENETWORK\john, the <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> property returns "CORPORATENETWORK".</source>
          <target state="translated">예를 들어, 사용자의 도메인 이름 및 사용자 이름에 CORPORATENETWORK\john, 경우는 <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> 속성 "CORPORATENETWORK"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>The <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> property first attempts to get the domain name component of the Windows account name for the current user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> 속성은 먼저 현재 사용자에 대 한 Windows 계정 이름의 도메인 이름 구성 요소를 가져오려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>If that attempt fails, this property attempts to get the domain name associated with the user name provided by the <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> property.</source>
          <target state="translated">이 시도가 실패 하면이이 속성에서 제공 된 사용자 이름과 연결 된 도메인 이름을 가져오지 시도 <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>If that attempt fails because the host computer is not joined to a domain, then the host computer name is returned.</source>
          <target state="translated">호스트 컴퓨터는 도메인에 가입 하지 때문에 해당 시도가 실패할 경우 호스트 컴퓨터 이름이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Environment.UserDomainName">
          <source>The operating system does not support retrieving the network domain name.</source>
          <target state="translated">운영 체제가 네트워크 도메인 이름 검색을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="P:System.Environment.UserDomainName">
          <source>The network domain name cannot be retrieved.</source>
          <target state="translated">네트워크 도메인 이름을 검색할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>for read access to the USERDOMAIN environment variable.</source>
          <target state="translated">에 대 한 읽기 액세스 USERDOMAIN 환경 변수입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserDomainName">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="P:System.Environment.UserInteractive">
          <source>Gets a value indicating whether the current process is running in user interactive mode.</source>
          <target state="translated">현재 프로세스가 사용자 대화형 모드로 실행되고 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserInteractive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current process is running in user interactive mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 프로세스가 사용자 대화형 모드로 실행되고 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserInteractive">
          <source>The <ph id="ph1">&lt;xref:System.Environment.UserInteractive%2A&gt;</ph> property reports <ph id="ph2">`false`</ph> for a Windows process or a service like IIS that runs without a user interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.UserInteractive%2A&gt;</ph> 속성 보고서 <ph id="ph2">`false`</ph> Windows 프로세스 또는 사용자 인터페이스 없이 실행 되는 IIS와 같은 서비스에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserInteractive">
          <source>If this property is <ph id="ph1">`false`</ph>, do not display modal dialogs or message boxes because there is no graphical user interface for the user to interact with.</source>
          <target state="translated">이 속성이 <ph id="ph1">`false`</ph>, 모달 대화 상자 표시 안 함 또는 그래픽 사용자 인터페이스가 사용자와 상호 작용할 수 있기 때문에 메시지 상자입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserInteractive">
          <source>The following example displays whether the current process is running in user interactive mode.</source>
          <target state="translated">다음 예에서는 현재 프로세스가 사용자 대화형 모드에서 실행 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="P:System.Environment.UserName">
          <source>Gets the user name of the person who is currently logged on to the Windows operating system.</source>
          <target state="translated">Windows 운영 체제에 현재 로그온한 사용자의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>The user name of the person who is logged on to Windows.</source>
          <target state="translated">Windows에 로그온한 사용자의 이름입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>You can use the <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> property to identify the user on the current thread, to the system and application for security or access purposes.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> 현재 스레드에서 시스템 및 보안 또는 액세스를 위해 응용 프로그램에 사용자를 식별 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>It can also be used to customize a particular application for each user.</source>
          <target state="translated">또한 각 사용자에 대 한 특정 응용 프로그램에 맞게 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>The <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> property wraps a call to the Windows <bpt id="p1">[</bpt>GetUserName<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724432.aspx)</ept> function.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> 속성 창에 대 한 호출을 래핑하 <bpt id="p1">[</bpt>GetUserName<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/ms724432.aspx)</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>The domain account credentials for a user are formatted as the user's domain name, the '<ph id="ph1">\\</ph>' character, and user name.</source>
          <target state="translated">사용자에 대 한 도메인 계정 자격 증명 서식 사용자의 도메인 이름으로 지정 되는 '<ph id="ph1">\\</ph>' 문자와 사용자 이름입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>Use the <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> property to obtain the user's domain name and the <ph id="ph2">&lt;xref:System.Environment.UserName%2A&gt;</ph> property to obtain the user name.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Environment.UserDomainName%2A&gt;</ph> 속성을 사용자의 도메인 이름 및 <ph id="ph2">&lt;xref:System.Environment.UserName%2A&gt;</ph> 속성을 사용자 이름을 얻습니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>If an ASP.NET application runs in a development environment, the <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> property returns the name of the current user.</source>
          <target state="translated">ASP.NET 응용 프로그램 개발 환경에서 실행 되는 경우는 <ph id="ph1">&lt;xref:System.Environment.UserName%2A&gt;</ph> 속성의 현재 사용자의 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>In a published ASP.NET application, this property returns the name of the application pool account (such as Default AppPool).</source>
          <target state="translated">게시 된 ASP.NET 응용 프로그램에서는이 속성 응용 프로그램 풀 계정 (예: 기본 AppPool)의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>The following example displays the user name of the person who started the current thread.</source>
          <target state="translated">다음 예제에서는 현재 스레드를 시작한 사람의 사용자 이름을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>for read access to the USERNAME environment variable.</source>
          <target state="translated">사용자 이름 환경 변수에 읽기 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.UserName">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="P:System.Environment.Version">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object that describes the major, minor, build, and revision numbers of the common language runtime.</source>
          <target state="translated">공용 언어 런타임의 주 번호, 보조 번호, 빌드 번호 및 수정 번호를 설명하는 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>An object that displays the version of the common language runtime.</source>
          <target state="translated">공용 언어 런타임의 버전을 표시하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>For the .NET Framework Versions 4, 4.5, 4.5.1, and 4.5.2, the <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Version&gt;</ph> object whose string representation has the form <ph id="ph3">`4.0.30319.xxxxx`</ph>.</source>
          <target state="translated">.NET Framework 버전 4, 4.5, 4.5.1 및 4.5.2의 경우 <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> 속성은 문자열 표시가 <ph id="ph3">`4.0.30319.xxxxx`</ph> 형식인 <ph id="ph2">&lt;xref:System.Version&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>For the .NET Framework 4.6 and later versions, it has the form <ph id="ph1">`4.0.30319.42000`</ph>.</source>
          <target state="translated">.NET Framework 4.6 및 이상 버전의 형식은 다음과 같습니다 <ph id="ph1">`4.0.30319.42000`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>For the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> and later, we do not recommend using the <ph id="ph2">&lt;xref:System.Environment.Version%2A&gt;</ph> property to detect the version of the runtime; instead, you can determine the version of the common language runtime by querying the registry.</source>
          <target state="translated">에 대 한는 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> 이상 버전에서는 권장 하지는 않습니다를 사용 하 고는 <ph id="ph2">&lt;xref:System.Environment.Version%2A&gt;</ph> ; 런타임의 버전을 검색 하는 속성 대신 레지스트리를 쿼리하여 공용 언어 런타임 버전을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Determine Which .NET Framework Versions Are Installed<ept id="p1">](~/docs/framework/migration-guide/how-to-determine-which-versions-are-installed.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법:.NET Framework 버전이 설치 된 확인<ept id="p1">](~/docs/framework/migration-guide/how-to-determine-which-versions-are-installed.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>For more information about the version of the common language runtime that is installed with each version of the .NET Framework, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">각 버전의.NET Framework와 함께 설치 된 공용 언어 런타임 버전에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>The following example displays the version of the common language runtime.</source>
          <target state="translated">다음 예제에서는 공용 언어 런타임의 버전을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.Version">
          <source>(The version is omitted from the example output for security reasons.)</source>
          <target state="translated">(버전은 보안상의 이유로 예제의 출력에서 생략 됨).</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="P:System.Environment.WorkingSet">
          <source>Gets the amount of physical memory mapped to the process context.</source>
          <target state="translated">프로세스 컨텍스트에 매핑되는 실제 메모리의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.WorkingSet">
          <source>A 64-bit signed integer containing the number of bytes of physical memory mapped to the process context.</source>
          <target state="translated">프로세스 컨텍스트에 매핑되는 실제 메모리의 바이트 수가 포함된 부호 있는 64비트 정수입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.WorkingSet">
          <source>The following example displays the size of the working set of the computer that runs the code example.</source>
          <target state="translated">다음 예제에서는 코드 예제를 실행 하는 컴퓨터의 작업 집합의 크기를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.WorkingSet">
          <source>for full access to the resource protected by this permission.</source>
          <target state="translated">이 사용 권한으로 보호 되는 리소스에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Environment.WorkingSet">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>