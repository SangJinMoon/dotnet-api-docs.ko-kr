<Type Name="IObserver&lt;T&gt;" FullName="System.IObserver&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3facb3d52ed4cf715a9c826dd48e65f8e79aa81b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728177" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IObserver&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObserver`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObserver`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObserver(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObserver" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">알림 정보를 제공하는 개체입니다.</typeparam>
    <summary>푸시 기반 알림을 수신하기 위한 메커니즘을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IObserver%601> 및 <xref:System.IObservable%601> 인터페이스 푸시 기반 알림, 관찰자 디자인 패턴 라고도 하는 일반화 된 메커니즘을 제공 합니다. <xref:System.IObservable%601> 인터페이스를 나타냅니다 (공급자); 알림을 전송 하는 클래스는 <xref:System.IObserver%601> 인터페이스를 (관찰자) 받는 클래스를 나타냅니다. `T` 알림 정보를 제공 하는 클래스를 나타냅니다.  
  
 <xref:System.IObserver%601> 구현 공급자 로부터 알림을 받을 수 정렬 (한 <xref:System.IObservable%601> 구현)를 공급자의 자체의 인스턴스를 전달 하 여 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 메서드. 이 메서드는 반환 된 <xref:System.IDisposable> 공급자 전에 observer를 구독 취소를 사용할 수 있는 개체가 알림 전송을 완료 합니다.  
  
 <xref:System.IObserver%601> 인터페이스 관찰자 구현 해야 하는 다음 세 가지 메서드를 정의 합니다.  
  
-   <xref:System.IObserver%601.OnNext%2A> 메서드를 일반적으로 관찰자에 게 새 데이터 또는 상태 정보를 제공 하도록 공급자에 의해 호출 됩니다.  
  
-   <xref:System.IObserver%601.OnError%2A> 메서드는 일반적으로 사용할 수 없거나 손상 된 데이터 임을 나타내기 위해 공급자에 의해 호출, 또는 공급자에서 일부 오류 조건이 발생 했습니다.  
  
-   <xref:System.IObserver%601.OnCompleted%2A> 메서드는 일반적으로 관찰자에 게 알림 전송을 완료 했음을 나타내기 위해 공급자에 의해 호출 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 관찰자 디자인 패턴을 보여 줍니다. 정의 `Location` 위도 및 경도 정보를 포함 하는 클래스입니다.  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 `LocationReporter` 클래스를 제공는 <xref:System.IObserver%601> 구현 합니다. 현재 위치에 대 한 정보는 콘솔에 표시 됩니다. 해당 생성자를 포함 한 `name` 수 있는 매개 변수는 `LocationReporter` 문자열 출력에서 자신을 식별 하는 인스턴스. 또한 포함 한 `Subscribe` 메서드는 공급자에 대 한 호출을 래핑하는 <xref:System.IObservable%601.Subscribe%2A> 메서드. 이 통해 반환 된 메서드의 <xref:System.IDisposable> 전용 변수를 참조 합니다. `LocationReporter` 클래스도 포함 되어는 `Unsubscribe` 메서드를 호출 하 여 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 반환 되는 개체의 메서드는 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 메서드. 다음 코드 정의 `LocationReporter` 클래스입니다.  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 `LocationTracker` 클래스를 제공는 <xref:System.IObservable%601> 구현 합니다. 해당 `TrackLocation` 메서드는 null을 허용 전달 `Location` 위도 및 경도 데이터가 들어 있는 개체입니다. 경우는 `Location` 값이 `null`, `TrackLocation` 메서드 호출에서 <xref:System.IObserver%601.OnNext%2A> 각 관찰자의 메서드.  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 경우는 `Location` 값은 `null`, `TrackLocation` 메서드를 만드는 데는 `LocationNotFoundException` 다음 예제에 나와 있는 개체입니다. 그런 다음 각 관찰자의 연속 호출 <xref:System.IObserver%601.OnError%2A> 메서드 전달는 `LocationNotFoundException` 개체입니다. `LocationNotFoundException` 에서 파생 <xref:System.Exception> 하지만 새 멤버를 추가 하지 않습니다.  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 관찰자에 게 등록에서 알림을 받을 수는 `TrackLocation` 개체를 호출 하 여 해당 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> private 제네릭 observer 개체에 대 한 참조를 할당 하는 메서드를 <xref:System.Collections.Generic.List%601> 개체입니다. 메서드 반환는 `Unsubscriber` 인 개체는 <xref:System.IDisposable> 관찰자가 알림 수신을 중지할 수 있도록 구현 합니다. `LocationTracker` 클래스도 포함 되어는 `EndTransmission` 메서드. 메서드 추가 위치 데이터가 표시 되 면 각 관찰자의 호출 <xref:System.IObserver%601.OnCompleted%2A> 메서드 관찰자의 내부 목록을 지웁니다.  
  
 다음 코드는 공급자와 관찰자를 인스턴스화합니다.  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObservable`1" />
  </Docs>
  <Members>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="public void OnCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCompleted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>공급자가 푸시 기반 알림 전송을 완료했음을 관찰자에게 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 관찰자의 <xref:System.IObserver%601.OnCompleted%2A> 구현이 호출 됩니다는 <xref:System.IObserver%601.OnCompleted%2A> 메서드 호출 수는 <xref:System.IDisposable.Dispose%2A> 의 메서드는 <xref:System.IDisposable> 호출 때 관찰자에 게 반환 된 개체는 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는의 구현을 제공는 <xref:System.IObserver%601.OnCompleted%2A> 위도/경도 추적 응용 프로그램에서 메서드. 메서드가 단순히 있음을 보고 추가 데이터가 없음을 사용할 수는 공급자를 호출 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 구현 합니다. 예제 단원을 참조는 <xref:System.IObserver%601> 전체 예제에 대 한 항목입니다.  
  
 [!code-csharp[System.IObserver.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#11)]
 [!code-vb[System.IObserver.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public void OnError (Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnError (error As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnError(Exception ^ error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="error">오류에 대한 추가적인 정보를 제공하는 개체입니다.</param>
        <summary>공급자에게 오류 조건이 발생했다는 것을 관찰자에게 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하지만 `error` 는 개체에서 파생 된 <xref:System.Exception?displayProperty=nameWithType>, 공급자에 의해 throw 되는 예외 반드시 나타내지는지 않습니다. 누락 되었거나 사용할 수 없는 데이터와 같은 일상적인 또는 예상 된 오류 상태를 나타낼 수도 있습니다. <xref:System.IObserver%601.OnError%2A> 공급자 오류 처리를 제공 하는 관찰자 기대 하지 및 메서드 정보,으로 이해 되어야 합니다.  
  
   
  
## Examples  
 다음 예제에서는의 구현을 제공는 <xref:System.IObserver%601.OnError%2A> 위도/경도 추적 응용 프로그램에서 메서드. 메서드는 단순히 데이터를 현재 사용할 수 있습니다; 않음을 보고합니다 수의 사용은 <xref:System.Exception> 개체를 매개 변수로 전달 합니다. 예제 단원을 참조는 <xref:System.IObserver%601> 전체 예제에 대 한 항목입니다.  
  
 [!code-csharp[System.IObserver.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#10)]
 [!code-vb[System.IObserver.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNext">
      <MemberSignature Language="C#" Value="public void OnNext (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNext(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnNext(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnNext (value As T)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">현재 알림 정보입니다.</param>
        <summary>관찰자에게 새 데이터를 제공합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 관찰자는 공급자가 호출 후 <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> 메서드, 공급자는 관찰자의 <xref:System.IObserver%601.OnNext%2A> 알림을 제공 하는 메서드.  
  
   
  
## Examples  
 다음 예제에서는의 구현을 제공는 <xref:System.IObserver%601.OnNext%2A> 위도/경도 추적 응용 프로그램에서 메서드. 예제 단원을 참조는 <xref:System.IObserver%601> 전체 예제에 대 한 항목입니다.  
  
 [!code-csharp[System.IObserver.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#12)]
 [!code-vb[System.IObserver.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>