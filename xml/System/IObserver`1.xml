<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IObserver`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53facb3d52ed4cf715a9c826dd48e65f8e79aa81b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3facb3d52ed4cf715a9c826dd48e65f8e79aa81b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The object that provides notification information.</source>
          <target state="translated">알림 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IObserver`1">
          <source>Provides a mechanism for receiving push-based notifications.</source>
          <target state="translated">푸시 기반 알림을 수신하기 위한 메커니즘을 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> and <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> 인터페이스 푸시 기반 알림, 관찰자 디자인 패턴 라고도 하는 일반화 된 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface represents the class that sends notifications (the provider); the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> interface represents the class that receives them (the observer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> 인터페이스를 나타냅니다 (공급자); 알림을 전송 하는 클래스는 <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> 인터페이스를 (관찰자) 받는 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source><ph id="ph1">`T`</ph> represents the class that provides the notification information.</source>
          <target state="translated"><ph id="ph1">`T`</ph> 알림 정보를 제공 하는 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>An <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> implementation arranges to receive notifications from a provider (an <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation) by passing an instance of itself to the provider's <ph id="ph3">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> 구현 공급자 로부터 알림을 받을 수 정렬 (한 <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> 구현)를 공급자의 자체의 인스턴스를 전달 하 여 <ph id="ph3">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>This method returns an <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> object that can be used to unsubscribe the observer before the provider finishes sending notifications.</source>
          <target state="translated">이 메서드는 반환 된 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 공급자 전에 observer를 구독 취소를 사용할 수 있는 개체가 알림 전송을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> interface defines the following three methods that the observer must implement:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> 인터페이스 관찰자 구현 해야 하는 다음 세 가지 메서드를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method, which is typically called by the provider to supply the observer with new data or state information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> 메서드를 일반적으로 관찰자에 게 새 데이터 또는 상태 정보를 제공 하도록 공급자에 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> 메서드는 일반적으로 사용할 수 없거나 손상 된 데이터 임을 나타내기 위해 공급자에 의해 호출, 또는 공급자에서 일부 오류 조건이 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> 메서드는 일반적으로 관찰자에 게 알림 전송을 완료 했음을 나타내기 위해 공급자에 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following example illustrates the observer design pattern.</source>
          <target state="translated">다음 예제에서는 관찰자 디자인 패턴을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It defines a <ph id="ph1">`Location`</ph> class that contains latitude and longitude information.</source>
          <target state="translated">정의 <ph id="ph1">`Location`</ph> 위도 및 경도 정보를 포함 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class provides the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`LocationReporter`</ph> 클래스를 제공는 <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It displays information about the current location to the console.</source>
          <target state="translated">현재 위치에 대 한 정보는 콘솔에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Its constructor includes a <ph id="ph1">`name`</ph> parameter, which allows the <ph id="ph2">`LocationReporter`</ph> instance to identify itself in its string output.</source>
          <target state="translated">해당 생성자를 포함 한 <ph id="ph1">`name`</ph> 수 있는 매개 변수는 <ph id="ph2">`LocationReporter`</ph> 문자열 출력에서 자신을 식별 하는 인스턴스.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It also includes a <ph id="ph1">`Subscribe`</ph> method, which wraps a call to the provider's <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method.</source>
          <target state="translated">또한 포함 한 <ph id="ph1">`Subscribe`</ph> 메서드는 공급자에 대 한 호출을 래핑하는 <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>This enables the method to assign the returned <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> reference to a private variable.</source>
          <target state="translated">이 통해 반환 된 메서드의 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 전용 변수를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class also includes an <ph id="ph2">`Unsubscribe`</ph> method, which calls the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method of the object returned by the <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`LocationReporter`</ph> 클래스도 포함 되어는 <ph id="ph2">`Unsubscribe`</ph> 메서드를 호출 하 여 <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> 반환 되는 개체의 메서드는 <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following code defines the <ph id="ph1">`LocationReporter`</ph> class.</source>
          <target state="translated">다음 코드 정의 <ph id="ph1">`LocationReporter`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class provides the <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`LocationTracker`</ph> 클래스를 제공는 <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Its <ph id="ph1">`TrackLocation`</ph> method is passed a nullable <ph id="ph2">`Location`</ph> object that contains the latitude and longitude data.</source>
          <target state="translated">해당 <ph id="ph1">`TrackLocation`</ph> 메서드는 null을 허용 전달 <ph id="ph2">`Location`</ph> 위도 및 경도 데이터가 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>If the <ph id="ph1">`Location`</ph> value is not <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method calls the <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method of each observer.</source>
          <target state="translated">경우는 <ph id="ph1">`Location`</ph> 값이 <ph id="ph2">`null`</ph>, <ph id="ph3">`TrackLocation`</ph> 메서드 호출에서 <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> 각 관찰자의 메서드.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>If the <ph id="ph1">`Location`</ph> value is <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method instantiates a <ph id="ph4">`LocationNotFoundException`</ph> object, which is shown in the following example.</source>
          <target state="translated">경우는 <ph id="ph1">`Location`</ph> 값은 <ph id="ph2">`null`</ph>, <ph id="ph3">`TrackLocation`</ph> 메서드를 만드는 데는 <ph id="ph4">`LocationNotFoundException`</ph> 다음 예제에 나와 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It then calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method and passes it the <ph id="ph2">`LocationNotFoundException`</ph> object.</source>
          <target state="translated">그런 다음 각 관찰자의 연속 호출 <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> 메서드 전달는 <ph id="ph2">`LocationNotFoundException`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Note that <ph id="ph1">`LocationNotFoundException`</ph> derives from <ph id="ph2">&lt;xref:System.Exception&gt;</ph> but does not add any new members.</source>
          <target state="translated"><ph id="ph1">`LocationNotFoundException`</ph> 에서 파생 <ph id="ph2">&lt;xref:System.Exception&gt;</ph> 하지만 새 멤버를 추가 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Observers register to receive notifications from a <ph id="ph1">`TrackLocation`</ph> object by calling its <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, which assigns a reference to the observer object to a private generic <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">관찰자에 게 등록에서 알림을 받을 수는 <ph id="ph1">`TrackLocation`</ph> 개체를 호출 하 여 해당 <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> private 제네릭 observer 개체에 대 한 참조를 할당 하는 메서드를 <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The method returns an <ph id="ph1">`Unsubscriber`</ph> object, which is an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementation that enables observers to stop receiving notifications.</source>
          <target state="translated">메서드 반환는 <ph id="ph1">`Unsubscriber`</ph> 인 개체는 <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> 관찰자가 알림 수신을 중지할 수 있도록 구현 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class also includes an <ph id="ph2">`EndTransmission`</ph> method.</source>
          <target state="translated"><ph id="ph1">`LocationTracker`</ph> 클래스도 포함 되어는 <ph id="ph2">`EndTransmission`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>When no further location data is available, the method calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method and then clears the internal list of observers.</source>
          <target state="translated">메서드 추가 위치 데이터가 표시 되 면 각 관찰자의 호출 <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> 메서드 관찰자의 내부 목록을 지웁니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following code then instantiates the provider and the observer.</source>
          <target state="translated">다음 코드는 공급자와 관찰자를 인스턴스화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnCompleted">
          <source>Notifies the observer that the provider has finished sending push-based notifications.</source>
          <target state="translated">공급자가 푸시 기반 알림 전송을 완료했음을 관찰자에게 알립니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>When the observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> implementation is called, the <ph id="ph2">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method can optionally call the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.IDisposable&gt;</ph> object that was returned to the observer when it called the <ph id="ph5">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">때 관찰자의 <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> 구현이 호출 됩니다는 <ph id="ph2">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> 메서드 호출 수는 <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 의 메서드는 <ph id="ph4">&lt;xref:System.IDisposable&gt;</ph> 호출 때 관찰자에 게 반환 된 개체는 <ph id="ph5">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">다음 예제에서는의 구현을 제공는 <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> 위도/경도 추적 응용 프로그램에서 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>The method simply reports that no further data is available and calls the provider's <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">메서드가 단순히 있음을 보고 추가 데이터가 없음을 사용할 수는 공급자를 호출 <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">예제 단원을 참조는 <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> 전체 예제에 대 한 항목입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>An object that provides additional information about the error.</source>
          <target state="translated">오류에 대한 추가적인 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>Notifies the observer that the provider has experienced an error condition.</source>
          <target state="translated">공급자에게 오류 조건이 발생했다는 것을 관찰자에게 알립니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>Although <ph id="ph1">`error`</ph> is an object that is derived from <ph id="ph2">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>, it does not necessarily represent an exception that is thrown by the provider.</source>
          <target state="translated">하지만 <ph id="ph1">`error`</ph> 는 개체에서 파생 된 <ph id="ph2">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>, 공급자에 의해 throw 되는 예외 반드시 나타내지는지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>It can also represent a routine or expected error condition, such as data that is missing or unavailable.</source>
          <target state="translated">누락 되었거나 사용할 수 없는 데이터와 같은 일상적인 또는 예상 된 오류 상태를 나타낼 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method should be seen as informational, and the provider should not expect the observer to provide error handling.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> 공급자 오류 처리를 제공 하는 관찰자 기대 하지 및 메서드 정보,으로 이해 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">다음 예제에서는의 구현을 제공는 <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> 위도/경도 추적 응용 프로그램에서 메서드.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The method simply reports that data is currently unavailable; it does not make use of the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> object passed to it as a parameter.</source>
          <target state="translated">메서드는 단순히 데이터를 현재 사용할 수 있습니다; 않음을 보고합니다 수의 사용은 <ph id="ph1">&lt;xref:System.Exception&gt;</ph> 개체를 매개 변수로 전달 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">예제 단원을 참조는 <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> 전체 예제에 대 한 항목입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnNext(`0)">
          <source>The current notification information.</source>
          <target state="translated">현재 알림 정보입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnNext(`0)">
          <source>Provides the observer with new data.</source>
          <target state="translated">관찰자에게 새 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>After an observer has called a provider's <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, the provider calls the observer's <ph id="ph2">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method to provide notifications.</source>
          <target state="translated">관찰자는 공급자가 호출 후 <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> 메서드, 공급자는 관찰자의 <ph id="ph2">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> 알림을 제공 하는 메서드.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">다음 예제에서는의 구현을 제공는 <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> 위도/경도 추적 응용 프로그램에서 메서드.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">예제 단원을 참조는 <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> 전체 예제에 대 한 항목입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>