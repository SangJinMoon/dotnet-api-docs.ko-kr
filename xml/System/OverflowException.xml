<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OverflowException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c99317f3b536cdba229df564c04881b936a67bbe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c99317f3b536cdba229df564c04881b936a67bbe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.OverflowException">
          <source>The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow.</source>
          <target state="translated">선택한 컨텍스트에서 산술 연산, 캐스팅 또는 변환 작업을 수행한 결과로 오버플로가 발생하는 경우에 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>An <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown at run time under the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 런타임에 다음과 같은 경우에 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>An arithmetic operation produces a result that is outside the range of the data type returned by the operation.</source>
          <target state="translated">산술 연산 결과가 작업에 의해 반환 되는 데이터 형식의 범위를 벗어났습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown by a multiplication operation that overflows the bounds of the <ph id="ph2">&lt;xref:System.Int32&gt;</ph> type.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 의 범위를 오버플로 하는 곱하기 작업에서 throw 되는 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 유형입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>A casting or conversion operation attempts to perform a narrowing conversion, and the value of the source data type is outside the range of the target data type.</source>
          <target state="translated">캐스팅 또는 변환 작업에서 축소 변환을 수행 하 고 대상 데이터 형식 범위 밖에 있는 원본 데이터 형식의 값은 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown by the attempt to convert a large unsigned byte value to a signed byte value.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 큰 부호 없는 바이트 값을 부호 있는 바이트 값으로 변환 하려고에서 throw 되는 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>In each case, the result of the operation is a value that is less than the <ph id="ph1">`MinValue`</ph> property or greater than the <ph id="ph2">`MaxValue`</ph> property of the data type that results from the operation.</source>
          <target state="translated">각각의 경우에서 작업의 결과 되는 값 보다 작은 <ph id="ph1">`MinValue`</ph> 속성 보다 큰는 <ph id="ph2">`MaxValue`</ph> 작업의 결과로 생성 되는 데이터 형식의 속성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>For the arithmetic, casting, or conversion operation to throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>, the operation must occur in a checked context.</source>
          <target state="translated">Throw 하는 산술, 캐스팅 또는 변환 작업에 대 한 프로그램 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>, 작업은 확인 된 컨텍스트에서 발생 해야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>By default, arithmetic operations and overflows in Visual Basic are checked; in C#, they are not.</source>
          <target state="translated">기본적으로 산술 연산 및 Visual Basic의 범위를 벗어나는 확인 됩니다. C#에서 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>If the operation occurs in an unchecked context, the result is truncated by discarding any high-order bits that do not fit into the destination type.</source>
          <target state="translated">Unchecked 컨텍스트에서 작업을 수행 하면 대상 형식에 맞지 않는 상위 비트가 삭제 되 고 결과가 잘립니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>The following example illustrates such an unchecked conversion in C#.</source>
          <target state="translated">다음 예제에서는 C#에서 사용 하는 비 검사 변환을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>It repeats the previous example in an unchecked context.</source>
          <target state="translated">Unchecked 컨텍스트에서 앞의 예제 반복 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>The following Microsoft intermediate language (MSIL) instructions throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>:</source>
          <target state="translated">MSIL (intermediate language) 명령은 throw 다음 Microsoft는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">`add.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>signed&gt;<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`add.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>signed&gt;<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">`conv.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>to type&gt;<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`conv.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>입력 &gt;<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">`conv.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>to type&gt;<ept id="p1">*</ept> <ph id="ph3">`.un`</ph></source>
          <target state="translated"><ph id="ph1">`conv.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>to type&gt;<ept id="p1">*</ept> <ph id="ph3">`.un`</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">`mul.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>type&gt;<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`mul.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>type&gt;<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">`sub.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>type&gt;<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`sub.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>type&gt;<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> uses the HRESULT COR_E_OVERFLOW, which has the value 0x80131516.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 0x80131516 값이 있는 HRESULT COR_E_OVERFLOW를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.OverflowException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">인스턴스에 대 한 초기 속성 값 목록은 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>, 참조는 <ph id="ph2">&lt;xref:System.OverflowException.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.OverflowException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 참조(Visual Basic의 경우 <ph id="ph1">`Nothing`</ph>)</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">지역화된 오류 메시지 문자열입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">@FSHO2@오류를 설명하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">지정된 오류 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> should be understandable to the user.</source>
          <target state="translated">콘텐츠는 <ph id="ph1">`message`</ph> 사용자에 게 쉬워야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 참조(Visual Basic의 경우 <ph id="ph1">`Nothing`</ph>)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">원본 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 null 참조(Visual Basic에서는 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)가 아니면, 현재 예외는 내부 예외를 처리하는 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 블록에서 발생한 것입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외는 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에 이전 예외에 대한 참조를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달된 값과 같은 값을 반환하거나 <ph id="ph2">`Nothing`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 null 참조(Visual Basic의 경우 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">내부 예외 참조</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>