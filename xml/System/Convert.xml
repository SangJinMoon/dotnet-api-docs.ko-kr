<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Convert.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53e80e1e98b3ed0d0fdf6b2c1458d5b156e787f6e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e80e1e98b3ed0d0fdf6b2c1458d5b156e787f6e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a base data type to another base data type.</source>
          <target state="translated">기본 데이터 형식을 다른 데이터 형식으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The static methods of the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class are primarily used to support conversion to and from the base data types in the .NET Framework.</source>
          <target state="translated">정적 메서드는 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 클래스는.NET Framework의 기본 데이터 형식 간의 변환을 지 원하는 데 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The supported base types are <ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Char&gt;</ph>, <ph id="ph3">&lt;xref:System.SByte&gt;</ph>, <ph id="ph4">&lt;xref:System.Byte&gt;</ph>, <ph id="ph5">&lt;xref:System.Int16&gt;</ph>, <ph id="ph6">&lt;xref:System.Int32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph9">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph10">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph11">&lt;xref:System.Single&gt;</ph>, <ph id="ph12">&lt;xref:System.Double&gt;</ph>, <ph id="ph13">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph14">&lt;xref:System.DateTime&gt;</ph> and <ph id="ph15">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">지원 되는 기본 형식은 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Char&gt;</ph>, <ph id="ph3">&lt;xref:System.SByte&gt;</ph>, <ph id="ph4">&lt;xref:System.Byte&gt;</ph>, <ph id="ph5">&lt;xref:System.Int16&gt;</ph>, <ph id="ph6">&lt;xref:System.Int32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph9">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph10">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph11">&lt;xref:System.Single&gt;</ph>, <ph id="ph12">&lt;xref:System.Double&gt;</ph>, <ph id="ph13">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph14">&lt;xref:System.DateTime&gt;</ph> 및 <ph id="ph15">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class includes methods to support  other kinds of conversions.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 클래스는 다른 유형의 변환 지 원하는 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>This topic consists of the following sections:</source>
          <target state="translated">이 항목은 다음 섹션으로 구성되어 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><bpt id="p1">[</bpt>Conversions to and from Base Types<ept id="p1">](#Base)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>기본 형식에서 변환<ept id="p1">](#Base)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><bpt id="p1">[</bpt>Non-Decimal Numbers<ept id="p1">](#NonDecimal)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>10 진수가 아닌 숫자<ept id="p1">](#NonDecimal)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><bpt id="p1">[</bpt>Conversions from Custom Objects to Base Types<ept id="p1">](#Custom)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>사용자 지정 개체에서 기본 형식으로 변환<ept id="p1">](#Custom)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><bpt id="p1">[</bpt>Culture-Specific Formatting Information<ept id="p1">](#Culture)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>문화권별 서식 지정 정보<ept id="p1">](#Culture)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><bpt id="p1">[</bpt>Base64 Encoding<ept id="p1">](#Base64)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Base64 인코딩<ept id="p1">](#Base64)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><bpt id="p1">[</bpt>Other Common Conversions<ept id="p1">](#Other)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>다른 일반적인 변환<ept id="p1">](#Other)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Conversions to and from Base Types</source>
          <target state="translated">기본 형식에서 변환</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>A conversion method exists to convert every base type to every other base type.</source>
          <target state="translated">모든 기본 형식을 각각 다른 기본 형식으로 변환 하는 변환 메서드 존재 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>However, the actual call to a particular conversion method can produce one of five outcomes, depending on the value of the base type at run time and the target base type.</source>
          <target state="translated">그러나 특정 변환 메서드를 실제로 호출 실행 시 기본 형식 및 대상 기본 형식의 값에 따라 다섯 가지 결과 중 하나를 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>These five outcomes are:</source>
          <target state="translated">이 5 개 결과:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>No conversion.</source>
          <target state="translated">변환 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>This occurs when an attempt is made to convert from a type to itself (for example, by calling <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType&gt;</ph> with an argument of type <ph id="ph2">&lt;xref:System.Int32&gt;</ph>).</source>
          <target state="translated">자신에 게 특정 형식에서에서 변환할 때이 오류 발생 (호출 하 여 예를 들어 <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 형식의 인수가 있는 <ph id="ph2">&lt;xref:System.Int32&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>In this case, the method simply returns an instance of the original type.</source>
          <target state="translated">이 경우에 메서드를 원래 형식의 인스턴스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>An <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>This occurs when a particular conversion is not supported.</source>
          <target state="translated">특정 변환 지원 되지 않는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>An <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown for the following conversions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> 다음 변환의 경우에 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Conversions from <ph id="ph1">&lt;xref:System.Char&gt;</ph> to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph3">&lt;xref:System.Single&gt;</ph>, <ph id="ph4">&lt;xref:System.Double&gt;</ph>, <ph id="ph5">&lt;xref:System.Decimal&gt;</ph>, or <ph id="ph6">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">변환할 때 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph3">&lt;xref:System.Single&gt;</ph>, <ph id="ph4">&lt;xref:System.Double&gt;</ph>, <ph id="ph5">&lt;xref:System.Decimal&gt;</ph>, 또는 <ph id="ph6">&lt;xref:System.DateTime&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Conversions from <ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Single&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, or <ph id="ph5">&lt;xref:System.DateTime&gt;</ph> to <ph id="ph6">&lt;xref:System.Char&gt;</ph>.</source>
          <target state="translated">변환할 때 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Single&gt;</ph>, <ph id="ph3">&lt;xref:System.Double&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.DateTime&gt;</ph> 를 <ph id="ph6">&lt;xref:System.Char&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Conversions from <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> to any other type except <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">변환할 때 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 를 제외한 다른 형식 <ph id="ph2">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Conversions from any other type, except <ph id="ph1">&lt;xref:System.String&gt;</ph>, to <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">다른 형식으로 변환할 때를 제외 하 고 <ph id="ph1">&lt;xref:System.String&gt;</ph>을 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>A <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.FormatException&gt;</ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>This occurs when the attempt to convert a string value to any other base type fails because the string is not in the proper format.</source>
          <target state="translated">문자열 형식이 없기 때문에 실패 하는 문자열 값을 다른 기본 형식으로 변환 하려고 하는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The exception is thrown for the following conversions:</source>
          <target state="translated">다음 변환에 대 한 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>A string to be converted to a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value does not equal <ph id="ph2">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">문자열을 변환할 수는 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 값과 같지 <ph id="ph2">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>A string to be converted to a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value consists of multiple characters.</source>
          <target state="translated">문자열을 변환할 수는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 여러 문자를 값으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>A string to be converted to any numeric type is not recognized as a valid number.</source>
          <target state="translated">유효한 숫자는 숫자 형식으로 변환할 수는 문자열을 인식 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>A string to be converted to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> is not recognized as a valid date and time value.</source>
          <target state="translated">문자열을 변환할 수는 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 유효한 날짜 및 시간 값으로 인식 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>A successful conversion.</source>
          <target state="translated">성공적으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>For conversions between two different base types not listed in the previous outcomes, all widening conversions as well as all narrowing conversions that do not result in a loss of data will succeed and the method will return a value of the targeted base type.</source>
          <target state="translated">이전 결과에 나열 되지 않은 두 개의 서로 다른 기본 형식 간의 변환에 대 한 데이터 손실이 발생 하지 않는 모든 축소 변환 뿐만 아니라 모든 확대 변환에 성공 하 고 메서드는 기본 대상으로 지정 된 형식의 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>An <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>This occurs when a narrowing conversion results in a loss of data.</source>
          <target state="translated">이 경우 데이터의 손실에서 축소 변환 결과 발생 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>For example, trying to convert a <ph id="ph1">&lt;xref:System.Int32&gt;</ph> instance whose value is 10000 to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> type throws an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph> because 10000 is outside the range of the <ph id="ph4">&lt;xref:System.Byte&gt;</ph> data type.</source>
          <target state="translated">예를 들어 변환 하는 중는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 10000과 값이 하는 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> throw 입력는 <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph> 10000의 범위 밖에 있는 이므로 <ph id="ph4">&lt;xref:System.Byte&gt;</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>An exception will not be thrown if the conversion of a numeric type results in a loss of precision (that is, the loss of some least significant digits).</source>
          <target state="translated">숫자 형식 변환 (즉, 최하위 유효 자릿수가 손실) 정밀도 손실 결과가 같은 경우 예외가 throw 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>However, an exception will be thrown if the result is larger than can be represented by the particular conversion method's return value type.</source>
          <target state="translated">그러나 결과 특정 변환 메서드 반환 값 형식으로 나타낼 수 있는 보다 큰 경우 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>For example, when a <ph id="ph1">&lt;xref:System.Double&gt;</ph> is converted to a <ph id="ph2">&lt;xref:System.Single&gt;</ph>, a loss of precision might occur but no exception is thrown.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 으로 변환 됩니다는 <ph id="ph2">&lt;xref:System.Single&gt;</ph>, 전체 자릿수 손실이 발생할 수 있지만 예외가 throw 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>However, if the magnitude of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> is too large to be represented by a <ph id="ph2">&lt;xref:System.Single&gt;</ph>, an overflow exception is thrown.</source>
          <target state="translated">그러나 경우의 크기는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 표현할 수 너무 커서는 <ph id="ph2">&lt;xref:System.Single&gt;</ph>, 오버플로 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Non-Decimal Numbers</source>
          <target state="translated">10 진수가 아닌 숫자</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class includes static methods that you can call to convert integral values to non-decimal string representations, and to convert strings that represent non-decimal numbers to integral values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert&gt;</ph> 클래스는 정수 값 10 진수가 아닌 문자열 표현으로 변환 하기 위해 호출할 수 있는 정적 메서드를 포함 하 고 변환할 정수 계열 값을 나타내는 10 진수가 아닌 숫자 문자열입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Each of these conversion methods includes a <ph id="ph1">`base`</ph> argument  that lets you specify  the number system; binary (base 2), octal (base 8), and hexadecimal (base 16), as well as decimal (base 10).</source>
          <target state="translated">이러한 변환 메서드는 각각 포함 되어는 <ph id="ph1">`base`</ph> 인수 10 진수 (밑수 10) 뿐 아니라 번호 시스템; 이진 파일 (밑 2), 8 진수 (기 수 8) 및 16 진수 (밑수 16)을 지정할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>There is a set of methods to convert each of the CLS-compliant primitive integral types to a string, and one to convert a string to each of the primitive integral types:</source>
          <target state="translated">CLS 규격 기본 정수 계열 형식 중 각 문자열 및 기본 정수 계열 형식 중 각 문자열을 변환 하려면 하나를 변환 하는 메서드 집합이 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29&gt;</ph>, to convert a byte value to and from a string in a specified base.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29&gt;</ph>, 바이트 값을 문자열로 지정 된 기수로 상호 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29&gt;</ph>, to convert a 16-bit signed integer to and from a string in a specified base.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29&gt;</ph>, 16 비트 부호 있는 정수를 문자열로 지정 된 기수로 상호 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29&gt;</ph>, to convert a 32-bit signed integer to and from a string in a specified base.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29&gt;</ph>, 32 비트 부호 있는 정수를 문자열로 지정 된 기수로 상호 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29&gt;</ph>, to convert a 64-bit signed integer to and from a string in a specified base.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29&gt;</ph>, 64 비트 부호 있는 정수를 문자열로 지정 된 기수로 상호 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29&gt;</ph>, to convert the string representation of a byte value in a specified format to a signed byte.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29&gt;</ph>를 지정 된 형식에서에 바이트 값의 문자열 표현을 서명 된 바이트로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29&gt;</ph>, to convert the string representation of an integer in a specified format to an unsigned 16-bit integer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29&gt;</ph>를 지정 된 형식에서 정수의 문자열 표현을 부호 없는 16 비트 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29&gt;</ph>, to convert the string representation of an integer in a specified format to an unsigned 32-bit integer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29&gt;</ph>를 지정 된 형식에서 정수의 문자열 표현을 부호 없는 32 비트 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29&gt;</ph>, to convert the string representation of an integer in a specified format to an unsigned 64-bit integer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29&gt;</ph>를 지정 된 형식에서 정수의 문자열 표현을 부호 없는 64 비트 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The following example converts the value of <ph id="ph1">&lt;xref:System.Int16.MaxValue?displayProperty=nameWithType&gt;</ph> to a string in all supported numeric formats.</source>
          <target state="translated">다음 예제에서는 값을 변환 <ph id="ph1">&lt;xref:System.Int16.MaxValue?displayProperty=nameWithType&gt;</ph> 지원 되는 숫자 형식 문자열에 모든 문자열.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>It then converts the string value back to a <ph id="ph1">&lt;xref:System.Int16&gt;</ph> value.</source>
          <target state="translated">그런 다음 문자열 값으로 다시 변환은 <ph id="ph1">&lt;xref:System.Int16&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Conversions from Custom Objects to Base Types</source>
          <target state="translated">사용자 지정 개체에서 기본 형식으로 변환</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>In addition to supporting conversions between the base types, the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> method supports conversion of any custom type to any base type.</source>
          <target state="translated">기본 형식 간의 변환을 지원할 뿐 아니라는 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 메서드 기본 형식으로 모든 사용자 지정 형식으로 변환 하도록 지원 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>To do this, the custom type must implement the <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> interface, which defines methods for converting the implementing type to each of the base types.</source>
          <target state="translated">이 작업을 수행 하려면 사용자 지정 형식을 구현 해야는 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 인터페이스를 구현 하는 형식이 각 기본 형식을 변환 하기 위한 메서드를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Conversions that are not supported by a particular type should throw an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated">특정 형식으로 지원 되지 않는 변환 throw 해야는 <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>When the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> method is passed a custom type as its first parameter, or when the <ph id="ph2">`Convert.To`</ph><bpt id="p1">*</bpt>Type<ept id="p1">*</ept> method (such as <ph id="ph3">&lt;xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> is called and passed an instance of a custom type as its first parameter, the <ph id="ph5">&lt;xref:System.Convert&gt;</ph> method, in turn, calls the custom type's <ph id="ph6">&lt;xref:System.IConvertible&gt;</ph> implementation to perform the conversion.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> 메서드는 사용자 지정 형식을 첫 번째 매개 변수로 전달 되거나는 <ph id="ph2">`Convert.To`</ph> <bpt id="p1">*</bpt>형식<ept id="p1">*</ept> 메서드 (같은 <ph id="ph3">&lt;xref:System.Convert.ToInt32%28System.Object%29?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Convert.ToDouble%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 가 호출 되 고 첫 번째 변수로 사용자 정의 형식의 인스턴스를 전달 매개 변수는 <ph id="ph5">&lt;xref:System.Convert&gt;</ph> 메서드를 호출 하는 사용자 지정 형식 <ph id="ph6">&lt;xref:System.IConvertible&gt;</ph> 변환을 수행 하려면 구현 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>For more information, see <bpt id="p1">[</bpt>Type Conversion in the .NET Framework<ept id="p1">](~/docs/standard/base-types/type-conversion.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 형식 변환<ept id="p1">](~/docs/standard/base-types/type-conversion.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Culture-Specific Formatting Information</source>
          <target state="translated">문화권별 서식 지정 정보</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>All the base type conversion methods and the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> method include overloads that have a parameter of type <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">모든 기본 형식 변환 메서드 및 <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> 메서드 형식 매개 변수가 있는 오버 로드가 포함 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>For example, the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> method has the following two overloads:</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> 메서드에 다음과 같은 두 개의 오버 로드가 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> parameter can supply culture-specific formatting information to assist the conversion process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 매개 변수 변환 프로세스를 지원 하기 위해 culture 별 서식 지정 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>However, it is ignored by most of the base type conversion methods.</source>
          <target state="translated">그러나 대부분의 기본 형식 변환 메서드는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>It is used only by the following base type conversion methods.If a <ph id="ph1">`null`</ph><ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> argument is passed to these methods, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the current thread culture is used.</source>
          <target state="translated">다음과 같은 기본 형식 변환 방법으로만 사용 됩니다. 경우는 <ph id="ph1">`null`</ph> <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 를 이러한 메서드에 전달 되는 인수는 <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 현재 스레드 문화권을 나타내는 개체를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>By methods that convert a value to a numeric type.</source>
          <target state="translated">으로 값을 숫자 형식으로 변환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> parameter is used by the overload that has parameters of type <ph id="ph2">&lt;xref:System.String&gt;</ph> and <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 형식의 매개 변수가 있는 오버 로드 매개 변수를 사용 하는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>It is also used by the overload that has parameters of type <ph id="ph1">&lt;xref:System.Object&gt;</ph> and <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> if the object's run-time type is a <ph id="ph3">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">형식의 매개 변수가 있는 오버 로드는 또한 <ph id="ph1">&lt;xref:System.Object&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 개체의 런타임 형식이 <ph id="ph3">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>By methods that convert a value to a date and time.</source>
          <target state="translated">날짜 및 시간 값으로 변환 하는 방법으로</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> parameter is used by the overload that has parameters of type <ph id="ph2">&lt;xref:System.String&gt;</ph> and <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 형식의 매개 변수가 있는 오버 로드 매개 변수를 사용 하는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>It is also used by the overload that has parameters of type <ph id="ph1">&lt;xref:System.Object&gt;</ph> and <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> if the object's run-time type is a <ph id="ph3">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">형식의 매개 변수가 있는 오버 로드는 또한 <ph id="ph1">&lt;xref:System.Object&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 개체의 런타임 형식이 <ph id="ph3">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>By the <ph id="ph1">&lt;xref:System.Convert.ToString%2A?displayProperty=nameWithType&gt;</ph> overloads that include an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> parameter and that convert either a numeric value to a string or a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value to a string.</source>
          <target state="translated">여는 <ph id="ph1">&lt;xref:System.Convert.ToString%2A?displayProperty=nameWithType&gt;</ph> 포함 하는 오버 로드는 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 하 고 매개 변수는 숫자 값 문자열로 변환 또는 <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> 값을 문자열로 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>However, any user-defined type that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> can make use of the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> parameter.</source>
          <target state="translated">그러나 모든 사용자 정의 형식을 구현 하는 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 정확해 활용는 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Base64 Encoding</source>
          <target state="translated">Base64 인코딩</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Base64 encoding converts binary data to a string.</source>
          <target state="translated">Base64 인코딩은 이진 데이터는 문자열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Data expressed as base-64 digits can be easily conveyed over data channels that can only transmit 7-bit characters.</source>
          <target state="translated">Base 64 자리로로 표현 되는 데이터는 7 비트 문자를만 전송할 수 있는 데이터 채널을 통해 쉽게 전달 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class includes the following methods to support base64 encoding: A set of methods support converting an array of bytes to and from a <ph id="ph2">&lt;xref:System.String&gt;</ph> or to and from an array of Unicode characters consisting of base-64 digit characters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert&gt;</ph> base64 인코딩을 지원 하기 위해 다음 메서드를 포함 하는 클래스: 집합이 메서드 지원 바이트 배열에서 변환 하는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 또는 들어오고 base 64 숫자 자 길이의 유니코드 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph>, which converts a byte array to a base64-encoded string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph>를 base64 인코딩 문자열을 바이트 배열로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A&gt;</ph>, which converts a byte array to a base64-encoded character array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A&gt;</ph>으로 변환 하는 바이트 배열 base64 인코딩된 문자 배열로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A&gt;</ph>, which converts a base64-encoded string to a byte array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A&gt;</ph>를 바이트 배열을 base 64로 인코딩된 문자열로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source><ph id="ph1">&lt;xref:System.Convert.FromBase64CharArray%2A&gt;</ph>, which converts a base64-encoded character array to a byte array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.FromBase64CharArray%2A&gt;</ph>을 base 64로 인코딩된 문자 배열 바이트 배열로 변환입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Other Common Conversions</source>
          <target state="translated">다른 일반적인 변환</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>You can use other classes in the NET Framework to perform some conversions that are not supported by the static methods of the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class.</source>
          <target state="translated">NET Framework의 다른 클래스의 정적 메서드를 통해 지원 되지 않는 몇 가지 변환을 수행 하기 위해 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>These include:</source>
          <target state="translated">여기에는 다음이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Conversion to byte arrays</source>
          <target state="translated">바이트 배열로 변환</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> class  provides methods that convert the primitive numeric types (including <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>) to byte arrays and from byte arrays back to primitive data types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.BitConverter&gt;</ph> 기본 숫자 형식으로 변환 하는 메서드를 제공 하는 클래스 (포함 하 여 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>)을 바이트 배열로 바이트에서 배열 롤백할 기본 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>Character encoding and decoding</source>
          <target state="translated">문자 인코딩 및 디코딩</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> class and its derived classes (such as <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.UTF8Encoding&gt;</ph>) provide methods to encode a character array or a string (that is, to convert them to a byte array in a particular encoding) and to decode an encoded byte array (that is, convert a byte array back to UTF16-encoded Unicode characters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> 클래스와 해당 파생된 클래스 (같은 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Text.UTF8Encoding&gt;</ph>)는 문자 배열 또는 문자열을 인코딩하려면 하는 방법을 제공 (즉, 특정 인코딩의 바이트 배열로 변환할)와 디코딩할 수 없는 인코딩된 바이트 배열 (즉, u t f 16으로 인코딩된 유니코드 문자는 바이트 배열 다시 변환 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>For more information, see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Convert">
          <source>The following example demonstrates some of the conversion methods in the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class, including <ph id="ph2">&lt;xref:System.Convert.ToInt32%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Convert.ToBoolean%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Convert.ToString%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 변환 메서드 중 일부는 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 클래스를 포함 하 여 <ph id="ph2">&lt;xref:System.Convert.ToInt32%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Convert.ToBoolean%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Convert.ToString%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Returns an object of a specified type whose value is equivalent to a specified object.</source>
          <target state="translated">값이 지정된 개체와 동일한 지정된 형식의 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">반환할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>Returns an object of the specified type and whose value is equivalent to the specified object.</source>
          <target state="translated">값이 지정된 개체와 동일한 지정된 형식의 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>An object whose type is <ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph> and whose value is equivalent to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">형식이 <ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph>이고 값이 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>와 동일한 개체입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> and <ph id="ph4">&lt;paramref name="conversionType" /&gt;</ph> is not a value type.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>이고 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이 값 형식이 아닌 경우 null 참조입니다(Visual Basic의 경우 <ph id="ph4">&lt;paramref name="conversionType" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> is a general-purpose conversion method that converts the object specified by <ph id="ph2">`value`</ph> to <ph id="ph3">`conversionType`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> 지정한 개체를 변환 하는 범용 변환 방법 <ph id="ph2">`value`</ph> 를 <ph id="ph3">`conversionType`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>The <ph id="ph1">`value`</ph> parameter can be an object of any type, and <ph id="ph2">`conversionType`</ph> can also be a <ph id="ph3">&lt;xref:System.Type&gt;</ph> object that represents any base or custom type.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 매개 변수는 모든 종류의 개체 수와 <ph id="ph2">`conversionType`</ph> 될 수도 있습니다는 <ph id="ph3">&lt;xref:System.Type&gt;</ph> 모든 기본 또는 사용자 지정 형식을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>For the conversion to succeed, <ph id="ph1">`value`</ph> must implement the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface, because the method simply wraps a call to an appropriate <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> method.</source>
          <target state="translated">성공적으로 변환 하는 데 <ph id="ph1">`value`</ph> 구현 해야 합니다는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 메서드 단순히를 적절 한 호출을 래핑하기 때문에 인터페이스 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>The method requires that conversion of <ph id="ph1">`value`</ph> to <ph id="ph2">`conversionType`</ph> be supported.</source>
          <target state="translated">메서드를 사용 하려면 해당 변환의 <ph id="ph1">`value`</ph> 를 <ph id="ph2">`conversionType`</ph> 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>This method uses the current thread's culture for the conversion.</source>
          <target state="translated">이 메서드는 변환에 대 한 현재 스레드의 culture를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and <ph id="ph3">&lt;paramref name="conversionType" /&gt;</ph> is a value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이고 <ph id="ph3">&lt;paramref name="conversionType" /&gt;</ph>이 값 형식입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in a format recognized by <ph id="ph2">&lt;paramref name="conversionType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;paramref name="conversionType" /&gt;</ph>에서 인식되는 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is out of the range of <ph id="ph2">&lt;paramref name="conversionType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="conversionType" /&gt;</ph> 형식의 범위를 벗어나는 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /&gt;</ph> method can convert an enumeration value to another type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /&gt;</ph> 메서드는 다른 형식으로 열거형 값을 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</source>
          <target state="translated">그러나 열거형의 내부 형식이 소스 형식 하는 경우에 다른 형식 열거형 값을 변환할 수 없습니다 것.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</source>
          <target state="translated">형식이 열거형 값으로 변환 하려면 캐스팅 연산자 (C#에서) 또는 (Visual Basic)에서는 변환 함수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>The following example illustrates the conversion to and from a <bpt id="p1">&lt;c&gt;</bpt>Continent<ept id="p1">&lt;/c&gt;</ept> enumeration value.</source>
          <target state="translated">다음 예제에서 변환에서는 <bpt id="p1">&lt;c&gt;</bpt>대륙<ept id="p1">&lt;/c&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /&gt;</ph> method can convert a nullable type to another type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /&gt;</ph> 메서드 다른 형식으로 null 허용 형식을 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>However, it cannot convert another type to a value of a nullable type, even if <ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph> is the underlying type of the <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>.To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</source>
          <target state="translated">그러나 다른 형식을 nullable 형식의 값으로 변환할 수 없습니다 것 경우에 <ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph> 의 내부 형식이 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>합니다. 변환을 수행 하려면 캐스팅 연산자 (C#에서) 또는 (Visual Basic)에서는 변환 함수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type)">
          <source>The following example illustrates the conversion to and from a nullable type.</source>
          <target state="translated">다음 예제에서는 nullable 형식에서 변환 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>The type of object to return.</source>
          <target state="translated">반환할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>Returns an object of the specified type whose value is equivalent to the specified object.</source>
          <target state="translated">지정된 개체와 동일한 값을 갖는 지정된 형식의 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>An object whose underlying type is <ph id="ph1">&lt;paramref name="typeCode" /&gt;</ph> and whose value is equivalent to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">내부 형식이 <ph id="ph1">&lt;paramref name="typeCode" /&gt;</ph>이고 값이 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>와 동일한 개체입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> and <ph id="ph4">&lt;paramref name="typeCode" /&gt;</ph> is <ph id="ph5">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.TypeCode.String" /&gt;</ph>, or <ph id="ph7">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>이고 <ph id="ph3">&lt;see langword="null" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="typeCode" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph> 또는 <ph id="ph6">&lt;see cref="F:System.TypeCode.String" /&gt;</ph>이면 null 참조(Visual Basic의 경우 <ph id="ph7">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source><ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29&gt;</ph> is a general-purpose conversion method that converts the object specified by <ph id="ph2">`value`</ph> to a predefined type specified by <ph id="ph3">`typeCode`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29&gt;</ph> 지정한 개체를 변환 하는 범용 변환 방법 <ph id="ph2">`value`</ph> 에서 지정한 미리 정의 된 유형을 <ph id="ph3">`typeCode`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>The <ph id="ph1">`value`</ph> parameter can be an object of any type.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 매개 변수는 모든 종류의 개체 수 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>For the conversion to succeed, <ph id="ph1">`value`</ph> must implement the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface, because the method simply wraps a call to an appropriate <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> method.</source>
          <target state="translated">성공적으로 변환 하는 데 <ph id="ph1">`value`</ph> 구현 해야 합니다는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 메서드 단순히를 적절 한 호출을 래핑하기 때문에 인터페이스 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>The method also requires that conversion of <ph id="ph1">`value`</ph> to <ph id="ph2">`typeCode`</ph> be supported.</source>
          <target state="translated">메서드는 또한의 변환이 필요 <ph id="ph1">`value`</ph> 를 <ph id="ph2">`typeCode`</ph> 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29&gt;</ph> method does not support the conversion of <ph id="ph2">`value`</ph> to a custom type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29&gt;</ph> 방법은 변환 하는 과정을 지원 하지 않습니다 <ph id="ph2">`value`</ph> 사용자 지정 형식입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>To perform such a conversion, call the <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29&gt;</ph> method.</source>
          <target state="translated">이러한 변환을 수행 하려면 호출 된 <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>The following example illustrates how to use the <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29&gt;</ph> method to change an <ph id="ph2">&lt;xref:System.Object&gt;</ph> to the type specified by the <ph id="ph3">&lt;xref:System.TypeCode&gt;</ph> parameter, if possible.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%29&gt;</ph> 변경 하려면 메서드는 <ph id="ph2">&lt;xref:System.Object&gt;</ph> 에 지정 된 형식에는 <ph id="ph3">&lt;xref:System.TypeCode&gt;</ph> 매개 변수를 가능한 경우.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph> specifies a value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>고 <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph>가 값 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in a format recognized by the <ph id="ph2">&lt;paramref name="typeCode" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="typeCode" /&gt;</ph> 형식에서 인식하는 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is out of the range of the <ph id="ph2">&lt;paramref name="typeCode" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="typeCode" /&gt;</ph> 형식의 범위를 벗어나는 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
          <source><ph id="ph1">&lt;paramref name="typeCode" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeCode" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>The type of object to return.</source>
          <target state="translated">반환할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>Returns an object of the specified type whose value is equivalent to the specified object.</source>
          <target state="translated">지정된 개체와 동일한 값을 갖는 지정된 형식의 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>A parameter supplies culture-specific formatting information.</source>
          <target state="translated">매개 변수에서 문화권별 서식 지정 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>An object whose type is <ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph> and whose value is equivalent to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">형식이 <ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph>이고 값이 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>와 동일한 개체입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> of <ph id="ph3">&lt;paramref name="value" /&gt;</ph> and <ph id="ph4">&lt;paramref name="conversionType" /&gt;</ph> are equal.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>와 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>의 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>이 같으면 <ph id="ph4">&lt;paramref name="conversionType" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> and <ph id="ph4">&lt;paramref name="conversionType" /&gt;</ph> is not a value type.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>이고 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이 값 형식이 아닌 경우 null 참조입니다(Visual Basic의 경우 <ph id="ph4">&lt;paramref name="conversionType" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> is a general-purpose conversion method that converts the object specified by <ph id="ph2">`value`</ph> to <ph id="ph3">`conversionType`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> 지정한 개체를 변환 하는 범용 변환 방법 <ph id="ph2">`value`</ph> 를 <ph id="ph3">`conversionType`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter can be an object of any type, and <ph id="ph2">`conversionType`</ph> can also be a <ph id="ph3">&lt;xref:System.Type&gt;</ph> object that represents any base or custom type.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 매개 변수는 모든 종류의 개체 수와 <ph id="ph2">`conversionType`</ph> 될 수도 있습니다는 <ph id="ph3">&lt;xref:System.Type&gt;</ph> 모든 기본 또는 사용자 지정 형식을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>For the conversion to succeed, <ph id="ph1">`value`</ph> must implement the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface, because the method simply wraps a call to an appropriate <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> method.</source>
          <target state="translated">성공적으로 변환 하는 데 <ph id="ph1">`value`</ph> 구현 해야 합니다는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 메서드 단순히를 적절 한 호출을 래핑하기 때문에 인터페이스 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>The method requires that conversion of <ph id="ph1">`value`</ph> to <ph id="ph2">`conversionType`</ph> be supported.</source>
          <target state="translated">메서드를 사용 하려면 해당 변환의 <ph id="ph1">`value`</ph> 를 <ph id="ph2">`conversionType`</ph> 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that supplies formatting information for the conversion.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 한 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 변환에 대 한 서식 지정 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>Whether and how this parameter is used depends on the underlying <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> implementation.</source>
          <target state="translated">내부에 따라 달라 집니다이 매개 변수는 사용 여부 및 방법을 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> is a base data type, <ph id="ph2">`provider`</ph> is used only for the following conversions:</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 기본 데이터 형식이 <ph id="ph2">`provider`</ph> 다음 변환에만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>Conversion from a number to a string, or from a string to a number.</source>
          <target state="translated">문자열, 숫자 또는 문자열을 숫자로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> must be a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object, a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, or a custom <ph id="ph4">&lt;xref:System.IFormatProvider&gt;</ph> implementation that returns a <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이어야 합니다는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체 또는 사용자 지정 <ph id="ph4">&lt;xref:System.IFormatProvider&gt;</ph> 구현을 반환 하는 <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>However, because the <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> method performs the conversion using the default "G" format specifier, the <ph id="ph2">`provider`</ph> parameter has no effect if <ph id="ph3">`value`</ph> or the target type is an unsigned integer.</source>
          <target state="translated">그러나 때문에 <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> 메서드 기본 "G" 형식 지정자를 사용 하 여 변환을 수행는 <ph id="ph2">`provider`</ph> 매개 변수는 아무런 영향을 주지 경우 <ph id="ph3">`value`</ph> 또는 대상 형식이 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the current thread culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 현재 스레드 문화권을 나타내는 개체를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>Conversion from a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value to a string, or from a string to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value.</source>
          <target state="translated">변환 된 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 값을 문자열로 또는 문자열을 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> must be a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 있어야는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the current thread culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 현재 스레드 문화권을 나타내는 개체를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> is an application-defined type, its <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> implementation may use the <ph id="ph3">`provider`</ph> parameter.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 가 응용 프로그램 정의 형식이 해당 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 구현을 사용할 수는 <ph id="ph3">`provider`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> class that implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Temperature`</ph> 인터페이스를 구현하는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>The following example creates an instance of the <ph id="ph1">`Temperature`</ph> class and calls the <ph id="ph2">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29&gt;</ph> method to convert it to the basic numeric types supported by the .NET Framework and to a <ph id="ph3">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">다음 예제에서는의 인스턴스는 <ph id="ph1">`Temperature`</ph> 클래스 및 호출은 <ph id="ph2">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29&gt;</ph> 메서드 및.NET Framework에서 지원 되는 기본 숫자 형식으로 변환할 수는 <ph id="ph3">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>It illustrates that the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> method wraps a call to the source type's <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> implementation.</source>
          <target state="translated">설명 하는지는 <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A&gt;</ph> 메서드 소스 형식에 대 한 호출을 래핑합니다 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and <ph id="ph3">&lt;paramref name="conversionType" /&gt;</ph> is a value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이고 <ph id="ph3">&lt;paramref name="conversionType" /&gt;</ph>이 값 형식입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in a format for <ph id="ph2">&lt;paramref name="conversionType" /&gt;</ph> recognized by <ph id="ph3">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="conversionType" /&gt;</ph>에서 인식되는 <ph id="ph3">&lt;paramref name="provider" /&gt;</ph>의 형식이 아닌 경우</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is out of the range of <ph id="ph2">&lt;paramref name="conversionType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="conversionType" /&gt;</ph> 형식의 범위를 벗어나는 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /&gt;</ph> method can convert an enumeration value to another type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /&gt;</ph> 메서드는 다른 형식으로 열거형 값을 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>However, it cannot convert another type to an enumeration value, even if the source type is the underlying type of the enumeration.</source>
          <target state="translated">그러나 열거형의 내부 형식이 소스 형식 하는 경우에 다른 형식 열거형 값을 변환할 수 없습니다 것.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>To convert a type to an enumeration value, use a casting operator (in C#) or a conversion function (in Visual Basic).</source>
          <target state="translated">형식이 열거형 값으로 변환 하려면 캐스팅 연산자 (C#에서) 또는 (Visual Basic)에서는 변환 함수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>The following example illustrates the conversion to and from a <bpt id="p1">&lt;c&gt;</bpt>Continent<ept id="p1">&lt;/c&gt;</ept> enumeration value.</source>
          <target state="translated">다음 예제에서 변환에서는 <bpt id="p1">&lt;c&gt;</bpt>대륙<ept id="p1">&lt;/c&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /&gt;</ph> method can convert a nullable type to another type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" /&gt;</ph> 메서드 다른 형식으로 null 허용 형식을 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>However, it cannot convert another type to a value of a nullable type, even if <ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph> is the underlying type of the <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>.</source>
          <target state="translated">그러나 다른 형식을 nullable 형식의 값으로 변환할 수 없습니다 것 경우에 <ph id="ph1">&lt;paramref name="conversionType" /&gt;</ph> 의 내부 형식이 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>To perform the conversion, you can use a casting operator (in C#) or a conversion function (in Visual Basic).</source>
          <target state="translated">변환을 수행 하려면 캐스팅 연산자 (C#에서) 또는 (Visual Basic)에서는 변환 함수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
          <source>The following example illustrates the conversion to and from a nullable type.</source>
          <target state="translated">다음 예제에서는 nullable 형식에서 변환 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>The type of object to return.</source>
          <target state="translated">반환할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>Returns an object of the specified type whose value is equivalent to the specified object.</source>
          <target state="translated">지정된 개체와 동일한 값을 갖는 지정된 형식의 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>A parameter supplies culture-specific formatting information.</source>
          <target state="translated">매개 변수에서 문화권별 서식 지정 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>An object whose underlying type is <ph id="ph1">&lt;paramref name="typeCode" /&gt;</ph> and whose value is equivalent to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">내부 형식이 <ph id="ph1">&lt;paramref name="typeCode" /&gt;</ph>이고 값이 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>와 동일한 개체입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> and <ph id="ph4">&lt;paramref name="typeCode" /&gt;</ph> is <ph id="ph5">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.TypeCode.String" /&gt;</ph>, or <ph id="ph7">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>이고 <ph id="ph3">&lt;see langword="null" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="typeCode" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph> 또는 <ph id="ph6">&lt;see cref="F:System.TypeCode.String" /&gt;</ph>이면 null 참조(Visual Basic의 경우 <ph id="ph7">&lt;see cref="F:System.TypeCode.Object" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source><ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> is a general-purpose conversion method that converts the object specified by <ph id="ph2">`value`</ph> to a predefined type specified by <ph id="ph3">`typeCode`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> 지정한 개체를 변환 하는 범용 변환 방법 <ph id="ph2">`value`</ph> 에서 지정한 미리 정의 된 유형을 <ph id="ph3">`typeCode`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter can be an object of any type.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 매개 변수는 모든 종류의 개체 수 있습니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>For the conversion to succeed, <ph id="ph1">`value`</ph> must implement the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface, because the method simply wraps a call to an appropriate <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> method.</source>
          <target state="translated">성공적으로 변환 하는 데 <ph id="ph1">`value`</ph> 구현 해야 합니다는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 메서드 단순히를 적절 한 호출을 래핑하기 때문에 인터페이스 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>The method also requires that conversion of <ph id="ph1">`value`</ph> to <ph id="ph2">`typeCode`</ph> be supported.</source>
          <target state="translated">메서드는 또한의 변환이 필요 <ph id="ph1">`value`</ph> 를 <ph id="ph2">`typeCode`</ph> 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> method does not support the conversion of <ph id="ph2">`value`</ph> to a custom type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> 방법은 변환 하는 과정을 지원 하지 않습니다 <ph id="ph2">`value`</ph> 사용자 지정 형식입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>To perform such a conversion, call the <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">이러한 변환을 수행 하려면 호출 된 <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that supplies formatting information for the conversion.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 한 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 변환에 대 한 서식 지정 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>Whether and how this parameter is used depends on the underlying <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> implementation.</source>
          <target state="translated">내부에 따라 달라 집니다이 매개 변수는 사용 여부 및 방법을 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> is a base data type, <ph id="ph2">`provider`</ph> is used only for the following conversions.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 기본 데이터 형식이 <ph id="ph2">`provider`</ph> 다음 변환에만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>If a <ph id="ph1">`null`</ph><ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> argument is passed to these methods, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the current thread culture is used.</source>
          <target state="translated">경우는 <ph id="ph1">`null`</ph> <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 를 이러한 메서드에 전달 되는 인수는 <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 현재 스레드 문화권을 나타내는 개체를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>Conversion from a number to a string, or from a string to a number.</source>
          <target state="translated">문자열, 숫자 또는 문자열을 숫자로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> must be a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object, a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, or a custom <ph id="ph4">&lt;xref:System.IFormatProvider&gt;</ph> implementation that returns a <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이어야 합니다는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체 또는 사용자 지정 <ph id="ph4">&lt;xref:System.IFormatProvider&gt;</ph> 구현을 반환 하는 <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>However, because the <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> method performs the conversion using the default "G" format specifier, the <ph id="ph2">`provider`</ph> parameter has no effect if <ph id="ph3">`value`</ph> or the target type is an unsigned integer.</source>
          <target state="translated">그러나 때문에 <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> 메서드 기본 "G" 형식 지정자를 사용 하 여 변환을 수행는 <ph id="ph2">`provider`</ph> 매개 변수는 아무런 영향을 주지 경우 <ph id="ph3">`value`</ph> 또는 대상 형식이 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>Conversion from a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value to a string, or from a string to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value.</source>
          <target state="translated">변환 된 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 값을 문자열로 또는 문자열을 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> must be a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 있어야는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> is an application-defined type, its <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> implementation may use the <ph id="ph3">`provider`</ph> parameter.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 가 응용 프로그램 정의 형식이 해당 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 구현을 사용할 수는 <ph id="ph3">`provider`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>The following example defines a custom format provider named <ph id="ph1">`InterceptProvider`</ph> that indicates when its <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method is called and returns a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the fr-FR culture and a <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object for the en-US culture.</source>
          <target state="translated">다음 예제에서는 라는 사용자 지정 형식 공급자를 정의 <ph id="ph1">`InterceptProvider`</ph> 시기를 지정 하는 해당 <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 메서드 호출 되 고 반환는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> FR-FR 문화권에 대 한 및 <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> EN-US 문화권에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>This format provider is used in all calls to the <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">이 형식 공급자의 모든 호출에 사용 되는 <ph id="ph1">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>The example then creates an array with a <ph id="ph1">&lt;xref:System.Double&gt;</ph> and a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value and makes repeated calls to <ph id="ph3">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> with each value and each member of the <ph id="ph4">&lt;xref:System.TypeCode&gt;</ph> enumeration.</source>
          <target state="translated">된 배열을 만듭니다는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 및 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 값 및 호출을 반복된 합니다 <ph id="ph3">&lt;xref:System.Convert.ChangeType%28System.Object%2CSystem.TypeCode%2CSystem.IFormatProvider%29&gt;</ph> 각 값과의 각 멤버는 <ph id="ph4">&lt;xref:System.TypeCode&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>The example illustrates when the method uses the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> parameter and also illustrates the use of the <ph id="ph2">`provider`</ph> parameter to perform culture-sensitive formatting.</source>
          <target state="translated">이 예제는 메서드에서 사용 하는 경우를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 매개 변수에서는 또한를 사용 하 고는 <ph id="ph2">`provider`</ph> 문화권 구분 서식 지정을 수행 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph> specifies a value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>고 <ph id="ph3">&lt;paramref name="typeCode" /&gt;</ph>가 값 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in a format for the <ph id="ph2">&lt;paramref name="typeCode" /&gt;</ph> type recognized by <ph id="ph3">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="provider" /&gt;</ph>에서 인식되는 <ph id="ph2">&lt;paramref name="typeCode" /&gt;</ph> 형식에 대한 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is out of the range of the <ph id="ph2">&lt;paramref name="typeCode" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="typeCode" /&gt;</ph> 형식의 범위를 벗어나는 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="typeCode" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeCode" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="F:System.Convert.DBNull">
          <source>A constant that represents a database column that is absent of data; that is, database null.</source>
          <target state="translated">데이터가 없는 데이터베이스 열, 즉 null 데이터베이스를 나타내는 상수입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Convert.DBNull">
          <source>The <ph id="ph1">&lt;xref:System.Convert.DBNull&gt;</ph> field is equivalent to <ph id="ph2">&lt;xref:System.DBNull.Value?displayProperty=nameWithType&gt;</ph>, as the following example shows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.DBNull&gt;</ph> 해당 하는 필드 <ph id="ph2">&lt;xref:System.DBNull.Value?displayProperty=nameWithType&gt;</ph>다음 예제와 같이 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>A Unicode character array.</source>
          <target state="translated">유니코드 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>A position within <bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept> 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The number of elements in <bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>의 요소 중에서 변환할 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</source>
          <target state="translated">base-64 숫자의 이진 데이터를 해당하는 8비트 부호 없는 정수 배열로 인코딩하는 방법으로 유니코드 문자 배열의 하위 집합을 변환합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>Parameters specify the subset in the input array and the number of elements to convert.</source>
          <target state="translated">매개 변수에는 입력 배열의 하위 집합과 변환할 요소 수를 지정합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>An array of 8-bit unsigned integers equivalent to <ph id="ph1">&lt;paramref name="length" /&gt;</ph> elements at position <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> in <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph>의 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> 위치에 있는 <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph> 요소에 해당하는 8비트 부호 없는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">`inArray`</ph> is composed of base-64 digits, white-space characters, and trailing padding characters.</source>
          <target state="translated"><ph id="ph1">`inArray`</ph> base-64 숫자, 공백 문자 및 후행 채움 문자가 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</source>
          <target state="translated">Base-64 숫자 0에서 오름차순 소문자 "Z"를 대문자 "A"는 "a"-"z", "0"에서 "9" 까지의 숫자 및 기호 "+" 및 "/"입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</source>
          <target state="translated">공백 문자 및 유니코드 이름 및 16 진수 코드 포인트는 탭 (문자 집계, U + 0009), 줄 바꿈 (줄 바꿈, U + 000A), 캐리지 리턴 (캐리지 리턴, U + 000d) 및 공백 (공간 요소, U + 0020).</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>An arbitrary number of white-space characters can appear in <ph id="ph1">`inArray`</ph> because all white-space characters are ignored.</source>
          <target state="translated">공백 문자는 임의 개수의에 나타날 수 <ph id="ph1">`inArray`</ph> 하므로 모든 공백 문자는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The valueless character, "=", is used for trailing padding.</source>
          <target state="translated">값이 없는 문자, "=", 안쪽 여백 뒤쪽에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The end of <ph id="ph1">`inArray`</ph> can consist of zero, one, or two padding characters.</source>
          <target state="translated">끝 <ph id="ph1">`inArray`</ph> 0 개 또는 두 채움 문자가 구성 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.FromBase64CharArray%2A&gt;</ph> method is designed to process a single character array that contains all the data to be decoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.FromBase64CharArray%2A&gt;</ph> 메서드는 디코딩할 모든 데이터가 포함 된 단일 문자 배열을 처리 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>To decode base-64 character data from a stream, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">사용 하 여 스트림에서 base-64 문자 데이터를 디코딩하는 <ph id="ph1">&lt;xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method to decode UUencoded (base-64) data and save it as binary output.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> UUencoded (base-64) 데이터를 디코딩하려면 하 이진 출력으로 저장 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> methods.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%2CSystem.Base64FormattingOptions%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Convert.FromBase64CharArray%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The input is divided into groups of three bytes (24 bits) each.</source>
          <target state="translated">입력은 각 3 바이트 (24 비트)의 그룹으로 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</source>
          <target state="translated">따라서 각 그룹에서 10 진수 0-63 범위가 있는 네 개의 6 비트 숫자 이루어져 있습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>In this example, there are 85 3-byte groups with one byte remaining.</source>
          <target state="translated">이 예제에서는 85 3 바이트 그룹 한 바이트가 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</source>
          <target state="translated">첫 번째 그룹 00, 01, 및 4 개 6 비트 값이 10 진수 0, 0, 4, 및 2 동일한 02 16 진수 값으로 이루어져 있습니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>Those four values correspond to the base-64 digits, "A", "A", "E", and "C", at the beginning of the output.</source>
          <target state="translated">이러한 네 가지 값 base 64 자리로, "A", "A", "E" 및 "C"는 출력의 시작 부분에 해당합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</source>
          <target state="translated">3 바이트 그룹의 정수가 없는 경우 남아 있는 바이트는 효과적으로 완전 한 그룹을 형성 하기 위해 0으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>In this example, the value of the last byte is hexadecimal FF.</source>
          <target state="translated">이 예제에서는 마지막 바이트의 값은 16 진수 FF입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</source>
          <target state="translated">처음 6 비트 base 64 숫자 "/" 출력의 끝에 해당 하는 10 진수 63 같은지 여부와 다음 2 비트는 base 64 숫자 "w"에 해당 하는 10 진수 48 0으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The last two 6-bit values are padding and correspond to the valueless padding character, "=".</source>
          <target state="translated">마지막 두 6 비트 값이 패딩 하 고 해당 하는 값이 없는 채움 문자 "=".</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>가 0 미만입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="length" /&gt;</ph> indicates a position not within <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>과 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>의 합이 <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph> 내에 있지 않은 위치를 나타내는 경우</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The length of <ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>, ignoring white-space characters, is not zero or a multiple of 4.</source>
          <target state="translated">공백 문자를 제외한 <ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>의 길이가 0이 아니거나 4의 배수가 아닌 경우</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source>The format of <ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>의 형식이 유효하지 않은 경우</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>에는 기본 64 문자가 아닌 문자, 두 개 이상의 안쪽 여백 문자 또는 안쪽 여백 문자 중 공백 문자가 아닌 문자를 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The string to convert.</source>
          <target state="translated">변환할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64String(System.String)">
          <source>Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</source>
          <target state="translated">base-64 숫자의 이진 데이터를 해당하는 8비트 부호 없는 정수 배열로 인코딩하는 방법으로 지정된 문자열을 변환합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64String(System.String)">
          <source>An array of 8-bit unsigned integers that is equivalent to <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에 해당하는 8비트 부호 없는 정수 배열입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source><ph id="ph1">`s`</ph> is composed of base-64 digits, white-space characters, and trailing padding characters.</source>
          <target state="translated"><ph id="ph1">`s`</ph> base-64 숫자, 공백 문자 및 후행 채움 문자가 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", lowercase characters "a" to "z", numerals "0" to "9", and the symbols "+" and "/".</source>
          <target state="translated">Base-64 숫자 0에서 오름차순 소문자 "Z"를 대문자 "A"는 "a"-"z", "0"에서 "9" 까지의 숫자 및 기호 "+" 및 "/"입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The white-space characters, and their Unicode names and hexadecimal code points, are tab (CHARACTER TABULATION, U+0009), newline (LINE FEED, U+000A), carriage return (CARRIAGE RETURN, U+000D), and blank (SPACE, U+0020).</source>
          <target state="translated">공백 문자 및 유니코드 이름 및 16 진수 코드 포인트는 탭 (문자 집계, U + 0009), 줄 바꿈 (줄 바꿈, U + 000A), 캐리지 리턴 (캐리지 리턴, U + 000d) 및 공백 (공간 요소, U + 0020).</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>An arbitrary number of white-space characters can appear in <ph id="ph1">`s`</ph> because all white-space characters are ignored.</source>
          <target state="translated">공백 문자는 임의 개수의에 나타날 수 <ph id="ph1">`s`</ph> 하므로 모든 공백 문자는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The valueless character, "=", is used for trailing padding.</source>
          <target state="translated">값이 없는 문자, "=", 안쪽 여백 뒤쪽에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The end of <ph id="ph1">`s`</ph> can consist of zero, one, or two padding characters.</source>
          <target state="translated">끝 <ph id="ph1">`s`</ph> 0 개 또는 두 채움 문자가 구성 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A&gt;</ph> method is designed to process a single string that contains all the data to be decoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A&gt;</ph> 메서드는 디코딩할 모든 데이터가 포함 된 단일 문자열을 처리 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>To decode base-64 character data from a stream, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">사용 하 여 스트림에서 base-64 문자 데이터를 디코딩하는 <ph id="ph1">&lt;xref:System.Security.Cryptography.FromBase64Transform?displayProperty=nameWithType&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29&gt;</ph> method to convert a byte array to a UUencoded (base-64) string, and then calls the <ph id="ph2">&lt;xref:System.Convert.FromBase64String%28System.String%29&gt;</ph> method to restore the original byte array.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29&gt;</ph> (base-64) Uuencode 된 문자열을 설정한 다음 호출 바이트 배열로 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Convert.FromBase64String%28System.String%29&gt;</ph> 원본 바이트 배열 복원 하는 메서드.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The following is a more complex example that creates a 20-element array of 32-bit integers.</source>
          <target state="translated">다음은 32 비트 정수는 요소가 20 개인 배열 만드는 더 복잡 한 예제입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>It then uses the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <ph id="ph2">&lt;xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다음 사용 하 여는 <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 각 요소를 호출 하 여 버퍼에서 적절 한 위치에 저장 되는 바이트 배열로 변환 메서드는 <ph id="ph2">&lt;xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>This buffer is then passed to the <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29&gt;</ph> method to create a UUencoded (base-64) string.</source>
          <target state="translated">이 버퍼에 전달 되는 <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29&gt;</ph> 방법을 (base-64) Uuencode 된 문자열을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Convert.FromBase64String%28System.String%29&gt;</ph> method to decode the UUencoded string, and calls the <ph id="ph2">&lt;xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</source>
          <target state="translated">그런 다음 호출 하는 <ph id="ph1">&lt;xref:System.Convert.FromBase64String%28System.String%29&gt;</ph> 메서드를 Uuencode 문자열 및 호출을 디코딩하는 <ph id="ph2">&lt;xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType&gt;</ph> 메서드를 각 집합이 4 바이트 (32 비트 정수 크기)을 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The output from the example shows that the original array has been successfully restored.</source>
          <target state="translated">이 예제에서 출력 원래 배열을 성공적으로 복원 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64String(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="s" /&gt;</ph>, ignoring white-space characters, is not zero or a multiple of 4.</source>
          <target state="translated">공백 문자를 제외한 <ph id="ph1">&lt;paramref name="s" /&gt;</ph>의 길이가 0이 아니거나 4의 배수가 아닌 경우</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64String(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64String(System.String)">
          <source>The format of <ph id="ph1">&lt;paramref name="s" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>의 형식이 유효하지 않은 경우</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Convert.FromBase64String(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>에는 기본 64 문자가 아닌 문자, 두 개 이상의 패딩 문자 또는 패딩 문자 중 공백 문자가 아닌 문자를 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Convert.GetTypeCode(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Convert.GetTypeCode(System.Object)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> for the specified object.</source>
          <target state="translated">지정된 개체의 <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Convert.GetTypeCode(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> for <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph> if <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph>에 대해 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>를 반환하거나, <ph id="ph3">&lt;see cref="F:System.TypeCode.Empty" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="value" /&gt;</ph>이면 <ph id="ph5">&lt;see langword="null" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Convert.IsDBNull(System.Object)">
          <source>An object.</source>
          <target state="translated">개체입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Convert.IsDBNull(System.Object)">
          <source>Returns an indication whether the specified object is of type <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph>.</source>
          <target state="translated">지정된 개체의 형식이 <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph>인지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Convert.IsDBNull(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is of type <ph id="ph3">&lt;see cref="T:System.DBNull" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>의 형식이 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>이면 <ph id="ph3">&lt;see cref="T:System.DBNull" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.IsDBNull(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.IsDBNull%2A&gt;</ph> method tests whether the <ph id="ph2">`value`</ph> parameter is equal to <ph id="ph3">&lt;xref:System.DBNull.Value?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.IsDBNull%2A&gt;</ph> 메서드 테스트 여부는 <ph id="ph2">`value`</ph> 매개 변수와 같으면 <ph id="ph3">&lt;xref:System.DBNull.Value?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.IsDBNull(System.Object)">
          <source>It is equivalent to the following code:</source>
          <target state="translated">다음 코드를 하는 것이 같습니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.IsDBNull(System.Object)">
          <source><ph id="ph1">&lt;xref:System.DBNull.Value?displayProperty=nameWithType&gt;</ph> is used to indicate a value that is missing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DBNull.Value?displayProperty=nameWithType&gt;</ph> 누락 된 값을 나타내는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.IsDBNull(System.Object)">
          <source>It is not equivalent to <ph id="ph1">`null`</ph> or to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">동일 하지 않습니다 <ph id="ph1">`null`</ph> 또는 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.IsDBNull(System.Object)">
          <source>Therefore, code such as <ph id="ph1">`Convert.IsDBNull(null)`</ph> in C# or <ph id="ph2">`Convert.IsDBNull(Nothing)`</ph> in Visual Basic returns<ph id="ph3">`false`</ph>.</source>
          <target state="translated">따라서 같은 코딩할 <ph id="ph1">`Convert.IsDBNull(null)`</ph> C# 또는 <ph id="ph2">`Convert.IsDBNull(Nothing)`</ph> Visual Basic returns에<ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.IsDBNull(System.Object)">
          <source>The following example uses a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> object to retrieve survey data from a database.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 설문 조사 데이터를 데이터베이스에서 검색할 개체입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.IsDBNull(System.Object)">
          <source>It assigns each row's field values to an array, and then passes each array element to the <ph id="ph1">&lt;xref:System.Convert.IsDBNull%2A&gt;</ph> method.</source>
          <target state="translated">각 행의 필드 값 배열에 할당 하 고 다음 단계는 각 배열 요소는 <ph id="ph1">&lt;xref:System.Convert.IsDBNull%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.IsDBNull(System.Object)">
          <source>If the method returns <ph id="ph1">`true`</ph>, the example assigns the string "NA" to the array element.</source>
          <target state="translated">메서드에서 반환 되 면 <ph id="ph1">`true`</ph>,이 예에서는 문자열 "NA"를 배열 요소에 할당 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.IsDBNull(System.Object)">
          <source>The array is then added to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType&gt;</ph> control.</source>
          <target state="translated">배열에 추가 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> 의 컬렉션을 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView?displayProperty=nameWithType&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</source>
          <target state="translated">8비트 부호 없는 정수 배열의 하위 집합을 base-64 숫자로 인코딩된 유니코드 문자 배열의 해당하는 하위 집합으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>An input array of 8-bit unsigned integers.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 입력 배열입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>A position within <bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept> 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The number of elements of <bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>의 요소 중에서 변환할 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>An output array of Unicode characters.</source>
          <target state="translated">유니코드 문자로 구성된 출력 배열입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>A position within <bpt id="p1">&lt;c&gt;</bpt>outArray<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>outArray<ept id="p1">&lt;/c&gt;</ept> 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</source>
          <target state="translated">8비트 부호 없는 정수 배열의 하위 집합을 base-64 숫자로 인코딩된 유니코드 문자 배열의 해당하는 하위 집합으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.</source>
          <target state="translated">매개 변수는 하위 집합을 입력 및 출력 배열의 오프셋으로 지정하고 변환할 입력 배열의 요소 수를 지정합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>A 32-bit signed integer containing the number of bytes in <ph id="ph1">&lt;paramref name="outArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="outArray" /&gt;</ph>의 바이트 수를 포함하는 32비트 부호 있는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The subset of <ph id="ph1">`length`</ph> elements of <ph id="ph2">`inArray`</ph> starting at position <ph id="ph3">`offsetIn`</ph>, are taken as a numeric value and converted to a subset of elements in <ph id="ph4">`outArray`</ph> starting at position <ph id="ph5">`offsetOut`</ph>.</source>
          <target state="translated">하위 집합 <ph id="ph1">`length`</ph> 요소의 <ph id="ph2">`inArray`</ph> 위치에서 시작 <ph id="ph3">`offsetIn`</ph>, 숫자 값으로 처리 및에서 요소의 하위 집합으로 변환 <ph id="ph4">`outArray`</ph> 위치에서 시작 <ph id="ph5">`offsetOut`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The return value indicates the number of converted elements in <ph id="ph1">`outArray`</ph>.</source>
          <target state="translated">반환 값에서 변환 된 요소의 수를 나타내는 <ph id="ph1">`outArray`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The subset of <ph id="ph1">`outArray`</ph> consists of base-64 digits.</source>
          <target state="translated">하위 집합 <ph id="ph1">`outArray`</ph> base 64 자리로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</source>
          <target state="translated">Base-64 숫자 0에서 오름차순 소문자 "Z"를 대문자 "A"는 "a"-"z", "0"부터 "9" 까지의 숫자 및 기호 "+" 및 "/"입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The valueless character, "=", is used for trailing padding.</source>
          <target state="translated">값이 없는 문자, "=", 안쪽 여백 뒤쪽에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> and <ph id="ph2">`length`</ph> parameters are 32-bit signed numbers.</source>
          <target state="translated"><ph id="ph1">`offset`</ph> 및 <ph id="ph2">`length`</ph> 매개 변수는 32 비트 부호 있는 숫자입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">`offsetIn`</ph> and <ph id="ph2">`offsetOut`</ph> parameters are zero-based array positions.</source>
          <target state="translated"><ph id="ph1">`offsetIn`</ph> 및 <ph id="ph2">`offsetOut`</ph> 매개 변수는 0부터 시작 배열 위치입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A&gt;</ph> method is designed to process a single byte array that contains all the data to be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A&gt;</ph> 메서드는 모든 데이터를 인코딩할 수를 포함 하는 단일 바이트 배열을 처리 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To create a base-64 character array from a byte stream, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">Base-64 문자 배열 바이트 스트림에서 만들려면 사용은 <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The following example demonstrates using the <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A&gt;</ph> method to UUencode (encode in base 64) a binary stream, then save the encoding to a file.</source>
          <target state="translated">다음 예제를 사용 하 여는 <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A&gt;</ph> UUencode 메서드 (base 64에서 인코딩)를 이진 스트림으로 다음 인코딩을 파일에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> or <ph id="ph2">&lt;paramref name="outArray" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="outArray" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offsetIn" /&gt;</ph>, <ph id="ph2">&lt;paramref name="offsetOut" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="length" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offsetIn" /&gt;</ph>, <ph id="ph2">&lt;paramref name="offsetOut" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="length" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offsetIn" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is greater than the length of <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offsetIn" /&gt;</ph>과 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>의 합이 <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph>의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offsetOut" /&gt;</ph> plus the number of elements to return is greater than the length of <ph id="ph2">&lt;paramref name="outArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offsetOut" /&gt;</ph>과 반환할 요소 수의 합이 <ph id="ph2">&lt;paramref name="outArray" /&gt;</ph>의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>An input array of 8-bit unsigned integers.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 입력 배열입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>A position within <bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept> 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The number of elements of <bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>의 요소 중에서 변환할 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>An output array of Unicode characters.</source>
          <target state="translated">유니코드 문자로 구성된 출력 배열입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>A position within <bpt id="p1">&lt;c&gt;</bpt>outArray<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>outArray<ept id="p1">&lt;/c&gt;</ept> 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /&gt;</ph> to insert a line break every 76 characters, or <ph id="ph2">&lt;see cref="F:System.Base64FormattingOptions.None" /&gt;</ph> to not insert line breaks.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /&gt;</ph>는 76자마다 줄 바꿈을 삽입하며 <ph id="ph2">&lt;see cref="F:System.Base64FormattingOptions.None" /&gt;</ph>은 줄 바꿈을 삽입하지 않습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</source>
          <target state="translated">8비트 부호 없는 정수 배열의 하위 집합을 base-64 숫자로 인코딩된 유니코드 문자 배열의 해당하는 하위 집합으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>Parameters specify the subsets as offsets in the input and output arrays, the number of elements in the input array to convert, and whether line breaks are inserted in the output array.</source>
          <target state="translated">매개 변수는 하위 집합을 입력 및 출력 배열의 오프셋으로 지정하고, 변환할 입력 배열의 요소 수를 지정하고, 출력 배열에 줄 바꿈을 삽입할지를 지정합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>A 32-bit signed integer containing the number of bytes in <ph id="ph1">&lt;paramref name="outArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="outArray" /&gt;</ph>의 바이트 수를 포함하는 32비트 부호 있는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The subset of <ph id="ph1">`length`</ph> elements of the <ph id="ph2">`inArray`</ph> parameter starting at position <ph id="ph3">`offsetIn`</ph>, are taken as a numeric value and converted to a subset of elements in the <ph id="ph4">`outArray`</ph> parameter starting at position <ph id="ph5">`offsetOut`</ph>.</source>
          <target state="translated">하위 집합 <ph id="ph1">`length`</ph> 의 요소는 <ph id="ph2">`inArray`</ph> 위치에서 시작 하는 매개 변수 <ph id="ph3">`offsetIn`</ph>, 숫자 값으로 처리 및에서 요소의 하위 집합으로 변환 된 <ph id="ph4">`outArray`</ph> 위치에서 시작 하는 매개 변수 <ph id="ph5">`offsetOut`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The return value indicates the number of converted elements in <ph id="ph1">`outArray`</ph>.</source>
          <target state="translated">반환 값에서 변환 된 요소의 수를 나타내는 <ph id="ph1">`outArray`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The subset of <ph id="ph1">`outArray`</ph> consists of base-64 digits.</source>
          <target state="translated">하위 집합 <ph id="ph1">`outArray`</ph> base 64 자리로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</source>
          <target state="translated">Base-64 숫자 0에서 오름차순 소문자 "Z"를 대문자 "A"는 "a"-"z", "0"부터 "9" 까지의 숫자 및 기호 "+" 및 "/"입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The valueless character "=" is used for trailing padding.</source>
          <target state="translated">값이 없는 문자 "=" 뒤쪽 여백에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The <ph id="ph1">`offset`</ph> and <ph id="ph2">`length`</ph> parameters are 32-bit signed numbers.</source>
          <target state="translated"><ph id="ph1">`offset`</ph> 및 <ph id="ph2">`length`</ph> 매개 변수는 32 비트 부호 있는 숫자입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The <ph id="ph1">`offsetIn`</ph> and <ph id="ph2">`offsetOut`</ph> parameters are zero-based array positions.</source>
          <target state="translated"><ph id="ph1">`offsetIn`</ph> 및 <ph id="ph2">`offsetOut`</ph> 매개 변수는 0부터 시작 배열 위치입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A&gt;</ph> method is designed to process a single byte array that contains all the data to be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A&gt;</ph> 메서드는 모든 데이터를 인코딩할 수를 포함 하는 단일 바이트 배열을 처리 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>To create a base-64 character array from a byte stream, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">Base-64 문자 배열 바이트 스트림에서 만들려면 사용은 <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>If the <ph id="ph1">`options`</ph> parameter is set to <ph id="ph2">&lt;xref:System.Base64FormattingOptions.InsertLineBreaks&gt;</ph> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</source>
          <target state="translated">경우는 <ph id="ph1">`options`</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Base64FormattingOptions.InsertLineBreaks&gt;</ph> , 변환의 출력 76 자 보다 깁니다., 줄 바꿈을 삽입는 76 자 마다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</source>
          <target state="translated">줄 바꿈은 캐리지 리턴 문자 (U + 000d) 다음에 줄 바꿈 문자 (U + 000A)으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at <bpt id="p1">[</bpt><ph id="ph1">http://www.rfc-editor.org/</ph><ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">자세한 내용은에서 RFC 2045, "Multipurpose Internet Mail Extensions", 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://www.rfc-editor.org/</ph> <ept id="p1">](http://www.rfc-editor.org/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The input is divided into groups of three bytes (24 bits) each.</source>
          <target state="translated">입력은 각 3 바이트 (24 비트)의 그룹으로 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</source>
          <target state="translated">따라서 각 그룹에서 10 진수 0-63 범위가 있는 네 개의 6 비트 숫자 이루어져 있습니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>In this example, there are 85 3-byte groups with one byte remaining.</source>
          <target state="translated">이 예제에서는 85 3 바이트 그룹 한 바이트가 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</source>
          <target state="translated">첫 번째 그룹 00, 01, 및 4 개 6 비트 값이 10 진수 0, 0, 4, 및 2 동일한 02 16 진수 값으로 이루어져 있습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</source>
          <target state="translated">이러한 네 가지 값은 base 64 자리로 "A", "A", "E" 및 "C" 시작 부분에는 출력에 해당합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</source>
          <target state="translated">3 바이트 그룹의 정수가 없는 경우 남아 있는 바이트는 효과적으로 완전 한 그룹을 형성 하기 위해 0으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>In this example, the value of the last byte is hexadecimal FF.</source>
          <target state="translated">이 예제에서는 마지막 바이트의 값은 16 진수 FF입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</source>
          <target state="translated">처음 6 비트 base 64 숫자 "/" 출력의 끝에 해당 하는 10 진수 63 같은지 여부와 다음 2 비트는 base 64 숫자 "w"에 해당 하는 10 진수 48 0으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>The last two 6-bit values are padding and correspond to the valueless padding character, "=".</source>
          <target state="translated">마지막 두 6 비트 값이 패딩 하 고 해당 하는 값이 없는 채움 문자 "=".</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> or <ph id="ph2">&lt;paramref name="outArray" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="outArray" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="offsetIn" /&gt;</ph>, <ph id="ph2">&lt;paramref name="offsetOut" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="length" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offsetIn" /&gt;</ph>, <ph id="ph2">&lt;paramref name="offsetOut" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="length" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="offsetIn" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is greater than the length of <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offsetIn" /&gt;</ph>과 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>의 합이 <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph>의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="offsetOut" /&gt;</ph> plus the number of elements to return is greater than the length of <ph id="ph2">&lt;paramref name="outArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offsetOut" /&gt;</ph>과 반환할 요소 수의 합이 <ph id="ph2">&lt;paramref name="outArray" /&gt;</ph>의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Base64FormattingOptions" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="options" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Base64FormattingOptions" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts the value of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 배열의 값을 base-64 숫자로 인코딩된 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>An array of 8-bit unsigned integers.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 배열입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 배열을 base-64 숫자로 인코딩된 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>The string representation, in base 64, of the contents of <ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>의 내용에 대한 base 64 숫자의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>The elements of <ph id="ph1">`inArray`</ph> are taken as a numeric value and converted to a string representation that is encoded with base-64 digits.</source>
          <target state="translated">요소 <ph id="ph1">`inArray`</ph> 숫자 값으로 가져오고 base-64 숫자로 인코딩된 문자열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</source>
          <target state="translated">Base-64 숫자 0에서 오름차순 소문자 "Z"를 대문자 "A"는 "a"-"z", "0"부터 "9" 까지의 숫자 및 기호 "+" 및 "/"입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>The valueless character, "=", is used for trailing padding.</source>
          <target state="translated">값이 없는 문자, "=", 안쪽 여백 뒤쪽에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> method is designed to process a single byte array that contains all the data to be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> 메서드는 모든 데이터를 인코딩할 수를 포함 하는 단일 바이트 배열을 처리 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>To encode data from a stream, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">스트림에서 데이터를 인코딩하려면 사용은 <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>Ordinarily, the <ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> method is not used to round-trip a  UUEncoded (base-64 encoded) string.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> 방법은 UUEncoded (e-64로 인코딩된) 왕복 하는 데 사용 되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>That is, if you decode a string by calling the <ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A&gt;</ph> method, then encode the returned byte array by calling the <ph id="ph2">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> method, the resulting string will not necessarily be identical to the original string.</source>
          <target state="translated">즉, 호출 하 여 문자열을 디코드 하는 경우는 <ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A&gt;</ph> 메서드를 다음 호출 하 여 반환 된 바이트 배열을 인코딩하는 <ph id="ph2">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> 메서드를 결과 문자열 것 원래 문자열과 동일 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>The string will round-trip only if the original string is a valid base-64 encoded string.</source>
          <target state="translated">문자열은 원래 문자열에 올바른 base 64로 인코딩된 문자열은 경우에 왕복이 됩니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29&gt;</ph> method to convert a byte array to a UUencoded (base-64) string, and then calls the <ph id="ph2">&lt;xref:System.Convert.FromBase64String%28System.String%29&gt;</ph> method to restore the original byte array.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29&gt;</ph> (base-64) Uuencode 된 문자열을 설정한 다음 호출 바이트 배열로 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Convert.FromBase64String%28System.String%29&gt;</ph> 원본 바이트 배열 복원 하는 메서드.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>The following is a more complex example that creates a 20-element array of 32-bit integers.</source>
          <target state="translated">다음은 32 비트 정수는 요소가 20 개인 배열 만드는 더 복잡 한 예제입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>It then uses the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType&gt;</ph> method to convert each element into a byte array, which it stores in the appropriate position in a buffer by calling the <ph id="ph2">&lt;xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다음 사용 하 여는 <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Int32%29?displayProperty=nameWithType&gt;</ph> 각 요소를 호출 하 여 버퍼에서 적절 한 위치에 저장 되는 바이트 배열로 변환 메서드는 <ph id="ph2">&lt;xref:System.Array.Copy%28System.Array%2CSystem.Int32%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>This buffer is then passed to the <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29&gt;</ph> method to create a UUencoded (base-64) string.</source>
          <target state="translated">이 버퍼에 전달 되는 <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%29&gt;</ph> 방법을 (base-64) Uuencode 된 문자열을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Convert.FromBase64String%28System.String%29&gt;</ph> method to decode the UUencoded string, and calls the <ph id="ph2">&lt;xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method to convert each set of four bytes (the size of a 32-bit integer) to an integer.</source>
          <target state="translated">그런 다음 호출 하는 <ph id="ph1">&lt;xref:System.Convert.FromBase64String%28System.String%29&gt;</ph> 메서드를 Uuencode 문자열 및 호출을 디코딩하는 <ph id="ph2">&lt;xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType&gt;</ph> 메서드를 각 집합이 4 바이트 (32 비트 정수 크기)을 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source>The output from the example shows that the original array has been successfully restored.</source>
          <target state="translated">이 예제에서 출력 원래 배열을 성공적으로 복원 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>An array of 8-bit unsigned integers.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 배열입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /&gt;</ph> to insert a line break every 76 characters, or <ph id="ph2">&lt;see cref="F:System.Base64FormattingOptions.None" /&gt;</ph> to not insert line breaks.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /&gt;</ph>는 76자마다 줄 바꿈을 삽입하며 <ph id="ph2">&lt;see cref="F:System.Base64FormattingOptions.None" /&gt;</ph>은 줄 바꿈을 삽입하지 않습니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 배열을 base-64 숫자로 인코딩된 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>A parameter specifies whether to insert line breaks in the return value.</source>
          <target state="translated">매개 변수는 반환 값에 줄 바꿈을 삽입할지를 지정합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>The string representation in base 64 of the elements in <ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>의 요소에 대한 base 64 숫자의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>The elements of the <ph id="ph1">`inArray`</ph> parameter are taken as a numeric value and converted to a string representation in base 64.</source>
          <target state="translated">요소는 <ph id="ph1">`inArray`</ph> 매개 변수는 숫자 값으로 처리 하 고 base 64에서 문자열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</source>
          <target state="translated">Base-64 숫자 0에서 오름차순 소문자 "Z"를 대문자 "A"는 "a"-"z", "0"부터 "9" 까지의 숫자 및 기호 "+" 및 "/"입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>The valueless character "=" is used for trailing padding.</source>
          <target state="translated">값이 없는 문자 "=" 뒤쪽 여백에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> method is designed to process a single byte array that contains all the data to be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> 메서드는 모든 데이터를 인코딩할 수를 포함 하는 단일 바이트 배열을 처리 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>To encode data from a stream, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">스트림에서 데이터를 인코딩하려면 사용은 <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>If the <ph id="ph1">`options`</ph> parameter is set to <ph id="ph2">&lt;xref:System.Base64FormattingOptions.InsertLineBreaks&gt;</ph> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</source>
          <target state="translated">경우는 <ph id="ph1">`options`</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Base64FormattingOptions.InsertLineBreaks&gt;</ph> , 변환의 출력 76 자 보다 깁니다., 줄 바꿈을 삽입는 76 자 마다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</source>
          <target state="translated">줄 바꿈은 캐리지 리턴 문자 (U + 000d) 다음에 줄 바꿈 문자 (U + 000A)으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>Because line breaks are considered whitespace characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</source>
          <target state="translated">줄 바꿈 공백 문자를 base64 인코딩으로 간주 되므로로 인코딩된 문자열을 바이트 배열 다시 e-64로 변환 하는 경우 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</source>
          <target state="translated">컨트롤 또는 콘솔 창과 같은 장치에 인코딩된 문자열을 표시할 때 줄 바꿈 하기만 하면 편리 하 게 됩니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at <bpt id="p1">[</bpt><ph id="ph1">http://www.rfc-editor.org/</ph><ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">자세한 내용은에서 RFC 2045, "Multipurpose Internet Mail Extensions", 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://www.rfc-editor.org/</ph> <ept id="p1">](http://www.rfc-editor.org/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType&gt;</ph> with a <ph id="ph2">&lt;xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType&gt;</ph> argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Base64FormattingOptions.InsertLineBreaks?displayProperty=nameWithType&gt;</ph> 100 요소 바이트 배열을 인코딩하여 생성 되는 문자열에 줄을 삽입 하려면 인수를 중단 합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source>As the output from the example shows, the <ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType&gt;</ph> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</source>
          <target state="translated">예제에서 출력으로는 <ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType&gt;</ph> 복원 원본 바이트 배열입니다;을 성공적으로 변환 하는 동안 줄 바꿈 문자가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Base64FormattingOptions" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="options" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Base64FormattingOptions" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>An array of 8-bit unsigned integers.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 배열입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>An offset in <bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>에 있는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>The number of elements of <bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>의 요소 중에서 변환할 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 배열의 하위 집합을 base-64 숫자로 인코딩된 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.</source>
          <target state="translated">매개 변수는 하위 집합을 입력 배열의 오프셋으로 지정하고 변환할 배열의 요소 수를 지정합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>The string representation in base 64 of <ph id="ph1">&lt;paramref name="length" /&gt;</ph> elements of <ph id="ph2">&lt;paramref name="inArray" /&gt;</ph>, starting at position <ph id="ph3">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> 위치에서 시작하는 <ph id="ph2">&lt;paramref name="inArray" /&gt;</ph>의 <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> 요소에 대한 base 64 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>The elements of <ph id="ph1">`inArray`</ph> are taken as a numeric value and converted to a string representation in base 64.</source>
          <target state="translated">요소 <ph id="ph1">`inArray`</ph> 숫자 값으로 가져오고 base 64에서 문자열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</source>
          <target state="translated">Base-64 숫자 0에서 오름차순 소문자 "Z"를 대문자 "A"는 "a"-"z", "0"부터 "9" 까지의 숫자 및 기호 "+" 및 "/"입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>The valueless character, "=", is used for trailing padding.</source>
          <target state="translated">값이 없는 문자, "=", 안쪽 여백 뒤쪽에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> and <ph id="ph2">`length`</ph> parameters are 32-bit signed numbers.</source>
          <target state="translated"><ph id="ph1">`offset`</ph> 및 <ph id="ph2">`length`</ph> 매개 변수는 32 비트 부호 있는 숫자입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> parameter is zero-based.</source>
          <target state="translated"><ph id="ph1">`offset`</ph> 매개 변수는 0부터 시작 합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> method is designed to process a single byte array that contains all the data to be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> 메서드는 모든 데이터를 인코딩할 수를 포함 하는 단일 바이트 배열을 처리 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>To encode data from a stream, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">스트림에서 데이터를 인코딩하려면 사용은 <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is greater than the length of <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>과 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>의 합이 <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph>의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>An array of 8-bit unsigned integers.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 배열입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>An offset in <bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>에 있는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The number of elements of <bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept> to convert.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inArray<ept id="p1">&lt;/c&gt;</ept>의 요소 중에서 변환할 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /&gt;</ph> to insert a line break every 76 characters, or <ph id="ph2">&lt;see cref="F:System.Base64FormattingOptions.None" /&gt;</ph> to not insert line breaks.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /&gt;</ph>는 76자마다 줄 바꿈을 삽입하며 <ph id="ph2">&lt;see cref="F:System.Base64FormattingOptions.None" /&gt;</ph>은 줄 바꿈을 삽입하지 않습니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</source>
          <target state="translated">8비트 부호 없는 정수로 구성된 배열의 하위 집합을 base-64 숫자로 인코딩된 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>Parameters specify the subset as an offset in the input array, the number of elements in the array to convert, and whether to insert line breaks in the return value.</source>
          <target state="translated">매개 변수는 하위 집합을 입력 배열의 오프셋으로 지정하고, 배열에서 변환할 요소의 수를 지정하고, 반환 값에 줄 바꿈을 삽입할지를 지정합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The string representation in base 64 of <ph id="ph1">&lt;paramref name="length" /&gt;</ph> elements of <ph id="ph2">&lt;paramref name="inArray" /&gt;</ph>, starting at position <ph id="ph3">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> 위치에서 시작하는 <ph id="ph2">&lt;paramref name="inArray" /&gt;</ph>의 <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> 요소에 대한 base 64 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The elements of the <ph id="ph1">`inArray`</ph> parameter are taken as a numeric value and converted to a string representation in base 64.</source>
          <target state="translated">요소는 <ph id="ph1">`inArray`</ph> 매개 변수는 숫자 값으로 처리 하 고 base 64에서 문자열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The base-64 digits in ascending order from zero are the uppercase characters "A" to "Z", the lowercase characters "a" to "z", the numerals "0" to "9", and the symbols "+" and "/".</source>
          <target state="translated">Base-64 숫자 0에서 오름차순 소문자 "Z"를 대문자 "A"는 "a"-"z", "0"부터 "9" 까지의 숫자 및 기호 "+" 및 "/"입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The valueless character "=" is used for trailing padding.</source>
          <target state="translated">값이 없는 문자 "=" 뒤쪽 여백에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The <ph id="ph1">`offset`</ph> and <ph id="ph2">`length`</ph> parameters are 32-bit signed numbers.</source>
          <target state="translated"><ph id="ph1">`offset`</ph> 및 <ph id="ph2">`length`</ph> 매개 변수는 32 비트 부호 있는 숫자입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The <ph id="ph1">`offset`</ph> parameter is zero-based.</source>
          <target state="translated"><ph id="ph1">`offset`</ph> 매개 변수는 0부터 시작 합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> method is designed to process a single byte array that contains all the data to be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> 메서드는 모든 데이터를 인코딩할 수를 포함 하는 단일 바이트 배열을 처리 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>To encode data from a stream, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">스트림에서 데이터를 인코딩하려면 사용은 <ph id="ph1">&lt;xref:System.Security.Cryptography.ToBase64Transform?displayProperty=nameWithType&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>If the <ph id="ph1">`options`</ph> parameter is set to <ph id="ph2">&lt;xref:System.Base64FormattingOptions.InsertLineBreaks&gt;</ph> and the output of the conversion is longer than 76 characters, a line break is inserted every 76 characters.</source>
          <target state="translated">경우는 <ph id="ph1">`options`</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Base64FormattingOptions.InsertLineBreaks&gt;</ph> , 변환의 출력 76 자 보다 깁니다., 줄 바꿈을 삽입는 76 자 마다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>A line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</source>
          <target state="translated">줄 바꿈은 캐리지 리턴 문자 (U + 000d) 다음에 줄 바꿈 문자 (U + 000A)으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>For more information, see RFC 2045, "Multipurpose Internet Mail Extensions", at <bpt id="p1">[</bpt><ph id="ph1">http://www.rfc-editor.org/</ph><ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">자세한 내용은에서 RFC 2045, "Multipurpose Internet Mail Extensions", 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://www.rfc-editor.org/</ph> <ept id="p1">](http://www.rfc-editor.org/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Convert.ToBase64String%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The input is divided into groups of three bytes (24 bits) each.</source>
          <target state="translated">입력은 각 3 바이트 (24 비트)의 그룹으로 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>Consequently, each group consists of four 6-bit numbers where each number ranges from decimal 0 to 63.</source>
          <target state="translated">따라서 각 그룹에서 10 진수 0-63 범위가 있는 네 개의 6 비트 숫자 이루어져 있습니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>In this example, there are 85 3-byte groups with one byte remaining.</source>
          <target state="translated">이 예제에서는 85 3 바이트 그룹 한 바이트가 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The first group consists of the hexadecimal values 00, 01, and 02, which yield four 6-bit values equal to decimal 0, 0, 4, and 2.</source>
          <target state="translated">첫 번째 그룹 00, 01, 및 4 개 6 비트 값이 10 진수 0, 0, 4, 및 2 동일한 02 16 진수 값으로 이루어져 있습니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>Those four values correspond to the base-64 digits "A", "A", "E", and "C" at the beginning of the output.</source>
          <target state="translated">이러한 네 가지 값은 base 64 자리로 "A", "A", "E" 및 "C" 시작 부분에는 출력에 해당합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>If an integral number of 3-byte groups does not exist, the remaining bytes are effectively padded with zeros to form a complete group.</source>
          <target state="translated">3 바이트 그룹의 정수가 없는 경우 남아 있는 바이트는 효과적으로 완전 한 그룹을 형성 하기 위해 0으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>In this example, the value of the last byte is hexadecimal FF.</source>
          <target state="translated">이 예제에서는 마지막 바이트의 값은 16 진수 FF입니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The first 6 bits are equal to decimal 63, which corresponds to the base-64 digit "/" at the end of the output, and the next 2 bits are padded with zeros to yield decimal 48, which corresponds to the base-64 digit, "w".</source>
          <target state="translated">처음 6 비트 base 64 숫자 "/" 출력의 끝에 해당 하는 10 진수 63 같은지 여부와 다음 2 비트는 base 64 숫자 "w"에 해당 하는 10 진수 48 0으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>The last two 6-bit values are padding and correspond to the valueless padding character, "=".</source>
          <target state="translated">마지막 두 6 비트 값이 패딩 하 고 해당 하는 값이 없는 채움 문자 "=".</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inArray" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is greater than the length of <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>과 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>의 합이 <ph id="ph3">&lt;paramref name="inArray" /&gt;</ph>의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Base64FormattingOptions" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="options" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.Base64FormattingOptions" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to an equivalent Boolean value.</source>
          <target state="translated">지정된 값을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Boolean)">
          <source>The Boolean value to return.</source>
          <target state="translated">반환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Boolean)">
          <source>Returns the specified Boolean value; no actual conversion is performed.</source>
          <target state="translated">지정된 부울 값을 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 값을 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Byte)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Byte)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Char)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Char)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Char)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Char)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.DateTime)">
          <source>The following example demonstrates that an attempt to convert a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value to a Boolean type throws <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated">다음 예제는 변환할 수는 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 값을 부울 형식 발생 <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Decimal)">
          <source>The number to convert.</source>
          <target state="translated">변환할 숫자입니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent Boolean value.</source>
          <target state="translated">지정된 10진수 값을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Decimal)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Decimal)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Double)">
          <source>The following example converts a Boolean to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> and a <ph id="ph2">&lt;xref:System.Double&gt;</ph> to a Boolean value.</source>
          <target state="translated">다음 예제에서는 변환 하는 부울을 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 하는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 값을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Int16)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Int16)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Int16&gt;</ph> values to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Int16&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 값을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Int32)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.</source>
          <target state="translated">지정된 64비트 부호 있는 정수의 값을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Int64)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Int64&gt;</ph> values to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Int64&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object)">
          <source>Converts the value of a specified object to an equivalent Boolean value.</source>
          <target state="translated">지정된 개체의 값을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> or <ph id="ph2">&lt;see langword="false" /&gt;</ph>, which reflects the value returned by invoking the <ph id="ph3">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph> method for the underlying type of <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="false" /&gt;</ph>이며, <ph id="ph3">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>의 내부 형식에 대해 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 메서드를 호출하여 반환된 값을 반영합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, the method returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이면 메서드에서 <ph id="ph3">&lt;see langword="false" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Object)">
          <source>The following example converts an array of object values to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 변환에 대 한 개체 값의 배열을 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a string that does not equal <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>과 동등하지 않은 문자열입니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object)">
          <source>The conversion of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>로의 변환이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 값을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.SByte)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.SByte)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.SByte&gt;</ph> values to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.SByte&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Single)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.String)">
          <source>A string that contains the value of either <ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.String)">
          <source>Converts the specified string representation of a logical value to its Boolean equivalent.</source>
          <target state="translated">논리 값의 지정된 문자열 표현을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> equals <ph id="ph3">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>, or <ph id="ph4">&lt;see langword="false" /&gt;</ph> if <ph id="ph5">&lt;paramref name="value" /&gt;</ph> equals <ph id="ph6">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> or <ph id="ph7">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>과 같으면 <ph id="ph3">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>를 반환하고, <ph id="ph4">&lt;see langword="false" /&gt;</ph>가 <ph id="ph5">&lt;paramref name="value" /&gt;</ph>과 같거나 <ph id="ph6">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>이면 <ph id="ph7">&lt;see langword="null" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.String)">
          <source>For a successful conversion to occur, the <ph id="ph1">`value`</ph> parameter must equal either <ph id="ph2">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph>, a constant whose value is <ph id="ph3">`True`</ph>, <ph id="ph4">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>, a constant whose value is <ph id="ph5">`False`</ph>, or it must be <ph id="ph6">`null`</ph>.</source>
          <target state="translated">발생을 성공적으로 변환에 대 한는 <ph id="ph1">`value`</ph> 매개 변수 같거나 <ph id="ph2">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph>, 해당 값이 상수 <ph id="ph3">`True`</ph>, <ph id="ph4">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>, 해당 값이 상수 <ph id="ph5">`False`</ph>, 이거나 이어야 합니다. <ph id="ph6">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.String)">
          <source>In comparing <ph id="ph1">`value`</ph> with <ph id="ph2">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>, the method ignores case as well as leading and trailing white space.</source>
          <target state="translated">비교할 <ph id="ph1">`value`</ph> 와 <ph id="ph2">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>, 사례도 같이 선행 및 후행 공백을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType&gt;</ph> method to convert various strings to Boolean values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType&gt;</ph> 다양 한 문자열을 부울 값으로 변환 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not equal to <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>과 같지 않은 경우</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.</source>
          <target state="translated">지정된 16비트 부호 없는 정수의 값을 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.UInt16)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.UInt16)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> values to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.</source>
          <target state="translated">지정된 32비트 부호 없는 정수의 값을 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.UInt32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.UInt32)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.</source>
          <target state="translated">지정된 64비트 부호 없는 정수의 값을 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is not zero; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.UInt64)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> values to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> or <ph id="ph2">&lt;see langword="false" /&gt;</ph>, which reflects the value returned by invoking the <ph id="ph3">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph> method for the underlying type of <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="false" /&gt;</ph>이며, <ph id="ph3">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>의 내부 형식에 대해 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 메서드를 호출하여 반환된 값을 반영합니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, the method returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이면 메서드에서 <ph id="ph3">&lt;see langword="false" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>The base types ignore the <ph id="ph1">`provider`</ph> parameter; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">하지만 기본 형식에서 무시는 <ph id="ph1">`provider`</ph> 매개 변수; 경우 매개 변수에 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>The following example defines a class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> and a class that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 구현 하는 클래스를 정의 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 및 구현 하는 클래스 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>Objects of the class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> hold an array of <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">구현 하는 클래스의 개체 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 의 배열을 보유 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>An object of each class is passed to the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">각 클래스의 개체에 전달 되는 <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>This method returns <ph id="ph1">`true`</ph> if any of the non-discarded array values are non-zero.</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">`true`</ph> 배열 삭제 되지 않는 값이 0이 아닌 경우.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object determines how elements are discarded for this calculation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 개체에 따라이 계산에 대 한 요소는 삭제 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a string that does not equal <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>과 동등하지 않은 문자열입니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
          <source>The conversion of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>로의 변환이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
          <source>A string that contains the value of either <ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> 값이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여 논리 값의 지정된 문자열 표현을 해당하는 부울 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> equals <ph id="ph3">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>, or <ph id="ph4">&lt;see langword="false" /&gt;</ph> if <ph id="ph5">&lt;paramref name="value" /&gt;</ph> equals <ph id="ph6">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> or <ph id="ph7">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>과 같으면 <ph id="ph3">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>를 반환하고, <ph id="ph4">&lt;see langword="false" /&gt;</ph>가 <ph id="ph5">&lt;paramref name="value" /&gt;</ph>과 같거나 <ph id="ph6">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>이면 <ph id="ph7">&lt;see langword="null" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not equal to <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>과 같지 않은 경우</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to an 8-bit unsigned integer.</source>
          <target state="translated">지정된 값을 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 부울 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Boolean)">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 변환 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Byte)">
          <source>The 8-bit unsigned integer to return.</source>
          <target state="translated">반환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Byte)">
          <source>Returns the specified 8-bit unsigned integer; no actual conversion is performed.</source>
          <target state="translated">지정된 8비트 부호 없는 정수를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Byte)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Char)">
          <source>Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 유니코드 문자의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Char)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Char)">
          <source>This method returns an unsigned byte value that represents the numeric code of the <ph id="ph1">&lt;xref:System.Char&gt;</ph> object passed to it.</source>
          <target state="translated">숫자 코드를 나타내는 부호 없는 바이트 값을 반환 하는이 메서드는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 개체가 전달 합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Char)">
          <source>In the .NET Framework, a <ph id="ph1">&lt;xref:System.Char&gt;</ph> object is a 16-bit value.</source>
          <target state="translated">.NET framework에서는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 개체는 16 비트 값입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Char)">
          <source>This means that the method is suitable for returning the numeric codes of characters in the ASCII character range or in the Unicode C0 Controls and Basic Latin, and C1 Controls and Latin-1 Supplement ranges, from U+0000 to U+00FF.</source>
          <target state="translated">이 방법은 유니코드 C0 컨트롤 및 기본 라틴, 및 C1 컨트롤와 라틴어-1 추가 범위에서 U + 0000 ~ U + 00FF 또는 ASCII 문자 범위에 있는 문자의 숫자 코드를 반환 하는 데 적합 한 것을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Char)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Char&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Char)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Decimal)">
          <source>The number to convert.</source>
          <target state="translated">변환할 숫자입니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 10진수 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 8-bit unsigned integer.</source>
          <target state="translated">가장 가까운 8비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Decimal)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> and a <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph4">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 변환는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> 값을 한 <ph id="ph4">&lt;xref:System.Byte&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 8-bit unsigned integer.</source>
          <target state="translated">가장 가까운 8비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Double)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> and a <ph id="ph3">&lt;xref:System.Double&gt;</ph> value to a <ph id="ph4">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 변환는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Double&gt;</ph> 값을 한 <ph id="ph4">&lt;xref:System.Byte&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int16)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Int16)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Int16&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Int16&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int32)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Int32)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Int32&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 64비트 부호 있는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int64)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Int64)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.Int64&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.Int64&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object)">
          <source>Converts the value of the specified object to an 8-bit unsigned integer.</source>
          <target state="translated">지정된 개체의 값을 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is not <ph id="ph2">`null`</ph>, this method wraps a call to the <ph id="ph3">&lt;xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType&gt;</ph> implementation of the underlying type of <ph id="ph4">`value`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 않습니다 <ph id="ph2">`null`</ph>,이 메서드 호출을 래핑하는 <ph id="ph3">&lt;xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식 구현 <ph id="ph4">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Object%29&gt;</ph> method to convert an array of objects to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Object%29&gt;</ph> 메서드 개체의 배열을 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in the property format for a <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> 값의 속성 서식에 없는 경우</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph>을 구현하지 않는 경우</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object)">
          <source>Conversion from <ph id="ph1">&lt;paramref name="value" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> type is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>로의 형식 변환이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.SByte)">
          <source>The 8-bit signed integer to be converted.</source>
          <target state="translated">변환될 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.SByte)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.SByte)">
          <source>The following example converts an array of <ph id="ph1">&lt;xref:System.SByte&gt;</ph> values to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 배열을 변환 <ph id="ph1">&lt;xref:System.SByte&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.SByte)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작은 경우</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Single)">
          <source>A single-precision floating-point number.</source>
          <target state="translated">단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 8-bit unsigned integer.</source>
          <target state="translated">가장 가까운 8비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Single)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Single)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Byte&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String)">
          <source>Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String)">
          <source><ph id="ph1">`value`</ph> is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 현재 스레드 문화권의 서식 지정 규칙을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Byte.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Byte.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String)">
          <source>The following example defines a string array and attempts to convert each string to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 문자열 배열을 정의 하 고 각 문자열을 변환 하려고 한 <ph id="ph1">&lt;xref:System.Byte&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String)">
          <source>Note that while a <ph id="ph1">`null`</ph> string parses to zero, <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> throws a <ph id="ph3">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">하지만 <ph id="ph1">`null`</ph> 를 0으로 구문 분석 문자열 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> throw는 <ph id="ph3">&lt;xref:System.FormatException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String)">
          <source>Also note that while leading and trailing spaces parse successfully, formatting symbols, such as currency symbols, group separators, or decimal separators, do not.</source>
          <target state="translated">또한는 선행 및 후행 공백을 성공적으로 구문 분석, 통화 기호 등의 기호를 서식 지정 하는 동안 그룹 구분 기호 또는 소수 구분 기호, 안 note 합니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 16비트 부호 없는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt16)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.UInt16)">
          <source>The following example converts an array of unsigned 16-bit integers to <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 부호 없는 16 비트 정수 배열로 변환 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 32비트 부호 없는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt32)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.UInt32)">
          <source>The following example converts an array of unsigned integers to <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 배열로 변환 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 64비트 부호 없는 정수의 값을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt64)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.UInt64)">
          <source>The following example converts an array of unsigned long integers to <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 (long)의 배열을 변환 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>The following example defines a <ph id="ph1">`ByteString`</ph> class that implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`ByteString`</ph> 인터페이스를 구현하는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>The class stores the string representation of a byte value along with a sign field, so that it is able to represent both signed and unsigned byte values.</source>
          <target state="translated">클래스는 모두 부호 있는 정수와 부호 없는 바이트 값을 나타낼 수 있도록 기호 필드와 바이트 값의 문자열 표현을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>The following example instantiates several <ph id="ph1">`ByteString`</ph> objects and calls the <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> method to convert them to byte values.</source>
          <target state="translated">다음 예제에서는 여러 인스턴스화합니다 <ph id="ph1">`ByteString`</ph> 개체와 호출 된 <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> 바이트 값으로 변환 하기 위해 메서드.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>It illustrates that the <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> method wraps a call to the <ph id="ph2">&lt;xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType&gt;</ph> method of the object to be converted.</source>
          <target state="translated">함을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> 메서드 호출을 래핑하는 <ph id="ph2">&lt;xref:System.IConvertible.ToByte%2A?displayProperty=nameWithType&gt;</ph> 변환할 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in the property format for a <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> 값의 속성 서식에 없는 경우</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph>을 구현하지 않는 경우</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source>Conversion from <ph id="ph1">&lt;paramref name="value" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> type is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph>로의 형식 변환이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source>An 8-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체가 현재 문화권이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Byte.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Byte.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source>The following example creates a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that defines the positive sign as "pos" and the negative sign as "neg", which it uses in calls to the <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> "neg"에 대 한 호출에서 사용 하 여으로 양수 부호 "po" 기호와 음수 기호를 정의 하는 개체는 <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method repeatedly to convert each element in a string array to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value.</source>
          <target state="translated">그런 다음 호출 하는 <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29&gt;</ph> 메서드 변환 하는 문자열 배열에서 각 요소를 반복 해 서는 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>The base of the number in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, which must be 2, 8, 10, or 16.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>에 지정된 숫자의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.</source>
          <target state="translated">지정된 기수로 나타낸 숫자의 문자열 표현을 해당하는 8비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>An 8-bit unsigned integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 8비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>If <ph id="ph1">`fromBase`</ph> is 16, you can prefix the number specified by the <ph id="ph2">`value`</ph> parameter with "0x" or "0X".</source>
          <target state="translated">경우 <ph id="ph1">`fromBase`</ph> 는 16에 지정 된 접두사로 사용할 수 있습니다는 <ph id="ph2">`value`</ph> "0x" 또는 "0x"로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> data type supports unsigned values only, the <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29&gt;</ph> method assumes that <ph id="ph3">`value`</ph> is expressed using unsigned binary representation.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 데이터 형식이 부호 없는 값만을 지원 하는지는 <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29&gt;</ph> 메서드 있다고 가정 <ph id="ph3">`value`</ph> 은 서명 되지 않은 이진 표현을 사용 하 여 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>In other words, all eight bits are used to represent the numeric value, and a sign bit is absent.</source>
          <target state="translated">즉, 모든 8 비트가 숫자 값을 나타내는 데 사용 되며 및 부호 비트가 없음.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>As a result, it is possible to write code in which a signed byte value that is out of the range of the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> data type is converted to a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value without the method throwing an exception.</source>
          <target state="translated">부호 있는 바이트 값 하는 코드의 범위를 벗어났습니다 쓸 수는 결과적으로,는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 데이터 형식을 변환할는 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 메서드에서 예외를 throw 하지 않고 값입니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>The following example converts <ph id="ph1">&lt;xref:System.SByte.MinValue&gt;</ph> to its hexadecimal string representation, and then calls the <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 변환 <ph id="ph1">&lt;xref:System.SByte.MinValue&gt;</ph> 해당 16 진수 문자열 표현으로 변환한 다음 호출 하 여 <ph id="ph2">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>Instead of throwing an exception, the method displays the message, "0x80 converts to 128."</source>
          <target state="translated">메서드는 예외를 throw 하는 대신 메시지를 표시 "128 0x80 변환 합니다."</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</source>
          <target state="translated">이항 연산 또는 숫자 변환을 수행할 때 항상 특정 값을 해석 하는 메서드 또는 연산자에서 적절 한 숫자 표현을 사용가 있는지 확인 하려면 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>The following example illustrates one technique for ensuring that the method does not inappropriately use unsigned binary representation when it converts a hexadecimal string representation to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 16 진수 문자열 표현으로 변환 하는 경우 부호 없는 이진 표현이 메서드가 잘못 사용 되지 않는 위한 방법 중 하나를 보여 줍니다는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</source>
          <target state="translated">이 예제에서는 값을 나타내는지 부호 있는 또는 부호 없는 정수 값을 문자열 표현으로 변환 하는 동안 결정 합니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>When the example converts the value back to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value, it checks whether the original value was a signed integer.</source>
          <target state="translated">으로 변환 값을 다시는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 원래 값이 부호 있는 정수 여부를 확인 값입니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>If so, and if its high-order bit is set (which indicates that the value is negative and that it uses two's complement instead of unsigned binary representation), the method throws an exception.</source>
          <target state="translated">따라서 하 고 상위 비트가 설정 되 면 (나타내며 값이 음수 두 개 사용 하 여 서명 되지 않은 이진 표현이 아닌 보수) 메서드가 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>The following example alternately attempts to interpret an array of strings as the representation of binary, octal, decimal, and hexadecimal values.</source>
          <target state="translated">또는 다음 예제에서는 문자열의 배열을 이진, 8 진수, 10 진수 및 16 진수 값의 표시로 해석 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="translated">밑수가 10이 아닌 부호 없는 숫자를 나타내고 음수 기호가 앞에 붙는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> contains a character that is not a valid digit in the base specified by <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>에 지정된 밑에서 유효한 숫자가 아닌 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>The exception message indicates that there are no digits to convert if the first character in <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is invalid; otherwise, the message indicates that <ph id="ph2">&lt;paramref name="value" /&gt;</ph> contains invalid trailing characters.</source>
          <target state="translated">예외 메시지는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 첫 문자가 유효하지 않은 경우 변환할 숫자가 없음을 나타내고, 유효한 경우 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>에 잘못된 후행 문자가 있다고 나타냅니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="translated">기수가 10인 부호 없는 숫자를 나타내는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 접두사가 음수 기호인 경우</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Convert.ToByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a Unicode character.</source>
          <target state="translated">지정된 값을 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Boolean)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Boolean)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Boolean)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Boolean)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 값을 해당하는 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Byte)">
          <source>A Unicode character that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Byte)">
          <source>The following example converts an array of unsigned bytes to <ph id="ph1">&lt;xref:System.Char&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 부호 없는 바이트 배열로 변환 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Char)">
          <source>The Unicode character to return.</source>
          <target state="translated">반환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Char)">
          <source>Returns the specified Unicode character value; no actual conversion is performed.</source>
          <target state="translated">지정된 유니코드 문자 값을 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Char)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Decimal)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Decimal)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Decimal)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Decimal)">
          <source>The following example attempts to convert a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph2">&lt;xref:System.Char&gt;</ph>, and throws <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> on failure.</source>
          <target state="translated">다음 예제에서는 변환 하려고 한 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Char&gt;</ph>, throw <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> 실패 시.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Decimal)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Double)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Double)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Double)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Double)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 값을 해당하는 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int16)">
          <source>A Unicode character that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Int16)">
          <source>The following example converts an array of signed 16-bit integers to <ph id="ph1">&lt;xref:System.Char&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 부호 있는 16 비트 정수 배열로 변환 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph>보다 작은 경우</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 값을 해당하는 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int32)">
          <source>A Unicode character that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Int32)">
          <source>The following example converts an array of signed integers to <ph id="ph1">&lt;xref:System.Char&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 변환으로 부호 있는 정수 배열을 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.</source>
          <target state="translated">지정된 64비트 부호 있는 정수의 값을 해당하는 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int64)">
          <source>A Unicode character that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Int64)">
          <source>The following example attempts to convert a long integer to a <ph id="ph1">&lt;xref:System.Char&gt;</ph>, and throws a <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph> on failure.</source>
          <target state="translated">Long 정수를 변환 하려면 다음 예제에서는 <ph id="ph1">&lt;xref:System.Char&gt;</ph>, throw 한 <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph> 실패 한 경우.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object)">
          <source>Converts the value of the specified object to a Unicode character.</source>
          <target state="translated">지정된 개체의 값을 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object)">
          <source>A Unicode character that is equivalent to value, or <ph id="ph1">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">값에 해당하는 유니코드 문자이거나, <ph id="ph1">&lt;see cref="F:System.Char.MinValue" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>이면 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is not <ph id="ph2">`null`</ph>, this method wraps a call to the <ph id="ph3">&lt;xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType&gt;</ph> implementation of the underlying type of <ph id="ph4">`value`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 않습니다 <ph id="ph2">`null`</ph>,이 메서드 호출을 래핑하는 <ph id="ph3">&lt;xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식 구현 <ph id="ph4">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Object)">
          <source>The following example attempts to convert each element in an object array to a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 개체 배열의 각 요소를 변환 하는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a null string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 null 문자열입니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object)">
          <source>The conversion of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph>로의 변환이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 값을 해당하는 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.SByte)">
          <source>A Unicode character that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.SByte)">
          <source>The following example converts an array of signed bytes to <ph id="ph1">&lt;xref:System.Char&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트 배열로 변환 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.SByte)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph>보다 작은 경우</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Single)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Single)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Single)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Single)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String)">
          <source>A string of length 1.</source>
          <target state="translated">길이가 1인 문자열입니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String)">
          <source>Converts the first character of a specified string to a Unicode character.</source>
          <target state="translated">지정된 문자열의 첫째 문자를 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String)">
          <source>A Unicode character that is equivalent to the first and only character in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 첫째 문자인 동시에 유일한 문자에 해당하는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.String)">
          <source><ph id="ph1">`value`</ph> must be a string that contains a single character.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 단일 문자를 포함 하는 문자열 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Char.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Char.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.String)">
          <source>The following example converts each element in a string array to a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 변환에 문자열 배열의 각 요소에에서는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 길이가 1이 아닌 경우</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.</source>
          <target state="translated">지정된 16비트 부호 없는 정수의 값을 해당하는 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt16)">
          <source>A Unicode character that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.UInt16)">
          <source>The following example converts each element in an array of unsigned 16-bit integers to a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 변환에 16 비트 부호 없는 정수 배열의 각 요소는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.</source>
          <target state="translated">지정된 32비트 부호 없는 정수의 값을 해당하는 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt32)">
          <source>A Unicode character that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.UInt32)">
          <source>The following example converts each element in an array of unsigned integers to a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value.</source>
          <target state="translated">부호 없는 정수 배열의 각 요소를 변환 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.</source>
          <target state="translated">지정된 64비트 부호 없는 정수의 값을 해당하는 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt64)">
          <source>A Unicode character that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.UInt64)">
          <source>The following example converts each element in an array of unsigned long integers to a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value.</source>
          <target state="translated">부호 없는 정수 (long) 배열에서 각 요소를 변환 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 해당하는 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>A Unicode character that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> if <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 유니코드 문자이거나, <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>이면 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToChar%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>The following example defines a class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> and a class that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 구현 하는 클래스를 정의 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 및 구현 하는 클래스 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>Objects of the class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> hold an array of <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">구현 하는 클래스의 개체 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 의 배열을 보유 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>An object of each class is passed to the <ph id="ph1">`ToChar`</ph> method.</source>
          <target state="translated">각 클래스의 개체에 전달 되는 <ph id="ph1">`ToChar`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>This method returns a character whose Unicode value is the average of the array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, using the object that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> to determine how to calculate the average.</source>
          <target state="translated">이 메서드를 유니코드 문자를 반환 값은 배열의 평균 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 구현 하는 개체를 사용 하 여 값 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 의 평균을 계산 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a null string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 null 문자열입니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source>The conversion of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph>로의 변환이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Char.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Char.MaxValue" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source>A string of length 1 or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">길이가 1이거나 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 문자열입니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source>Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 사용하여, 지정된 문자열의 첫째 문자를 유니코드 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source>A Unicode character that is equivalent to the first and only character in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 첫째 문자인 동시에 유일한 문자에 해당하는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`value`</ph> must be a string that contains a single character.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 단일 문자를 포함 하는 문자열 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Char.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Char.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source>The following example converts a string representation of a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value with the <ph id="ph2">`ToChar`</ph> method, using an <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> object that displays the type of the format provider for which it is called.</source>
          <target state="translated">다음 예제에서는 변환의 문자열 표현을 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값과 <ph id="ph2">`ToChar`</ph> 메서드를 사용 하 여 프로그램 <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> 호출 하는 형식 공급자의 유형을 표시 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source>The example shows that the format provider is not referenced.</source>
          <target state="translated">형식 공급자를 참조 하는지 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
          <source>The length of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 길이가 1이 아닌 경우</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">지정된 값을 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Boolean)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Boolean)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Boolean)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Boolean)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Byte)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Byte)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Byte)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Byte)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Char)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Char)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Char)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Char)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.DateTime)">
          <source>A date and time value.</source>
          <target state="translated">날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.DateTime)">
          <source>Returns the specified <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object; no actual conversion is performed.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Decimal)">
          <source>The number to convert.</source>
          <target state="translated">변환할 숫자입니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Decimal)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Decimal)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Decimal)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Decimal)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Double)">
          <source>The double-precision floating-point value to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 값입니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Double)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Double)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Double)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Double)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int16)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int16)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int16)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int16)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int32)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int32)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int32)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int32)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int64)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int64)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int64)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Int64)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object)">
          <source>Converts the value of the specified object to a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">지정된 개체의 값을 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체로 변환합니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object)">
          <source>The date and time equivalent of the value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or a date and time equivalent of <ph id="ph2">&lt;see cref="F:System.DateTime.MinValue" /&gt;</ph> if <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 값에 해당하는 날짜와 시간이거나, <ph id="ph2">&lt;see cref="F:System.DateTime.MinValue" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>이면 <ph id="ph4">&lt;see langword="null" /&gt;</ph>에 해당하는 날짜와 시간입니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object)">
          <source>For the conversion to succeed, the runtime type of the <ph id="ph1">`value`</ph> parameter must be either a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, or <ph id="ph4">`value`</ph> must be <ph id="ph5">`null`</ph>.</source>
          <target state="translated">성공의 런타임 형식을 변환 하는 데는 <ph id="ph1">`value`</ph> 매개 변수 중 하나 여야 합니다는 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.String&gt;</ph>, 또는 <ph id="ph4">`value`</ph> 여야 <ph id="ph5">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object)">
          <source>Otherwise, the method throws an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 메서드에서 throw 된 <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object)">
          <source>In addition, if <ph id="ph1">`value`</ph> is a string, it must contain a valid representation of a date and time value in the current culture or a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">또한 경우 <ph id="ph1">`value`</ph> 문자열인 경우 현재 문화권의 날짜 및 시간 값의 유효한 표현이 포함 해야 또는 <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Convert.ToDateTime%28System.Object%29&gt;</ph> method with a variety of <ph id="ph2">&lt;xref:System.Object&gt;</ph> variables.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Convert.ToDateTime%28System.Object%29&gt;</ph> 다양 한 메서드 <ph id="ph2">&lt;xref:System.Object&gt;</ph> 변수입니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a valid date and time value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 유효한 날짜 및 시간 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.SByte)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.SByte)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.SByte)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.SByte)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Single)">
          <source>The single-precision floating-point value to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 값입니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Single)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Single)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Single)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Single)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.String)">
          <source>The string representation of a date and time.</source>
          <target state="translated">날짜 및 시간의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.String)">
          <source>Converts the specified string representation of a date and time to an equivalent date and time value.</source>
          <target state="translated">날짜와 시간의 지정된 문자열 표현을 해당하는 날짜와 시간 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.String)">
          <source>The date and time equivalent of the value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or the date and time equivalent of <ph id="ph2">&lt;see cref="F:System.DateTime.MinValue" /&gt;</ph> if <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 값에 해당하는 날짜와 시간이거나, <ph id="ph2">&lt;see cref="F:System.DateTime.MinValue" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>이면 <ph id="ph4">&lt;see langword="null" /&gt;</ph>에 해당하는 날짜와 시간입니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String)">
          <source>If <ph id="ph1">`value`</ph> is not <ph id="ph2">`null`</ph>, the return value is the result of invoking the <ph id="ph3">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph> method on <ph id="ph4">`value`</ph> using the formatting information in a <ph id="ph5">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that is initialized for the current culture.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 않습니다 <ph id="ph2">`null`</ph>, 반환 값은 결과 <ph id="ph3">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph> 메서드를 <ph id="ph4">`value`</ph> 서식 지정 정보를 사용 하는 <ph id="ph5">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 현재 문화권에 따라 초기화 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String)">
          <source>The <ph id="ph1">`value`</ph> argument must contain the representation of a date and time in one of the formats described in the <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> topic.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 인수는 날짜의 표시를 포함 해야 하 고에 설명 된 시간 형식 중 하나에 <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 항목입니다.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the method returns <ph id="ph3">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`value`</ph>가 <ph id="ph2">`null`</ph>이면 메서드에서 <ph id="ph3">&lt;xref:System.DateTime.MinValue?displayProperty=nameWithType&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String)">
          <source>This method tries to parse <ph id="ph1">`value`</ph> completely and avoid throwing a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">이 메서드를 구문 분석 하려고 <ph id="ph1">`value`</ph> 완전히 throw 하지 않습니다는 <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String)">
          <source>It completes missing month, day, and year information with the current date.</source>
          <target state="translated">누락 된 월, 일 및 연도 정보는 현재 날짜를 완료합니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String)">
          <source>If <ph id="ph1">`value`</ph> contains only a date and no time, this method assumes a time of midnight.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 날짜만 있고 시간이 포함 된이 메서드는 시간을 자정으로 간주 합니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String)">
          <source>Any leading, inner, or trailing white-space characters in <ph id="ph1">`value`</ph> are ignored.</source>
          <target state="translated">내부 조인을 선행 또는 후행 공백 문자 <ph id="ph1">`value`</ph> 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Convert.ToDateTime%2A&gt;</ph> method to convert various string representations of dates and times to <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Convert.ToDateTime%2A&gt;</ph> 날짜와 시간을 다양 한 문자열 표현을 변환 하는 메서드 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a properly formatted date and time string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 올바른 형식의 날짜 및 시간 문자열이 아닌 경우</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt16)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt16)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt16)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt16)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt32)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt32)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt32)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt32)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt64)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt64)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt64)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.UInt64)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>The date and time equivalent of the value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or the date and time equivalent of <ph id="ph2">&lt;see cref="F:System.DateTime.MinValue" /&gt;</ph> if <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 값에 해당하는 날짜와 시간이거나, <ph id="ph2">&lt;see cref="F:System.DateTime.MinValue" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>이면 <ph id="ph4">&lt;see langword="null" /&gt;</ph>에 해당하는 날짜와 시간입니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>For example, if <ph id="ph1">`value`</ph> is a <ph id="ph2">&lt;xref:System.String&gt;</ph> that represents a date, <ph id="ph3">`provider`</ph> could supply culture-specific information about the notation used to represent that date.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`value`</ph> 는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 날짜를 나타내는 <ph id="ph3">`provider`</ph> 해당 날짜를 나타내는 데 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is involved in the conversion of <ph id="ph2">`value`</ph> if the runtime type of <ph id="ph3">`value`</ph> is a <ph id="ph4">&lt;xref:System.String&gt;</ph>, or if <ph id="ph5">`value`</ph> is a user-defined type whose <ph id="ph6">&lt;xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType&gt;</ph> implementation makes use of <ph id="ph7">`provider`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 변환 하는 중에 관련 되어 <ph id="ph2">`value`</ph> 의 런타임 형식이 <ph id="ph3">`value`</ph> 은 <ph id="ph4">&lt;xref:System.String&gt;</ph>, if 또는 <ph id="ph5">`value`</ph> 사용자 정의 형식이 <ph id="ph6">&lt;xref:System.IConvertible.ToDateTime%2A?displayProperty=nameWithType&gt;</ph> 구현을 사용 하 <ph id="ph7">`provider`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>If the runtime type of <ph id="ph1">`value`</ph> is <ph id="ph2">&lt;xref:System.String&gt;</ph> and <ph id="ph3">`provider`</ph> is <ph id="ph4">`null`</ph>, the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the current thread culture is used.</source>
          <target state="translated">런타임 형식이 경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">&lt;xref:System.String&gt;</ph> 및 <ph id="ph3">`provider`</ph> 은 <ph id="ph4">`null`</ph>, <ph id="ph5">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 현재 스레드 문화권을 나타내는 개체를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>The following example defines a custom format provider, <ph id="ph1">`CustomProvider`</ph>, whose <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method outputs a message to the console that it has been invoked, and then returns the <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object of the culture whose name was passed as a parameter to its class constructor.</source>
          <target state="translated">다음 예제에서는 사용자 지정 형식 공급자를 정의 <ph id="ph1">`CustomProvider`</ph>, 해당 <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> 호출 된 하 고 다음을 반환 하는 콘솔에 메시지를 출력 하는 메서드는 <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 문화권 이름이 해당 클래스에 매개 변수로 전달 된 개체 생성자입니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>Each of these <ph id="ph1">`CustomProvider`</ph> objects is used to convert the elements in an object array to date and time values.</source>
          <target state="translated">이러한 각 <ph id="ph1">`CustomProvider`</ph> 개체는 날짜 및 시간 값을 개체 배열에서 요소를 변환 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>The output indicates that the <ph id="ph1">`CustomProvider`</ph> object is used in the conversion only when the type of the <ph id="ph2">`value`</ph> parameter is a <ph id="ph3">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">출력에 표시는 <ph id="ph1">`CustomProvider`</ph> 변환에 개체를 사용 하는 경우에만 유형의 <ph id="ph2">`value`</ph> 매개 변수는는 <ph id="ph3">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a valid date and time value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 유효한 날짜 및 시간 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source>A string that contains a date and time to convert.</source>
          <target state="translated">변환할 날짜 및 시간이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 날짜와 시간으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source>The date and time equivalent of the value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or the date and time equivalent of <ph id="ph2">&lt;see cref="F:System.DateTime.MinValue" /&gt;</ph> if <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 값에 해당하는 날짜와 시간이거나, <ph id="ph2">&lt;see cref="F:System.DateTime.MinValue" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>이면 <ph id="ph4">&lt;see langword="null" /&gt;</ph>에 해당하는 날짜와 시간입니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method on <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드를 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 현재 culture가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source>The following example converts string representations of date values with the <ph id="ph1">`ToDateTime`</ph> method, using an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 사용 하 여 날짜 값의 문자열 표현으로 변환 된 <ph id="ph1">`ToDateTime`</ph> 메서드를 사용 하 여는 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a properly formatted date and time string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 올바른 형식의 날짜 및 시간 문자열이 아닌 경우</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a decimal number.</source>
          <target state="translated">지정된 값을 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent decimal number.</source>
          <target state="translated">지정된 부울 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Boolean)">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 변환 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.</source>
          <target state="translated">지정된 8비트 부호 없는 정수 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Byte)">
          <source>The decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Byte)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Char)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Char)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Char)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Char)">
          <source>The following example attempts to convert a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>, and throws <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> upon failure.</source>
          <target state="translated">다음 예제에서는 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>, throw 및 <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> 오류 발생 시.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Char)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Decimal)">
          <source>A decimal number.</source>
          <target state="translated">10진수입니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Decimal)">
          <source>Returns the specified decimal number; no actual conversion is performed.</source>
          <target state="translated">지정된 10진수를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent decimal number.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Double)">
          <source>A decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value returned by this method contains a maximum of 15 significant digits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 이 메서드에서 반환 된 값에는 최대 15 자리의 유효 자릿수가 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Double)">
          <source>If the <ph id="ph1">`value`</ph> parameter contains more than 15 significant digits, it is rounded using rounding to nearest.</source>
          <target state="translated">경우는 <ph id="ph1">`value`</ph> 15 개 이상의 유효 자릿수를 포함 하는 매개 변수, 가장 가까운 수로 반올림을 사용 하 여 반올림 됩니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Double)">
          <source>The following example illustrates how the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType&gt;</ph> method uses rounding to nearest to return a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value with 15 significant digits.</source>
          <target state="translated">다음 예제에서는 방법을 <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType&gt;</ph> 메서드 반환 한다는 점을 반올림을 사용 하 여 한 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> 유효 자릿수가 15 자리인 값입니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Double)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to an equivalent decimal number.</source>
          <target state="translated">지정된 16비트 부호 있는 정수 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Int16)">
          <source>A decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Int16)">
          <source>The following example converts an array of 16-bit signed integers to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 변환으로 16 비트 부호 있는 정수 배열을 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent decimal number.</source>
          <target state="translated">지정된 32비트 부호 있는 정수 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Int32)">
          <source>A decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Int32)">
          <source>The following example converts an array of signed integers to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 변환으로 부호 있는 정수 배열을 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent decimal number.</source>
          <target state="translated">지정된 64비트 부호 있는 정수 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Int64)">
          <source>A decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Int64)">
          <source>The following example converts an <ph id="ph1">&lt;xref:System.Int64&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Int64&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object)">
          <source>Converts the value of the specified object to an equivalent decimal number.</source>
          <target state="translated">지정된 개체 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object)">
          <source>A decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Object)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Object)">
          <source>The following example tries to convert each element in an object array to a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 개체 배열의 각 요소를 변환 하려고 합니다.는 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format for a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> 형식을 위한 적절한 서식에 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 없는 경우</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to the equivalent decimal number.</source>
          <target state="translated">지정된 8비트 부호 있는 정수 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.SByte)">
          <source>A decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.SByte)">
          <source>The following example converts each element in an array of signed bytes to a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 변환에 부호 있는 바이트 배열에서 각 요소는 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to the equivalent decimal number.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Single)">
          <source>A decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value returned by this method contains a maximum of seven significant digits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 최대 유효 자릿수 7 개를 포함 하는이 메서드에 의해 반환 된 값입니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Single)">
          <source>If the <ph id="ph1">`value`</ph> parameter contains more than seven significant digits, it is rounded using rounding to nearest.</source>
          <target state="translated">경우는 <ph id="ph1">`value`</ph> 7 개 이상의 유효 자릿수를 포함 하는 매개 변수, 가장 가까운 수로 반올림을 사용 하 여 반올림 됩니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Single)">
          <source>The following example illustrates how the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Single%29&gt;</ph> method uses rounding to nearest to return a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value with seven significant digits.</source>
          <target state="translated">다음 예제에서는 방법을 <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Single%29&gt;</ph> 메서드 반환 한다는 점을 반올림을 사용 하 여 한 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> 유효 자릿수가 7 자리인 값입니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Single)">
          <source>The following example tries to convert each element in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 합니다. <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String)">
          <source>Converts the specified string representation of a number to an equivalent decimal number.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String)">
          <source>A decimal number that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 10진수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String)">
          <source><ph id="ph1">`value`</ph> is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 현재 스레드 문화권의 서식 지정 규칙을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Decimal.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Decimal.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String)">
          <source>The following example illustrates the use of <ph id="ph1">`ToDecimal`</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`ToDecimal`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String)">
          <source>It attempts to convert a <ph id="ph1">&lt;xref:System.String&gt;</ph> to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>, and throws the possible exceptions that may arise during the conversion.</source>
          <target state="translated">변환 하기는 <ph id="ph1">&lt;xref:System.String&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>를 변환 하는 동안 발생할 수 있는 가능한 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 유효한 형식의 숫자가 아닙니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.</source>
          <target state="translated">지정된 16비트 부호 없는 정수 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.UInt16)">
          <source>The decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.UInt16)">
          <source>The following example converts an array of 16-bit unsigned integers to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 변환에 16 비트 부호 없는 정수의 배열을 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.</source>
          <target state="translated">지정된 32비트 부호 없는 정수 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.UInt32)">
          <source>A decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.UInt32)">
          <source>The following example converts an array of unsigned integers to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 배열로 변환 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.</source>
          <target state="translated">지정된 64비트 부호 없는 정수 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.UInt64)">
          <source>A decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.UInt64)">
          <source>The following example converts an array of unsigned long integers to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 (long)의 배열을 변환 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source>A decimal number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 10진수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> class that implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Temperature`</ph> 인터페이스를 구현하는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source>The following example shows that when a <ph id="ph1">`Temperature`</ph> object is passed as a parameter to the <ph id="ph2">&lt;xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> method, the <ph id="ph3">&lt;xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> implementation of the <ph id="ph4">`Temperature`</ph> class is called to perform the conversion.</source>
          <target state="translated">다음 예제에서는 때는 <ph id="ph1">`Temperature`</ph> 에 대 한 매개 변수로 전달 하는 <ph id="ph2">&lt;xref:System.Convert.ToDecimal%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> 메서드를는 <ph id="ph3">&lt;xref:System.IConvertible.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> 구현의 <ph id="ph4">`Temperature`</ph> 클래스 변환을 수행 하기 위해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format for a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> 형식을 위한 적절한 서식에 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 없는 경우</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 10진수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source>A decimal number that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 10진수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.Decimal.Parse%2A?displayProperty=nameWithType&gt;</ph> method on <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.Decimal.Parse%2A?displayProperty=nameWithType&gt;</ph> 메서드를 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 culture가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Decimal.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Decimal.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source>The following example attempts to convert an array of strings to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values by using <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objects that represent two different cultures.</source>
          <target state="translated">다음 예제에서는 문자열의 배열을 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 사용 하 여 값 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 두 개의 서로 다른 문화권을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 유효한 형식의 숫자가 아닙니다.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a double-precision floating-point number.</source>
          <target state="translated">지정된 값을 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 부울 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Boolean)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 8비트 부호 없는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Byte)">
          <source>The double-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Byte)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Char)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Char)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Char)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Char)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 10진수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Decimal)">
          <source>A double-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Decimal)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Double)">
          <source>The double-precision floating-point number to return.</source>
          <target state="translated">반환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Double)">
          <source>Returns the specified double-precision floating-point number; no actual conversion is performed.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 16비트 부호 있는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Int16)">
          <source>A double-precision floating-point number equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>와 값이 같은 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Int16)">
          <source>The following example converts each element in an array of 16-bit signed integers to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 변환에 16 비트 부호 있는 정수 배열에서 각 요소는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 32비트 부호 있는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Int32)">
          <source>A double-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Int32)">
          <source>The following example converts an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 64비트 부호 있는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Int64)">
          <source>A double-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Int64)">
          <source>The following example converts each element in an array of signed long integers to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">부호 있는 정수 (long) 배열에서 각 요소를 변환 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object)">
          <source>Converts the value of the specified object to a double-precision floating-point number.</source>
          <target state="translated">지정된 개체의 값을 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object)">
          <source>A double-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 배정밀도 부동 소수점 숫자이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is not <ph id="ph2">`null`</ph>, this method wraps a call to the <ph id="ph3">&lt;xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType&gt;</ph> implementation of the underlying type of <ph id="ph4">`value`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 않습니다 <ph id="ph2">`null`</ph>,이 메서드 호출을 래핑하는 <ph id="ph3">&lt;xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식 구현 <ph id="ph4">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Object)">
          <source>The following example attempts to convert each value in an object array to a <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 개체 배열에서 각 값을 변환 하는 <ph id="ph1">&lt;xref:System.Double&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format for a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 형식을 위한 적절한 서식에 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 없는 경우</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 8비트 부호 있는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.SByte)">
          <source>The 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.SByte)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.SByte&gt;</ph> values to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.SByte&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Single)">
          <source>The single-precision floating-point number.</source>
          <target state="translated">단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Single)">
          <source>A double-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Single)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String)">
          <source>Converts the specified string representation of a number to an equivalent double-precision floating-point number.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String)">
          <source>A double-precision floating-point number that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 배정밀도 부동 소수점 숫자이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToDouble%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToDouble%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String)">
          <source><ph id="ph1">`value`</ph> is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 현재 스레드 문화권의 서식 지정 규칙을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String)">
          <source>The following example attempts to convert each element in an array of numeric strings to a <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 숫자 문자열의 배열에서 각 요소를 변환 하는 <ph id="ph1">&lt;xref:System.Double&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String)">
          <source>The example's output is from a system whose current culture is en-US.</source>
          <target state="translated">현재 문화권이 EN-US 인 시스템에서 예에 나오는 출력이 됩니다.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 유효한 형식의 숫자가 아닙니다.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 16비트 부호 없는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.UInt16)">
          <source>A double-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.UInt16)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> values to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 32비트 부호 없는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.UInt32)">
          <source>A double-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.UInt32)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> values to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.</source>
          <target state="translated">지정된 64비트 부호 없는 정수 값을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.UInt64)">
          <source>A double-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.UInt64)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> values to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>A double-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 배정밀도 부동 소수점 숫자이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToDouble%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>For example, if <ph id="ph1">`value`</ph> is a <ph id="ph2">&lt;xref:System.String&gt;</ph> that represents a number, <ph id="ph3">`provider`</ph> could supply culture-specific information about the notation used to represent that number.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`value`</ph> 는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 숫자를 나타내는 <ph id="ph3">`provider`</ph> 해당 숫자를 나타내는 데 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>The following example defines a class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> and a class that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 구현 하는 클래스를 정의 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 및 구현 하는 클래스 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>Objects of the class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> hold an array of <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">구현 하는 클래스의 개체 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 의 배열을 보유 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>An object of each class is passed to the <ph id="ph1">`ToDouble`</ph> method.</source>
          <target state="translated">각 클래스의 개체에 전달 되는 <ph id="ph1">`ToDouble`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source>This method returns an average of the array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, using the object that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> to determine how to calculate the average.</source>
          <target state="translated">이 메서드가 반환 배열의 평균 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 구현 하는 개체를 사용 하 여 값 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 의 평균을 계산 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format for a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 형식을 위한 적절한 서식에 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 없는 경우</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 배정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source>A double-precision floating-point number that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 배정밀도 부동 소수점 숫자이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.Double.Parse%2A?displayProperty=nameWithType&gt;</ph> method on <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.Double.Parse%2A?displayProperty=nameWithType&gt;</ph> 메서드를 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 culture가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source>The following example converts string representations of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values with the <ph id="ph2">`ToDouble`</ph> method, using an <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 변환의 문자열 표현을 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 있는 값의 <ph id="ph2">`ToDouble`</ph> 메서드를 사용 하 여는 <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 유효한 형식의 숫자가 아닙니다.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a 16-bit signed integer.</source>
          <target state="translated">지정된 값을 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 부울 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Boolean)">
          <source>The following example converts the Boolean values <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph> to <ph id="ph3">&lt;xref:System.Int16&gt;</ph> values.</source>
          <target state="translated">다음 예에서는 부울 값을 변환 <ph id="ph1">`true`</ph> 및 <ph id="ph2">`false`</ph> 를 <ph id="ph3">&lt;xref:System.Int16&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Byte)">
          <source>A 16-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Byte)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> values to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 값을 16 비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Char)">
          <source>Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 유니코드 문자의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Char)">
          <source>A 16-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Char)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Char&gt;</ph> values to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값을 16 비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Char)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 10진수 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 16-bit signed integer.</source>
          <target state="translated">가장 가까운 16비트 부호 있는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Decimal)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값을 16 비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Decimal)">
          <source>The example illustrates that any fractional part of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is rounded when performing the conversion.</source>
          <target state="translated">예제는 들의 소수 부분은 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 변환을 수행할 때 값은 반올림 됩니다.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 16-bit signed integer.</source>
          <target state="translated">가장 가까운 16비트 부호 있는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Double)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값을 16 비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Double)">
          <source>The example illustrates that any fractional part of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value is rounded before performing the conversion.</source>
          <target state="translated">예제는 소수 부분의 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 변환을 수행 하기 전에 값은 반올림 됩니다.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int16)">
          <source>The 16-bit signed integer to return.</source>
          <target state="translated">반환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int16)">
          <source>Returns the specified 16-bit signed integer; no actual conversion is performed.</source>
          <target state="translated">지정된 16비트 부호 있는 정수를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int32)">
          <source>The 16-bit signed integer equivalent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 있는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Int32)">
          <source>The following example attempts to convert each element in an array of integers to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 정수 배열의 각 요소에에서 16 비트 부호 있는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 64비트 부호 있는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int64)">
          <source>A 16-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Int64)">
          <source>The following example attempts to convert each element in an array of long integers to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 정수 (long) 배열의 각 요소에에서 16 비트 부호 있는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object)">
          <source>Converts the value of the specified object to a 16-bit signed integer.</source>
          <target state="translated">지정된 개체의 값을 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object)">
          <source>A 16-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is not <ph id="ph2">`null`</ph>, this method wraps a call to the <ph id="ph3">&lt;xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType&gt;</ph> implementation of the underlying type of <ph id="ph4">`value`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 않습니다 <ph id="ph2">`null`</ph>,이 메서드 호출을 래핑하는 <ph id="ph3">&lt;xref:System.IConvertible.ToInt16%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식 구현 <ph id="ph4">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Object)">
          <source>The following example attempts to convert each element in an object array to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 개체 배열의 각 요소에에서 16 비트 부호 있는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format for an <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph> 형식을 위한 적절한 서식에 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 없는 경우</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.SByte)">
          <source>A 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.SByte)">
          <source>The following example converts each element in an array of signed bytes to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 16 비트 부호 있는 정수를 부호 있는 바이트 배열에서 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 16-bit signed integer.</source>
          <target state="translated">가장 가까운 16비트 부호 있는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Single)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Single)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값을 16 비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String)">
          <source>Converts the specified string representation of a number to an equivalent 16-bit signed integer.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String)">
          <source>A 16-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 16비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String)">
          <source><ph id="ph1">`value`</ph> is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 현재 스레드 문화권의 서식 지정 규칙을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Int16.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Int16.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String)">
          <source>The following example converts string representations of 16-bit integers with the <ph id="ph1">`ToInt16`</ph> method, using default formatting.</source>
          <target state="translated">다음 예제에서는 변환 된 16 비트 정수의 문자열 표현을 <ph id="ph1">`ToInt16`</ph> 메서드를 기본 형식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 16비트 부호 없는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt16)">
          <source>A 16-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.UInt16)">
          <source>The following example attempts to convert each element in an array of unsigned 16-bit integers to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 16 비트 정수 배열의 각 요소에에서 16 비트 부호 있는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 32비트 부호 없는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt32)">
          <source>A 16-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.UInt32)">
          <source>The following example attempts to convert each element in an array of unsigned integers to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 배열의 각 요소에에서 16 비트 부호 있는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 64비트 부호 없는 정수의 값을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt64)">
          <source>A 16-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.UInt64)">
          <source>The following example attempts to convert each element in an array of unsigned long integers to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 (long) 배열의 각 요소에에서 16 비트 부호 있는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source>A 16-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source>For example, if <ph id="ph1">`value`</ph> is a <ph id="ph2">&lt;xref:System.String&gt;</ph> that represents a number, <ph id="ph3">`provider`</ph> could supply culture-specific information about the notation used to represent that number.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`value`</ph> 는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 숫자를 나타내는 <ph id="ph3">`provider`</ph> 해당 숫자를 나타내는 데 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source>The following example defines a class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> and a class that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 구현 하는 클래스를 정의 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 및 구현 하는 클래스 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source>Objects of the class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> hold an array of <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">구현 하는 클래스의 개체 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 의 배열을 보유 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source>An object of each class is passed to the <ph id="ph1">`ToInt16`</ph> method.</source>
          <target state="translated">각 클래스의 개체에 전달 되는 <ph id="ph1">`ToInt16`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source>This method returns an average of the array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, using the object that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> to determine how to calculate the average.</source>
          <target state="translated">이 메서드가 반환 배열의 평균 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 구현 하는 개체를 사용 하 여 값 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 의 평균을 계산 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format for an <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph> 형식을 위한 적절한 서식에 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 없는 경우</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph>을 구현하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source>A 16-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 16비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 culture가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Int16.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Int16.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source>The following example converts string representations of 16-bit integers with the <ph id="ph1">`ToInt16`</ph> method, using an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 변환 된 16 비트 정수의 문자열 표현을 <ph id="ph1">`ToInt16`</ph> 메서드를 사용 하 여 프로그램 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>The base of the number in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, which must be 2, 8, 10, or 16.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>에 지정된 숫자의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.</source>
          <target state="translated">지정된 기수로 나타낸 숫자에 대한 문자열 표현을 16비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>A 16-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 16비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>If <ph id="ph1">`fromBase`</ph> is 16, you can prefix the number specified by the <ph id="ph2">`value`</ph> parameter with "0x" or "0X".</source>
          <target state="translated">경우 <ph id="ph1">`fromBase`</ph> 는 16에 지정 된 접두사로 사용할 수 있습니다는 <ph id="ph2">`value`</ph> "0x" 또는 "0x"로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>Because the negative sign is not supported for non-base 10 numeric representations, the <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29&gt;</ph> method assumes that negative numbers use two’s complement representation.</source>
          <target state="translated">음수 부호 아닌 10 숫자 표현에 대 한 지원 되지 않으므로 <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29&gt;</ph> 메서드 음수 2의 보수 표현이 사용 한다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>In other words, the method always interprets the highest-order binary bit of an integer (bit 15) as its sign bit.</source>
          <target state="translated">즉, 메서드는 항상 부호 비트로 integer (비트 15)의 최상위 이진 비트를 해석합니다.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <ph id="ph1">&lt;xref:System.Int16&gt;</ph> data type is converted to an <ph id="ph2">&lt;xref:System.Int16&gt;</ph> value without the method throwing an exception.</source>
          <target state="translated">10 진수가 아닌 번호는 코드의 범위를 벗어났습니다. 쓸 수는 결과적으로,는 <ph id="ph1">&lt;xref:System.Int16&gt;</ph> 데이터 형식을 변환할는 <ph id="ph2">&lt;xref:System.Int16&gt;</ph> 메서드에서 예외를 throw 하지 않고 값입니다.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>The following example increments <ph id="ph1">&lt;xref:System.Int16.MaxValue?displayProperty=nameWithType&gt;</ph> by one, converts the resulting number to its hexadecimal string representation, and then calls the <ph id="ph2">&lt;xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 증분 <ph id="ph1">&lt;xref:System.Int16.MaxValue?displayProperty=nameWithType&gt;</ph> 1 결과 수를 16 진수 문자열 표현으로 변환 하 고 다음 호출에서 <ph id="ph2">&lt;xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>Instead of throwing an exception, the method displays the message, "0x8000 converts to -32768."</source>
          <target state="translated">메서드는 예외를 throw 하는 대신 메시지를 표시 "-32768 0x8000 변환 합니다."</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</source>
          <target state="translated">이항 연산 또는 숫자 변환을 수행할 때 항상 특정 값을 해석 하는 메서드를 적절 한 숫자 표현이 사용 하는지 확인 하기 위해 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</source>
          <target state="translated">다음 예제와 같이 16 진수 문자열 표현으로 변환 하기 전에 먼저 숫자 값의 부호를 검색 하 여 적절 하 게 메서드 핸들 오버플로 하는 것을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</source>
          <target state="translated">원래 값이 양수인 변환한 결과 정수에 다시 음수 값을 하는 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>The following example attempts to interpret each element in a string array as a hexadecimal string and to convert it to a 16-bit signed integer.</source>
          <target state="translated">다음 예제에서는 16 진수 문자열로 문자열 배열의 각 요소를 해석 하 고 16 비트 부호 있는 정수로 변환 하 시도 합니다.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="translated">기수가 10이 아닌 부호 있는 숫자를 나타내는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 접두사가 음수 기호인 경우</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> contains a character that is not a valid digit in the base specified by <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>에 지정된 밑에서 유효한 숫자가 아닌 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>The exception message indicates that there are no digits to convert if the first character in <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is invalid; otherwise, the message indicates that <ph id="ph2">&lt;paramref name="value" /&gt;</ph> contains invalid trailing characters.</source>
          <target state="translated">예외 메시지는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 첫 문자가 유효하지 않은 경우 변환할 숫자가 없음을 나타내고, 유효한 경우 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>에 잘못된 후행 문자가 있다고 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="translated">기수가 10이 아닌 부호 있는 숫자를 나타내는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 접두사가 음수 기호인 경우</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a 32-bit signed integer.</source>
          <target state="translated">지정된 값을 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 부울 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Boolean)">
          <source>The following example converts the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values <ph id="ph2">`true`</ph> and <ph id="ph3">`false`</ph> to integers.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 값 <ph id="ph2">`true`</ph> 및 <ph id="ph3">`false`</ph> 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Byte)">
          <source>A 32-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Byte)">
          <source>The following example converts each element in an array of bytes to an integer.</source>
          <target state="translated">다음 예제에서는 바이트 배열의 각 요소에에서 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Char)">
          <source>Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 유니코드 문자의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Char)">
          <source>A 32-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Char%29&gt;</ph> method returns a 32-bit signed integer that represents the UTF-16 encoded code unit of the <ph id="ph2">`value`</ph> argument.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Char%29&gt;</ph> 의 u t F-16으로 인코딩된 코드 단위를 나타내는 32 비트 부호 있는 정수를 반환 하는 메서드는 <ph id="ph2">`value`</ph> 인수입니다.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Char)">
          <source>If <ph id="ph1">`value`</ph> is not a low surrogate or a high surrogate, this return value also represents the Unicode code point of value.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 하위 서로게이트 아니거나 반환 값이 상위 서로게이트, 또한 값의 유니코드 코드 포인트를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Char)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Char&gt;</ph> values to an integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 10진수 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 32-bit signed integer.</source>
          <target state="translated">가장 가까운 32비트 부호 있는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Decimal)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to an integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 32-bit signed integer.</source>
          <target state="translated">가장 가까운 32비트 부호 있는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Double)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to aninteger.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Double&gt;</ph> aninteger 값입니다.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Int16)">
          <source>A 32-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Int16)">
          <source>The following example converts each element in an array of 16-bit signed integers to an integer.</source>
          <target state="translated">다음 예제에서는 각 요소에 16 비트 부호 있는 정수 배열 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Int32)">
          <source>The 32-bit signed integer to return.</source>
          <target state="translated">반환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Int32)">
          <source>Returns the specified 32-bit signed integer; no actual conversion is performed.</source>
          <target state="translated">지정된 32비트 부호 있는 정수를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 64비트 부호 있는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Int64)">
          <source>A 32-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Int64)">
          <source>The following example attempts to convert each element in an array of long integers to an integer.</source>
          <target state="translated">다음 예제에서는 정수 (long) 배열에서 각 요소를 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object)">
          <source>Converts the value of the specified object to a 32-bit signed integer.</source>
          <target state="translated">지정된 개체의 값을 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object)">
          <source>A 32-bit signed integer equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Object)">
          <source>If<ph id="ph1">`value`</ph> is not <ph id="ph2">`null`</ph>, this method wraps a call to the <ph id="ph3">&lt;xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType&gt;</ph> implementation of the underlying type of <ph id="ph4">`value`</ph>.</source>
          <target state="translated">경우<ph id="ph1">`value`</ph> 않습니다 <ph id="ph2">`null`</ph>,이 메서드 호출을 래핑하는 <ph id="ph3">&lt;xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식 구현 <ph id="ph4">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Object)">
          <source>The following example attempts to convert each element in an object array to an integer.</source>
          <target state="translated">다음 예제에서는 개체 배열의 각 요소를 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the  <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.SByte)">
          <source>A 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.SByte)">
          <source>The following example converts each element in an array of signed bytes to an integer.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트 배열에서 각 요소는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 32-bit signed integer.</source>
          <target state="translated">가장 가까운 32비트 부호 있는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Single)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Single)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to an integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String)">
          <source>Converts the specified string representation of a number to an equivalent 32-bit signed integer.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String)">
          <source>A 32-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 32비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.<ph id="ph4">`value`</ph></source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.<ph id="ph4">`value`</ph></target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String)">
          <source>is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated">현재 스레드 문화권의 형식 규칙을 사용 하 여 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Int32.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Int32.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String)">
          <source>The following example attempts to convert each element in a numeric string array to an integer.</source>
          <target state="translated">다음 예에서는 숫자 문자열 배열의 각 요소를 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 16비트 부호 없는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt16)">
          <source>A 32-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.UInt16)">
          <source>The following example converts each element in an array of 16-bit unsigned integers to an integer.</source>
          <target state="translated">다음 예제에서는 16 비트 부호 없는 정수 배열의 각 요소에에서 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 32비트 부호 없는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt32)">
          <source>A 32-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.UInt32)">
          <source>The following example attempts to convert each element in an array of unsigned integers to a signed integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 배열의 각 요소에에서 부호 있는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 64비트 부호 없는 정수의 값을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt64)">
          <source>A 32-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.UInt64)">
          <source>The following example attempts to convert each element in an array of unsigned long integers to a signed integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 (long) 배열의 각 요소에에서 부호 있는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>A 32-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToInt32%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>For example, if <ph id="ph1">`value`</ph> is a <ph id="ph2">&lt;xref:System.String&gt;</ph> that represents a number, <ph id="ph3">`provider`</ph> could supply culture-specific information about the notation used to represent that number.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`value`</ph> 는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 숫자를 나타내는 <ph id="ph3">`provider`</ph> 해당 숫자를 나타내는 데 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>The following example defines a class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> and a class that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 구현 하는 클래스를 정의 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 및 구현 하는 클래스 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>Objects of the class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> hold an array of <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">구현 하는 클래스의 개체 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 의 배열을 보유 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>An object of each class is passed to the <ph id="ph1">`ToInt32`</ph> method.</source>
          <target state="translated">각 클래스의 개체에 전달 되는 <ph id="ph1">`ToInt32`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source>This method returns an average of the array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, using the object that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> to determine how to calculate the average.</source>
          <target state="translated">이 메서드가 반환 배열의 평균 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 구현 하는 개체를 사용 하 여 값 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 의 평균을 계산 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph>을 구현하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>A 32-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 32비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.Int32.Parse%2A?displayProperty=nameWithType&gt;</ph> method on <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.Int32.Parse%2A?displayProperty=nameWithType&gt;</ph> 메서드를 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 culture가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Int32.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Int32.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 양수 기호와 음수 기호 "neg" 문자열을 문자열 "po"를 인식 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source>It then attempts to convert each element of a numeric string array to an integer using both this provider and the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> provider for the invariant culture.</source>
          <target state="translated">숫자 문자열 배열의 각 요소를 모두이 공급자를 사용 하 여 정수로 변환 하려고 시도 합니다 및 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 고정 문화권에 대 한 공급자입니다.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>The base of the number in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, which must be 2, 8, 10, or 16.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>에 지정된 숫자의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.</source>
          <target state="translated">지정된 기수로 나타낸 숫자에 대한 문자열 표현을 32비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>A 32-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 32비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>If <ph id="ph1">`fromBase`</ph> is 16, you can prefix the number specified by the <ph id="ph2">`value`</ph> parameter with "0x" or "0X".</source>
          <target state="translated">경우 <ph id="ph1">`fromBase`</ph> 는 16에 지정 된 접두사로 사용할 수 있습니다는 <ph id="ph2">`value`</ph> "0x" 또는 "0x"로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>Because the negative sign is not supported for non-base 10 numeric representations, the <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29&gt;</ph> method assumes that negative numbers use two’s complement representation.</source>
          <target state="translated">음수 부호 아닌 10 숫자 표현에 대 한 지원 되지 않으므로 <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29&gt;</ph> 메서드 음수 2의 보수 표현이 사용 한다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>In other words, the method always interprets the highest-order binary bit of an integer (bit 31) as its sign bit.</source>
          <target state="translated">즉, 메서드는 항상 부호 비트로 (31 비트) 정수의 최상위 이진 비트를 해석합니다.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> data type is converted to an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value without the method throwing an exception.</source>
          <target state="translated">10 진수가 아닌 번호는 코드의 범위를 벗어났습니다. 쓸 수는 결과적으로,는 <ph id="ph1">&lt;xref:System.Int32&gt;</ph> 데이터 형식을 변환할는 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 메서드에서 예외를 throw 하지 않고 값입니다.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>The following example increments <ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> by one, converts the resulting number to its hexadecimal string representation, and then calls the <ph id="ph2">&lt;xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 증분 <ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> 1 결과 수를 16 진수 문자열 표현으로 변환 하 고 다음 호출에서 <ph id="ph2">&lt;xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>Instead of throwing an exception, the method displays the message, "0x80000000 converts to -2147483648."</source>
          <target state="translated">메서드는 예외를 throw 하는 대신 메시지를 표시 "-2147483648 0x80000000 변환 합니다."</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</source>
          <target state="translated">이항 연산 또는 숫자 변환을 수행할 때 항상 특정 값을 해석 하는 메서드를 적절 한 숫자 표현이 사용 하는지 확인 하기 위해 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>As the following example illustrates, you can ensure that the method handles overflows appropriately by first retrieving the sign of the numeric value before converting it to its hexadecimal string representation.</source>
          <target state="translated">다음 예제와 같이 16 진수 문자열 표현으로 변환 하기 전에 먼저 숫자 값의 부호를 검색 하 여 적절 하 게 메서드 핸들 오버플로 하는 것을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>Throw an exception if the original value was positive but the conversion back to an integer yields a negative value.</source>
          <target state="translated">원래 값이 양수인 변환한 결과 정수에 다시 음수 값을 하는 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="translated">기수가 10이 아닌 부호 있는 숫자를 나타내는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 접두사가 음수 기호인 경우</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> contains a character that is not a valid digit in the base specified by <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>에 지정된 밑에서 유효한 숫자가 아닌 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>The exception message indicates that there are no digits to convert if the first character in <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is invalid; otherwise, the message indicates that <ph id="ph2">&lt;paramref name="value" /&gt;</ph> contains invalid trailing characters.</source>
          <target state="translated">예외 메시지는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 첫 문자가 유효하지 않은 경우 변환할 숫자가 없음을 나타내고, 유효한 경우 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>에 잘못된 후행 문자가 있다고 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="translated">기수가 10이 아닌 부호 있는 숫자를 나타내는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 접두사가 음수 기호인 경우</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a 64-bit signed integer.</source>
          <target state="translated">지정된 값을 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 부울 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Boolean)">
          <source>The following example converts the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values <ph id="ph2">`true`</ph> and <ph id="ph3">`false`</ph> to long integers.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 값 <ph id="ph2">`true`</ph> 및 <ph id="ph3">`false`</ph> 정수 (long)에 있습니다.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Byte)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Byte)">
          <source>The following example converts each element in an array of bytes to a long integer.</source>
          <target state="translated">다음 예제에서는 정수 (long)에 바이트 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Char)">
          <source>Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 유니코드 문자의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Char)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Char)">
          <source>The following example converts each element in a <ph id="ph1">&lt;xref:System.Char&gt;</ph> array to a long integer.</source>
          <target state="translated">다음 예제에서는 변환의 각 요소는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 를 long 정수 배열입니다.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 10진수 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 64-bit signed integer.</source>
          <target state="translated">가장 가까운 64비트 부호 있는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Decimal)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to a long integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 를 long 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 64-bit signed integer.</source>
          <target state="translated">가장 가까운 64비트 부호 있는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Double)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to a long integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 를 long 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Int16)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Int16)">
          <source>The following example converts each element in an array of 16-bit integers to a long integer.</source>
          <target state="translated">다음 예제에서는 정수 (long)에 16 비트 정수 배열에서 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Int32)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Int64)">
          <source>A 64-bit signed integer.</source>
          <target state="translated">64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Int64)">
          <source>Returns the specified 64-bit signed integer; no actual conversion is performed.</source>
          <target state="translated">지정된 64비트 부호 있는 정수를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Int64)">
          <source>The following example converts each element in an array of integers to a long integer.</source>
          <target state="translated">다음 예제에서는 정수 (long) 정수의 배열에서 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object)">
          <source>Converts the value of the specified object to a 64-bit signed integer.</source>
          <target state="translated">지정된 개체의 값을 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is not <ph id="ph2">`null`</ph>, this method wraps a call to the <ph id="ph3">&lt;xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType&gt;</ph> implementation of the underlying type of <ph id="ph4">`value`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 않습니다 <ph id="ph2">`null`</ph>,이 메서드 호출을 래핑하는 <ph id="ph3">&lt;xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식 구현 <ph id="ph4">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Object)">
          <source>The following example attempts to convert each element in an object array to a long integer.</source>
          <target state="translated">다음 예제에서는 정수 (long)에 개체 배열의 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.SByte)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.SByte)">
          <source>The following example converts each element in a signed byte array to a long integer.</source>
          <target state="translated">다음 예제에서는 정수 (long)에 부호 있는 바이트 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 64-bit signed integer.</source>
          <target state="translated">가장 가까운 64비트 부호 있는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Single)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Single)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to a long integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 를 long 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String)">
          <source>Converts the specified string representation of a number to an equivalent 64-bit signed integer.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String)">
          <source>A 64-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 64비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String)">
          <source><ph id="ph1">`value`</ph> is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 현재 스레드 문화권의 서식 지정 규칙을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Int64.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Int64.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String)">
          <source>The following example attempts to convert each element in an array of numeric strings to a long integer.</source>
          <target state="translated">다음 예제에서는 정수 (long)를 숫자 문자열의 배열에서 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 16비트 부호 없는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.UInt16)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.UInt16)">
          <source>The following example converts each element in an array of 16-bit unsigned integers to a long integer.</source>
          <target state="translated">다음 예제에서는 정수 (long)에는 16 비트 부호 없는 정수 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 32비트 부호 없는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.UInt32)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.UInt32)">
          <source>The following example converts each element in an array of unsigned integers to a long integer.</source>
          <target state="translated">다음 예제에서는 정수 (long)에 부호 없는 정수 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 64비트 부호 없는 정수의 값을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.UInt64)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.UInt64)">
          <source>The following example attempts to convert each element in an array of unsigned long integers to a long integer.</source>
          <target state="translated">다음 예제에서는 정수 (long)를 부호 없는 정수 (long) 배열에서 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToInt64%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>For example, if <ph id="ph1">`value`</ph> is a <ph id="ph2">&lt;xref:System.String&gt;</ph> that represents a number, <ph id="ph3">`provider`</ph> could supply culture-specific information about the notation used to represent that number.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`value`</ph> 는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 숫자를 나타내는 <ph id="ph3">`provider`</ph> 해당 숫자를 나타내는 데 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>The following example defines a class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> and a class that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 구현 하는 클래스를 정의 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 및 구현 하는 클래스 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>Objects of the class that implements <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> hold an array of <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">구현 하는 클래스의 개체 <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> 의 배열을 보유 <ph id="ph2">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>An object of each class is passed to the <ph id="ph1">`ToInt64`</ph> method.</source>
          <target state="translated">각 클래스의 개체에 전달 되는 <ph id="ph1">`ToInt64`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>This method returns an average of the array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, using the object that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> to determine how to calculate the average.</source>
          <target state="translated">이 메서드가 반환 배열의 평균 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 구현 하는 개체를 사용 하 여 값 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 의 평균을 계산 하는 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>A 64-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 64비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.Int64.Parse%2A?displayProperty=nameWithType&gt;</ph> method on <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.Int64.Parse%2A?displayProperty=nameWithType&gt;</ph> 메서드를 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">`IFormatProvider`</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">`IFormatProvider`</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`NumberFormatInfo`</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`NumberFormatInfo`</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">`NumberFormatInfo`</ph> for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">`NumberFormatInfo`</ph> 현재 culture가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Int64.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Int64.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 양수 기호와 음수 기호 "neg" 문자열을 문자열 "po"를 인식 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source>It then attempts to convert each element of a numeric string array to an integer using both this provider and the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> provider for the invariant culture.</source>
          <target state="translated">숫자 문자열 배열의 각 요소를 모두이 공급자를 사용 하 여 정수로 변환 하려고 시도 합니다 및 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 고정 문화권에 대 한 공급자입니다.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>The base of the number in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, which must be 2, 8, 10, or 16.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>에 지정된 숫자의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.</source>
          <target state="translated">지정된 기수로 나타낸 숫자에 대한 문자열 표현을 64비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>A 64-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 64비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>If <ph id="ph1">`fromBase`</ph> is 16, you can prefix the number specified by the <ph id="ph2">`value`</ph> parameter with "0x" or "0X".</source>
          <target state="translated">경우 <ph id="ph1">`fromBase`</ph> 는 16에 지정 된 접두사로 사용할 수 있습니다는 <ph id="ph2">`value`</ph> "0x" 또는 "0x"로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>Because the negative sign is not supported for non-base 10 numeric representations, the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29&gt;</ph> method assumes that negative numbers use two’s complement representation.</source>
          <target state="translated">음수 부호 아닌 10 숫자 표현에 대 한 지원 되지 않으므로 <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29&gt;</ph> 메서드 음수 2의 보수 표현이 사용 한다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>In other words, the method always interprets the highest-order binary bit of a long integer (bit 63) as its sign bit.</source>
          <target state="translated">즉, 메서드는 항상 부호 비트로 정수 (long) (63 비트)의 최상위 이진 비트를 해석합니다.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <ph id="ph1">&lt;xref:System.Int64&gt;</ph> data type is converted to an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value without the method throwing an exception.</source>
          <target state="translated">10 진수가 아닌 번호는 코드의 범위를 벗어났습니다. 쓸 수는 결과적으로,는 <ph id="ph1">&lt;xref:System.Int64&gt;</ph> 데이터 형식을 변환할는 <ph id="ph2">&lt;xref:System.Int64&gt;</ph> 메서드에서 예외를 throw 하지 않고 값입니다.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>The following example converts <ph id="ph1">&lt;xref:System.UInt64.MaxValue&gt;</ph> to its hexadecimal string representation, and then calls the <ph id="ph2">&lt;xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 변환 <ph id="ph1">&lt;xref:System.UInt64.MaxValue&gt;</ph> 해당 16 진수 문자열 표현으로 변환한 다음 호출 하 여 <ph id="ph2">&lt;xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>Instead of throwing an exception, the method displays the message, "0xFFFFFFFFFFFFFFFF converts to -1."</source>
          <target state="translated">메서드는 예외를 throw 하는 대신 메시지를 표시 "-1로 0xFFFFFFFFFFFFFFFF 변환 합니다."</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</source>
          <target state="translated">이항 연산 또는 숫자 변환을 수행할 때 항상 특정 값을 해석 하는 메서드를 적절 한 숫자 표현이 사용 하는지 확인 하기 위해 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</source>
          <target state="translated">다음 예제와 같이 메서드 핸들 첫 번째 확인 하 여 여부는 값이 나타내는 또는 부호 있는 형식이 16 진수 문자열 표현으로 변환 하는 경우 적절 하 게 오버플로가 발생을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>Throw an exception if the original value was an unsigned type but the conversion back to an integer yields a value whose sign bit is on.</source>
          <target state="translated">원래 값이 부호 없는 데이터 형식을 다시 하는 정수로 변환한 결과 부호 비트가 켜져 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>The following example attempts to interpret each element in a string array as a hexadecimal string and convert it to a long integer.</source>
          <target state="translated">다음 예제에서는 16 진수 문자열로 문자열 배열의 각 요소를 해석 하 고 정수 (long)로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="translated">기수가 10이 아닌 부호 있는 숫자를 나타내는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 접두사가 음수 기호인 경우</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> contains a character that is not a valid digit in the base specified by <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>에 지정된 밑에서 유효한 숫자가 아닌 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>The exception message indicates that there are no digits to convert if the first character in <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is invalid; otherwise, the message indicates that <ph id="ph2">&lt;paramref name="value" /&gt;</ph> contains invalid trailing characters.</source>
          <target state="translated">예외 메시지는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 첫 문자가 유효하지 않은 경우 변환할 숫자가 없음을 나타내고, 유효한 경우 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>에 잘못된 후행 문자가 있다고 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="translated">기수가 10이 아닌 부호 있는 숫자를 나타내는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 접두사가 음수 기호인 경우</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Convert.ToInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to an 8-bit signed integer.</source>
          <target state="translated">지정된 값을 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 부울 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Boolean)">
          <source>The following example converts the Boolean values <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph> to signed byte values.</source>
          <target state="translated">다음 예에서는 부울 값을 변환 <ph id="ph1">`true`</ph> 및 <ph id="ph2">`false`</ph> 부호 있는 바이트 값입니다.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Byte)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Byte)">
          <source>The following example attempts to convert each element in a byte array to a signed byte.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트를 바이트 배열의 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Byte)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Char)">
          <source>Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 유니코드 문자의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Char)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Char)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Char&gt;</ph> values to a signed byte.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 부호 있는 바이트 값입니다.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Char)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 10진수 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 8-bit signed integer.</source>
          <target state="translated">가장 가까운 8비트 부호 있는 정수로 반올림되는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Decimal)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to a signed byte.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 부호 있는 바이트 값입니다.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 8-bit signed integer.</source>
          <target state="translated">가장 가까운 8비트 부호 있는 정수로 반올림되는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Double)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to a signed byte.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 부호 있는 바이트 값입니다.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int16)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Int16)">
          <source>The following example attempts to convert each element in an array of signed 16-bit integers to a signed byte.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트를 부호 있는 16 비트 정수 배열에서 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int32)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Int32)">
          <source>The following example attempts to convert each element in an array of signed integers to a signed byte.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트의 부호 있는 정수 배열에서 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 64비트 부호 있는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int64)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Int64)">
          <source>The following example attempts to convert each element in an array of long integers to a signed byte.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트를 정수 (long) 배열에서 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object)">
          <source>Converts the value of the specified object to an 8-bit signed integer.</source>
          <target state="translated">지정된 개체의 값을 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Object)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Object)">
          <source>The following example attempts to convert each element in an object array to a signed byte.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트를 개체 배열의 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.SByte)">
          <source>The 8-bit signed integer to return.</source>
          <target state="translated">반환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.SByte)">
          <source>Returns the specified 8-bit signed integer; no actual conversion is performed.</source>
          <target state="translated">지정된 8비트 부호 있는 정수를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.SByte)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 8-bit signed integer.</source>
          <target state="translated">가장 가까운 8비트 부호 있는 정수로 반올림되는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Single)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Single)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to a signed byte.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 부호 있는 바이트 값입니다.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String)">
          <source>Converts the specified string representation of a number to an equivalent 8-bit signed integer.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String)">
          <source>An 8-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 8비트 부호 있는 정수이거나, value가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.SByte.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String)">
          <source><ph id="ph1">`value`</ph> is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 현재 스레드 문화권의 서식 지정 규칙을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.SByte.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.SByte.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String)">
          <source>The following example converts string representations of <ph id="ph1">&lt;xref:System.SByte&gt;</ph> values with the <ph id="ph2">`ToSByte`</ph> method, using default formatting.</source>
          <target state="translated">다음 예제에서는 변환의 문자열 표현을 <ph id="ph1">&lt;xref:System.SByte&gt;</ph> 있는 값은 <ph id="ph2">`ToSByte`</ph> 메서드를 기본 형식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 16비트 부호 없는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt16)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.UInt16)">
          <source>The following example attempts to convert each element in an array of unsigned 16-bit integers to a signed byte.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트를 16 비트 부호 없는 정수 배열의 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 32비트 부호 없는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt32)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.UInt32)">
          <source>The following example attempts to convert each element in an integer array to a signed byte.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트를 정수 배열의 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 64비트 부호 없는 정수의 값을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt64)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.UInt64)">
          <source>The following example attempts to convert each element in an array of long integers to a signed byte.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트를 정수 (long) 배열에서 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 크거나 <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>For example, if <ph id="ph1">`value`</ph> is a <ph id="ph2">&lt;xref:System.String&gt;</ph> that represents a number, <ph id="ph3">`provider`</ph> could supply culture-specific information about the notation used to represent that number.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`value`</ph> 는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 숫자를 나타내는 <ph id="ph3">`provider`</ph> 해당 숫자를 나타내는 데 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>The following example defines a <ph id="ph1">`ByteString`</ph> class that stores both signed and unsigned bytes as hexadecimal strings along with a field that indicates the sign of the byte.</source>
          <target state="translated">다음 예제에서는 정의 <ph id="ph1">`ByteString`</ph> 모두 저장 하는 클래스 서명 하 고 바이트의 부호를 나타내는 필드와 함께 16 진수 문자열으로 부호 없는 바이트입니다.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>The <ph id="ph1">`ByteString`</ph> class implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">`ByteString`</ph> 클래스는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method to perform the conversion.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType&gt;</ph> 메서드 호출에서 <ph id="ph2">&lt;xref:System.SByte.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> 메서드는 변환이 수행 합니다.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>If it fails, it throws an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">실패 한 경우 throw는 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>The following example shows how the <ph id="ph1">&lt;xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType&gt;</ph> implementation of the <ph id="ph2">`ByteString`</ph> class is called by the <ph id="ph3">&lt;xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다음 예제와 방법을 <ph id="ph1">&lt;xref:System.IConvertible.ToSByte%2A?displayProperty=nameWithType&gt;</ph> 구현의 <ph id="ph2">`ByteString`</ph> 클래스에 의해 호출 됩니다는 <ph id="ph3">&lt;xref:System.Convert.ToSByte%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 culture가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.SByte.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.SByte.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source>The following example converts string representations of <ph id="ph1">&lt;xref:System.SByte&gt;</ph> values with the <ph id="ph2">`ToSByte`</ph> method, using an <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 변환의 문자열 표현을 <ph id="ph1">&lt;xref:System.SByte&gt;</ph> 있는 값의 <ph id="ph2">`ToSByte`</ph> 메서드를 사용 하 여는 <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>The base of the number in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, which must be 2, 8, 10, or 16.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>에 지정된 숫자의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.</source>
          <target state="translated">지정된 기수로 나타낸 숫자에 대한 문자열 표현을 8비트 부호 있는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>An 8-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 8비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>If <ph id="ph1">`fromBase`</ph> is 16, you can prefix the number specified by the <ph id="ph2">`value`</ph> parameter with "0x" or "0X".</source>
          <target state="translated">경우 <ph id="ph1">`fromBase`</ph> 는 16에 지정 된 접두사로 사용할 수 있습니다는 <ph id="ph2">`value`</ph> "0x" 또는 "0x"로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>Because the negative sign is not supported for non-base 10 numeric representations, the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29&gt;</ph> method assumes that negative numbers use two’s complement representation.</source>
          <target state="translated">음수 부호 아닌 10 숫자 표현에 대 한 지원 되지 않으므로 <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29&gt;</ph> 메서드 음수 2의 보수 표현이 사용 한다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>In other words, the method always interprets the high-order bit of a byte (bit 7) as its sign bit.</source>
          <target state="translated">즉, 메서드는 항상 부호 비트로 바이트 (7 비트)의 상위 비트를 해석합니다.</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>As a result, it is possible to write code in which a non-base 10 number that is out of the range of the <ph id="ph1">&lt;xref:System.SByte&gt;</ph> data type is converted to an <ph id="ph2">&lt;xref:System.SByte&gt;</ph> value without the method throwing an exception.</source>
          <target state="translated">10 진수가 아닌 번호는 코드의 범위를 벗어났습니다. 쓸 수는 결과적으로,는 <ph id="ph1">&lt;xref:System.SByte&gt;</ph> 데이터 형식을 변환할는 <ph id="ph2">&lt;xref:System.SByte&gt;</ph> 메서드에서 예외를 throw 하지 않고 값입니다.</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Byte.MaxValue&gt;</ph> to its hexadecimal string representation, and then calls the <ph id="ph2">&lt;xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 변환 <ph id="ph1">&lt;xref:System.Byte.MaxValue&gt;</ph> 해당 16 진수 문자열 표현으로 변환한 다음 호출 하 여 <ph id="ph2">&lt;xref:System.Convert.ToSByte%28System.String%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>Instead of throwing an exception, the method displays the message, "0xff converts to -1."</source>
          <target state="translated">메서드는 예외를 throw 하는 대신 메시지를 표시 "-1로 0xff 변환 합니다."</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method is using the appropriate numeric representation to interpret a particular value.</source>
          <target state="translated">이항 연산 또는 숫자 변환을 수행할 때 항상 특정 값을 해석 하는 메서드를 적절 한 숫자 표현이 사용 하는지 확인 하기 위해 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>As the following example illustrates, you can ensure that the method handles overflows appropriately by first determining whether a value represents an unsigned or a signed type when converting it to its hexadecimal string representation.</source>
          <target state="translated">다음 예제와 같이 메서드 핸들 첫 번째 확인 하 여 여부는 값이 나타내는 또는 부호 있는 형식이 16 진수 문자열 표현으로 변환 하는 경우 적절 하 게 오버플로가 발생을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>Throw an exception if the original value was an unsigned type but the conversion back to a signed byte yields a value whose sign bit is on.</source>
          <target state="translated">원래 값이 부호 없는 형식에 부호 있는 바이트 다시 변환한 결과 부호 비트가 켜져 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>The following example attempts to interpret the elements in a string array as the binary, octal, and hexadecimal representation of numeric values in order to convert them to unsigned bytes.</source>
          <target state="translated">다음 예제에서는 부호 없는 바이트로 변환 하기 위해 8 진수 이진으로 문자열 배열에서 요소 및 숫자 값의 16 진수 표시를 해석 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="translated">기수가 10이 아닌 부호 있는 숫자를 나타내는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 접두사가 음수 기호인 경우</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> contains a character that is not a valid digit in the base specified by <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>에 지정된 밑에서 유효한 숫자가 아닌 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>The exception message indicates that there are no digits to convert if the first character in <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is invalid; otherwise, the message indicates that <ph id="ph2">&lt;paramref name="value" /&gt;</ph> contains invalid trailing characters.</source>
          <target state="translated">예외 메시지는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 첫 문자가 유효하지 않은 경우 변환할 숫자가 없음을 나타내고, 유효한 경우 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>에 잘못된 후행 문자가 있다고 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="translated">기수가 10이 아닌 부호 있는 숫자를 나타내는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 접두사가 음수 기호인 경우</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSByte(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a single-precision floating-point number.</source>
          <target state="translated">지정된 값을 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 부울 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Boolean)">
          <source>The following example converts the Boolean values <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph> to <ph id="ph3">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">다음 예에서는 부울 값을 변환 <ph id="ph1">`true`</ph> 및 <ph id="ph2">`false`</ph> 를 <ph id="ph3">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 8비트 부호 없는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Byte)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Byte)">
          <source>The following example converts each element in an array of byte values to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 변환에 바이트 값의 배열에서 각 요소는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Char)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Char)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Char)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Char)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 10진수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Decimal)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is rounded using rounding to nearest.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 반올림됩니다.</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Decimal)">
          <source>For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</source>
          <target state="translated">예를 들어, 소수점 두 자리로 반올림하면 2.345는 2.34가 되고 2.355는 2.36이 됩니다.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Decimal)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Double)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is rounded using rounding to nearest.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 반올림됩니다.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Double)">
          <source>For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</source>
          <target state="translated">예를 들어, 소수점 두 자리로 반올림하면 2.345는 2.34가 되고 2.355는 2.36이 됩니다.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Double)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 16비트 부호 있는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Int16)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Int16)">
          <source>The following example converts each element in an array of 16-bit integers to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 변환에 16 비트 정수 배열에서 각 요소는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 32비트 부호 있는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Int32)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Int32)">
          <source>The following example converts each element in an integer array to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 변환에 정수 배열의 각 요소에에서는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 64비트 부호 있는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Int64)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Int64)">
          <source>The following example converts each element in an array of long integers to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">정수 (long) 배열에서 각 요소를 변환 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object)">
          <source>Converts the value of the specified object to a single-precision floating-point number.</source>
          <target state="translated">지정된 개체의 값을 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Object)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Object)">
          <source>The following example attempts to convert each element in an object array to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 개체 배열의 각 요소를 변환 하는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 8비트 부호 있는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.SByte)">
          <source>An 8-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.SByte)">
          <source>The following example converts each element in a signed byte array to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 변환에 부호 있는 바이트 배열의 각 요소에에서는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Single)">
          <source>The single-precision floating-point number to return.</source>
          <target state="translated">반환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Single)">
          <source>Returns the specified single-precision floating-point number; no actual conversion is performed.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String)">
          <source>Converts the specified string representation of a number to an equivalent single-precision floating-point number.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String)">
          <source>A single-precision floating-point number that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 단정밀도 부동 소수점 숫자이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String)">
          <source><ph id="ph1">`value`</ph> is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 현재 스레드 문화권의 서식 지정 규칙을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Single.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Single.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String)">
          <source>The following example attempts to convert each element in an array of numeric strings to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 숫자 문자열의 배열에서 각 요소를 변환 하는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 유효한 형식의 숫자가 아닙니다.</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 16비트 부호 없는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.UInt16)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.UInt16)">
          <source>The following example converts each element in an array of unsigned 16-bit integers to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 변환에 16 비트 부호 없는 정수 배열의 각 요소는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 32비트 부호 없는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.UInt32)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.UInt32)">
          <source>The following example converts each element in an array of unsigned integers to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">부호 없는 정수 배열의 각 요소를 변환 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.</source>
          <target state="translated">지정된 64비트 부호 없는 정수 값을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.UInt64)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.UInt64)">
          <source>The following example converts each element in an array of unsigned long integers to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">부호 없는 정수 (long) 배열에서 각 요소를 변환 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source>A single-precision floating-point number that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 단정밀도 부동 소수점 숫자이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source>For example, if <ph id="ph1">`value`</ph> is a <ph id="ph2">&lt;xref:System.String&gt;</ph> that represents a number, <ph id="ph3">`provider`</ph> could supply culture-specific information about the notation used to represent that number.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`value`</ph> 는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 숫자를 나타내는 <ph id="ph3">`provider`</ph> 해당 숫자를 나타내는 데 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> class that implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Temperature`</ph> 인터페이스를 구현하는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source>Its implementation of the <ph id="ph1">&lt;xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType&gt;</ph> method returns the internal value of a private <ph id="ph2">&lt;xref:System.Single&gt;</ph> variable that represents the temperature.</source>
          <target state="translated">구현에서 <ph id="ph1">&lt;xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType&gt;</ph> 개인의 내부 값을 반환 하는 메서드 <ph id="ph2">&lt;xref:System.Single&gt;</ph> 변수 온도 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source>The following example illustrates how a call to the <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method, in turn, calls the <ph id="ph2">&lt;xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType&gt;</ph> implementation of the <ph id="ph3">`Temperature`</ph> class.</source>
          <target state="translated">다음 예제는 방법에 대 한 호출에서 <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드를 호출 하는 <ph id="ph2">&lt;xref:System.IConvertible.ToSingle%2A?displayProperty=nameWithType&gt;</ph> 구현의 <ph id="ph3">`Temperature`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph>을 구현하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 단정밀도 부동 소수점 숫자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source>A single-precision floating-point number that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 단정밀도 부동 소수점 숫자이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.Single.Parse%2A?displayProperty=nameWithType&gt;</ph> method on <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.Single.Parse%2A?displayProperty=nameWithType&gt;</ph> 메서드를 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 culture가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.Single.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Single.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source>The following example uses <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> objects that represent the en-US and fr-FR cultures when it converts the elements in an array of numeric strings to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 숫자 문자열의 배열에서 요소를 변환 하는 경우 EN-US 및 FR-FR 문화권을 나타내는 개체를 <ph id="ph2">&lt;xref:System.Single&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 유효한 형식의 숫자가 아닙니다.</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" uid="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts the specified value to its equivalent string representation.</source>
          <target state="translated">지정된 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Boolean)">
          <source>Converts the specified Boolean value to its equivalent string representation.</source>
          <target state="translated">지정된 부울 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Boolean)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Boolean)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Boolean)">
          <source>It returns <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`true`</ph> values and <ph id="ph3">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph> for <ph id="ph4">`false`</ph> values.</source>
          <target state="translated">반환 <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> 에 대 한 <ph id="ph2">`true`</ph> 값 및 <ph id="ph3">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph> 에 대 한 <ph id="ph4">`false`</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Boolean)">
          <source>The following example illustrates the conversion of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> to a <ph id="ph2">&lt;xref:System.String&gt;</ph>, using <ph id="ph3">`ToString`</ph>.</source>
          <target state="translated">다음 예제에서는 변환은 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 에 <ph id="ph2">&lt;xref:System.String&gt;</ph>를 사용 하 여 <ph id="ph3">`ToString`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Boolean)">
          <source>It also illustrates that the string returned by the conversion equals either <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">또한 변환에 의해 반환 된 문자열 중 하나 같다는에서는 <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.</source>
          <target state="translated">지정된 8비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Byte)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Byte.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Byte.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Byte)">
          <source>The following example converts each value in a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array to a string.</source>
          <target state="translated">각 값을 변환 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Byte&gt;</ph> 배열을 문자열로 합니다.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Char)">
          <source>Converts the value of the specified Unicode character to its equivalent string representation.</source>
          <target state="translated">지정된 유니코드 문자의 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Char)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Char)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Char.ToString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Char.ToString%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Char)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Char&gt;</ph> to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 에 <ph id="ph2">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.DateTime)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> to its equivalent string representation.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>의 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.DateTime)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.DateTime)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.DateTime.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.DateTime.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.DateTime)">
          <source>It uses the formatting conventions of the current culture and the "G" format specifier to convert a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value to its string representation.</source>
          <target state="translated">"G" 형식 지정자 및 현재 문화권의 서식 지정 규칙을 사용 하 여 변환 하는 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 값을 해당 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.DateTime)">
          <source>The following example converts each element in an array of a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value to a <ph id="ph2">&lt;xref:System.String&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환는 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.String&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Decimal)">
          <source>Converts the value of the specified decimal number to its equivalent string representation.</source>
          <target state="translated">지정된 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Decimal)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Decimal)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Decimal.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Decimal.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Decimal)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 에 <ph id="ph2">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to its equivalent string representation.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Double)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Double)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Double.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Double.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Double)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Double&gt;</ph> to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 에 <ph id="ph2">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to its equivalent string representation.</source>
          <target state="translated">지정된 16비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Int16.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Int16.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16)">
          <source>The following example converts each element in an array of 16-bit integers to its equivalent string representation.</source>
          <target state="translated">다음 예제에서는 해당 문자열 표현으로 각 요소에 16 비트 정수 배열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to its equivalent string representation.</source>
          <target state="translated">지정된 32비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Int32.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Int32.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32)">
          <source>It formats <ph id="ph1">`value`</ph> by using the formatting conventions of the current thread culture.</source>
          <target state="translated">서식을 <ph id="ph1">`value`</ph> 현재 스레드 문화권의 형식 규칙을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32)">
          <source>The following example compares the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int32%29&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 비교는 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int32%29&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32)">
          <source>It defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that uses the sting "minus" to represent the negative sign.</source>
          <target state="translated">사용자 지정 정의 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 음수 기호를 나타내기 위해 "빼기" 문자열을 사용 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32)">
          <source>It converts each element in an integer array to its equivalent string representation using default formatting (the formatting conventions of the current culture) and the custom format provider.</source>
          <target state="translated">기본 서식 지정 (현재 문화권의 서식 지정 규칙) 및 사용자 지정 형식 공급자를 사용 하 여 해당 문자열 표현 정수 배열의 각 요소를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to its equivalent string representation.</source>
          <target state="translated">지정된 64비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Int64.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Int64.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64)">
          <source>The following example converts each element in a long integer array to its equivalent string representation.</source>
          <target state="translated">정수 (long) 배열의 각 요소에에서 해당 하는 문자열 표현으로 변환 하는 다음 예제에서는 합니다.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Object)">
          <source>An object that supplies the value to convert, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">변환할 값을 제공하는 개체나 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Object)">
          <source>Converts the value of the specified object to its equivalent string representation.</source>
          <target state="translated">지정된 개체의 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Object)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> if <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="value" /&gt;</ph>이 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> 값의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object)">
          <source>To convert <ph id="ph1">`value`</ph> to its string representation, the method tries to call the <ph id="ph2">&lt;xref:System.IConvertible.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">변환할 <ph id="ph1">`value`</ph> 문자열 표현으로 메서드를 호출 하려고는 <ph id="ph2">&lt;xref:System.IConvertible.ToString%2A?displayProperty=nameWithType&gt;</ph> 구현의 <ph id="ph3">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object)">
          <source>If <ph id="ph1">`value`</ph> does not implement the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface, the method tries to call the <ph id="ph3">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation of <ph id="ph4">`value`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 를 구현 하지 않습니다는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스, 메서드 호출 하려고는 <ph id="ph3">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> 구현의 <ph id="ph4">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object)">
          <source>If value does not implement the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, the method calls the <ph id="ph2">`ToString`</ph> method of the underlying type of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">값을 구현 하지 않는 경우는 <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> 인터페이스, 메서드 호출의 <ph id="ph2">`ToString`</ph> 의 기본 형식의 메서드 <ph id="ph3">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object)">
          <source>The following example converts each element in an object array to its equivalent string representation.</source>
          <target state="translated">다음 예제에서는 해당 문자열 표현으로 개체 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to its equivalent string representation.</source>
          <target state="translated">지정된 8비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.SByte)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.SByte)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.SByte.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.SByte.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.SByte)">
          <source>The following example converts each element in a signed byte array to its equivalent string representation.</source>
          <target state="translated">부호 있는 바이트 배열의 각 요소에에서 해당 하는 문자열 표현으로 변환 하는 다음 예제에서는 합니다.</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to its equivalent string representation.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Single)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Single)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Single.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Single.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Single)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to its equivalent string representation.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값을 해당 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.String)">
          <source>The string to return.</source>
          <target state="translated">반환할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.String)">
          <source>Returns the specified string instance; no actual conversion is performed.</source>
          <target state="translated">지정된 문자열 인스턴스를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.String)">
          <source>The following example passes a string to the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.String%29&gt;</ph> method and calls the <ph id="ph2">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> method to confirm that the method returns the original string.</source>
          <target state="translated">다음 예제에서는 문자열을 전달는 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.String%29&gt;</ph> 메서드를 호출은 <ph id="ph2">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> 메서드 메서드가 원래 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.String)">
          <source>The example also calls the <ph id="ph1">&lt;xref:System.String.IsInterned%2A?displayProperty=nameWithType&gt;</ph> method to ensure that the two strings are not identical because the original string is interned.</source>
          <target state="translated">이 예에서는 호출 또한는 <ph id="ph1">&lt;xref:System.String.IsInterned%2A?displayProperty=nameWithType&gt;</ph> 메서드를 원래 문자열 내부 풀에 추가 하기 때문에 두 개의 문자열이 동일한 지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.</source>
          <target state="translated">지정된 16비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt16)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt16)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.UInt16.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.UInt16.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt16)">
          <source>The following example converts each element in an array of unsigned 16-bit integer values to its equivalent string representation.</source>
          <target state="translated">부호 없는 16 비트 정수 값의 배열에서 각 요소를 해당 문자열 표현으로 변환 하는 다음 예제에서는 합니다.</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.</source>
          <target state="translated">지정된 32비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt32)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt32)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.UInt32.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.UInt32.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt32)">
          <source>The following example converts each element in an unsigned integer array to its equivalent string representation.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 배열의 각 요소에에서 해당 하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.</source>
          <target state="translated">지정된 64비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt64)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt64)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.UInt64.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.UInt64.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt64)">
          <source>The following example converts each element in an unsigned long integer array to its equivalent string representation.</source>
          <target state="translated">부호 없는 정수 (long) 배열의 각 요소에에서 해당 하는 문자열 표현으로 변환 하는 다음 예제에서는 합니다.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
          <source>An instance of an object.</source>
          <target state="translated">개체의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
          <source>Converts the specified Boolean value to its equivalent string representation.</source>
          <target state="translated">지정된 부울 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
          <source>It returns <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`true`</ph> values and <ph id="ph3">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph> for <ph id="ph4">`false`</ph> values.</source>
          <target state="translated">반환 <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> 에 대 한 <ph id="ph2">`true`</ph> 값 및 <ph id="ph3">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph> 에 대 한 <ph id="ph4">`false`</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value to a <ph id="ph2">&lt;xref:System.String&gt;</ph> with the <ph id="ph3">`ToString`</ph> method, using an <ph id="ph4">&lt;xref:System.IFormatProvider&gt;</ph> object that displays the type of the format provider for which it is called.</source>
          <target state="translated">다음 예제에서는 변환는 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.String&gt;</ph> 와 <ph id="ph3">`ToString`</ph> 메서드를 사용 하 여는 <ph id="ph4">&lt;xref:System.IFormatProvider&gt;</ph> 호출 하는 형식 공급자의 유형을 표시 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
          <source>The example shows that the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object is not referenced.</source>
          <target state="translated">예제는 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 개체 참조 되지 않은 합니다.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
          <source>Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 8비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Byte.ToString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Byte.ToString%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
          <source>The following example converts each element in an unsigned byte array to its equivalent string representation using the formatting conventions of the en-US and fr-FR cultures.</source>
          <target state="translated">다음 예제에서는 EN-US 및 FR-FR 문화권의 서식 지정 규칙을 사용 하 여 해당 문자열 표현에 부호 없는 바이트 배열의 각 요소를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
          <source>Because the "G" specifier by default outputs only decimal digits in a byte value's string representation, the <ph id="ph1">`provider`</ph> parameter does not affect the formatting of the returned string.</source>
          <target state="translated">기본적으로 "G" 지정자 진수 바이트 값의 문자열 표현에만 출력 하기 때문에 <ph id="ph1">`provider`</ph> 매개 변수는 반환 된 문자열의 서식을 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte,System.Int32)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte,System.Int32)">
          <source>The base of the return value, which must be 2, 8, 10, or 16.</source>
          <target state="translated">반환 값의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte,System.Int32)">
          <source>Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.</source>
          <target state="translated">8비트 부호 없는 정수의 값을 특정 기수의 해당 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte,System.Int32)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in base <ph id="ph2">&lt;paramref name="toBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 기수를 사용한 <ph id="ph2">&lt;paramref name="toBase" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Byte,System.Int32)">
          <source>If <ph id="ph1">`toBase`</ph> does not equal 10, the string that is returned by the <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method represents <ph id="ph3">`value`</ph> by its magnitude only.</source>
          <target state="translated">경우 <ph id="ph1">`toBase`</ph> 10, 문자열에서 반환 되는 같지 않습니다는 <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드가 <ph id="ph3">`value`</ph> 은 크기에 합니다.</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Byte,System.Int32)">
          <source>If the method is called to create a string that will later be converted back to a number, a corresponding method that assumes a magnitude-only numeric representation should be called to perform the conversion.</source>
          <target state="translated">나중에 다시을 숫자로 변환 되는 문자열을 만듭니다는 메서드를 호출 하는 경우 변환을 수행 하기 크기만 숫자 표현을 나타내는 해당 메서드를 호출 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Byte,System.Int32)">
          <source>Such methods include <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이러한 메서드에 <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Byte,System.Int32)">
          <source>The following example converts each element in a byte array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</source>
          <target state="translated">다음 예제에서는 바이트 배열의 각 요소에에서 해당 이진, 16 진수, 10 진수 및 16 진수 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Byte,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="toBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
          <source>Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 유니코드 문자의 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Char.ToString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Char.ToString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is ignored.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value to a <ph id="ph2">&lt;xref:System.String&gt;</ph> with the <ph id="ph3">`ToString`</ph> method, using an <ph id="ph4">&lt;xref:System.IFormatProvider&gt;</ph> object that displays the type of the format provider for which it is called.</source>
          <target state="translated">다음 예제에서는 변환는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값을 한 <ph id="ph2">&lt;xref:System.String&gt;</ph> 와 <ph id="ph3">`ToString`</ph> 메서드를 사용 하 여는 <ph id="ph4">&lt;xref:System.IFormatProvider&gt;</ph> 호출 하는 형식 공급자의 유형을 표시 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
          <source>The example shows that the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> object is not referenced.</source>
          <target state="translated">예제는 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 개체 참조 되지 않은 합니다.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>의 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
          <source>The following example converts a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value to its equivalent string representation in eight different cultures.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 값 8 개의 서로 다른 문화권에 해당 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
          <source>Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 10진수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to its equivalent string representation in four different cultures.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 값을 4 개의 서로 다른 문화권에 해당 하는 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
          <source>Converts the value of the specified double-precision floating-point number to its equivalent string representation.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to its equivalent string representation in four different cultures.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값을 4 개의 서로 다른 문화권에 해당 하는 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
          <source>Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 16비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class that defines its negative sign as the string "~" and its positive sign as the string "!".</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 문자열로 음수 기호를 정의 하는 클래스 "~"및에서는 문자열"!".</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29&gt;</ph> method to convert each element in an array of 16-bit integers to its equivalent string representation.</source>
          <target state="translated">그런 다음 호출 하 여 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int16%2CSystem.IFormatProvider%29&gt;</ph> 16 비트 정수 배열의 각 요소에에서 해당 하는 문자열 표현으로 변환 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
          <source>The conversion uses the invariant culture as well as the custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">고정 문화권 뿐만 아니라 사용자 지정 변환을 사용 하 여 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source>The base of the return value, which must be 2, 8, 10, or 16.</source>
          <target state="translated">반환 값의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source>Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.</source>
          <target state="translated">16비트 부호 있는 정수 값을 지정된 기수의 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in base <ph id="ph2">&lt;paramref name="toBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 기수를 사용한 <ph id="ph2">&lt;paramref name="toBase" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is positive and <ph id="ph2">`toBase`</ph> is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 가 양수 및 <ph id="ph2">`toBase`</ph> 가 2, 8 또는 16, 반환 된 문자열 부호 및 크기 표현을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is negative and <ph id="ph2">`toBase`</ph> is 2, 8, or 16, the returned string uses two's complement representation.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 음수 및 <ph id="ph2">`toBase`</ph> 가 2, 8 또는 16, 반환 된 문자열 2의 보수 표현이 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source>This means that the high-order bit of the high-order byte (bit 15) is interpreted as the sign bit.</source>
          <target state="translated">즉, 상위 바이트 (비트 15)의 상위 비트가 부호 비트로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29&gt;</ph> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int16%2CSystem.Int32%29&gt;</ph> 메서드는 나중에 다시을 숫자로 변환 되는 문자열을 만들려면, 변환을 수행 하려면 비슷한 숫자 표현을 나타내는 해당 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source>Such methods include <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이러한 메서드에 <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source>The following example converts each element in an array of 16-bit signed integers to its equivalent binary, octal, decimal, and hexadecimal string representations.</source>
          <target state="translated">다음 예제에서는 그에 해당 하는 이진, 8 진수, 10 진수 및 16 진수 문자열 표시를 16 비트 부호 있는 정수 배열에 있는 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int16,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="toBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
          <source>Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 32비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class that defines its negative sign as the string "~" and its positive sign as the string "!".</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 문자열로 음수 기호를 정의 하는 클래스 "~"및에서는 문자열"!".</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29&gt;</ph> method to convert each element in an array of integers to its equivalent string representation.</source>
          <target state="translated">그런 다음 호출 하 여 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int32%2CSystem.IFormatProvider%29&gt;</ph> 정수 배열의 각 요소에에서 해당 하는 문자열 표현으로 변환 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
          <source>The conversion uses the invariant culture as well as the custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">고정 문화권 뿐만 아니라 사용자 지정 변환을 사용 하 여 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source>The base of the return value, which must be 2, 8, 10, or 16.</source>
          <target state="translated">반환 값의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source>Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.</source>
          <target state="translated">32비트 부호 있는 정수 값을 지정된 기수의 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in base <ph id="ph2">&lt;paramref name="toBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 기수를 사용한 <ph id="ph2">&lt;paramref name="toBase" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is positive and <ph id="ph2">`toBase`</ph> is 2, 8, or 16, the returned string uses sign-and-magnitude representation.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 가 양수 및 <ph id="ph2">`toBase`</ph> 가 2, 8 또는 16, 반환 된 문자열 부호 및 크기 표현을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is negative and <ph id="ph2">`toBase`</ph> is 2, 8, or 16, the returned string uses two's complement representation.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 음수 및 <ph id="ph2">`toBase`</ph> 가 2, 8 또는 16, 반환 된 문자열 2의 보수 표현이 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source>This means that the high-order bit of the highest-order byte (bit 31) is interpreted as the sign bit.</source>
          <target state="translated">즉, 최상위 바이트 (31 비트)의 상위 비트가 부호 비트로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29&gt;</ph> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29&gt;</ph> 메서드는 나중에 다시을 숫자로 변환 되는 문자열을 만들려면, 변환을 수행 하려면 비슷한 숫자 표현을 나타내는 해당 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source>Such methods include <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이러한 메서드에 <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source>The following example converts each element in an integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</source>
          <target state="translated">다음 예제에서는 해당 이진, 16 진수, 10 진수 및 16 진수 문자열 표현으로 정수 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="toBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
          <source>Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 64비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class that defines its negative sign as the string "~" and its positive sign as the string "!".</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 문자열로 음수 기호를 정의 하는 클래스 "~"및에서는 문자열"!".</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29&gt;</ph> method to convert each element in a long integer array to its equivalent string representation.</source>
          <target state="translated">그런 다음 호출 하 여 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int64%2CSystem.IFormatProvider%29&gt;</ph> 정수 (long) 배열의 각 요소에에서 해당 하는 문자열 표현으로 변환 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
          <source>The conversion uses the invariant culture as well as the custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">고정 문화권 뿐만 아니라 사용자 지정 변환을 사용 하 여 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source>The base of the return value, which must be 2, 8, 10, or 16.</source>
          <target state="translated">반환 값의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source>Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.</source>
          <target state="translated">64비트 부호 있는 정수 값을 지정된 기수의 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in base <ph id="ph2">&lt;paramref name="toBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 기수를 사용한 <ph id="ph2">&lt;paramref name="toBase" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is positive and <ph id="ph2">`toBase`</ph> is not 10, the returned string uses sign-and-magnitude representation.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 가 양수 및 <ph id="ph2">`toBase`</ph> 가 10이 아니면 반환 된 문자열 부호 및 크기 표현을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is negative and <ph id="ph2">`toBase`</ph> is not 10, the returned string uses two's complement representation.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 음수 및 <ph id="ph2">`toBase`</ph> 가 10이 아니면 반환 된 문자열 2의 보수 표현이 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source>This means that the high-order bit of the highest-order byte (bit 63) is interpreted as the sign bit.</source>
          <target state="translated">즉, 최상위 바이트 (63 비트)의 상위 비트가 부호 비트로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29&gt;</ph> method is called to create a string that will later be converted back to a number, a corresponding method that assumes a similar numeric representation should be called to perform the conversion.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29&gt;</ph> 메서드는 나중에 다시을 숫자로 변환 되는 문자열을 만들려면, 변환을 수행 하려면 비슷한 숫자 표현을 나타내는 해당 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source>Such methods include <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이러한 메서드에 <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source>The following example converts each element in a long integer array to its equivalent binary, hexadecimal, decimal, and hexadecimal string representations.</source>
          <target state="translated">다음 예제에서는 정수 (long) 배열의 각 요소에에서 해당 이진, 16 진수, 10 진수 및 16 진수 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Int64,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="toBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>An object that supplies the value to convert, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">변환할 값을 제공하는 개체나 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> if <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is an object whose value is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 값이 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 개체인 경우 문자열 표시가 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 또는 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, the method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이면 메서드에서 <ph id="ph3">&lt;see langword="null" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>If the <ph id="ph1">`value`</ph> parameter implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface, the method calls the <ph id="ph3">&lt;xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> implementation of <ph id="ph4">`value`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`value`</ph> 매개 변수를 구현 하는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스, 메서드 호출의 <ph id="ph3">&lt;xref:System.IConvertible.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 구현의 <ph id="ph4">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>Otherwise, if the <ph id="ph1">`value`</ph> parameter implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface, the method calls its <ph id="ph3">&lt;xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">`value`</ph> 매개 변수를 구현 하는 <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> 인터페이스, 메서드 호출의 <ph id="ph3">&lt;xref:System.IFormattable.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> implements neither interface, the method calls the <ph id="ph2">`value`</ph> parameter's <ph id="ph3">`ToString()`</ph> method, and the <ph id="ph4">`provider`</ph> parameter is ignored.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 메서드를 호출 하 여 두 인터페이스를 구현 하는 <ph id="ph2">`value`</ph> 매개 변수의 <ph id="ph3">`ToString()`</ph> 메서드, 및 <ph id="ph4">`provider`</ph> 매개 변수가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is used if the <ph id="ph2">`value`</ph> parameter implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> or <ph id="ph4">&lt;xref:System.IFormattable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 경우 매개 변수는 사용 된 <ph id="ph2">`value`</ph> 매개 변수를 구현 하는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.IFormattable&gt;</ph> 인터페이스.</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>The most common use of the <ph id="ph1">`provider`</ph> parameter is to specify culture-specific information used in the conversion of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">가장 일반적인 용도 <ph id="ph1">`provider`</ph> 의 변환에 사용 되는 문화권별 정보를 지정 하는 매개 변수 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>For example, if the <ph id="ph1">`value`</ph> parameter is a negative decimal number, the <ph id="ph2">`provider`</ph> parameter can supply culture-specific information about the notation used for the negative sign and decimal separator.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">`value`</ph> 매개 변수는 음의 10 진수는 <ph id="ph2">`provider`</ph> 매개 변수는 음수 기호 및 소수 구분 기호에 대해 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>The second example in the next section illustrates a format provider that does not supply culture-sensitive formatting information.</source>
          <target state="translated">다음 섹션의 두 번째 예제에서는 문화권 구분 서식 지정 정보를 제공 하지 않는 하는 형식 공급자를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> class that overrides the <ph id="ph2">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> method but does not implement the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 정의 <ph id="ph1">`Temperature`</ph> 재정의 하는 클래스는 <ph id="ph2">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드 하지만 구현 하지 않습니다는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>The example illustrates how calls to the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method, in turn, call the <ph id="ph2">`Temperature.ToString`</ph> method.</source>
          <target state="translated">예제 방법에 대 한 호출이 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 메서드를 호출 하는 <ph id="ph2">`Temperature.ToString`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> class that implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface but does not implement the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 정의 <ph id="ph1">`Temperature`</ph> 구현 하는 클래스는 <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> 인터페이스 하지만 구현 하지 않습니다는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> implementation represents the <ph id="ph2">`Temperature`</ph> value in Celsius, Fahrenheit, or Kelvin, depending on the format  string.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> 구현은 <ph id="ph2">`Temperature`</ph> 형식 문자열에 따라 섭씨, 화씨, 또는 켈빈에 값입니다.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
          <source>The example also defines a <ph id="ph1">`TemperatureProvider`</ph> class that implements <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> and provides a randomly generated format string that is used by the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> implementation of the <ph id="ph4">`Temperature`</ph> class.</source>
          <target state="translated">이 예제에서는 또한 정의 <ph id="ph1">`TemperatureProvider`</ph> 구현 하는 클래스 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 에서 사용 되는 임의로 생성 된 서식 문자열을 제공 하 고는 <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> 구현의 <ph id="ph4">`Temperature`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
          <source>Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 8비트 부호 있는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class that defines its negative sign as the string "~" and its positive sign as the string "!".</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 문자열로 음수 기호를 정의 하는 클래스 "~"및에서는 문자열"!".</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to convert each element in signed byte array to its equivalent string representation.</source>
          <target state="translated">그런 다음 호출 하는 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.SByte%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 부호 있는 바이트 배열의 각 요소에에서 해당 하는 문자열 표현으로 변환 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
          <source>The conversion uses the invariant culture as well as the custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">고정 문화권 뿐만 아니라 사용자 지정 변환을 사용 하 여 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
          <source>Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 단정밀도 부동 소수점 숫자 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.Single.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to its equivalent string representation in four different cultures.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 값을 4 개의 서로 다른 문화권에 해당 하는 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.String,System.IFormatProvider)">
          <source>The string to return.</source>
          <target state="translated">반환할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.String,System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">이 매개 변수는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.String,System.IFormatProvider)">
          <source>Returns the specified string instance; no actual conversion is performed.</source>
          <target state="translated">지정된 문자열 인스턴스를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.String,System.IFormatProvider)">
          <source>The following example calls the <ph id="ph1">`ToString`</ph> method with a <ph id="ph2">&lt;xref:System.String&gt;</ph> parameter.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`ToString`</ph> 메서드는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.String,System.IFormatProvider)">
          <source>The method returns the unmodified <ph id="ph1">&lt;xref:System.String&gt;</ph> without referencing the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> object.</source>
          <target state="translated">메서드는 수정 되지 않은 반환 <ph id="ph1">&lt;xref:System.String&gt;</ph> 참조 하지 않고는 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
          <source>Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 16비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class that defines its negative sign as the string "~" and its positive sign as the string "!".</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 문자열로 음수 기호를 정의 하는 클래스 "~"및에서는 문자열"!".</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29&gt;</ph> method to convert a 16-bit unsigned integer value to its equivalent string representation.</source>
          <target state="translated">그런 다음 호출 하는 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.UInt16%2CSystem.IFormatProvider%29&gt;</ph> 16 비트 부호 없는 정수 값을 해당 문자열 표현으로 변환 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
          <source>The conversion uses both the invariant culture and the custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">고정 문화권 및 사용자 지정을 모두를 사용 하는 변환 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
          <source>The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</source>
          <target state="translated">출력에 "G" 형식 지정자 기본적으로 양수 값을 갖는 양수 부호를 포함 하지 않기 때문에이 형식 지정 정보를 사용 하지 않으면 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
          <source>Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 32비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.UInt32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class that defines its negative sign as the string "~" and its positive sign as the string "!".</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 문자열로 음수 기호를 정의 하는 클래스 "~"및에서는 문자열"!".</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29&gt;</ph> method to convert an unsigned integer value to its equivalent string representation.</source>
          <target state="translated">그런 다음 호출 하는 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.UInt32%2CSystem.IFormatProvider%29&gt;</ph> 메서드를 부호 없는 정수 값을 해당 하는 문자열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
          <source>The conversion uses both the invariant culture and the custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">고정 문화권 및 사용자 지정을 모두를 사용 하는 변환 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
          <source>The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</source>
          <target state="translated">출력에 "G" 형식 지정자 기본적으로 양수 값을 갖는 양수 부호를 포함 하지 않기 때문에이 형식 지정 정보를 사용 하지 않으면 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
          <source>Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 64비트 부호 없는 정수 값을 해당하는 문자열 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" uid="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
          <source>The string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
          <source>This implementation is identical to <ph id="ph1">&lt;xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현은 <ph id="ph1">&lt;xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class that defines its negative sign as the string "~" and its positive sign as the string "!".</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 문자열로 음수 기호를 정의 하는 클래스 "~"및에서는 문자열"!".</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29&gt;</ph> method to convert an unsigned long integer value to its equivalent string representation.</source>
          <target state="translated">그런 다음 호출 하는 <ph id="ph1">&lt;xref:System.Convert.ToString%28System.UInt64%2CSystem.IFormatProvider%29&gt;</ph> 메서드를 부호 없는 정수 (long) 값을 해당 하는 문자열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
          <source>The conversion uses both the invariant culture and the custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">고정 문화권 및 사용자 지정을 모두를 사용 하는 변환 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
          <source>The output indicates that this formatting information is not used, because by default the "G" format specifier does not include a positive sign with positive values.</source>
          <target state="translated">출력에 "G" 형식 지정자 기본적으로 양수 값을 갖는 양수 부호를 포함 하지 않기 때문에이 형식 지정 정보를 사용 하지 않으면 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a 16-bit unsigned integer.</source>
          <target state="translated">지정된 값을 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 부울 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Boolean)">
          <source>The following example converts the Boolean values <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph> to unsigned 16-bit integers.</source>
          <target state="translated">다음 예에서는 부울 값을 변환 <ph id="ph1">`true`</ph> 및 <ph id="ph2">`false`</ph> 부호 없는 16 비트 정수에 있습니다.</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Byte)">
          <source>A 16-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Byte)">
          <source>The following example converts each element in a byte array to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 바이트 배열의 각 요소에에서 부호 없는 16 비트 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Char)">
          <source>Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 유니코드 문자의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Char)">
          <source>The 16-bit unsigned integer equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Char)">
          <source>The following example converts each element in a character array to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 문자 배열의 각 요소에에서 부호 없는 16 비트 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 10진수 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 16-bit unsigned integer.</source>
          <target state="translated">가장 가까운 16비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Decimal)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 는 부호 없는 16 비트 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 16-bit unsigned integer.</source>
          <target state="translated">가장 가까운 16비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Double)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 는 부호 없는 16 비트 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int16)">
          <source>A 16-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Int16)">
          <source>The following example attempts to convert each element in a 16-bit integer array to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 16 비트 정수를 16 비트 정수 배열에 있는 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int32)">
          <source>A 16-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Int32)">
          <source>The following example converts each element in an integer array to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 정수 배열의 각 요소에에서 부호 없는 16 비트 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 64비트 부호 있는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int64)">
          <source>A 16-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Int64)">
          <source>The following example converts each element in a long integer array to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 정수 (long) 배열의 각 요소에에서 부호 없는 16 비트 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object)">
          <source>Converts the value of the specified object to a 16-bit unsigned integer.</source>
          <target state="translated">지정된 개체의 값을 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object)">
          <source>A 16-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Object)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Object)">
          <source>The following example attempts to convert each element in an object array to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 16 비트 정수로 개체 배열의 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the  <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.SByte)">
          <source>A 16-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.SByte)">
          <source>The following example converts each element in a signed byte array to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트 배열의 각 요소에에서 부호 없는 16 비트 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.SByte)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 16-bit unsigned integer.</source>
          <target state="translated">가장 가까운 16비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Single)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Single)">
          <source>The following example converts each element in an array of <ph id="ph1">&lt;xref:System.String&gt;</ph> values to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 <ph id="ph1">&lt;xref:System.String&gt;</ph> 는 부호 없는 16 비트 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String)">
          <source>Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String)">
          <source>A 16-bit unsigned integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 16비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.UInt16.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String)">
          <source><ph id="ph1">`value`</ph> is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 현재 스레드 문화권의 서식 지정 규칙을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.UInt16.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.UInt16.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String)">
          <source>The following example attempts to convert each element in a numeric string array to a 16-bit unsigned integer.</source>
          <target state="translated">다음 예에서는 숫자 문자열 배열의 각 요소에에서 16 비트 부호 없는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt16)">
          <source>The 16-bit unsigned integer to return.</source>
          <target state="translated">반환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt16)">
          <source>Returns the specified 16-bit unsigned integer; no actual conversion is performed.</source>
          <target state="translated">지정된 16비트 부호 없는 정수를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 32비트 부호 없는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt32)">
          <source>A 16-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.UInt32)">
          <source>The following example attempts to convert each element in an array of unsigned integers to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 16 비트 정수를 부호 없는 정수 배열의 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 64비트 부호 없는 정수의 값을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt64)">
          <source>A 16-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.UInt64)">
          <source>The following example attempts to convert each element in an array of unsigned long integers to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 16 비트 정수를 부호 없는 정수 (long) 배열에서 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>A 16-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 16비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>For example, if <ph id="ph1">`value`</ph> is a <ph id="ph2">&lt;xref:System.String&gt;</ph> that represents a number, <ph id="ph3">`provider`</ph> could supply culture-specific information about the notation used to represent that number.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`value`</ph> 는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 숫자를 나타내는 <ph id="ph3">`provider`</ph> 해당 숫자를 나타내는 데 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>The following example defines a <ph id="ph1">`HexString`</ph> class that implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface and that is designed to hold the string representation of both 16-bit signed and 16-bit unsigned values.</source>
          <target state="translated">다음 예제에서는 정의 <ph id="ph1">`HexString`</ph> 구현 하는 클래스는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스 고 설계 된 두 16 비트 부호 있는 정수와 16 비트 부호 없는 값의 문자열 표시를 보유 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>The class includes a <ph id="ph1">`Sign`</ph> property that indicates the sign of its hexadecimal value.</source>
          <target state="translated">클래스를 포함 한 <ph id="ph1">`Sign`</ph> 16 진수 값의 부호를 나타내는 속성입니다.</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>The following example shows that a call to the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> method that passes a <ph id="ph2">`HexString`</ph> object as a parameter, in turn, calls the <ph id="ph3">&lt;xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> implementation of the <ph id="ph4">`HexString`</ph> class.</source>
          <target state="translated">다음 예제에 대 한 호출에서는 <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> 전달 하는 메서드는 <ph id="ph2">`HexString`</ph> 개체를 매개 변수로 호출 하는 <ph id="ph3">&lt;xref:System.IConvertible.ToUInt16%2A?displayProperty=nameWithType&gt;</ph> 구현의 <ph id="ph4">`HexString`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the  <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>A 16-bit unsigned integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 16비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>The return value is the result of invoking <ph id="ph1">&lt;xref:System.UInt16.Parse%2A?displayProperty=nameWithType&gt;</ph> on <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.UInt16.Parse%2A?displayProperty=nameWithType&gt;</ph> 에 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 culture가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.UInt16.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.UInt16.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 양수 기호와 음수 기호 "neg" 문자열을 문자열 "po"를 인식 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source>It then attempts to convert each element of a numeric string array to an integer using both this provider and the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> provider for the invariant culture.</source>
          <target state="translated">숫자 문자열 배열의 각 요소를 모두이 공급자를 사용 하 여 정수로 변환 하려고 시도 합니다 및 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 고정 문화권에 대 한 공급자입니다.</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>The base of the number in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, which must be 2, 8, 10, or 16.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>에 지정된 숫자의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.</source>
          <target state="translated">지정된 기수로 나타낸 숫자의 문자열 표현을 해당하는 16비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>A 16-bit unsigned integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 16비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>If <ph id="ph1">`fromBase`</ph> is 16, you can prefix the number specified by the <ph id="ph2">`value`</ph> parameter with "0x" or "0X".</source>
          <target state="translated">경우 <ph id="ph1">`fromBase`</ph> 는 16에 지정 된 접두사로 사용할 수 있습니다는 <ph id="ph2">`value`</ph> "0x" 또는 "0x"로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> data type supports unsigned values only, the <ph id="ph2">&lt;xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29&gt;</ph> method assumes that <ph id="ph3">`value`</ph> is expressed using unsigned binary representation.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> 데이터 형식이 부호 없는 값만을 지원 하는지는 <ph id="ph2">&lt;xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29&gt;</ph> 메서드 있다고 가정 <ph id="ph3">`value`</ph> 은 서명 되지 않은 이진 표현을 사용 하 여 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>In other words, all 16 bits are used to represent the numeric value, and a sign bit is absent.</source>
          <target state="translated">즉, 모든 16 비트 숫자 값을 나타내는 데 사용 되며 및 부호 비트가 없음.</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>As a result, it is possible to write code in which a signed integer value that is out of the range of the <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> data type is converted to a <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> value without the method throwing an exception.</source>
          <target state="translated">결과적으로, 잘못의 범위를 벗어난 코드는 부호 있는 정수 값을 작성 하는 <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> 데이터 형식을 변환할는 <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> 메서드에서 예외를 throw 하지 않고 값입니다.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Int16.MinValue?displayProperty=nameWithType&gt;</ph> to its hexadecimal string representation, and then calls the <ph id="ph2">&lt;xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 변환 <ph id="ph1">&lt;xref:System.Int16.MinValue?displayProperty=nameWithType&gt;</ph> 해당 16 진수 문자열 표현으로 변환한 다음 호출 하 여 <ph id="ph2">&lt;xref:System.Convert.ToUInt16%28System.String%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>Instead of throwing an exception, the method displays the message, "0x8000 converts to 32768."</source>
          <target state="translated">메서드는 예외를 throw 하는 대신 메시지를 표시 "32768 0x8000 변환 합니다."</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</source>
          <target state="translated">이항 연산 또는 숫자 변환을 수행할 때 항상 특정 값을 해석 하는 메서드 또는 연산자에서 적절 한 숫자 표현을 사용가 있는지 확인 하려면 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 메서드를 16 진수 문자열로 변환 하는 경우 2의 보수 표현을 사용 하는 값을 해석 하으로 이진 표현의 잘못 사용 되지 않는 한 가지 기술은 <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</source>
          <target state="translated">이 예제에서는 값을 나타내는지 부호 있는 또는 부호 없는 정수 값을 문자열 표현으로 변환 하는 동안 결정 합니다.</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>When the example converts the value to a <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> value, it checks whether the original value was a signed integer.</source>
          <target state="translated">이 예제에서는 값을 변환 하는 경우는 <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> 원래 값이 부호 있는 정수 여부를 확인 값입니다.</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</source>
          <target state="translated">따라서, 있으며 (원래 값이 음수를 나타냄)의 상위 비트가 설정 되 면 메서드가 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned 16-bit integer.</source>
          <target state="translated">다음 예제에서는 16 진수 값으로 숫자 문자열의 배열에서 각 요소를 해석 하 고 부호 없는 16 비트 정수로 변환할 시도 합니다.</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="translated">밑수가 10이 아닌 부호 없는 숫자를 나타내고 음수 기호가 앞에 붙는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> contains a character that is not a valid digit in the base specified by <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>에 지정된 밑에서 유효한 숫자가 아닌 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>The exception message indicates that there are no digits to convert if the first character in <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is invalid; otherwise, the message indicates that <ph id="ph2">&lt;paramref name="value" /&gt;</ph> contains invalid trailing characters.</source>
          <target state="translated">예외 메시지는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 첫 문자가 유효하지 않은 경우 변환할 숫자가 없음을 나타내고, 유효한 경우 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>에 잘못된 후행 문자가 있다고 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="translated">밑수가 10이 아닌 부호 없는 숫자를 나타내고 음수 기호가 앞에 붙는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt16(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a 32-bit unsigned integer.</source>
          <target state="translated">지정된 값을 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 부울 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Boolean)">
          <source>The following example converts the Boolean values <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph> to unsigned integers.</source>
          <target state="translated">다음 예에서는 부울 값을 변환 <ph id="ph1">`true`</ph> 및 <ph id="ph2">`false`</ph> 부호 없는 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Byte)">
          <source>A 32-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Byte)">
          <source>The following example converts each element in a byte array to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 바이트 배열의 각 요소에에서 부호 없는 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Char)">
          <source>Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 유니코드 문자의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Char)">
          <source>A 32-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Char)">
          <source>The following example converts each element in a character array to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 문자 배열의 각 요소에에서 부호 없는 정수로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 10진수 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 32-bit unsigned integer.</source>
          <target state="translated">가장 가까운 32비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Decimal)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 는 부호 없는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 32-bit unsigned integer.</source>
          <target state="translated">가장 가까운 32비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Double)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 는 부호 없는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int16)">
          <source>A 32-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Int16)">
          <source>The following example attempts to convert each element in a 16-bit integer array to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 16 비트 정수 배열의 각 요소에에서 부호 없는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int32)">
          <source>A 32-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Int32)">
          <source>The following example attempts to convert each element in an integer array to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 정수 배열의 각 요소를 부호 없는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 64비트 부호 있는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int64)">
          <source>A 32-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Int64)">
          <source>The following example attempts to convert each element in a long integer array to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 정수 (long) 배열의 각 요소에에서 부호 없는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object)">
          <source>Converts the value of the specified object to a 32-bit unsigned integer.</source>
          <target state="translated">지정된 개체의 값을 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object)">
          <source>A 32-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Object)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Object)">
          <source>The following example attempts to convert each element in an object array to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 개체 배열의 각 요소를 부호 없는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.SByte)">
          <source>A 32-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.SByte)">
          <source>The following example attempts to convert each element in a signed byte array to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 부호 있는 바이트 배열의 각 요소에에서 부호 없는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.SByte)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 32-bit unsigned integer.</source>
          <target state="translated">가장 가까운 32비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Single)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Single)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 는 부호 없는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String)">
          <source>Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String)">
          <source>A 32-bit unsigned integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 32비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.UInt32.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String)">
          <source><ph id="ph1">`value`</ph> is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 현재 스레드 문화권의 서식 지정 규칙을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.UInt32.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.UInt32.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String)">
          <source>The following example interprets the elements in a string array as numeric strings and attempts to convert them to unsigned integers.</source>
          <target state="translated">다음 예에서는 숫자 문자열로 문자열 배열에서 요소를 해석 하 고 부호 없는 정수로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 16비트 부호 없는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.UInt16)">
          <source>A 32-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.UInt16)">
          <source>The following example converts each element in an unsigned 16-bit integer array to an unsigned integer value.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 값으로 부호 없는 16 비트 정수 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.UInt32)">
          <source>The 32-bit unsigned integer to return.</source>
          <target state="translated">반환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.UInt32)">
          <source>Returns the specified 32-bit unsigned integer; no actual conversion is performed.</source>
          <target state="translated">지정된 32비트 부호 없는 정수를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.UInt64)">
          <source>The 64-bit unsigned integer to convert.</source>
          <target state="translated">변환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.UInt64)">
          <source>Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 64비트 부호 없는 정수의 값을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.UInt64)">
          <source>A 32-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.UInt64)">
          <source>The following example attempts to convert each element in an unsigned long integer array to an unsigned integer value.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 (long) 배열의 각 요소에에서 부호 없는 정수 값으로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>A 32-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 32비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>For example, if <ph id="ph1">`value`</ph> is a <ph id="ph2">&lt;xref:System.String&gt;</ph> that represents a number, <ph id="ph3">`provider`</ph> could supply culture-specific information about the notation used to represent that number.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`value`</ph> 는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 숫자를 나타내는 <ph id="ph3">`provider`</ph> 해당 숫자를 나타내는 데 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>The following example defines a <ph id="ph1">`HexString`</ph> class that implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface and that is designed to hold the string representation of both 32-bit signed and 32-bit unsigned values.</source>
          <target state="translated">다음 예제에서는 정의 <ph id="ph1">`HexString`</ph> 구현 하는 클래스는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스 고 설계 된 두 32 비트 부호 있는 정수와 32 비트 부호 없는 값의 문자열 표시를 보유 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>The class includes a <ph id="ph1">`Sign`</ph> property that indicates the sign of its hexadecimal value.</source>
          <target state="translated">클래스를 포함 한 <ph id="ph1">`Sign`</ph> 16 진수 값의 부호를 나타내는 속성입니다.</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>The following example shows that a call to the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> method that passes a <ph id="ph2">`HexString`</ph> object as a parameter, in turn, calls the <ph id="ph3">&lt;xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> implementation of the <ph id="ph4">`HexString`</ph> class.</source>
          <target state="translated">다음 예제에 대 한 호출에서는 <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> 전달 하는 메서드는 <ph id="ph2">`HexString`</ph> 개체를 매개 변수로 호출 하는 <ph id="ph3">&lt;xref:System.IConvertible.ToUInt32%2A?displayProperty=nameWithType&gt;</ph> 구현의 <ph id="ph4">`HexString`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>A 32-bit unsigned integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 32비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>The return value is the result of invoking <ph id="ph1">&lt;xref:System.UInt32.Parse%2A?displayProperty=nameWithType&gt;</ph> on <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.UInt32.Parse%2A?displayProperty=nameWithType&gt;</ph> 에 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> instance that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 인스턴스는 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 현재 culture가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.UInt32.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.UInt32.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 양수 기호와 음수 기호 "neg" 문자열을 문자열 "po"를 인식 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source>It then attempts to convert each element of a numeric string array to an integer using both this provider and the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> provider for the invariant culture.</source>
          <target state="translated">숫자 문자열 배열의 각 요소를 모두이 공급자를 사용 하 여 정수로 변환 하려고 시도 합니다 및 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 고정 문화권에 대 한 공급자입니다.</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>The base of the number in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, which must be 2, 8, 10, or 16.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>에 지정된 숫자의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.</source>
          <target state="translated">지정된 기수로 나타낸 숫자의 문자열 표현을 해당하는 32비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>A 32-bit unsigned integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 32비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>If <ph id="ph1">`fromBase`</ph> is 16, you can prefix the number specified by the <ph id="ph2">`value`</ph> parameter with "0x" or "0X".</source>
          <target state="translated">경우 <ph id="ph1">`fromBase`</ph> 는 16에 지정 된 접두사로 사용할 수 있습니다는 <ph id="ph2">`value`</ph> "0x" 또는 "0x"로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> data type supports unsigned values only, the <ph id="ph2">&lt;xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29&gt;</ph> method assumes that <ph id="ph3">`value`</ph> is expressed using unsigned binary representation.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> 데이터 형식이 부호 없는 값만을 지원 하는지는 <ph id="ph2">&lt;xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29&gt;</ph> 메서드 있다고 가정 <ph id="ph3">`value`</ph> 은 서명 되지 않은 이진 표현을 사용 하 여 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>In other words, all 32 bits are used to represent the numeric value, and a sign bit is absent.</source>
          <target state="translated">즉, 모든 32 비트 숫자 값을 나타내는 데 사용 되며 및 부호 비트가 없음.</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>As a result, it is possible to write code in which a signed integer value that is out of the range of the <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> data type is converted to a <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> value without the method throwing an exception.</source>
          <target state="translated">결과적으로, 잘못의 범위를 벗어난 코드는 부호 있는 정수 값을 작성 하는 <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> 데이터 형식을 변환할는 <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> 메서드에서 예외를 throw 하지 않고 값입니다.</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Int32.MinValue&gt;</ph> to its hexadecimal string representation, and then calls the <ph id="ph2">&lt;xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 변환 <ph id="ph1">&lt;xref:System.Int32.MinValue&gt;</ph> 해당 16 진수 문자열 표현으로 변환한 다음 호출 하 여 <ph id="ph2">&lt;xref:System.Convert.ToUInt32%28System.String%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>Instead of throwing an exception, the method displays the message, "0x80000000 converts to 2147483648."</source>
          <target state="translated">메서드는 예외를 throw 하는 대신 메시지를 표시 "2147483648 0x80000000 변환 합니다."</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</source>
          <target state="translated">이항 연산 또는 숫자 변환을 수행할 때 항상 특정 값을 해석 하는 메서드 또는 연산자에서 적절 한 숫자 표현을 사용가 있는지 확인 하려면 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 메서드를 16 진수 문자열로 변환 하는 경우 2의 보수 표현을 사용 하는 값을 해석 하으로 이진 표현의 잘못 사용 되지 않는 한 가지 기술은 <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</source>
          <target state="translated">이 예제에서는 값을 나타내는지 부호 있는 또는 부호 없는 정수 값을 문자열 표현으로 변환 하는 동안 결정 합니다.</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>When the example converts the value to a <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> value, it checks whether the original value was a signed integer.</source>
          <target state="translated">이 예제에서는 값을 변환 하는 경우는 <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> 원래 값이 부호 있는 정수 여부를 확인 값입니다.</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</source>
          <target state="translated">따라서, 있으며 (원래 값이 음수를 나타냄)의 상위 비트가 설정 되 면 메서드가 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned integer.</source>
          <target state="translated">다음 예제에서는 16 진수 값으로 숫자 문자열의 배열에서 각 요소를 해석 하 고 부호 없는 정수로 변환할 시도 합니다.</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="translated">밑수가 10이 아닌 부호 없는 숫자를 나타내고 음수 기호가 앞에 붙는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> contains a character that is not a valid digit in the base specified by <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>에 지정된 밑에서 유효한 숫자가 아닌 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>The exception message indicates that there are no digits to convert if the first character in <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is invalid; otherwise, the message indicates that <ph id="ph2">&lt;paramref name="value" /&gt;</ph> contains invalid trailing characters.</source>
          <target state="translated">예외 메시지는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 첫 문자가 유효하지 않은 경우 변환할 숫자가 없음을 나타내고, 유효한 경우 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>에 잘못된 후행 문자가 있다고 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="translated">밑수가 10이 아닌 부호 없는 숫자를 나타내고 음수 기호가 앞에 붙는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt32(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" uid="T:System.Convert">
          <source>Converts a specified value to a 64-bit unsigned integer.</source>
          <target state="translated">지정된 값을 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Boolean)">
          <source>The Boolean value to convert.</source>
          <target state="translated">변환할 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Boolean)">
          <source>Converts the specified Boolean value to the equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 부울 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Boolean)">
          <source>The number 1 if <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 숫자 1을 반환하고, 그렇지 않으면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Boolean)">
          <source>The following example converts Boolean <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph> values to unsigned long integers.</source>
          <target state="translated">다음 예에서는 부울 값을 변환 <ph id="ph1">`true`</ph> 및 <ph id="ph2">`false`</ph> 부호 없는 정수 (long) 값입니다.</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Byte)">
          <source>The 8-bit unsigned integer to convert.</source>
          <target state="translated">변환할 8비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Byte)">
          <source>Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Byte)">
          <source>A 64-bit signed integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Byte)">
          <source>The following example converts each element in a byte array to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 (long)를 바이트 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Char)">
          <source>The Unicode character to convert.</source>
          <target state="translated">변환할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Char)">
          <source>Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 유니코드 문자의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Char)">
          <source>A 64-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Char)">
          <source>The following example converts each element in a character array to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 (long)를 문자 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.DateTime)">
          <source>The date and time value to convert.</source>
          <target state="translated">변환할 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.DateTime)">
          <source>Calling this method always throws <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">이 메서드를 호출하면 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>이 항상 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.DateTime)">
          <source>No value is returned.</source>
          <target state="translated">값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.DateTime)">
          <source>This conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Decimal)">
          <source>The decimal number to convert.</source>
          <target state="translated">변환할 10진수입니다.</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Decimal)">
          <source>Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 10진수 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 64-bit unsigned integer.</source>
          <target state="translated">가장 가까운 64비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Decimal)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Decimal)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 부호 없는 정수 (long) 값입니다.</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Double)">
          <source>The double-precision floating-point number to convert.</source>
          <target state="translated">변환할 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Double)">
          <source>Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 64-bit unsigned integer.</source>
          <target state="translated">가장 가까운 64비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Double)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Double)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 부호 없는 정수 (long) 값입니다.</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Double)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int16)">
          <source>The 16-bit signed integer to convert.</source>
          <target state="translated">변환할 16비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int16)">
          <source>Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int16)">
          <source>A 64-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Int16)">
          <source>The following example attempts to convert each element in an array of 16-bit integers to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 long 정수를 16 비트 정수 배열에서 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int16)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int32)">
          <source>The 32-bit signed integer to convert.</source>
          <target state="translated">변환할 32비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int32)">
          <source>Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int32)">
          <source>A 64-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Int32)">
          <source>The following example attempts to convert each element in an array of integers to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 (long) 정수의 배열 내의 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int64)">
          <source>The 64-bit signed integer to convert.</source>
          <target state="translated">변환할 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int64)">
          <source>Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 64비트 부호 있는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int64)">
          <source>A 64-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Int64)">
          <source>The following example attempts to convert each element in an array of long integers to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 (long)를 정수 (long) 배열에서 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object)">
          <source>Converts the value of the specified object to a 64-bit unsigned integer.</source>
          <target state="translated">지정된 개체의 값을 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object)">
          <source>A 64-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Object)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Object)">
          <source>The following example attempts to convert each element in an object array to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 정수 (long) 개체 배열의 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.SByte)">
          <source>The 8-bit signed integer to convert.</source>
          <target state="translated">변환할 8비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.SByte)">
          <source>Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.SByte)">
          <source>A 64-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.SByte)">
          <source>The following example attempts to convert each element in a signed byte array to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 long 정수를 부호 있는 바이트 배열의 각 요소를 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.SByte)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Single)">
          <source>The single-precision floating-point number to convert.</source>
          <target state="translated">변환할 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Single)">
          <source>Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, rounded to the nearest 64-bit unsigned integer.</source>
          <target state="translated">가장 가까운 64비트 부호 없는 정수로 반올림된 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Single)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 두 정수 사이의 값이면 짝수 값을 반환합니다. 예를 들어 4.5는 4로, 5.5는 6으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Single)">
          <source>The following example attempts to convert each element in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 배열의 각 요소를 변환 하려고 시도 <ph id="ph1">&lt;xref:System.Single&gt;</ph> 부호 없는 정수 (long) 값입니다.</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Single)">
          <source>The output shows that fractional values are rounded before the conversion is performed.</source>
          <target state="translated">출력에 표시는 변환이 수행 되기 전에 소수 자릿수 값은 반올림 됩니다.</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Single)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String)">
          <source>Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.</source>
          <target state="translated">숫자의 지정된 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String)">
          <source>A 64-bit signed integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 64비트 부호 있는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.String%29&gt;</ph> method is equivalent to passing <ph id="ph2">`value`</ph> to the <ph id="ph3">&lt;xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.String%29&gt;</ph> 에 전달 하는 것과 같습니다 <ph id="ph2">`value`</ph> 에 <ph id="ph3">&lt;xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String)">
          <source><ph id="ph1">`value`</ph> is interpreted by using the formatting conventions of the current thread culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 현재 스레드 문화권의 서식 지정 규칙을 사용하여 해석됩니다.</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.UInt64.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.UInt64.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String)">
          <source>The following example interprets the elements of a string array as numeric strings and attempts to convert them to unsigned long integers.</source>
          <target state="translated">다음 예에서는 숫자 문자열으로 문자열 배열의 요소를 해석 하 고 부호 없는 정수 (long)로 변환 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.UInt16)">
          <source>The 16-bit unsigned integer to convert.</source>
          <target state="translated">변환할 16비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.UInt16)">
          <source>Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 16비트 부호 없는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.UInt16)">
          <source>A 64-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.UInt16)">
          <source>The following example converts each element in an array of unsigned 16-bit integers to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 long 정수를 16 비트 부호 없는 정수 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.UInt32)">
          <source>The 32-bit unsigned integer to convert.</source>
          <target state="translated">변환할 32비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.UInt32)">
          <source>Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 32비트 부호 없는 정수의 값을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.UInt32)">
          <source>A 64-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.UInt32)">
          <source>The following example converts each element in an unsigned integer array to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 부호 없는 long 정수를 부호 없는 정수 배열의 각 요소를 변환합니다.</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.UInt64)">
          <source>The 64-bit unsigned integer to return.</source>
          <target state="translated">반환할 64비트 부호 없는 정수입니다.</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.UInt64)">
          <source>Returns the specified 64-bit unsigned integer; no actual conversion is performed.</source>
          <target state="translated">지정된 64비트 부호 없는 정수를 실제 변환 작업 없이 반환합니다.</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is returned unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>를 변경하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>An object that implements the <ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하는 개체</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 지정된 개체의 값을 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>A 64-bit unsigned integer that is equivalent to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or zero if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에 해당하는 64비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>The return value is the result of invoking the <ph id="ph1">&lt;xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> method of the underlying type of <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> 의 기본 형식의 메서드 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> enables the user to specify culture-specific conversion information about the contents of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 사용자의 내용에 대 한 문화권별 변환 정보를 지정할 수 있게 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>For example, if <ph id="ph1">`value`</ph> is a <ph id="ph2">&lt;xref:System.String&gt;</ph> that represents a number, <ph id="ph3">`provider`</ph> could supply culture-specific information about the notation used to represent that number.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`value`</ph> 는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 숫자를 나타내는 <ph id="ph3">`provider`</ph> 해당 숫자를 나타내는 데 사용 되는 표기법에 대 한 문화권별 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>The base types ignore <ph id="ph1">`provider`</ph>; however, the parameter may be used if <ph id="ph2">`value`</ph> is a user-defined type that implements the <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">기본 형식에서 무시 <ph id="ph1">`provider`</ph>이지만 경우에 매개 변수를 사용할 수 있습니다 <ph id="ph2">`value`</ph> 구현 하는 사용자 정의 형식인는 <ph id="ph3">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>The following example defines a <ph id="ph1">`HexString`</ph> class that implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface and that is designed to hold the string representation of both 64-bit signed and 64-bit unsigned values.</source>
          <target state="translated">다음 예제에서는 정의 <ph id="ph1">`HexString`</ph> 구현 하는 클래스는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스 고 설계 된 두 64 비트 부호 있는 정수와 64 비트 부호 없는 값의 문자열 표시를 보유 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>The class includes a <ph id="ph1">`Sign`</ph> property that indicates the sign of its hexadecimal value.</source>
          <target state="translated">클래스를 포함 한 <ph id="ph1">`Sign`</ph> 16 진수 값의 부호를 나타내는 속성입니다.</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>The following example shows that a call to the <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> method that passes a <ph id="ph2">`HexString`</ph> object as a parameter, in turn, calls the <ph id="ph3">&lt;xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> implementation of the <ph id="ph4">`HexString`</ph> class.</source>
          <target state="translated">다음 예제에 대 한 호출에서는 <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Object%2CSystem.IFormatProvider%29&gt;</ph> 전달 하는 메서드는 <ph id="ph2">`HexString`</ph> 개체를 매개 변수로 호출 하는 <ph id="ph3">&lt;xref:System.IConvertible.ToUInt64%2A?displayProperty=nameWithType&gt;</ph> 구현의 <ph id="ph4">`HexString`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in an appropriate format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 적절한 형식에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not implement the <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.IConvertible" /&gt;</ph> 인터페이스를 구현하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source>The conversion is not supported.</source>
          <target state="translated">이 변환은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.</source>
          <target state="translated">지정된 문화권별 서식 지정 정보를 사용하여, 숫자의 지정된 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>A 64-bit unsigned integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 64비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>The return value is the result of invoking <ph id="ph1">&lt;xref:System.UInt64.Parse%2A?displayProperty=nameWithType&gt;</ph> on <ph id="ph2">`value`</ph>.</source>
          <target state="translated">반환 값은 결과 <ph id="ph1">&lt;xref:System.UInt64.Parse%2A?displayProperty=nameWithType&gt;</ph> 에 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source><ph id="ph1">`provider`</ph> is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that obtains a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 이 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 가 가져오는 구현은 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체의 형식에 대 한 문화권별 정보를 제공 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">경우 <ph id="ph1">`provider`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체가 현재 문화권이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>If you prefer not to handle an exception if the conversion fails, you can call the <ph id="ph1">&lt;xref:System.UInt64.TryParse%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">변환이 실패할 경우 예외를 처리 하지 않으려는 경우 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.UInt64.TryParse%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>It returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that recognizes the string "pos" as the positive sign and the string "neg" as the negative sign.</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 양수 기호와 음수 기호 "neg" 문자열을 문자열 "po"를 인식 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>It then attempts to convert each element of a numeric string array to an unsigned long integer.</source>
          <target state="translated">부호 없는 정수 (long)를 숫자 문자열 배열의 각 요소를 변환 하려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source>The conversion uses both the custom provider and the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> provider for the invariant culture.</source>
          <target state="translated">변환 사용자 지정 공급자를 사용 하 여 및 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 고정 문화권에 대 한 공급자입니다.</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>에서는 자릿수(0부터 9까지) 시퀀스에 따라 선택 신호를 구성하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">변환할 숫자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>The base of the number in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, which must be 2, 8, 10, or 16.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>에 지정된 숫자의 기수로서 2, 8, 10 또는 16이어야 합니다.</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.</source>
          <target state="translated">지정된 기수로 나타낸 숫자의 문자열 표현을 해당하는 64비트 부호 없는 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>A 64-bit unsigned integer that is equivalent to the number in <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, or 0 (zero) if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 숫자에 해당하는 64비트 부호 없는 정수이거나, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이면 0입니다.</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>If <ph id="ph1">`fromBase`</ph> is 16, you can prefix the number specified by the <ph id="ph2">`value`</ph> parameter with "0x" or "0X".</source>
          <target state="translated">경우 <ph id="ph1">`fromBase`</ph> 는 16에 지정 된 접두사로 사용할 수 있습니다는 <ph id="ph2">`value`</ph> "0x" 또는 "0x"로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>Because the <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> data type supports unsigned values only, the <ph id="ph2">&lt;xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29&gt;</ph> method assumes that <ph id="ph3">`value`</ph> is expressed using unsigned binary representation.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> 데이터 형식이 부호 없는 값만을 지원 하는지는 <ph id="ph2">&lt;xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29&gt;</ph> 메서드 있다고 가정 <ph id="ph3">`value`</ph> 은 서명 되지 않은 이진 표현을 사용 하 여 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>In other words, all 64 bits are used to represent the numeric value, and a sign bit is absent.</source>
          <target state="translated">즉, 숫자 값을 나타내는 64 비트를 모두 사용 되 고 부호 비트를 사용할 수 없는 합니다.</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>As a result, it is possible to write code in which a signed long integer value that is out of the range of the <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> data type is converted to a <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> value without the method throwing an exception.</source>
          <target state="translated">결과적으로, 잘못의 범위를 벗어난 코드는 부호 있는 정수 (long) 값을 작성 하는 <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> 데이터 형식을 변환할는 <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> 메서드에서 예외를 throw 하지 않고 값입니다.</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>The following example converts <ph id="ph1">&lt;xref:System.Int64.MinValue&gt;</ph> to its hexadecimal string representation, and then calls the <ph id="ph2">&lt;xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 변환 <ph id="ph1">&lt;xref:System.Int64.MinValue&gt;</ph> 해당 16 진수 문자열 표현으로 변환한 다음 호출 하 여 <ph id="ph2">&lt;xref:System.Convert.ToUInt64%28System.String%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>Instead of throwing an exception, the method displays the message, "0x8000000000000000 converts to 9223372036854775808."</source>
          <target state="translated">메서드는 예외를 throw 하는 대신 메시지를 표시 "9223372036854775808 0x8000000000000000 변환 합니다."</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>When performing binary operations or numeric conversions, it is always the responsibility of the developer to verify that a method or operator is using the appropriate numeric representation to interpret a particular value.</source>
          <target state="translated">이항 연산 또는 숫자 변환을 수행할 때 항상 특정 값을 해석 하는 메서드 또는 연산자에서 적절 한 숫자 표현을 사용가 있는지 확인 하려면 개발자의 책임입니다.</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>The following example illustrates one technique for ensuring that the method does not inappropriately use binary representation to interpret a value that uses two's complement representation when converting a hexadecimal string to a <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 메서드를 16 진수 문자열로 변환 하는 경우 2의 보수 표현을 사용 하는 값을 해석 하으로 이진 표현의 잘못 사용 되지 않는 한 가지 기술은 <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>The example determines whether a value represents a signed or an unsigned integer while it is converting that value to its string representation.</source>
          <target state="translated">이 예제에서는 값을 나타내는지 부호 있는 또는 부호 없는 정수 값을 문자열 표현으로 변환 하는 동안 결정 합니다.</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>When the example converts the value to a <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> value, it checks whether the original value was a signed integer.</source>
          <target state="translated">이 예제에서는 값을 변환 하는 경우는 <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> 원래 값이 부호 있는 정수 여부를 확인 값입니다.</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>If so, and if its high-order bit is set (which indicates that the original value was negative), the method throws an exception.</source>
          <target state="translated">따라서, 있으며 (원래 값이 음수를 나타냄)의 상위 비트가 설정 되 면 메서드가 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>The following example attempts to interpret each element in an array of numeric strings as a hexadecimal value and to convert it to an unsigned long integer.</source>
          <target state="translated">다음 예제에서는 16 진수 값으로 숫자 문자열의 배열에서 각 요소를 해석 하 고이를 부호 없는 정수 (long) 변환 시도 합니다.</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph> is not 2, 8, 10, or 16.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fromBase" /&gt;</ph>가 2, 8, 10 또는 16이 아닙니다.</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="translated">밑수가 10이 아닌 부호 없는 숫자를 나타내고 음수 기호가 앞에 붙는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> contains a character that is not a valid digit in the base specified by <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="fromBase" /&gt;</ph>에 지정된 밑에서 유효한 숫자가 아닌 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>The exception message indicates that there are no digits to convert if the first character in <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is invalid; otherwise, the message indicates that <ph id="ph2">&lt;paramref name="value" /&gt;</ph> contains invalid trailing characters.</source>
          <target state="translated">예외 메시지는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>의 첫 문자가 유효하지 않은 경우 변환할 숫자가 없음을 나타내고, 유효한 경우 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>에 잘못된 후행 문자가 있다고 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph>, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="translated">밑수가 10이 아닌 부호 없는 숫자를 나타내고 음수 기호가 앞에 붙는 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve" uid="M:System.Convert.ToUInt64(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>보다 큰 숫자를 나타냅니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>