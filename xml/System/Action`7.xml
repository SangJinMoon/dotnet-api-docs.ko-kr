<Type Name="Action&lt;T1,T2,T3,T4,T5,T6,T7&gt;" FullName="System.Action&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99c7a5bba3a0ab30fe43a01eb29326ddc29f6000" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30727227" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4,in T5,in T6,in T7&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`7&lt;- T1, - T2, - T3, - T4, - T5, - T6, - T7&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`7" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4, In T5, In T6, In T7)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T7">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
    <Parameter Name="arg7" Type="T7" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
    <param name="arg1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수입니다.</param>
    <param name="arg2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수입니다.</param>
    <param name="arg3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수입니다.</param>
    <param name="arg4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수입니다.</param>
    <param name="arg5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수입니다.</param>
    <param name="arg6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수입니다.</param>
    <param name="arg7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수입니다.</param>
    <summary>7개의 매개 변수가 있으며 값을 반환하지 않는 메서드를 캡슐화합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Action%607> 대리자를 명시적으로 사용자 지정 대리자를 선언 하지 않고 메서드 매개 변수로 전달 합니다. 캡슐화 된 메서드에이 대리자에 의해 정의 되는 메서드 시그니처와 일치 해야 합니다. 즉, 캡슐화 된 메서드에 전달 되는 모든를 값으로 7 개의 매개 변수가 있어야 합니다. 값을 반환 하지 않아야 합니다. (C#에서 메서드 반환 해야 `void`합니다. Visual Basic에서 정의 되어야 하 여는 `Sub`...`End Sub` 구문입니다. 일 수도 있습니다 무시 되는 값을 반환 하는 메서드입니다.) 일반적을 이러한 메서드는 연산을 수행 하기 위해 사용 됩니다.  
  
> [!NOTE]
>  7 개의 매개 변수가 있으며 값을 반환 하는 메서드를 참조 하려면 원본을 사용 하 여 <xref:System.Func%608> 대리자를 대신 합니다.  
  
 사용할 수도 있습니다는 <xref:System.Action%607> 무명 메서드와 람다 식으로 위임 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`8" />
  </Docs>
</Type>