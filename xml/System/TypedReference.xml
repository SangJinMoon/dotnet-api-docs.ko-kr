<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypedReference.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b019755cd3127036aa69cd79437c4ea48b215776.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b019755cd3127036aa69cd79437c4ea48b215776</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.TypedReference">
          <source>Describes objects that contain both a managed pointer to a location and a runtime representation of the type that may be stored at that location.</source>
          <target state="translated">위치의 관리되는 포인터와 해당 위치에 저장될 수 있는 형식의 런타임 표현이 모두 들어 있는 개체를 설명합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypedReference">
          <source>A typed reference is a type/value combination used for varargs and other support.</source>
          <target state="translated">형식화 된 참조에는 varargs 및 기타 지원에 사용 되는 형식/값 조합입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypedReference">
          <source><ph id="ph1">`TypedReference`</ph> is a built-in value type that can be used for parameters and local variables.</source>
          <target state="translated"><ph id="ph1">`TypedReference`</ph> 매개 변수 및 지역 변수를 사용할 수 있는 기본 제공 값 형식이입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypedReference">
          <source>Arrays of <ph id="ph1">`TypedReference`</ph> objects cannot be created.</source>
          <target state="translated">배열을 <ph id="ph1">`TypedReference`</ph> 개체를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.TypedReference">
          <source>For example, the following call is invalid:</source>
          <target state="translated">예를 들어 다음 호출 유효 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.TypedReference.Equals(System.Object)">
          <source>The object with which to compare the current object.</source>
          <target state="translated">현재 개체와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.TypedReference.Equals(System.Object)">
          <source>Checks if this object is equal to the specified object.</source>
          <target state="translated">이 개체가 지정된 개체와 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.TypedReference.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 개체가 지정된 개체와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.TypedReference.Equals(System.Object)">
          <source>This method is not implemented.</source>
          <target state="translated">이 메서드가 구현되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.TypedReference.GetHashCode">
          <source>Returns the hash code of this object.</source>
          <target state="translated">해당 개체의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.TypedReference.GetHashCode">
          <source>The hash code of this object.</source>
          <target state="translated">해당 개체의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.TypedReference.GetTargetType(System.TypedReference)">
          <source>The value whose target's type is to be returned.</source>
          <target state="translated">대상 형식이 반환될 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.TypedReference.GetTargetType(System.TypedReference)">
          <source>Returns the type of the target of the specified <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>의 대상 형식을 반환합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.TypedReference.GetTargetType(System.TypedReference)">
          <source>The type of the target of the specified <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>의 대상 형식입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>An object that contains the field described by the first element of <bpt id="p1">&lt;c&gt;</bpt>flds<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>flds<ept id="p1">&lt;/c&gt;</ept>의 첫 요소가 설명하는 필드가 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>A list of field descriptions where each element describes a field that contains the field described by the succeeding element.</source>
          <target state="translated">각각의 요소가 다음 요소가 설명하는 필드가 들어 있는 필드를 설명하는 필드 설명 목록입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>Each described field must be a value type.</source>
          <target state="translated">각각의 설명되는 필드는 값 형식이어야 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>The field descriptions must be <ph id="ph1">&lt;see langword="RuntimeFieldInfo" /&gt;</ph> objects supplied by the type system.</source>
          <target state="translated">필드 설명은 형식 시스템에서 제공하는 <ph id="ph1">&lt;see langword="RuntimeFieldInfo" /&gt;</ph> 개체여야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>Makes a <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph> for a field identified by a specified object and list of field descriptions.</source>
          <target state="translated">필드 설명 목록과 지정된 개체에서 식별된 필드에 대한 <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph> for the field described by the last element of <ph id="ph2">&lt;paramref name="flds" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TypedReference" /&gt;</ph>의 마지막 요소가 설명한 필드에 대한 <ph id="ph2">&lt;paramref name="flds" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>The <ph id="ph1">&lt;xref:System.TypedReference.MakeTypedReference%2A&gt;</ph> method returns a typed reference to some terminal field, where the <ph id="ph2">`target`</ph> parameter contains the field described by the first element of <ph id="ph3">`flds`</ph>, the field described by the first element of <ph id="ph4">`flds`</ph> contains the field described by the second element of <ph id="ph5">`flds`</ph>, and so on until the terminal field is reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.TypedReference.MakeTypedReference%2A&gt;</ph> 메서드 일부 터미널 필드에 대 한 형식화 된 참조를 반환 합니다. 여기서는 <ph id="ph2">`target`</ph> 매개 변수에의 첫 요소가 설명 하는 필드가 포함 <ph id="ph3">`flds`</ph>의 첫 요소가 설명 하는 필드가 <ph id="ph4">`flds`</ph> 필드가 포함 두 번째 요소가 설명 <ph id="ph5">`flds`</ph>터미널 필드에 도달할 때까지 등, 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to access non-public members if the caller has been granted <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>,이 메서드를 사용 하 여 호출자에 게 부여 된 경우 public이 아닌 멤버에 액세스할 수 수 <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> 와 <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType&gt;</ph> 플래그 지정 및 public이 아닌 멤버의 권한 부여 집합은 호출자에 게 제한 하는 경우 집합 또는 하위 집합을 부여 해당 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>(See <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</source>
          <target state="translated">(참조 <bpt id="p1">[</bpt>리플렉션의 보안 고려 사항<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">이 기능을 사용하려면 응용 프로그램이 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> 이상을 대상으로 해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> or <ph id="ph2">&lt;paramref name="flds" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="flds" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>An element of <ph id="ph1">&lt;paramref name="flds" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="flds" /&gt;</ph>의 요소가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>The <ph id="ph1">&lt;paramref name="flds" /&gt;</ph> array has no elements.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="flds" /&gt;</ph> 배열에 요소가 없는 경우</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>An element of <ph id="ph1">&lt;paramref name="flds" /&gt;</ph> is not a <ph id="ph2">&lt;see langword="RuntimeFieldInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="flds" /&gt;</ph>의 요소는 <ph id="ph2">&lt;see langword="RuntimeFieldInfo" /&gt;</ph> 개체가 아닙니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>The <ph id="ph1">&lt;see cref="P:System.Reflection.FieldInfo.IsInitOnly" /&gt;</ph> or <ph id="ph2">&lt;see cref="P:System.Reflection.FieldInfo.IsStatic" /&gt;</ph> property of an element of <ph id="ph3">&lt;paramref name="flds" /&gt;</ph> is <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="flds" /&gt;</ph> 요소의 <ph id="ph1">&lt;see cref="P:System.Reflection.FieldInfo.IsInitOnly" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Reflection.FieldInfo.IsStatic" /&gt;</ph> 속성이 <ph id="ph4">&lt;see langword="true" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>Parameter <ph id="ph1">&lt;paramref name="target" /&gt;</ph> does not contain the field described by the first element of <ph id="ph2">&lt;paramref name="flds" /&gt;</ph>, or an element of <ph id="ph3">&lt;paramref name="flds" /&gt;</ph> describes a field that is not contained in the field described by the succeeding element of <ph id="ph4">&lt;paramref name="flds" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 매개 변수에 <ph id="ph2">&lt;paramref name="flds" /&gt;</ph>의 첫 요소가 설명하는 필드가 들어 있지 않거나, <ph id="ph3">&lt;paramref name="flds" /&gt;</ph>의 다음 요소가 설명한 필드에 들어 있지 않은 필드를 <ph id="ph4">&lt;paramref name="flds" /&gt;</ph>의 요소가 설명하는 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>The field described by an element of <ph id="ph1">&lt;paramref name="flds" /&gt;</ph> is not a value type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="flds" /&gt;</ph>의 요소가 설명하는 필드가 값 형식이 아닌 경우</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.TypedReference.SetTypedReference(System.TypedReference,System.Object)">
          <source>The target of the conversion.</source>
          <target state="translated">변환의 대상입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.TypedReference.SetTypedReference(System.TypedReference,System.Object)">
          <source>The value to be converted.</source>
          <target state="translated">변환할 값입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.TypedReference.SetTypedReference(System.TypedReference,System.Object)">
          <source>Converts the specified value to a <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>.</source>
          <target state="translated">지정된 값을 <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.TypedReference.SetTypedReference(System.TypedReference,System.Object)">
          <source>This method is not supported.</source>
          <target state="translated">이 메서드는 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypedReference.SetTypedReference(System.TypedReference,System.Object)">
          <source>This method always throws <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">이 메서드는 항상 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.TypedReference.SetTypedReference(System.TypedReference,System.Object)">
          <source>In all cases.</source>
          <target state="translated">모든 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.TypedReference.TargetTypeToken(System.TypedReference)">
          <source>The <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph> for which the type handle is requested.</source>
          <target state="translated">형식 핸들이 요청된 <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.TypedReference.TargetTypeToken(System.TypedReference)">
          <source>Returns the internal metadata type handle for the specified <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>에 대한 내부 메타데이터 형식 핸들을 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.TypedReference.TargetTypeToken(System.TypedReference)">
          <source>The internal metadata type handle for the specified <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>에 대한 내부 메타데이터 형식 핸들입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.TypedReference.ToObject(System.TypedReference)">
          <source>The <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph> to be converted.</source>
          <target state="translated">변환될 <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.TypedReference.ToObject(System.TypedReference)">
          <source>Converts the specified <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph> to an <ph id="ph2">&lt;see langword="Object" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="TypedReference" /&gt;</ph>를 <ph id="ph2">&lt;see langword="Object" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.TypedReference.ToObject(System.TypedReference)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> converted from a <ph id="ph2">&lt;see langword="TypedReference" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>에서 변환된 <ph id="ph2">&lt;see langword="TypedReference" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TypedReference.ToObject(System.TypedReference)">
          <source>This might be a boxing operation.</source>
          <target state="translated">Boxing 연산을 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>