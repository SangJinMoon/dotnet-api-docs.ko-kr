<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NotImplementedException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eb4319c05d987ee89995cf17ccc172aff1cf7c9e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb4319c05d987ee89995cf17ccc172aff1cf7c9e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.NotImplementedException">
          <source>The exception that is thrown when a requested method or operation is not implemented.</source>
          <target state="translated">요청한 메서드 또는 연산이 구현되지 않을 때 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>The <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception is thrown when a particular method, get accessor, or set accessor is present as a member of a type but is not implemented.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 예외가 때 특정 메서드를 get 접근자 또는 set 접근자는 형식의 멤버로 있지만 구현 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> uses the default <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> implementation, which supports reference equality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 기본값을 사용 하 여 <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> 구현을 참조 일치를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>For a list of initial values for an instance of <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.NotImplementedException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">인스턴스에 대 한 초기 값 목록은 <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>, 참조는 <ph id="ph2">&lt;xref:System.NotImplementedException.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>Throwing the exception</source>
          <target state="translated">예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>You might choose to throw a  <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception in properties or methods in your own types when the that member is still in development and will only later be implemented in production code.</source>
          <target state="translated">throw 하도록 선택할 수도 있습니다는 <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 속성에서 예외를 직접 메서드 형식의 경우 또는 해당 멤버는 아직 개발 및 프로덕션 코드에서 구현 될 나중에 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>In other words,  a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception should be synonymous with "still in development."</source>
          <target state="translated">즉, 한 <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 예외 "여전히 개발 합니다."와 동의어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>Handling the exception</source>
          <target state="translated">예외 처리</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>The <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception indicates that the method or property that you are attempting to invoke has no implementation and therefore provides no functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 예외가 나타내는지, 메서드 또는 속성이 호출을 시도 하는 구현이 없는 및 따라서 특정 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>As a result, you should not handle this error in a <ph id="ph1">`try/catch`</ph> block.</source>
          <target state="translated">이 오류를 처리 하면 해서는 안 되는 결과적으로, 한 <ph id="ph1">`try/catch`</ph> 블록입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>Instead, you should remove the member invocation from your code.</source>
          <target state="translated">대신, 멤버 호출 코드에서 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>You can include a call to the member when it is implemented in the production version of a library.</source>
          <target state="translated">프로덕션 버전의 라이브러리에서 구현 되는 멤버에 대 한 호출을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>In some cases, a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception may not be used to indicate functionality that is still in development in a pre-production library.</source>
          <target state="translated">일부 경우에는 <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 예외는 아직 사전 프로덕션 라이브러리에서 개발 하는 기능을 나타내는 데 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>However, this still indicates that the functionality is unavailable, and you should remove the member invocation from your code.</source>
          <target state="translated">그러나이 여전히 나타내고 기능을 사용할 수 없거나, 사용자 코드에서 멤버 호출을 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>NotImplementedException and other exception types</source>
          <target state="translated">NotImplementedException 및 기타 예외 형식</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>The .NET Framework also includes two other exception types, <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> and <ph id="ph2">&lt;xref:System.PlatformNotSupportedException&gt;</ph>, that indicate that no implementation exists for a particular member of a type.</source>
          <target state="translated">.NET Framework에는 또한 두 개의 다른 예외 형식, 포함 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 및 <ph id="ph2">&lt;xref:System.PlatformNotSupportedException&gt;</ph>, 형식의 특정 멤버에 대 한 구현이 없는 있는지를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>You should use throw one of these instead of a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> exception under the following conditions.</source>
          <target state="translated">대신 throw 다음 중 하나를 사용 해야는 <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 다음과 같은 경우는 예외입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source><ph id="ph1">&lt;xref:System.PlatformNotSupportedException&gt;</ph> exception</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.PlatformNotSupportedException&gt;</ph> 예외</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>If you've designed a type with one or more members that are available on some platforms or in some versions but not on others, you can throw  this exception on platforms on which the functionality is not supported.</source>
          <target state="translated">일부 플랫폼 또는 일부 버전에서 사용할 수 있는 하나 이상의 멤버와 형식 디자인 한 경우에 다른 플랫폼에 기능이 지원 되지 않습니다이 예외를 throw 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 예외</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>Throw a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception if the implementation of an interface  member or an override to an abstract base class method is not possible.</source>
          <target state="translated">throw 한 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 추상 기본 클래스 메서드를 재정의 또는 인터페이스 멤버 구현 수 없는 경우 예외입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>For example, the   <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> method throws a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception because no meaningful conversion between a date and time and a 32-bit signed integer exists.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> 메서드가 throw 한 <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> 예외 의미 있는 날짜 및 시간과 부호 있는 32 비트 정수 간에 변환 작업 없이 존재 하기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>The method must be present in this case because the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">메서드가 있어야이 경우 때문에 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 클래스가 구현 하는 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>You should also throw a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception if you've implemented an abstract base class and add a new member to it that must be overridden by derived classes.</source>
          <target state="translated">Throw 해야는 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 파생 된 클래스는 추상 기본 클래스를 구현 했습니다에 의해 재정의 되어야 하는 새 구성원을 추가 하는 경우는 예외입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>In that case, making the member abstract causes existing subclasses to fail to load.</source>
          <target state="translated">추상 멤버를 만드는 경우가로 인해 기존 하위 클래스를 로드 하지 못했습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotImplementedException">
          <source>The following example throws this exception for a method that has not been developed.</source>
          <target state="translated">다음 예제에서는 개발 되지 않은 메서드에 대 한이 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.NotImplementedException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> class with default properties.</source>
          <target state="translated">기본 속성을 사용하여 <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor">
          <source>The empty string ("").</source>
          <target state="translated">빈 문자열 ("").</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">지정된 오류 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아니면 현재 예외는 내부 예외를 처리하는 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 블록에서 발생합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외의 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, <ph id="ph2">`null`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">내부 예외 참조</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>