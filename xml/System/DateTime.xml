<Type Name="DateTime" FullName="System.DateTime">
  <TypeSignature Language="C#" Value="public struct DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTime extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.DateTime&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.DateTime&gt;, class System.IFormattable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.DateTime" />
  <TypeSignature Language="VB.NET" Value="Public Structure DateTime&#xA;Implements IComparable, IComparable(Of DateTime), IConvertible, IEquatable(Of DateTime), IFormattable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="04f47-101">Represents an instant in time, typically expressed as a date and time of day.</span><span class="sxs-lookup"><span data-stu-id="04f47-101">Represents an instant in time, typically expressed as a date and time of day.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## <a name="quick-links-to-example-code"></a><span data-ttu-id="04f47-102">예제 코드에 대 한 빠른 링크</span><span class="sxs-lookup"><span data-stu-id="04f47-102">Quick links to example code</span></span>

[!INCLUDE[interactive-note](~/includes/csharp-interactive-note.md)]

<span data-ttu-id="04f47-103">이 문서를 사용 하는 몇 가지 예제가 포함 되어는 `DateTime` 유형:</span><span class="sxs-lookup"><span data-stu-id="04f47-103">This article includes several examples that use the `DateTime` type:</span></span>

<span data-ttu-id="04f47-104">**초기화 예제**    </span><span class="sxs-lookup"><span data-stu-id="04f47-104">**Initialization Examples**    </span></span>  
 <span data-ttu-id="04f47-105">[생성자를 호출 합니다.](#initialization-01)   </span><span class="sxs-lookup"><span data-stu-id="04f47-105">[Invoke a constructor](#initialization-01)   </span></span>  
 <span data-ttu-id="04f47-106">[암시적 기본 생성자를 호출 합니다.](#initialization-02)   </span><span class="sxs-lookup"><span data-stu-id="04f47-106">[Invoke the implicit default constructor](#initialization-02)   </span></span>  
 <span data-ttu-id="04f47-107">[반환 값에서 할당](#initialization-03)   </span><span class="sxs-lookup"><span data-stu-id="04f47-107">[Assignment from return value](#initialization-03)   </span></span>  
 <span data-ttu-id="04f47-108">[날짜 및 시간을 나타내는 문자열을 구문 분석](#initialization-04)   </span><span class="sxs-lookup"><span data-stu-id="04f47-108">[Parsing a string that represents a date and time](#initialization-04)   </span></span>  
 [<span data-ttu-id="04f47-109">날짜 및 시간을 초기화 하는 Visual Basic 구문</span><span class="sxs-lookup"><span data-stu-id="04f47-109">Visual Basic syntax to initialize a date and time</span></span>](#initialization-05)     

<span data-ttu-id="04f47-110">**서식 지정 `DateTime` 개체를 문자열로**</span><span class="sxs-lookup"><span data-stu-id="04f47-110">**Formatting `DateTime` objects as strings**</span></span>  
 <span data-ttu-id="04f47-111">[기본 날짜 시간 형식 사용](#formatting-01)   </span><span class="sxs-lookup"><span data-stu-id="04f47-111">[Use the default date time format](#formatting-01)   </span></span>  
 <span data-ttu-id="04f47-112">[특정 문화권을 사용 하 여 시간 및 날짜 형식을 지정합니다](#formatting-02)   </span><span class="sxs-lookup"><span data-stu-id="04f47-112">[Format a date and time using a specific culture](#formatting-02)   </span></span>  
 <span data-ttu-id="04f47-113">[표준 또는 사용자 지정 형식 문자열을 사용 하 여 날짜 시간 형식](#formatting-03)   </span><span class="sxs-lookup"><span data-stu-id="04f47-113">[Format a date time using a standard or custom format string](#formatting-03)   </span></span>  
 <span data-ttu-id="04f47-114">[형식 문자열과 특정 문화권을 지정 합니다.](#formatting-04)   </span><span class="sxs-lookup"><span data-stu-id="04f47-114">[Specify both a format string and a specific culture](#formatting-04)   </span></span>  
 [<span data-ttu-id="04f47-115">ISO 8601 표준을 사용 하 여 웹 서비스에 대 한 날짜 시간 형식</span><span class="sxs-lookup"><span data-stu-id="04f47-115">Format a date time using the ISO 8601 standard for web services</span></span>](#formatting-05)     

<span data-ttu-id="04f47-116">**문자열을 구문 분석 `DateTime` 개체**</span><span class="sxs-lookup"><span data-stu-id="04f47-116">**Parsing strings as `DateTime` objects**</span></span>  
 <span data-ttu-id="04f47-117">[사용 하 여 `Parse` 또는 `TryParse` 문자열을 날짜 및 시간 변환](#parsing-01)   </span><span class="sxs-lookup"><span data-stu-id="04f47-117">[Use `Parse` or `TryParse` to convert a string to a date and time](#parsing-01)   </span></span>  
 <span data-ttu-id="04f47-118">[사용 하 여 `ParseExact` 또는 `TryParseExact` 알려진된 형식의 문자열로 변환 하려면](#parsing-02)   </span><span class="sxs-lookup"><span data-stu-id="04f47-118">[Use `ParseExact` or `TryParseExact` to convert a string in a known format](#parsing-02)   </span></span>  
 [<span data-ttu-id="04f47-119">ISO 8601 문자열 표현에서 날짜 및 시간으로 변환</span><span class="sxs-lookup"><span data-stu-id="04f47-119">Convert from the ISO 8601 string representation to a date and time</span></span>](#parsing-03)     

<span data-ttu-id="04f47-120">**`DateTime` 해결 방법**</span><span class="sxs-lookup"><span data-stu-id="04f47-120">**`DateTime` resolution**</span></span>  
 <span data-ttu-id="04f47-121">[날짜 및 시간 값의 해상도 탐색 합니다.](#resolution-01)   </span><span class="sxs-lookup"><span data-stu-id="04f47-121">[Explore the resolution of date and time values](#resolution-01)   </span></span>  
 [<span data-ttu-id="04f47-122">허용 오차 내에서 동일한 지 비교</span><span class="sxs-lookup"><span data-stu-id="04f47-122">Comparing for equality within a tolerance</span></span>](#comparison-01)     

<span data-ttu-id="04f47-123">**문화권 및 달력**</span><span class="sxs-lookup"><span data-stu-id="04f47-123">**Culture and calendars**</span></span>  
 <span data-ttu-id="04f47-124">[문화권 특정 달력을 사용 하 여 날짜 및 시간 값 표시](#calendars-01)   </span><span class="sxs-lookup"><span data-stu-id="04f47-124">[Display date and time values using culture specific calendars](#calendars-01)   </span></span>  
 <span data-ttu-id="04f47-125">[문화권 특정 일정에 따라 문자열을 구문 분석](#calendars-02)   </span><span class="sxs-lookup"><span data-stu-id="04f47-125">[Parse strings according to a culture specific calendar](#calendars-02)   </span></span>  
 <span data-ttu-id="04f47-126">[특정 문화권의 달력에서 시간과 날짜를 초기화 합니다.](#calendars-03)   </span><span class="sxs-lookup"><span data-stu-id="04f47-126">[Initialize a date and time from a specific culture's calendar](#calendars-03)   </span></span>  
 <span data-ttu-id="04f47-127">[특정 문화권의 달력을 사용 하 여 날짜 및 시간 속성에 액세스](#calendars-04)   </span><span class="sxs-lookup"><span data-stu-id="04f47-127">[Accessing date and time properties using a specific culture's calendar](#calendars-04)   </span></span>  
 [<span data-ttu-id="04f47-128">문화권 특정 달력을 사용 하 여 해당 연도의 주를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-128">Retrieving the week of the year using culture specific calendars</span></span>](#calendars-05)     

<span data-ttu-id="04f47-129">**지속성**</span><span class="sxs-lookup"><span data-stu-id="04f47-129">**Persistence**</span></span>  
 <span data-ttu-id="04f47-130">[현지 표준 시간대의 문자열로 날짜 및 시간 값 유지](#persistence-01)   </span><span class="sxs-lookup"><span data-stu-id="04f47-130">[Persisting date and time values as strings in the local time zone](#persistence-01)   </span></span>  
 <span data-ttu-id="04f47-131">[고정 문화권 및 시간 형식에서 문자열로 날짜 및 시간 값 유지](#persistence-02)   </span><span class="sxs-lookup"><span data-stu-id="04f47-131">[Persisting date and time values as strings in a culture and time invariant format](#persistence-02)   </span></span>  
 <span data-ttu-id="04f47-132">[영구 날짜 및 시간 값을 정수로](#persistence-03)   </span><span class="sxs-lookup"><span data-stu-id="04f47-132">[Persisting date and time values as integers](#persistence-03)   </span></span>  
 <span data-ttu-id="04f47-133">[사용 하 여 영구 날짜 및 시간 값은 `XmlSerializer`](#persistence-04)   </span><span class="sxs-lookup"><span data-stu-id="04f47-133">[Persisting date and time values using the `XmlSerializer`](#persistence-04)   </span></span>  
 <span data-ttu-id="04f47-134">[사용 하 여 영구 날짜 및 시간 값은 `BinaryFormatter`](#persistence-05)   </span><span class="sxs-lookup"><span data-stu-id="04f47-134">[Persisting date and time values using the `BinaryFormatter`](#persistence-05)   </span></span>  
 [<span data-ttu-id="04f47-135">표준 시간대 데이터를 사용 하 여 날짜 및 시간 값을 유지</span><span class="sxs-lookup"><span data-stu-id="04f47-135">Persisting date and time values with time zone data</span></span>](#persistence-06)     

## <a name="quick-links-to-remarks-topics"></a><span data-ttu-id="04f47-136">빠른 항목의 링크를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-136">Quick links to Remarks topics.</span></span>

<span data-ttu-id="04f47-137">이 섹션의 많은 일반적인 용도 대 한 항목이 포함 되어는 `DateTime` 구조체:</span><span class="sxs-lookup"><span data-stu-id="04f47-137">This section contains topics for many common uses of the `DateTime` struct:</span></span>
  
 <span data-ttu-id="04f47-138">[초기화는 `DateTime` 개체](#initializing-a-datetime-object) </span><span class="sxs-lookup"><span data-stu-id="04f47-138">[Initializing a `DateTime` object](#initializing-a-datetime-object) </span></span>  
 <span data-ttu-id="04f47-139">[DateTime 값과 해당 문자열 표현](#datetime-values-and-their-string-representations) </span><span class="sxs-lookup"><span data-stu-id="04f47-139">[DateTime values and their string representations](#datetime-values-and-their-string-representations) </span></span>  
 <span data-ttu-id="04f47-140">[구문 분석 문자열에서 날짜/시간 값](#parsing-datetime-values-from-strings) </span><span class="sxs-lookup"><span data-stu-id="04f47-140">[Parsing DateTime values from strings](#parsing-datetime-values-from-strings) </span></span>  
 <span data-ttu-id="04f47-141">[날짜/시간 값](#datetime-values) </span><span class="sxs-lookup"><span data-stu-id="04f47-141">[DateTime values](#datetime-values) </span></span>  
 <span data-ttu-id="04f47-142">[날짜/시간 작업](#datetime-operations) </span><span class="sxs-lookup"><span data-stu-id="04f47-142">[DateTime operations](#datetime-operations) </span></span>  
 <span data-ttu-id="04f47-143">[날짜/시간 확인](#datetime-resolution) </span><span class="sxs-lookup"><span data-stu-id="04f47-143">[DateTime resolution](#datetime-resolution) </span></span>  
 <span data-ttu-id="04f47-144">[날짜/시간 값 및 달력](#datetime-values-and-calendars) </span><span class="sxs-lookup"><span data-stu-id="04f47-144">[DateTime values and calendars](#datetime-values-and-calendars) </span></span>  
 <span data-ttu-id="04f47-145">[날짜/시간 값 유지](#persisting-datetime-values) </span><span class="sxs-lookup"><span data-stu-id="04f47-145">[Persisting DateTime values](#persisting-datetime-values) </span></span>  
 <span data-ttu-id="04f47-146">[날짜/시간 vs입니다. TimeSpan](#datetime-vs-timespan) </span><span class="sxs-lookup"><span data-stu-id="04f47-146">[DateTime vs. TimeSpan](#datetime-vs-timespan) </span></span>  
 <span data-ttu-id="04f47-147">[허용 오차 내에서 동일한 지 비교](#comparing-for-equality-within-tolerance) [COM interop 고려 사항](#com-interop-considerations)</span><span class="sxs-lookup"><span data-stu-id="04f47-147">[Comparing for equality within tolerance](#comparing-for-equality-within-tolerance) [COM interop considerations](#com-interop-considerations)</span></span>  
   
<span data-ttu-id="04f47-148"><xref:System.DateTime> 값 형식 사이의 값이 00시: 00 (자정) 년 1 월 1 일에서 0001 서 기 (Common Era) 오후 11시 59분: 59를 통해 서 기 9999 년 12 월 31 일</span><span class="sxs-lookup"><span data-stu-id="04f47-148">The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D.</span></span> <span data-ttu-id="04f47-149">(협정 세계시) 에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-149">(C.E.) in the Gregorian calendar.</span></span>  
  
<span data-ttu-id="04f47-150">시간 값 틱 이라는 100 나노초 단위로 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-150">Time values are measured in 100-nanosecond units called ticks.</span></span> <span data-ttu-id="04f47-151">특정 날짜는 서 기 0001 년 1 월 1 일 자정 12 시 이후 틱 수는</span><span class="sxs-lookup"><span data-stu-id="04f47-151">A particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D.</span></span> <span data-ttu-id="04f47-152">(협정 세계시) 에 <xref:System.Globalization.GregorianCalendar> 달력.</span><span class="sxs-lookup"><span data-stu-id="04f47-152">(C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar.</span></span> <span data-ttu-id="04f47-153">수 윤 초에 의해 추가 된 틱을 제외 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-153">The number excludes ticks that would be added by leap seconds.</span></span> <span data-ttu-id="04f47-154">예를 들어 31241376000000000l 틱 값 12시: 00 자정 0100, 1 월 1 일 금요일 날짜를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-154">For example, a ticks value of 31241376000000000L represents the date Friday, January 01, 0100 12:00:00 midnight.</span></span> <span data-ttu-id="04f47-155">A <xref:System.DateTime> 값은 항상 명시적의 컨텍스트 또는 기본 달력으로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-155">A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04f47-156">사용 하는 눈금 값을 변환할 분 또는 초 같은 일부 다른 시간 간격을 사용 해야 하는 경우는 <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>, 또는 <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> 변환을 수행 하는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-156">If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> constant to perform the conversion.</span></span> <span data-ttu-id="04f47-157">예를 들어 시간 (초) 수를 추가 하려면 틱의 지정된 된 수로 표현 된 <xref:System.DateTime.Second%2A> 의 구성 요소는 <xref:System.DateTime> 값을는 식을 사용할 수 있습니다 `dateValue.Second + nTicks/Timespan.TicksPerSecond`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-157">For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.</span></span>  

<span data-ttu-id="04f47-158">이 문서에서 예제의 전체 집합에 대 한 소스에서 볼 수 있습니다 [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) 또는 [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) GitHub의 docs 리포지토리에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-158">You can view the source for the entire set of examples from this article in either [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) or [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) from the docs repository on GitHub.</span></span>

> [!NOTE]
>  <span data-ttu-id="04f47-159">하는 대신은 <xref:System.DateTime> 은 특히 시간대 날짜 및 시간 값 작업에 대 한 구조는 <xref:System.DateTimeOffset> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-159">An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure.</span></span> <span data-ttu-id="04f47-160"><xref:System.DateTimeOffset> 개인에 날짜 및 시간 정보를 저장 하는 구조 <xref:System.DateTime> 필드 및 기준인 해당 날짜와 시간을 분 단위로 서로 다른 측정 된 UTC에서 개인 <xref:System.Int16> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-160">The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field.</span></span> <span data-ttu-id="04f47-161">그러면 수에 대 한는 <xref:System.DateTimeOffset> 반면 특정 표준 시간대의 시간을 반영 하도록 값을 <xref:System.DateTime> 만 UTC와 현지 표준 시간대의 시간 값 반영 명확 하 게 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-161">This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time.</span></span> <span data-ttu-id="04f47-162">사용 하는 경우에 대 한 토론에 대 한는 <xref:System.DateTime> 구조 또는 <xref:System.DateTimeOffset> 날짜 및 시간 값을 작업할 때 구조, 참조 [Choosing Between DateTime, DateTimeOffset, TimeSpan 및 TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-162">For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).</span></span>  
  
### <a name="initializing-a-datetime-object"></a><span data-ttu-id="04f47-163">DateTime 개체를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-163">Initializing a DateTime object</span></span>  

<span data-ttu-id="04f47-164">새 초기 값을 할당할 수 `DateTime` 다양 한 방법으로 값:</span><span class="sxs-lookup"><span data-stu-id="04f47-164">You can assign an initial value to a new `DateTime` value in many different ways:</span></span>

- <span data-ttu-id="04f47-165">둘 중 하나를 값에 대 한 인수를 지정 하는 위치는 생성자를 호출 하거나 암시적 기본 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-165">Calling a constructor, either one where you specify arguments for values, or use the implicit default constructor.</span></span>
- <span data-ttu-id="04f47-166">할당 한 `DateTime` 속성이 나 메서드의 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-166">Assigning a `DateTime` to the return value of a property or method.</span></span>
- <span data-ttu-id="04f47-167">구문 분석 한 `DateTime` 값을 해당 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-167">Parsing a `DateTime` value from its string representation.</span></span>
- <span data-ttu-id="04f47-168">Visual Basic 특정 언어 기능을 사용 하 여를 인스턴스화하는 `DateTime`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-168">Using Visual Basic specific language features to instantiate a `DateTime`.</span></span> 

<span data-ttu-id="04f47-169">다음 코드 조각은 각는 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-169">The following code snippets show examples of each:</span></span>

#### <a name="invoke-constructors"></a><span data-ttu-id="04f47-170">생성자를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-170">Invoke Constructors</span></span>

<span data-ttu-id="04f47-171">호출의 오버 로드 중 하나는 <xref:System.DateTime> 날짜 및 시간 값 (예: 년, 월 및 일, 또는 틱 수)의 요소를 지정 하는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-171">You call any of the overloads of the <xref:System.DateTime> constructor that specify elements of the date and time value (such as the year, month, and day, or the number of ticks).</span></span> <span data-ttu-id="04f47-172">다음 코드에서는 사용 하 여 특정 날짜는 <xref:System.DateTime> 연도, 월, 일, 시간, 분 및 초를 지정 하는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-172">The following code creates a specific date using the <xref:System.DateTime> constructor specifying the year, month, day, hour, minute, and second.</span></span>  

<a name="initialization-01"></a> <span data-ttu-id="04f47-173">[!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="04f47-173">[!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#1)]</span></span>  
[!code-csharp-interactive[System.DateTime.Instantiation#1](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#1)]

<span data-ttu-id="04f47-174">호출할는 `DateTime` 하려는 경우 구조체의 암시적 기본 생성자는 `DateTime` 를 기본값으로 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-174">You invoke the `DateTime` structure's implicit default constructor when you want a `DateTime` initialized to its default value.</span></span> <span data-ttu-id="04f47-175">(암시적 기본 생성자는 값 형식에 대 한 세부 정보를 참조 하십시오. [값 형식](~/docs/csharp/language-reference/keywords/value-types.md).) 일부 컴파일러에서는 선언도 지원는 <xref:System.DateTime> 명시적으로 값을 할당 하지 않고 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-175">(For details on the implicit default constructor of a value type, see [Value Types](~/docs/csharp/language-reference/keywords/value-types.md).) Some compilers also support declaring a <xref:System.DateTime> value without explicitly assigning a value to it.</span></span> <span data-ttu-id="04f47-176">또한 명시적 초기화 하지 않고 값을 만들면 기본값 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-176">Creating a value without an explicit initialization also results in the default value.</span></span> <span data-ttu-id="04f47-177">다음 예제는 <xref:System.DateTime> C# 및 Visual Basic에서 암시적 기본 생성자와 함께 <xref:System.DateTime> Visual Basic의 할당 되지 않은 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-177">The following example illustrates the <xref:System.DateTime> implicit default constructor in C# and Visual Basic, as well as a <xref:System.DateTime> declaration without assignment in Visual Basic.</span></span>  

<a name="initialization-02"></a> <span data-ttu-id="04f47-178">[!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="04f47-178">[!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#5)]</span></span>  
[!code-csharp-interactive[System.DateTime.Instantiation#5](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#5)]
    
#### <a name="assigning-a-computed-value"></a><span data-ttu-id="04f47-179">계산 된 값을 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-179">Assigning a computed value</span></span>

<span data-ttu-id="04f47-180">할당할 수는 <xref:System.DateTime> 개체 속성 또는 메서드에서 반환 된 날짜 및 시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-180">You can assign the <xref:System.DateTime> object a date and time value returned by a property or method.</span></span> <span data-ttu-id="04f47-181">다음 예제에서는 현재 날짜 및 시간, 현재 utc (협정 세계시) 날짜 및 시간 및 현재 날짜를 할당 3 개의 새 <xref:System.DateTime> 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-181">The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables.</span></span>  

<a name="initialization-03"></a> <span data-ttu-id="04f47-182">[!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="04f47-182">[!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#3)]</span></span>  
[!code-csharp[System.DateTime.Instantiation#3](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#3)]

#### <a name="parsing-a-string-that-represents-a-datetime"></a><span data-ttu-id="04f47-183">날짜/시간을 나타내는 문자열을 구문 분석</span><span class="sxs-lookup"><span data-stu-id="04f47-183">Parsing a string that represents a DateTime</span></span>

<span data-ttu-id="04f47-184"><xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, 및 <xref:System.DateTime.TryParseExact%2A> 메서드는 모두 문자열 해당 날짜 및 시간 값을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-184">The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value.</span></span> <span data-ttu-id="04f47-185">다음 예에서는 사용는 <xref:System.DateTime.Parse%2A> 및 <xref:System.DateTime.ParseExact%2A> 문자열 구문 분석 및 변환 하는 메서드는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-185">The following examples use the <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods to parse a string and convert it to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="04f47-186">지 원하는 형태를 사용 하는 두 번째 형식은 [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) 나타내는 날짜 및 시간 형식 문자열에 대 한 표준입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-186">The second format uses a form supported by the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard for a representing date and time in string format.</span></span> <span data-ttu-id="04f47-187">웹 서비스의 날짜 정보를 전송 하려면 이러한 표준 표현 자주 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-187">This standard representation is often used to transfer date information in web services.</span></span>

<a name="initialization-04"></a> <span data-ttu-id="04f47-188">[!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="04f47-188">[!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#4)]</span></span>  
[!code-csharp[System.DateTime.Instantiation#4](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#4)]

<span data-ttu-id="04f47-189"><xref:System.DateTime.TryParse%2A> 및 <xref:System.DateTime.TryParseExact%2A> 메서드는 문자열의 대 한 유효한 표현 인지 여부를 표시 한 <xref:System.DateTime> 값 하 고, 그럴 경우 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-189">The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods indicate whether a string is a valid representation of a <xref:System.DateTime> value and, if it is, performs the conversion.</span></span>  

#### <a name="language-specific-syntax-for-visual-basic"></a><span data-ttu-id="04f47-190">Visual Basic에 대 한 언어별 구문</span><span class="sxs-lookup"><span data-stu-id="04f47-190">Language-specific syntax for Visual Basic</span></span>

<span data-ttu-id="04f47-191">다음 Visual Basic 문은 새를 초기화 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-191">The following Visual Basic statement initializes a new <xref:System.DateTime> value.</span></span>  

<a name="initialization-05"></a> <span data-ttu-id="04f47-192">[!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="04f47-192">[!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#2)]</span></span>  

### <a name="datetime-values-and-their-string-representations"></a><span data-ttu-id="04f47-193">DateTime 값과 해당 문자열 표현</span><span class="sxs-lookup"><span data-stu-id="04f47-193">DateTime values and their string representations</span></span>  

<span data-ttu-id="04f47-194">내부적으로, 모든 <xref:System.DateTime> 값 (100 나노초 간격의 수) 0001 년 1 월 1 일 12시: 00 자정 이후 경과 된 틱 수로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-194">Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001.</span></span> <span data-ttu-id="04f47-195">실제 <xref:System.DateTime> 값은 해당 값이 표시 될 때 표시 되는 방식에 독립적입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-195">The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed.</span></span> <span data-ttu-id="04f47-196">모양을 <xref:System.DateTime> 값을 해당 문자열 표현으로 변환 하는 서식 지정 작업의 결과 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-196">The appearance of a <xref:System.DateTime> value is the result of a formatting operation that converts a value to its string representation.</span></span>  
  
<span data-ttu-id="04f47-197">날짜 및 시간 값의 모양을 문화권, 국제 표준, 응용 프로그램 요구 사항 및 개인 기본 설정에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-197">The appearance of date and time values is dependent on culture, international standards, application requirements, and personal preference.</span></span> <span data-ttu-id="04f47-198"><xref:System.DateTime> 의 오버 로드를 통해 날짜 및 시간 값 서식 지정에 유연성을 제공 하는 구조 <xref:System.DateTime.ToString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-198">The <xref:System.DateTime> structure offers flexibility in formatting date and time values through overloads of  <xref:System.DateTime.ToString%2A>.</span></span> <span data-ttu-id="04f47-199">기본 <xref:System.DateTime.ToString?displayProperty=nameWithType> 메서드는 현재 문화권의 간단한 날짜 및 자세한 시간 패턴을 사용 하 여 날짜 및 시간 값의 문자열 표현을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-199">The default <xref:System.DateTime.ToString?displayProperty=nameWithType> method returns the string representation of a date and time value using the current culture's short date and long time pattern.</span></span> <span data-ttu-id="04f47-200">다음 예제에서는 기본 <xref:System.DateTime.ToString?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-200">The following example uses the default <xref:System.DateTime.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="04f47-201">간단한 날짜 및 자세한 시간 패턴을 사용 하 여 현재 문화권에 대 한 시간과 날짜를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-201">It displays the date and time using the short date and long time pattern for the current culture.</span></span> <span data-ttu-id="04f47-202">문화권이 EN-US 예제를 실행 하는 컴퓨터의 현재 문화권입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-202">The en-US culture is the current culture on the computer on which the example was run.</span></span>  
  
<a name="formatting-01"></a> <span data-ttu-id="04f47-203">[!code-csharp-interactive[System.DateTime.Formatting#1](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="04f47-203">[!code-csharp-interactive[System.DateTime.Formatting#1](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#1)]</span></span>
[!code-vb[System.DateTime.Formatting#1](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#1)]  

<span data-ttu-id="04f47-204">클라이언트에서 다른 문화권에는 서버 수 있는 웹 시나리오를 지원 하도록 특정 문화권의 날짜 형식을 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-204">You may need to format dates in a specific culture to support web scenarios where the server may be in a different culture from the client.</span></span> <span data-ttu-id="04f47-205">사용 하 여 문화권을 지정 하는 <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 특정 문화권의 간단한 날짜 패턴과 긴 시간 표현을 만드는 메서드를 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-205">You specify the culture using the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to create the short date and long time representation in a specific culture.</span></span> <span data-ttu-id="04f47-206">다음 예제에서는 <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 메서드 및 FR-FR 문화권에 대 한 간단한 날짜 및 자세한 시간 패턴을 사용 하 여 시간을 날짜를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-206">The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to display the date and time using the short date and long time pattern for the fr-FR culture.</span></span>  
  
<a name="formatting-02"></a> <span data-ttu-id="04f47-207">[!code-csharp-interactive[System.DateTime.Formatting#2](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="04f47-207">[!code-csharp-interactive[System.DateTime.Formatting#2](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#2)]</span></span>
[!code-vb[System.DateTime.Formatting#2](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#2)]  

 <span data-ttu-id="04f47-208">다른 응용 프로그램에는 날짜의 다른 문자열 표현이 필요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-208">Other applications may require different string representations of a date.</span></span> <span data-ttu-id="04f47-209"><xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> 메서드는 현재 문화권의 서식 지정 규칙을 사용 하 여 표준 또는 사용자 지정 형식 지정자에 의해 정의 된 문자열 표현을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-209">The <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method returns the string representation defined by a standard or custom format specifier using the formatting conventions of the current culture.</span></span> <span data-ttu-id="04f47-210">다음 예제에서는 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> 문화권 전체 날짜 및 시간 패턴 EN-US을 표시 하는 메서드를 사용 하면 예제를 실행 하는 컴퓨터의 현재 문화권입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-210">The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.</span></span>  
  
<a name="formatting-03"></a> <span data-ttu-id="04f47-211">[!code-csharp-interactive[System.DateTime.Formatting#3](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="04f47-211">[!code-csharp-interactive[System.DateTime.Formatting#3](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#3)]</span></span>
[!code-vb[System.DateTime.Formatting#3](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#3)]  

 <span data-ttu-id="04f47-212">마지막으로, culture 및 사용 하 여 형식을 모두를 지정할 수 있습니다는 <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-212">Finally, you can specify both the culture and the format using the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="04f47-213">다음 예제에서는 <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드를 전체 날짜 및 시간 패턴 FR-FR 문화권을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-213">The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to display the full date and time pattern for the fr-FR culture.</span></span>  

<a name="formatting-04"></a> <span data-ttu-id="04f47-214">[!code-csharp-interactive[System.DateTime.Formatting#4](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#4)]</span><span class="sxs-lookup"><span data-stu-id="04f47-214">[!code-csharp-interactive[System.DateTime.Formatting#4](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#4)]</span></span>
[!code-vb[System.DateTime.Formatting#4](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#4)]  

<span data-ttu-id="04f47-215"><xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> 오버 로드도 사용 하 여 사용자 지정 형식 문자열 다른 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-215">The <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> overload can also be used with a custom format string to specify other formats.</span></span> <span data-ttu-id="04f47-216">사용 하 여 문자열의 서식을 지정 하려면 다음 예제에서는 [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) 종종 웹 서비스에 사용 되는 표준 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-216">The following example shows how to format a string using the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard format often used for web services.</span></span> <span data-ttu-id="04f47-217">Iso 8601 형식에는 해당 표준 형식 문자열 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-217">The Iso 8601 format does not have a corresponding standard format string.</span></span>

<a name="formatting05"></a> <span data-ttu-id="04f47-218">[!code-csharp-interactive[System.DateTime.Formatting#5](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="04f47-218">[!code-csharp-interactive[System.DateTime.Formatting#5](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#5)]</span></span>
[!code-vb[System.DateTime.Formatting#5](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#5)]  

<span data-ttu-id="04f47-219">서식 지정 하는 방법에 대 한 자세한 내용은 <xref:System.DateTime> 값, 참조 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-219">For more information about formatting <xref:System.DateTime> values, see  [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  

### <a name="parsing-datetime-values-from-strings"></a><span data-ttu-id="04f47-220">구문 분석 문자열에서 날짜/시간 값</span><span class="sxs-lookup"><span data-stu-id="04f47-220">Parsing DateTime values from strings</span></span>

<span data-ttu-id="04f47-221">날짜와 시간의 문자열 표현을 구문 분석 시 변환는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-221">Parsing converts the string representation of a date and time to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="04f47-222">일반적으로 날짜 및 시간 문자열 응용 프로그램에서 두 개의 서로 다른 용도가지고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-222">Typically, date and time strings have two different usages in applications:</span></span>  
  
-   <span data-ttu-id="04f47-223">날짜 및 시간에는 다양 한 형태를 사용 하며 현재 문화권 또는 특정 문화권의 규칙을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-223">A date and time takes a variety of forms and reflects the conventions of either the current culture or a specific culture.</span></span> <span data-ttu-id="04f47-224">예를 들어 응용 프로그램에 현재 문화권이 EN-US "12/15/2013" 또는 "2013 년 12 월 15 일"로 날짜 값을 입력 하는 사용자 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-224">For example, an application allows a user whose current culture is en-US to input a date value as "12/15/2013" or "December 15, 2013".</span></span> <span data-ttu-id="04f47-225">현재 문화권이 en gb "2013-15-12" 또는 "15 2013 년 12 월."로 날짜 값을 입력 하는 사용자 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-225">It allows a user whose current culture is en-gb to input a date value as "15/12/2013" or "15 December 2013."</span></span>  
  
-   <span data-ttu-id="04f47-226">날짜 및 시간은 미리 정의 된 형식으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-226">A date and time is represented in a predefined format.</span></span> <span data-ttu-id="04f47-227">예를 들어 응용 프로그램 "20130103" 응용 프로그램 실행 되는 culture와 독립적으로 날짜를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-227">For example, an application serializes a date as "20130103" independently of the culture on which the app is running.</span></span> <span data-ttu-id="04f47-228">응용 프로그램에 필요한 날짜는 현재 문화권의 간단한 날짜 형식으로 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-228">An application may require dates be input in the current culture's short date format.</span></span>
  
<span data-ttu-id="04f47-229">사용 된 <xref:System.DateTime.Parse%2A> 또는 <xref:System.DateTime.TryParse%2A> 문화권을 사용 하는 일반적인 날짜 및 시간 형식 중 하나에서 문자열을 변환 하는 메서드는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-229">You use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string from one of the common date and time formats used by a culture to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="04f47-230">다음 예제에서는 사용 하는 방법을 보여 줍니다. <xref:System.DateTime.TryParse%2A> 날짜 문자열에 여러 가지 문화권별 형식으로 변환 하는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-230">The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in different culture-specific formats to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="04f47-231">현재 문화권이 영어 (영국) 및 호출 변경는 <xref:System.DateTime.GetDateTimeFormats> 날짜 및 시간 문자열의 배열을 생성 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-231">It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings.</span></span> <span data-ttu-id="04f47-232">그런 다음 배열의 각 요소에 전달 된 <xref:System.DateTime.TryParse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-232">It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method.</span></span> <span data-ttu-id="04f47-233">예제의 출력 구문 분석 방법에서 각 문화권별 날짜 및 시간 문자열을 변환할 수를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-233">The output from the example shows the parsing method was able to successfully convert each of the culture-specific date and time strings.</span></span>  
  
<a name="parsing-01"></a> <span data-ttu-id="04f47-234">[!code-csharp-interactive[System.DateTime.Parsing#1](~/samples/snippets/csharp/System.DateTime/Parsing.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="04f47-234">[!code-csharp-interactive[System.DateTime.Parsing#1](~/samples/snippets/csharp/System.DateTime/Parsing.cs#1)]</span></span>
[!code-vb[System.DateTime.Parsing#1](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#1)]  

<span data-ttu-id="04f47-235">사용 된 <xref:System.DateTime.ParseExact%2A> 및 <xref:System.DateTime.TryParseExact%2A> 특정 형식 또는 형식으로 일치 해야 하는 문자열을 변환 하는 메서드는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-235">You use the <xref:System.DateTime.ParseExact%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a string that must match a particular format or formats to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="04f47-236">구문 분석 방법에 대 한 매개 변수로 하나 이상의 날짜 및 시간 형식 문자열을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-236">You specify one or more date and time format strings as a parameter to the parsing method.</span></span> <span data-ttu-id="04f47-237">다음 예제에서는 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> "yyyyMMdd" 형식 또는 "HHmmss" 형식으로 지정 해야 하는 문자열을 변환 하는 메서드 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-237">The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a "yyyyMMdd" format or a "HHmmss" format to <xref:System.DateTime> values.</span></span>  
  
<a name="parsing-02"></a> <span data-ttu-id="04f47-238">[!code-csharp-interactive[System.DateTime.Parsing#2](~/samples/snippets/csharp/System.DateTime/Parsing.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="04f47-238">[!code-csharp-interactive[System.DateTime.Parsing#2](~/samples/snippets/csharp/System.DateTime/Parsing.cs#2)]</span></span>
[!code-vb[System.DateTime.Parsing#2](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#2)]  

<span data-ttu-id="04f47-239">에 대 한 하나의 일반적인 용도 <xref:System.DateTime.ParseExact%2A> 에서 일반적으로 웹 서비스의 문자열 표현으로 변환 하는 것 [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) 표준 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-239">One common use for <xref:System.DateTime.ParseExact%2A> is to convert a string representation from a web service, usually in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard format.</span></span> <span data-ttu-id="04f47-240">다음 코드에서는 사용 하는 올바른 형식 문자열을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-240">The following code shows the correct format string to use:</span></span>

<a name="parsing-03"></a> <span data-ttu-id="04f47-241">[!code-csharp-interactive[System.DateTime.Parsing#3](~/samples/snippets/csharp/System.DateTime/Parsing.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="04f47-241">[!code-csharp-interactive[System.DateTime.Parsing#3](~/samples/snippets/csharp/System.DateTime/Parsing.cs#3)]</span></span>
[!code-vb[System.DateTime.Parsing#3](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#3)]  

<span data-ttu-id="04f47-242">문자열을 구문 분석할 수 없는 경우는 <xref:System.DateTime.Parse%2A> 및 <xref:System.DateTime.ParseExact%2A> 메서드 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-242">If a string cannot be parsed, the <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception.</span></span> <span data-ttu-id="04f47-243"><xref:System.DateTime.TryParse%2A> 및 <xref:System.DateTime.TryParseExact%2A> 메서드 반환는 <xref:System.Boolean> 변환이 성공 했는지 아니면 실패 했는지를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-243">The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span> <span data-ttu-id="04f47-244">사용 해야는 <xref:System.DateTime.TryParse%2A> 또는 <xref:System.DateTime.TryParseExact%2A> 메서드 성능은 중요 한 시나리오에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-244">You should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important.</span></span> <span data-ttu-id="04f47-245">날짜 및 시간 문자열에 대 한 구문 분석 작업, 높은 실패율을 포함 하려는 경향이 및 예외 처리 비용이 많이 듭니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-245">The parsing operation for date and time strings tends to have a high failure rate, and exception handling is expensive.</span></span> <span data-ttu-id="04f47-246">문자열은 사용자가 입력 되는 경우 이러한 메서드를 사용 하 여 또는 알 수 없는 소스에서 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-246">Use these methods if strings are input by users or coming from an unknown source.</span></span> 
  
<span data-ttu-id="04f47-247">날짜 및 시간 값을 구문 분석 하는 방법에 대 한 자세한 내용은 참조 [구문 분석 하는 날짜 및 시간 문자열](~/docs/standard/base-types/parsing-datetime.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-247">For more information about parsing date and time values, see [Parsing Date and Time Strings](~/docs/standard/base-types/parsing-datetime.md).</span></span>  

### <a name="datetime-values"></a><span data-ttu-id="04f47-248">날짜/시간 값</span><span class="sxs-lookup"><span data-stu-id="04f47-248">DateTime values</span></span>

<span data-ttu-id="04f47-249">시간 값에 대 한 설명은 <xref:System.DateTime> 종류는 utc (협정 세계시) 표준을 사용 하 여 나타내기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-249">Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard.</span></span> <span data-ttu-id="04f47-250">그리니치 표준시 (GMT)에 대 한 국제 승인된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-250">Coordinated Universal Time is the internationally recognized name for Greenwich Mean Time (GMT).</span></span> <span data-ttu-id="04f47-251">UTC 시작 지점 경도 0도에서 측정 되는 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-251">Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point.</span></span> <span data-ttu-id="04f47-252">일광 절약 시간을 UTC 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-252">Daylight saving time is not applicable to UTC.</span></span>  
  
<span data-ttu-id="04f47-253">현지 시간 특정 표준 시간대에 상대적입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-253">Local time is relative to a particular time zone.</span></span> <span data-ttu-id="04f47-254">시간대 표준 시간대 오프셋에 연관 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-254">A time zone is associated with a time zone offset.</span></span> <span data-ttu-id="04f47-255">표준 시간대 오프셋이 UTC 시작 지점부터 시간 단위로 측정 된 표준 시간대 변위가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-255">A time zone offset is the displacement of the time zone measured in hours from the UTC origin point.</span></span> <span data-ttu-id="04f47-256">또한 현지 시간을 추가 하거나 시간 간격 조정을 추출 하는 일광 절약 시간을 필요에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-256">In addition, local time is optionally affected by daylight saving time, which adds or subtracts a time interval adjustment.</span></span> <span data-ttu-id="04f47-257">현지 시간 UTC와 필요한 경우 일광 절약 시간제에 맞게 조정에 표준 시간대 오프셋을 추가 하 여 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-257">Local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary.</span></span> <span data-ttu-id="04f47-258">UTC 시작 지점에서 표준 시간대 오프셋은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-258">The time zone offset at the UTC origin point is zero.</span></span>  
  
<span data-ttu-id="04f47-259">UTC 시간 중인 파일의 경우 계산, 비교 및 저장할 날짜 및 시간에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-259">UTC time is suitable for calculations, comparisons, and storing dates and time in files.</span></span> <span data-ttu-id="04f47-260">현지 시간은 데스크톱 응용 프로그램의 사용자 인터페이스에 표시 하기에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-260">Local time is appropriate for display in user interfaces of desktop applications.</span></span> <span data-ttu-id="04f47-261">표준 시간대 인식 응용 프로그램 (예: 여러 웹 응용 프로그램)도 다양 한 다른 표준 시간대와 작동 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-261">Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.</span></span>  
  
<span data-ttu-id="04f47-262">경우는 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTime> 개체가 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, 표시 된 시간이 현지 시간 또는 UTC 시간, 일부 다른 표준 시간대의 시간 인지 지정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-262">If the <xref:System.DateTime.Kind%2A> property of a <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.</span></span>  

### <a name="datetime-resolution"></a><span data-ttu-id="04f47-263">날짜/시간 확인</span><span class="sxs-lookup"><span data-stu-id="04f47-263">DateTime resolution</span></span>
  
> [!NOTE]
>  <span data-ttu-id="04f47-264">날짜 및 시간 산술 연산을 수행 하는 대신 <xref:System.DateTime> 값 경과 시간 측정을 사용할 수 있습니다는 <xref:System.Diagnostics.Stopwatch> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-264">As an alternative to performing date and time arithmetic on <xref:System.DateTime> values to measure elapsed time, you can use the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
<span data-ttu-id="04f47-265"><xref:System.DateTime.Ticks%2A> 속성 초의 1 천만 단위로 날짜 및 시간 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-265">The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second.</span></span> <span data-ttu-id="04f47-266"><xref:System.DateTime.Millisecond%2A> 속성 초의 1/1000 날짜 및 시간 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-266">The <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value.</span></span> <span data-ttu-id="04f47-267">반복 된 호출을 사용 하는 <xref:System.DateTime.Now%2A?displayProperty=nameWithType> 속성 경과 시간 측정을 시스템 클록에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-267">Using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property to measure elapsed time is dependent on the system clock.</span></span> <span data-ttu-id="04f47-268">Windows 7 및 Windows 8 시스템에서 시스템 클록에 약 15 밀리초 해상도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-268">The system clock on  Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.</span></span> <span data-ttu-id="04f47-269">이 해결 방법을 100 밀리초를 미만인 작은 시간 간격으로 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-269">This resolution affects small time intervals less than 100 milliseconds.</span></span> 
  
<span data-ttu-id="04f47-270">다음 예제에서는 현재 날짜 및 시간 값의 시스템 클록의 해상도에 대 한 종속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-270">The following example illustrates the dependence of current date and time values on the resolution of the system clock.</span></span> <span data-ttu-id="04f47-271">예제에서는 외부 루프를 20 회 반복 및 내부 루프 외부 루프를 지연 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-271">In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop.</span></span> <span data-ttu-id="04f47-272">외부 루프 카운터의 값은 10이 고에 대 한 호출 하는 경우는 <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> 메서드 5 밀리초 지연을 소개 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-272">If the value of the outer loop counter is 10, a call to the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method introduces a five-millisecond delay.</span></span> <span data-ttu-id="04f47-273">다음 예제에서 반환 하는 시간 (밀리초)의 수를 보여 줍니다.는 `DateTime.Now.Milliseconds` 속성 변경에 대 한 호출 후에 <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-273">The following example shows the number of milliseconds returned by the `DateTime.Now.Milliseconds` property changes only after the call to <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>.</span></span>  

<a name="resolution-01"></a> <span data-ttu-id="04f47-274">[!code-csharp-interactive[System.DateTime.Resolution#1](~/samples/snippets/csharp/System.DateTime/Resolution.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="04f47-274">[!code-csharp-interactive[System.DateTime.Resolution#1](~/samples/snippets/csharp/System.DateTime/Resolution.cs#1)]</span></span>
[!code-vb[System.DateTime.Resolution#1](~/samples/snippets/visualbasic/System.DateTime/Resolution.vb#1)]  

### <a name="datetime-operations"></a><span data-ttu-id="04f47-275">날짜/시간 작업</span><span class="sxs-lookup"><span data-stu-id="04f47-275">DateTime operations</span></span>  

<span data-ttu-id="04f47-276">사용 하 여 계산 된 <xref:System.DateTime> 구조체와 같은 <xref:System.DateTime.Add%2A> 또는 <xref:System.DateTime.Subtract%2A>, 구조체의 값을 수정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-276">A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure.</span></span> <span data-ttu-id="04f47-277">대신 계산 반환 새 <xref:System.DateTime> 구조 값은 계산의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-277">Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation.</span></span>  
  
<span data-ttu-id="04f47-278">표준 시간대 (예: UTC와 현지 시간 또는 한 표준 시간대와 다른) 간의 변환 작업의 계정으로 일광 절약 시간제 걸리지만 산술 및 비교 연산은 그렇지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-278">Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.</span></span>  
  
<span data-ttu-id="04f47-279"><xref:System.DateTime> 구조 자체 한 표준 시간대에서 다른 형식으로 변환 하는 것에 대 한 제한 된 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-279">The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another.</span></span> <span data-ttu-id="04f47-280">사용할 수는 <xref:System.DateTime.ToLocalTime%2A> 사용 하 여 메서드를 현지 시간을 UTC 형식으로 변환할 수는 <xref:System.DateTime.ToUniversalTime%2A> 현지 시간에서 UTC로 변환 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-280">You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC.</span></span> <span data-ttu-id="04f47-281">그러나 표준 시간대 변환 메서드의 전체 집합은 영어로 <xref:System.TimeZoneInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-281">However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class.</span></span> <span data-ttu-id="04f47-282">이러한 메서드를 사용 하 여 다른 표준 시간대의 시간 중 하나라도 세계에서 표준 시간대에에서 시간을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-282">You convert the time in any one of the world's time zones to the time in any other time zone using these methods.</span></span>  
  
<span data-ttu-id="04f47-283">계산 하 고 비교 <xref:System.DateTime> 개체는 개체가 동일한 표준 시간대의 시간을 나타내는 경우에 의미를 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-283">Calculations and comparisons of <xref:System.DateTime> objects are meaningful only if the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-284">사용할 수는 <xref:System.TimeZoneInfo> 나타내는 개체를 한 <xref:System.DateTime> 값의 시간 영역을 두는 느슨하게 결합 되어 있지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-284">You can use a <xref:System.TimeZoneInfo> object to represent a <xref:System.DateTime> value's time zone, although the two are loosely coupled.</span></span> <span data-ttu-id="04f47-285">A <xref:System.DateTime> 개체 해당 날짜 및 시간 값의 표준 시간대를 나타내는 개체를 반환 하는 속성이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-285">A <xref:System.DateTime> object does not have a property that returns an object that represents that date and time value's time zone.</span></span> <span data-ttu-id="04f47-286"><xref:System.DateTime.Kind%2A> 속성 표시 하는 경우는 `DateTime` 현지 시간을 UTC를 나타내지 또는 지정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-286">The <xref:System.DateTime.Kind%2A> property indicates if a `DateTime` represents UTC, local time, or is unspecified.</span></span> <span data-ttu-id="04f47-287">표준 시간대를 확인 하려면 외부 메커니즘에 의존 해야 표준 시간대 인식 응용 프로그램에서 한 <xref:System.DateTime> 개체가 만들어진 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-287">In a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <xref:System.DateTime> object was created.</span></span> <span data-ttu-id="04f47-288">둘 모두를 래핑하는 구조체를 사용할 수 있습니다는 <xref:System.DateTime> 값 및 <xref:System.TimeZoneInfo> 을 나타내는 개체는 <xref:System.DateTime> 값의 표준 시간대입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-288">You could use a structure that wraps both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents the <xref:System.DateTime> value's time zone.</span></span> <span data-ttu-id="04f47-289">UTC를 사용 하 여 계산 및 비교에 대 한 자세한 내용은 <xref:System.DateTime> 값, 참조 [날짜 및 시간 산술 작업을 수행](~/docs/standard/datetime/performing-arithmetic-operations.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-289">For details on using UTC in calculations and comparisons with <xref:System.DateTime> values, see [Performing Arithmetic Operations with Dates and Times](~/docs/standard/datetime/performing-arithmetic-operations.md).</span></span>  
  
<span data-ttu-id="04f47-290">각 <xref:System.DateTime> 멤버 암시적으로 해당 작업을 수행 일반 달력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-290">Each <xref:System.DateTime> member implicitly uses the Gregorian calendar to perform its operation.</span></span> <span data-ttu-id="04f47-291">예외는 암시적으로 달력을 지정 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-291">Exceptions are methods that implicitly specify a calendar.</span></span> <span data-ttu-id="04f47-292">여기에 일정을 지정 하는 생성자에서 파생 된 매개 변수가 있는 메서드 및 <xref:System.IFormatProvider>와 같은 <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-292">These include constructors that specify a calendar, and methods with a parameter derived from <xref:System.IFormatProvider>, such as <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>.</span></span>  
  
<span data-ttu-id="04f47-293">작업의 멤버는 <xref:System.DateTime> 형식 윤년 및 달의 일 수와 같은 정보를 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-293">Operations by members of the <xref:System.DateTime> type take into account details such as leap years and the number of days in a month.</span></span>  

## <a name="datetime-values-and-calendars"></a><span data-ttu-id="04f47-294">날짜/시간 값 및 달력</span><span class="sxs-lookup"><span data-stu-id="04f47-294">DateTime values and calendars</span></span>  

<span data-ttu-id="04f47-295">.NET Framework 클래스 라이브러리는 다양 한 달력 클래스에서 파생 되는 모두 포함 된 <xref:System.Globalization.Calendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-295">The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class.</span></span>  <span data-ttu-id="04f47-296">다음 창이 여기에 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-296">They are:</span></span>  
  
-   <span data-ttu-id="04f47-297"><xref:System.Globalization.ChineseLunisolarCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-297">The <xref:System.Globalization.ChineseLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-298"><xref:System.Globalization.EastAsianLunisolarCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-298">The <xref:System.Globalization.EastAsianLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-299"><xref:System.Globalization.GregorianCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-299">The <xref:System.Globalization.GregorianCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-300"><xref:System.Globalization.HebrewCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-300">The <xref:System.Globalization.HebrewCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-301"><xref:System.Globalization.HijriCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-301">The <xref:System.Globalization.HijriCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-302"><xref:System.Globalization.JapaneseCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-302">The <xref:System.Globalization.JapaneseCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-303"><xref:System.Globalization.JapaneseLunisolarCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-303">The <xref:System.Globalization.JapaneseLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-304"><xref:System.Globalization.JulianCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-304">The <xref:System.Globalization.JulianCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-305"><xref:System.Globalization.KoreanCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-305">The <xref:System.Globalization.KoreanCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-306"><xref:System.Globalization.KoreanLunisolarCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-306">The <xref:System.Globalization.KoreanLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-307"><xref:System.Globalization.PersianCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-307">The <xref:System.Globalization.PersianCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-308"><xref:System.Globalization.TaiwanCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-308">The <xref:System.Globalization.TaiwanCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-309"><xref:System.Globalization.TaiwanLunisolarCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-309">The <xref:System.Globalization.TaiwanLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-310"><xref:System.Globalization.ThaiBuddhistCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-310">The <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  
-   <span data-ttu-id="04f47-311"><xref:System.Globalization.UmAlQuraCalendar> 클래스</span><span class="sxs-lookup"><span data-stu-id="04f47-311">The <xref:System.Globalization.UmAlQuraCalendar> class.</span></span>  
  
<span data-ttu-id="04f47-312">해당 읽기 전용으로 정의 하는 기본 달력을 사용 하 여 각 문화권 <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-312">Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="04f47-313">각 문화권의 읽기 전용으로 정의 하는 하나 이상의 일정을 지원할 수 있습니다 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-313">Each culture may support one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="04f47-314">현재 사용 하는 특정 달력 <xref:System.Globalization.CultureInfo> 하 여 개체가 정의 된 해당 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-314">The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="04f47-315">에 달력 중 하나 여야 합니다는 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-315">It must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> array.</span></span>  
  
<span data-ttu-id="04f47-316">문화권의 현재 달력은 해당 문화권에 대 한 모든 형식 지정 작업에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-316">A culture's current calendar is used in all formatting operations for that culture.</span></span> <span data-ttu-id="04f47-317">예를 들어 태국 불교식 문화권의 달력은 태국 불교식 달력으로 표현 되는 <xref:System.Globalization.ThaiBuddhistCalendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-317">For example, the default calendar of the Thai Buddhist culture is the Thai Buddhist Era calendar, which is represented by the <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  <span data-ttu-id="04f47-318">경우는 <xref:System.Globalization.CultureInfo> 태국 불교식 달력은 기본적으로 사용, 태국 불교식 문화권을 나타내는 날짜 및 시간 형식 지정 작업에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-318">When a <xref:System.Globalization.CultureInfo> object that represents the Thai Buddhist culture is used in a date and time formatting operation, the Thai Buddhist Era calendar is used by default.</span></span> <span data-ttu-id="04f47-319">일반 달력은 경우에 사용 되는 문화권의 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> 다음 예제와 같이 속성을 변경:</span><span class="sxs-lookup"><span data-stu-id="04f47-319">The Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property is changed, as the following example shows:</span></span>  

<a name="calendars-01"></a> <span data-ttu-id="04f47-320">[!code-csharp-interactive[System.DateTime.Calendar#1](~/samples/snippets/csharp/System.DateTime/Calendar.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="04f47-320">[!code-csharp-interactive[System.DateTime.Calendar#1](~/samples/snippets/csharp/System.DateTime/Calendar.cs#1)]</span></span>
[!code-vb[System.DateTime.Calendar#1](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#1)]  

<span data-ttu-id="04f47-321">문화권의 현재 달력은 다음 예제와 같이 해당 culture에 대 한 모든 구문 분석 작업에도 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-321">A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.</span></span>  
  
<a name="calendars-02"></a> <span data-ttu-id="04f47-322">[!code-csharp-interactive[System.DateTime.Calendar#2](~/samples/snippets/csharp/System.DateTime/Calendar.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="04f47-322">[!code-csharp-interactive[System.DateTime.Calendar#2](~/samples/snippets/csharp/System.DateTime/Calendar.cs#2)]</span></span>
[!code-vb[System.DateTime.Calendar#2](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#2)]  

<span data-ttu-id="04f47-323">인스턴스화하는 <xref:System.DateTime> 호출 하 여 특정 달력의 날짜 및 시간 요소 (연도, 월 및 일 수)를 사용 하 여 값는 [DateTime 생성자](xref:System.DateTime.%23ctor%2A) 포함 하는 `calendar` 매개 변수는 전달하고<xref:System.Globalization.CultureInfo.Calendar%2A>그 달력을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-323">You instantiate a <xref:System.DateTime> value using the date and time elements (number of the year, month, and day) of a specific calendar by calling a [DateTime constructor](xref:System.DateTime.%23ctor%2A) that includes a `calendar` parameter and passing it a <xref:System.Globalization.CultureInfo.Calendar%2A> object that represents that calendar.</span></span> <span data-ttu-id="04f47-324">다음 예제에서는 날짜 및 시간 요소를 사용 하 여는 <xref:System.Globalization.ThaiBuddhistCalendar> 달력.</span><span class="sxs-lookup"><span data-stu-id="04f47-324">The following example uses the date and time elements from the <xref:System.Globalization.ThaiBuddhistCalendar> calendar.</span></span>  
  
<a name="calendars-03"></a> <span data-ttu-id="04f47-325">[!code-csharp-interactive[System.DateTime.Calendar#3](~/samples/snippets/csharp/System.DateTime/Calendar.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="04f47-325">[!code-csharp-interactive[System.DateTime.Calendar#3](~/samples/snippets/csharp/System.DateTime/Calendar.cs#3)]</span></span>
[!code-vb[System.DateTime.Calendar#3](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#3)]  

<span data-ttu-id="04f47-326"><xref:System.DateTime> 포함 하지 않는 생성자는 `calendar` 매개 변수 가정 날짜 및 시간 요소는 일반 달력의 단위로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-326"><xref:System.DateTime> constructors that do not include a `calendar` parameter assume that the date and time elements are expressed as units in the Gregorian calendar.</span></span>  
  
<span data-ttu-id="04f47-327">다른 모든 <xref:System.DateTime> 속성 및 메서드는 일반 달력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-327">All other <xref:System.DateTime> properties and methods use the Gregorian calendar.</span></span> <span data-ttu-id="04f47-328">예를 들어는 <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 일반 달력의 연도 반환 하는 속성 및 <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=nameWithType> 메서드 가정 하는 `year` 매개 변수는 일반 달력의 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-328">For example, the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> property returns the year in the Gregorian calendar, and the <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=nameWithType> method assumes that the `year` parameter is a year in the Gregorian calendar.</span></span>  <span data-ttu-id="04f47-329">각 <xref:System.DateTime> 일반 달력을 사용 하 여 멤버의 해당 멤버가 <xref:System.Globalization.CultureInfo.Calendar%2A> 특정 달력을 사용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-329">Each <xref:System.DateTime> member that uses the Gregorian calendar has a corresponding member of the <xref:System.Globalization.CultureInfo.Calendar%2A> class that uses a specific calendar.</span></span> <span data-ttu-id="04f47-330">예를 들어는 <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=nameWithType> 특정 달력의 연도 반환 하는 메서드 및 <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=nameWithType> 1 보다 크거나는 `year` 특정 달력의 연도 수로 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-330">For example, the <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=nameWithType> method returns the year in a specific calendar, and the <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=nameWithType> method interprets the `year` parameter as a year number in a specific calendar.</span></span> <span data-ttu-id="04f47-331">다음 예제에서는 모두를 사용 하 여 <xref:System.DateTime> 및 해당 멤버의는 <xref:System.Globalization.ThaiBuddhistCalendar> 클래스.</span><span class="sxs-lookup"><span data-stu-id="04f47-331">The following example uses both the <xref:System.DateTime> and the corresponding members of the  <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  
  
<a name="calendars-04"></a> <span data-ttu-id="04f47-332">[!code-csharp-interactive[System.DateTime.Calendar#4](~/samples/snippets/csharp/System.DateTime/Calendar.cs#4)]</span><span class="sxs-lookup"><span data-stu-id="04f47-332">[!code-csharp-interactive[System.DateTime.Calendar#4](~/samples/snippets/csharp/System.DateTime/Calendar.cs#4)]</span></span>
[!code-vb[System.DateTime.Calendar#4](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#4)]  

<span data-ttu-id="04f47-333"><xref:System.DateTime> 구조에 포함 되어는 <xref:System.DateTime.DayOfWeek%2A> 일반 달력의 주의 일을 반환 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-333">The <xref:System.DateTime> structure includes a <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar.</span></span> <span data-ttu-id="04f47-334">해당 연도의 주 번호를 검색할 수 있는 멤버는 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-334">It does not include a member that allows you to retrieve the week number of the year.</span></span> <span data-ttu-id="04f47-335">해당 연도의 주를 검색 하려면 개별 달력의 호출 <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-335">To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="04f47-336">다음 예제에서 이에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-336">The following example provides an illustration.</span></span>  
  
<a name="calendars-05"></a> <span data-ttu-id="04f47-337">[!code-csharp-interactive[System.DateTime.Calendar#5](~/samples/snippets/csharp/System.DateTime/Calendar.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="04f47-337">[!code-csharp-interactive[System.DateTime.Calendar#5](~/samples/snippets/csharp/System.DateTime/Calendar.cs#5)]</span></span>
[!code-vb[System.DateTime.Calendar#5](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#5)]  

<span data-ttu-id="04f47-338">날짜 및 달력에 대 한 자세한 내용은 참조 하십시오. [달력 작업](~/docs/standard/datetime/working-with-calendars.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-338">For more information on dates and calendars, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
### <a name="persisting-datetime-values"></a><span data-ttu-id="04f47-339">날짜/시간 값 유지</span><span class="sxs-lookup"><span data-stu-id="04f47-339">Persisting DateTime values</span></span>  

<span data-ttu-id="04f47-340">지속할 수 있습니다 <xref:System.DateTime> 네 가지 방법으로 값:</span><span class="sxs-lookup"><span data-stu-id="04f47-340">You can persist <xref:System.DateTime> values in four ways:</span></span>  
  
-   <span data-ttu-id="04f47-341">하면 [를 문자열로 변환](#persisting-values-as-strings) 하 고 문자열을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-341">You [convert them to strings](#persisting-values-as-strings) and persist the strings.</span></span>  
-   <span data-ttu-id="04f47-342">있습니다 [64 비트 정수 값으로 변환](#persisting-values-as-integers) (의 값은 <xref:System.DateTime.Ticks%2A> 속성) 정수를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-342">You [convert them to 64-bit integer values](#persisting-values-as-integers) (the value of the <xref:System.DateTime.Ticks%2A> property) and persist the integers.</span></span>  
-   <span data-ttu-id="04f47-343">하면 [날짜/시간 값을 serialize](#serializing-dateTime-values)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-343">You [serialize the DateTime values](#serializing-dateTime-values).</span></span>  
-   <span data-ttu-id="04f47-344">하면 [표준 시간대 정보과 함께 날짜/시간 값을 serialize](#serializing-datetime-and-time-zone-data)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-344">You [serialize the DateTime values along with time zone information](#serializing-datetime-and-time-zone-data).</span></span>  
  
<span data-ttu-id="04f47-345">복원 하는 루틴 확인 해야는 <xref:System.DateTime> 값 데이터가 손실 또는 선택 하는 방법에 관계 없이 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-345">You must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception regardless of which technique you choose.</span></span> <span data-ttu-id="04f47-346"><xref:System.DateTime> 값 라운드트립 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-346"><xref:System.DateTime> values should round-trip.</span></span> <span data-ttu-id="04f47-347">즉, 원래 값과 복원된 값 동일 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-347">That is, the original value and the restored value should be the same.</span></span> <span data-ttu-id="04f47-348">경우에 원래 <xref:System.DateTime> 값 단일 시간 인스턴스에만 나타내는 시간 복원 된 경우 동일한 순간을 식별 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-348">And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored.</span></span>  
  
#### <a name="persisting-values-as-strings"></a><span data-ttu-id="04f47-349">보존 값을 문자열로</span><span class="sxs-lookup"><span data-stu-id="04f47-349">Persisting values as strings</span></span>  

<span data-ttu-id="04f47-350">성공적으로 복원 하려면 <xref:System.DateTime> 유지 되는 값을 문자열로 같은이 규칙을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-350">To successfully restore <xref:System.DateTime> values that are persisted as strings, follow these rules:</span></span>  
  
-   <span data-ttu-id="04f47-351">문화권별 형식으로 유지 때 해당 문자열을 복원 하는 경우를 지정 하는 방법에 대 한 동일한 가정을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-351">Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it.</span></span> <span data-ttu-id="04f47-352">현재 문화권이에 저장 된 시스템의 culture와에서 다른 시스템에는 문자열을 복원할 수 있도록 하려면 호출 된 <xref:System.DateTime.ToString%2A> 고정 문화권의 규칙을 사용 하 여 문자열을 저장 하는 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-352">To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A> overload to save the string by using the conventions of the invariant culture.</span></span> <span data-ttu-id="04f47-353">호출 된 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 또는 <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> 오버 로드를 고정 문화권의 규칙을 사용 하 여 문자열을 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-353">Call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture.</span></span> <span data-ttu-id="04f47-354">사용 하지 않습니다는 <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, 또는 <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> 오버 로드를 현재 스레드 문화권의 규칙을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-354">Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture.</span></span>  
  
-   <span data-ttu-id="04f47-355">날짜 시간 단일 시점을 나타내는 경우에 동일한 순간 것에서 복원 된 경우,도 다른 표준 시간대에에서 나타내는 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-355">If the date represents a single moment of time, ensure that it represents the same moment in time when it's restored, even on a different time zone.</span></span> <span data-ttu-id="04f47-356">변환 된 <xref:System.DateTime> utc (협정 세계시)로 저장 하기 전에 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-356">Convert the <xref:System.DateTime> value to Coordinated Universal Time (UTC) before saving it.</span></span> <span data-ttu-id="04f47-357">표준 시간대 정보와 함께 값을 serialize 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-357">You can also serialize the value along with time zone information.</span></span> <span data-ttu-id="04f47-358">이 방법을 사용 하는 방법에 대 한 자세한 내용은 참조 [직렬화 날짜/시간 및 표준 시간대 데이터](#TimeZone)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-358">For more information about this approach, see [Serializing DateTime and time zone data](#TimeZone).</span></span>  
  
 <span data-ttu-id="04f47-359">지속할 때 가장 일반적인 오류 <xref:System.DateTime> 값을 문자열로 기본 문화권 이나 현재 문화권의 서식 지정 규칙을 사용 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-359">The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture.</span></span> <span data-ttu-id="04f47-360">현재 문화권이 저장 하 고 문자열을 복원할 때 서로 다른 경우 문제가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-360">Problems arise if the current culture is different when saving and restoring the strings.</span></span> <span data-ttu-id="04f47-361">다음 예제에서는 이러한 문제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-361">The following example illustrates these problems.</span></span> <span data-ttu-id="04f47-362">이 경우에 영어 (미국)는 현재 문화권의 서식 지정 규칙을 사용 하 여 5 개 날짜를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-362">It saves five dates using the formatting conventions of the current culture, which in this case is English (United States).</span></span> <span data-ttu-id="04f47-363">영어 (영국)에 경우에 다른 문화권의 형식 규칙을 사용 하 여 날짜를 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-363">It restores the dates using the formatting conventions of a different culture, which in this case is English (Great Britain).</span></span> <span data-ttu-id="04f47-364">이기 때문에 두 개의 문화권의 형식 규칙이 서로 다른 두 날짜를 복원할 수 없는 하 고 나머지 세 개의 날짜 올바르게 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-364">Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly.</span></span> <span data-ttu-id="04f47-365">또한 원래 날짜 및 시간 값은 복원 된 시간 내에 단일 시점을 나타내는 경우 표준 시간대 정보가 손실 되기 때문에 시간이 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-365">Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.</span></span>  
  
<a name="persistence-01"></a> <span data-ttu-id="04f47-366">[!code-csharp[System.DateTime.Persistence#1](~/samples/snippets/csharp/System.DateTime/Persistence.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="04f47-366">[!code-csharp[System.DateTime.Persistence#1](~/samples/snippets/csharp/System.DateTime/Persistence.cs#1)]</span></span>
[!code-vb[System.DateTime.Persistence#1](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#1)]  

<span data-ttu-id="04f47-367">왕복 하는 데 <xref:System.DateTime> 다음이 단계를 성공적으로 수행 하는 값:</span><span class="sxs-lookup"><span data-stu-id="04f47-367">To round-trip <xref:System.DateTime> values successfully, follow these steps:</span></span>  
  
1.  <span data-ttu-id="04f47-368">시간의 단일 시점을 나타내는 경우 변환 현지 시간에서 UTC로 호출 하 여는 <xref:System.DateTime.ToUniversalTime%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-368">If the values represent single moments of time, convert them from the local time to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
1.  <span data-ttu-id="04f47-369">날짜를 호출 하 여 해당 문자열 표현으로 변환 된 <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> 또는 <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-369">Convert the dates to their string representations by calling the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> or <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="04f47-370">고정 문화권의 서식 지정 규칙을 사용 하 여 지정 하 여 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 로 `provider` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-370">Use the formatting conventions of the invariant culture by specifying <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> as the `provider` argument.</span></span> <span data-ttu-id="04f47-371">값이 "O" 또는 "R" 표준 서식 문자열을 사용 하 여에 왕복 해야 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-371">Specify that the value should round-trip by using the "O" or "R" standard format string.</span></span>  
  
<span data-ttu-id="04f47-372">유지 되 복원 하려면 <xref:System.DateTime> 값 데이터 손실 없이 다음이 단계를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-372">To restore the persisted <xref:System.DateTime> values without data loss, follow these steps:</span></span>  
  
1.  <span data-ttu-id="04f47-373">호출 하 여 데이터를 구문 분석 된 <xref:System.DateTime.ParseExact%2A> 또는 <xref:System.DateTime.TryParseExact%2A> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-373">Parse the data by calling the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> overload.</span></span> <span data-ttu-id="04f47-374">지정 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 로 `provider` 인수와 같은 표준 형식 문자열에 사용 되는 사용 하 여는 `format` 변환 하는 동안 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-374">Specify <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> as the `provider` argument, and use the same standard format string you used for the `format` argument during conversion.</span></span> <span data-ttu-id="04f47-375">포함 된 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> 값에 `styles` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-375">Include the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> value in the `styles` argument.</span></span>  
1.  <span data-ttu-id="04f47-376">경우는 <xref:System.DateTime> 값은 호출 시간 내에 단일 시점을 나타냅니다는 <xref:System.DateTime.ToLocalTime%2A> 현지 시간으로 측정 된 UTC에서 구문 분석 된 날짜를 변환 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-376">If the <xref:System.DateTime> values represent single moments in time, call the <xref:System.DateTime.ToLocalTime%2A> method to convert the parsed date from UTC to local time.</span></span>  
  
<span data-ttu-id="04f47-377">다음 예제에서는 고정 문화권 및 "O" 표준 서식 문자열 사용 하 여 되도록 <xref:System.DateTime> 저장 되 고 복원 하는 값은 시스템, 문화권 또는 원본 시스템과 대상 시스템의 표준 시간대에 관계 없이 동일한 순간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-377">The following example uses the invariant culture and the "O" standard format string to ensure that <xref:System.DateTime> values saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.</span></span>  
  
<a name="persistence-02"></a> <span data-ttu-id="04f47-378">[!code-csharp[System.DateTime.Persistence#2](~/samples/snippets/csharp/System.DateTime/Persistence.cs#2)]</span><span class="sxs-lookup"><span data-stu-id="04f47-378">[!code-csharp[System.DateTime.Persistence#2](~/samples/snippets/csharp/System.DateTime/Persistence.cs#2)]</span></span>
[!code-vb[System.DateTime.Persistence#2](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#2)]  

#### <a name="persisting-values-as-integers"></a><span data-ttu-id="04f47-379">보존 값을 정수로</span><span class="sxs-lookup"><span data-stu-id="04f47-379">Persisting values as integers</span></span>  

<span data-ttu-id="04f47-380">날짜 및 시간으로 유지할 수는 <xref:System.Int64> 틱 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-380">You can persist a date and time as an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="04f47-381">이 경우에 시스템의 문화권을 고려 필요가 없습니다는 <xref:System.DateTime> 값 유지 되며에 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-381">In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on.</span></span>  
  
<span data-ttu-id="04f47-382">유지 하는 <xref:System.DateTime> 정수는 값:</span><span class="sxs-lookup"><span data-stu-id="04f47-382">To persist a <xref:System.DateTime> value as an integer:</span></span>  
  
-   <span data-ttu-id="04f47-383">경우는 <xref:System.DateTime> 값에에서 단일 시점을 나타내는, 호출 하 여 UTC로 변환 된 <xref:System.DateTime.ToUniversalTime%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-383">If the <xref:System.DateTime> values represent single moments in time, convert them to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
-   <span data-ttu-id="04f47-384">가 나타내는 틱 수를 검색 된 <xref:System.DateTime> 값에서 해당 <xref:System.DateTime.Ticks%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-384">Retrieve the number of ticks represented by the <xref:System.DateTime> value from its <xref:System.DateTime.Ticks%2A> property.</span></span>  
  
<span data-ttu-id="04f47-385">복원 하는 <xref:System.DateTime> 를 정수로 유지 된 값:</span><span class="sxs-lookup"><span data-stu-id="04f47-385">To restore a <xref:System.DateTime> value that has been persisted as an integer:</span></span>  
  
1.  <span data-ttu-id="04f47-386">새 <xref:System.DateTime> 전달 하 여 개체는 <xref:System.Int64> 값을 <xref:System.DateTime.%23ctor%28System.Int64%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-386">Instantiate a new <xref:System.DateTime> object by passing the <xref:System.Int64> value to the <xref:System.DateTime.%23ctor%28System.Int64%29> constructor.</span></span>  
1.  <span data-ttu-id="04f47-387">경우는 <xref:System.DateTime> 값의에서 단일 한 시점을 나타내는 변환 측정 된 UTC에서 로컬 시간으로 호출 하 여는 <xref:System.DateTime.ToLocalTime%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-387">If the <xref:System.DateTime> value represents a single moment in time, convert it from UTC to the local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.</span></span>  
  
<span data-ttu-id="04f47-388">다음 예제에서는 배열을 계속 되 면 <xref:System.DateTime> 은 미국 영어 시스템에는 정수 값 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-388">The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone.</span></span> <span data-ttu-id="04f47-389">UTC 표준 시간대에 있는 시스템에 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-389">It restores it on a system in the UTC zone.</span></span> <span data-ttu-id="04f47-390">정수를 포함 하는 파일에 포함 되어는 <xref:System.Int32> 의 총 수를 나타내는 값 <xref:System.Int64> 것 바로 뒤에 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-390">The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it.</span></span>  
  
<a name="persistence-03"></a> <span data-ttu-id="04f47-391">[!code-csharp[System.DateTime.Persistence#3](~/samples/snippets/csharp/System.DateTime/Persistence.cs#3)]</span><span class="sxs-lookup"><span data-stu-id="04f47-391">[!code-csharp[System.DateTime.Persistence#3](~/samples/snippets/csharp/System.DateTime/Persistence.cs#3)]</span></span>
[!code-vb[System.DateTime.Persistence#3](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#3)]  

#### <a name="serializing-datetime-values"></a><span data-ttu-id="04f47-392">날짜/시간 값을 직렬화합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-392">Serializing DateTime values</span></span>  

<span data-ttu-id="04f47-393">지속할 수 있습니다 <xref:System.DateTime> 값 스트림 또는 파일 및 다음 복원 하는 serialization을 통해 해당 deserialization을 통해.</span><span class="sxs-lookup"><span data-stu-id="04f47-393">You can persist <xref:System.DateTime> values through serialization to a stream or file, and then restore them through deserialization.</span></span> <span data-ttu-id="04f47-394"><xref:System.DateTime> 데이터가 일부 지정 된 개체 형식으로 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-394"><xref:System.DateTime> data is serialized in some specified object format.</span></span> <span data-ttu-id="04f47-395">개체 역직렬화 시 복원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-395">The objects are restored when they are deserialized.</span></span> <span data-ttu-id="04f47-396">포맷터 또는, 직렬 변환기와 같은 <xref:System.Xml.Serialization.XmlSerializer> 또는 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, serialization 및 deserialization 프로세스를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-396">A formatter or serializer, such as <xref:System.Xml.Serialization.XmlSerializer> or <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, handles the process of serialization and deserialization.</span></span> <span data-ttu-id="04f47-397">Serialization 및.NET Framework에서 지원 되는 serialization 형식에 대 한 자세한 내용은 참조 [Serialization](~/docs/standard/serialization/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-397">For more information about serialization and the types of serialization supported by the .NET Framework, see [Serialization](~/docs/standard/serialization/index.md).</span></span>
  
<span data-ttu-id="04f47-398">다음 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> serialize 및 deserialize 하는 클래스 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-398">The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values.</span></span> <span data-ttu-id="04f47-399">값은 21 세기에 있는 모든 윤년 일을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-399">The values represent all leap year days in the twenty-first century.</span></span> <span data-ttu-id="04f47-400">이 예제에서는 현재 문화권이 영어 (영국) 인 시스템에서 실행 되 면 출력 결과를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-400">The output represents the result if the example is run on a system whose current culture is English (Great Britain).</span></span> <span data-ttu-id="04f47-401">역직렬화 한 때문에 <xref:System.DateTime> 개체 자체에 코드의 날짜 및 시간 형식 문화적 차이 처리할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-401">Because you've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats.</span></span>  
  
<a name="persistence-04"></a> <span data-ttu-id="04f47-402">[!code-csharp[System.DateTime.Persistence#4](~/samples/snippets/csharp/System.DateTime/Persistence.cs#4)]</span><span class="sxs-lookup"><span data-stu-id="04f47-402">[!code-csharp[System.DateTime.Persistence#4](~/samples/snippets/csharp/System.DateTime/Persistence.cs#4)]</span></span>
[!code-vb[System.DateTime.Persistence#4](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#4)]  

<span data-ttu-id="04f47-403">앞의 예제에는 시간 정보가 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-403">The previous example doesn't include time information.</span></span> <span data-ttu-id="04f47-404">경우는 <xref:System.DateTime> 변환 현지 시간에서 UTC로 호출 하 여 직렬화 하기 전에, 값의에서 한 시점을 나타내며 현지 시간으로 표현 된 <xref:System.DateTime.ToUniversalTime%2A> 메서드 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-404">If a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span> <span data-ttu-id="04f47-405">후 deserialize 하면 변환할 측정 된 UTC에서 로컬 시간으로 호출 하 여는 <xref:System.DateTime.ToLocalTime%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-405">After you deserialize it, convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.</span></span> <span data-ttu-id="04f47-406">다음 예제에서는 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> serialize 하는 클래스 <xref:System.DateTime> 은 미국 영어 시스템의 데이터 태평양 표준 시간대 및 미국에 있는 시스템에서 deserialize 하는 데 중앙 표준 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-406">The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize <xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the U.S. Central Standard zone.</span></span>  
  
<a name="persistence-05"></a> <span data-ttu-id="04f47-407">[!code-csharp[System.DateTime.Persistence#5](~/samples/snippets/csharp/System.DateTime/Persistence.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="04f47-407">[!code-csharp[System.DateTime.Persistence#5](~/samples/snippets/csharp/System.DateTime/Persistence.cs#5)]</span></span>
[!code-vb[System.DateTime.Persistence#5](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#5)]  

#### <a name="serializing-datetime-and-time-zone-data"></a><span data-ttu-id="04f47-408">날짜/시간 및 표준 시간대 데이터를 직렬화 하는 작업</span><span class="sxs-lookup"><span data-stu-id="04f47-408">Serializing DateTime and time zone data</span></span>  

<span data-ttu-id="04f47-409">이전 예제에서는 모두 있다고 가정 <xref:System.DateTime> 값은 현지 시간으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-409">The previous examples all assumed that <xref:System.DateTime> values are expressed as local times.</span></span> <span data-ttu-id="04f47-410">원본 및 대상 시스템에는 동일한 순간에에서 반영 되므로 값이 UTC와 현지 시간 사이 변환 하는 코드.</span><span class="sxs-lookup"><span data-stu-id="04f47-410">The code converted the values between UTC and local time so they reflect the same moment in time on the source and target systems.</span></span> <span data-ttu-id="04f47-411"><xref:System.DateTime> 값에 로컬이 아닌 다른 표준 시간대와 UTC 시간 또한 반영할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-411"><xref:System.DateTime> values may also reflect moments in time in a time zone other than local and UTC.</span></span> <span data-ttu-id="04f47-412">때문에 <xref:System.DateTime> 구조체가 표준 시간대 인식, 모두 serialize 할는 <xref:System.DateTime> 값 및 <xref:System.TimeZoneInfo> 해당 표준 시간대를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-412">Because the <xref:System.DateTime> structure is not time zone-aware, you have to serialize both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents its time zone.</span></span> <span data-ttu-id="04f47-413">해당 필드는 둘 모두 형식 만들기는 <xref:System.DateTime> 값과 해당 표준 시간대입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-413">Create a type whose fields include both the <xref:System.DateTime> value and its time zone.</span></span> <span data-ttu-id="04f47-414">다음 예제에서는 정의 `DateWithTimeZone` 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-414">The following example defines a `DateWithTimeZone` structure.</span></span>  
  
<a name="persistence-06"></a> <span data-ttu-id="04f47-415">[!code-csharp[System.DateTime.Persistence#6](~/samples/snippets/csharp/System.DateTime/DateWithTimeZone.cs#6)]</span><span class="sxs-lookup"><span data-stu-id="04f47-415">[!code-csharp[System.DateTime.Persistence#6](~/samples/snippets/csharp/System.DateTime/DateWithTimeZone.cs#6)]</span></span>
[!code-vb[System.DateTime.Persistence#6](~/samples/snippets/visualbasic/System.DateTime/DateWithTimeZone.vb#6)]  

> [!IMPORTANT]
>  <span data-ttu-id="04f47-416">`DateWithTimeZone` 구조가 serialize 및 deserialize 배열을 다음 두 예제에서 사용 `DateWithTimeZone` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-416">The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects.</span></span> <span data-ttu-id="04f47-417">이 문서에서 예제의 전체 집합에 대 한 소스에서 볼 수 있습니다 [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) 또는 [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) GitHub의 docs 리포지토리에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-417">You can view the source for the entire set of examples from this article in either [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) or [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) from the docs repository on GitHub.</span></span>
  
<span data-ttu-id="04f47-418">사용 하 여는 `DateWithTimeZone` 구조를 다음 날짜 및 시간과 표준 시간대 정보를 유지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-418">By using the `DateWithTimeZone` structure, you can then persist date and time along with time zone information.</span></span> <span data-ttu-id="04f47-419">다음 예제에서는 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 의 배열을 serialize 하는 클래스 `DateWithTimeZone` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-419">The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize an array of `DateWithTimeZone` objects.</span></span>  
  
[!code-csharp[System.DateTime.Persistence#7](~/samples/snippets/csharp/System.DateTime/Persistence.cs#7)]
[!code-vb[System.DateTime.Persistence#7](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#7)]  

<span data-ttu-id="04f47-420">다음 예제에서는 다음 호출에서 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> 메서드를 역직렬화 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-420">The following example then calls the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method to deserialize it.</span></span>  
  
[!code-csharp[System.DateTime.Persistence#8](~/samples/snippets/csharp/System.DateTime/Persistence.cs#8)]
[!code-vb[System.DateTime.Persistence#8](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#8)]  

### <a name="datetime-vs-timespan"></a><span data-ttu-id="04f47-421">날짜/시간 vs입니다. TimeSpan</span><span class="sxs-lookup"><span data-stu-id="04f47-421">DateTime vs. TimeSpan</span></span>  

<span data-ttu-id="04f47-422"><xref:System.DateTime> 및 <xref:System.TimeSpan> 값 형식 한다는 점에서 차이가 <xref:System.DateTime> 시간에서 인스턴트를 나타내는 반면는 <xref:System.TimeSpan> 시간 간격을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-422">The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval.</span></span> <span data-ttu-id="04f47-423">인스턴스 하나를 뺄 수도 <xref:System.DateTime> 에서 다른를 가져올는 <xref:System.TimeSpan> 사이의 시간 간격을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-423">You can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them.</span></span> <span data-ttu-id="04f47-424">또는 양수를 추가할 수 있습니다 <xref:System.TimeSpan> 현재 <xref:System.DateTime> 얻으려고는 <xref:System.DateTime> 날짜는 미래의 날짜를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-424">Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date.</span></span>  
  
<span data-ttu-id="04f47-425">추가 하거나에서 시간 간격을 뺄 수 있습니다는 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-425">You can add or subtract a time interval from a <xref:System.DateTime> object.</span></span> <span data-ttu-id="04f47-426">시간 간격, 양수 또는 음수일 수 있습니다 및 틱 같은 단위로 표현 될 수 있습니다 (초)로는 <xref:System.TimeSpan> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-426">Time intervals can be negative or positive, and they can be expressed in units such as ticks, seconds, or as a <xref:System.TimeSpan> object.</span></span>  

### <a name="comparing-for-equality-within-tolerance"></a><span data-ttu-id="04f47-427">허용 오차 내에서 동일한 지 비교</span><span class="sxs-lookup"><span data-stu-id="04f47-427">Comparing for equality within tolerance</span></span>

<span data-ttu-id="04f47-428">에 대 한 같음 비교 <xref:System.DateTime> 값은 정확 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-428">Equality comparisons for <xref:System.DateTime> values are exact.</span></span> <span data-ttu-id="04f47-429">즉, 두 개의 값을 동일한 같은 틱 수로 표시 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-429">That means two values must be expressed as the same number of ticks to be considered equal.</span></span> <span data-ttu-id="04f47-430">정밀도 불필요 한 종종 또는 많은 응용 프로그램에 대 한 잘못 된도 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-430">That precision is often unecessary or even incorrect for many applications.</span></span> <span data-ttu-id="04f47-431">경우에 테스트 하려는 종종 <xref:System.DateTime> 개체는 **와 거의 비슷하게**합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-431">Often, you want to test if <xref:System.DateTime> objects are **roughly equal**.</span></span> 

<span data-ttu-id="04f47-432">다음 예제에서는 대략 비교 하는 방법을 해당 <xref:System.DateTime> 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-432">The following example demonstrates how to compare roughly equivalent <xref:System.DateTime> .</span></span> <span data-ttu-id="04f47-433">동일한 선언 하는 경우에 작은 간격 차이 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-433">It accepts a small margin of difference when declaring them equal.</span></span>  
  
<a name="comparison-02"></a> <span data-ttu-id="04f47-434">[!code-csharp[System.DateTime.Comparisons#1](~/samples/snippets/csharp/System.DateTime/DateTimeComparisons.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="04f47-434">[!code-csharp[System.DateTime.Comparisons#1](~/samples/snippets/csharp/System.DateTime/DateTimeComparisons.cs#1)]</span></span>
[!code-vb[System.DateTime.Comparisons#1](~/samples/snippets/visualbasic/System.DateTime/DateTimeComparisons.vb#1)]  

### <a name="com-interop-considerations"></a><span data-ttu-id="04f47-435">COM interop 고려 사항</span><span class="sxs-lookup"><span data-stu-id="04f47-435">COM interop considerations</span></span>  

<span data-ttu-id="04f47-436">A <xref:System.DateTime> 왕복 하는 데는 COM 응용 프로그램으로 전송 되는 다음 관리 되는 응용 프로그램으로 다시 전송 되는 값 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-436">A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip.</span></span> <span data-ttu-id="04f47-437">그러나는 <xref:System.DateTime> 한 번만 지정 하는 값에는 없는 예상 대로 라운드트립 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-437">However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect.</span></span>  
  
<span data-ttu-id="04f47-438">라운드트립 오후 3 시, 최종 날짜 및 시간과 같은 시간만 C.E. 1899 년 12 월 30 일 경우</span><span class="sxs-lookup"><span data-stu-id="04f47-438">If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E.</span></span> <span data-ttu-id="04f47-439">시점 인 오후 3시, 년 1 월 1 일 대신 서 기 0001</span><span class="sxs-lookup"><span data-stu-id="04f47-439">at 3:00 P.M., instead of January, 1, 0001 C.E.</span></span> <span data-ttu-id="04f47-440">오후 3 시에</span><span class="sxs-lookup"><span data-stu-id="04f47-440">at 3:00 P.M.</span></span> <span data-ttu-id="04f47-441">.NET Framework 및 COM에는 한 번만 지정 된 경우 기본 날짜를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-441">The .NET Framework and COM assume a default date when only a time is specified.</span></span> <span data-ttu-id="04f47-442">.NET Framework는 서 기 0001 년 1 월 1 일의 기본 날짜를 가정 하는 동안 COM 시스템 C.E., 1899 년 12 월 30 일의 기본 날짜를 가정 하는 반면</span><span class="sxs-lookup"><span data-stu-id="04f47-442">However, the COM system assumes a base date of December 30, 1899 C.E., while the .NET Framework assumes a base date of January, 1, 0001 C.E.</span></span>  
  
<span data-ttu-id="04f47-443">한 번만이.NET Framework에서 COM에 전달 되 면 특수 처리는 수행 시간 com 사용 되는 형식으로 변환 하는</span><span class="sxs-lookup"><span data-stu-id="04f47-443">When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM.</span></span> <span data-ttu-id="04f47-444">.NET Framework에 COM에서 한 번만이 전달 되 면 올바른 날짜와 시간이 나 그 1899 년 12 월 30 일 이전에 손상 될 수 있으므로 없는 특별 한 처리가 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-444">When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899.</span></span> <span data-ttu-id="04f47-445">COM에서 날짜에 해당 라운드트립 시작 되 면.NET Framework 및 COM 날짜를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-445">If a date starts its round-trip from COM, the .NET Framework and COM preserve the date.</span></span>  
  
<span data-ttu-id="04f47-446">.NET Framework 및 COM의 동작으로 인해 되는 경우 응용 프로그램 왕복은 <xref:System.DateTime> 한 번만 지정 하는, 응용 프로그램을 수정 하거나 최종에서 잘못 된 날짜를 무시 기억해 야 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-446">The behavior of the .NET Framework and COM means that if your application round-trips a <xref:System.DateTime> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <xref:System.DateTime> object.</span></span>  
     
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="04f47-447">이 유형의 모든 멤버는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-447">All members of this type are thread safe.</span></span> <span data-ttu-id="04f47-448">멤버 인스턴스 상태를 수정 하려면 표시 되는 실제로 새 값으로 초기화 하는 새 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-448">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="04f47-449">으로 다른 종류와이 형식의 인스턴스를 포함 하는 공유 변수를 읽고 쓰는 보호 해야 스레드로부터 안전을 보장 하려면 잠금에 의해.</span><span class="sxs-lookup"><span data-stu-id="04f47-449">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeSpan" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-450">Initializes a new instance of the <see cref="T:System.DateTime" /> structure.</span><span class="sxs-lookup"><span data-stu-id="04f47-450">Initializes a new instance of the <see cref="T:System.DateTime" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(long ticks);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="04f47-451">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span><span class="sxs-lookup"><span data-stu-id="04f47-451">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span></span></param>
        <summary><span data-ttu-id="04f47-452">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks.</span><span class="sxs-lookup"><span data-stu-id="04f47-452">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-453"><xref:System.DateTime.Kind%2A> 속성이 <xref:System.DateTimeKind.Unspecified>으로 초기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-453">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="04f47-454">날짜 및 시간 데이터 또는 제한 수준을 표준 시간대의 어떤 이식성 인식은 중요 한 응용 프로그램을 사용할 수 있습니다는 해당 <xref:System.DateTimeOffset> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-454">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-455">다음 예제에서는 중 하나는 <xref:System.DateTime> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-455">The following example demonstrates one of the <xref:System.DateTime> constructors.</span></span>  
  
 [!code-cpp[datetime.ctor_Int64#1](~/samples/snippets/cpp/VS_Snippets_CLR/datetime.ctor_Int64/CPP/ticks.cpp#1)]
 [!code-csharp[datetime.ctor_Int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/datetime.ctor_Int64/CS/ticks.cs#1)]
 [!code-vb[datetime.ctor_Int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/datetime.ctor_Int64/VB/ticks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-456"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-456"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (long ticks, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(long ticks, DateTimeKind kind);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
        <Parameter Name="kind" Type="System.DateTimeKind" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="04f47-457">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span><span class="sxs-lookup"><span data-stu-id="04f47-457">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span></span></param>
        <param name="kind"><span data-ttu-id="04f47-458">One of the enumeration values that indicates whether <c>ticks</c> specifies a local time, Coordinated Universal Time (UTC), or neither.</span><span class="sxs-lookup"><span data-stu-id="04f47-458">One of the enumeration values that indicates whether <c>ticks</c> specifies a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="04f47-459">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</span><span class="sxs-lookup"><span data-stu-id="04f47-459">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-460">날짜 및 시간 데이터 또는 제한 수준을 표준 시간대의 어떤 이식성 인식은 중요 한 응용 프로그램을 사용할 수 있습니다는 해당 <xref:System.DateTimeOffset> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-460">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-461"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-461"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-462"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span><span class="sxs-lookup"><span data-stu-id="04f47-462"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-463">The year (1 through 9999).</span><span class="sxs-lookup"><span data-stu-id="04f47-463">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="04f47-464">The month (1 through 12).</span><span class="sxs-lookup"><span data-stu-id="04f47-464">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="04f47-465">The day (1 through the number of days in <c>month</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-465">The day (1 through the number of days in <c>month</c>).</span></span></param>
        <summary><span data-ttu-id="04f47-466">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day.</span><span class="sxs-lookup"><span data-stu-id="04f47-466">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-467">이 생성자는 해석 `year`, `month`, 및 `day` 으로 연도, 월 및 일반 달력에서 일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-467">This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="04f47-468">인스턴스화하는 <xref:System.DateTime> 호출 다른 일정에서 연도, 월 및 일을 사용 하 여 값의 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-468">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="04f47-469">결과 대 한 하루 중 시간 <xref:System.DateTime> 은 자정 (00: 00:00).</span><span class="sxs-lookup"><span data-stu-id="04f47-469">The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00).</span></span> <span data-ttu-id="04f47-470"><xref:System.DateTime.Kind%2A> 속성이 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>으로 초기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-470">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-471">다음 예제에서는 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29> 생성자를 인스턴스화하는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-471">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.</span></span> <span data-ttu-id="04f47-472">이 오버 로드 만들어지는 예에서는 또한 설명는 <xref:System.DateTime> 인 시간 구성 요소가 자정 값 (또는 0:00).</span><span class="sxs-lookup"><span data-stu-id="04f47-472">The example also illustrates that this overload creates a <xref:System.DateTime> value whose time component equals midnight (or 0:00).</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#1)]
 [!code-vb[System.DateTime.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-473"><paramref name="year" /> is less than 1 or greater than 9999.</span><span class="sxs-lookup"><span data-stu-id="04f47-473"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
 <span data-ttu-id="04f47-474">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-474">-or-</span></span>  
  
 <span data-ttu-id="04f47-475"><paramref name="month" /> is less than 1 or greater than 12.</span><span class="sxs-lookup"><span data-stu-id="04f47-475"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
 <span data-ttu-id="04f47-476">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-476">-or-</span></span>  
  
 <span data-ttu-id="04f47-477"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-477"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, System::Globalization::Calendar ^ calendar);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-478">The year (1 through the number of years in <c>calendar</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-478">The year (1 through the number of years in <c>calendar</c>).</span></span></param>
        <param name="month"><span data-ttu-id="04f47-479">The month (1 through the number of months in <c>calendar</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-479">The month (1 through the number of months in <c>calendar</c>).</span></span></param>
        <param name="day"><span data-ttu-id="04f47-480">The day (1 through the number of days in <c>month</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-480">The day (1 through the number of days in <c>month</c>).</span></span></param>
        <param name="calendar"><span data-ttu-id="04f47-481">The calendar that is used to interpret <c>year</c>, <c>month</c>, and <c>day</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-481">The calendar that is used to interpret <c>year</c>, <c>month</c>, and <c>day</c>.</span></span></param>
        <summary><span data-ttu-id="04f47-482">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day for the specified calendar.</span><span class="sxs-lookup"><span data-stu-id="04f47-482">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-483">결과 대 한 하루 중 시간 <xref:System.DateTime> 은 자정 (00: 00:00).</span><span class="sxs-lookup"><span data-stu-id="04f47-483">The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00).</span></span> <span data-ttu-id="04f47-484"><xref:System.DateTime.Kind%2A> 속성이 <xref:System.DateTimeKind.Unspecified>으로 초기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-484">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="04f47-485">사용할 수 있는 값 `year`, `month`, 및 `day` 의존 `calendar`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-485">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="04f47-486">지정 된 날짜 및 시간 사용 하 여 표시할 수 없으면 예외가 throw 됩니다 `calendar`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-486">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="04f47-487"><xref:System.Globalization> 네임 스페이스를 포함 하 여 여러 개의 달력 제공 <xref:System.Globalization.GregorianCalendar> 및 <xref:System.Globalization.JulianCalendar>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-487">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-488">다음 예제에서는 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 를 두 번 두를 인스턴스화하는 생성자 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-488">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="04f47-489">첫 번째 호출에서 인스턴스화하는 <xref:System.DateTime> 를 사용 하 여 값을 <xref:System.Globalization.PersianCalendar> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-489">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="04f47-490">페르시아력을 문화권에 대 한 기본 일정으로 지정할 수 없습니다, 때문에 개별 호출을 배포 해야 페르시아 력의 날짜를 표시할 해당 <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, 및 <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-490">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="04f47-491">생성자에 대 한 두 번째 호출에서 인스턴스화하는 <xref:System.DateTime> 를 사용 하 여 값을 <xref:System.Globalization.HijriCalendar> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-491">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="04f47-492">이 예제에서는 현재 문화권을 아랍어 (시리아)로 변경 하 고 회교식 달력에 현재 문화권의 기본 일정을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-492">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="04f47-493">회교식 현재 문화권의 기본 달력 이므로 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 메서드는 날짜를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-493">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="04f47-494">이전 현재 문화권 (여기서는 경우 영어 (미국))를 복원할 때의 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 메서드는 날짜의 서식을 지정 하려면 현재 문화권의 기본 양력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-494">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample2.cs#2)]
 [!code-vb[System.DateTime.Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-495"><paramref name="calendar" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-495"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-496"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-496"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
 <span data-ttu-id="04f47-497">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-497">-or-</span></span>  
  
 <span data-ttu-id="04f47-498"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-498"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
 <span data-ttu-id="04f47-499">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-499">-or-</span></span>  
  
 <span data-ttu-id="04f47-500"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-500"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-501">The year (1 through 9999).</span><span class="sxs-lookup"><span data-stu-id="04f47-501">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="04f47-502">The month (1 through 12).</span><span class="sxs-lookup"><span data-stu-id="04f47-502">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="04f47-503">The day (1 through the number of days in <c>month</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-503">The day (1 through the number of days in <c>month</c>).</span></span></param>
        <param name="hour"><span data-ttu-id="04f47-504">The hours (0 through 23).</span><span class="sxs-lookup"><span data-stu-id="04f47-504">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="04f47-505">The minutes (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-505">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="04f47-506">The seconds (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-506">The seconds (0 through 59).</span></span></param>
        <summary><span data-ttu-id="04f47-507">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second.</span><span class="sxs-lookup"><span data-stu-id="04f47-507">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-508"><xref:System.DateTime.Kind%2A> 속성이 <xref:System.DateTimeKind.Unspecified>으로 초기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-508">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="04f47-509">이 생성자는 해석`year`, `month`, 및 `day` 으로 연도, 월 및 일반 달력에서 일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-509">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="04f47-510">인스턴스화하는 <xref:System.DateTime> 호출 다른 일정에서 연도, 월 및 일을 사용 하 여 값의 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-510">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="04f47-511">날짜 및 시간 데이터 또는 제한 수준을 표준 시간대의 어떤 이식성 인식은 중요 한 응용 프로그램을 사용할 수 있습니다는 해당 <xref:System.DateTimeOffset> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-511">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-512">다음 예제에서는 <xref:System.DateTime.%23ctor%2A> 생성자를 인스턴스화하는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-512">The following example uses the <xref:System.DateTime.%23ctor%2A> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#3)]
 [!code-vb[System.DateTime.Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-513"><paramref name="year" /> is less than 1 or greater than 9999.</span><span class="sxs-lookup"><span data-stu-id="04f47-513"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
 <span data-ttu-id="04f47-514">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-514">-or-</span></span>  
  
 <span data-ttu-id="04f47-515"><paramref name="month" /> is less than 1 or greater than 12.</span><span class="sxs-lookup"><span data-stu-id="04f47-515"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
 <span data-ttu-id="04f47-516">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-516">-or-</span></span>  
  
 <span data-ttu-id="04f47-517"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-517"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
 <span data-ttu-id="04f47-518">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-518">-or-</span></span>  
  
 <span data-ttu-id="04f47-519"><paramref name="hour" /> is less than 0 or greater than 23.</span><span class="sxs-lookup"><span data-stu-id="04f47-519"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
 <span data-ttu-id="04f47-520">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-520">-or-</span></span>  
  
 <span data-ttu-id="04f47-521"><paramref name="minute" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-521"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-522">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-522">-or-</span></span>  
  
 <span data-ttu-id="04f47-523"><paramref name="second" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-523"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="kind" Type="System.DateTimeKind" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-524">The year (1 through 9999).</span><span class="sxs-lookup"><span data-stu-id="04f47-524">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="04f47-525">The month (1 through 12).</span><span class="sxs-lookup"><span data-stu-id="04f47-525">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="04f47-526">The day (1 through the number of days in <c>month</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-526">The day (1 through the number of days in <c>month</c>).</span></span></param>
        <param name="hour"><span data-ttu-id="04f47-527">The hours (0 through 23).</span><span class="sxs-lookup"><span data-stu-id="04f47-527">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="04f47-528">The minutes (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-528">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="04f47-529">The seconds (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-529">The seconds (0 through 59).</span></span></param>
        <param name="kind"><span data-ttu-id="04f47-530">One of the enumeration values that indicates whether <c>year</c>, <c>month</c>, <c>day</c>, <c>hour</c>, <c>minute</c> and <c>second</c> specify a local time, Coordinated Universal Time (UTC), or neither.</span><span class="sxs-lookup"><span data-stu-id="04f47-530">One of the enumeration values that indicates whether <c>year</c>, <c>month</c>, <c>day</c>, <c>hour</c>, <c>minute</c> and <c>second</c> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="04f47-531">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</span><span class="sxs-lookup"><span data-stu-id="04f47-531">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-532">이 생성자는 해석`year`, `month`, 및 `day` 으로 연도, 월 및 일반 달력에서 일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-532">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="04f47-533">인스턴스화하는 <xref:System.DateTime> 호출 다른 일정에서 연도, 월 및 일을 사용 하 여 값의 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-533">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.</span></span>  
  
 <span data-ttu-id="04f47-534">날짜 및 시간 데이터 또는 제한 수준을 표준 시간대의 어떤 이식성 인식은 중요 한 응용 프로그램을 사용할 수 있습니다는 해당 <xref:System.DateTimeOffset> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-534">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-535">다음 예제에서는 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> 생성자를 인스턴스화하는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-535">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#7)]
 [!code-vb[System.DateTime.Constructor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-536"><paramref name="year" /> is less than 1 or greater than 9999.</span><span class="sxs-lookup"><span data-stu-id="04f47-536"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
 <span data-ttu-id="04f47-537">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-537">-or-</span></span>  
  
 <span data-ttu-id="04f47-538"><paramref name="month" /> is less than 1 or greater than 12.</span><span class="sxs-lookup"><span data-stu-id="04f47-538"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
 <span data-ttu-id="04f47-539">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-539">-or-</span></span>  
  
 <span data-ttu-id="04f47-540"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-540"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
 <span data-ttu-id="04f47-541">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-541">-or-</span></span>  
  
 <span data-ttu-id="04f47-542"><paramref name="hour" /> is less than 0 or greater than 23.</span><span class="sxs-lookup"><span data-stu-id="04f47-542"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
 <span data-ttu-id="04f47-543">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-543">-or-</span></span>  
  
 <span data-ttu-id="04f47-544"><paramref name="minute" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-544"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-545">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-545">-or-</span></span>  
  
 <span data-ttu-id="04f47-546"><paramref name="second" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-546"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-547"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span><span class="sxs-lookup"><span data-stu-id="04f47-547"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, System::Globalization::Calendar ^ calendar);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-548">The year (1 through the number of years in <c>calendar</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-548">The year (1 through the number of years in <c>calendar</c>).</span></span></param>
        <param name="month"><span data-ttu-id="04f47-549">The month (1 through the number of months in <c>calendar</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-549">The month (1 through the number of months in <c>calendar</c>).</span></span></param>
        <param name="day"><span data-ttu-id="04f47-550">The day (1 through the number of days in <c>month</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-550">The day (1 through the number of days in <c>month</c>).</span></span></param>
        <param name="hour"><span data-ttu-id="04f47-551">The hours (0 through 23).</span><span class="sxs-lookup"><span data-stu-id="04f47-551">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="04f47-552">The minutes (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-552">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="04f47-553">The seconds (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-553">The seconds (0 through 59).</span></span></param>
        <param name="calendar"><span data-ttu-id="04f47-554">The calendar that is used to interpret <c>year</c>, <c>month</c>, and <c>day</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-554">The calendar that is used to interpret <c>year</c>, <c>month</c>, and <c>day</c>.</span></span></param>
        <summary><span data-ttu-id="04f47-555">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second for the specified calendar.</span><span class="sxs-lookup"><span data-stu-id="04f47-555">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-556"><xref:System.DateTime.Kind%2A> 속성이 <xref:System.DateTimeKind.Unspecified>으로 초기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-556">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="04f47-557">사용할 수 있는 값 `year`, `month`, 및 `day` 의존 `calendar`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-557">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="04f47-558">지정 된 날짜 및 시간 사용 하 여 표시할 수 없으면 예외가 throw 됩니다 `calendar`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-558">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="04f47-559"><xref:System.Globalization> 네임 스페이스를 포함 하 여 여러 개의 달력 제공 <xref:System.Globalization.GregorianCalendar> 및 <xref:System.Globalization.JulianCalendar>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-559">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-560">다음 예제에서는 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 를 두 번 두를 인스턴스화하는 생성자 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-560">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="04f47-561">첫 번째 호출에서 인스턴스화하는 <xref:System.DateTime> 를 사용 하 여 값을 <xref:System.Globalization.PersianCalendar> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-561">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="04f47-562">페르시아력을 문화권에 대 한 기본 일정으로 지정할 수 없습니다, 때문에 개별 호출을 배포 해야 페르시아 력의 날짜를 표시할 해당 <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, 및 <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-562">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="04f47-563">생성자에 대 한 두 번째 호출에서 인스턴스화하는 <xref:System.DateTime> 를 사용 하 여 값을 <xref:System.Globalization.HijriCalendar> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-563">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="04f47-564">이 예제에서는 현재 문화권을 아랍어 (시리아)로 변경 하 고 회교식 달력에 현재 문화권의 기본 일정을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-564">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="04f47-565">회교식 현재 문화권의 기본 달력 이므로 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 메서드는 날짜를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-565">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="04f47-566">이전 현재 문화권 (여기서는 경우 영어 (미국))를 복원할 때의 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 메서드는 날짜의 서식을 지정 하려면 현재 문화권의 기본 양력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-566">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample4.cs#4)]
 [!code-vb[System.DateTime.Constructor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-567"><paramref name="calendar" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-567"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-568"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-568"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
 <span data-ttu-id="04f47-569">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-569">-or-</span></span>  
  
 <span data-ttu-id="04f47-570"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-570"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
 <span data-ttu-id="04f47-571">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-571">-or-</span></span>  
  
 <span data-ttu-id="04f47-572"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-572"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
 <span data-ttu-id="04f47-573">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-573">-or-</span></span>  
  
 <span data-ttu-id="04f47-574"><paramref name="hour" /> is less than 0 or greater than 23</span><span class="sxs-lookup"><span data-stu-id="04f47-574"><paramref name="hour" /> is less than 0 or greater than 23</span></span>  
  
 <span data-ttu-id="04f47-575">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-575">-or-</span></span>  
  
 <span data-ttu-id="04f47-576"><paramref name="minute" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-576"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-577">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-577">-or-</span></span>  
  
 <span data-ttu-id="04f47-578"><paramref name="second" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-578"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-579">The year (1 through 9999).</span><span class="sxs-lookup"><span data-stu-id="04f47-579">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="04f47-580">The month (1 through 12).</span><span class="sxs-lookup"><span data-stu-id="04f47-580">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="04f47-581">The day (1 through the number of days in <c>month</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-581">The day (1 through the number of days in <c>month</c>).</span></span></param>
        <param name="hour"><span data-ttu-id="04f47-582">The hours (0 through 23).</span><span class="sxs-lookup"><span data-stu-id="04f47-582">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="04f47-583">The minutes (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-583">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="04f47-584">The seconds (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-584">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="04f47-585">The milliseconds (0 through 999).</span><span class="sxs-lookup"><span data-stu-id="04f47-585">The milliseconds (0 through 999).</span></span></param>
        <summary><span data-ttu-id="04f47-586">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond.</span><span class="sxs-lookup"><span data-stu-id="04f47-586">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-587">이 생성자는 해석`year`, `month`, 및 `day` 으로 연도, 월 및 일반 달력에서 일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-587">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="04f47-588">인스턴스화하는 <xref:System.DateTime> 호출 다른 일정에서 연도, 월 및 일을 사용 하 여 값의 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-588">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="04f47-589"><xref:System.DateTime.Kind%2A> 속성이 <xref:System.DateTimeKind.Unspecified>으로 초기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-589">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="04f47-590">날짜 및 시간 데이터 또는 제한 수준을 표준 시간대의 어떤 이식성 인식은 중요 한 응용 프로그램을 사용할 수 있습니다는 해당 <xref:System.DateTimeOffset> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-590">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-591">다음 예제에서는 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> 생성자를 인스턴스화하는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-591">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#5)]
 [!code-vb[System.DateTime.Constructor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-592"><paramref name="year" /> is less than 1 or greater than 9999.</span><span class="sxs-lookup"><span data-stu-id="04f47-592"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
 <span data-ttu-id="04f47-593">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-593">-or-</span></span>  
  
 <span data-ttu-id="04f47-594"><paramref name="month" /> is less than 1 or greater than 12.</span><span class="sxs-lookup"><span data-stu-id="04f47-594"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
 <span data-ttu-id="04f47-595">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-595">-or-</span></span>  
  
 <span data-ttu-id="04f47-596"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-596"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
 <span data-ttu-id="04f47-597">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-597">-or-</span></span>  
  
 <span data-ttu-id="04f47-598"><paramref name="hour" /> is less than 0 or greater than 23.</span><span class="sxs-lookup"><span data-stu-id="04f47-598"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
 <span data-ttu-id="04f47-599">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-599">-or-</span></span>  
  
 <span data-ttu-id="04f47-600"><paramref name="minute" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-600"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-601">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-601">-or-</span></span>  
  
 <span data-ttu-id="04f47-602"><paramref name="second" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-602"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-603">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-603">-or-</span></span>  
  
 <span data-ttu-id="04f47-604"><paramref name="millisecond" /> is less than 0 or greater than 999.</span><span class="sxs-lookup"><span data-stu-id="04f47-604"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="kind" Type="System.DateTimeKind" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-605">The year (1 through 9999).</span><span class="sxs-lookup"><span data-stu-id="04f47-605">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="04f47-606">The month (1 through 12).</span><span class="sxs-lookup"><span data-stu-id="04f47-606">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="04f47-607">The day (1 through the number of days in <c>month</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-607">The day (1 through the number of days in <c>month</c>).</span></span></param>
        <param name="hour"><span data-ttu-id="04f47-608">The hours (0 through 23).</span><span class="sxs-lookup"><span data-stu-id="04f47-608">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="04f47-609">The minutes (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-609">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="04f47-610">The seconds (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-610">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="04f47-611">The milliseconds (0 through 999).</span><span class="sxs-lookup"><span data-stu-id="04f47-611">The milliseconds (0 through 999).</span></span></param>
        <param name="kind"><span data-ttu-id="04f47-612">One of the enumeration values that indicates whether <c>year</c>, <c>month</c>, <c>day</c>, <c>hour</c>, <c>minute</c>, <c>second</c>, and <c>millisecond</c> specify a local time, Coordinated Universal Time (UTC), or neither.</span><span class="sxs-lookup"><span data-stu-id="04f47-612">One of the enumeration values that indicates whether <c>year</c>, <c>month</c>, <c>day</c>, <c>hour</c>, <c>minute</c>, <c>second</c>, and <c>millisecond</c> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="04f47-613">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</span><span class="sxs-lookup"><span data-stu-id="04f47-613">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-614">이 생성자는 해석`year`, `month`, 및 `day` 으로 연도, 월 및 일반 달력에서 일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-614">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="04f47-615">인스턴스화하는 <xref:System.DateTime> 호출 다른 일정에서 연도, 월 및 일을 사용 하 여 값의 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-615">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.</span></span>  
  
 <span data-ttu-id="04f47-616">날짜 및 시간 데이터 또는 제한 수준을 표준 시간대의 어떤 이식성 인식은 중요 한 응용 프로그램을 사용할 수 있습니다는 해당 <xref:System.DateTimeOffset> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-616">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-617">다음 예제에서는 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> 생성자를 인스턴스화하는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-617">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#8)]
 [!code-vb[System.DateTime.Constructor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-618"><paramref name="year" /> is less than 1 or greater than 9999.</span><span class="sxs-lookup"><span data-stu-id="04f47-618"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
 <span data-ttu-id="04f47-619">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-619">-or-</span></span>  
  
 <span data-ttu-id="04f47-620"><paramref name="month" /> is less than 1 or greater than 12.</span><span class="sxs-lookup"><span data-stu-id="04f47-620"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
 <span data-ttu-id="04f47-621">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-621">-or-</span></span>  
  
 <span data-ttu-id="04f47-622"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-622"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
 <span data-ttu-id="04f47-623">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-623">-or-</span></span>  
  
 <span data-ttu-id="04f47-624"><paramref name="hour" /> is less than 0 or greater than 23.</span><span class="sxs-lookup"><span data-stu-id="04f47-624"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
 <span data-ttu-id="04f47-625">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-625">-or-</span></span>  
  
 <span data-ttu-id="04f47-626"><paramref name="minute" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-626"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-627">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-627">-or-</span></span>  
  
 <span data-ttu-id="04f47-628"><paramref name="second" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-628"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-629">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-629">-or-</span></span>  
  
 <span data-ttu-id="04f47-630"><paramref name="millisecond" /> is less than 0 or greater than 999.</span><span class="sxs-lookup"><span data-stu-id="04f47-630"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-631"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span><span class="sxs-lookup"><span data-stu-id="04f47-631"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-632">The year (1 through the number of years in <c>calendar</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-632">The year (1 through the number of years in <c>calendar</c>).</span></span></param>
        <param name="month"><span data-ttu-id="04f47-633">The month (1 through the number of months in <c>calendar</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-633">The month (1 through the number of months in <c>calendar</c>).</span></span></param>
        <param name="day"><span data-ttu-id="04f47-634">The day (1 through the number of days in <c>month</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-634">The day (1 through the number of days in <c>month</c>).</span></span></param>
        <param name="hour"><span data-ttu-id="04f47-635">The hours (0 through 23).</span><span class="sxs-lookup"><span data-stu-id="04f47-635">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="04f47-636">The minutes (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-636">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="04f47-637">The seconds (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-637">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="04f47-638">The milliseconds (0 through 999).</span><span class="sxs-lookup"><span data-stu-id="04f47-638">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="04f47-639">The calendar that is used to interpret <c>year</c>, <c>month</c>, and <c>day</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-639">The calendar that is used to interpret <c>year</c>, <c>month</c>, and <c>day</c>.</span></span></param>
        <summary><span data-ttu-id="04f47-640">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.</span><span class="sxs-lookup"><span data-stu-id="04f47-640">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-641"><xref:System.DateTime.Kind%2A> 속성이 <xref:System.DateTimeKind.Unspecified>으로 초기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-641">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="04f47-642">사용할 수 있는 값 `year`, `month`, 및 `day` 의존 `calendar`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-642">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="04f47-643">지정 된 날짜 및 시간 사용 하 여 표시할 수 없으면 예외가 throw 됩니다 `calendar`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-643">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="04f47-644">날짜 및 시간 데이터 또는 제한 수준을 표준 시간대의 어떤 이식성 인식은 중요 한 응용 프로그램을 사용할 수 있습니다는 해당 <xref:System.DateTimeOffset> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-644">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
 <span data-ttu-id="04f47-645"><xref:System.Globalization> 네임 스페이스를 포함 하 여 여러 개의 달력 제공 <xref:System.Globalization.GregorianCalendar> 및 <xref:System.Globalization.JulianCalendar>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-645">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-646">다음 예제에서는 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> 를 두 번 두를 인스턴스화하는 생성자 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-646">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="04f47-647">첫 번째 호출에서 인스턴스화하는 <xref:System.DateTime> 를 사용 하 여 값을 <xref:System.Globalization.PersianCalendar> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-647">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="04f47-648">페르시아력을 문화권에 대 한 기본 일정으로 지정할 수 없습니다, 때문에 개별 호출을 배포 해야 페르시아 력의 날짜를 표시할 해당 <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, 및 <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-648">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="04f47-649">생성자에 대 한 두 번째 호출에서 인스턴스화하는 <xref:System.DateTime> 를 사용 하 여 값을 <xref:System.Globalization.HijriCalendar> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-649">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="04f47-650">이 예제에서는 현재 문화권을 아랍어 (시리아)로 변경 하 고 회교식 달력에 현재 문화권의 기본 일정을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-650">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="04f47-651">회교식 현재 문화권의 기본 달력 이므로 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 메서드는 날짜를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-651">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="04f47-652">이전 현재 문화권 (여기서는 경우 영어 (미국))를 복원할 때의 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 메서드는 날짜의 서식을 지정 하려면 현재 문화권의 기본 양력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-652">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample6.cs#6)]
 [!code-vb[System.DateTime.Constructor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-653"><paramref name="calendar" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-653"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-654"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-654"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
 <span data-ttu-id="04f47-655">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-655">-or-</span></span>  
  
 <span data-ttu-id="04f47-656"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-656"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
 <span data-ttu-id="04f47-657">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-657">-or-</span></span>  
  
 <span data-ttu-id="04f47-658"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-658"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
 <span data-ttu-id="04f47-659">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-659">-or-</span></span>  
  
 <span data-ttu-id="04f47-660"><paramref name="hour" /> is less than 0 or greater than 23.</span><span class="sxs-lookup"><span data-stu-id="04f47-660"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
 <span data-ttu-id="04f47-661">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-661">-or-</span></span>  
  
 <span data-ttu-id="04f47-662"><paramref name="minute" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-662"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-663">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-663">-or-</span></span>  
  
 <span data-ttu-id="04f47-664"><paramref name="second" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-664"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-665">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-665">-or-</span></span>  
  
 <span data-ttu-id="04f47-666"><paramref name="millisecond" /> is less than 0 or greater than 999.</span><span class="sxs-lookup"><span data-stu-id="04f47-666"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar, DateTimeKind kind);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
        <Parameter Name="kind" Type="System.DateTimeKind" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-667">The year (1 through the number of years in <c>calendar</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-667">The year (1 through the number of years in <c>calendar</c>).</span></span></param>
        <param name="month"><span data-ttu-id="04f47-668">The month (1 through the number of months in <c>calendar</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-668">The month (1 through the number of months in <c>calendar</c>).</span></span></param>
        <param name="day"><span data-ttu-id="04f47-669">The day (1 through the number of days in <c>month</c>).</span><span class="sxs-lookup"><span data-stu-id="04f47-669">The day (1 through the number of days in <c>month</c>).</span></span></param>
        <param name="hour"><span data-ttu-id="04f47-670">The hours (0 through 23).</span><span class="sxs-lookup"><span data-stu-id="04f47-670">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="04f47-671">The minutes (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-671">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="04f47-672">The seconds (0 through 59).</span><span class="sxs-lookup"><span data-stu-id="04f47-672">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="04f47-673">The milliseconds (0 through 999).</span><span class="sxs-lookup"><span data-stu-id="04f47-673">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="04f47-674">The calendar that is used to interpret <c>year</c>, <c>month</c>, and <c>day</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-674">The calendar that is used to interpret <c>year</c>, <c>month</c>, and <c>day</c>.</span></span></param>
        <param name="kind"><span data-ttu-id="04f47-675">One of the enumeration values that indicates whether <c>year</c>, <c>month</c>, <c>day</c>, <c>hour</c>, <c>minute</c>, <c>second</c>, and <c>millisecond</c> specify a local time, Coordinated Universal Time (UTC), or neither.</span><span class="sxs-lookup"><span data-stu-id="04f47-675">One of the enumeration values that indicates whether <c>year</c>, <c>month</c>, <c>day</c>, <c>hour</c>, <c>minute</c>, <c>second</c>, and <c>millisecond</c> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="04f47-676">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.</span><span class="sxs-lookup"><span data-stu-id="04f47-676">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-677">사용할 수 있는 값 `year`, `month`, 및 `day` 에 종속 된 매개 변수는 `calendar` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-677">The allowable values for `year`, `month`, and `day` parameters depend on the `calendar` parameter.</span></span> <span data-ttu-id="04f47-678">지정 된 날짜 및 시간 사용 하 여 표시할 수 없으면 예외가 throw 됩니다 `calendar`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-678">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="04f47-679">날짜 및 시간 데이터 또는 제한 수준을 표준 시간대의 어떤 이식성 인식은 중요 한 응용 프로그램을 사용할 수 있습니다는 해당 <xref:System.DateTimeOffset> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-679">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
 <span data-ttu-id="04f47-680"><xref:System.Globalization> 네임 스페이스를 포함 하 여 여러 개의 달력 제공 <xref:System.Globalization.GregorianCalendar> 및 <xref:System.Globalization.JulianCalendar>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-680">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-681">다음 예제에서는 <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> 를 두 번 두를 인스턴스화하는 생성자 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-681">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="04f47-682">첫 번째 호출에서 인스턴스화하는 <xref:System.DateTime> 를 사용 하 여 값을 <xref:System.Globalization.PersianCalendar> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-682">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="04f47-683">페르시아력을 문화권에 대 한 기본 일정으로 지정할 수 없습니다, 때문에 개별 호출을 배포 해야 페르시아 력의 날짜를 표시할 해당 <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, 및 <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-683">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="04f47-684">생성자에 대 한 두 번째 호출에서 인스턴스화하는 <xref:System.DateTime> 를 사용 하 여 값을 <xref:System.Globalization.HijriCalendar> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-684">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="04f47-685">이 예제에서는 현재 문화권을 아랍어 (시리아)로 변경 하 고 회교식 달력에 현재 문화권의 기본 일정을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-685">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="04f47-686">회교식 현재 문화권의 기본 달력 이므로 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 메서드는 날짜를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-686">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="04f47-687">이전 현재 문화권 (여기서는 경우 영어 (미국))를 복원할 때의 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 메서드는 날짜의 서식을 지정 하려면 현재 문화권의 기본 양력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-687">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample9.cs#9)]
 [!code-vb[System.DateTime.Constructor#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample9.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-688"><paramref name="calendar" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-688"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-689"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-689"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
 <span data-ttu-id="04f47-690">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-690">-or-</span></span>  
  
 <span data-ttu-id="04f47-691"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-691"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
 <span data-ttu-id="04f47-692">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-692">-or-</span></span>  
  
 <span data-ttu-id="04f47-693"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-693"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
 <span data-ttu-id="04f47-694">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-694">-or-</span></span>  
  
 <span data-ttu-id="04f47-695"><paramref name="hour" /> is less than 0 or greater than 23.</span><span class="sxs-lookup"><span data-stu-id="04f47-695"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
 <span data-ttu-id="04f47-696">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-696">-or-</span></span>  
  
 <span data-ttu-id="04f47-697"><paramref name="minute" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-697"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-698">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-698">-or-</span></span>  
  
 <span data-ttu-id="04f47-699"><paramref name="second" /> is less than 0 or greater than 59.</span><span class="sxs-lookup"><span data-stu-id="04f47-699"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
 <span data-ttu-id="04f47-700">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-700">-or-</span></span>  
  
 <span data-ttu-id="04f47-701"><paramref name="millisecond" /> is less than 0 or greater than 999.</span><span class="sxs-lookup"><span data-stu-id="04f47-701"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-702"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span><span class="sxs-lookup"><span data-stu-id="04f47-702"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public DateTime Add (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime Add(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Add(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime Add(TimeSpan value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-703">A positive or negative time interval.</span><span class="sxs-lookup"><span data-stu-id="04f47-703">A positive or negative time interval.</span></span></param>
        <summary><span data-ttu-id="04f47-704">Returns a new <see cref="T:System.DateTime" /> that adds the value of the specified <see cref="T:System.TimeSpan" /> to the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-704">Returns a new <see cref="T:System.DateTime" /> that adds the value of the specified <see cref="T:System.TimeSpan" /> to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-705">An object whose value is the sum of the date and time represented by this instance and the time interval represented by <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-705">An object whose value is the sum of the date and time represented by this instance and the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-706">사용할 수는 <xref:System.DateTime.Add%2A> 메서드를 한 번에 여러 종류의 시간 간격 (일, 시, 분, 초 또는 밀리초)을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-706">You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.</span></span> <span data-ttu-id="04f47-707">이 메서드의 동작은를 더하기 연산자의 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-707">This method's behavior is identical to that of the addition operator.</span></span> <span data-ttu-id="04f47-708"><xref:System.DateTime> 구조 특수 더하기 메서드도 지원 (같은 <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, 및 <xref:System.DateTime.AddMinutes%2A>) 각 시간 간격에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-708">The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval.</span></span>  
  
 <span data-ttu-id="04f47-709"><xref:System.DateTime.Add%2A> 바이어스를 계정 윤년 및 날짜를 계산 하는 달의 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-709">The <xref:System.DateTime.Add%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.</span></span>  
  
 <span data-ttu-id="04f47-710">이 메서드는이 값을 변경 하지 않습니다 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-710">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="04f47-711">대신, 새 반환 <xref:System.DateTime> 값은이 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-711">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span> <span data-ttu-id="04f47-712"><xref:System.DateTime.Kind%2A> 새 속성 <xref:System.DateTime> 인스턴스는 현재 인스턴스와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-712">The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-713">다음 예제는 <xref:System.DateTime.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-713">The following example demonstrates the <xref:System.DateTime.Add%2A> method.</span></span> <span data-ttu-id="04f47-714">이 순간부터 36 일 (864 시간)은 일자를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-714">It calculates the day of the week that is 36 days (864 hours) from this moment.</span></span>  
  
 [!code-cpp[DateTime.Add#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Add/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Add/CS/class1.cs#1)]
 [!code-vb[DateTime.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Add/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-715">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-715">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="M:System.TimeSpan.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public DateTime AddDays (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddDays(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDays (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddDays(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-716">A number of whole and fractional days.</span><span class="sxs-lookup"><span data-stu-id="04f47-716">A number of whole and fractional days.</span></span> <span data-ttu-id="04f47-717">The <c>value</c> parameter can be negative or positive.</span><span class="sxs-lookup"><span data-stu-id="04f47-717">The <c>value</c> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="04f47-718">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of days to the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-718">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of days to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-719">An object whose value is the sum of the date and time represented by this instance and the number of days represented by <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-719">An object whose value is the sum of the date and time represented by this instance and the number of days represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-720">이 메서드는이 값을 변경 하지 않습니다 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-720">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="04f47-721">대신, 새 반환 <xref:System.DateTime> 값은이 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-721">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="04f47-722">소수 부분 `value` 하루 소수 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-722">The fractional part of `value` is the fractional part of a day.</span></span> <span data-ttu-id="04f47-723">예를 들어 4.5는 4 일, 12 시간, 0 분을 0 초, 0 밀리초와 틱 수가 0에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-723">For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="04f47-724">`value` 매개 변수는 밀리초 단위로 반올림 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-724">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
 <span data-ttu-id="04f47-725"><xref:System.DateTime.AddDays%2A> 바이어스를 계정 윤년 및 날짜를 계산 하는 달의 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-725">The <xref:System.DateTime.AddDays%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-726">사용 하 여 다음 예제는 <xref:System.DateTime.AddDays%2A> 요일을 36 일수가 현재 날짜를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-726">The following example uses the <xref:System.DateTime.AddDays%2A> method to determine the day of the week 36 days after the current date.</span></span>  
  
 [!code-cpp[DateTime.AddDays#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.AddDays/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.AddDays#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.AddDays/CS/class1.cs#1)]
 [!code-vb[DateTime.AddDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.AddDays/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-727">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-727">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public DateTime AddHours (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddHours(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHours (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddHours(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-728">A number of whole and fractional hours.</span><span class="sxs-lookup"><span data-stu-id="04f47-728">A number of whole and fractional hours.</span></span> <span data-ttu-id="04f47-729">The <c>value</c> parameter can be negative or positive.</span><span class="sxs-lookup"><span data-stu-id="04f47-729">The <c>value</c> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="04f47-730">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of hours to the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-730">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of hours to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-731">An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-731">An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-732">이 메서드는이 값을 변경 하지 않습니다 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-732">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="04f47-733">대신, 새 반환 <xref:System.DateTime> 값은이 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-733">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span> <span data-ttu-id="04f47-734"><xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체가 다음 구문과 같습니다 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-734">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is the same as that of `value`.</span></span>  
  
 <span data-ttu-id="04f47-735">소수 부분 `value` 시간의 소수 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-735">The fractional part of `value` is the fractional part of an hour.</span></span> <span data-ttu-id="04f47-736">예를 들어 4.5는 4 시간, 30 분을 0 초, 0 밀리초와 틱 수가 0에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-736">For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="04f47-737">`value` 매개 변수는 밀리초 단위로 반올림 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-737">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
 <span data-ttu-id="04f47-738">1 시간 보다 작은 시간 간격을 소수로 변환 하면 결과 종료 되지 않는 순환 소수인 하는 경우 정밀도 손실이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-738">Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal.</span></span> <span data-ttu-id="04f47-739">(예를 들어 1 분은 0.016667 시간에 해당 합니다.) 이 점이 문제가 될 경우 사용할 수 있습니다는 <xref:System.DateTime.Add%2A> 메서드를 단일 메서드 호출에서 여러 종류의 시간 간격을 지정할 수 있으며 특정 시간 간격을 1 시간 변환할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-739">(For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-740">다음 예제에서는 <xref:System.DateTime.AddHours%2A> 날짜와 시간으로 정수 부분과 소수 부분 값의 수를 추가 하려면 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-740">The following example uses the <xref:System.DateTime.AddHours%2A> method to add a number of whole and fractional values to a date and time.</span></span> <span data-ttu-id="04f47-741">또한 메서드는 소수 부분을 포함 하는 값을 전달 하 여 발생 하는 정밀도 손실을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-741">It also illustrates the loss of precision caused by passing the method a value that includes a fractional component.</span></span>  
  
 [!code-csharp[System.DateTime.AddHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.AddHours/cs/AddHours1.cs#1)]
 [!code-vb[System.DateTime.AddHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.AddHours/vb/AddHours1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-742">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-742">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public DateTime AddMilliseconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMilliseconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMilliseconds (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMilliseconds(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-743">A number of whole and fractional milliseconds.</span><span class="sxs-lookup"><span data-stu-id="04f47-743">A number of whole and fractional milliseconds.</span></span> <span data-ttu-id="04f47-744">The <c>value</c> parameter can be negative or positive.</span><span class="sxs-lookup"><span data-stu-id="04f47-744">The <c>value</c> parameter can be negative or positive.</span></span> <span data-ttu-id="04f47-745">Note that this value is rounded to the nearest integer.</span><span class="sxs-lookup"><span data-stu-id="04f47-745">Note that this value is rounded to the nearest integer.</span></span></param>
        <summary><span data-ttu-id="04f47-746">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of milliseconds to the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-746">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of milliseconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-747">An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-747">An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-748">이 메서드는이 값을 변경 하지 않습니다 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-748">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="04f47-749">대신, 새 반환 <xref:System.DateTime> 값은이 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-749">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="04f47-750">소수 부분 `value` 밀리초의 소수 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-750">The fractional part of `value` is the fractional part of a millisecond.</span></span> <span data-ttu-id="04f47-751">예를 들어 4.5는 4 밀리초 5000 틱을 밀리초 단위로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-751">For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.</span></span>  
  
 <span data-ttu-id="04f47-752">`value` 매개 변수는 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-752">The `value` parameter is rounded to the nearest integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-753">다음 예제에서는 <xref:System.DateTime.AddMilliseconds%2A> 1 밀리초 및 1.5 시간 (밀리초)을 추가 하는 메서드는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-753">The following example uses the <xref:System.DateTime.AddMilliseconds%2A> method to add one millisecond and 1.5 milliseconds to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="04f47-754">그런 다음 각각의 새 값을 표시 하 고 원래 값의 차이 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-754">It then displays each new value and displays the difference between it and the original value.</span></span> <span data-ttu-id="04f47-755">차이 시간 범위와 틱 수가 모두 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-755">The difference is displayed both as a time span and as a number of ticks.</span></span> <span data-ttu-id="04f47-756">예제에서는 밀리초 equals 10, 000 틱 하나 분명 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-756">The example makes it clear that one millisecond equals 10,000 ticks.</span></span> <span data-ttu-id="04f47-757">또한 추가; 수행 하기 전에 소수 자릿수 밀리초를 반올림 하는 표시 <xref:System.DateTime> 원래 날짜에 1.5 밀리초 추가한 결과인 값은 원래 날짜 보다 큰 2 밀리초.</span><span class="sxs-lookup"><span data-stu-id="04f47-757">It also shows that fractional milliseconds are rounded before performing the addition; the <xref:System.DateTime> value that results from adding 1.5 milliseconds to the original date is 2 milliseconds greater than the original date.</span></span>  
  
 [!code-csharp[System.DateTime.AddMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmilliseconds/cs/addmilliseconds2.cs#1)]
 [!code-vb[System.DateTime.AddMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmilliseconds/vb/addmilliseconds2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-758">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-758">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public DateTime AddMinutes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMinutes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMinutes (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMinutes(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-759">A number of whole and fractional minutes.</span><span class="sxs-lookup"><span data-stu-id="04f47-759">A number of whole and fractional minutes.</span></span> <span data-ttu-id="04f47-760">The <c>value</c> parameter can be negative or positive.</span><span class="sxs-lookup"><span data-stu-id="04f47-760">The <c>value</c> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="04f47-761">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of minutes to the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-761">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of minutes to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-762">An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-762">An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-763">이 메서드는이 값을 변경 하지 않습니다 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-763">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="04f47-764">대신, 새 반환 <xref:System.DateTime> 값은이 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-764">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="04f47-765">소수 부분 `value` 분의 소수 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-765">The fractional part of `value` is the fractional part of a minute.</span></span> <span data-ttu-id="04f47-766">예를 들어 4.5는 4 분, 30 초, 0 밀리초와 틱 수가 0에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-766">For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="04f47-767">`value` 매개 변수는 밀리초 단위로 반올림 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-767">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-768">다음 예제에서는 <xref:System.DateTime.AddMinutes%2A> 날짜와 시간으로 정수 부분과 소수 부분 값의 수를 추가 하려면 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-768">The following example uses the <xref:System.DateTime.AddMinutes%2A> method to add a number of whole and fractional values to a date and time.</span></span>  
  
 [!code-cpp[System.DateTime.AddMinutes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.addminutes/cpp/addminutes1.cpp#1)]
 [!code-csharp[System.DateTime.AddMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addminutes/cs/addminutes1.cs#1)]
 [!code-vb[System.DateTime.AddMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addminutes/vb/addminutes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-769">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-769">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public DateTime AddMonths (int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMonths(int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMonths(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMonths (months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMonths(int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="months"><span data-ttu-id="04f47-770">A number of months.</span><span class="sxs-lookup"><span data-stu-id="04f47-770">A number of months.</span></span> <span data-ttu-id="04f47-771">The <c>months</c> parameter can be negative or positive.</span><span class="sxs-lookup"><span data-stu-id="04f47-771">The <c>months</c> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="04f47-772">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of months to the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-772">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of months to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-773">An object whose value is the sum of the date and time represented by this instance and <paramref name="months" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-773">An object whose value is the sum of the date and time represented by this instance and <paramref name="months" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-774">이 메서드는이 값을 변경 하지 않습니다 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-774">This method does not change the value of this <xref:System.DateTime> object.</span></span> <span data-ttu-id="04f47-775">대신, 새 반환 <xref:System.DateTime> 이 작업의 결과 값을 가진 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-775">Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="04f47-776"><xref:System.DateTime.AddMonths%2A> 메서드 계산 결과 월 및 연도, 윤년 및 한 달의 일 수를 다음 결과의 일 부분을 조정 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-776">The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object.</span></span> <span data-ttu-id="04f47-777">결과 일 결과 월에 있는 유효한 날 없으면 결과 월의 마지막 유효 날짜가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-777">If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used.</span></span> <span data-ttu-id="04f47-778">예, 3 월 31 일를 + 1 개월에 대 한 4 월 30 일이 고-3 월 31 일 = 1 개월 = 2 월 28 일에 대 한 비-윤년 및 윤년에 대 한 2 월 29입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-778">For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.</span></span>  
  
 <span data-ttu-id="04f47-779">결과 시간 부분은 <xref:System.DateTime> 개체가이 인스턴스와 동일 하 게 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-779">The time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-780">다음 예제에서는 2015 년 12 월의 마지막 날에 0 사이 및 15 개월을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-780">The following example adds between zero and fifteen months to the last day of December, 2015.</span></span> <span data-ttu-id="04f47-781">이 경우 AddMonths 메서드는 각 달의 마지막 날 날짜를 반환 하 고 윤년을 성공적으로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-781">In this case, the AddMonths method returns the date of the last day of each month, and successfully handles leap years.</span></span>  
  
 [!code-csharp[System.DateTime.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.DateTime.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-782">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-782">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span>  
  
 <span data-ttu-id="04f47-783">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-783">-or-</span></span>  
  
 <span data-ttu-id="04f47-784"><paramref name="months" /> is less than -120,000 or greater than 120,000.</span><span class="sxs-lookup"><span data-stu-id="04f47-784"><paramref name="months" /> is less than -120,000 or greater than 120,000.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public DateTime AddSeconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddSeconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeconds (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddSeconds(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-785">A number of whole and fractional seconds.</span><span class="sxs-lookup"><span data-stu-id="04f47-785">A number of whole and fractional seconds.</span></span> <span data-ttu-id="04f47-786">The <c>value</c> parameter can be negative or positive.</span><span class="sxs-lookup"><span data-stu-id="04f47-786">The <c>value</c> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="04f47-787">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of seconds to the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-787">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of seconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-788">An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-788">An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-789">이 메서드는이 값을 변경 하지 않습니다 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-789">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="04f47-790">대신, 새 반환 <xref:System.DateTime> 값은이 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-790">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="04f47-791">소수 부분 `value` 초의 소수 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-791">The fractional part of `value` is the fractional part of a second.</span></span> <span data-ttu-id="04f47-792">예를 들어 4.5는 4 초, 500 밀리초와 틱 수가 0에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-792">For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="04f47-793">`value` 매개 변수는 밀리초 단위로 반올림 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-793">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-794">다음 예제에서는 <xref:System.DateTime.AddSeconds%2A> 30 초 및 초의 수를 하루에 추가 하는 메서드는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-794">The following example uses the <xref:System.DateTime.AddSeconds%2A> method to add 30 seconds and the number of seconds in one day to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="04f47-795">그런 다음 각각의 새 값을 표시 하 고 원래 값의 차이 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-795">It then displays each new value and displays the difference between it and the original value.</span></span> <span data-ttu-id="04f47-796">차이 시간 범위와 틱 수가 모두 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-796">The difference is displayed both as a time span and as a number of ticks.</span></span>  
  
 [!code-csharp[System.DateTime.AddSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addseconds/cs/addseconds1.cs#1)]
 [!code-vb[System.DateTime.AddSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addseconds/vb/addseconds1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-797">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-797">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="AddTicks">
      <MemberSignature Language="C#" Value="public DateTime AddTicks (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddTicks(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTicks (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddTicks(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-798">A number of 100-nanosecond ticks.</span><span class="sxs-lookup"><span data-stu-id="04f47-798">A number of 100-nanosecond ticks.</span></span> <span data-ttu-id="04f47-799">The <c>value</c> parameter can be positive or negative.</span><span class="sxs-lookup"><span data-stu-id="04f47-799">The <c>value</c> parameter can be positive or negative.</span></span></param>
        <summary><span data-ttu-id="04f47-800">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of ticks to the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-800">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of ticks to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-801">An object whose value is the sum of the date and time represented by this instance and the time represented by <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-801">An object whose value is the sum of the date and time represented by this instance and the time represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-802">이 메서드는이 값을 변경 하지 않습니다 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-802">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="04f47-803">대신, 새 반환 <xref:System.DateTime> 값은이 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-803">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-804">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-804">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
        <altmember cref="P:System.DateTime.Ticks" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public DateTime AddYears (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddYears(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddYears(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddYears (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddYears(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-805">A number of years.</span><span class="sxs-lookup"><span data-stu-id="04f47-805">A number of years.</span></span> <span data-ttu-id="04f47-806">The <c>value</c> parameter can be negative or positive.</span><span class="sxs-lookup"><span data-stu-id="04f47-806">The <c>value</c> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="04f47-807">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of years to the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-807">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of years to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-808">An object whose value is the sum of the date and time represented by this instance and the number of years represented by <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-808">An object whose value is the sum of the date and time represented by this instance and the number of years represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-809">이 메서드는이 값을 변경 하지 않습니다 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-809">This method does not change the value of this <xref:System.DateTime> object.</span></span> <span data-ttu-id="04f47-810">대신, 새 반환 <xref:System.DateTime> 이 작업의 결과 값을 가진 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-810">Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="04f47-811"><xref:System.DateTime.AddYears%2A> 메서드 계산 결과 연도가 윤년을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-811">The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years.</span></span> <span data-ttu-id="04f47-812">월 및 일의 시간 부분 결과의 <xref:System.DateTime> 개체가이 인스턴스와 동일 하 게 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-812">The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.</span></span>  
  
 <span data-ttu-id="04f47-813">현재 인스턴스가 윤년에서 윤 일을 나타내는 경우 반환 값은 목표 날짜에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-813">If the current instance represents the leap day in a leap year, the return value depends on the target date:</span></span>  
  
-   <span data-ttu-id="04f47-814">경우 `value`  +  <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 윤년에에서 윤 일 반환 값 나타냅니다 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-814">If `value` + <xref:System.DateTime.Year%2A?displayProperty=nameWithType> is also a leap year, the return value represents the leap day in that year.</span></span> <span data-ttu-id="04f47-815">예를 들어 2012 년 2 월 29 일에 4 년 추가 되 면 반환 된 날짜가 2016 년 2 월 29 일 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-815">For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.</span></span>  
  
-   <span data-ttu-id="04f47-816">경우 `value`  +  <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 윤년 반환 값 나타냅니다에에서 윤 일 이전 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-816">If `value` + <xref:System.DateTime.Year%2A?displayProperty=nameWithType> is not a leap year, the return value represents the day before the leap day in that year.</span></span> <span data-ttu-id="04f47-817">예를 들어 2012 년 2 월 29 일에 1 년 동안 추가 된 경우 반환 되는 날짜는 2013 년 2 월 28 일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-817">For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.</span></span>  
  
 <span data-ttu-id="04f47-818">다음 예제에서는 사용 하 여는 <xref:System.DateTime.AddYears%2A> 메서드는 <xref:System.DateTime> 윤년 하루를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-818">The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day.</span></span> <span data-ttu-id="04f47-819">이전에 15 년 및 다음에 나오는 15 년에 대 한 날짜를 표시 2000 년 2 월 29 일입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-819">It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.</span></span>  
  
 [!code-csharp[System.DateTime.AddYears#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)]
 [!code-vb[System.DateTime.AddYears#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-820"><paramref name="value" /> or the resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-820"><paramref name="value" /> or the resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (t1 As DateTime, t2 As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(DateTime t1, DateTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="04f47-821">The first object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-821">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="04f47-822">The second object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-822">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="04f47-823">Compares two instances of <see cref="T:System.DateTime" /> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-823">Compares two instances of <see cref="T:System.DateTime" /> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-824">A signed number indicating the relative values of <paramref name="t1" /> and <paramref name="t2" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-824">A signed number indicating the relative values of <paramref name="t1" /> and <paramref name="t2" />.</span></span>  
  
 <span data-ttu-id="04f47-825"><list type="table"><listheader><term> Value Type</span><span class="sxs-lookup"><span data-stu-id="04f47-825"><list type="table"><listheader><term> Value Type</span></span>  
  
 <span data-ttu-id="04f47-826"></term><description> Condition</span><span class="sxs-lookup"><span data-stu-id="04f47-826"></term><description> Condition</span></span>  
  
 <span data-ttu-id="04f47-827"></description></listheader><item><term> Less than zero</span><span class="sxs-lookup"><span data-stu-id="04f47-827"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="04f47-828"></term><description><paramref name="t1" /> is earlier than <paramref name="t2" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-828"></term><description><paramref name="t1" /> is earlier than <paramref name="t2" />.</span></span>  
  
 <span data-ttu-id="04f47-829"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="04f47-829"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="04f47-830"></term><description><paramref name="t1" /> is the same as <paramref name="t2" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-830"></term><description><paramref name="t1" /> is the same as <paramref name="t2" />.</span></span>  
  
 <span data-ttu-id="04f47-831"></description></item><item><term> Greater than zero</span><span class="sxs-lookup"><span data-stu-id="04f47-831"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="04f47-832"></term><description><paramref name="t1" /> is later than <paramref name="t2" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-832"></term><description><paramref name="t1" /> is later than <paramref name="t2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-833">관계를 확인 하려면 `t1` 를 `t2`, <xref:System.DateTime.Compare%2A> 메서드 비교는 <xref:System.DateTime.Ticks%2A> 속성 `t1` 및 `t2` 하지만 무시 자신의 <xref:System.DateTime.Kind%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-833">To determine the relationship of `t1` to `t2`, the <xref:System.DateTime.Compare%2A> method compares the <xref:System.DateTime.Ticks%2A> property of `t1` and `t2` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="04f47-834">비교 하기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-834">Before comparing <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-835">다음 예제는 <xref:System.DateTime.Compare%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-835">The following example demonstrates the <xref:System.DateTime.Compare%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.compare/cs/compare1.cs#1)]
 [!code-vb[System.DateTime.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.compare/vb/compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-836">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span><span class="sxs-lookup"><span data-stu-id="04f47-836">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-837">두 오버 로드는 <xref:System.DateTime.CompareTo%2A> 이 인스턴스의 상대 값을 나타내는 부호 있는 숫자를 반환 하는 메서드 및 `value` 인수에는 다음 표에 나와 있는 것 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-837">The two overloads of the <xref:System.DateTime.CompareTo%2A> method return a signed number that indicates the relative value of this instance and the `value` argument, as shown in the following table.</span></span>  
  
|<span data-ttu-id="04f47-838">값</span><span class="sxs-lookup"><span data-stu-id="04f47-838">Value</span></span>|<span data-ttu-id="04f47-839">설명</span><span class="sxs-lookup"><span data-stu-id="04f47-839">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="04f47-840">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="04f47-840">Less than zero</span></span>|<span data-ttu-id="04f47-841">이 인스턴스는 `value` 보다 이전입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-841">This instance is earlier than `value`.</span></span>|  
|<span data-ttu-id="04f47-842">0</span><span class="sxs-lookup"><span data-stu-id="04f47-842">Zero</span></span>|<span data-ttu-id="04f47-843">이 인스턴스는 `value`와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-843">This instance is the same as `value`.</span></span>|  
|<span data-ttu-id="04f47-844">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="04f47-844">Greater than zero</span></span>|<span data-ttu-id="04f47-845">이 인스턴스는 `value`보다 이후입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-845">This instance is later than `value`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.CompareTo(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTime value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-846">The object to compare to the current instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-846">The object to compare to the current instance.</span></span></param>
        <summary><span data-ttu-id="04f47-847">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span><span class="sxs-lookup"><span data-stu-id="04f47-847">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="04f47-848">A signed number indicating the relative values of this instance and the <paramref name="value" /> parameter.</span><span class="sxs-lookup"><span data-stu-id="04f47-848">A signed number indicating the relative values of this instance and the <paramref name="value" /> parameter.</span></span>  
  
 <span data-ttu-id="04f47-849"><list type="table"><listheader><term> Value</span><span class="sxs-lookup"><span data-stu-id="04f47-849"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="04f47-850"></term><description> Description</span><span class="sxs-lookup"><span data-stu-id="04f47-850"></term><description> Description</span></span>  
  
 <span data-ttu-id="04f47-851"></description></listheader><item><term> Less than zero</span><span class="sxs-lookup"><span data-stu-id="04f47-851"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="04f47-852"></term><description> This instance is earlier than <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-852"></term><description> This instance is earlier than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="04f47-853"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="04f47-853"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="04f47-854"></term><description> This instance is the same as <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-854"></term><description> This instance is the same as <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="04f47-855"></description></item><item><term> Greater than zero</span><span class="sxs-lookup"><span data-stu-id="04f47-855"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="04f47-856"></term><description> This instance is later than <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-856"></term><description> This instance is later than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-857">현재 인스턴스의 관계를 확인 하려면 `value`, <xref:System.DateTime.CompareTo%2A> 메서드 비교는 <xref:System.DateTime.Ticks%2A> 현재 인스턴스의 속성 및 `value` 무시 하지만 해당 <xref:System.DateTime.Kind%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-857">To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span>  <span data-ttu-id="04f47-858">비교 하기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-858">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-859">값을 비교 하 여이 작업을 수행할 수 자신의 <xref:System.DateTime.Kind%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-859">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 <span data-ttu-id="04f47-860">이 메서드를 구현 하는 <xref:System.IComparable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 <xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=nameWithType> 메서드 오버 로드를 변환할 필요가 없기 때문에 `value` 매개 변수를 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-860">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=nameWithType> method overload because it does not have to convert the `value` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-861">다음 예제에서는 세 개의 인스턴스화합니다 <xref:System.DateTime> 오늘을 나타내는 날짜를 1 년 이전에 날짜를 나타내는 하 고 1 년 동안 나중에 날짜를 나타내는 세 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-861">The following example instantiates three <xref:System.DateTime> objects, one that represents today's date, another that represents the date one year previously, and a third that represents the date one year in the future.</span></span> <span data-ttu-id="04f47-862">그런 다음 호출 하 여 <xref:System.DateTime.CompareTo%28System.DateTime%29> 메서드 비교의 결과 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-862">It then calls the <xref:System.DateTime.CompareTo%28System.DateTime%29> method and displays the result of the comparison.</span></span>  
  
 [!code-csharp[DateTime.CompareTo.2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo.2/CS/CompareTo_CS1_24564.cs#1)]
 [!code-vb[DateTime.CompareTo.2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo.2/VB/CompareTo_VB1_24564.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-863">A boxed object to compare, or <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-863">A boxed object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="04f47-864">Compares the value of this instance to a specified object that contains a specified <see cref="T:System.DateTime" /> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span><span class="sxs-lookup"><span data-stu-id="04f47-864">Compares the value of this instance to a specified object that contains a specified <see cref="T:System.DateTime" /> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="04f47-865">A signed number indicating the relative values of this instance and <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-865">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="04f47-866"><list type="table"><listheader><term> Value</span><span class="sxs-lookup"><span data-stu-id="04f47-866"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="04f47-867"></term><description> Description</span><span class="sxs-lookup"><span data-stu-id="04f47-867"></term><description> Description</span></span>  
  
 <span data-ttu-id="04f47-868"></description></listheader><item><term> Less than zero</span><span class="sxs-lookup"><span data-stu-id="04f47-868"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="04f47-869"></term><description> This instance is earlier than <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-869"></term><description> This instance is earlier than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="04f47-870"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="04f47-870"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="04f47-871"></term><description> This instance is the same as <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-871"></term><description> This instance is the same as <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="04f47-872"></description></item><item><term> Greater than zero</span><span class="sxs-lookup"><span data-stu-id="04f47-872"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="04f47-873"></term><description> This instance is later than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-873"></term><description> This instance is later than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-874">현재 인스턴스의 관계를 확인 하려면 `value`, <xref:System.DateTime.CompareTo%2A> 메서드 비교는 <xref:System.DateTime.Ticks%2A> 현재 인스턴스의 속성 및 `value` 무시 하지만 해당 <xref:System.DateTime.Kind%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-874">To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="04f47-875">비교 하기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-875">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-876">값을 비교 하 여이 작업을 수행할 수 자신의 <xref:System.DateTime.Kind%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-876">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 <span data-ttu-id="04f47-877">모든 인스턴스 <xref:System.DateTime>, 해당 값에 관계 없이 보다 큰 것으로 간주 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-877">Any instance of <xref:System.DateTime>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-878">다음 예제는 <xref:System.DateTime.CompareTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-878">The following example demonstrates the <xref:System.DateTime.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[DateTime.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.CompareTo/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo/CS/class1.cs#1)]
 [!code-vb[DateTime.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-879"><paramref name="value" /> is not a <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-879"><paramref name="value" /> is not a <see cref="T:System.DateTime" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-880">Gets the date component of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-880">Gets the date component of this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-881">이 인스턴스와 동일한 날짜를 갖고 시간 값이 12:00:00 자정(00:00:00)으로 설정된 새 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-881">A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-882">값은 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 현재 인스턴스와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-882">The value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is the same as that of the current instance.</span></span>  
  
 <span data-ttu-id="04f47-883">때문에 <xref:System.DateTime> 형식 날짜 및 시간는 하나로 것이 중요에서 반환 된 날짜를 잘못 해석 되지 않도록 하는 <xref:System.DateTime.Date%2A> 날짜와 시간으로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-883">Because the <xref:System.DateTime> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref:System.DateTime.Date%2A> property as a date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-884">다음 예제에서는 <xref:System.DateTime.Date%2A> 속성의 날짜 구성 요소를 추출 하는 <xref:System.DateTime> 값을 0으로 설정 하 고 시간 구성 요소 (또는 0: 00시 또는 자정)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-884">The following example uses the <xref:System.DateTime.Date%2A> property to extract the date component of a <xref:System.DateTime> value with its time component set to zero (or 0:00:00, or midnight).</span></span> <span data-ttu-id="04f47-885">또한 설명 하는지는 표시할 때 사용 되는 형식 문자열에 따라는 <xref:System.DateTime> 값 형식이 지정 된 출력에 표시 되도록 시간 구성 요소를 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-885">It also illustrates that, depending on the format string used when displaying the <xref:System.DateTime> value, the time component can continue to appear in formatted output.</span></span>  
  
 [!code-cpp[System.DateTime.Date#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Date/cpp/date1.cpp#1)]
 [!code-csharp[System.DateTime.Date#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Date/cs/Date1.cs#1)]
 [!code-vb[System.DateTime.Date#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Date/vb/Date1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-886">Gets the day of the month represented by this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-886">Gets the day of the month represented by this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-887">1부터 31 사이의 값으로 표시되는 일 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-887">The day component, expressed as a value between 1 and 31.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-888"><xref:System.DateTime.Day%2A> 속성 일반 달력의 월의 일은 항상 반환 경우에 현재 <xref:System.DateTime> 값 다른 달력을 사용 하 여 인스턴스화한 또는 현재 스레드 문화권의 기본 달력이 그레고리오 력 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-888">The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar.</span></span> <span data-ttu-id="04f47-889">다른 일정을 사용 하 여 특정 날짜의 월의 일을 검색 하려면 해당 달력의 호출 <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-889">To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="04f47-890">다음 예제에서는 모두를 사용 하는 <xref:System.DateTime.Day%2A> 속성 및 <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> 에 대 한 월의 일을 검색 하는 메서드는 <xref:System.DateTime> 회교식 달력을 사용 하 여 인스턴스화됩니다 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-890">The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar.</span></span>  
  
 [!code-csharp[System.DateTime.Day#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)]
 [!code-vb[System.DateTime.Day#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)]  
  
 <span data-ttu-id="04f47-891">마찬가지로, 다음 예제에서는 모두 사용 하는 <xref:System.DateTime.Day%2A> 속성 및 <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> 때 현재 스레드 문화권은 기본 달력으로 회교식 달력을 사용 하 여 AR-SA 월의 일을 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-891">Similarly, the following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.</span></span>  
  
 [!code-csharp[System.DateTime.Day#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)]
 [!code-vb[System.DateTime.Day#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="04f47-892">다음 예제는 <xref:System.DateTime.Day%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-892">The following example demonstrates the <xref:System.DateTime.Day%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-893">Gets the day of the week represented by this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-893">Gets the day of the week represented by this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-894">이 <see cref="T:System.DateTime" /> 값의 요일을 나타내는 열거형 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-894">An enumerated constant that indicates the day of the week of this <see cref="T:System.DateTime" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-895">에 상수 값의 <xref:System.DayOfWeek> 열거형에서 범위 <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> 를 <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-895">The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> to <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-896">경우 정수로 캐스팅, 해당 값 범위는 0부터 (나타내는 <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) 6 개의 (나타내는 <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="04f47-896">If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) to six (which indicates <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="04f47-897"><xref:System.DateTime.DayOfWeek%2A> 열거 상수를 반환 하는 속성, 시스템의 국가 및 언어 설정을 반영 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-897">The <xref:System.DateTime.DayOfWeek%2A> property returns an enumerated constant; it does not reflect a system's regional and language settings.</span></span> <span data-ttu-id="04f47-898">특정 날짜에 대 한 지역화 된 요일 이름을 나타내는 문자열을 검색 하려면 오버 로드 중 하나를 호출는 <xref:System.DateTime.ToString%2A> 메서드를 포함 하는 `format` 매개 변수를 전달 중 하나는 `ddd` 또는 `dddd` 사용자 지정 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-898">To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <xref:System.DateTime.ToString%2A> method that includes a `format` parameter and pass it either the `ddd` or `dddd` custom format strings.</span></span> <span data-ttu-id="04f47-899">자세한 내용은 참조 [하는 방법: 특정 날짜에서의 요일 추출](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-899">For details, see [How to: Extract the Day of the Week from a Specific Date](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-900">다음 예제는 <xref:System.DateTime.DayOfWeek%2A> 속성 및 <xref:System.DayOfWeek?displayProperty=nameWithType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-900">The following example demonstrates the <xref:System.DateTime.DayOfWeek%2A> property and the <xref:System.DayOfWeek?displayProperty=nameWithType> enumeration.</span></span>  
  
 [!code-cpp[DateTime.DayOfWeek#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DayOfWeek/CPP/dow.cpp#1)]
 [!code-csharp[DateTime.DayOfWeek#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DayOfWeek/CS/dow.cs#1)]
 [!code-vb[DateTime.DayOfWeek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DayOfWeek/VB/dow.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Ticks" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public int DayOfYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfYear" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.DayOfYear" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfYear { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-901">Gets the day of the year represented by this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-901">Gets the day of the year represented by this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-902">1부터 366 사이의 값으로 표시되는 한 해의 날짜 순서입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-902">The day of the year, expressed as a value between 1 and 366.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-903"><xref:System.DateTime.DayOfYear%2A> 속성은 한 해의 날짜를 계산할 때를 윤년을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-903">The <xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year.</span></span> <span data-ttu-id="04f47-904">속성 값은 항상 현재 스레드 문화권의 현재 달력에 상관 없이 일반 달력의 연간 일자를 반영합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-904">The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar.</span></span> <span data-ttu-id="04f47-905">다른 달력의 연간 일자를 검색 하려면는 <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=nameWithType> 그 달력의 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-905">To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=nameWithType> method of that calendar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-906">다음 예제에서는 일반 달력의 2010 2020 년 12 월 31 일의 한 해의 날짜를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-906">The following example displays the day of the year of December 31 for the years 2010-2020 in the Gregorian calendar.</span></span> <span data-ttu-id="04f47-907">Note 예제 년 12 월 31 윤년의 연도 366 번째 날 임을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-907">Note that the example shows that December 31 is the 366th day of the year in leap years.</span></span>  
  
 [!code-csharp[System.DateTime.DayOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.dayofyear/cs/dayofyear2.cs#1)]
 [!code-vb[System.DateTime.DayOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.dayofyear/vb/dayofyear2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="DaysInMonth">
      <MemberSignature Language="C#" Value="public static int DaysInMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DaysInMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DaysInMonth (year As Integer, month As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DaysInMonth(int year, int month);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-908">The year.</span><span class="sxs-lookup"><span data-stu-id="04f47-908">The year.</span></span></param>
        <param name="month"><span data-ttu-id="04f47-909">The month (a number ranging from 1 to 12).</span><span class="sxs-lookup"><span data-stu-id="04f47-909">The month (a number ranging from 1 to 12).</span></span></param>
        <summary><span data-ttu-id="04f47-910">Returns the number of days in the specified month and year.</span><span class="sxs-lookup"><span data-stu-id="04f47-910">Returns the number of days in the specified month and year.</span></span></summary>
        <returns><span data-ttu-id="04f47-911">The number of days in <paramref name="month" /> for the specified <paramref name="year" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-911">The number of days in <paramref name="month" /> for the specified <paramref name="year" />.</span></span>  
  
 <span data-ttu-id="04f47-912">For example, if <paramref name="month" /> equals 2 for February, the return value is 28 or 29 depending upon whether <paramref name="year" /> is a leap year.</span><span class="sxs-lookup"><span data-stu-id="04f47-912">For example, if <paramref name="month" /> equals 2 for February, the return value is 28 or 29 depending upon whether <paramref name="year" /> is a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-913"><xref:System.DateTime.DaysInMonth%2A> 항상 1 보다 크거나 `month` 및 `year` 된 월과 연도 일반 달력의 경우에 일반 달력 현재 문화권의 현재 달력 달력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-913">The <xref:System.DateTime.DaysInMonth%2A> method always interprets `month` and `year` as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar.</span></span> <span data-ttu-id="04f47-914">특정 달력의 지정 된 월의 일 수를 가져오려면 해당 달력의 호출 <xref:System.Globalization.Calendar.GetDaysInMonth%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-914">To get the number of days in a specified month of a particular calendar, call that calendar's <xref:System.Globalization.Calendar.GetDaysInMonth%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-915">다음 예제에서는 사용 하는 방법을 <xref:System.DateTime.DaysInMonth%2A> 2001 년 7 월 2 월의에서 일 수를 확인 하는 메서드 (비-윤년), 1998 및 1996 년 2 월 (윤년).</span><span class="sxs-lookup"><span data-stu-id="04f47-915">The following example demonstrates how to use the <xref:System.DateTime.DaysInMonth%2A> method to determine the number of days in July 2001, February 1998 (a non-leap year), and February 1996 (a leap year).</span></span>  
  
 [!code-cpp[DateTime.DaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DaysInMonth/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DaysInMonth/CS/class1.cs#1)]
 [!code-vb[DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DaysInMonth/VB/class1.vb#1)]  
  
 <span data-ttu-id="04f47-916">다음 예제에서는 정수 배열에 지정 된 연도의 각 월에 일 수를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-916">The following example displays the number of days in each month of a year specified in an integer array.</span></span>  
  
 [!code-csharp[System.DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.daysinmonth/cs/daysinmonth3.cs#1)]
 [!code-vb[System.DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.daysinmonth/vb/daysinmonth3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-917"><paramref name="month" /> is less than 1 or greater than 12.</span><span class="sxs-lookup"><span data-stu-id="04f47-917"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
 <span data-ttu-id="04f47-918">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-918">-or-</span></span>  
  
 <span data-ttu-id="04f47-919"><paramref name="year" /> is less than 1 or greater than 9999.</span><span class="sxs-lookup"><span data-stu-id="04f47-919"><paramref name="year" /> is less than 1 or greater than 9999.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-920">Returns a value indicating whether two <see cref="T:System.DateTime" /> objects, or a <see cref="T:System.DateTime" /> instance and another object or <see cref="T:System.DateTime" />, have the same value.</span><span class="sxs-lookup"><span data-stu-id="04f47-920">Returns a value indicating whether two <see cref="T:System.DateTime" /> objects, or a <see cref="T:System.DateTime" /> instance and another object or <see cref="T:System.DateTime" />, have the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTime value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-921">The object to compare to this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-921">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="04f47-922">Returns a value indicating whether the value of this instance is equal to the value of the specified <see cref="T:System.DateTime" /> instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-922">Returns a value indicating whether the value of this instance is equal to the value of the specified <see cref="T:System.DateTime" /> instance.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-923"><see langword="true" /> if the <paramref name="value" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-923"><see langword="true" /> if the <paramref name="value" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-924">현재 인스턴스 및 `value` 같은지 경우 해당 <xref:System.DateTime.Ticks%2A> 속성 값이 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-924">The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="04f47-925">자신의 <xref:System.DateTime.Kind%2A> 속성 값에 대 한 같음 테스트에서 고려 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-925">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
 <span data-ttu-id="04f47-926">이 메서드를 구현 하는 <xref:System.IEquatable%601?displayProperty=nameWithType> 인터페이스를 하 고 수행 보다 조금 더 나은 <xref:System.DateTime.Equals%2A> 메서드 때문에 `value` 매개 변수는 object로 변환 될 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-926">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.DateTime.Equals%2A> method because the `value` parameter does not have to be converted to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-927">다음 예제는 <xref:System.DateTime.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-927">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]
 [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-928">The object to compare to this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-928">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="04f47-929">Returns a value indicating whether this instance is equal to a specified object.</span><span class="sxs-lookup"><span data-stu-id="04f47-929">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-930"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.DateTime" /> and equals the value of this instance; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-930"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.DateTime" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-931">현재 인스턴스 및 `value` 같은지 경우 해당 <xref:System.DateTime.Ticks%2A> 속성 값이 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-931">The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="04f47-932">자신의 <xref:System.DateTime.Kind%2A> 속성 값에 대 한 같음 테스트에서 고려 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-932">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-933">다음 예제는 <xref:System.DateTime.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-933">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]
 [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(DateTime t1, DateTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="04f47-934">The first object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-934">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="04f47-935">The second object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-935">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="04f47-936">Returns a value indicating whether two <see cref="T:System.DateTime" /> instances  have the same date and time value.</span><span class="sxs-lookup"><span data-stu-id="04f47-936">Returns a value indicating whether two <see cref="T:System.DateTime" /> instances  have the same date and time value.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-937"><see langword="true" /> if the two values are equal; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-937"><see langword="true" /> if the two values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-938">`t1` 및 `t2` 동일한 경우 해당 <xref:System.DateTime.Ticks%2A> 속성 값이 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-938">`t1` and `t2` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="04f47-939">자신의 <xref:System.DateTime.Kind%2A> 속성 값에 대 한 같음 테스트에서 고려 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-939">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-940">다음 예제는 <xref:System.DateTime.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-940">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-cpp[DateTime.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Equals/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Equals/CS/class1.cs#1)]
 [!code-vb[DateTime.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Equals/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FromBinary">
      <MemberSignature Language="C#" Value="public static DateTime FromBinary (long dateData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromBinary(int64 dateData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromBinary(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBinary (dateData As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromBinary(long dateData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateData" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="dateData"><span data-ttu-id="04f47-941">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> property in a 2-bit field and the <see cref="P:System.DateTime.Ticks" /> property in a 62-bit field.</span><span class="sxs-lookup"><span data-stu-id="04f47-941">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> property in a 2-bit field and the <see cref="P:System.DateTime.Ticks" /> property in a 62-bit field.</span></span></param>
        <summary><span data-ttu-id="04f47-942">Deserializes a 64-bit binary value and recreates an original serialized <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-942">Deserializes a 64-bit binary value and recreates an original serialized <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="04f47-943">An object that is equivalent to the <see cref="T:System.DateTime" /> object that was serialized by the <see cref="M:System.DateTime.ToBinary" /> method.</span><span class="sxs-lookup"><span data-stu-id="04f47-943">An object that is equivalent to the <see cref="T:System.DateTime" /> object that was serialized by the <see cref="M:System.DateTime.ToBinary" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-944">사용 하 여는 <xref:System.DateTime.ToBinary%2A> 현재 값으로 변환 하는 메서드 <xref:System.DateTime> 개체를 이진 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-944">Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="04f47-945">그런 다음, 이진 값을 사용할 및 <xref:System.DateTime.FromBinary%2A> 메서드를 다시 원래 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-945">Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-946">일부 경우에는 <xref:System.DateTime> 에서 반환 된 값은 <xref:System.DateTime.FromBinary%2A> 방법은 원본과 동일 <xref:System.DateTime> 값에 제공 되는 <xref:System.DateTime.ToBinary%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-946">In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method.</span></span> <span data-ttu-id="04f47-947">자세한 내용은 다음 섹션인 "현지 시간 조정"을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="04f47-947">For more information, see the next section, "Local Time Adjustment".</span></span>  
  
## <a name="local-time-adjustment"></a><span data-ttu-id="04f47-948">현지 시간 조정</span><span class="sxs-lookup"><span data-stu-id="04f47-948">Local Time Adjustment</span></span>  
 <span data-ttu-id="04f47-949">현지 시간을 현지 표준 시간대 조정 세계시로 표시 됩니다는 <xref:System.DateTime> 갖는 <xref:System.DateTime.Kind%2A> 속성 값은 <xref:System.DateTimeKind.Local>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-949">A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="04f47-950">로컬 복원할 때 <xref:System.DateTime> 값에 의해 생성 되는 이진 표현에서는 <xref:System.DateTime.ToBinary%2A> 메서드는 <xref:System.DateTime.FromBinary%2A> 메서드 원래 값과 같지 않은 되도록 다시 만든된 값을 조정 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-950">When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value.</span></span> <span data-ttu-id="04f47-951">이 비동기화는 다음과 같은 경우에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-951">This can occur under the following conditions:</span></span>  
  
-   <span data-ttu-id="04f47-952">하는 경우 로컬 <xref:System.DateTime> 하 여 한 표준 시간대에서 개체가 serialize 되는 <xref:System.DateTime.ToBinary%2A> 메서드를 다른 표준 시간대에서에서 deserialize 될는 <xref:System.DateTime.FromBinary%2A> 메서드를 나타내는 결과 현지 시간 <xref:System.DateTime> 개체가 자동으로 조정 됩니다 두 번째 표준 시간대에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-952">If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.</span></span>  
  
     <span data-ttu-id="04f47-953">예를 들어 한 <xref:System.DateTime> 오후 3 시 현지 시간을 나타내는 개체입니다</span><span class="sxs-lookup"><span data-stu-id="04f47-953">For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M.</span></span> <span data-ttu-id="04f47-954">미국에서 실행 하는 응용 프로그램 태평양 표준 시간대를 사용 하 여는 <xref:System.DateTime.ToBinary%2A> 메서드는 변환할 <xref:System.DateTime> 개체를 이진 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-954">An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="04f47-955">미국에서 실행 되는 다른 응용 프로그램 동부 표준 시간대를 사용 하 여는 <xref:System.DateTime.FromBinary%2A> 이진 값을 새 변환 하는 메서드 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-955">Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object.</span></span> <span data-ttu-id="04f47-956">새 값 <xref:System.DateTime> 개체는 원래 오후 3으로에서 동일한 시점을 나타내는 오후 6</span><span class="sxs-lookup"><span data-stu-id="04f47-956">The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M.</span></span> <span data-ttu-id="04f47-957">그러나 값 동부 표준시 시간대의 현지 시간으로 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-957">value, but is adjusted to local time in the Eastern Time zone.</span></span>  
  
-   <span data-ttu-id="04f47-958">하는 경우 로컬의 이진 표현 <xref:System.DateTime> 값 되는 시스템의 현지 표준 시간대에 잘못 된 시간을 나타내는 <xref:System.DateTime.FromBinary%2A> 은 호출 조정 되는 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-958">If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.</span></span>  
  
     <span data-ttu-id="04f47-959">예를 들어 표준 시간에서 일광 절약 시간제로의 전환을 발생 미국 태평양 표준 시간대에서 2010 년 3 월 14 일 오전 2 시, 오전 3 시에 1 시간, 여는 시간을 이동 하는 시기</span><span class="sxs-lookup"><span data-stu-id="04f47-959">For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="04f47-960">이 시간 간격은이 표준 시간대에 존재 하지 않는 하는 시간 간격, 즉 잘못 된 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-960">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="04f47-961">다음 예제에서는 내에 포함 되는 시간이이 범위를 이진 값으로 변환 됩니다는 <xref:System.DateTime.ToBinary%2A> 메서드도 복원 되는 <xref:System.DateTime.FromBinary%2A> 메서드를 원래 값은 시간으로 조정 되는 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-961">The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="04f47-962">있는지 여부를 특정 날짜 및 시간 값 따라야 수정 전달 하 여 확인할 수 있습니다는 <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> 메서드를 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-962">You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]
     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  
  
## <a name="version-considerations"></a><span data-ttu-id="04f47-963">버전 고려 사항</span><span class="sxs-lookup"><span data-stu-id="04f47-963">Version Considerations</span></span>  
 <span data-ttu-id="04f47-964">.NET Framework 버전 2.0 부터는 <xref:System.DateTime> 여부 지정된 된 시간이 현지 시간, utc (협정 세계시) 또는 둘 다에 연결 됩니다 전용는 틱 필드를 나타내는 개인 Kind 필드의 구조 구성 됩니다.는 날짜 및 시간을 지정 하는 100 나노초 틱 수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-964">Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</span></span> <span data-ttu-id="04f47-965">틱 수가 사용 액세스할 수 있습니다는 <xref:System.DateTime.Ticks%2A> 속성과 theKind 필드와 액세스할 수 있습니다는 <xref:System.DateTime.Kind%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-965">The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="04f47-966">직렬화 하는 경우.NET Framework 2.0 이전 버전을 <xref:System.DateTime> 개체와 같은 serialization 인터페이스를 사용 하는 대신 수동으로 <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>의 틱 데이터를 serialize 하는 데 필요한는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-966">Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, you needed to serialize only the Ticks data in the <xref:System.DateTime>.</span></span> <span data-ttu-id="04f47-967">.NET Framework 2.0 부터는 Kind 데이터도 serialize 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-967">Starting with the .NET Framework 2.0, you must also serialize the Kind data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-968"><paramref name="dateData" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-968"><paramref name="dateData" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.ToBinary" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTime">
      <MemberSignature Language="C#" Value="public static DateTime FromFileTime (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromFileTime(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromFileTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTime (fileTime As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromFileTime(long fileTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="04f47-969">A Windows file time expressed in ticks.</span><span class="sxs-lookup"><span data-stu-id="04f47-969">A Windows file time expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="04f47-970">Converts the specified Windows file time to an equivalent local time.</span><span class="sxs-lookup"><span data-stu-id="04f47-970">Converts the specified Windows file time to an equivalent local time.</span></span></summary>
        <returns><span data-ttu-id="04f47-971">An object that represents the local time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span><span class="sxs-lookup"><span data-stu-id="04f47-971">An object that represents the local time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-972">Windows 파일 시간은 서 기 1601 년 1 월 1 일 12시 자정부터 경과한 100 나노초 간격의 수를 나타내는 64 비트 값</span><span class="sxs-lookup"><span data-stu-id="04f47-972">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="04f47-973">(C.E.) Utc (협정 세계시)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-973">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="04f47-974">Windows 응용 프로그램에 액세스 하면 만들거나를 파일에 기록 하는 시기를 기록 하는 파일 시간을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-974">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="04f47-975">`fileTime` 매개 변수는 100 나노초에 표시 되는 파일 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-975">The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.</span></span>  
  
 <span data-ttu-id="04f47-976">반환 값은.NET Framework 버전 2.0 부터는 <xref:System.DateTime> 인 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-976">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-977">다음 예제는 <xref:System.DateTime.FromFileTime%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-977">The following example demonstrates the <xref:System.DateTime.FromFileTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.FromFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.FromFileTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.FromFileTime/CS/class1.cs#1)]
 [!code-vb[DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.FromFileTime/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-978"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-978"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-979">일반적으로 <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> 메서드 복원은 <see cref="T:System.DateTime" /> 에서 저장 된 값은 <see cref="M:System.DateTime.ToFileTime" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-979">Ordinarily, the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method restores a <see cref="T:System.DateTime" /> value that was saved by the <see cref="M:System.DateTime.ToFileTime" /> method.</span></span> <span data-ttu-id="04f47-980">그러나 두 값 다음과 같은 경우 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-980">However, the two values may differ under the following conditions:</span></span>  
  
-   <span data-ttu-id="04f47-981">경우 serialization 및 deserialization은 <see cref="T:System.DateTime" /> 값이 서로 다른 시간대에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-981">If the serialization and deserialization of the <see cref="T:System.DateTime" /> value occur in different time zones.</span></span> <span data-ttu-id="04f47-982">예를 들어 경우는 <see cref="T:System.DateTime" /> 오후 12시 30분 분의 시간 값</span><span class="sxs-lookup"><span data-stu-id="04f47-982">For example, if a <see cref="T:System.DateTime" /> value with a time of 12:30 P.M.</span></span> <span data-ttu-id="04f47-983">미국 동부 표준 시간대를 serialize 되어 미국에서 역직렬화 된 다음 태평양 표준 시간대를 오후 12시 30분 분의 원래 값</span><span class="sxs-lookup"><span data-stu-id="04f47-983">in the U.S. Eastern Time zone is serialized, and then deserialized in the U.S. Pacific Time zone, the original value of 12:30 P.M.</span></span> <span data-ttu-id="04f47-984">오전 9 시 30 분까지 조정</span><span class="sxs-lookup"><span data-stu-id="04f47-984">is adjusted to 9:30 A.M.</span></span> <span data-ttu-id="04f47-985">두 표준 시간대 차이 가리키도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-985">to reflect the difference between the two time zones.</span></span>  
  
-   <span data-ttu-id="04f47-986">경우는 <see cref="T:System.DateTime" /> serialize 되는 값 현지 표준 시간대에 잘못 된 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-986">If the <see cref="T:System.DateTime" /> value that is serialized represents an invalid time in the local time zone.</span></span> <span data-ttu-id="04f47-987">이 경우에 <see cref="M:System.DateTime.ToFileTime" /> 메서드 복원 된 조정 <see cref="T:System.DateTime" /> 현지 표준 시간대에 유효한 시간을 나타낼 수 있도록 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-987">In this case, the <see cref="M:System.DateTime.ToFileTime" /> method adjusts the restored <see cref="T:System.DateTime" /> value so that it represents a valid time in the local time zone.</span></span>  
  
     <span data-ttu-id="04f47-988">표준 시간에서 일광 절약 시간제로의 전환을 미국에서 발생 하는 예를 들어 2010 년 3 월 14 일 오전 2시, 시간이 오전 3 시에 1 시간으로 이동 하는 시기 태평양 표준 시간대</span><span class="sxs-lookup"><span data-stu-id="04f47-988">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="04f47-989">이 시간 간격은이 표준 시간대에 존재 하지 않는 하는 시간 간격, 즉 잘못 된 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-989">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="04f47-990">다음 예제에서는 내에 포함 되는 시간이이 범위는 정수 (long) 값으로 변환 됩니다는 <see cref="M:System.DateTime.ToFileTime" /> 메서드도 복원 되는 <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> 메서드를 원래 값은 시간으로 조정 되는 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-990">The following example shows that when a time that falls within this range is converted to a long integer value by the <see cref="M:System.DateTime.ToFileTime" /> method and is then restored by the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="04f47-991">있는지 여부를 특정 날짜 및 시간 값 따라야 수정 전달 하 여 확인할 수 있습니다는 <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> 메서드를 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-991">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)]
     [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</para>
        </block>
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTimeUtc">
      <MemberSignature Language="C#" Value="public static DateTime FromFileTimeUtc (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromFileTimeUtc(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromFileTimeUtc(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTimeUtc (fileTime As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromFileTimeUtc(long fileTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="04f47-992">A Windows file time expressed in ticks.</span><span class="sxs-lookup"><span data-stu-id="04f47-992">A Windows file time expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="04f47-993">Converts the specified Windows file time to an equivalent UTC time.</span><span class="sxs-lookup"><span data-stu-id="04f47-993">Converts the specified Windows file time to an equivalent UTC time.</span></span></summary>
        <returns><span data-ttu-id="04f47-994">An object that represents the UTC time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span><span class="sxs-lookup"><span data-stu-id="04f47-994">An object that represents the UTC time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-995">Windows 파일 시간은 서 기 1601 년 1 월 1 일 12시 자정부터 경과한 100 나노초 간격의 수를 나타내는 64 비트 값</span><span class="sxs-lookup"><span data-stu-id="04f47-995">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="04f47-996">(C.E.) Utc (협정 세계시)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-996">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="04f47-997">Windows 응용 프로그램에 액세스 하면 만들거나를 파일에 기록 하는 시기를 기록 하는 파일 시간을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-997">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="04f47-998">`fileTime` 매개 변수는 100 나노초에 표시 되는 파일 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-998">The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.</span></span>  
  
 <span data-ttu-id="04f47-999">반환 값은.NET Framework 버전 2.0 부터는 <xref:System.DateTime> 인 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Utc>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-999">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-1000"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1000"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
        <altmember cref="M:System.DateTime.FromFileTime(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FromOADate">
      <MemberSignature Language="C#" Value="public static DateTime FromOADate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromOADate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromOADate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOADate (d As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromOADate(double d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="04f47-1001">An OLE Automation Date value.</span><span class="sxs-lookup"><span data-stu-id="04f47-1001">An OLE Automation Date value.</span></span></param>
        <summary><span data-ttu-id="04f47-1002">Returns a <see cref="T:System.DateTime" /> equivalent to the specified OLE Automation Date.</span><span class="sxs-lookup"><span data-stu-id="04f47-1002">Returns a <see cref="T:System.DateTime" /> equivalent to the specified OLE Automation Date.</span></span></summary>
        <returns><span data-ttu-id="04f47-1003">An object that represents the same date and time as <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1003">An object that represents the same date and time as <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1004">`d` 매개 변수는 이전 또는 이후의 기준 날짜 자정 1899 년 12 월 30 일 수로 날짜를 나타내는 배정밀도 부동 소수점 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1004">The `d` parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899.</span></span> <span data-ttu-id="04f47-1005">기호와 정수 부분의 `d` 1899 년 12 월 30에서 더하거나 빼는 치환 및에서 소수 부분의 절대값으로 날짜를 인코딩하고 `d` 시간 자정에서 하루 치환 분수로을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1005">The sign and integral part of `d` encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of `d` encodes the time of day as a fraction of a day displacement from midnight.</span></span> <span data-ttu-id="04f47-1006">`d` 음수 657435.0 양수 2958465.99999999 사이의 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1006">`d` must be a value between negative 657435.0 through positive 2958465.99999999.</span></span>  
  
 <span data-ttu-id="04f47-1007">날짜가 인코딩 되는 방식으로 인해 1899 년 12 월 30 일 든 지를 나타내는 두 가지 방법으로 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1007">Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899.</span></span> <span data-ttu-id="04f47-1008">예를 들어-0.5와 0.5 정오를 의미 1899 년 12 월 30 일 변위 더하거나 기준 날짜에서 0 일은 여전히 기본 날짜 자정에서 1/2 일 치환 정오 이기 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1008">For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.</span></span>  
  
 <span data-ttu-id="04f47-1009">참조 <xref:System.DateTime.ToOADate%2A> OLE 자동화에 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1009">See <xref:System.DateTime.ToOADate%2A> for more information on OLE Automation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04f47-1010">The date is not a valid OLE Automation Date value.</span><span class="sxs-lookup"><span data-stu-id="04f47-1010">The date is not a valid OLE Automation Date value.</span></span></exception>
        <altmember cref="M:System.DateTime.ToOADate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDateTimeFormats">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-1011">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span><span class="sxs-lookup"><span data-stu-id="04f47-1011">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1012">여러 호출을 가정해 야는 <xref:System.DateTime.GetDateTimeFormats%2A> 오버 로드는 동일한 데이터를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1012">You should not assume that multiple calls to the <xref:System.DateTime.GetDateTimeFormats%2A> overloads will return identical data.</span></span> <span data-ttu-id="04f47-1013">특정 오버 로드에 따라 현재 문화권 변경 사용자 개별 문화권 설정을 무시 또는 업데이트 시스템의 문화권 데이터가 발생 하는 경우이 메서드에서 반환 되는 데이터 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1013">Depending on the specific overload, the data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1014">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span><span class="sxs-lookup"><span data-stu-id="04f47-1014">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span></span></summary>
        <returns><span data-ttu-id="04f47-1015">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span><span class="sxs-lookup"><span data-stu-id="04f47-1015">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1016">반환 된 문자열 배열에서 <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> 에 대 한 별도 호출에서 반환 된 문자열 배열을 결합 하는 것과 같습니다는 <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=nameWithType> "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U" 및 "y" 표준 형식 문자열을 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1016">The string array returned by the <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=nameWithType> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</span></span> <span data-ttu-id="04f47-1017">표준 형식 지정자에 대 한 자세한 내용은 참조 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1017">For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="04f47-1018">반환 값의 각 요소는 현재 문화권에서 정보를 사용 하 여 하는 형식이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1018">Each element of the return value is formatted using information from the current culture.</span></span> <span data-ttu-id="04f47-1019">현재 문화권에 대 한 문화권별 서식 지정 정보에 대 한 자세한 내용은 참조 하십시오. <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1019">For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1020">이 메서드는 문화권 구분 데이터를 사용 하므로 메서드를 여러 번 호출은 동일한 데이터를 반환 가정 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1020">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</span></span> <span data-ttu-id="04f47-1021">이 메서드에 의해 반환 되는 데이터는 현재 문화권 변경 사용자 개별 문화권 설정을 무시 또는 업데이트 시스템의 문화권 데이터가 발생 하는 경우 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1021">The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1022">다음 예제는 <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1022">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="04f47-1023">이 경우 EN-US 인 컴퓨터의 현재 문화권 모든 가능한 표준 날짜 및 시간 형식을 사용 하 여 날짜의 문자열 표현을 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1023">It displays the string representation of a date using all possible standard date and time formats in the computer's current culture, which in this case is en-US.</span></span>  
  
 [!code-cpp[DateTime.GetDateTimeFormats#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.GetDateTimeFormats#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#1)]
 [!code-vb[DateTime.GetDateTimeFormats#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#1)]  
  
 <span data-ttu-id="04f47-1024">이 예제는 다음과 같은 출력을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1024">The example displays the following output:</span></span>  
  
```  
7/28/2009  
7/28/09  
07/28/09  
07/28/2009  
09/07/28  
2009-07-28  
28-Jul-09  
Tuesday, July 28, 2009  
July 28, 2009  
Tuesday, 28 July, 2009  
28 July, 2009  
Tuesday, July 28, 2009 5:23 AM  
Tuesday, July 28, 2009 05:23 AM  
Tuesday, July 28, 2009 5:23  
Tuesday, July 28, 2009 05:23  
July 28, 2009 5:23 AM  
July 28, 2009 05:23 AM  
July 28, 2009 5:23  
July 28, 2009 05:23  
Tuesday, 28 July, 2009 5:23 AM  
Tuesday, 28 July, 2009 05:23 AM  
Tuesday, 28 July, 2009 5:23  
Tuesday, 28 July, 2009 05:23  
28 July, 2009 5:23 AM  
28 July, 2009 05:23 AM  
28 July, 2009 5:23  
28 July, 2009 05:23  
Tuesday, July 28, 2009 5:23:15 AM  
Tuesday, July 28, 2009 05:23:15 AM  
Tuesday, July 28, 2009 5:23:15  
Tuesday, July 28, 2009 05:23:15  
July 28, 2009 5:23:15 AM  
July 28, 2009 05:23:15 AM  
July 28, 2009 5:23:15  
July 28, 2009 05:23:15  
Tuesday, 28 July, 2009 5:23:15 AM  
Tuesday, 28 July, 2009 05:23:15 AM  
Tuesday, 28 July, 2009 5:23:15  
Tuesday, 28 July, 2009 05:23:15  
28 July, 2009 5:23:15 AM  
28 July, 2009 05:23:15 AM  
28 July, 2009 5:23:15  
28 July, 2009 05:23:15  
7/28/2009 5:23 AM  
7/28/2009 05:23 AM  
7/28/2009 5:23  
7/28/2009 05:23  
7/28/09 5:23 AM  
7/28/09 05:23 AM  
7/28/09 5:23  
7/28/09 05:23  
07/28/09 5:23 AM  
07/28/09 05:23 AM  
07/28/09 5:23  
07/28/09 05:23  
07/28/2009 5:23 AM  
07/28/2009 05:23 AM  
07/28/2009 5:23  
07/28/2009 05:23  
09/07/28 5:23 AM  
09/07/28 05:23 AM  
09/07/28 5:23  
09/07/28 05:23  
2009-07-28 5:23 AM  
2009-07-28 05:23 AM  
2009-07-28 5:23  
2009-07-28 05:23  
28-Jul-09 5:23 AM  
28-Jul-09 05:23 AM  
28-Jul-09 5:23  
28-Jul-09 05:23  
7/28/2009 5:23:15 AM  
7/28/2009 05:23:15 AM  
7/28/2009 5:23:15  
7/28/2009 05:23:15  
7/28/09 5:23:15 AM  
7/28/09 05:23:15 AM  
7/28/09 5:23:15  
7/28/09 05:23:15  
07/28/09 5:23:15 AM  
07/28/09 05:23:15 AM  
07/28/09 5:23:15  
07/28/09 05:23:15  
07/28/2009 5:23:15 AM  
07/28/2009 05:23:15 AM  
07/28/2009 5:23:15  
07/28/2009 05:23:15  
09/07/28 5:23:15 AM  
09/07/28 05:23:15 AM  
09/07/28 5:23:15  
09/07/28 05:23:15  
2009-07-28 5:23:15 AM  
2009-07-28 05:23:15 AM  
2009-07-28 5:23:15  
2009-07-28 05:23:15  
28-Jul-09 5:23:15 AM  
28-Jul-09 05:23:15 AM  
28-Jul-09 5:23:15  
28-Jul-09 05:23:15  
July 28  
July 28  
2009-07-28T05:23:15.0160000  
2009-07-28T05:23:15.0160000  
Tue, 28 Jul 2009 05:23:15 GMT  
Tue, 28 Jul 2009 05:23:15 GMT  
2009-07-28T05:23:15  
5:23 AM  
05:23 AM  
5:23  
05:23  
5:23:15 AM  
05:23:15 AM  
5:23:15  
05:23:15  
2009-07-28 05:23:15Z  
Tuesday, July 28, 2009 12:23:15 PM  
Tuesday, July 28, 2009 12:23:15 PM  
Tuesday, July 28, 2009 12:23:15  
Tuesday, July 28, 2009 12:23:15  
July 28, 2009 12:23:15 PM  
July 28, 2009 12:23:15 PM  
July 28, 2009 12:23:15  
July 28, 2009 12:23:15  
Tuesday, 28 July, 2009 12:23:15 PM  
Tuesday, 28 July, 2009 12:23:15 PM  
Tuesday, 28 July, 2009 12:23:15  
Tuesday, 28 July, 2009 12:23:15  
28 July, 2009 12:23:15 PM  
28 July, 2009 12:23:15 PM  
28 July, 2009 12:23:15  
28 July, 2009 12:23:15  
July, 2009  
July, 2009  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(char format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="04f47-1025">A standard date and time format string.</span><span class="sxs-lookup"><span data-stu-id="04f47-1025">A standard date and time format string.</span></span></param>
        <summary><span data-ttu-id="04f47-1026">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.</span><span class="sxs-lookup"><span data-stu-id="04f47-1026">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.</span></span></summary>
        <returns><span data-ttu-id="04f47-1027">A string array where each element is the representation of the value of this instance formatted with the <paramref name="format" /> standard date and time format specifier.</span><span class="sxs-lookup"><span data-stu-id="04f47-1027">A string array where each element is the representation of the value of this instance formatted with the <paramref name="format" /> standard date and time format specifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1028">`format` 매개 변수는 표준 날짜 및 시간 서식 지정자 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1028">The `format` parameter can be any of the standard date and time format specifiers.</span></span> <span data-ttu-id="04f47-1029">여기에 d, D, f, F, g, G, M (또는 m), O (또는 o) R (또는 r), s, t, T, u, U 및 Y (또는 y).</span><span class="sxs-lookup"><span data-stu-id="04f47-1029">These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</span></span> <span data-ttu-id="04f47-1030">자세한 내용은 참조 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1030">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="04f47-1031">반환 값의 각 요소는 현재 문화권에서 정보를 사용 하 여 하는 형식이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1031">Each element of the return value is formatted using information from the current culture.</span></span> <span data-ttu-id="04f47-1032">현재 문화권에 대 한 문화권별 서식 지정 정보에 대 한 자세한 내용은 참조 하십시오. <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1032">For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1033">이 메서드는 문화권 구분 데이터를 사용 하므로 메서드를 여러 번 호출은 동일한 데이터를 반환 가정 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1033">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</span></span> <span data-ttu-id="04f47-1034">이 메서드에 의해 반환 되는 데이터는 현재 문화권 변경 사용자 개별 문화권 설정을 무시 또는 업데이트 시스템의 문화권 데이터가 발생 하는 경우 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1034">The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1035">다음 예제는 <xref:System.DateTime.GetDateTimeFormats%28System.Char%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1035">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29> method.</span></span> <span data-ttu-id="04f47-1036">자세한 날짜 형식 지정자 ("D")를 사용 하 여 현재 문화권에 대 한 날짜의 문자열 표현을 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1036">It displays the string representation of a date using the long date format specifier ("D") for the current culture.</span></span>  
  
 [!code-csharp[DateTime.GetDateTimeFormats#3](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#3)]
 [!code-vb[DateTime.GetDateTimeFormats#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="04f47-1037"><paramref name="format" /> is not a valid standard date and time format specifier character.</span><span class="sxs-lookup"><span data-stu-id="04f47-1037"><paramref name="format" /> is not a valid standard date and time format specifier character.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (provider As IFormatProvider) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1038">An object that supplies culture-specific formatting information about this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1038">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="04f47-1039">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1039">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="04f47-1040">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span><span class="sxs-lookup"><span data-stu-id="04f47-1040">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1041">반환 된 문자열 배열에서 <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> 에 대 한 별도 호출에서 반환 된 문자열 배열을 결합 하는 것과 같습니다는 <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType> "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U" 및 "y" 표준 형식 문자열을 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1041">The string array returned by the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</span></span> <span data-ttu-id="04f47-1042">표준 형식 지정자에 대 한 자세한 내용은 참조 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1042">For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="04f47-1043">반환 값의 각 요소에서 제공 하는 문화권별 정보를 사용 하 여 형식이 `provider`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1043">Each element of the return value is formatted using culture-specific information supplied by `provider`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1044">이 메서드는 문화권 구분 데이터를 사용 하므로 가정 하지 않아야 메서드를 여러 번 호출 됩니다 하지 않는 한 동일한 데이터를 반환할 `provider` 는 <xref:System.Globalization.CultureInfo> 고정 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1044">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="04f47-1045">사용자의 개별 문화권 설정을 재정의 하는 경우이 메서드에서 반환 되는 데이터를 변경할 수 `provider` 업데이트에 대 한 시스템의 문화권 데이터가 발생 하는 경우 또는 `provider`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1045">The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1046">다음 예제는 <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1046">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="04f47-1047">FR-FR 문화권에 대 한 모든 가능한 표준 날짜 및 시간 형식을 사용 하 여 날짜의 문자열 표현을 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1047">It displays the string representation of a date using all possible standard date and time formats for the fr-FR culture.</span></span>  
  
 [!code-cpp[DateTime.GetDateTimeFormats#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#2)]
 [!code-csharp[DateTime.GetDateTimeFormats#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#2)]
 [!code-vb[DateTime.GetDateTimeFormats#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#2)]  
  
 <span data-ttu-id="04f47-1048">이 예제는 다음과 같은 출력을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1048">The example displays the following output:</span></span>  
  
```  
28/07/2009  
28/07/09  
28.07.09  
28-07-09  
2009-07-28  
mardi 28 juillet 2009  
28 juil. 09  
28 juillet 2009  
mardi 28 juillet 2009 05:23  
mardi 28 juillet 2009 5:23  
mardi 28 juillet 2009 05.23  
mardi 28 juillet 2009 05 h 23  
28 juil. 09 05:23  
28 juil. 09 5:23  
28 juil. 09 05.23  
28 juil. 09 05 h 23  
28 juillet 2009 05:23  
28 juillet 2009 5:23  
28 juillet 2009 05.23  
28 juillet 2009 05 h 23  
mardi 28 juillet 2009 05:23:15  
mardi 28 juillet 2009 5:23:15  
mardi 28 juillet 2009 05.23  
mardi 28 juillet 2009 05 h 23  
28 juil. 09 05:23:15  
28 juil. 09 5:23:15  
28 juil. 09 05.23  
28 juil. 09 05 h 23  
28 juillet 2009 05:23:15  
28 juillet 2009 5:23:15  
28 juillet 2009 05.23  
28 juillet 2009 05 h 23  
28/07/2009 05:23  
28/07/2009 5:23  
28/07/2009 05.23  
28/07/2009 05 h 23  
28/07/09 05:23  
28/07/09 5:23  
28/07/09 05.23  
28/07/09 05 h 23  
28.07.09 05:23  
28.07.09 5:23  
28.07.09 05.23  
28.07.09 05 h 23  
28-07-09 05:23  
28-07-09 5:23  
28-07-09 05.23  
28-07-09 05 h 23  
2009-07-28 05:23  
2009-07-28 5:23  
2009-07-28 05.23  
2009-07-28 05 h 23  
28/07/2009 05:23:15  
28/07/2009 5:23:15  
28/07/2009 05.23  
28/07/2009 05 h 23  
28/07/09 05:23:15  
28/07/09 5:23:15  
28/07/09 05.23  
28/07/09 05 h 23  
28.07.09 05:23:15  
28.07.09 5:23:15  
28.07.09 05.23  
28.07.09 05 h 23  
28-07-09 05:23:15  
28-07-09 5:23:15  
28-07-09 05.23  
28-07-09 05 h 23  
2009-07-28 05:23:15  
2009-07-28 5:23:15  
2009-07-28 05.23  
2009-07-28 05 h 23  
28 juillet  
28 juillet  
2009-07-28T05:23:15.0160000  
2009-07-28T05:23:15.0160000  
Tue, 28 Jul 2009 05:23:15 GMT  
Tue, 28 Jul 2009 05:23:15 GMT  
2009-07-28T05:23:15  
05:23  
5:23  
05.23  
05 h 23  
05:23:15  
5:23:15  
05.23  
05 h 23  
2009-07-28 05:23:15Z  
mardi 28 juillet 2009 12:23:15  
mardi 28 juillet 2009 12:23:15  
mardi 28 juillet 2009 12.23  
mardi 28 juillet 2009 12 h 23  
28 juil. 09 12:23:15  
28 juil. 09 12:23:15  
28 juil. 09 12.23  
28 juil. 09 12 h 23  
28 juillet 2009 12:23:15  
28 juillet 2009 12:23:15  
28 juillet 2009 12.23  
28 juillet 2009 12 h 23  
juillet 2009  
juillet 2009  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (char format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(char format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (format As Char, provider As IFormatProvider) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(char format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="04f47-1049">A date and time format string.</span><span class="sxs-lookup"><span data-stu-id="04f47-1049">A date and time format string.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-1050">An object that supplies culture-specific formatting information about this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1050">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="04f47-1051">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1051">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="04f47-1052">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span><span class="sxs-lookup"><span data-stu-id="04f47-1052">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1053">형식 매개 변수는 표준 날짜 및 시간 서식 지정자 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1053">The format parameter can be any of the standard date and time format specifiers.</span></span> <span data-ttu-id="04f47-1054">여기에 d, D, f, F, g, G, M (또는 m), O (또는 o) R (또는 r), s, t, T, u, U 및 Y (또는 y).</span><span class="sxs-lookup"><span data-stu-id="04f47-1054">These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</span></span> <span data-ttu-id="04f47-1055">자세한 내용은 참조 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1055">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="04f47-1056">반환 값의 각 요소에서 제공 하는 문화권별 정보를 사용 하 여 형식이 `provider`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1056">Each element of the return value is formatted using culture-specific information supplied by `provider`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1057">이 메서드는 문화권 구분 데이터를 사용 하므로 가정 하지 않아야 메서드를 여러 번 호출 됩니다 하지 않는 한 동일한 데이터를 반환할 `provider` 는 <xref:System.Globalization.CultureInfo> 고정 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1057">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="04f47-1058">사용자의 개별 문화권 설정을 재정의 하는 경우이 메서드에서 반환 되는 데이터를 변경할 수 `provider` 업데이트에 대 한 시스템의 문화권 데이터가 발생 하는 경우 또는 `provider`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1058">The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1059">다음 예제는 <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1059">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="04f47-1060">FR-FR 문화권에 대 한 간단한 날짜 형식 지정자 ("d")를 사용 하 여 날짜의 문자열 표현을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1060">It displays the string representations of a date using the short date format specifier ("d") for the fr-FR culture.</span></span>  
  
 [!code-csharp[DateTime.GetDateTimeFormats#4](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#4)]
 [!code-vb[DateTime.GetDateTimeFormats#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="04f47-1061"><paramref name="format" /> is not a valid standard date and time format specifier character.</span><span class="sxs-lookup"><span data-stu-id="04f47-1061"><paramref name="format" /> is not a valid standard date and time format specifier character.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1062">Returns the hash code for this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1062">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-1063">A 32-bit signed integer hash code.</span><span class="sxs-lookup"><span data-stu-id="04f47-1063">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1064">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1064">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1065">The enumerated constant, <see cref="F:System.TypeCode.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1065">The enumerated constant, <see cref="F:System.TypeCode.DateTime" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hour { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1066">Gets the hour component of the date represented by this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1066">Gets the hour component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-1067">0부터 23 사이의 값으로 표시되는 시간 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1067">The hour component, expressed as a value between 0 and 23.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1068">값은 <xref:System.DateTime.Hour%2A> 속성은 항상 24 시간제를 사용 하 여 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1068">The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock.</span></span> <span data-ttu-id="04f47-1069">날짜 및 시간을 12 시간 형식을 사용 하는 시간을 나타내는 문자열을 검색 하려면는 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> 또는 <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> "h" 사용자 지정 형식 지정자와 함께 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1069">To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with the "h" custom format specifier.</span></span> <span data-ttu-id="04f47-1070">예를 들어:</span><span class="sxs-lookup"><span data-stu-id="04f47-1070">For example:</span></span>  
  
 [!code-csharp[System.DateTime.Hour#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)]
 [!code-vb[System.DateTime.Hour#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1071">다음 예제는 <xref:System.DateTime.Hour%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1071">The following example demonstrates the <xref:System.DateTime.Hour%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.IsDaylightSavingTime" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDaylightSavingTime () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1072">Indicates whether this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the current time zone.</span><span class="sxs-lookup"><span data-stu-id="04f47-1072">Indicates whether this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the current time zone.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-1073"><see langword="true" /> if the value of the <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" /> or <see cref="F:System.DateTimeKind.Unspecified" /> and the value of this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the local time zone; <see langword="false" /> if <see cref="P:System.DateTime.Kind" /> is <see cref="F:System.DateTimeKind.Utc" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1073"><see langword="true" /> if the value of the <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" /> or <see cref="F:System.DateTimeKind.Unspecified" /> and the value of this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the local time zone; <see langword="false" /> if <see cref="P:System.DateTime.Kind" /> is <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1074">이 메서드는 확인 여부를 현재 <xref:System.DateTime> 에서 반환 되는 현지 표준 시간대의 일광 절약 시간 범위 내에서 값이는 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1074">This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="04f47-1075">값을 검색 하 여 표준 시간대 일광 절약 시간을 지원 하는지 여부를 확인할 수 있습니다는 <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1075">You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="04f47-1076">표준 시간대 일광 절약 시간제를 따르는 확인할 수 있습니다 일광 절약 시간에서으로 전환을 검색 하 여 발생 하는 경우는 <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> 표준 시간대에서 반환 된 배열 <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1076">For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="04f47-1077">하는 경우 현재 <xref:System.DateTime> 메서드 반환 값에 모호한 또는 잘못 된 시간에 현지 표준 시간대를 나타내는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1077">If the current <xref:System.DateTime> value represents either an ambiguous or an invalid time in the local time zone, the method returns `false`.</span></span>  
  
 <span data-ttu-id="04f47-1078">[!INCLUDE[winxp](~/includes/winxp-md.md)] 시스템의 <xref:System.DateTime.IsDaylightSavingTime%2A> 메서드는 현재 인스턴스가 일광 절약 시간제 인지를 결정할 때 현재 조정 규칙을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1078">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.IsDaylightSavingTime%2A> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time.</span></span> <span data-ttu-id="04f47-1079">결과적으로, 메서드가 있습니다 정확 하 게 보고 하지 현재 인스턴스가 현재 조정 규칙이 적용 되기 기간에 대 한 일광 절약 시간제 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1079">As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public static bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLeapYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.IsLeapYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLeapYear (year As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLeapYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="04f47-1080">A 4-digit year.</span><span class="sxs-lookup"><span data-stu-id="04f47-1080">A 4-digit year.</span></span></param>
        <summary><span data-ttu-id="04f47-1081">Returns an indication whether the specified year is a leap year.</span><span class="sxs-lookup"><span data-stu-id="04f47-1081">Returns an indication whether the specified year is a leap year.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-1082"><see langword="true" /> if <paramref name="year" /> is a leap year; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1082"><see langword="true" /> if <paramref name="year" /> is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1083">`year` 4 자리 10 진수로;로 지정 됩니다. 예를 들어 1996 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1083">`year` is specified as a 4-digit base 10 number; for example, 1996.</span></span>  
  
 <span data-ttu-id="04f47-1084">`year` 항상 일반 달력에서 1 년으로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1084">`year` is always interpreted as a year in the Gregorian calendar.</span></span> <span data-ttu-id="04f47-1085">다른 달력에서 특정 연도가 윤년 했는지를 확인 하려면 해당 일정 개체의 호출 `IsLeapYear` 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1085">To determine whether a particular year was a leap year in some other calendar, call that calendar object's `IsLeapYear` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1086">다음 예제에서는 <xref:System.DateTime.IsLeapYear%2A> 1994 년에서 2014 사이의 어느 연도가 윤년이 확인 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1086">The following example uses the <xref:System.DateTime.IsLeapYear%2A> method to determine which years between 1994 and 2014 are leap years.</span></span> <span data-ttu-id="04f47-1087">또한 예제는 결과 때는 <xref:System.DateTime.AddYears%2A> 연간 윤 일에 추가할 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1087">The example also illustrates the result when the <xref:System.DateTime.AddYears%2A> method is used to add a year to a leap day.</span></span>  
  
 [!code-csharp[System.DateTime.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/cs/IsLeapYear1.cs#1)]
 [!code-vb[System.DateTime.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/vb/IsLeapYear1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="04f47-1088"><paramref name="year" /> is less than 1 or greater than 9999.</span><span class="sxs-lookup"><span data-stu-id="04f47-1088"><paramref name="year" /> is less than 1 or greater than 9999.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public DateTimeKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeKind Kind" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As DateTimeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeKind Kind { DateTimeKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1089">Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</span><span class="sxs-lookup"><span data-stu-id="04f47-1089">Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</span></span></summary>
        <value><span data-ttu-id="04f47-1090">현재 시간이 나타내는 시간이 어떤 시간인지 나타내는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1090">One of the enumeration values that indicates what the current time represents.</span></span> <span data-ttu-id="04f47-1091">기본값은 <see cref="F:System.DateTimeKind.Unspecified" />입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1091">The default is <see cref="F:System.DateTimeKind.Unspecified" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1092">명시적으로 설정할 수는 <xref:System.DateTime.Kind%2A> 속성의 새 <xref:System.DateTime> 를 특정 값 <xref:System.DateTimeKind> 호출 하 여 값의 <xref:System.DateTime.SpecifyKind%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1092">You can explicitly set the <xref:System.DateTime.Kind%2A> property of a new <xref:System.DateTime> value to a particular <xref:System.DateTimeKind> value by calling the <xref:System.DateTime.SpecifyKind%2A> method.</span></span>  
  
 <span data-ttu-id="04f47-1093"><xref:System.DateTime.Kind%2A> 속성을 사용 하면 한 <xref:System.DateTime> 값을 utc (협정 세계시) 또는 현지 시간의 명확 하 게 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1093">The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time.</span></span> <span data-ttu-id="04f47-1094">반면,는 <xref:System.DateTimeOffset> 구조 반영할 수 있는 명확 하 게 표준 시간대에서 언제 든 지 단일 지점으로 시간에서입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1094">In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1095">다음 예제에서는 <xref:System.DateTime.SpecifyKind%2A> 메서드를 보여 주는 방법을 <xref:System.DateTime.Kind%2A> 속성 영향을 줍니다는 <xref:System.DateTime.ToLocalTime%2A> 및 <xref:System.DateTime.ToUniversalTime%2A> 변환 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1095">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly DateTime MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MaxValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1096">Represents the largest possible value of <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1096">Represents the largest possible value of <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="04f47-1097">This field is read-only.</span><span class="sxs-lookup"><span data-stu-id="04f47-1097">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1098">이 상수의 값은 UTC 23:59:59.9999999 12 월 31 일 9999 그레고리오력에서 10000 년 1 월 1 일 00시: 00 UTC 하기 전에 정확히 한 개의 100 나노초 눈금.</span><span class="sxs-lookup"><span data-stu-id="04f47-1098">The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.</span></span>  
  
 <span data-ttu-id="04f47-1099">와 같은 일부 달력은 <xref:System.Globalization.ThaiBuddhistCalendar>, 이전 상한 날짜 범위를 지원 <xref:System.DateTime.MaxValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1099">Some calendars, such as the <xref:System.Globalization.ThaiBuddhistCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>.</span></span> <span data-ttu-id="04f47-1100">이러한 경우에 액세스 하려고 <xref:System.DateTime.MaxValue> 변수 할당 또는 서식 지정 및 구문 분석 작업에서 throw 할 수는 <xref:System.ArgumentOutOfRangeException>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1100">In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="04f47-1101">값을 검색 하는 대신 <xref:System.DateTime.MaxValue?displayProperty=nameWithType>에서 지정된 된 문화권의 최신 유효한 날짜 값의 값을 검색할 수 있습니다는 <xref:System.Globalization.Calendar.MaxSupportedDateTime?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1101">Rather than retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1102">다음 예제는 <xref:System.DateTime> 생성자에 전달 하 여 개체는 <xref:System.Int64> 틱 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1102">The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="04f47-1103">생성자를 호출 하기 전에 예제를 사용 하면이 값 보다 크거나 `DateTime.MinValue.Ticks` 보다 작거나 같음 및 `DateTime.MaxValue.Ticks`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1103">Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`.</span></span> <span data-ttu-id="04f47-1104">Not, 발생 하는 경우는 <xref:System.ArgumentOutOfRangeException>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1104">If not, it throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]
 [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DateTime.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public int Millisecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Millisecond" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Millisecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Millisecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Millisecond { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1105">Gets the milliseconds component of the date represented by this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1105">Gets the milliseconds component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-1106">0부터 999 사이의 값으로 표시되는 밀리초 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1106">The milliseconds component, expressed as a value between 0 and 999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1107">문자열 표현을 표시할 수 있습니다는 <xref:System.DateTime.Millisecond%2A> "fff" 형식 지정자를 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1107">You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the "fff" format specifier.</span></span> <span data-ttu-id="04f47-1108">예를 들어 다음 코드는 날짜 및 시간을 콘솔에는 기간 (밀리초) 포함 하는 문자열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1108">For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)]
 [!code-vb[System.DateTime.Millisecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)]  
  
 <span data-ttu-id="04f47-1109">"O" 표준 서식 지정자를 사용 하 여 날짜 및 시간 값의 다른 구성 요소와 함께 밀리초 구성 요소를 표시할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1109">You can also display the millisecond component together with the other components of a date and time value by using the "o" standard format specifier.</span></span> <span data-ttu-id="04f47-1110">예를 들어:</span><span class="sxs-lookup"><span data-stu-id="04f47-1110">For example:</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)]
 [!code-vb[System.DateTime.Millisecond#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)]  
  
 <span data-ttu-id="04f47-1111">그러나이 "o" 서식 지정자는 사용할 저장 이나 라운드트립을 표시 보다는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1111">However, the "o" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value.</span></span> <span data-ttu-id="04f47-1112">다음 예제와 같이 사용자 지정 형식 문자열을 사용 하 여 다른 날짜 및 시간 구성 요소와 함께 시간 (밀리초)을 표시할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1112">You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)]
 [!code-vb[System.DateTime.Millisecond#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1113">다음 예제는 <xref:System.DateTime.Millisecond%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1113">The following example demonstrates the <xref:System.DateTime.Millisecond%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minute { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1114">Gets the minute component of the date represented by this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1114">Gets the minute component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-1115">0부터 59 사이의 값으로 표시되는 분 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1115">The minute component, expressed as a value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04f47-1116">다음 예제는 <xref:System.DateTime.Minute%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1116">The following example demonstrates the <xref:System.DateTime.Minute%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly DateTime MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MinValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MinValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1117">Represents the smallest possible value of <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1117">Represents the smallest possible value of <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="04f47-1118">This field is read-only.</span><span class="sxs-lookup"><span data-stu-id="04f47-1118">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1119">이 상수의 값은 그레고리오력에서 0001 년 이며 UTC 년 1 월 1 일에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1119">The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="04f47-1120"><xref:System.DateTime.MinValue> 할당 된 시간과 날짜를 정의 합니다. 초기화 되지 않은 <xref:System.DateTime> 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1120"><xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable.</span></span> <span data-ttu-id="04f47-1121">다음은 이에 대한 예입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1121">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)]
 [!code-vb[System.DateTime.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)]  
  
 <span data-ttu-id="04f47-1122"><xref:System.DateTime.MinValue> 및 <xref:System.DateTime.MaxValue> 전달 하기 전에 값이 지원 되는 범위 내에 있는지 확인 하려면 속성을 사용할 수는 <xref:System.DateTime> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1122">The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor.</span></span> <span data-ttu-id="04f47-1123">"예" 섹션의 코드는이 사용법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1123">The code in the Example section illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1124">다음 예제는 <xref:System.DateTime> 생성자에 전달 하 여 개체는 <xref:System.Int64> 틱 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1124">The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="04f47-1125">생성자를 호출 하기 전에 예제를 사용 하면이 값 보다 크거나 `DateTime.MinValue.Ticks` 보다 작거나 같음 및 `DateTime.MaxValue.Ticks`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1125">Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`.</span></span> <span data-ttu-id="04f47-1126">Not, 발생 하는 경우는 <xref:System.ArgumentOutOfRangeException>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1126">If not, it throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]
 [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1127">Gets the month component of the date represented by this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1127">Gets the month component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-1128">1부터 12 사이의 값으로 표시되는 월 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1128">The month component, expressed as a value between 1 and 12.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04f47-1129">다음 예제는 <xref:System.DateTime.Month%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1129">The following example demonstrates the <xref:System.DateTime.Month%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1130">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the local time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1130">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the local time.</span></span></summary>
        <value><span data-ttu-id="04f47-1131">현재 현지 날짜와 시간이 값인 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1131">An object whose value is the current local date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1132"><xref:System.DateTime.Now%2A> 속성에서 반환 된 <xref:System.DateTime> 현재 날짜 및 시간에 로컬 컴퓨터를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1132">The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer.</span></span> <span data-ttu-id="04f47-1133">간의 차이는 <xref:System.DateTime> 0001 년 1 월 1 일 자정 이후 경과 된 틱 수를 나타내는 값 및 해당 문자열 표현 <xref:System.DateTime> 의 날짜 및 시간 값 표현 하는 값을 culture 관련 별 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1133">Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format.</span></span> <span data-ttu-id="04f47-1134">날짜 및 시간 값 서식 지정에 대 한 자세한 내용은 참조는 <xref:System.DateTime.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1134">For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A> method.</span></span> <span data-ttu-id="04f47-1135">다음 예제에서는 여러 가지 문화권별 형식에서에서의 간단한 날짜 및 시간 문자열을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1135">The following example displays the short date and time string in a number of culture-specific formats.</span></span>  
  
 [!code-cpp[System.DateTime.Now#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)]
 [!code-csharp[System.DateTime.Now#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)]
 [!code-vb[System.DateTime.Now#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)]  
  
 <span data-ttu-id="04f47-1136">기본 운영 체제에 따라 달라 지는 시스템 타이머를 바탕으로이 속성을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1136">The resolution of this property depends on the system timer, which depends on the underlying operating system.</span></span> <span data-ttu-id="04f47-1137">것으로 확인 0.5 15 밀리초 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1137">It tends to be between 0.5 and 15 milliseconds.</span></span> <span data-ttu-id="04f47-1138">결과적으로 반복 호출을는 <xref:System.DateTime.Now%2A> 속성 루프와 같이 짧은 시간 간격에서 동일한 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1138">As a result, repeated calls to the <xref:System.DateTime.Now%2A> property in a short time interval, such as in a loop, may return the same value.</span></span>  
  
 <span data-ttu-id="04f47-1139"><xref:System.DateTime.Now%2A> 속성은 자주 성능을 측정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1139">The <xref:System.DateTime.Now%2A> property is frequently used to measure performance.</span></span> <span data-ttu-id="04f47-1140">낮은 해상도 것은 하지 벤치마킹 도구로 사용 하기에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1140">However, because of its low resolution, it is not suitable for use as a benchmarking tool.</span></span> <span data-ttu-id="04f47-1141">사용 하는 것이 더 좋은 것은 <xref:System.Diagnostics.Stopwatch> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1141">A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 <span data-ttu-id="04f47-1142">반환 값은.NET Framework 버전 2.0 부터는 <xref:System.DateTime> 인 <xref:System.DateTime.Kind%2A> 속성에서 반환 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1142">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04f47-1143">사용할 수도 있습니다는 <xref:System.DateTimeOffset.Now%2A?displayProperty=nameWithType> 현재 현지 날짜와 시간을 검색할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1143">You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=nameWithType> property to retrieve the current local date and time.</span></span> <span data-ttu-id="04f47-1144">가 현지 시간은 시간 값을 휴대용 컴퓨터 간에 시간 내에 단일 시점으로 명확 하 게 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1144">It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1145">다음 예제에서는 <xref:System.DateTime.Now%2A> 및 <xref:System.DateTime.UtcNow%2A> 현재 현지 날짜와 시간 및 현재 범용 검색 하는 속성 (UTC) 날짜 및 시간을 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1145">The following example uses the <xref:System.DateTime.Now%2A> and <xref:System.DateTime.UtcNow%2A> properties to retrieve the current local date and time and the current universal coordinated (UTC) date and time.</span></span> <span data-ttu-id="04f47-1146">다음 다양 한 문화권의 서식 지정 규칙 문자열을 표시, 함께의 값으로 사용 하 여는 자신의 <xref:System.DateTime.Kind%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1146">It then uses the formatting conventions of a number of cultures to display the strings, along with the values of the their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 [!code-cpp[System.DateTime.Now#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now2.cpp#3)]
 [!code-csharp[System.DateTime.Now#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now2.cs#3)]
 [!code-vb[System.DateTime.Now#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.Now" />
        <altmember cref="P:System.DateTime.UtcNow" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static DateTime operator + (DateTime d, TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Addition(valuetype System.DateTime d, valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As DateTime, t As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime operator +(DateTime d, TimeSpan t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="04f47-1147">The date and time value to add.</span><span class="sxs-lookup"><span data-stu-id="04f47-1147">The date and time value to add.</span></span></param>
        <param name="t"><span data-ttu-id="04f47-1148">The time interval to add.</span><span class="sxs-lookup"><span data-stu-id="04f47-1148">The time interval to add.</span></span></param>
        <summary><span data-ttu-id="04f47-1149">Adds a specified time interval to a specified date and time, yielding a new date and time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1149">Adds a specified time interval to a specified date and time, yielding a new date and time.</span></span></summary>
        <returns><span data-ttu-id="04f47-1150">An object that is the sum of the values of <paramref name="d" /> and <paramref name="t" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1150">An object that is the sum of the values of <paramref name="d" /> and <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="04f47-1151">이 연산자는 해당 하는 방법은 <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1151">The equivalent method for this operator is <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="04f47-1152">다음 예제에서는 더하기 연산자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1152">The following example demonstrates the addition operator.</span></span>  
  
 [!code-cpp[DateTime Operators#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#1)]
 [!code-csharp[DateTime Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#1)]
 [!code-vb[DateTime Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-1153">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1153">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DateTime.Ticks" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As DateTime, d2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTime d1, DateTime d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="04f47-1154">The first object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1154">The first object to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="04f47-1155">The second object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1155">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="04f47-1156">Determines whether two specified instances of <see cref="T:System.DateTime" /> are equal.</span><span class="sxs-lookup"><span data-stu-id="04f47-1156">Determines whether two specified instances of <see cref="T:System.DateTime" /> are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-1157"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> represent the same date and time; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1157"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> represent the same date and time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1158"><xref:System.DateTime.op_Equality%2A> 두 연산자에 따라 결정 <xref:System.DateTime> 틱의 수를 비교 하 여 값이 같은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1158">The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks.</span></span> <span data-ttu-id="04f47-1159">비교 하기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1159">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-1160">이렇게 하려면 <xref:System.DateTime.Kind%2A> 속성의 값을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1160">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="04f47-1161">이 연산자는 해당 하는 방법은 <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1161">The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="04f47-1162">다음 예제에서는 같음 연산자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1162">The following example demonstrates the equality operator.</span></span>  
  
 [!code-cpp[DateTime Operators#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#2)]
 [!code-csharp[DateTime Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#2)]
 [!code-vb[DateTime Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Equals(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTime t1, DateTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="04f47-1163">The first object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1163">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="04f47-1164">The second object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1164">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="04f47-1165">Determines whether one specified <see cref="T:System.DateTime" /> is later than another specified <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1165">Determines whether one specified <see cref="T:System.DateTime" /> is later than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-1166"><see langword="true" /> if <paramref name="t1" /> is later than <paramref name="t2" />; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1166"><see langword="true" /> if <paramref name="t1" /> is later than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1167"><xref:System.DateTime.op_GreaterThan%2A> 두 관계를 결정 하는 연산자 <xref:System.DateTime> 틱의 수를 비교 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1167">The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="04f47-1168">비교 하기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1168">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-1169">이렇게 하려면 <xref:System.DateTime.Kind%2A> 속성의 값을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1169">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="04f47-1170">이 연산자는 해당 하는 방법은 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1170">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTime t1, DateTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="04f47-1171">The first object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1171">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="04f47-1172">The second object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1172">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="04f47-1173">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or later than another specified <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1173">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or later than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-1174"><see langword="true" /> if <paramref name="t1" /> is the same as or later than <paramref name="t2" />; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1174"><see langword="true" /> if <paramref name="t1" /> is the same as or later than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1175"><xref:System.DateTime.op_GreaterThanOrEqual%2A> 두 관계를 결정 하는 연산자 <xref:System.DateTime> 틱의 수를 비교 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1175">The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="04f47-1176">비교 하기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1176">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-1177">이렇게 하려면 <xref:System.DateTime.Kind%2A> 속성의 값을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1177">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="04f47-1178">이 연산자는 해당 하는 방법은 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1178">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As DateTime, d2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTime d1, DateTime d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="04f47-1179">The first object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1179">The first object to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="04f47-1180">The second object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1180">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="04f47-1181">Determines whether two specified instances of <see cref="T:System.DateTime" /> are not equal.</span><span class="sxs-lookup"><span data-stu-id="04f47-1181">Determines whether two specified instances of <see cref="T:System.DateTime" /> are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-1182"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> do not represent the same date and time; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1182"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> do not represent the same date and time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1183"><xref:System.DateTime.op_Inequality%2A> 두 연산자에 따라 결정 <xref:System.DateTime> 틱의 수를 비교 하 여 값을 같지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1183">The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks.</span></span> <span data-ttu-id="04f47-1184">비교 하기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1184">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-1185">이렇게 하려면 <xref:System.DateTime.Kind%2A> 속성의 값을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1185">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="04f47-1186">이 연산자는 해당 하는 방법은 <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1186">The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTime t1, DateTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="04f47-1187">The first object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1187">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="04f47-1188">The second object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1188">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="04f47-1189">Determines whether one specified <see cref="T:System.DateTime" /> is earlier than another specified <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1189">Determines whether one specified <see cref="T:System.DateTime" /> is earlier than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-1190"><see langword="true" /> if <paramref name="t1" /> is earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1190"><see langword="true" /> if <paramref name="t1" /> is earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1191"><xref:System.DateTime.op_LessThan%2A> 두 관계를 결정 하는 연산자 <xref:System.DateTime> 틱의 수를 비교 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1191">The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="04f47-1192">비교 하기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1192">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-1193">이렇게 하려면 <xref:System.DateTime.Kind%2A> 속성의 값을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1193">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="04f47-1194">이 연산자는 해당 하는 방법은 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1194">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTime t1, DateTime t2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="04f47-1195">The first object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1195">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="04f47-1196">The second object to compare.</span><span class="sxs-lookup"><span data-stu-id="04f47-1196">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="04f47-1197">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or earlier than another specified <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1197">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or earlier than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-1198"><see langword="true" /> if <paramref name="t1" /> is the same as or earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1198"><see langword="true" /> if <paramref name="t1" /> is the same as or earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1199"><xref:System.DateTime.op_LessThanOrEqual%2A> 두 관계를 결정 하는 연산자 <xref:System.DateTime> 틱의 수를 비교 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1199">The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="04f47-1200">비교 하기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1200">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-1201">이렇게 하려면 <xref:System.DateTime.Kind%2A> 속성의 값을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1201">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="04f47-1202">이 연산자는 해당 하는 방법은 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1202">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-1203">Subtracts a specified <see cref="T:System.DateTime" /> or<see cref="T:System.TimeSpan" /> from a specified <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1203">Subtracts a specified <see cref="T:System.DateTime" /> or<see cref="T:System.TimeSpan" /> from a specified <see cref="T:System.DateTime" />.</span></span></summary>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As DateTime, d2 As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(DateTime d1, DateTime d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="04f47-1204">The date and time value to subtract from (the minuend).</span><span class="sxs-lookup"><span data-stu-id="04f47-1204">The date and time value to subtract from (the minuend).</span></span></param>
        <param name="d2"><span data-ttu-id="04f47-1205">The date and time value to subtract (the subtrahend).</span><span class="sxs-lookup"><span data-stu-id="04f47-1205">The date and time value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="04f47-1206">Subtracts a specified date and time from another specified date and time and returns a time interval.</span><span class="sxs-lookup"><span data-stu-id="04f47-1206">Subtracts a specified date and time from another specified date and time and returns a time interval.</span></span></summary>
        <returns><span data-ttu-id="04f47-1207">The time interval between <paramref name="d1" /> and <paramref name="d2" />; that is, <paramref name="d1" /> minus <paramref name="d2" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1207">The time interval between <paramref name="d1" /> and <paramref name="d2" />; that is, <paramref name="d1" /> minus <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1208"><xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> 메서드 값을 고려 하지 않습니다는 <xref:System.DateTime.Kind%2A> 속성 두 <xref:System.DateTime> 빼기를 수행 하는 경우 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1208">The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction.</span></span> <span data-ttu-id="04f47-1209">빼기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1209">Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-1210">그렇지 않으면 결과 시간대 간의 차이가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1210">Otherwise, the result will include the difference between time zones.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04f47-1211"><xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> 메서드는 빼기를 수행 하는 경우 표준 시간대 사이의 차이 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1211">The <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> method does consider the difference between time zones when performing the subtraction.</span></span>  
  
 <span data-ttu-id="04f47-1212">이 연산자는 해당 하는 방법은 <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1212">The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="04f47-1213">다음 예제는 <xref:System.DateTime.Subtract%2A> 메서드와 빼기 연산자.</span><span class="sxs-lookup"><span data-stu-id="04f47-1213">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
        <altmember cref="P:System.DateTime.Ticks" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static DateTime operator - (DateTime d, TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Subtraction(valuetype System.DateTime d, valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As DateTime, t As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime operator -(DateTime d, TimeSpan t);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="04f47-1214">The date and time value to subtract from.</span><span class="sxs-lookup"><span data-stu-id="04f47-1214">The date and time value to subtract from.</span></span></param>
        <param name="t"><span data-ttu-id="04f47-1215">The time interval to subtract.</span><span class="sxs-lookup"><span data-stu-id="04f47-1215">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="04f47-1216">Subtracts a specified time interval from a specified date and time and returns a new date and time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1216">Subtracts a specified time interval from a specified date and time and returns a new date and time.</span></span></summary>
        <returns><span data-ttu-id="04f47-1217">An object whose value is the value of <paramref name="d" /> minus the value of <paramref name="t" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1217">An object whose value is the value of <paramref name="d" /> minus the value of <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1218">이 메서드는 틱 값을 빼고 `t` 의 틱 값에서 `d`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1218">This method subtracts the ticks value of `t` from the ticks value of `d`.</span></span>  
  
 <span data-ttu-id="04f47-1219">이 연산자는 해당 하는 방법은 <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1219">The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="04f47-1220">다음 예제는 <xref:System.DateTime.Subtract%2A> 메서드와 빼기 연산자.</span><span class="sxs-lookup"><span data-stu-id="04f47-1220">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-1221">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1221">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Subtract(System.TimeSpan)" />
        <altmember cref="P:System.DateTime.Ticks" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-1222">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span><span class="sxs-lookup"><span data-stu-id="04f47-1222">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1223">섹션 내용</span><span class="sxs-lookup"><span data-stu-id="04f47-1223">In this section:</span></span>  
  
 <span data-ttu-id="04f47-1224">[어떤 방법을 호출할 수 있습니까?](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="04f47-1224">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="04f47-1225">[문자열을 구문 분석](#StringToParse) </span><span class="sxs-lookup"><span data-stu-id="04f47-1225">[The string to parse](#StringToParse) </span></span>  
 <span data-ttu-id="04f47-1226">[구문 분석 및 문화적 규칙](#Culture) </span><span class="sxs-lookup"><span data-stu-id="04f47-1226">[Parsing and cultural conventions](#Culture) </span></span>  
 <span data-ttu-id="04f47-1227">[구문 분석 하 고 스타일 요소](#Styles) </span><span class="sxs-lookup"><span data-stu-id="04f47-1227">[Parsing and style elements](#Styles) </span></span>  
 [<span data-ttu-id="04f47-1228">반환 값과 DateTime.Kind</span><span class="sxs-lookup"><span data-stu-id="04f47-1228">The return value and DateTime.Kind</span></span>](#kind)
 
<a name="Tasks"></a>   
### <a name="which-method-do-i-call"></a><span data-ttu-id="04f47-1229">어떤 방법을 호출할 수 있습니까?</span><span class="sxs-lookup"><span data-stu-id="04f47-1229">Which method do I call?</span></span>  
  
|<span data-ttu-id="04f47-1230">대상</span><span class="sxs-lookup"><span data-stu-id="04f47-1230">To</span></span>|<span data-ttu-id="04f47-1231">호출</span><span class="sxs-lookup"><span data-stu-id="04f47-1231">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="04f47-1232">현재 문화권의 규칙을 사용 하 여 날짜 및 시간 문자열 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1232">Parse a date and time string by using the conventions of the current culture.</span></span>|<span data-ttu-id="04f47-1233"><xref:System.DateTime.Parse%28System.String%29> 오버로드</span><span class="sxs-lookup"><span data-stu-id="04f47-1233"><xref:System.DateTime.Parse%28System.String%29> overload</span></span>|  
|<span data-ttu-id="04f47-1234">특정 문화권의 규칙을 사용 하 여 날짜 및 시간 문자열 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1234">Parse a date and time string by using the conventions of a specific culture.</span></span>|<span data-ttu-id="04f47-1235"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 오버 로드 (참조 [구문 분석 및 문화권별 표기법](#Culture))</span><span class="sxs-lookup"><span data-stu-id="04f47-1235"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> overload (see [Parsing and Cultural Conventions](#Culture))</span></span>|  
|<span data-ttu-id="04f47-1236">특별 한 스타일 요소 (예: 공백 없는 또는 공백) 날짜 및 시간 문자열 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1236">Parse a date and time string with special style elements (such as white space or no white space).</span></span>|<span data-ttu-id="04f47-1237"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 오버로드</span><span class="sxs-lookup"><span data-stu-id="04f47-1237"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload</span></span>|  
|<span data-ttu-id="04f47-1238">특정 형식에 있어야 하는 날짜 및 시간 문자열 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1238">Parse a date and time string that must be in a particular format.</span></span>|<span data-ttu-id="04f47-1239"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> 또는 <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1239"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> or <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType></span></span>|
|<span data-ttu-id="04f47-1240">날짜 및 시간 문자열 구문 분석 하 고 UTC 또는 현지 시간으로의 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1240">Parse a date and time string and perform a conversion to UTC or local time.</span></span>|<span data-ttu-id="04f47-1241"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 오버로드</span><span class="sxs-lookup"><span data-stu-id="04f47-1241"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload</span></span>|  
|<span data-ttu-id="04f47-1242">예외를 처리 하지 않고 날짜 및 시간 문자열 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1242">Parse a date and time string without handling exceptions.</span></span>|<span data-ttu-id="04f47-1243"><xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> 메서드</span><span class="sxs-lookup"><span data-stu-id="04f47-1243"><xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method</span></span>|  
|<span data-ttu-id="04f47-1244">서식 지정 작업에서 만든 날짜 및 시간 값 (왕복)을 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1244">Restore (round-trip) a date and time value created by a formatting operation.</span></span>|<span data-ttu-id="04f47-1245">"O" 또는 "r" 표준 형식 문자열을 전달는 <xref:System.DateTime.ToString%28System.String%29> 메서드와 호출은 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 오버 로드 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="04f47-1245">Pass the "o" or "r" standard format string to the <xref:System.DateTime.ToString%28System.String%29> method, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload with <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="04f47-1246">컴퓨터 (및 가능한 문화적) 경계를 넘어 고정된 형식으로 날짜 및 시간 문자열 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1246">Parse a date and time string in a fixed format across machine (and possibly cultural) boundaries.</span></span>|<span data-ttu-id="04f47-1247"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> 또는 <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> 메서드</span><span class="sxs-lookup"><span data-stu-id="04f47-1247"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> or <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method</span></span>|  
  
<a name="StringToParse"></a>   
### <a name="the-string-to-parse"></a><span data-ttu-id="04f47-1248">문자열을 구문 분석</span><span class="sxs-lookup"><span data-stu-id="04f47-1248">The string to parse</span></span>  
 <span data-ttu-id="04f47-1249"><xref:System.DateTime.Parse%2A> 메서드는 날짜 및 시간 값을 문자열 표현으로 변환 하려고 합니다. 해당 <xref:System.DateTime> 와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1249">The <xref:System.DateTime.Parse%2A> method tries to convert the string representation of a date and time value to its <xref:System.DateTime> equivalent.</span></span> <span data-ttu-id="04f47-1250">throw 하지 않고 완전히 입력된 문자열을 구문 분석 한 <xref:System.FormatException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1250">It tries to parse the input string completely without throwing a <xref:System.FormatException> exception.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1251">인식할 수 없는 문자열 형식으로 인해 실패 하면 구문 분석 작업의 <xref:System.DateTime.Parse%2A> 메서드가 throw는 <xref:System.FormatException>반면는 <xref:System.DateTime.TryParse%2A> 메서드 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1251">If the parsing operation fails because of an unrecognized string format, the <xref:System.DateTime.Parse%2A> method throws a <xref:System.FormatException>, whereas the <xref:System.DateTime.TryParse%2A> method returns `false`.</span></span> <span data-ttu-id="04f47-1252">예외 처리를 많이 소모할 수 수 있으므로 사용 해야 <xref:System.DateTime.Parse%2A> 때 구문 분석 작업 해야 하는 입력된 소스를 신뢰할 수 때문에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1252">Because exception handling can be expensive, you should use <xref:System.DateTime.Parse%2A> when the parsing operation is expected to succeed because the input source is trusted.</span></span> <span data-ttu-id="04f47-1253"><xref:System.DateTime.TryParse%2A> 입력된 소스를 신뢰할 수 없거나 성공적으로 구문 분석 하지 않는 문자열에 대 한 대체 적당 한 기본값을 가질 때문에 특히, 구문 분석 오류가 있는 경우는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1253"><xref:System.DateTime.TryParse%2A> is preferable when parsing failures are likely, particularly because an input source is not trusted, or you have reasonable default values to substitute for strings that do not parse successfully.</span></span>   

 <span data-ttu-id="04f47-1254">문자열 구문 분석을 다음 형식 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1254">The string to be parsed can take any of the following forms:</span></span>  
  
-   <span data-ttu-id="04f47-1255">날짜 및 시간 구성 요소에 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1255">A string with a date and a time component.</span></span>  
  
-   <span data-ttu-id="04f47-1256">날짜만 시간 구성 요소가 없는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1256">A string with a date but no time component.</span></span> <span data-ttu-id="04f47-1257">시간 구성 요소가 없는 경우, 메서드가 자정 12 시를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1257">If the time component is absent, the method assumes 12:00 midnight.</span></span> <span data-ttu-id="04f47-1258">날짜 구성 요소에는 두 자리 연도, 경우에 따라 1 년 변환 됩니다는 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> 현재 문화권의 현재 달력이 나 지정된 된 문화권의 현재 달력 (null이 아닌 오버 로드를 사용 하는 경우 `provider` 인수).</span><span class="sxs-lookup"><span data-stu-id="04f47-1258">If the date component has a two-digit year, it is converted to a year based on the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> of the current culture's current calendar or the specified culture's current calendar (if you use an overload with a non-null `provider` argument).</span></span>  
  
- <span data-ttu-id="04f47-1259">월과 연도 포함 하는 날짜 구성 요소가 있지만 없는 일 구성 요소는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1259">A string with a date component that includes only the month and the year but no day component.</span></span> <span data-ttu-id="04f47-1260">메서드는 해당 월의 첫 번째 날을 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1260">The method assumes the first day of the month.</span></span>

- <span data-ttu-id="04f47-1261">월 및 일을 포함 하는 날짜 구성 요소가 있고 연도 구성 요소가 없는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1261">A string with a date component that includes only the month and the day but no year component.</span></span> <span data-ttu-id="04f47-1262">메서드는 현재 연도 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1262">The method assumes the current year.</span></span>

-   <span data-ttu-id="04f47-1263">한 번만 날짜 구성 요소가 없습니다. 사용 되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1263">A string with a time but no date component.</span></span> <span data-ttu-id="04f47-1264">메서드를 호출 하지 않으면 현재 날짜가 가정는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 오버 로드 하 고 포함 <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> 에 `styles` 있는 경우 메서드가 가정 년 1 월 1 일의 날짜 0001 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1264">The method assumes the current date unless you call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload and include <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> in the `styles` argument, in which case the method assumes a date of January 1, 0001.</span></span>  

- <span data-ttu-id="04f47-1265">시간 구성 요소에는 시간 및 날짜 구성 요소가 없는 AM/PM 지정자를 포함 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1265">A string with a time component that includes only the hour and an AM/PM designator, with no date component.</span></span> <span data-ttu-id="04f47-1266">메서드는 현재 날짜와 시간 없는 분 및 초 없음 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1266">The method assumes the current date and a time with no minutes and no seconds.</span></span> <span data-ttu-id="04f47-1267">호출 하 여이 동작을 변경할 수는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 오버 로드 하 고 포함 <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> 에 `styles` 있는 경우 메서드가 가정 년 1 월 1 일의 날짜 0001 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1267">You can change this behavior by calling the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload and include <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> in the `styles` argument, in which case the method assumes a date of January 1, 0001.</span></span>

-   <span data-ttu-id="04f47-1268">시간대 정보가 포함 되 고 ISO 8601을 준수 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1268">A string that includes time zone information and conforms to ISO 8601.</span></span> <span data-ttu-id="04f47-1269">다음 예제에서 첫 번째 문자열은 utc (협정 세계시)를 지정 하 고는 7 개 시간 표준 시간대의 시간을 지정 하는 두 번째 UTC 보다 이전 버전:</span><span class="sxs-lookup"><span data-stu-id="04f47-1269">In the following examples, the first string designates Coordinated Universal Time (UTC), and the second designates the time in a time zone that's seven hours earlier than UTC:</span></span>  
  
    <span data-ttu-id="04f47-1270">"2008-11-01T19:35:00.0000000Z"</span><span class="sxs-lookup"><span data-stu-id="04f47-1270">"2008-11-01T19:35:00.0000000Z"</span></span>   
    <span data-ttu-id="04f47-1271">"2008-11-01T19:35:00.0000000-07:00"</span><span class="sxs-lookup"><span data-stu-id="04f47-1271">"2008-11-01T19:35:00.0000000-07:00"</span></span>  
  
-   <span data-ttu-id="04f47-1272">RFC 1123 시간 형식을; GMT 지정자를 포함 하는 문자열 예를 들어:</span><span class="sxs-lookup"><span data-stu-id="04f47-1272">A string that includes the GMT designator and conforms to the RFC 1123 time format; for example:</span></span>  
  
     <span data-ttu-id="04f47-1273">"2008 년 11 월 1 일, 토요일 19시 35분: 00 GMT"</span><span class="sxs-lookup"><span data-stu-id="04f47-1273">"Sat, 01 Nov 2008 19:35:00 GMT"</span></span>  
  
-   <span data-ttu-id="04f47-1274">날짜 및 시간과 표준 시간대 오프셋된 정보를 포함 하는 문자열 예를 들어:</span><span class="sxs-lookup"><span data-stu-id="04f47-1274">A string that includes the date and time along with time zone offset information; for example:</span></span>  
  
     <span data-ttu-id="04f47-1275">"03/01/2009 05:42:00 -5:00"</span><span class="sxs-lookup"><span data-stu-id="04f47-1275">"03/01/2009 05:42:00 -5:00"</span></span>  

<span data-ttu-id="04f47-1276">다음 예제에서는 EN-US 문화권에이 경우에 현재 문화권의 서식 지정 규칙을 사용 하 여 각각의 이러한 형식에서 문자열을 구문 분석:</span><span class="sxs-lookup"><span data-stu-id="04f47-1276">The following example parses strings in each of these formats by using the formatting conventions of the current culture, which in this case is the en-US culture:</span></span>

[!code-csharp-interactive[Default parsing](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse6.cs)]
[!code-vb[Default parsing](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse6.vb)]  
  
 <span data-ttu-id="04f47-1277">입력된 문자열 구문 분석 방법에서 사용 하는 달력에서 윤년에서 윤 일을 나타내는 경우 (참조 [구문 분석 및 문화적 규칙](#Culture)), <xref:System.DateTime.Parse%2A> 메서드 문자열을 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1277">If the input string represents a leap day in a leap year in the calendar used by the parsing method (see [Parsing and cultural conventions](#Culture)), the <xref:System.DateTime.Parse%2A> method parses the string successfully.</span></span> <span data-ttu-id="04f47-1278">입력된 문자열에서 비-윤년 윤 일을 나타내는 경우 메서드에서 throw 된 <xref:System.FormatException>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1278">If the input string represents a leap day in a non-leap year, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="04f47-1279">때문에 <xref:System.DateTime.Parse%2A> 메서드 날짜의 문자열 표현을 구문 분석 하려고 시도 하 고 현재 또는 서로 다른 문화권에서 문자열을 구문 분석 하려고 하는 지정 된 문화권의 서식 설정 규칙을 사용 하 여 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1279">Because the <xref:System.DateTime.Parse%2A> method tries to parse the string representation of a date and time by using the formatting rules of the current or a specified culture, trying to parse a string across different cultures can fail.</span></span> <span data-ttu-id="04f47-1280">을 구문 분석 하려면 특정 날짜 및 시간 형식으로 여러 로캘에서 오버 로드 중 하나를 사용는 <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> 메서드 및 형식 지정자를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1280">To parse a specific date and time format across different locales, use one of the overloads of the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method and provide a format specifier.</span></span>  
  
<a name="Culture"></a>   
### <a name="parsing-and-cultural-conventions"></a><span data-ttu-id="04f47-1281">구문 분석 및 문화적 규칙</span><span class="sxs-lookup"><span data-stu-id="04f47-1281">Parsing and cultural conventions</span></span>  
 <span data-ttu-id="04f47-1282">모든 오버 로드는 <xref:System.DateTime.Parse%2A> 메서드는 문화권을 구분 하지 않는 한 문자열을 구문 분석할 수 (으로 나타나는 `s` 다음 표에) ISO 8601 패턴을 준수 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1282">All overloads of the <xref:System.DateTime.Parse%2A> method are culture-sensitive unless the string to be parsed (which is represented by `s` in the following table) conforms to the ISO 8601 pattern.</span></span> <span data-ttu-id="04f47-1283">구문 분석 작업의 형식 지정 정보를 사용 하는 <xref:System.Globalization.DateTimeFormatInfo> 다음과 같이 파생 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1283">The parsing operation uses the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is derived as follows:</span></span>  
  
|<span data-ttu-id="04f47-1284">호출 하는 경우</span><span class="sxs-lookup"><span data-stu-id="04f47-1284">If you call</span></span>|<span data-ttu-id="04f47-1285">및 `provider` 은</span><span class="sxs-lookup"><span data-stu-id="04f47-1285">And `provider` is</span></span>|<span data-ttu-id="04f47-1286">서식 지정 정보에서 파생</span><span class="sxs-lookup"><span data-stu-id="04f47-1286">Formatting information is derived from</span></span>|  
|-----------------|-----------------------|--------------------------------------------|  
|<xref:System.DateTime.Parse%28System.String%29>|-|<span data-ttu-id="04f47-1287">현재 스레드 문화권 (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> 속성)</span><span class="sxs-lookup"><span data-stu-id="04f47-1287">The current thread culture (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property)</span></span>|  
|<span data-ttu-id="04f47-1288"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 또는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="04f47-1288"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="04f47-1289">A <xref:System.Globalization.DateTimeFormatInfo> 개체</span><span class="sxs-lookup"><span data-stu-id="04f47-1289">a <xref:System.Globalization.DateTimeFormatInfo> object</span></span>|<span data-ttu-id="04f47-1290">지정 된 <xref:System.Globalization.DateTimeFormatInfo> 개체</span><span class="sxs-lookup"><span data-stu-id="04f47-1290">The specified <xref:System.Globalization.DateTimeFormatInfo> object</span></span>|  
|<span data-ttu-id="04f47-1291"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 또는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="04f47-1291"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|`null`|<span data-ttu-id="04f47-1292">현재 스레드 문화권 (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> 속성)</span><span class="sxs-lookup"><span data-stu-id="04f47-1292">The current thread culture (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property)</span></span>|  
|<span data-ttu-id="04f47-1293"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 또는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="04f47-1293"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="04f47-1294">A <xref:System.Globalization.CultureInfo> 개체</span><span class="sxs-lookup"><span data-stu-id="04f47-1294">a <xref:System.Globalization.CultureInfo> object</span></span>|<span data-ttu-id="04f47-1295"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성</span><span class="sxs-lookup"><span data-stu-id="04f47-1295">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property</span></span>|  
|<span data-ttu-id="04f47-1296"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 또는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="04f47-1296"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="04f47-1297">사용자 지정 <xref:System.IFormatProvider> 구현</span><span class="sxs-lookup"><span data-stu-id="04f47-1297">Custom <xref:System.IFormatProvider> implementation</span></span>|<span data-ttu-id="04f47-1298"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드</span><span class="sxs-lookup"><span data-stu-id="04f47-1298">The <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method</span></span>|  
  
 <span data-ttu-id="04f47-1299">형식 지정 정보에서 파생 된는 <xref:System.Globalization.DateTimeFormatInfo> 개체는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> 속성은 구문 분석 작업에서 사용 되는 달력을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1299">When formatting information is derived from a <xref:System.Globalization.DateTimeFormatInfo> object, the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property defines the calendar used in the parsing operation.</span></span>  
  
 <span data-ttu-id="04f47-1300">사용 하 여 날짜 및 시간 문자열 구문 분석 하는 경우는 <xref:System.Globalization.DateTimeFormatInfo> 인 개체는 사용자 지정 설정이 다른 표준 문화권의 특성이, 사용 하 여는 <xref:System.DateTime.ParseExact%2A> 메서드 대신는 <xref:System.DateTime.Parse%2A> 메서드를 성공적으로 변환에 대 한 기회를 늘리기 위해.</span><span class="sxs-lookup"><span data-stu-id="04f47-1300">If you parse a date and time string by using a <xref:System.Globalization.DateTimeFormatInfo> object with customized settings that are different from those of a standard culture, use the <xref:System.DateTime.ParseExact%2A> method instead of the <xref:System.DateTime.Parse%2A> method to improve the chances for a successful conversion.</span></span> <span data-ttu-id="04f47-1301">비 표준 날짜 및 시간 문자열 복잡 하 고 구문 분석 하기 어려울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1301">A non-standard date and time string can be complicated and difficult to parse.</span></span> <span data-ttu-id="04f47-1302"><xref:System.DateTime.Parse%2A> 메서드 중 일부는 실패할 수 있습니다 여러 암시적 구문 분석 패턴, 문자열 구문 분석 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1302">The <xref:System.DateTime.Parse%2A> method tries to parse a string with several implicit parse patterns, all of which might fail.</span></span> <span data-ttu-id="04f47-1303">반면,는 <xref:System.DateTime.ParseExact%2A> 메서드를 명시적으로 하나 이상의 정확한 구문 분석 되는 패턴에 성공할 수를 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1303">In contrast, the <xref:System.DateTime.ParseExact%2A> method requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</span></span> <span data-ttu-id="04f47-1304">자세한 내용은의 "DateTimeFormatInfo 및 동적 데이터" 섹션을 참조 하십시오.는 <xref:System.Globalization.DateTimeFormatInfo> 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1304">For more information, see the "DateTimeFormatInfo and Dynamic Data" section in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1305">참고 특정 문화권에 대 한 형식 지정 규칙은 동적 이며 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1305">Note that the formatting conventions for a particular culture are dynamic and can be subject to change.</span></span> <span data-ttu-id="04f47-1306">이 즉, 기본 (현재) 문화권의 서식 지정 규칙에 종속 된 구문 분석 작업을 지정 하는 <xref:System.IFormatProvider> 고정 문화권이 아닌 문화권을 나타내는 개체는 다음 중 하나가 발생할 경우에 예기치 않게 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1306">This means that parsing operations that depend on the formatting conventions of the default (current) culture or that specify an <xref:System.IFormatProvider> object that represents a culture other than the invariant culture can unexpectedly fail if any of the following occurs:</span></span>  
>   
> -   <span data-ttu-id="04f47-1307">Culture 별 데이터 또는 부 버전의.NET Framework 또는.NET Framework의 기존 버전에 대 한 업데이트의 결과로 간에 변경 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1307">The culture-specific data has changed between major or minor versions of the .NET Framework or as the result of an update to the existing version of the .NET Framework.</span></span>  
> -   <span data-ttu-id="04f47-1308">Culture 별 데이터를 컴퓨터에서 컴퓨터 또는 세션 간에 다를 수 있는 사용자 기본 설정을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1308">The culture-specific data reflects user preferences, which can vary from machine to machine or session to session.</span></span>  
> -   <span data-ttu-id="04f47-1309">Culture 별 데이터 표준 문화권 또는 사용자 지정 문화권의 설정을 재정의 하는 대체 문화권을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1309">The culture-specific data represents a replacement culture that overrides the settings of a standard culture or a custom culture.</span></span>  
>   
>  <span data-ttu-id="04f47-1310">문화적 데이터의 변경 내용과 연관 된 데이터 및 시간 문자열 구문 분석 문제를 방지 하려면 고정 문화권을 사용 하 여 날짜 및 시간 문자열을 구문 분석할 수 하거나 호출할 수 있습니다는 <xref:System.DateTime.ParseExact%2A> 또는 <xref:System.DateTime.TryParseExact%2A> 메서드는 정확한 형식 지정 문자열을 구문 분석할 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1310">To prevent the difficulties in parsing data and time strings that are associated with changes in cultural data, you can parse date and time strings by using the invariant culture, or you can call the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> method and specify the exact format of the string to be parsed.</span></span> <span data-ttu-id="04f47-1311">직렬화 되 고 날짜 및 시간 데이터를 역직렬화 하는 동안를 사용 하거나 고정 문화권의 서식 지정 규칙 또는 serialize 및 deserialize 할 수 하는 경우는 <xref:System.DateTime> 이진 형식에서 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1311">If you are serializing and deserializing date and time data, you can either use the formatting conventions of the invariant culture, or you can serialize and deserialize the <xref:System.DateTime> value in a binary format.</span></span>  
>   
>  <span data-ttu-id="04f47-1312">자세한 내용은의 "데이터 동적 문화권" 섹션을 참조는 <xref:System.Globalization.CultureInfo> 항목 및 "Persisting DateTime 값" 섹션에 <xref:System.DateTime> 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1312">For more information see the "Dynamic culture data" section in the <xref:System.Globalization.CultureInfo> topic and the "Persisting DateTime values" section in the <xref:System.DateTime> topic.</span></span>  
  
<a name="Styles"></a>   
### <a name="parsing-and-style-elements"></a><span data-ttu-id="04f47-1313">구문 분석 하 고 스타일 요소</span><span class="sxs-lookup"><span data-stu-id="04f47-1313">Parsing and style elements</span></span>  
 <span data-ttu-id="04f47-1314">모든 <xref:System.DateTime.Parse%2A> 오버 로드는 입력된 문자열에 선행, 중간 또는 후행 공백 문자 무시 (으로 나타나는 `s` 다음 표에).</span><span class="sxs-lookup"><span data-stu-id="04f47-1314">All <xref:System.DateTime.Parse%2A> overloads ignore leading, inner, or trailing white-space characters in the input string (which is represented by `s` in the following table).</span></span> <span data-ttu-id="04f47-1315">날짜 및 시간이 선행 및 후행 숫자 기호 문자 ("#", U + 00-23)의 쌍과 함께 대괄호로 묶습니다 수와 하나 올 수 있습니다 또는 이상의 NULL 문자 (U + 0000)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1315">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ("#", U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="04f47-1316">또한는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 오버 로드에는 `styles` 의 하나 이상의 멤버로 구성 된 매개 변수는 <xref:System.Globalization.DateTimeStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1316">In addition, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload has a `styles` parameter that consists of one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration.</span></span> <span data-ttu-id="04f47-1317">이 매개 변수 정의 방법을 `s` 해석 되어야 하 고 구문 분석 작업이 변환 해야 하는 방법은 `s` 을 날짜 및 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1317">This parameter defines how `s` should be interpreted and how the parse operation should convert `s` to a date and time.</span></span> <span data-ttu-id="04f47-1318">다음 표에서 각각의 효과 설명 <xref:System.Globalization.DateTimeStyles> 구문 분석 작업에 대 한 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1318">The following table describes the effect of each <xref:System.Globalization.DateTimeStyles> member on the parse operation.</span></span>  
  
|<span data-ttu-id="04f47-1319">DateTimeStyles 멤버</span><span class="sxs-lookup"><span data-stu-id="04f47-1319">DateTimeStyles member</span></span>|<span data-ttu-id="04f47-1320">변환에 미치는 영향</span><span class="sxs-lookup"><span data-stu-id="04f47-1320">Effect on conversion</span></span>|  
|---------------------------|--------------------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="04f47-1321">구문 분석 `s` 및 필요한 경우, 변환 UTC로 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1321">Parses `s` and, if necessary, converts it to UTC, as follows:</span></span><br /><br /> <span data-ttu-id="04f47-1322">-If `s` 표준 시간대 오프셋을 포함 또는 `s` 표준 시간대 정보가 없습니다 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeLocal> 플래그를 메서드 호출에서 문자열의 구문을 분석 <xref:System.DateTime.ToUniversalTime%2A> 반환 된 변환할 <xref:System.DateTime> 값을 UTC 및 집합은 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1322">-   If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span><br /><span data-ttu-id="04f47-1323">-If `s` UTC를 나타낸다는 것을 의미 경우 `s` 표준 시간대 정보가 들어 있지 않은 있지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeUniversal> 플래그를 메서드가 문자열을 구문 분석을 수행 하 표준 시간대 변환 작업 없이 반환 된 <xref:System.DateTime> 값 및 집합은 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1323">-   If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span><br /><span data-ttu-id="04f47-1324">-모든 경우에 따라 플래그는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1324">-   In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="04f47-1325">이 값은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1325">This value is ignored.</span></span> <span data-ttu-id="04f47-1326">내부 공백이 항상의 날짜 및 시간 요소에 사용할 수 있습니다. `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1326">Inner white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="04f47-1327">이 값은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1327">This value is ignored.</span></span> <span data-ttu-id="04f47-1328">날짜 및 시간 요소에서 선행 공백을 허용 항상 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1328">Leading white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="04f47-1329">이 값은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1329">This value is ignored.</span></span> <span data-ttu-id="04f47-1330">후행 공백은 항상 구조에의 날짜 및 시간 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1330">Trailing white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="04f47-1331">지정 하는 `s` 선행, 내부 및 후행 공백이 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1331">Specifies that `s` may contain leading, inner, and trailing white spaces.</span></span> <span data-ttu-id="04f47-1332">이것은 기본적인 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1332">This is the default behavior.</span></span> <span data-ttu-id="04f47-1333">더 제한적인 제공 하 여 재정의할 수 없습니다 <xref:System.Globalization.DateTimeStyles> 열거형 값과 같은 <xref:System.Globalization.DateTimeStyles.None>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1333">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles.None>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="04f47-1334">지정 되는 경우 `s` 에 시간대 정보가, 현지 시간으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1334">Specifies that if `s` lacks any time zone information, local time is assumed.</span></span> <span data-ttu-id="04f47-1335">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> 플래그가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값으로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1335">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="04f47-1336">지정 되는 경우 `s` 에 UTC 표준 시간대 정보가 있는 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1336">Specifies that if `s` lacks any time zone information, UTC is assumed.</span></span> <span data-ttu-id="04f47-1337">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> 플래그가 없으면,이 메서드는 반환 된 <xref:System.DateTime> 현지 시간 집합으로 측정 된 UTC에서 값의 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1337">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="04f47-1338">유효 하더라도이 값은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1338">Although valid, this value is ignored.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="04f47-1339">표준 시간대 정보가 포함 된 문자열에 대 한 날짜 및 시간 문자열을 변환 하는 과정을 방지 하기 위해 시도 <xref:System.DateTime> 사용 된 현지 시간을 나타내는 값의 <xref:System.DateTime.Kind%2A> 속성이로 설정 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1339">For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value that represents a local time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1340">호출 하 여 이러한 문자열은 생성 하는 일반적으로 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> 메서드 "o", "r" 또는 "u" 표준 서식 지정자를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1340">Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method and by using the "o", "r", or "u" standard format specifier.</span></span>|  

<a name="kind"></a>   
### <a name="the-return-value-and-datetimekind"></a><span data-ttu-id="04f47-1341">반환 값과 DateTime.Kind</span><span class="sxs-lookup"><span data-stu-id="04f47-1341">The return value and DateTime.Kind</span></span>

<span data-ttu-id="04f47-1342">`DateTime.Parse` 반환 하는 오버 로드는 <xref:System.DateTime> 값 <xref:System.DateTime.Kind> 속성에는 표준 시간대 정보가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1342">The `DateTime.Parse` overloads return a <xref:System.DateTime> value whose <xref:System.DateTime.Kind> property includes time zone information.</span></span> <span data-ttu-id="04f47-1343">시간이 있다는 의미일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1343">It can indicate that the time is:</span></span>

- <span data-ttu-id="04f47-1344">협정 세계시 (<xref:System.DateTimeKind.Utc?displayProperty=fullName>).</span><span class="sxs-lookup"><span data-stu-id="04f47-1344">Coordinated Universal Time (<xref:System.DateTimeKind.Utc?displayProperty=fullName>).</span></span>
- <span data-ttu-id="04f47-1345">현지 표준 시간대의 시간 (<xref:System.DateTimeKind.Local?displayProperty=fullName>).</span><span class="sxs-lookup"><span data-stu-id="04f47-1345">The time in the local time zone (<xref:System.DateTimeKind.Local?displayProperty=fullName>).</span></span>
- <span data-ttu-id="04f47-1346">알 수 없는 표준 시간대의 시간 (xref:System.DateTimeKind.Unspecified?displayProperty=fullName >).</span><span class="sxs-lookup"><span data-stu-id="04f47-1346">The time in an unknown time zone (xref:System.DateTimeKind.Unspecified?displayProperty=fullName>).</span></span>
 
 <span data-ttu-id="04f47-1347">일반적으로 <xref:System.DateTime.Parse%2A> 메서드가 반환 되는 <xref:System.DateTime> 개체 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1347">Generally, the <xref:System.DateTime.Parse%2A> method returns a <xref:System.DateTime> object whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1348">그러나는 <xref:System.DateTime.Parse%2A> 메서드 전체 화면 표시 및의 값을 설정 표준 시간대 변환 수행할 수도 있습니다는 <xref:System.DateTime.Kind%2A> 속성 값에 따라 다르게는 `s` 및 `styles` 매개 변수:</span><span class="sxs-lookup"><span data-stu-id="04f47-1348">However, the <xref:System.DateTime.Parse%2A> method may also perform time zone conversion and set the value of the <xref:System.DateTime.Kind%2A> property differently, depending on the values of the `s` and `styles` parameters:</span></span>  
  
|<span data-ttu-id="04f47-1349">조건</span><span class="sxs-lookup"><span data-stu-id="04f47-1349">If</span></span>|<span data-ttu-id="04f47-1350">표준 시간대 변환</span><span class="sxs-lookup"><span data-stu-id="04f47-1350">Time zone conversion</span></span>|<span data-ttu-id="04f47-1351">Kind 속성</span><span class="sxs-lookup"><span data-stu-id="04f47-1351">Kind property</span></span>|  
|--------|--------------------------|-------------------|  
|<span data-ttu-id="04f47-1352">`s` 표준 시간대 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1352">`s` contains time zone information.</span></span>|<span data-ttu-id="04f47-1353">날짜 및 시간 현지 표준 시간대의 시간으로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1353">The date and time is converted to the time in the local time zone.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="04f47-1354">`s` 표준 시간대 정보를 포함 하 고 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1354">`s` contains time zone information, and `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag.</span></span>|<span data-ttu-id="04f47-1355">날짜 및 시간이 utc (협정 세계시)로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1355">The date and time is converted to Coordinated Universal Time (UTC).</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="04f47-1356">`s` Z 또는 GMT 표준 시간대 지정자를 포함 하 고 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.RoundtripKind> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1356">`s` contains the Z or GMT time zone designator, and `styles` includes the <xref:System.Globalization.DateTimeStyles.RoundtripKind> flag.</span></span>|<span data-ttu-id="04f47-1357">날짜 및 시간이 UTC로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1357">The date and time are interpreted as UTC.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
  
 <span data-ttu-id="04f47-1358">다음 예제에서는 시간에 현지 표준 시간대의 표준 시간대 정보를 포함 하는 날짜 문자열을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1358">The following example converts date strings that contain time zone information to the time in the local time zone:</span></span>  
  
 [!code-csharp-interactive[System.DateTime.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.DateTime.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse2.vb#2)]  

  <span data-ttu-id="04f47-1359">날짜 및 시간의 값을 유지할 수 있습니다 <xref:System.DateTime.Kind%2A> 는 서식 지정 및 구문 분석 작업에서 사용 하 여는 동안 속성에서 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1359">You can also preserve the value of a date and time's <xref:System.DateTime.Kind%2A> property during a formatting and parsing operation by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="04f47-1360">다음 예제에서는 방법을 <xref:System.Globalization.DateTimeStyles.RoundtripKind> 플래그 구문 분석 작업에 어떠한 영향을 <xref:System.DateTime> "o", "r" 또는 "u" 서식 지정자를 사용 하 여 문자열로 변환 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1360">The following example illustrates how the <xref:System.Globalization.DateTimeStyles.RoundtripKind> flag affects the parsing operation on <xref:System.DateTime> values that are converted to strings by using the "o", "r", or "u" format specifier.</span></span>  
  
 [!code-csharp-interactive[System.DateTime.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse5.cs#5)]
 [!code-vb[System.DateTime.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse5.vb#5)]  
  
### Examples

<span data-ttu-id="04f47-1361">호출 하는 다양 한 예제는 `DateTime.Parse` 메서드는 재생 중에 삽입 된 [주의](#remarks) 는 개인에 대 한 설명서 및이 문서의 섹션 `DateTime.Parse` 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1361">Numerous examples that call the `DateTime.Parse` method are interspersed throughout the [Remarks](#remarks) section of this article and in the documentation for the individual `DateTime.Parse` overloads.</span></span>

[!INCLUDE[interactive-note](~/includes/csharp-interactive-note.md)]

<span data-ttu-id="04f47-1362">완전 한 집합을 다운로드할 수 있습니다 `DateTime.Parse` 에 포함 된 예제는 [C#.NET Core 2.0 프로젝트](https://github.com/dotnet/docs/raw/master/samples/snippets/csharp/downloads/api/System/DateTime.Parse.zip) 및 [Visual basic.NET Core 2.0 프로젝트](https://github.com/dotnet/docs/raw/master/samples/snippets/visualbasic/downloads/api/System/DateTime.Parse.zip)에서 [dotnet/docs GitHub 리포지토리](https://github.com/dotnet/docs)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1362">You can also download a complete set of `DateTime.Parse` examples, which are included in a [.NET Core 2.0 project for C#](https://github.com/dotnet/docs/raw/master/samples/snippets/csharp/downloads/api/System/DateTime.Parse.zip) and a [.NET Core 2.0 project for Visual Basic](https://github.com/dotnet/docs/raw/master/samples/snippets/visualbasic/downloads/api/System/DateTime.Parse.zip), from the [dotnet/docs GitHub repository](https://github.com/dotnet/docs).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />
        <altmember cref="Overload:System.DateTime.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="04f47-1363">A string that contains a date and time to convert.</span><span class="sxs-lookup"><span data-stu-id="04f47-1363">A string that contains a date and time to convert.</span></span> <span data-ttu-id="04f47-1364">See [The string to parse](#StringToParse) for more information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1364">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <summary><span data-ttu-id="04f47-1365">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using the conventions of the current thread culture.</span><span class="sxs-lookup"><span data-stu-id="04f47-1365">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using the conventions of the current thread culture.</span></span></summary>
        <returns><span data-ttu-id="04f47-1366">An object that is equivalent to the date and time contained in <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1366">An object that is equivalent to the date and time contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="04f47-1367">경우 `s` 이 메서드는 반환 표준 시간대 정보를 포함 한 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType> 날짜와 시간으로 변환 하 고 `s` 현지 시간으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1367">If `s` contains time zone information, this method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> and converts the date and time in `s` to local time.</span></span> <span data-ttu-id="04f47-1368">그렇지 않으면 표준 시간대 변환 작업 없이 수행 하 고 반환 된 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1368">Otherwise, it performs no time zone conversion and returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="04f47-1369">이 오버 로드를 구문 분석 하려고 `s` 현재 문화권의 서식 지정 규칙을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1369">This overload attempts to parse `s` by using the formatting conventions of the current culture.</span></span> <span data-ttu-id="04f47-1370">현재 문화권으로 표시 됩니다는 <xref:System.Globalization.CultureInfo.CurrentCulture> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1370">The current culture is indicated by the <xref:System.Globalization.CultureInfo.CurrentCulture> property.</span></span> <span data-ttu-id="04f47-1371">특정 문화권의 형식 규칙을 사용 하는 문자열을 구문 분석 하려면 호출는 <xref:System.DateTime.Parse(System.String,System.IFormatProvider)> 또는 <xref:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1371">To parse a string using the formatting conventions of a specific culture, call the <xref:System.DateTime.Parse(System.String,System.IFormatProvider)> or the <xref:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)> overloads.</span></span>

<span data-ttu-id="04f47-1372">이 오버 로드를 구문 분석 하려고 `s` 를 사용 하 여 <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1372">This overload attempts to parse `s` by using <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> style.</span></span>

## <a name="example"></a><span data-ttu-id="04f47-1373">예제</span><span class="sxs-lookup"><span data-stu-id="04f47-1373">Example</span></span>

<span data-ttu-id="04f47-1374">다음 예제에서는 하 여 여러 가지 날짜 및 시간 값의 문자열 표현을 구문 분석:</span><span class="sxs-lookup"><span data-stu-id="04f47-1374">The following example parses the string representation of several date and time values by:</span></span>

- <span data-ttu-id="04f47-1375">예제 출력을 생성 하는 데 사용 하는 컴퓨터의 현재 스레드 문화권의 형식 규칙을 제공 하는 기본 형식 공급자를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1375">Using the default format provider, which provides the formatting conventions of hte current thread culture of the computer used to produce the example output.</span></span> <span data-ttu-id="04f47-1376">이 예제에서 출력 EN-US 문화권의 형식 규칙을 반영합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1376">The output from this example reflects the formatting conventions of the en-US culture.</span></span>

- <span data-ttu-id="04f47-1377">기본 스타일 값을 사용 하 여 <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWIthType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1377">Using the default style value, which is <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWIthType>.</span></span> 

<span data-ttu-id="04f47-1378">처리는 <xref:System.FormatException> 메서드가 다른 문화권을 사용 하 여 날짜 및 시간의 문자열 표현을 구문 분석 하려고 할 때 throw 되는 예외 규칙의 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1378">It handles the <xref:System.FormatException> exception that is thrown when the method tries to parse the string representation of a date and time by using some other culture's formatting conventions.</span></span> <span data-ttu-id="04f47-1379">또한 현재 스레드 문화권의 형식 규칙을 사용 하지 않는 날짜 및 시간 값을 구문 분석 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1379">It also shows how to successfully parse a date and time value that does not use the formatting conventions of the current thread culture.</span></span>  
  
 [!code-csharp-interactive[System.DateTime.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.DateTime.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse1.vb#1)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-1380"><paramref name="s" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1380"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="04f47-1381"><paramref name="s" /> does not contain a valid string representation of a date and time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1381"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="04f47-1382">A string that contains a date and time to convert.</span><span class="sxs-lookup"><span data-stu-id="04f47-1382">A string that contains a date and time to convert.</span></span> <span data-ttu-id="04f47-1383">See [The string to parse](#StringToParse) for more information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1383">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-1384">An object that supplies culture-specific format information about <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-1384">An object that supplies culture-specific format information about <c>s</c>.</span></span>  <span data-ttu-id="04f47-1385">See [Parsing and cultural conventions](#Culture)</span><span class="sxs-lookup"><span data-stu-id="04f47-1385">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <summary><span data-ttu-id="04f47-1386">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1386">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="04f47-1387">An object that is equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1387">An object that is equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="04f47-1388">경우 `s` 이 메서드는 반환 표준 시간대 정보를 포함 한 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType> 날짜와 시간으로 변환 하 고 `s` 현지 시간으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1388">If `s` contains time zone information, this method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> and converts the date and time in `s` to local time.</span></span> <span data-ttu-id="04f47-1389">그렇지 않으면 표준 시간대 변환 작업 없이 수행 하 고 반환 된 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1389">Otherwise, it performs no time zone conversion and returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="04f47-1390">이 오버 로드를 구문 분석 하려고 `s` 를 사용 하 여는 <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1390">This overload attempts to parse `s` by using the <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> style.</span></span>

## <a name="example"></a><span data-ttu-id="04f47-1391">예제</span><span class="sxs-lookup"><span data-stu-id="04f47-1391">Example</span></span>

<span data-ttu-id="04f47-1392">다음 예제에서는 EN-US, FR-FR 및 DE-DE 문화권의 규칙을 사용 하 여 날짜 문자열의 배열을 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1392">The following example parses an array of date strings by using the conventions of the en-US, fr-FR, and de-DE cultures.</span></span> <span data-ttu-id="04f47-1393">서로 다른 문화권에 걸쳐 단일 날짜의 문자열 표현을 다르게 해석 될 수 있는지를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1393">It demonstrates that the string representations of a single date can be interpreted differently across different cultures.</span></span>  
  
[!code-csharp-interactive[System.DateTime.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse3.cs#3)]
[!code-vb[System.DateTime.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-1394"><paramref name="s" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1394"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="04f47-1395"><paramref name="s" /> does not contain a valid string representation of a date and time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1395"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (ReadOnlySpan&lt;char&gt; s, IFormatProvider provider = null, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional provider As IFormatProvider = null, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider, styles As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="04f47-1396">A string that contains a date and time to convert.</span><span class="sxs-lookup"><span data-stu-id="04f47-1396">A string that contains a date and time to convert.</span></span> <span data-ttu-id="04f47-1397">See [The string to parse](#StringToParse) for more information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1397">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-1398">An object that supplies culture-specific formatting information about <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-1398">An object that supplies culture-specific formatting information about <c>s</c>.</span></span>  <span data-ttu-id="04f47-1399">See [Parsing and cultural conventions](#Culture)</span><span class="sxs-lookup"><span data-stu-id="04f47-1399">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <param name="styles"><span data-ttu-id="04f47-1400">A bitwise combination of the enumeration values that indicates the style elements that can be present in <c>s</c> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.</span><span class="sxs-lookup"><span data-stu-id="04f47-1400">A bitwise combination of the enumeration values that indicates the style elements that can be present in <c>s</c> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="04f47-1401">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1401">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="04f47-1402">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information and a formatting style.</span><span class="sxs-lookup"><span data-stu-id="04f47-1402">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information and a formatting style.</span></span></summary>
        <returns><span data-ttu-id="04f47-1403">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="provider" /> and <paramref name="styles" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1403">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="provider" /> and <paramref name="styles" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="04f47-1404">이 메서드 오버 로드 된 날짜와 시간으로 변환 `s` 설정 하 고는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 다음과 같이 값:</span><span class="sxs-lookup"><span data-stu-id="04f47-1404">This method overload converts the date and time in `s` and sets the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value as follows:</span></span>

|<span data-ttu-id="04f47-1405">조건</span><span class="sxs-lookup"><span data-stu-id="04f47-1405">If</span></span> |<span data-ttu-id="04f47-1406">표준 시간대 변환</span><span class="sxs-lookup"><span data-stu-id="04f47-1406">Time zone conversion</span></span>|<span data-ttu-id="04f47-1407">Kind 속성</span><span class="sxs-lookup"><span data-stu-id="04f47-1407">Kind property</span></span>|   
|-----|-----|-----|  
|<span data-ttu-id="04f47-1408">`s` 표준 시간대 정보가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1408">`s` contains no time zone information.</span></span>|<span data-ttu-id="04f47-1409">없음</span><span class="sxs-lookup"><span data-stu-id="04f47-1409">None.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|
|<span data-ttu-id="04f47-1410">`s` 표준 시간대 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1410">`s` contains time zone information.</span></span>|<span data-ttu-id="04f47-1411">현지 표준 시간대의 시간</span><span class="sxs-lookup"><span data-stu-id="04f47-1411">To the time in the local time zone</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|
|<span data-ttu-id="04f47-1412">`s` 표준 시간대 정보를 포함 하 고 ' 스타일 포함는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1412">`s` contains time zone information, and \`styles includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag.</span></span>|<span data-ttu-id="04f47-1413">유니버설 시간 (UTC)를 조정 하려면</span><span class="sxs-lookup"><span data-stu-id="04f47-1413">To Coordinated Univeral Time (UTC)</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|
|<span data-ttu-id="04f47-1414">`s` Z 또는 GMT 표준 시간대 지정자를 포함 하 고 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1414">`s` contains the Z or GMT time zone designator, and `styles` includes the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="04f47-1415">없음</span><span class="sxs-lookup"><span data-stu-id="04f47-1415">None.</span></span>|<xref:System.DateTimeKind.Utc>| 

## <a name="example"></a><span data-ttu-id="04f47-1416">예제</span><span class="sxs-lookup"><span data-stu-id="04f47-1416">Example</span></span>

<span data-ttu-id="04f47-1417">다음 예제는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 메서드 값을 표시 하 고는 <xref:System.DateTime.Kind%2A> 결과 속성 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1417">The following example demonstrates the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method and displays the value of the <xref:System.DateTime.Kind%2A> property of the resulting <xref:System.DateTime> values.</span></span>  
  
[!code-csharp-interactive[System.DateTime.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse4.cs#4)]
[!code-vb[System.DateTime.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-1418"><paramref name="s" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1418"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="04f47-1419"><paramref name="s" /> does not contain a valid string representation of a date and time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1419"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-1420"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span><span class="sxs-lookup"><span data-stu-id="04f47-1420"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="04f47-1421">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1421">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-1422">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span><span class="sxs-lookup"><span data-stu-id="04f47-1422">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span> <span data-ttu-id="04f47-1423">The format of the string representation must match a specified format exactly or an exception is thrown.</span><span class="sxs-lookup"><span data-stu-id="04f47-1423">The format of the string representation must match a specified format exactly or an exception is thrown.</span></span></summary>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, format As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="04f47-1424">A string that contains a date and time to convert.</span><span class="sxs-lookup"><span data-stu-id="04f47-1424">A string that contains a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="04f47-1425">A format specifier that defines the required format of <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-1425">A format specifier that defines the required format of <c>s</c>.</span></span> <span data-ttu-id="04f47-1426">For more information, see the Remarks section.</span><span class="sxs-lookup"><span data-stu-id="04f47-1426">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-1427">An object that supplies culture-specific format information about <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-1427">An object that supplies culture-specific format information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="04f47-1428">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format and culture-specific format information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1428">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format and culture-specific format information.</span></span> <span data-ttu-id="04f47-1429">The format of the string representation must match the specified format exactly.</span><span class="sxs-lookup"><span data-stu-id="04f47-1429">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="04f47-1430">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" /> and <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1430">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1431"><xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 변수에 정의 된 형식에 있어야 하는 날짜의 문자열 표현을 구문 분석 하는 메서드는 `format` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1431">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="04f47-1432">또한 해야 하는 \<날짜 > 및 \<시간 > 날짜 및 시간의 문자열 표현의 요소에 지정 된 순서에 표시 `format`, 해당 `s` 에서허용되지않는공백이없는발생`format`.</span><span class="sxs-lookup"><span data-stu-id="04f47-1432">It also requires that the \<Date> and \<Time> elements of the string representation of a date and time appear in the order specified by `format`, and that `s` have no white space other than that permitted by `format`.</span></span> <span data-ttu-id="04f47-1433">경우 `format` 날짜 정의 시간 요소가 없는 있고 구문 분석 작업이 성공 하면 결과 <xref:System.DateTime> 값에는 시간을 자정 (00: 00:00).</span><span class="sxs-lookup"><span data-stu-id="04f47-1433">If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00).</span></span> <span data-ttu-id="04f47-1434">경우 `format` 시간 정의 날짜 요소가 없는 있고 구문 분석 작업이 성공 하면 결과 <xref:System.DateTime> 값의 날짜에 `DateTime.Now.Date`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1434">If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a date of `DateTime.Now.Date`.</span></span>  
  
 <span data-ttu-id="04f47-1435">경우 `s` 시간을 특정 표준 시간대 및 구문 분석 작업이 성공 하면 나타내지 않습니다는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값은 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1435">If `s` does not represent a time in a particular time zone and the parse operation succeeds, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1436">경우 `s` 특정 표준 시간대의 시간을 나타내지 않습니다 및 `format` 시간대 정보가 있을 수 있습니다 (경우에 예를 들어 `format` "o", "r" 또는 "u" 표준 서식 지정자는 "z", "zz" 또는 "zzz"를 포함 하는 경우 또는 사용자 지정 형식 지정자의 경우)는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1436">If `s` does represent the time in a particular time zone and `format` allows time zone information to be present (for example, if `format` is equal to the "o", "r", or "u" standard format specifiers, or if it contains the "z", "zz", or "zzz" custom format specifiers), the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="04f47-1437">`format` 매개 변수는 필수 형식을 정의 하는 하나 이상의 사용자 지정 형식 지정자 또는 단일 표준 형식 지정자를 포함 하는 문자열 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1437">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `s`.</span></span> <span data-ttu-id="04f47-1438">유효한 형식 지정 코드에 대 한 세부 정보를 참조 하십시오. [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 또는 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1438">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04f47-1439">경우 `format` 는 사용자 지정 형식 패턴에 대 한 고정 문화권을 사용 하 여를 날짜나 시간 구분 기호 (예: "yyyyMMddHHmm")를 포함 하지 않는 하는 `provider` 매개 변수 및 가장 넓은 형식으로 각 사용자 지정 형식 지정자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1439">If `format` is a custom format pattern that does not include date or time separators (such as "yyyyMMddHHmm"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="04f47-1440">예를 들어의 형식 패턴에 시간을 지정 하려는 경우 짧은 "H" 형식 대신 긴 형식 "HH"를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1440">For example, if you want to specify hours in the format pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="04f47-1441">특정 날짜 및 시간 기호 및에서 사용 되는 (예: 특정 언어의 요일 이름) 문자열 `s` 가 정의한는 `provider` 매개 변수를의 정확한 형식을 있는 그대로 `s` 경우 `format` 는 표준 형식 지정자 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1441">The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="04f47-1442">`provider` 매개 변수는 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1442">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="04f47-1443">A <xref:System.Globalization.CultureInfo> 해석 하는 데 사용 하는 문화권을 나타내는 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1443">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="04f47-1444"><xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체의 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> 속성 정의 기호와 형식을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1444">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="04f47-1445">A <xref:System.Globalization.DateTimeFormatInfo> 날짜 및 시간 데이터 형식을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1445">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="04f47-1446">사용자 지정 <xref:System.IFormatProvider> 구현 된 <xref:System.IFormatProvider.GetFormat%2A> 메서드 중 하나를 반환 합니다.는 <xref:System.Globalization.CultureInfo> 개체 또는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1446">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="04f47-1447">경우 `provider` 은 `null`, <xref:System.Globalization.CultureInfo> 현재 문화권에 해당 하는 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1447">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1448">다음 예제는 <xref:System.DateTime.ParseExact%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1448">The following example demonstrates the <xref:System.DateTime.ParseExact%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/ParseExact1.cs#1)]
 [!code-vb[System.DateTime.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/ParseExact1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-1449"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1449"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="04f47-1450"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span><span class="sxs-lookup"><span data-stu-id="04f47-1450"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span></span>  
  
 <span data-ttu-id="04f47-1451">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-1451">-or-</span></span>  
  
 <span data-ttu-id="04f47-1452"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1452"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span></span>  
  
 <span data-ttu-id="04f47-1453">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-1453">-or-</span></span>  
  
 <span data-ttu-id="04f47-1454">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span><span class="sxs-lookup"><span data-stu-id="04f47-1454">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-1455">에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTime.ParseExact" /> 메서드가 throw 한 <see cref="T:System.FormatException" /> 문자열을 구문 분석할 수 경우 시간 구성 요소 및 계약에 없는 AM/PM 지정자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1455">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="04f47-1456">에 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전에서는 AM/PM 지정자는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1456">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para>
        </block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider provider, System.Globalization.DateTimeStyles style = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), provider As IFormatProvider, Optional style As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (ReadOnlySpan&lt;char&gt; s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As ReadOnlySpan(Of Char), formats As String(), provider As IFormatProvider, Optional style As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, format As String, provider As IFormatProvider, style As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="04f47-1457">A string containing a date and time to convert.</span><span class="sxs-lookup"><span data-stu-id="04f47-1457">A string containing a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="04f47-1458">A format specifier that defines the required format of <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-1458">A format specifier that defines the required format of <c>s</c>.</span></span> <span data-ttu-id="04f47-1459">For more information, see the Remarks section.</span><span class="sxs-lookup"><span data-stu-id="04f47-1459">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-1460">An object that supplies culture-specific formatting information about <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-1460">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="style"><span data-ttu-id="04f47-1461">A bitwise combination of the enumeration values that provides additional information about <c>s</c>, about style elements that may be present in <c>s</c>, or about the conversion from <c>s</c> to a <see cref="T:System.DateTime" /> value.</span><span class="sxs-lookup"><span data-stu-id="04f47-1461">A bitwise combination of the enumeration values that provides additional information about <c>s</c>, about style elements that may be present in <c>s</c>, or about the conversion from <c>s</c> to a <see cref="T:System.DateTime" /> value.</span></span> <span data-ttu-id="04f47-1462">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1462">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="04f47-1463">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span><span class="sxs-lookup"><span data-stu-id="04f47-1463">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="04f47-1464">The format of the string representation must match the specified format exactly or an exception is thrown.</span><span class="sxs-lookup"><span data-stu-id="04f47-1464">The format of the string representation must match the specified format exactly or an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="04f47-1465">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" />, <paramref name="provider" />, and <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1465">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" />, <paramref name="provider" />, and <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1466"><xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 메서드는 여 정의 된 형식에 있어야 하는 날짜의 문자열 표현을 구문 분석은 `format` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1466">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in a format defined by the `format` parameter.</span></span> <span data-ttu-id="04f47-1467">또한 해야 하는 날짜 및 시간 요소에서 `s` 로 지정 된 순서로 표시 `format`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1467">It also requires that the date and time elements in `s` appear in the order specified by `format`.</span></span> <span data-ttu-id="04f47-1468">경우 `s` 의 패턴과 일치 하지 않습니다는 `format` 에서 정의한 모든 변형으로 매개 변수는 `style` 매개 변수는 메서드가 throw는 <xref:System.FormatException>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1468">If `s` does not match the pattern of the `format` parameter, with any variations defined by the `style` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="04f47-1469">반면,는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 메서드는 형식 공급자가 인식 하는 형식 중 하나로 날짜의 문자열 표현을 구문 분석 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1469">In contrast, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="04f47-1470"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 방법을 수의 날짜 및 시간 요소 `s` 순서에 관계 없이 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1470">The <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method also allows the date and time elements in `s` to appear in any order.</span></span>  
  
 <span data-ttu-id="04f47-1471">경우는 `s` 매개 변수는 한 번만 포함 하 고 날짜 없음 않으면 현재 날짜가 사용 됩니다는 `style` 매개 변수에 포함 됩니다는 <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> 기본 날짜는 쿼리에서 플래그 (`DateTime.Date.MinValue`) 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1471">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="04f47-1472">경우는 `s` 매개 변수에 포함만 날짜 및 시간, 자정 (00: 00:00) 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1472">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="04f47-1473">`style` 매개 변수를 결정 여부는 `s` 매개 변수 앞, 내부 또는 후행 공백 문자를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1473">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters.</span></span>  
  
 <span data-ttu-id="04f47-1474">경우 `s` 표준 시간대 정보가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체가 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1474">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1475">사용 하 여이 동작을 변경할 수 있습니다는 <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> 플래그를 반환 하는 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, 또는 사용 하 여는 <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> 및 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그를 반환 하는 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1475">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1476">경우 `s` 시간대 정보가 필요한 경우 시간이 현지 시간으로 변환 됩니다 및 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1476">If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1477">사용 하 여이 동작을 변경할 수 있습니다는 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> 플래그 하지 현지 시간을 utc (협정 세계시)를 변환 하 고 설정 하는 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1477">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="04f47-1478">`format` 의 필요한 패턴을 정의 하는 매개 변수는 `s` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1478">The `format` parameter defines the required pattern of the `s` parameter.</span></span> <span data-ttu-id="04f47-1479">하나 이상의 사용자 지정 형식 지정자를 구성할 수 있습니다는 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md) 테이블 또는 미리 정의 된 패턴을 식별 하는 단일 표준 형식 지정자는 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1479">It can consist of either one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="04f47-1480">에 대 한 고정 문화권을 사용 하는 사용자 지정 형식 패턴이에 날짜나 시간 구분 기호를 사용 하지 않는 경우는 `provider` 매개 변수 및 가장 넓은 형식으로 각 사용자 지정 형식 지정자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1480">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="04f47-1481">예를 들어 패턴에 시간을 지정 하려는 경우 짧은 "H" 형식 대신 긴 형식 "HH"를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1481">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04f47-1482">필요 없이 `s` 구문 분석 작업이 성공 하려면에 대 한 단일 형식을 준수, 호출할 수 있습니다는 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 메서드 허용 되는 여러 형식을 지정 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1482">Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method and specify multiple permitted formats.</span></span> <span data-ttu-id="04f47-1483">이렇게 하면 구문 분석 작업이 성공 하려면 가능성이 높습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1483">This makes the parse operation more likely to succeed.</span></span>  
  
 <span data-ttu-id="04f47-1484">`styles` 의 하나 이상의 멤버를 포함 하는 매개 변수는 <xref:System.Globalization.DateTimeStyles> 공백에 정의 되지 않은 여부와 위치를 결정 하는 열거형 `format` 에 나타날 수 `s` 구문 분석 작업의 정확한 동작을 제어 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1484">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="04f47-1485">다음 표에 각 방법의 멤버는 <xref:System.Globalization.DateTimeStyles> 열거형의 작동에 영향을 줍니다는 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1485">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
|<span data-ttu-id="04f47-1486">DateTimeStyles 멤버</span><span class="sxs-lookup"><span data-stu-id="04f47-1486">DateTimeStyles member</span></span>|<span data-ttu-id="04f47-1487">설명</span><span class="sxs-lookup"><span data-stu-id="04f47-1487">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="04f47-1488">구문 분석 `s` 및 필요한 경우 UTC로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1488">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="04f47-1489">경우 `s` 표준 시간대 오프셋을 포함 또는 `s` 표준 시간대 정보가 없습니다 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> 플래그를 메서드 호출에서 문자열의 구문을 분석 <xref:System.DateTime.ToUniversalTime%2A> 반환 된 변환할 <xref:System.DateTime> 값을 UTC 를 설정 하 고는 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1489">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1490">경우 `s` UTC를 나타낸다는 것을 의미 경우 `s` 표준 시간대 정보가 들어 있지 않은 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> 플래그를 메서드가 문자열을 구문 분석을 수행 하 표준 시간대 변환 작업 없이 반환 된 <xref:System.DateTime> 값 및 집합은 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1490">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1491">다른 모든 경우에는 플래그는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1491">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="04f47-1492">에 정의 되지 않은 공백은 지정 `format` 개별 날짜나 시간 요소 사이 나타날 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1492">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="04f47-1493">에 정의 되지 않은 공백은 지정 `format` 의 시작 부분에 나타날 수 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1493">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="04f47-1494">에 정의 되지 않은 공백은 지정 `format` 의 끝에 표시 될 수 있습니다 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1494">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="04f47-1495">지정 하는 `s` 선행, 내부 및 후행 공백이에 정의 되지 않은 포함할 수 있습니다 `format`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1495">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="04f47-1496">지정 되는 경우 `s` 표준 시간대 정보가 없으면 현지 시간을 나타내는 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1496">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="04f47-1497">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값으로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1497">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="04f47-1498">지정 되는 경우 `s` 표준 시간대 정보가 없으면 UTC를 나타내는 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1498">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="04f47-1499">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그가 없으면,이 메서드는 반환 된 <xref:System.DateTime> 현지 시간 집합으로 측정 된 UTC에서 값의 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1499">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="04f47-1500">경우 `s` 시간 포함 날짜 정보 없이 반환 값의 날짜로 설정 되어 `DateTime.MinValue.Date`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1500">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="04f47-1501">`s` 매개 변수는 기본값을 사용 하 여 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1501">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="04f47-1502">에 없는 이외의 공백이 없습니다 `format` ï ´ ù.</span><span class="sxs-lookup"><span data-stu-id="04f47-1502">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="04f47-1503">경우 `s` 날짜 구성 요소를 반환 된 날짜에 <xref:System.DateTime> 값 1/1/0001로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1503">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="04f47-1504">경우 `s` 표준 시간대 정보가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1504">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1505">표준 시간대 정보에 있는 경우 `s`, 시간이 현지 시간으로 변환 됩니다 및 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1505">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="04f47-1506">표준 시간대 정보가 포함 된 문자열에 대해로 변환 하지 않으려면 시도 <xref:System.DateTime> 값 날짜 및 시간 해당 <xref:System.DateTime.Kind%2A> 속성이로 설정 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1506">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1507">이 플래그는 주로 현지 시간 UTC 시간으로 변환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1507">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
 <span data-ttu-id="04f47-1508">특정 날짜 및 시간 기호 및에서 사용 되는 (예: 특정 언어의 요일 이름) 문자열 `s` 가 정의한는 `provider` 매개 변수를의 정확한 형식을 있는 그대로 `s` 경우 `format` 는 표준 형식 지정자 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1508">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="04f47-1509">`provider` 매개 변수는 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1509">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="04f47-1510">A <xref:System.Globalization.CultureInfo> 해석 하는 데 사용 하는 문화권을 나타내는 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1510">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="04f47-1511"><xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체의 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> 속성 정의 기호와 형식을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1511">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="04f47-1512">A <xref:System.Globalization.DateTimeFormatInfo> 날짜 및 시간 데이터 형식을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1512">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="04f47-1513">사용자 지정 <xref:System.IFormatProvider> 구현 된 <xref:System.IFormatProvider.GetFormat%2A> 메서드 중 하나를 반환 합니다.는 <xref:System.Globalization.CultureInfo> 개체 또는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1513">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="04f47-1514">경우 `provider` 은 `null`, <xref:System.Globalization.CultureInfo> 현재 문화권에 해당 하는 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1514">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1515">다음 예제는 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1515">The following example demonstrates the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="04f47-1516">문자열 "5/01/2009 오전 8시 30분" 없습니다 분석할 수는 `styles` 매개 변수와 같으면 <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> 에서 선행 공백을 허용 되지 않으므로 `format`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1516">Note that the string " 5/01/2009 8:30 AM" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> because leading spaces are not allowed by `format`.</span></span> <span data-ttu-id="04f47-1517">또한 문자열 "5/01/2009 09시"으로 분석할 수 없습니다는 `format` 의 "MM/dd/yyyyhh:mm" 날짜 문자열 앞에 오지 않음 앞에 0 사용 하는 월 수로 때문에 `format` 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1517">Additionally, the string "5/01/2009 09:00" cannot be parsed successfully with a `format` of "MM/dd/yyyyhh:mm" because the date string does not precede the month number with a leading zero, as `format` requires.</span></span>  
  
 [!code-csharp[System.DateTime.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact2.cs#2)]
 [!code-vb[System.DateTime.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-1518"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1518"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="04f47-1519"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span><span class="sxs-lookup"><span data-stu-id="04f47-1519"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span></span>  
  
 <span data-ttu-id="04f47-1520">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-1520">-or-</span></span>  
  
 <span data-ttu-id="04f47-1521"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1521"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span></span>  
  
 <span data-ttu-id="04f47-1522">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-1522">-or-</span></span>  
  
 <span data-ttu-id="04f47-1523">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span><span class="sxs-lookup"><span data-stu-id="04f47-1523">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-1524"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span><span class="sxs-lookup"><span data-stu-id="04f47-1524"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="04f47-1525">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1525">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-1526">에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTime.ParseExact" /> 메서드가 throw 한 <see cref="T:System.FormatException" /> 문자열을 구문 분석할 수 경우 시간 구성 요소 및 계약에 없는 AM/PM 지정자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1526">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="04f47-1527">에 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전에서는 AM/PM 지정자는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1527">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para>
        </block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="04f47-1528">A string that contains a date and time to convert.</span><span class="sxs-lookup"><span data-stu-id="04f47-1528">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="04f47-1529">An array of allowable formats of <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-1529">An array of allowable formats of <c>s</c>.</span></span> <span data-ttu-id="04f47-1530">For more information, see the Remarks section.</span><span class="sxs-lookup"><span data-stu-id="04f47-1530">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-1531">An object that supplies culture-specific format information about <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-1531">An object that supplies culture-specific format information about <c>s</c>.</span></span></param>
        <param name="style"><span data-ttu-id="04f47-1532">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-1532">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span></span> <span data-ttu-id="04f47-1533">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1533">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="04f47-1534">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span><span class="sxs-lookup"><span data-stu-id="04f47-1534">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="04f47-1535">The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.</span><span class="sxs-lookup"><span data-stu-id="04f47-1535">The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="04f47-1536">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="formats" />, <paramref name="provider" />, and <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1536">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="formats" />, <paramref name="provider" />, and <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1537"><xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 메서드는 할당 패턴 중 하 나와 일치 하는 날짜의 문자열 표현을 구문 분석 된 `formats` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1537">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="04f47-1538">경우 문자열 `s` 에서 정의한 변형을 사용 하 여 이러한 패턴 중 하 나와 일치 하지 않습니다는 `styles` 매개 변수를 메서드에서 throw 된 <xref:System.FormatException>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1538">If the string `s` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="04f47-1539">비교 하는 것 외 `s` 여러 서식 지정 패턴을 보다는 단일 서식 지정 패턴을이 오버 로드 동일 하 게 동작의 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1539">Aside from comparing `s` to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="04f47-1540">`s` 매개 변수에 날짜 및 시간 구문 분석을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1540">The `s` parameter contains the date and time to parse.</span></span> <span data-ttu-id="04f47-1541">경우는 `s` 매개 변수는 한 번만 포함 하 고 날짜 없음 않으면 현재 날짜가 사용 됩니다는 `style` 매개 변수에 포함 됩니다는 <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> 기본 날짜는 쿼리에서 플래그 (`DateTime.Date.MinValue`) 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1541">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="04f47-1542">경우는 `s` 매개 변수에 포함만 날짜 및 시간, 자정 (00: 00:00) 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1542">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="04f47-1543">`style` 매개 변수를 결정 여부는 `s` 매개 변수 앞에 오는 포함 될 수 있습니다, 중간 또는 후행 공백 문자가에 형식 문자열 중 하나에서 허용 하는 것 이외의 `formats`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1543">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.</span></span>  
  
 <span data-ttu-id="04f47-1544">경우 `s` 표준 시간대 정보가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체가 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1544">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1545">사용 하 여이 동작을 변경할 수 있습니다는 <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> 플래그를 반환 하는 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, 또는 사용 하 여는 <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> 및 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그를 반환 하는 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1545">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1546">경우 `s` 시간대 정보가 필요한 경우 시간이 현지 시간으로 변환 됩니다 및 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1546">If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1547">사용 하 여이 동작을 변경할 수 있습니다는 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> 하지 utc (협정 세계시)를 현지 시간으로 변환 하 고 설정 하는 플래그는 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1547">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="04f47-1548">`formats` 패턴, 배열을 포함 하는 매개 변수 중 하나는 `s` 구문 분석 작업이 성공 하는 경우에 정확히 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1548">The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed.</span></span> <span data-ttu-id="04f47-1549">패턴은 `formats` 매개 변수 구성에서 하나 이상의 사용자 지정 형식 지정자는 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md) 테이블 또는 미리 정의 된 패턴을 식별 하는 단일 표준 형식 지정자는 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1549">The patterns in the `formats` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="04f47-1550">에 대 한 고정 문화권을 사용 하는 사용자 지정 형식 패턴이에 날짜나 시간 구분 기호를 사용 하지 않는 경우는 `provider` 매개 변수 및 가장 넓은 형식으로 각 사용자 지정 형식 지정자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1550">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="04f47-1551">예를 들어 패턴에 시간을 지정 하려는 경우 짧은 "H" 형식 대신 긴 형식 "HH"를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1551">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="04f47-1552">`styles` 의 하나 이상의 멤버를 포함 하는 매개 변수는 <xref:System.Globalization.DateTimeStyles> 공백에 정의 되지 않은 여부와 위치를 결정 하는 열거형 `format` 에 나타날 수 `s` 구문 분석 작업의 정확한 동작을 제어 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1552">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="04f47-1553">다음 표에 각 방법의 멤버는 <xref:System.Globalization.DateTimeStyles> 열거형의 작동에 영향을 줍니다는 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1553">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
|<span data-ttu-id="04f47-1554">DateTimeStyles 멤버</span><span class="sxs-lookup"><span data-stu-id="04f47-1554">DateTimeStyles member</span></span>|<span data-ttu-id="04f47-1555">설명</span><span class="sxs-lookup"><span data-stu-id="04f47-1555">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="04f47-1556">구문 분석 `s` 및 필요한 경우 UTC로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1556">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="04f47-1557">경우 `s` 표준 시간대 오프셋을 포함 또는 `s` 표준 시간대 정보가 없습니다 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> 플래그를 메서드 호출에서 문자열의 구문을 분석 <xref:System.DateTime.ToUniversalTime%2A> 반환 된 변환할 <xref:System.DateTime> 값을 UTC 를 설정 하 고는 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1557">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1558">경우 `s` UTC를 나타낸다는 것을 의미 경우 `s` 표준 시간대 정보가 들어 있지 않은 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> 플래그를 메서드가 문자열을 구문 분석을 수행 하 표준 시간대 변환 작업 없이 반환 된 <xref:System.DateTime> 값 및 집합은 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1558">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1559">다른 모든 경우에는 플래그는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1559">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="04f47-1560">에 정의 되지 않은 공백은 지정 `format` 개별 날짜나 시간 요소 사이 나타날 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1560">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="04f47-1561">에 정의 되지 않은 공백은 지정 `format` 의 시작 부분에 나타날 수 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1561">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="04f47-1562">에 정의 되지 않은 공백은 지정 `format` 의 끝에 표시 될 수 있습니다 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1562">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="04f47-1563">지정 하는 `s` 선행, 내부 및 후행 공백이에 정의 되지 않은 포함할 수 있습니다 `format`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1563">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="04f47-1564">지정 되는 경우 `s` 표준 시간대 정보가 없으면 현지 시간을 나타내는 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1564">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="04f47-1565">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값으로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1565">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="04f47-1566">지정 되는 경우 `s` 표준 시간대 정보가 없으면 UTC를 나타내는 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1566">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="04f47-1567">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그가 없으면,이 메서드는 반환 된 <xref:System.DateTime> 현지 시간 집합으로 측정 된 UTC에서 값의 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1567">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="04f47-1568">경우 `s` 시간 포함 날짜 정보 없이 반환 값의 날짜로 설정 되어 `DateTime.MinValue.Date`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1568">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="04f47-1569">`s` 매개 변수는 기본값을 사용 하 여 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1569">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="04f47-1570">에 없는 이외의 공백이 없습니다 `format` ï ´ ù.</span><span class="sxs-lookup"><span data-stu-id="04f47-1570">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="04f47-1571">경우 `s` 날짜 구성 요소를 반환 된 날짜에 <xref:System.DateTime> 값 1/1/0001로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1571">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="04f47-1572">경우 `s` 표준 시간대 정보가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1572">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1573">표준 시간대 정보에 있는 경우 `s`, 시간이 현지 시간으로 변환 됩니다 및 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1573">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="04f47-1574">표준 시간대 정보가 포함 된 문자열에 대해 하려고와와 시간을 날짜로 변환 되지 않도록 해당 <xref:System.DateTime.Kind%2A> 속성이로 설정 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1574">For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1575">이 플래그는 주로 현지 시간 UTC 시간으로 변환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1575">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
 <span data-ttu-id="04f47-1576">특정 날짜 및 시간 기호 및에서 사용 되는 (예: 특정 언어의 요일 이름) 문자열 `s` 가 정의한는 `provider` 매개 변수를의 정확한 형식을 있는 그대로 `s` 경우 `format` 는 표준 형식 지정자 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1576">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="04f47-1577">`provider` 매개 변수는 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1577">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="04f47-1578">A <xref:System.Globalization.CultureInfo> 해석 하는 데 사용 하는 문화권을 나타내는 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1578">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="04f47-1579"><xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체의 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> 속성 정의 기호와 형식을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1579">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="04f47-1580">A <xref:System.Globalization.DateTimeFormatInfo> 날짜 및 시간 데이터 형식을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1580">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="04f47-1581">사용자 지정 <xref:System.IFormatProvider> 구현 된 <xref:System.IFormatProvider.GetFormat%2A> 메서드 중 하나를 반환 합니다.는 <xref:System.Globalization.CultureInfo> 개체 또는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1581">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="04f47-1582">경우 `provider` 은 `null`, <xref:System.Globalization.CultureInfo> 현재 문화권에 해당 하는 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1582">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1583">다음 예제에서는 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 메서드를 여러 가지 가능한 형식에서에서 문자열로 성공적으로 구문 분석할 수 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1583">The following example uses the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method to ensure that a string in a number of possible formats can be successfully parsed .</span></span>  
  
 [!code-csharp[System.Datetime.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact3.cs#3)]
 [!code-vb[System.Datetime.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-1584"><paramref name="s" /> or <paramref name="formats" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1584"><paramref name="s" /> or <paramref name="formats" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="04f47-1585"><paramref name="s" /> is an empty string.</span><span class="sxs-lookup"><span data-stu-id="04f47-1585"><paramref name="s" /> is an empty string.</span></span>  
  
 <span data-ttu-id="04f47-1586">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-1586">-or-</span></span>  
  
 <span data-ttu-id="04f47-1587">an element of <paramref name="formats" /> is an empty string.</span><span class="sxs-lookup"><span data-stu-id="04f47-1587">an element of <paramref name="formats" /> is an empty string.</span></span>  
  
 <span data-ttu-id="04f47-1588">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-1588">-or-</span></span>  
  
 <span data-ttu-id="04f47-1589"><paramref name="s" /> does not contain a date and time that corresponds to any element of <paramref name="formats" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1589"><paramref name="s" /> does not contain a date and time that corresponds to any element of <paramref name="formats" />.</span></span>  
  
 <span data-ttu-id="04f47-1590">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-1590">-or-</span></span>  
  
 <span data-ttu-id="04f47-1591">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span><span class="sxs-lookup"><span data-stu-id="04f47-1591">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-1592"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span><span class="sxs-lookup"><span data-stu-id="04f47-1592"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="04f47-1593">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1593">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-1594">에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTime.ParseExact" /> 메서드가 throw 한 <see cref="T:System.FormatException" /> 문자열을 구문 분석할 수 경우 시간 구성 요소 및 계약에 없는 AM/PM 지정자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1594">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="04f47-1595">에 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전에서는 AM/PM 지정자는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1595">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para>
        </block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public int Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Second" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Second" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Second As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Second { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1596">Gets the seconds component of the date represented by this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1596">Gets the seconds component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-1597">0부터 59 사이의 값으로 표시되는 초 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1597">The seconds component, expressed as a value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04f47-1598">다음 예제는 <xref:System.DateTime.Second%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1598">The following example demonstrates the <xref:System.DateTime.Second%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecifyKind">
      <MemberSignature Language="C#" Value="public static DateTime SpecifyKind (DateTime value, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime SpecifyKind(valuetype System.DateTime value, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpecifyKind (value As DateTime, kind As DateTimeKind) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime SpecifyKind(DateTime value, DateTimeKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="kind" Type="System.DateTimeKind" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-1599">A date and time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1599">A date and time.</span></span></param>
        <param name="kind"><span data-ttu-id="04f47-1600">One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.</span><span class="sxs-lookup"><span data-stu-id="04f47-1600">One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.</span></span></param>
        <summary><span data-ttu-id="04f47-1601">Creates a new <see cref="T:System.DateTime" /> object that has the same number of ticks as the specified <see cref="T:System.DateTime" />, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <see cref="T:System.DateTimeKind" /> value.</span><span class="sxs-lookup"><span data-stu-id="04f47-1601">Creates a new <see cref="T:System.DateTime" /> object that has the same number of ticks as the specified <see cref="T:System.DateTime" />, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <see cref="T:System.DateTimeKind" /> value.</span></span></summary>
        <returns><span data-ttu-id="04f47-1602">A new object that has the same number of ticks as the object represented by the <paramref name="value" /> parameter and the <see cref="T:System.DateTimeKind" /> value specified by the <paramref name="kind" /> parameter.</span><span class="sxs-lookup"><span data-stu-id="04f47-1602">A new object that has the same number of ticks as the object represented by the <paramref name="value" /> parameter and the <see cref="T:System.DateTimeKind" /> value specified by the <paramref name="kind" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1603">A <xref:System.DateTime> 있는지 여부를 나타내는 시간 값은 현지 시간, utc (협정 세계시) 또는 둘 다를 기반으로 하며 시간 값을 포함 하는 틱 필드 100 나노초 단위로 측정 Kind 필드 개체로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1603">A <xref:System.DateTime> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks.</span></span> <span data-ttu-id="04f47-1604"><xref:System.DateTime.SpecifyKind%2A> 메서드에서는 새 <xref:System.DateTime> 개체 지정을 사용 하 여 `kind` 매개 변수 및 원래 시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1604">The <xref:System.DateTime.SpecifyKind%2A> method creates a new <xref:System.DateTime> object using the specified `kind` parameter and the original time value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1605">반환 된 <xref:System.DateTime> 값 나타내지 않는 경우 동일한 인스턴트으로 `value` 매개 변수 및 <xref:System.DateTime.SpecifyKind%2A> 표준 시간대 변환 방법은 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1605">The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method.</span></span> <span data-ttu-id="04f47-1606">대신, 지정 된 시간을 담당는 `value` 변경 되지 않은 매개 변수 및 집합은 <xref:System.DateTime.Kind%2A> 속성을 `kind`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1606">Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`.</span></span> <span data-ttu-id="04f47-1607">표준 시간대 변환에 대 한 정보를 참조 하십시오. [표준 시간대 간에 시간 변환](~/docs/standard/datetime/converting-between-time-zones.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1607">For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md).</span></span>  
  
 <span data-ttu-id="04f47-1608"><xref:System.DateTime.SpecifyKind%2A> 메서드는 나타나는 상호 운용성 시나리오에서 유용는 <xref:System.DateTime> 하 여 확인할 수 있지만 지정 되지 않은 종류 필드를 가진 개체가 독립적인 Ticks 필드 현지 시간 또는 UTC를 나타내는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1608">The <xref:System.DateTime.SpecifyKind%2A> method is useful in interoperability scenarios where you receive a <xref:System.DateTime> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1609">다음 예제에서는 <xref:System.DateTime.SpecifyKind%2A> 메서드를 보여 주는 방법을 <xref:System.DateTime.Kind%2A> 속성 영향을 줍니다는 <xref:System.DateTime.ToLocalTime%2A> 및 <xref:System.DateTime.ToUniversalTime%2A> 변환 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1609">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-1610">Subtracts the specified time or duration from this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1610">Subtracts the specified time or duration from this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Subtract(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(DateTime value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-1611">The date and time value to subtract.</span><span class="sxs-lookup"><span data-stu-id="04f47-1611">The date and time value to subtract.</span></span></param>
        <summary><span data-ttu-id="04f47-1612">Subtracts the specified date and time from this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1612">Subtracts the specified date and time from this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-1613">A time interval that is equal to the date and time represented by this instance minus the date and time represented by <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1613">A time interval that is equal to the date and time represented by this instance minus the date and time represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1614"><xref:System.DateTime.Subtract%28System.DateTime%29> 메서드 두 날짜 사이의 차이 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1614">The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates.</span></span> <span data-ttu-id="04f47-1615">호출에서 현재 인스턴스의 시간 간격을 뺄는 <xref:System.DateTime.Subtract%28System.TimeSpan%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1615">To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method.</span></span> <span data-ttu-id="04f47-1616">현재 인스턴스에서 특정 시간 간격을 뺄 현재 날짜에 해당 시간 간격을 추가 하는 메서드를 호출 하 고 메서드 인수로 음수 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1616">To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</span></span> <span data-ttu-id="04f47-1617">예를 들어 현재 날짜 로부터 2 개월 동안 뺄 호출는 <xref:System.DateTime.AddMonths%28System.Int32%29> 메서드-2의 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1617">For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.</span></span>  
  
 <span data-ttu-id="04f47-1618">현재 인스턴스의 시간과 날짜 이전 버전인 경우 `value`, 메서드가 반환는 <xref:System.TimeSpan> 음수 시간 범위를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1618">If the date and time of the current instance is earlier than `value`, the method returns a <xref:System.TimeSpan> object that represents a negative time span.</span></span> <span data-ttu-id="04f47-1619">즉, 모든 0이 아닌 속성의 값 (같은 <xref:System.TimeSpan.Days%2A> 또는 <xref:System.TimeSpan.Ticks%2A>)가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1619">That is, the value of all of its non-zero properties (such as <xref:System.TimeSpan.Days%2A> or <xref:System.TimeSpan.Ticks%2A>) is negative.</span></span>  
  
 <span data-ttu-id="04f47-1620"><xref:System.DateTime.Subtract%28System.DateTime%29> 메서드 값을 고려 하지 않습니다는 <xref:System.DateTime.Kind%2A> 속성 두 <xref:System.DateTime> 빼기를 수행 하는 경우 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1620">The <xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction.</span></span> <span data-ttu-id="04f47-1621">빼기 전에 <xref:System.DateTime> 개체, 개체는 같은 시간대에 시간을 나타내는 것을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1621">Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="04f47-1622">그렇지 않으면 결과 시간대 간의 차이가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1622">Otherwise, the result will include the difference between time zones.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04f47-1623"><xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> 메서드는 빼기를 수행 하는 경우 표준 시간대 사이의 차이 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1623">The <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> method does consider the difference between time zones when performing the subtraction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1624">다음 예제는 <xref:System.DateTime.Subtract%2A> 메서드와 빼기 연산자.</span><span class="sxs-lookup"><span data-stu-id="04f47-1624">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-1625">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1625">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public DateTime Subtract (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime Subtract(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime Subtract(TimeSpan value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04f47-1626">The time interval to subtract.</span><span class="sxs-lookup"><span data-stu-id="04f47-1626">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="04f47-1627">Subtracts the specified duration from this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1627">Subtracts the specified duration from this instance.</span></span></summary>
        <returns><span data-ttu-id="04f47-1628">An object that is equal to the date and time represented by this instance minus the time interval represented by <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1628">An object that is equal to the date and time represented by this instance minus the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1629"><xref:System.DateTime.Subtract%28System.TimeSpan%29> 메서드는 현재 인스턴스에서 지정 된 시간 간격 차이가 날짜를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1629">The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance.</span></span> <span data-ttu-id="04f47-1630">두 날짜 사이의 시간 간격을 확인 하려면 호출 된 <xref:System.DateTime.Subtract%28System.DateTime%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1630">To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method.</span></span> <span data-ttu-id="04f47-1631">현재 인스턴스에서 특정 시간 간격을 뺄 현재 날짜에 해당 시간 간격을 추가 하는 메서드를 호출 하 고 메서드 인수로 음수 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1631">To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</span></span> <span data-ttu-id="04f47-1632">예를 들어 현재 날짜 로부터 2 개월 동안 뺄 호출는 <xref:System.DateTime.AddMonths%28System.Int32%29> 메서드-2의 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1632">For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.</span></span>  
  
 <span data-ttu-id="04f47-1633">이 메서드는이 값을 변경 하지 않습니다 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1633">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="04f47-1634">대신, 새 반환 <xref:System.DateTime> 값은이 작업의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1634">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="04f47-1635">일반적으로 <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> 메서드 뺍니다는 <xref:System.TimeSpan> 양의 시간 범위를 나타내는 반환 하는 개체는 <xref:System.DateTime> 날짜와 현재 인스턴스의 시간 보다 이전 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1635">Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance.</span></span> <span data-ttu-id="04f47-1636">그러나 경우는 <xref:System.TimeSpan> 개체가 음수 시간 범위를 나타내는 <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.DateTime> 값 날짜와 현재 인스턴스의 시간 보다 이후입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1636">However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance.</span></span>  
  
 <span data-ttu-id="04f47-1637"><xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> 메서드 둘 이상의 시간 단위를 지정 된 분 수입니다 (지정 된 시간 수) 등으로 구성 된 시간 간격을 뺄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1637">The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes).</span></span> <span data-ttu-id="04f47-1638">뺄 시간 (예: 년, 월 또는 일)의 단일 단위는 <xref:System.DateTime> 인스턴스를 전달할 수 있습니다에 음수 값을 매개 변수로 다음 메서드 중 하나:</span><span class="sxs-lookup"><span data-stu-id="04f47-1638">To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:</span></span>  
  
-   <span data-ttu-id="04f47-1639"><xref:System.DateTime.AddYears%2A>를 특정 연도에서 현재 날짜 및 시간 인스턴스의 수를 뺄 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1639"><xref:System.DateTime.AddYears%2A>, to subtract a specific number of years from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="04f47-1640"><xref:System.DateTime.AddMonths%2A>특정 월 현재 날짜 및 시간 인스턴스에서 수를 뺄 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1640"><xref:System.DateTime.AddMonths%2A>, to subtract a specific number of months from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="04f47-1641"><xref:System.DateTime.AddDays%2A>를 현재 날짜 및 시간 인스턴스의부터 일 특정 수를 뺄 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1641"><xref:System.DateTime.AddDays%2A>, to subtract a specific number of days from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="04f47-1642"><xref:System.DateTime.AddHours%2A>를 특정 수의 현재 날짜 및 시간 인스턴스에서 시간을 빼야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1642"><xref:System.DateTime.AddHours%2A>, to subtract a specific number of hours from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="04f47-1643"><xref:System.DateTime.AddMinutes%2A>특정 현재 날짜 및 시간 인스턴스의부터 경과 된 분 수를 뺄 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1643"><xref:System.DateTime.AddMinutes%2A>, to subtract a specific number of minutes from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="04f47-1644"><xref:System.DateTime.AddSeconds%2A>을 빼는 특정 수의 현재 날짜 및 시간 인스턴스에서 시간 (초)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1644"><xref:System.DateTime.AddSeconds%2A>, to subtract a specific number of seconds from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="04f47-1645"><xref:System.DateTime.AddMilliseconds%2A>을 빼는 특정 수의 현재 날짜 및 시간 인스턴스에서 시간 (밀리초)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1645"><xref:System.DateTime.AddMilliseconds%2A>, to subtract a specific number of milliseconds from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="04f47-1646"><xref:System.DateTime.AddTicks%2A>특정 현재 날짜 및 시간 인스턴스에서 틱 수를 뺄 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1646"><xref:System.DateTime.AddTicks%2A>, to subtract a specific number of ticks from the current date and time instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1647">다음 예제는 <xref:System.DateTime.Subtract%2A> 메서드와 빼기 연산자.</span><span class="sxs-lookup"><span data-stu-id="04f47-1647">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-1648">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1648">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1649">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1649">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1650">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1650">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1651">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1651">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1652">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1652">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1653">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1653">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1654">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1654">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1655">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1655">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1656">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1656">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1657">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1657">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1658">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1658">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1659">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1659">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1660">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1660">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1661">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1661">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1662">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1662">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1663">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1663">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1664">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1664">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1665">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1665">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1666">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1666">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1667">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1667">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1668">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1668">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1669">Returns the current <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1669">Returns the current <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="04f47-1670">The current object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1670">The current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1671">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1671">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1672">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1672">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1673">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1673">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1674">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1674">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1675">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1675">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1676">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1676">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1677">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1677">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1678">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1678">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1679">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1679">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1680">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1680">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1681">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1681">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1682">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1682">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1683">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1683">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1684">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1684">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1685">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1685">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1686">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1686">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1687">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1687">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1688">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1688">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1689">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1689">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1690">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1690">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1691">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1691">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1692">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1692">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1693">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1693">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1694">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1694">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1695">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1695">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1696">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1696">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1697">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1697">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1698">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1698">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1699">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1699">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1700">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1700">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1701">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1701">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1702">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1702">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1703">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1703">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1704">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1704">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1705">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1705">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1706">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1706">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1707">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1707">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1708">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1708">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1709">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1709">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1710">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1710">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1711">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1711">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1712">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1712">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="04f47-1713">The desired type.</span><span class="sxs-lookup"><span data-stu-id="04f47-1713">The desired type.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-1714">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1714">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1715">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1715">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1716">Converts the current <see cref="T:System.DateTime" /> object to an object of a specified type.</span><span class="sxs-lookup"><span data-stu-id="04f47-1716">Converts the current <see cref="T:System.DateTime" /> object to an object of a specified type.</span></span></summary>
        <returns><span data-ttu-id="04f47-1717">An object of the type specified by the <paramref name="type" /> parameter, with a value equivalent to the current <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1717">An object of the type specified by the <paramref name="type" /> parameter, with a value equivalent to the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-1718"><paramref name="type" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1718"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1719">This conversion is not supported for the <see cref="T:System.DateTime" /> type.</span><span class="sxs-lookup"><span data-stu-id="04f47-1719">This conversion is not supported for the <see cref="T:System.DateTime" /> type.</span></span></exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1720">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1720">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1721">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1721">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1722">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1722">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1723">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1723">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1724">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1724">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1725">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1725">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1726">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1726">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1727">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1727">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1728">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1728">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1729">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1729">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1730">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1730">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1731">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1731">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1732">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span><span class="sxs-lookup"><span data-stu-id="04f47-1732">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="04f47-1733">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1733">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1734">This conversion is not supported.</span><span class="sxs-lookup"><span data-stu-id="04f47-1734">This conversion is not supported.</span></span> <span data-ttu-id="04f47-1735">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1735">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="04f47-1736">The return value for this member is not used.</span><span class="sxs-lookup"><span data-stu-id="04f47-1736">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="04f47-1737">In all cases.</span><span class="sxs-lookup"><span data-stu-id="04f47-1737">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="04f47-1738">The object to populate with data.</span><span class="sxs-lookup"><span data-stu-id="04f47-1738">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="04f47-1739">The destination for this serialization.</span><span class="sxs-lookup"><span data-stu-id="04f47-1739">The destination for this serialization.</span></span> <span data-ttu-id="04f47-1740">(This parameter is not used; specify <see langword="null" />.)</span><span class="sxs-lookup"><span data-stu-id="04f47-1740">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="04f47-1741">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1741">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.DateTime" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1742">이 메서드는 `info` 매개 변수는 <xref:System.DateTime.Ticks%2A> 및 <xref:System.DateTime.Kind%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1742">This method populates the `info` parameter with the <xref:System.DateTime.Ticks%2A> and <xref:System.DateTime.Kind%2A> property values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04f47-1743"><paramref name="info" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1743"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="04f47-1744">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1744">requires full trust for the immediate caller.</span></span> <span data-ttu-id="04f47-1745">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1745">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1746">Gets the number of ticks that represent the date and time of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1746">Gets the number of ticks that represent the date and time of this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-1747">이 인스턴스의 날짜와 시간을 나타내는 틱 수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1747">The number of ticks that represent the date and time of this instance.</span></span> <span data-ttu-id="04f47-1748">값은 <see langword="DateTime.MinValue.Ticks" />와 <see langword="DateTime.MaxValue.Ticks" /> 사이입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1748">The value is between <see langword="DateTime.MinValue.Ticks" /> and <see langword="DateTime.MaxValue.Ticks" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1749">단일 틱 하나 백 (나노초) 또는 두 번째 1 천만 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1749">A single tick represents one hundred nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="04f47-1750">1 밀리초, 10, 000 틱 또는 초당에서 10 백만 틱 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1750">There are 10,000 ticks in a millisecond, or 10 million ticks in a second.</span></span>  
  
 <span data-ttu-id="04f47-1751">이 속성의 값 0001 년 1 월 1 일 12시: 00 자정부터 경과한 100 나노초 간격의 수를 나타냅니다 (0: 00:00 년 1 월 1 일 UTC 0001 일반 달력의)을 나타내는 <xref:System.DateTime.MinValue?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1751">The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1752">윤 초 간주 되는 틱의 수는 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1752">It does not include the number of ticks that are attributable to leap seconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1753">다음 예제에서는 <xref:System.DateTime.Ticks%2A> 속성 21 세기 시작 된 이후에 경과 된 틱 수를 표시 하 고 인스턴스화하는 <xref:System.TimeSpan> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1753">The following example uses the <xref:System.DateTime.Ticks%2A> property to display the number of ticks that have elapsed since the beginning of the twenty-first century and to instantiate a <xref:System.TimeSpan> object.</span></span> <span data-ttu-id="04f47-1754"><xref:System.TimeSpan> 개체는 다음 다른 여러 시간 간격을 사용 하 여 경과 시간을 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1754">The <xref:System.TimeSpan> object is then used to display the elapsed time using several other time intervals.</span></span>  
  
 [!code-csharp[System.DateTime.Ticks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Ticks/cs/Ticks.cs#1)]
 [!code-vb[System.DateTime.Ticks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Ticks/vb/Ticks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public TimeSpan TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeOfDay { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1755">Gets the time of day for this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1755">Gets the time of day for this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-1756">하루 중 자정부터 경과한 시간을 나타내는 시간 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1756">A time interval that represents the fraction of the day that has elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1757">와 달리는 <xref:System.DateTime.Date%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1757">Unlike the <xref:System.DateTime.Date%2A> property.</span></span> <span data-ttu-id="04f47-1758">반환 하는 <xref:System.DateTime> 의 시간 구성 요소가 없는 날짜를 나타내는 값의 <xref:System.DateTime.TimeOfDay%2A> 속성 반환 하지 않습니다는 <xref:System.TimeSpan> 를 나타내는 값입니다는 <xref:System.DateTime> 값의 시간 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1758">which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component.</span></span>  
  
 <span data-ttu-id="04f47-1759">하루 중 시간을 표시 하거나의 시간의 문자열 표현을 검색 하려는 경우는 <xref:System.DateTime> 값 대신 호출할 수의 오버 로드는 <xref:System.DateTime.ToString%2A> 변수가 있는 메서드는 `format` 매개 변수 또는 [합성 서식 지정 ](~/docs/standard/base-types/composite-formatting.md) 기능 "t" 또는 "T" 표준 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1759">If you want to display the time of day or retrieve the string representation of the time of day of a <xref:System.DateTime> value, you can instead call an overload of the <xref:System.DateTime.ToString%2A> method that has a `format` parameter or use the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature with the "t" or "T" standard format string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1760">값을 표시 하는 다음 예제는 <xref:System.DateTime.TimeOfDay%2A> 속성의 배열에 대 한 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1760">The following example displays the value of the <xref:System.DateTime.TimeOfDay%2A> property for an array of <xref:System.DateTime> values.</span></span> <span data-ttu-id="04f47-1761">또한 합성 서식 지정 작업에 "t" 표준 형식 문자열에 의해 반환 되는 문자열와 반환 값을 대조 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1761">It also contrasts the return value with the string returned by the "t" standard format string in a composite formatting operation.</span></span>  
  
 [!code-csharp[System.DateTime.TimeOfDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.timeofday/cs/timeofday1.cs#1)]
 [!code-vb[System.DateTime.TimeOfDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.timeofday/vb/timeofday1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="ToBinary">
      <MemberSignature Language="C#" Value="public long ToBinary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToBinary() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToBinary" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBinary () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToBinary();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1762">Serializes the current <see cref="T:System.DateTime" /> object to a 64-bit binary value that subsequently can be used to recreate the <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1762">Serializes the current <see cref="T:System.DateTime" /> object to a 64-bit binary value that subsequently can be used to recreate the <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="04f47-1763">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> and <see cref="P:System.DateTime.Ticks" /> properties.</span><span class="sxs-lookup"><span data-stu-id="04f47-1763">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> and <see cref="P:System.DateTime.Ticks" /> properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1764">사용 하 여는 <xref:System.DateTime.ToBinary%2A> 현재 값으로 변환 하는 메서드 <xref:System.DateTime> 개체를 이진 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1764">Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="04f47-1765">그런 다음, 이진 값을 사용할 및 <xref:System.DateTime.FromBinary%2A> 메서드를 다시 원래 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1765">Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1766">일부 경우에는 <xref:System.DateTime> 에서 반환 된 값은 <xref:System.DateTime.FromBinary%2A> 방법은 원본과 동일 <xref:System.DateTime> 값에 제공 되는 <xref:System.DateTime.ToBinary%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1766">In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method.</span></span> <span data-ttu-id="04f47-1767">자세한 내용은 다음 섹션인 "현지 시간 조정"을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="04f47-1767">For more information, see the next section, "Local Time Adjustment".</span></span>  
  
## <a name="local-time-adjustment"></a><span data-ttu-id="04f47-1768">현지 시간 조정</span><span class="sxs-lookup"><span data-stu-id="04f47-1768">Local Time Adjustment</span></span>  
 <span data-ttu-id="04f47-1769">현지 시간을 현지 표준 시간대 조정 세계시로 표시 됩니다는 <xref:System.DateTime> 갖는 <xref:System.DateTime.Kind%2A> 속성 값은 <xref:System.DateTimeKind.Local>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1769">A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="04f47-1770">로컬 복원할 때 <xref:System.DateTime> 값에 의해 생성 되는 이진 표현에서는 <xref:System.DateTime.ToBinary%2A> 메서드는 <xref:System.DateTime.FromBinary%2A> 메서드 원래 값과 같지 않은 되도록 다시 만든된 값을 조정 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1770">When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value.</span></span> <span data-ttu-id="04f47-1771">이 비동기화는 다음과 같은 경우에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1771">This can occur under the following conditions:</span></span>  
  
-   <span data-ttu-id="04f47-1772">하는 경우 로컬 <xref:System.DateTime> 하 여 한 표준 시간대에서 개체가 serialize 되는 <xref:System.DateTime.ToBinary%2A> 메서드를 다른 표준 시간대에서에서 deserialize 될는 <xref:System.DateTime.FromBinary%2A> 메서드를 나타내는 결과 현지 시간 <xref:System.DateTime> 개체가 자동으로 조정 됩니다 두 번째 표준 시간대에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1772">If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.</span></span>  
  
     <span data-ttu-id="04f47-1773">예를 들어 한 <xref:System.DateTime> 오후 3 시 현지 시간을 나타내는 개체입니다</span><span class="sxs-lookup"><span data-stu-id="04f47-1773">For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M.</span></span> <span data-ttu-id="04f47-1774">미국에서 실행 하는 응용 프로그램 태평양 표준 시간대를 사용 하 여는 <xref:System.DateTime.ToBinary%2A> 메서드는 변환할 <xref:System.DateTime> 개체를 이진 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1774">An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="04f47-1775">미국에서 실행 되는 다른 응용 프로그램 동부 표준 시간대를 사용 하는 <xref:System.DateTime.FromBinary%2A> 이진 값을 새 변환 하는 메서드 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1775">Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object.</span></span> <span data-ttu-id="04f47-1776">새 값 <xref:System.DateTime> 개체는 원래 오후 3으로에서 동일한 시점을 나타내는 오후 6</span><span class="sxs-lookup"><span data-stu-id="04f47-1776">The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M.</span></span> <span data-ttu-id="04f47-1777">그러나 값 동부 표준시 시간대의 현지 시간으로 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1777">value, but is adjusted to local time in the Eastern Time zone.</span></span>  
  
-   <span data-ttu-id="04f47-1778">하는 경우 로컬의 이진 표현 <xref:System.DateTime> 값 되는 시스템의 현지 표준 시간대에 잘못 된 시간을 나타내는 <xref:System.DateTime.FromBinary%2A> 은 호출 조정 되는 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1778">If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.</span></span>  
  
     <span data-ttu-id="04f47-1779">표준 시간에서 일광 절약 시간제로의 전환을 미국에서 발생 하는 예를 들어 2010 년 3 월 14 일 오전 2시, 시간이 오전 3 시에 1 시간으로 이동 하는 시기 태평양 표준 시간대</span><span class="sxs-lookup"><span data-stu-id="04f47-1779">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="04f47-1780">이 시간 간격은이 표준 시간대에 존재 하지 않는 하는 시간 간격, 즉 잘못 된 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1780">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="04f47-1781">다음 예제에서는 내에 포함 되는 시간이이 범위를 이진 값으로 변환 됩니다는 <xref:System.DateTime.ToBinary%2A> 메서드도 복원 되는 <xref:System.DateTime.FromBinary%2A> 메서드를 원래 값은 시간으로 조정 되는 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1781">The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="04f47-1782">있는지 여부를 특정 날짜 및 시간 값 따라야 수정 전달 하 여 확인할 수 있습니다는 <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> 메서드를 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1782">You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]
     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  
  
## <a name="version-considerations"></a><span data-ttu-id="04f47-1783">버전 고려 사항</span><span class="sxs-lookup"><span data-stu-id="04f47-1783">Version Considerations</span></span>  
 <span data-ttu-id="04f47-1784">.NET Framework 버전 2.0 부터는 <xref:System.DateTime> 구조를 지정 된 시간 값은 현지 시간, utc (협정 세계시) 또는 둘 다에 기반 하는지 여부를 나타내는 개인 Kind 필드와 전용 틱 필드 구성 됩니다.는 날짜 및 시간을 지정 하는 100 나노초 틱 수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1784">Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</span></span> <span data-ttu-id="04f47-1785">Ticks 필드로 액세스할 수 있습니다는 <xref:System.DateTime.Ticks%2A> Kind 필드 및 속성으로 액세스할 수는 <xref:System.DateTime.Kind%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1785">The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="04f47-1786">직렬화 하는 경우.NET Framework 2.0 이전 버전는 <xref:System.DateTime> 개체와 같은 serialization 인터페이스를 사용 하는 대신 수동으로 <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, 틱 데이터에 직렬화 하는 데만 필요는 <xref:System.DateTime> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1786">Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure.</span></span> <span data-ttu-id="04f47-1787">버전 2.0 부터는 Kind 데이터도 serialize 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1787">Starting with version 2.0, you must also serialize the Kind data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.FromBinary(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-1788">Gets the current date.</span><span class="sxs-lookup"><span data-stu-id="04f47-1788">Gets the current date.</span></span></summary>
        <value><span data-ttu-id="04f47-1789">시간 구성 요소가 00:00:00으로 설정되고 오늘 날짜로 설정되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1789">An object that is set to today's date, with the time component set to 00:00:00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1790">반환 값은.NET Framework 버전 2.0 부터는 <xref:System.DateTime> 인 <xref:System.DateTime.Kind%2A> 속성에서 반환 <xref:System.DateTimeKind.Local>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1790">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local>.</span></span>  
  
 <span data-ttu-id="04f47-1791">현재 시간 없이 현재 날짜를 반환 하기 때문에 <xref:System.DateTime.Today%2A> 속성은 날짜에만 사용 하는 응용 프로그램에서 사용 하기에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1791">Because it returns the current date without the current time, the <xref:System.DateTime.Today%2A> property is suitable for use in applications that work with dates only.</span></span> <span data-ttu-id="04f47-1792">자세한 내용은 참조 [Choosing Between DateTime, DateTimeOffset, TimeSpan 및 TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1792">For details, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).</span></span> <span data-ttu-id="04f47-1793">반면,는 <xref:System.DateTime.TimeOfDay%2A> 속성은 현재 날짜 없이 현재 시간을 반환 및 <xref:System.DateTime.Now%2A> 속성을 현재 날짜와 현재 시간을 모두 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1793">In contrast, the <xref:System.DateTime.TimeOfDay%2A> property returns the current time without the current date, and the <xref:System.DateTime.Now%2A> property returns both the current date and the current time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1794">다음 예제에서는 <xref:System.DateTime.Date%2A> 속성을 현재 날짜를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1794">The following example uses the <xref:System.DateTime.Date%2A> property to retrieve the current date.</span></span> <span data-ttu-id="04f47-1795">도 보여 줍니다 방법을 <xref:System.DateTime> 표준 날짜 및 시간 형식 문자열의 일부를 사용 하 여 값의 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1795">It also illustrates how a <xref:System.DateTime> value can be formatted using some of the standard date and time format strings.</span></span> <span data-ttu-id="04f47-1796">세 번째 호출에서 생성 된 출력을 참고는 <xref:System.DateTime.ToString%28System.String%29> 메서드에서 g 서식 지정자를 사용 하 여 값이 0 인 시간 구성 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1796">Note that the output produced by the third call to the <xref:System.DateTime.ToString%28System.String%29> method uses the g format specifier to include the time component, which is zero.</span></span>  
  
 [!code-csharp[System.DateTime.Today#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Today/cs/Today1.cs#1)]
 [!code-vb[System.DateTime.Today#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Today/vb/Today1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Now" />
        <altmember cref="P:System.DateTime.TimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="ToFileTime">
      <MemberSignature Language="C#" Value="public long ToFileTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1797">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1797">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="04f47-1798">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1798">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1799">Windows 파일 시간은 서 기 1601 년 1 월 1 일 12시 자정부터 경과한 100 나노초 간격의 수를 나타내는 64 비트 값</span><span class="sxs-lookup"><span data-stu-id="04f47-1799">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="04f47-1800">(C.E.) Utc (협정 세계시)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1800">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="04f47-1801">Windows 응용 프로그램에 액세스 하면 만들거나를 파일에 기록 하는 시기를 기록 하는 파일 시간을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1801">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="04f47-1802"><xref:System.DateTime.ToFileTime%2A> 메서드는 <xref:System.DateTime.Kind%2A> 속성을 확인 하는지 여부를 현재 <xref:System.DateTime> 개체는 현지 시간 UTC 시간 또는 지정 되지 않은 종류의 현지 시간으로 간주 되는 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1802">The <xref:System.DateTime.ToFileTime%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1803">다음 예제는 <xref:System.DateTime.ToFileTime%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1803">The following example demonstrates the <xref:System.DateTime.ToFileTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.ToFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToFileTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToFileTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToFileTime/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-1804">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span><span class="sxs-lookup"><span data-stu-id="04f47-1804">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span></span> <span data-ttu-id="04f47-1805">UTC.</span><span class="sxs-lookup"><span data-stu-id="04f47-1805">UTC.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-1806">일반적으로 <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> 메서드 복원은 <see cref="T:System.DateTime" /> 에서 저장 된 값은 <see cref="M:System.DateTime.ToFileTime" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1806">Ordinarily, the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method restores a <see cref="T:System.DateTime" /> value that was saved by the <see cref="M:System.DateTime.ToFileTime" /> method.</span></span> <span data-ttu-id="04f47-1807">그러나 두 값 다음과 같은 경우 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1807">However, the two values may differ under the following conditions:</span></span>  
  
-   <span data-ttu-id="04f47-1808">경우 serialization 및 deserialization은 <see cref="T:System.DateTime" /> 값이 서로 다른 시간대에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1808">If the serialization and deserialization of the <see cref="T:System.DateTime" /> value occur in different time zones.</span></span> <span data-ttu-id="04f47-1809">예를 들어 경우는 <see cref="T:System.DateTime" /> 오후 12시 30분 분의 시간 값</span><span class="sxs-lookup"><span data-stu-id="04f47-1809">For example, if a <see cref="T:System.DateTime" /> value with a time of 12:30 P.M.</span></span> <span data-ttu-id="04f47-1810">미국 동부 표준 시간대를 serialize 되어 미국에서 역직렬화 된 다음 태평양 표준 시간대를 오후 12시 30분 분의 원래 값</span><span class="sxs-lookup"><span data-stu-id="04f47-1810">in the U.S. Eastern Time zone is serialized, and then deserialized in the U.S. Pacific Time zone, the original value of 12:30 P.M.</span></span> <span data-ttu-id="04f47-1811">오전 9 시 30 분까지 조정</span><span class="sxs-lookup"><span data-stu-id="04f47-1811">is adjusted to 9:30 A.M.</span></span> <span data-ttu-id="04f47-1812">두 표준 시간대 차이 가리키도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1812">to reflect the difference between the two time zones.</span></span>  
  
-   <span data-ttu-id="04f47-1813">경우는 <see cref="T:System.DateTime" /> serialize 되는 값 현지 표준 시간대에 잘못 된 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1813">If the <see cref="T:System.DateTime" /> value that is serialized represents an invalid time in the local time zone.</span></span> <span data-ttu-id="04f47-1814">이 경우에 <see cref="M:System.DateTime.ToFileTime" /> 메서드 복원 된 조정 <see cref="T:System.DateTime" /> 현지 표준 시간대에 유효한 시간을 나타낼 수 있도록 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1814">In this case, the <see cref="M:System.DateTime.ToFileTime" /> method adjusts the restored <see cref="T:System.DateTime" /> value so that it represents a valid time in the local time zone.</span></span>  
  
     <span data-ttu-id="04f47-1815">표준 시간에서 일광 절약 시간제로의 전환을 미국에서 발생 하는 예를 들어 2010 년 3 월 14 일 오전 2시, 시간이 오전 3 시에 1 시간으로 이동 하는 시기 태평양 표준 시간대</span><span class="sxs-lookup"><span data-stu-id="04f47-1815">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="04f47-1816">이 시간 간격은이 표준 시간대에 존재 하지 않는 하는 시간 간격, 즉 잘못 된 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1816">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="04f47-1817">다음 예제에서는 내에 포함 되는 시간이이 범위는 정수 (long) 값으로 변환 됩니다는 <see cref="M:System.DateTime.ToFileTime" /> 메서드도 복원 되는 <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> 메서드를 원래 값은 시간으로 조정 되는 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1817">The following example shows that when a time that falls within this range is converted to a long integer value by the <see cref="M:System.DateTime.ToFileTime" /> method and is then restored by the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="04f47-1818">있는지 여부를 특정 날짜 및 시간 값 따라야 수정 전달 하 여 확인할 수 있습니다는 <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> 메서드를 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1818">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)]
     [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</para>
        </block>
        <altmember cref="M:System.DateTime.ToFileTimeUtc" />
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="ToFileTimeUtc">
      <MemberSignature Language="C#" Value="public long ToFileTimeUtc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTimeUtc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToFileTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTimeUtc () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTimeUtc();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1819">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1819">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="04f47-1820">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1820">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1821">Windows 파일 시간은 서 기 1601 년 1 월 1 일 12시 자정부터 경과한 100 나노초 간격의 수를 나타내는 64 비트 값</span><span class="sxs-lookup"><span data-stu-id="04f47-1821">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="04f47-1822">(C.E.) Utc (협정 세계시)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1822">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="04f47-1823">Windows 응용 프로그램에 액세스 하면 만들거나를 파일에 기록 하는 시기를 기록 하는 파일 시간을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1823">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="04f47-1824"><xref:System.DateTime.ToFileTimeUtc%2A> 메서드는 <xref:System.DateTime.Kind%2A> 속성을 확인 하는지 여부를 현재 <xref:System.DateTime> 개체는 현지 시간, UTC 시간 또는 시간 UTC 시간으로 간주 되는 지정 되지 않은 종류입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1824">The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time.</span></span> <span data-ttu-id="04f47-1825">현지 시간 이면 변환 시간이 UTC로 Windows 파일 시간으로 변환을 수행 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1825">If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-1826">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span><span class="sxs-lookup"><span data-stu-id="04f47-1826">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span></span> <span data-ttu-id="04f47-1827">UTC.</span><span class="sxs-lookup"><span data-stu-id="04f47-1827">UTC.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-1828"><see cref="M:System.DateTime.ToFileTimeUtc" /> 메서드는 현지 시간 UTC로 변환 하 고 호출 하 여 복원 이후에 때때로 사용는 <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> 메서드는 <see cref="M:System.DateTime.ToLocalTime" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1828">The <see cref="M:System.DateTime.ToFileTimeUtc" /> method is sometimes used to convert a local time to UTC, and subsequently to restore it by calling the <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> method followed by the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span> <span data-ttu-id="04f47-1829">그러나 원래 시간이 현지 표준 시간대에 잘못 된 시간을 나타내는 경우 두 현지 시간 값 같은 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1829">However, if the original time represents an invalid time in the local time zone, the two local time values will not be equal.</span></span> <span data-ttu-id="04f47-1830">자세한 내용은 참조는 <see cref="M:System.DateTime.ToLocalTime" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1830">For additional information, see the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span></para>
        </block>
        <altmember cref="M:System.DateTime.ToFileTime" />
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public DateTime ToLocalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime ToLocalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLocalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLocalTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime ToLocalTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1831">Converts the value of the current <see cref="T:System.DateTime" /> object to local time.</span><span class="sxs-lookup"><span data-stu-id="04f47-1831">Converts the value of the current <see cref="T:System.DateTime" /> object to local time.</span></span></summary>
        <returns><span data-ttu-id="04f47-1832">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" />, and whose value is the local time equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented as a <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1832">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" />, and whose value is the local time equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1833">현지 시간을 utc (협정 세계시) 시간에 UTC 오프셋을 더한 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1833">The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset.</span></span> <span data-ttu-id="04f47-1834">UTC 오프셋에 대 한 자세한 내용은 참조 <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1834">For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1835">변환 고려 현재 시간에 적용 되는 일광 절약 시간 규칙 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1835">The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1836">[!INCLUDE[winxp](~/includes/winxp-md.md)] 시스템의 <xref:System.DateTime.ToLocalTime%2A> 메서드 현지 시간을 UTC로 현재 조정 규칙을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1836">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time.</span></span> <span data-ttu-id="04f47-1837">결과적으로, 현재 조정 규칙이 적용 되기 기간에 대 한 변환 UTC와 현지 시간 사이의 차이 정확 하 게 반영 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1837">As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.</span></span>  
  
 <span data-ttu-id="04f47-1838">.NET Framework 버전 2.0에서 반환 된 값으로 시작 된 <xref:System.DateTime.ToLocalTime%2A> 메서드에 의해 결정 됩니다는 <xref:System.DateTime.Kind%2A> 현재 <xref:System.DateTime> 개체.</span><span class="sxs-lookup"><span data-stu-id="04f47-1838">Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object.</span></span> <span data-ttu-id="04f47-1839">다음 표에서 가능한 결과 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1839">The following table describes the possible results.</span></span>  
  
|<span data-ttu-id="04f47-1840">Kind</span><span class="sxs-lookup"><span data-stu-id="04f47-1840">Kind</span></span>|<span data-ttu-id="04f47-1841">결과</span><span class="sxs-lookup"><span data-stu-id="04f47-1841">Results</span></span>|  
|----------|-------------|  
|<xref:System.DateTimeKind.Utc>|<span data-ttu-id="04f47-1842">이 인스턴스의 <xref:System.DateTime> 현지 시간으로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1842">This instance of <xref:System.DateTime> is converted to local time.</span></span>|  
|<xref:System.DateTimeKind.Local>|<span data-ttu-id="04f47-1843">변환이 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1843">No conversion is performed.</span></span>|  
|<xref:System.DateTimeKind.Unspecified>|<span data-ttu-id="04f47-1844">이 인스턴스의 <xref:System.DateTime> UTC 시간으로 간주 됩니다 변환이 수행 되며 및 처럼 <xref:System.DateTime.Kind%2A> 된 <xref:System.DateTimeKind.Utc>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1844">This instance of <xref:System.DateTime> is assumed to be a UTC time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Utc>.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="04f47-1845"><xref:System.DateTime.ToLocalTime%2A> 변환 메서드는 <xref:System.DateTime> 측정 된 UTC에서 값을 현지 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1845">The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time.</span></span> <span data-ttu-id="04f47-1846">지정한 표준 시간대의 시간을 현지 시간으로 변환 하려면 사용 하 여는 <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1846">To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="04f47-1847">변환에 의해 반환 된 값은 한 <xref:System.DateTime> 인 <xref:System.DateTime.Kind%2A> 속성은 항상 반환 <xref:System.DateTimeKind.Local>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1847">The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="04f47-1848">유효한 결과가 반환 되는 결과적으로, 경우에 <xref:System.DateTime.ToLocalTime%2A> 동일 하 게 반복적으로 적용 되 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1848">Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1849">다음 예제는 <xref:System.DateTime.ToLocalTime%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1849">The following example demonstrates the <xref:System.DateTime.ToLocalTime%2A> method.</span></span> <span data-ttu-id="04f47-1850">Note 실제 출력 현재 문화권 및 실행 되는 시스템의 현지 표준 시간대에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1850">Note that the exact output depends on the current culture and the local time zone of the system on which it is run.</span></span>  
  
 [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  
  
 <span data-ttu-id="04f47-1851">다음 예제에서는 <xref:System.DateTime.SpecifyKind%2A> 메서드를 보여 주는 방법을 <xref:System.DateTime.Kind%2A> 속성 영향을 줍니다는 <xref:System.DateTime.ToLocalTime%2A> 및 <xref:System.DateTime.ToUniversalTime%2A> 변환 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1851">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-1852">사용할 수는 <see cref="M:System.DateTime.ToLocalTime" /> 로컬 날짜 및 시간 값으로 UTC로 변환 된 복원 하는 메서드는 <see cref="M:System.DateTime.ToUniversalTime" /> 또는 <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1852">You can use the <see cref="M:System.DateTime.ToLocalTime" /> method to restore a local date and time value that was converted to UTC by the <see cref="M:System.DateTime.ToUniversalTime" /> or <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> method.</span></span> <span data-ttu-id="04f47-1853">그러나 원래 시간이 현지 표준 시간대에서 잘못 된 시간을 나타내는, 복원 된 값을 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1853">However, if the original time represents an invalid time in the local time zone, it will not match the restored value.</span></span> <span data-ttu-id="04f47-1854">경우는 <see cref="M:System.DateTime.ToLocalTime" /> 메서드 현지 표준 시간대를 utc에서 시간을 변환, 현지 표준 시간대에 한 유효 하도록 하는 시점을 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1854">When the <see cref="M:System.DateTime.ToLocalTime" /> method converts a time from UTC to the local time zone, it also adjusts the time so that is valid in the local time zone.</span></span>  
  
 <span data-ttu-id="04f47-1855">표준 시간에서 일광 절약 시간제로의 전환을 미국에서 발생 하는 예를 들어 2010 년 3 월 14 일 오전 2시, 시간이 오전 3 시에 1 시간으로 이동 하는 시기 태평양 표준 시간대</span><span class="sxs-lookup"><span data-stu-id="04f47-1855">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="04f47-1856">이 시간 간격은이 표준 시간대에 존재 하지 않는 하는 시간 간격, 즉 잘못 된 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1856">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="04f47-1857">다음 예제에서는 내에 포함 되는 시간이이 범위에서 UTC로 변환 하는 <see cref="M:System.DateTime.ToUniversalTime" /> 메서드에 의해 복원 되 고는 <see cref="M:System.DateTime.ToLocalTime" /> 메서드를 원래 값은 시간으로 조정 되는 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1857">The following example shows that when a time that falls within this range is converted to UTC by the <see cref="M:System.DateTime.ToUniversalTime" /> method and is then restored by the <see cref="M:System.DateTime.ToLocalTime" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="04f47-1858">있는지 여부를 특정 날짜 및 시간 값 따라야 수정 전달 하 여 확인할 수 있습니다는 <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> 메서드를 예제를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1858">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
 [!code-csharp[System.DateTime.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolocaltime/cs/tolocaltime1.cs#1)]
 [!code-vb[System.DateTime.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolocaltime/vb/tolocaltime1.vb#1)]</para>
        </block>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
        <altmember cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
      </Docs>
    </Member>
    <Member MemberName="ToLongDateString">
      <MemberSignature Language="C#" Value="public string ToLongDateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLongDateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLongDateString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLongDateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLongDateString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1859">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long date string representation.</span><span class="sxs-lookup"><span data-stu-id="04f47-1859">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long date string representation.</span></span></summary>
        <returns><span data-ttu-id="04f47-1860">A string that contains the long date string representation of the current <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1860">A string that contains the long date string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1861">현재 값 <xref:System.DateTime> 의해 정의 된 패턴을 사용 하 여 개체의 형식이 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 현재 스레드 문화권과 연결 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1861">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property associated with the current thread culture.</span></span> <span data-ttu-id="04f47-1862">반환 값은 "D"를 지정 하 여 반환 된 값과 동일 [표준 DateTime 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 와 <xref:System.DateTime.ToString%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1862">The return value is identical to the value returned by specifying the "D" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1863">반환 되는 문자열은 <xref:System.DateTime.ToLongDateString%2A> 메서드는 문화권을 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1863">The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="04f47-1864">현재 문화권에 의해 정의 된 패턴을 반영 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1864">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="04f47-1865">예를 들어 EN-US 문화권에 대 한 표준 자세한 날짜 패턴은 "dddd, MMMMdd, yyyy"; DE-DE 문화권은 "dddd, d입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1865">For example, for the en-US culture, the standard long date pattern is "dddd, MMMMdd, yyyy"; for the de-DE culture, it is "dddd, d.</span></span> <span data-ttu-id="04f47-1866">MMMMyyyy "; JA-JP 문화권은 "yyyy'? ' M'? ' d'? ' "입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1866">MMMMyyyy"; for the ja-JP culture, it is "yyyy'?'M'?'d'?'".</span></span> <span data-ttu-id="04f47-1867">특정 컴퓨터에 대 한 구체적인 형식 문자열을 표준 자세한 날짜 형식 문자열에서 다른 사용자 지정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1867">The specific format string on a particular computer can also be customized so that it differs from the standard long date format string.</span></span>  
  
 <span data-ttu-id="04f47-1868">현재 스레드 문화권에 대 한 자세한 내용은 참조는 <xref:System.Threading.Thread.CurrentCulture%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1868">For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property.</span></span> <span data-ttu-id="04f47-1869">생성 형식 문자와 형식 패턴, 출력에 대 한 자세한 내용은 참조는 [형식 지정](~/docs/standard/base-types/formatting-types.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1869">For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span> <span data-ttu-id="04f47-1870">형식 패턴 형식 문자와 관련 된 변경에 대 한 자세한 내용은 참조는 <xref:System.Globalization.DateTimeFormatInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1870">For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1871">다음 예제는 <xref:System.DateTime.ToLongDateString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1871">The following example demonstrates the <xref:System.DateTime.ToLongDateString%2A> method.</span></span>  
  
 [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]
 [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ToLongTimeString">
      <MemberSignature Language="C#" Value="public string ToLongTimeString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLongTimeString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLongTimeString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLongTimeString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLongTimeString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1872">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long time string representation.</span><span class="sxs-lookup"><span data-stu-id="04f47-1872">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long time string representation.</span></span></summary>
        <returns><span data-ttu-id="04f47-1873">A string that contains the long time string representation of the current <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1873">A string that contains the long time string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1874">현재 값 <xref:System.DateTime> 의해 정의 된 패턴을 사용 하 여 개체의 형식이 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType> 현재 스레드 문화권과 연결 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1874">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="04f47-1875">반환 값은 "T"를 지정 하 여 반환 된 값과 동일 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 와 <xref:System.DateTime.ToString%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1875">The return value is identical to the value returned by specifying the "T" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1876">반환 되는 문자열은 <xref:System.DateTime.ToLongTimeString%2A> 메서드는 문화권을 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1876">The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="04f47-1877">에 정의 된 패턴을 반영는 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> 속성의 현재 문화권의 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1877">It reflects the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> property of the current culture's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="04f47-1878">예를 들어 EN-US 문화권에 대 한 표준 자세한 시간 패턴은 "h:mm: ss tt"; "hh: mm:"; 되었기 DE-DE 문화권에 대 한 JA-JP 문화권 "h:mm: ss"입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1878">For example, for the en-US culture, the standard long time pattern is "h:mm:ss tt"; for the de-DE culture, it is "HH:mm:ss"; for the ja-JP culture, it is "H:mm:ss".</span></span> <span data-ttu-id="04f47-1879">특정 컴퓨터에 대 한 구체적인 형식 문자열을 표준 자세한 시간 형식 문자열에서 다른 사용자 지정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1879">The specific format string on a particular computer can also be customized so that it differs from the standard long time format string.</span></span>  
  
 <span data-ttu-id="04f47-1880">현재 스레드 문화권에 대 한 자세한 내용은 참조는 <xref:System.Threading.Thread.CurrentCulture%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1880">For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property.</span></span> <span data-ttu-id="04f47-1881">생성 형식 문자와 형식 패턴, 출력에 대 한 자세한 내용은 참조는 [형식 지정](~/docs/standard/base-types/formatting-types.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1881">For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span> <span data-ttu-id="04f47-1882">형식 패턴 형식 문자와 관련 된 변경에 대 한 자세한 내용은 참조는 <xref:System.Globalization.DateTimeFormatInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1882">For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1883">다음 예제는 <xref:System.DateTime.ToLongTimeString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1883">The following example demonstrates the <xref:System.DateTime.ToLongTimeString%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.ToLongTimeString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolongtimestring/cs/sls.cs#1)]
 [!code-vb[System.DateTime.ToLongTimeString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolongtimestring/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ToOADate">
      <MemberSignature Language="C#" Value="public double ToOADate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 ToOADate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToOADate" />
      <MemberSignature Language="VB.NET" Value="Public Function ToOADate () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ToOADate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1884">Converts the value of this instance to the equivalent OLE Automation date.</span><span class="sxs-lookup"><span data-stu-id="04f47-1884">Converts the value of this instance to the equivalent OLE Automation date.</span></span></summary>
        <returns><span data-ttu-id="04f47-1885">A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-1885">A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1886">OLE 자동화 날짜 정수는 이전 또는 1899 년 12 월 30 일 자정 이후의 일 수 및 소수 부분이 24로 나눈 해당 날짜에 시간을 나타내는 부동 소수점 수로 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1886">An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24.</span></span> <span data-ttu-id="04f47-1887">예를 들어 자정 1899 년 12 월 31 나타내는 1.0; 오전 6 1900 년 1 월 1 2.25;로 표시 됩니다. 자정 1899 년 12 월 29-1.0;로 표시 됩니다. 고 오전 6 1899 년 12 월 29-1.25로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1887">For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.</span></span>  
  
 <span data-ttu-id="04f47-1888">기본 OLE 자동화 날짜는 1899 년 12 월 30 일 자정입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1888">The base OLE Automation Date is midnight, 30 December 1899.</span></span> <span data-ttu-id="04f47-1889">최소 OLE 자동화 날짜는 1 년 1 월 0100 일 자정입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1889">The minimum OLE Automation date is midnight, 1 January 0100.</span></span> <span data-ttu-id="04f47-1890">최대 OLE 자동화 날짜는 동일 <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, 31 년 12 월의 마지막 순간 9999입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1890">The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, the last moment of 31 December 9999.</span></span>  
  
 <span data-ttu-id="04f47-1891"><xref:System.DateTime.ToOADate%2A> 메서드가 throw는 <xref:System.OverflowException> 현재 인스턴스가 보다 이후 날짜를 나타내는 경우 <xref:System.DateTime.MinValue> January1, 자정 0100 보다 이전 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1891">The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MinValue> and earlier than midnight on January1, 0100.</span></span> <span data-ttu-id="04f47-1892">그러나 현재 인스턴스의 값이 <xref:System.DateTime.MinValue>, 메서드가 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1892">However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0.</span></span>  
  
 <span data-ttu-id="04f47-1893">OLE 자동화에 대 한 자세한 내용은 참조는 [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118)합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1893">For more information about OLE Automation, see the [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="04f47-1894">The value of this instance cannot be represented as an OLE Automation Date.</span><span class="sxs-lookup"><span data-stu-id="04f47-1894">The value of this instance cannot be represented as an OLE Automation Date.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.DateTime.FromOADate(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ToShortDateString">
      <MemberSignature Language="C#" Value="public string ToShortDateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToShortDateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToShortDateString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToShortDateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToShortDateString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1895">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short date string representation.</span><span class="sxs-lookup"><span data-stu-id="04f47-1895">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short date string representation.</span></span></summary>
        <returns><span data-ttu-id="04f47-1896">A string that contains the short date string representation of the current <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1896">A string that contains the short date string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1897">현재 값 <xref:System.DateTime> 의해 정의 된 패턴을 사용 하 여 개체의 형식이 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType> 현재 스레드 문화권과 연결 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1897">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="04f47-1898">반환 값은 "d"를 지정 하 여 반환 된 값과 동일 [표준 DateTime 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 와 <xref:System.DateTime.ToString%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1898">The return value is identical to the value returned by specifying the "d" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1899">반환 되는 문자열은 <xref:System.DateTime.ToShortDateString%2A> 메서드는 문화권을 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1899">The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="04f47-1900">현재 문화권에 의해 정의 된 패턴을 반영 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1900">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="04f47-1901">예를 들어 EN-US 문화권에 대 한 표준 간단한 날짜 패턴은 "M/d/yyyy"; 스위치는 DE-DE 문화권 MM.yyyy "; JA-JP 문화권 "yyyy/M/d"입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1901">For example, for the en-US culture, the standard short date pattern is "M/d/yyyy"; for the de-DE culture, it is "dd.MM.yyyy"; for the ja-JP culture, it is "yyyy/M/d".</span></span> <span data-ttu-id="04f47-1902">특정 컴퓨터에 대 한 구체적인 형식 문자열을 표준의 간단한 날짜 형식 문자열에서 다른 사용자 지정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1902">The specific format string on a particular computer can also be customized so that it differs from the standard short date format string.</span></span>  
  
 <span data-ttu-id="04f47-1903">현재 스레드 문화권에 대 한 자세한 내용은 참조는 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1903">For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="04f47-1904">생성 형식 문자와 형식 패턴, 출력에 대 한 자세한 내용은 참조는 [형식 지정](~/docs/standard/base-types/formatting-types.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1904">For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span> <span data-ttu-id="04f47-1905">형식 패턴 형식 문자와 관련 된 변경에 대 한 자세한 내용은 참조는 <xref:System.Globalization.DateTimeFormatInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1905">For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1906">다음 예제는 <xref:System.DateTime.ToShortDateString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1906">The following example demonstrates the <xref:System.DateTime.ToShortDateString%2A> method.</span></span> <span data-ttu-id="04f47-1907">또한 표시 하는 호출의 결과 <xref:System.DateTime.ToShortDateString%2A> 호출 하는 것과 같습니다는 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> "d" 형식 매개 변수로 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1907">It also shows that the result of calling the <xref:System.DateTime.ToShortDateString%2A> method is identical to calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method with "d" as the format parameter.</span></span>  
  
 [!code-csharp[System.DateTime.ToShortDateString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/cs/ToShortDateString.cs#1)]
 [!code-vb[System.DateTime.ToShortDateString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/vb/ToShortDateString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ToShortTimeString">
      <MemberSignature Language="C#" Value="public string ToShortTimeString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToShortTimeString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToShortTimeString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToShortTimeString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToShortTimeString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1908">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short time string representation.</span><span class="sxs-lookup"><span data-stu-id="04f47-1908">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short time string representation.</span></span></summary>
        <returns><span data-ttu-id="04f47-1909">A string that contains the short time string representation of the current <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1909">A string that contains the short time string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1910">현재 값 <xref:System.DateTime> 의해 정의 된 패턴을 사용 하 여 개체의 형식이 <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=nameWithType> 현재 스레드 문화권과 연결 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1910">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="04f47-1911">반환 값은 "t"를 지정 하 여 반환 된 값과 동일 [표준 DateTime 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 와 <xref:System.DateTime.ToString%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1911">The return value is identical to the value returned by specifying the "t" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-1912">반환 되는 문자열은 <xref:System.DateTime.ToShortTimeString%2A> 메서드는 문화권을 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1912">The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="04f47-1913">현재 문화권에 의해 정의 된 패턴을 반영 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1913">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="04f47-1914">예를 들어 EN-US 문화권에 대 한 표준 짧은 시간 패턴은 "tt h:mm"; DE-DE 문화권에 대 한 것은 "hh: mm"; JA-JP 문화권 "H:mm"입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1914">For example, for the en-US culture, the standard short time pattern is "h:mm tt"; for the de-DE culture, it is "HH:mm"; for the ja-JP culture, it is "H:mm".</span></span> <span data-ttu-id="04f47-1915">특정 컴퓨터에 대 한 구체적인 형식 문자열을 표준 짧은 시간 형식 문자열에서 다른 사용자 지정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1915">The specific format string on a particular computer can also be customized so that it differs from the standard short time format string.</span></span>  
  
 <span data-ttu-id="04f47-1916">현재 스레드 문화권에 대 한 자세한 내용은 참조는 <xref:System.Threading.Thread.CurrentCulture%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1916">For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property.</span></span> <span data-ttu-id="04f47-1917">생성 형식 문자와 형식 패턴, 출력에 대 한 자세한 내용은 참조는 [형식 지정](~/docs/standard/base-types/formatting-types.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1917">For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span> <span data-ttu-id="04f47-1918">형식 패턴 형식 문자와 관련 된 변경에 대 한 자세한 내용은 참조는 <xref:System.Globalization.DateTimeFormatInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1918">For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1919">다음 예제는 <xref:System.DateTime.ToShortTimeString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1919">The following example demonstrates the <xref:System.DateTime.ToShortTimeString%2A> method.</span></span>  
  
 [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]
 [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-1920">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation.</span><span class="sxs-lookup"><span data-stu-id="04f47-1920">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-1921">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the formatting conventions of the current culture.</span><span class="sxs-lookup"><span data-stu-id="04f47-1921">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the formatting conventions of the current culture.</span></span></summary>
        <returns><span data-ttu-id="04f47-1922">A string representation of the value of the current <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-1922">A string representation of the value of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1923">현재 값 <xref:System.DateTime> 개체 일반 날짜 및 시간 형식 지정자 ('G')를 사용 하 여 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1923">The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G').</span></span> <span data-ttu-id="04f47-1924">특정 날짜 및 시간 형식 지정자를 사용 하 여 서식 지정, 호출 된 <xref:System.DateTime.ToString%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1924">To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method.</span></span> <span data-ttu-id="04f47-1925">일반 날짜 및 시간 형식 지정자 ('G')를 사용 하 여 특정 문화권에 대 한 서식 지정, 호출 된 <xref:System.DateTime.ToString%28System.IFormatProvider%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1925">To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method.</span></span> <span data-ttu-id="04f47-1926">특정 날짜 및 시간 형식 지정자와 특정 문화권의 규칙을 사용 하 여 서식 지정, 호출 된 <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-1926">To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="04f47-1927">이 메서드는 현재 문화권에서 파생 된 형식 지정 정보를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1927">This method uses formatting information derived from the current culture.</span></span> <span data-ttu-id="04f47-1928">특히,에서 반환 된 사용자 지정 형식 문자열을 결합 합니다는 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 및 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> 의 속성은 <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 `Thread.CurrentThread.CurrentCulture.DateTimeFormat` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1928">In particular, it combines the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the `Thread.CurrentThread.CurrentCulture.DateTimeFormat` property.</span></span> <span data-ttu-id="04f47-1929">자세한 내용은 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="04f47-1929">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-1930">다른 오버 로드는 <xref:System.DateTime.ToString%2A> 방법을 사용 하면 문화권을 지정 서식을 사용 하 고 출력 패턴을 정의 하는 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1930">Other overloads of the <xref:System.DateTime.ToString%2A> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref:System.DateTime> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1931">다음 예제에서는 어떻게의 문자열 표현을 <xref:System.DateTime> 에서 반환 된 값은 <xref:System.DateTime.ToString> 메서드가 현재 스레드 문화권에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1931">The following example illustrates how the string representation of a <xref:System.DateTime> value returned by the <xref:System.DateTime.ToString> method depends on the thread current culture.</span></span> <span data-ttu-id="04f47-1932">현재 스레드 문화권을 JA-JP로 FR-FR EN-US에서 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1932">It changes the current thread culture from en-US to fr-FR to ja-JP.</span></span> <span data-ttu-id="04f47-1933">그리고 각 호출을 대/소문자는 <xref:System.DateTime.ToString> 메서드를 해당 문화권을 사용 하 여 날짜 및 시간 값의 문자열 표현을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1933">and in each case calls the <xref:System.DateTime.ToString> method to return the string representation of a date and time value using that culture.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.DateTime.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-1934">The date and time is outside the range of dates supported by the calendar used by the current culture.</span><span class="sxs-lookup"><span data-stu-id="04f47-1934">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-1935"><see cref="M:System.DateTime.ToString" /> 메서드는 현재 문화권에서 사용 되는 달력에서 날짜 및 시간의 문자열 표현을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1935">The <see cref="M:System.DateTime.ToString" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="04f47-1936">경우 현재 값 <see cref="T:System.DateTime" /> 인스턴스가 <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 보다 이후 이거나 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, 메서드에서 throw 된 <see cref="T:System.ArgumentOutOfRangeException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1936">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="04f47-1937">다음 예제에서 이에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1937">The following example provides an illustration.</span></span> <span data-ttu-id="04f47-1938">범위 밖에 있는 날짜 서식을 시도 <see cref="T:System.Globalization.HijriCalendar" /> 현재 문화권은 아랍어 (시리아) 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1938">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HijriCalendar" /> class when the current culture is Arabic (Syria).</span></span>  
  
 [!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception2.cs#2)]
 [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception2.vb#2)]</para>
        </block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04f47-1939">An object that supplies culture-specific formatting information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1939">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="04f47-1940">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified culture-specific format information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1940">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="04f47-1941">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1941">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1942">현재 값 <xref:System.DateTime> 개체 일반 날짜 및 짧은 날짜 패턴과 긴 시간 패턴을 사용 하 여 출력의 형식을 지정 하는 시간 형식 지정자 ('G')를 사용 하 여 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1942">The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.</span></span>  
  
 <span data-ttu-id="04f47-1943">짧은 날짜 패턴과 긴 시간 패턴의 형식은 의해 정의 되는 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1943">The format of the short date and long time pattern is defined by the `provider` parameter.</span></span> <span data-ttu-id="04f47-1944">`provider` 매개 변수는 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1944">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="04f47-1945">A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1945">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="04f47-1946"><xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1946">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="04f47-1947">A <xref:System.Globalization.DateTimeFormatInfo> 날짜 및 시간 데이터 형식을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1947">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="04f47-1948">구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1948">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="04f47-1949">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1949">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="04f47-1950">경우 `provider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권과 관련 된 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1950">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used.</span></span> <span data-ttu-id="04f47-1951">자세한 내용은 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="04f47-1951">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1952">다음 예제에서는 표시 된 날짜 및 시간으로의 문자열 표현을 <xref:System.Globalization.CultureInfo> 5 개의 서로 다른 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1952">The following example displays the string representation of a date and time using <xref:System.Globalization.CultureInfo> objects that represent five different cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString4.cs#3)]
 [!code-vb[System.DateTime.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString4.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-1953">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1953">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-1954"><see cref="M:System.DateTime.ToString(System.IFormatProvider)" /> 메서드가 나타내는 문화권에서 사용 하는 달력에서 날짜 및 시간의 문자열 표현을 반환는 <paramref name="provider" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1954">The <see cref="M:System.DateTime.ToString(System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the culture represented by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="04f47-1955">해당 일정에 의해 정의 됩니다는 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1955">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="04f47-1956">경우 현재 값 <see cref="T:System.DateTime" /> 인스턴스가 <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 보다 이후 이거나 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, 메서드에서 throw 된 <see cref="T:System.ArgumentOutOfRangeException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1956">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="04f47-1957">다음 예제에서 이에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1957">The following example provides an illustration.</span></span> <span data-ttu-id="04f47-1958">범위 밖에 있는 날짜 서식을 시도 <see cref="T:System.Globalization.JapaneseCalendar" /> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1958">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span></span>  
  
 [!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception1.cs#1)]
 [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception1.vb#1)]</para>
        </block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="04f47-1959">A standard or custom date and time format string.</span><span class="sxs-lookup"><span data-stu-id="04f47-1959">A standard or custom date and time format string.</span></span></param>
        <summary><span data-ttu-id="04f47-1960">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.</span><span class="sxs-lookup"><span data-stu-id="04f47-1960">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.</span></span></summary>
        <returns><span data-ttu-id="04f47-1961">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1961">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1962"><xref:System.DateTime.ToString%28System.String%29> 참조 하십시오; 자세한 내용은 현재 문화권의 서식 지정 규칙을 사용 하는 특정 형식에서 날짜 및 시간 값의 문자열 표현을 반환 하는 메서드 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1962">The <xref:System.DateTime.ToString%28System.String%29> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="04f47-1963">`format` 매개 변수는 단일 형식 지정자 문자를 포함 해야 (참조 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) 또는 사용자 지정 형식 패턴이 (참조 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md) )는 반환 된 문자열 형식을 정의 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1963">The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string.</span></span> <span data-ttu-id="04f47-1964">경우 `format` 은 `null` 또는 빈 문자열이 면 일반 서식 지정자 'G'가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1964">If `format` is `null` or an empty string, the general format specifier, 'G', is used.</span></span>  
  
 <span data-ttu-id="04f47-1965">이 방법의 몇 가지 팁은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1965">Some uses of this method include:</span></span>  
  
-   <span data-ttu-id="04f47-1966">현재 문화권의 간단한 날짜 및 시간 형식에서 날짜와 시간을 표시 하는 문자열을 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1966">Getting a string that displays the date and time in the current culture’s short date and time format.</span></span> <span data-ttu-id="04f47-1967">이 위해 "G" 서식 지정자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1967">To do this, you use the "G" format specifier.</span></span>  
  
-   <span data-ttu-id="04f47-1968">월과 연도 포함 하는 문자열을 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1968">Getting a string that contains only the month and year.</span></span> <span data-ttu-id="04f47-1969">이 작업을 수행 하려면 "MM/yyyy" 형식 문자열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1969">To do this, you use the "MM/yyyy" format string.</span></span> <span data-ttu-id="04f47-1970">형식 문자열은 현재 문화권의 날짜 구분 기호를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1970">The format string uses the current culture’s date separator.</span></span>  
  
-   <span data-ttu-id="04f47-1971">날짜 및 시간을 특정 형식에서 것 문자열이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1971">Getting a string that contains the date and time in a specific format.</span></span> <span data-ttu-id="04f47-1972">예를 들어는 "MM/dd/yyyyHH:mm" 형식 문자열 고정된 형식으로와 같은 날짜 및 시간 문자열을 표시 "19 / / 03 / / 2013 18시 06분"입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1972">For example, the "MM/dd/yyyyHH:mm" format string displays the date and time string in a fixed format such as "19//03//2013 18:06".</span></span> <span data-ttu-id="04f47-1973">서식 문자열 사용 하 여 "/" culture 관련 설정에 관계 없이 고정된 날짜 구분 기호로 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1973">The format string uses "/" as a fixed date separator regardless of culture-specific settings.</span></span>  
  
-   <span data-ttu-id="04f47-1974">압축 된 형식으로 날짜를 가져오는 사용할 수 있는 날짜 문자열을 직렬화 하기 위한 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1974">Getting a date in a condensed format that could be used for serializing a date string.</span></span> <span data-ttu-id="04f47-1975">예를 들어 "yyyyMMdd" 형식 문자열은 두 자리 월 및 두 일 날짜 구분 기호 없음와 다음 네 자리 연도 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1975">For example, the "yyyyMMdd" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.</span></span>  
  
 <span data-ttu-id="04f47-1976">다음 예제에서는 이러한 세 가지 형식 문자열을 사용 하 여 EN-US 및 FR-FR 문화권의 규칙을 사용 하 여 날짜 및 시간 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1976">The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)]
 [!code-vb[System.DateTime.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="04f47-1977">다음 예제에서는 사용 하 여 각각의 표준 날짜 및 시간 형식 문자열 및 사용자 지정 날짜 및 시간 형식 문자열의 선택 표시의 문자열 표현을 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1977">The following example uses each of the standard date and time format strings and a selection of custom date and time format strings to display the string representation of a <xref:System.DateTime> value.</span></span> <span data-ttu-id="04f47-1978">이 예제에 대 한 현재 스레드 문화권은 EN-US입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1978">The thread current culture for the example is en-US.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString2.cs#2)]
 [!code-vb[System.DateTime.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="04f47-1979">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1979">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
 <span data-ttu-id="04f47-1980">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-1980">-or-</span></span>  
  
 <span data-ttu-id="04f47-1981"><paramref name="format" /> does not contain a valid custom format pattern.</span><span class="sxs-lookup"><span data-stu-id="04f47-1981"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-1982">The date and time is outside the range of dates supported by the calendar used by the current culture.</span><span class="sxs-lookup"><span data-stu-id="04f47-1982">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-1983"><see cref="M:System.DateTime.ToString(System.String)" /> 메서드는 현재 문화권에서 사용 되는 달력에서 날짜 및 시간의 문자열 표현을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1983">The <see cref="M:System.DateTime.ToString(System.String)" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="04f47-1984">경우 현재 값 <see cref="T:System.DateTime" /> 인스턴스가 <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 보다 이후 이거나 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, 메서드에서 throw 된 <see cref="T:System.ArgumentOutOfRangeException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1984">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="04f47-1985">다음 예제에서 이에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1985">The following example provides an illustration.</span></span> <span data-ttu-id="04f47-1986">범위 밖에 있는 날짜 서식을 시도 <see cref="T:System.Globalization.HebrewCalendar" /> 현재 문화권은 히브리어 (이스라엘) 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1986">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HebrewCalendar" /> class when the current culture is Hebrew (Israel).</span></span>  
  
 [!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception3.cs#3)]
 [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception3.vb#3)]</para>
        </block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="04f47-1987">A standard or custom date and time format string.</span><span class="sxs-lookup"><span data-stu-id="04f47-1987">A standard or custom date and time format string.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-1988">An object that supplies culture-specific formatting information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1988">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="04f47-1989">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and culture-specific format information.</span><span class="sxs-lookup"><span data-stu-id="04f47-1989">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="04f47-1990">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" /> and <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-1990">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-1991">`format` 매개 변수는 단일 형식 지정자 문자를 포함할 수 있습니다 (참조 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) 또는 사용자 지정 형식 패턴이 (참조 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span><span class="sxs-lookup"><span data-stu-id="04f47-1991">The `format` parameter can contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span></span> <span data-ttu-id="04f47-1992">경우 `format` 은 `null` 또는 빈 문자열 (""), "G" 표준 형식 지정자만 사용 되 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1992">If `format` is `null` or an empty string (""), the standard format specifier, "G", is used.</span></span>  
  
 <span data-ttu-id="04f47-1993">`provider` 매개 변수는 표준 형식 지정자도 기호 및 날짜 및 시간 구성 요소 이름에 해당 하는 패턴을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1993">The `provider` parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components.</span></span> <span data-ttu-id="04f47-1994">`provider` 매개 변수는 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1994">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="04f47-1995">A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 반환 된 문자열에 반영 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1995">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="04f47-1996"><xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성은 반환된 된 문자열의 서식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1996">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="04f47-1997">A <xref:System.Globalization.DateTimeFormatInfo> 날짜 및 시간 데이터 형식을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1997">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="04f47-1998">구현 하는 사용자 지정 개체는 <xref:System.IFormatProvider> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1998">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="04f47-1999">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-1999">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="04f47-2000">경우 `provider` 은 `null`, <xref:System.Globalization.DateTimeFormatInfo> 관련 된 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2000">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> associated with the current culture is used.</span></span> <span data-ttu-id="04f47-2001">자세한 내용은 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="04f47-2001">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-2002">다음 예제에서는 표준 날짜 시간 형식 문자열의 각를 사용 하 여 날짜 및 시간을 4 개의 서로 다른 문화권의 문자열 표현을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2002">The following example uses each of the standard date time format strings to display the string representation of a date and time for four different cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring3.cs#4)]
 [!code-vb[System.DateTime.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring3.vb#4)]  
  
 <span data-ttu-id="04f47-2003">다음 예제에서는 서식 지정 하는 여러 가지는 <xref:System.DateTime> 고정을 사용 하 여 값 <xref:System.Globalization.DateTimeFormatInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2003">The following example demonstrates different ways of formatting a <xref:System.DateTime> value using the invariant <xref:System.Globalization.DateTimeFormatInfo>.</span></span>  
  
 [!code-cpp[Classic DateTime.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTime.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CS/source.cs#1)]
 [!code-vb[Classic DateTime.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="04f47-2004">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-2004">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
 <span data-ttu-id="04f47-2005">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-2005">-or-</span></span>  
  
 <span data-ttu-id="04f47-2006"><paramref name="format" /> does not contain a valid custom format pattern.</span><span class="sxs-lookup"><span data-stu-id="04f47-2006"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04f47-2007">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-2007">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-2008"><see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" /> 메서드에서 사용 하는 달력에서 날짜 및 시간의 문자열 표현을 반환는 <paramref name="provider" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2008">The <see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="04f47-2009">해당 일정에 의해 정의 됩니다는 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2009">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="04f47-2010">경우 현재 값 <see cref="T:System.DateTime" /> 인스턴스가 <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 보다 이후 이거나 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, 메서드에서 throw 된 <see cref="T:System.ArgumentOutOfRangeException" />합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2010">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="04f47-2011">다음 예제에서 이에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2011">The following example provides an illustration.</span></span> <span data-ttu-id="04f47-2012">범위 밖에 있는 날짜 서식을 시도 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2012">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.UmAlQuraCalendar" /> class.</span></span>  
  
 [!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception4.cs#4)]
 [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception4.vb#4)]</para>
        </block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public DateTime ToUniversalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime ToUniversalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToUniversalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUniversalTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime ToUniversalTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f47-2013">Converts the value of the current <see cref="T:System.DateTime" /> object to Coordinated Universal Time (UTC).</span><span class="sxs-lookup"><span data-stu-id="04f47-2013">Converts the value of the current <see cref="T:System.DateTime" /> object to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="04f47-2014">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" />, and whose value is the UTC equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented by a <see cref="T:System.DateTime" /> object.</span><span class="sxs-lookup"><span data-stu-id="04f47-2014">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" />, and whose value is the UTC equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented by a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-2015">Coordinated Universal Time (UTC)은 현지 시간 UTC 오프셋을 뺀 값과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2015">The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset.</span></span> <span data-ttu-id="04f47-2016">UTC 오프셋에 대 한 자세한 내용은 참조 <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2016">For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2017">변환 고려 현재 시간에 적용 되는 일광 절약 시간 규칙 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2017">The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04f47-2018">[!INCLUDE[winxp](~/includes/winxp-md.md)] 시스템의 <xref:System.DateTime.ToUniversalTime%2A> 현지 시간에서 UTC로 변환 하는 경우 메서드는 현재 조정 규칙을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2018">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC.</span></span> <span data-ttu-id="04f47-2019">결과적으로, 현재 조정 규칙이 적용 되기 기간에 대 한 변환 현지 시간과 UTC 사이의 차이 정확 하 게 반영 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2019">As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.</span></span>  
  
 <span data-ttu-id="04f47-2020">.NET Framework 버전 2.0에서 반환 된 값으로 시작 된 <xref:System.DateTime.ToUniversalTime%2A> 메서드에 의해 결정 됩니다는 <xref:System.DateTime.Kind%2A> 현재 <xref:System.DateTime> 개체.</span><span class="sxs-lookup"><span data-stu-id="04f47-2020">Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object.</span></span> <span data-ttu-id="04f47-2021">다음 표에서 가능한 결과 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2021">The following table describes the possible results.</span></span>  
  
|<span data-ttu-id="04f47-2022">Kind</span><span class="sxs-lookup"><span data-stu-id="04f47-2022">Kind</span></span>|<span data-ttu-id="04f47-2023">결과</span><span class="sxs-lookup"><span data-stu-id="04f47-2023">Results</span></span>|  
|----------|-------------|  
|<xref:System.DateTimeKind.Utc>|<span data-ttu-id="04f47-2024">변환이 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2024">No conversion is performed.</span></span>|  
|<xref:System.DateTimeKind.Local>|<span data-ttu-id="04f47-2025">현재 <xref:System.DateTime> 개체 UTC로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2025">The current <xref:System.DateTime> object is converted to UTC.</span></span>|  
|<xref:System.DateTimeKind.Unspecified>|<span data-ttu-id="04f47-2026">현재 <xref:System.DateTime> 개체가 현지 시간으로 가정 되 고 변환이 수행 되며 처럼 <xref:System.DateTime.Kind%2A> 된 <xref:System.DateTimeKind.Local>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2026">The current <xref:System.DateTime> object is assumed to be a local time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Local>.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="04f47-2027"><xref:System.DateTime.ToUniversalTime%2A> 변환 메서드는 <xref:System.DateTime> 현지 시간에서 UTC로 값입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2027">The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC.</span></span> <span data-ttu-id="04f47-2028">사용 하 여 시간을 UTC로 아닌 현지 표준 시간대에 변환 하려면는 <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2028">To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="04f47-2029">해당 오프셋이 UTC에서 알려진 시간을 변환 하려면 사용 하 여는 <xref:System.DateTimeOffset.ToUniversalTime%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2029">To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method.</span></span>  
  
 <span data-ttu-id="04f47-2030">모호한 시간 날짜 및 시간 값을 사용 하는 경우이 메서드는 표준 시간 임을 것으로 간주 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2030">If the date and time instance value is an ambiguous time, this method assumes that it is a standard time.</span></span> <span data-ttu-id="04f47-2031">(모호한 시간은 표준 시간 또는 현지 표준 시간대의 일광 절약 시간제에 매핑할 수 있는) 날짜 및 시간 값이 잘못 된 시간인 경우 경우이 메서드는 현지 시간 오프셋 UTC를 반환 하는 현지 표준 시간대의 UTC에서 빼서 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2031">(An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC.</span></span> <span data-ttu-id="04f47-2032">(잘못 된 시간은 일광 절약 시간 조정 규칙을 적용 하는 때문에 존재 하지 않는 하나.)</span><span class="sxs-lookup"><span data-stu-id="04f47-2032">(An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-2033">다음 예제는 <xref:System.DateTime.ToUniversalTime%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2033">The following example demonstrates the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  
  
 <span data-ttu-id="04f47-2034">다음 예제에서는 <xref:System.DateTime.SpecifyKind%2A> 메서드를 보여 주는 방법을 <xref:System.DateTime.Kind%2A> 속성 영향을 줍니다는 <xref:System.DateTime.ToLocalTime%2A> 및 <xref:System.DateTime.ToUniversalTime%2A> 변환 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2034">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-2035"><see cref="M:System.DateTime.ToUniversalTime" /> 메서드는 때때로 현지 시간을 UTC로 변환 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2035">The <see cref="M:System.DateTime.ToUniversalTime" /> method is sometimes used to convert a local time to UTC.</span></span> <span data-ttu-id="04f47-2036"><see cref="M:System.DateTime.ToLocalTime" /> 메서드를 호출 하는 원래 현지 시간을 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2036">The <see cref="M:System.DateTime.ToLocalTime" /> method is then called to restore the original local time.</span></span> <span data-ttu-id="04f47-2037">그러나 원래 시간이 현지 표준 시간대에 잘못 된 시간을 나타내는 경우 두 현지 시간 값 같은 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2037">However, if the original time represents an invalid time in the local time zone, the two local time values will not be equal.</span></span> <span data-ttu-id="04f47-2038">자세한 내용 및 예제에 대 한 참조는 <see cref="M:System.DateTime.ToLocalTime" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2038">For additional information and an example, see the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span>  
  
 <span data-ttu-id="04f47-2039">[!INCLUDE[winxp](~/includes/winxp-md.md)] 시스템의 <see cref="M:System.DateTime.ToUniversalTime" /> 메서드 인식 하위 수준 (즉, 날짜를 조정 하면 현재의 시작 날짜 보다 이전 날짜를 포함 하 여 모든 날짜에 적용 되는 현지 표준 시간대에 대 한 현재 조정 규칙 규칙)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2039">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <see cref="M:System.DateTime.ToUniversalTime" /> method recognizes only the current adjustment rule for the local time zone, which it applies to all dates, including down-level dates (that is, dates that are earlier than the starting date of the current adjustment rule).</span></span> <span data-ttu-id="04f47-2040">실행 중인 응용 프로그램 [!INCLUDE[winxp](~/includes/winxp-md.md)] 필요한 정확한 로컬 날짜 및 시간을 계산 해야 합니다를 사용 하 여이 문제 해결의 <see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" /> 를 검색할 메서드는 <see cref="T:System.TimeZoneInfo" /> 현지 표준 시간대에 해당 하는 개체 및 호출 해당 <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2040">Applications running on [!INCLUDE[winxp](~/includes/winxp-md.md)] that require historically accurate local date and time calculations must work around this behavior by using the <see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" /> method to retrieve a <see cref="T:System.TimeZoneInfo" /> object that corresponds to the local time zone and calling its <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> method.</span></span>  
  
 <span data-ttu-id="04f47-2041">다음 예제에서는 간의 차이 <see cref="M:System.DateTime.ToUniversalTime" /> 및 <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> 에 대 한 메서드는 [!INCLUDE[winxp](~/includes/winxp-md.md)] 은 미국 영어 시스템 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2041">The following example illustrates the difference between the <see cref="M:System.DateTime.ToUniversalTime" /> and <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> methods on a [!INCLUDE[winxp](~/includes/winxp-md.md)] system in the U.S. Pacific Time zone.</span></span> <span data-ttu-id="04f47-2042">첫 번째 두 메서드 호출 2006에 날짜는 현재 표준 시간대 조정 규칙 (2007 적용 됨)을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2042">The first two method calls apply the current time zone adjustment rule (which went into effect in 2007) to a date in 2006.</span></span> <span data-ttu-id="04f47-2043">3 월;의 두 번째 일요일에 일광 절약 시간 전환에 대해 현재 조정 규칙을 제공합니다. 2006 년 4 월의 첫 번째 일요일에 일광 절약 시간제로 전환할 때 유효 했던 이전 규칙입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2043">The current adjustment rule provides for the transition to daylight saving time on the second Sunday of March; the previous rule, which was in effect in 2006, provided for the transition to daylight saving time to occur on the first Sunday of April.</span></span> <span data-ttu-id="04f47-2044">세 번째 메서드 호출을 정확 하 게이 기록 날짜 및 시간 변환을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2044">Only the third method call accurately performs this historical date and time conversion.</span></span>  
  
 [!code-csharp[System.DateTime.ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.touniversaltime/cs/touniversaltime.cs#1)]
 [!code-vb[System.DateTime.ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.touniversaltime/vb/touniversaltime.vb#1)]</para>
        </block>
        <altmember cref="M:System.DateTime.ToLocalTime" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-2045">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span><span class="sxs-lookup"><span data-stu-id="04f47-2045">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.DateTime.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.DateTime&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.String,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.DateTime&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="04f47-2046">A string containing a date and time to convert.</span><span class="sxs-lookup"><span data-stu-id="04f47-2046">A string containing a date and time to convert.</span></span></param>
        <param name="result"><span data-ttu-id="04f47-2047">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <c>s</c>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span><span class="sxs-lookup"><span data-stu-id="04f47-2047">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <c>s</c>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="04f47-2048">The conversion fails if the <c>s</c> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span><span class="sxs-lookup"><span data-stu-id="04f47-2048">The conversion fails if the <c>s</c> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="04f47-2049">This parameter is passed uninitialized.</span><span class="sxs-lookup"><span data-stu-id="04f47-2049">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="04f47-2050">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span><span class="sxs-lookup"><span data-stu-id="04f47-2050">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-2051"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-2051"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-2052"><xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드는 비슷합니다는 <xref:System.DateTime.Parse%28System.String%29?displayProperty=nameWithType> 메서드와 비슷하지만 <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> 메서드는 변환이 실패할 경우 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2052">The <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method is similar to the <xref:System.DateTime.Parse%28System.String%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="04f47-2053">문자열 `s` 서식 지정 정보를 사용 하 여 현재에서 구문 분석 <xref:System.Globalization.DateTimeFormatInfo> 현재 스레드 문화권에 의해 암시적으로 제공 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2053">The string `s` is parsed using formatting information in the current <xref:System.Globalization.DateTimeFormatInfo> object, which is supplied implicitly by the current thread culture.</span></span>  
  
 <span data-ttu-id="04f47-2054">가능한 경우이 메서드는 인식할 수 없는 데이터를 무시 하 고 월, 일 및 연도 정보는 현재 날짜를 누락 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2054">This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date.</span></span> <span data-ttu-id="04f47-2055">경우 `s` 날짜만 있고 시간이 포함 된이 메서드는 자정 12 시에 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2055">If `s` contains only a date and no time, this method assumes the time is 12:00 midnight.</span></span> <span data-ttu-id="04f47-2056">경우 `s` 날짜 구성 요소가 포함 되어 두 자리 연도를 변환할의 값에 따라 현재 문화권의 현재 달력의 연간은 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2056">If `s` includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="04f47-2057">내부 조인을 선행 또는 후행 공백 문자에 `s` 는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2057">Any leading, inner, or trailing white space character in `s` is ignored.</span></span> <span data-ttu-id="04f47-2058">날짜 및 시간이 선행 및 후행 숫자 기호 문자 ('#', U + 00-23)의 쌍과 함께 대괄호로 묶습니다 수와 하나 올 수 있습니다 또는 이상의 NULL 문자 (U + 0000)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2058">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="04f47-2059">때문에 <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> 날짜의 문자열 표현을 구문 분석 하려고 시도 메서드 및 서로 다른 문화권에서 특정 문자열을 구문 분석 하는 현재 문화권의 서식 설정 규칙을 사용 하 여 시간 실패 또는 다른 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2059">Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results.</span></span> <span data-ttu-id="04f47-2060">특정 날짜 및 시간 형식으로 구문 분석할 여러 로캘에서 사용 하 여는 <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드 또는 오버 로드 중 하나는 <xref:System.DateTime.TryParseExact%2A> 메서드 고 형식 지정자를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2060">If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier.</span></span>  
  
 <span data-ttu-id="04f47-2061">경우 `s` 는 현재 달력 메서드 구문 분석 하 고 윤년의 윤 일의 문자열 표현인 `s` 성공적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2061">If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully.</span></span> <span data-ttu-id="04f47-2062">경우 `s` 현재 문화권의 현재 달력 윤 일에 비-윤년의 문자열 표현, 구문 분석 작업이 실패 하 고 메서드가 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2062">If `s` is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="04f47-2063">경우 `s` 표준 시간대 정보가 없으면 `result` 포함 한 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 메서드가 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2063">If `s` contains no time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> when the method returns.</span></span> <span data-ttu-id="04f47-2064">구문 분석할 문자열 표준 시간대 정보를 포함 하는 경우 `result` 포함 한 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType> 메서드가 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2064">If the string to be parsed contains time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> when the method returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-2065">다음 예제에서는 다양 한 날짜 및 시간 문자열에 전달 된 <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2065">The following example passes a number of date and time strings to the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.DateTime.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.TryParse/cpp/datetime.tryparse1.cpp#1)]
 [!code-csharp[System.DateTime.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.DateTime.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/TryParse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-2066">현재 속성에 의해 영향을 받습니다 서식을 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 는 기본적으로에서 파생 된 개체는 **국가 및 언어 옵션** 제어판 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2066">Formatting is influenced by properties of the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object, which by default are derived from the **Regional and Language Options** item in Control Panel.</span></span> <span data-ttu-id="04f47-2067"><see cref="Overload:System.DateTime.TryParse" /> 예기치 않게 실패 하 고 반환할 수 메서드 <see langword="False" /> 경우 현재 <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> 및 <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> 속성은 동일한 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2067">The <see cref="Overload:System.DateTime.TryParse" /> method can unexpectedly fail and return <see langword="False" /> if the current <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> and <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> properties are set to the same value.</span></span></para>
        </block>
        <altmember cref="Overload:System.DateTime.Parse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), provider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, provider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="04f47-2068">A string containing a date and time to convert.</span><span class="sxs-lookup"><span data-stu-id="04f47-2068">A string containing a date and time to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-2069">An object that supplies culture-specific formatting information about <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-2069">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="styles"><span data-ttu-id="04f47-2070">A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date.</span><span class="sxs-lookup"><span data-stu-id="04f47-2070">A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="04f47-2071">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-2071">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <param name="result"><span data-ttu-id="04f47-2072">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <c>s</c>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span><span class="sxs-lookup"><span data-stu-id="04f47-2072">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <c>s</c>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="04f47-2073">The conversion fails if the <c>s</c> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span><span class="sxs-lookup"><span data-stu-id="04f47-2073">The conversion fails if the <c>s</c> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="04f47-2074">This parameter is passed uninitialized.</span><span class="sxs-lookup"><span data-stu-id="04f47-2074">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="04f47-2075">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.</span><span class="sxs-lookup"><span data-stu-id="04f47-2075">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-2076"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-2076"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-2077"><xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드 날짜, 시간 및 표준 시간대 정보를 포함할 수 있는 문자열을 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2077">The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses a string that can contain date, time, and time zone information.</span></span> <span data-ttu-id="04f47-2078">비슷합니다는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 메서드와 비슷하지만 <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드는 변환이 실패할 경우 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2078">It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="04f47-2079">이 메서드는 인식할 수 없는 데이터를 무시 하는 구문 분석 하려고 `s` 완전히 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2079">This method attempts to ignore unrecognized data and parse `s` completely.</span></span> <span data-ttu-id="04f47-2080">경우 `s` 한 번 하지만 날짜 없음, 기본 글꼴로 대체 현재 날짜에서 메서드를 포함 하거나, 있는 경우 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> 합니다 `DateTime.Date.MinValue`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2080">If `s` contains a time but no date, the method by default substitutes the current date or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> flag, it substitutes `DateTime.Date.MinValue`.</span></span> <span data-ttu-id="04f47-2081">경우 `s` 포함 날짜 하지만 순식간 12:00 자정 기본 시간으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2081">If `s` contains a date but no time, 12:00 midnight is used as the default time.</span></span> <span data-ttu-id="04f47-2082">날짜는 있는 경우 두 자릿수 연도 구성 요소는 구성, 연간으로 변환 됩니다는 `provider` 의 값을 기반으로 하는 매개 변수의 현재 달력은 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2082">If a date is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="04f47-2083">내부 조인을 선행 또는 후행 공백 문자 `s` 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2083">Any leading, inner, or trailing white space characters in `s` are ignored.</span></span> <span data-ttu-id="04f47-2084">날짜 및 시간이 선행 및 후행 숫자 기호 문자 ('#', U + 00-23)의 쌍과 함께 대괄호로 묶습니다 수와 하나 올 수 있습니다 또는 이상의 NULL 문자 (U + 0000)입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2084">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="04f47-2085">특정 날짜 및 시간 요소 뿐만 아니라 이름 및 날짜 및 시간에 사용 되는 기호에 대 한 유효한으로 `provider` 매개 변수는 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2085">Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the `provider` parameter, which can be any of the following:</span></span>  
  
-   <span data-ttu-id="04f47-2086">A <xref:System.Globalization.CultureInfo> 에 해당 형식이 사용 되는 문화권을 나타내는 개체는 `s` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2086">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `s` parameter.</span></span> <span data-ttu-id="04f47-2087"><xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성 정의에 사용 된 포멧을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2087">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting used in `s`.</span></span>  
  
-   <span data-ttu-id="04f47-2088">A <xref:System.Globalization.DateTimeFormatInfo> 에 사용 되는 형식을 정의 하는 개체 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2088">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.</span></span>  
  
-   <span data-ttu-id="04f47-2089">사용자 지정 <xref:System.IFormatProvider> 구현.</span><span class="sxs-lookup"><span data-stu-id="04f47-2089">A custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="04f47-2090">해당 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 에 사용 되는 형식을 정의 하는 개체 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2090">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.</span></span>  
  
 <span data-ttu-id="04f47-2091">`provider`가 `null`이면 현재 문화권이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2091">If `provider` is `null`, the current culture is used.</span></span>  
  
 <span data-ttu-id="04f47-2092">경우 `s` 는 현재 달력 메서드 구문 분석 하 고 윤년의 윤 일의 문자열 표현인 `s` 성공적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2092">If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully.</span></span> <span data-ttu-id="04f47-2093">경우 `s` 의 현재 달력에 윤 일에 비-윤년의 문자열 표현인 `provider`구문 분석 작업이 실패 하 고, 메서드가 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2093">If `s` is the string representation of a leap day in a non-leap year in the current calendar of `provider`, the parse operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="04f47-2094">`styles` 매개 변수 정의 정확 하 게 구문 분석된 된 문자열을 구문 분석 작업이 해야 처리 하는 방법을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2094">The `styles` parameter defines the precise interpretation of the parsed string and how the parse operation should handle it.</span></span> <span data-ttu-id="04f47-2095">하나 이상의 멤버의 수는 <xref:System.Globalization.DateTimeStyles> 다음 표에 설명 된 대로 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2095">It can be one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration, as described in the following table.</span></span>  
  
|<span data-ttu-id="04f47-2096">DateTimeStyles 멤버</span><span class="sxs-lookup"><span data-stu-id="04f47-2096">DateTimeStyles member</span></span>|<span data-ttu-id="04f47-2097">설명</span><span class="sxs-lookup"><span data-stu-id="04f47-2097">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="04f47-2098">구문 분석 `s` 및 필요한 경우 UTC로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2098">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="04f47-2099">경우 `s` 표준 시간대 오프셋을 포함 또는 `s` 표준 시간대 정보가 없습니다 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> 플래그를 메서드 호출에서 문자열의 구문을 분석 <xref:System.DateTime.ToUniversalTime%2A> 반환 된 변환할 <xref:System.DateTime> 값을 UTC 를 설정 하 고는 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2099">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2100">경우 `s` UTC를 나타낸다는 것을 의미 경우 `s` 표준 시간대 정보가 들어 있지 않은 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> 플래그를 메서드가 문자열을 구문 분석을 수행 하 표준 시간대 변환 작업 없이 반환 된 <xref:System.DateTime> 값 및 집합은 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2100">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2101">다른 모든 경우에는 플래그는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2101">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="04f47-2102">유효 하더라도이 값은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2102">Although valid, this value is ignored.</span></span> <span data-ttu-id="04f47-2103">내부 공백이의 날짜 및 시간 요소에 허용 됩니다 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2103">Inner white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="04f47-2104">유효 하더라도이 값은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2104">Although valid, this value is ignored.</span></span> <span data-ttu-id="04f47-2105">날짜 및 시간 요소에서 선행 공백을 허용 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2105">Leading white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="04f47-2106">유효 하더라도이 값은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2106">Although valid, this value is ignored.</span></span> <span data-ttu-id="04f47-2107">구조의 날짜 및 시간 요소에는 후행 공백은 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2107">Trailing white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="04f47-2108">지정 하는 `s` 선행, 내부 및 후행 공백이 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2108">Specifies that `s` may contain leading, inner, and trailing white spaces.</span></span> <span data-ttu-id="04f47-2109">이것은 기본적인 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2109">This is the default behavior.</span></span> <span data-ttu-id="04f47-2110">더 제한적인 제공 하 여 재정의할 수 없습니다 <xref:System.Globalization.DateTimeStyles> 열거형 값과 같은 <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2110">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="04f47-2111">지정 되는 경우 `s` 표준 시간대 정보가 없으면 현지 시간을 나타내는 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2111">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="04f47-2112">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값으로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2112">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="04f47-2113">지정 되는 경우 `s` 표준 시간대 정보가 없으면 UTC를 나타내는 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2113">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="04f47-2114">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그가 없으면,이 메서드는 반환 된 <xref:System.DateTime> 현지 시간 집합으로 측정 된 UTC에서 값의 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2114">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="04f47-2115">유효 하더라도이 값은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2115">Although valid, this value is ignored.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="04f47-2116">표준 시간대 정보가 포함 된 문자열에 대 한 날짜 및 시간 문자열을 변환 하는 과정을 방지 하기 위해 시도 <xref:System.DateTime> 값과 해당 <xref:System.DateTime.Kind%2A> 속성이로 설정 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2116">For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2117">호출 하 여 이러한 문자열은 생성 하는 일반적으로 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> "o", "r" 또는 "u" 표준 서식 지정자를 사용 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2117">Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method using either the "o", "r", or "u" standard format specifiers.</span></span>|  
  
 <span data-ttu-id="04f47-2118">경우 `s` 표준 시간대 정보가 없으면는 <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 하지 않는 한는 `styles` 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2118">If `s` contains no time zone information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> unless a `styles` flag indicates otherwise.</span></span> <span data-ttu-id="04f47-2119">경우 `s` 표준 시간대 또는 표준 시간대 오프셋된 정보를 포함 된 <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드 필요한 시간 변환을 수행 하 고 다음 중 하나를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2119">If `s` includes time zone or time zone offset information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method performs any necessary time conversion and returns one of the following:</span></span>  
  
-   <span data-ttu-id="04f47-2120">A <xref:System.DateTime> 현지 시간이 고 해당 날짜와 시간이 반영 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2120">A <xref:System.DateTime> value whose date and time reflect the local time and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="04f47-2121">또는 if `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> 플래그를는 <xref:System.DateTime> UTC이 고 해당 날짜와 시간을 반영 하는 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2121">Or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag, a <xref:System.DateTime> value whose date and time reflect UTC and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="04f47-2122">사용 하 여이 동작을 재정의할 수 있습니다는 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2122">This behavior can be overridden by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag.</span></span>  
  
## <a name="parsing-custom-cultures"></a><span data-ttu-id="04f47-2123">사용자 지정 문화권 구문 분석</span><span class="sxs-lookup"><span data-stu-id="04f47-2123">Parsing Custom Cultures</span></span>  
 <span data-ttu-id="04f47-2124">사용 하 여 사용자 지정 문화권에 대해 생성 된 날짜 및 시간 문자열의 구문을 분석 하는 경우는 <xref:System.DateTime.TryParseExact%2A> 메서드 대신는 <xref:System.DateTime.TryParse%2A> 메서드를 구문 분석 작업이 성공할 확률이 높아집니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2124">If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed.</span></span> <span data-ttu-id="04f47-2125">사용자 지정 문화권 날짜 및 시간 문자열 복잡 하 고 구문 분석 하기 어려울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2125">A custom culture date and time string can be complicated and difficult to parse.</span></span> <span data-ttu-id="04f47-2126"><xref:System.DateTime.TryParse%2A> 메서드 중 일부는 실패할 수 있습니다 여러 암시적 구문 분석 패턴, 문자열을 구문 분석을 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2126">The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail.</span></span> <span data-ttu-id="04f47-2127">반면,는 <xref:System.DateTime.TryParseExact%2A> 메서드를 명시적으로 하나 이상의 정확한 구문 분석 되는 패턴에 성공할 수를 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2127">In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</span></span>  
  
 <span data-ttu-id="04f47-2128">사용자 지정 문화권에 대 한 자세한 내용은 참조는 <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2128">For more information about custom cultures, see the <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f47-2129">다음 예제는 <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2129">The following example illustrates the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.DateTime.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/tryparse2.cs#2)]
 [!code-vb[System.DateTime.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-2130"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span><span class="sxs-lookup"><span data-stu-id="04f47-2130"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
 <span data-ttu-id="04f47-2131">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-2131">-or-</span></span>  
  
 <span data-ttu-id="04f47-2132"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span><span class="sxs-lookup"><span data-stu-id="04f47-2132"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="04f47-2133"><paramref name="provider" /> is a neutral culture and cannot be used in a parsing operation.</span><span class="sxs-lookup"><span data-stu-id="04f47-2133"><paramref name="provider" /> is a neutral culture and cannot be used in a parsing operation.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-2134">현재 속성에 의해 영향을 받습니다 서식을 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체에서 제공 하는 <paramref name="provider" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2134">Formatting is influenced by properties of the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object, which is supplied by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="04f47-2135"><see cref="Overload:System.DateTime.TryParse" /> 예기치 않게 실패 하 고 반환할 수 메서드 <see langword="False" /> 경우 현재 <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> 및 <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> 속성은 동일한 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2135">The <see cref="Overload:System.DateTime.TryParse" /> method can unexpectedly fail and return <see langword="False" /> if the current <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> and <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> properties are set to the same value.</span></span></para>
        </block>
        <altmember cref="Overload:System.DateTime.Parse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f47-2136">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span><span class="sxs-lookup"><span data-stu-id="04f47-2136">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span> <span data-ttu-id="04f47-2137">The format of the string representation must match a specified format exactly.</span><span class="sxs-lookup"><span data-stu-id="04f47-2137">The format of the string representation must match a specified format exactly.</span></span> <span data-ttu-id="04f47-2138">The method returns a value that indicates whether the conversion succeeded.</span><span class="sxs-lookup"><span data-stu-id="04f47-2138">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.DateTime.ParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As ReadOnlySpan(Of Char), formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string s, string format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As String, format As String, provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="04f47-2139">A string containing a date and time to convert.</span><span class="sxs-lookup"><span data-stu-id="04f47-2139">A string containing a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="04f47-2140">The required format of <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-2140">The required format of <c>s</c>.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-2141">An object that supplies culture-specific formatting information about <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-2141">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="style"><span data-ttu-id="04f47-2142">A bitwise combination of one or more enumeration values that indicate the permitted format of <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-2142">A bitwise combination of one or more enumeration values that indicate the permitted format of <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="04f47-2143">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <c>s</c>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span><span class="sxs-lookup"><span data-stu-id="04f47-2143">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <c>s</c>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="04f47-2144">The conversion fails if either the <c>s</c> or <c>format</c> parameter is <see langword="null" />, is an empty string, or does not contain a date and time that correspond to the pattern specified in <c>format</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-2144">The conversion fails if either the <c>s</c> or <c>format</c> parameter is <see langword="null" />, is an empty string, or does not contain a date and time that correspond to the pattern specified in <c>format</c>.</span></span> <span data-ttu-id="04f47-2145">This parameter is passed uninitialized.</span><span class="sxs-lookup"><span data-stu-id="04f47-2145">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="04f47-2146">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span><span class="sxs-lookup"><span data-stu-id="04f47-2146">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="04f47-2147">The format of the string representation must match the specified format exactly.</span><span class="sxs-lookup"><span data-stu-id="04f47-2147">The format of the string representation must match the specified format exactly.</span></span> <span data-ttu-id="04f47-2148">The method returns a value that indicates whether the conversion succeeded.</span><span class="sxs-lookup"><span data-stu-id="04f47-2148">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-2149"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-2149"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-2150"><xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 변수에 정의 된 형식에 있어야 하는 날짜의 문자열 표현을 구문 분석 하는 메서드는 `format` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2150">The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="04f47-2151">비슷합니다는 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 메서드와 비슷하지만 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> 메서드는 변환이 실패할 경우 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2151">It is similar to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="04f47-2152">`s` 매개 변수는 날짜 및 시간 구문 분석을 포함 하 고 변수에 정의 된 형식에 있어야는 `format` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2152">The `s` parameter contains the date and time to parse and must be in a format defined by the `format` parameter.</span></span> <span data-ttu-id="04f47-2153">날짜, 시간 및 표준 시간대 요소에 있는 경우 `s`도로 지정 된 순서로 나타나야 `format`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2153">If date, time, and time zone elements are present in `s`, they must also appear in the order specified by `format`.</span></span> <span data-ttu-id="04f47-2154">경우 `format` 날짜 정의 시간 요소가 없는 있고 구문 분석 작업이 성공 하면 결과 <xref:System.DateTime> 값에는 시간을 자정 (00: 00:00).</span><span class="sxs-lookup"><span data-stu-id="04f47-2154">If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00).</span></span> <span data-ttu-id="04f47-2155">경우 `format` 시간 정의 날짜 요소가 없는 있고 구문 분석 작업이 성공 하면 결과 <xref:System.DateTime> 기본적으로 값의 날짜에 `DateTime.Now.Date`, 날짜는 또는 `DateTime.MinValue.Date` 경우 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2155">If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value by default has a date of `DateTime.Now.Date`, or it has a date of `DateTime.MinValue.Date` if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="04f47-2156">`style` 매개 변수는 확인 여부는 `s` 매개 변수 앞, 내부 또는 후행 공백 문자를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2156">The `style` parameter determines whether the `s` parameter can contain leading, inner, or trailing white space characters.</span></span>  
  
 <span data-ttu-id="04f47-2157">경우 `s` 표준 시간대 정보가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체가 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2157">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2158">사용 하 여이 동작을 변경할 수 있습니다는 <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> 플래그를 반환 하는 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, 또는 사용 하 여는 <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> 및 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그를 반환 하는 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2158">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2159">필요에 따라 시간이 현지 시간으로 변환 됩니다 s에 표준 시간대 정보를 포함 하는 경우 및 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2159">If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2160">사용 하 여이 동작을 변경할 수 있습니다는 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> 하지 utc (협정 세계시)를 현지 시간으로 변환 하 고 설정 하는 플래그는 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2160">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="04f47-2161">`format` 예상 되는에 해당 하는 패턴을 포함 하는 매개 변수는 `s` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2161">The `format` parameter contains a pattern that corresponds to the expected format of the `s` parameter.</span></span> <span data-ttu-id="04f47-2162">패턴에는 `format` 매개 변수 구성에서 하나 이상의 사용자 지정 형식 지정자는 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md) 테이블 또는 미리 정의 된 패턴을 식별 하는 단일 표준 형식 지정자는 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2162">The pattern in the `format` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="04f47-2163">에 대 한 고정 문화권을 사용 하는 사용자 지정 형식 패턴이에 날짜나 시간 구분 기호를 사용 하지 않는 경우는 `provider` 매개 변수 및 가장 넓은 형식으로 각 사용자 지정 형식 지정자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2163">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="04f47-2164">예를 들어 패턴에 시간을 지정 하려는 경우 짧은 "H" 형식 대신 긴 형식 "HH"를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2164">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04f47-2165">필요 없이 `s` 구문 분석 작업이 성공 하려면에 대 한 단일 형식을 준수, 호출할 수 있습니다는 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드 허용 되는 여러 형식을 지정 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2165">Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method and specify multiple permitted formats.</span></span> <span data-ttu-id="04f47-2166">이렇게 하면 구문 분석 작업이 성공 하려면 가능성이 높습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2166">This makes the parse operation more likely to succeed.</span></span>  
  
 <span data-ttu-id="04f47-2167">특정 날짜 및 시간 기호 및에서 사용 되는 (예: 특정 언어의 요일 이름) 문자열 `s` 가 정의한는 `provider` 매개 변수를의 정확한 형식을 있는 그대로 `s` 경우 `format` 는 표준 형식 지정자 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2167">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="04f47-2168">`provider` 매개 변수는 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2168">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="04f47-2169">A <xref:System.Globalization.CultureInfo> 해석 하는 데 사용 하는 문화권을 나타내는 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2169">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="04f47-2170"><xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체의 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> 속성 정의 기호와 형식을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2170">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="04f47-2171">A <xref:System.Globalization.DateTimeFormatInfo> 날짜 및 시간 데이터 형식을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2171">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="04f47-2172">사용자 지정 <xref:System.IFormatProvider> 구현 된 <xref:System.IFormatProvider.GetFormat%2A> 메서드 중 하나를 반환 합니다.는 <xref:System.Globalization.CultureInfo> 개체 또는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2172">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="04f47-2173">경우 `provider` 은 `null`, <xref:System.Globalization.CultureInfo> 현재 문화권에 해당 하는 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2173">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="04f47-2174">`styles` 의 하나 이상의 멤버를 포함 하는 매개 변수는 <xref:System.Globalization.DateTimeStyles> 공백에 정의 되지 않은 여부와 위치를 결정 하는 열거형 `format` 에 나타날 수 `s` 구문 분석 작업의 정확한 동작을 제어 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2174">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="04f47-2175">다음 표에 각 방법의 멤버는 <xref:System.Globalization.DateTimeStyles> 열거형의 작동에 영향을 줍니다는 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2175">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.</span></span>  
  
|<span data-ttu-id="04f47-2176">DateTimeStyles 멤버</span><span class="sxs-lookup"><span data-stu-id="04f47-2176">DateTimeStyles member</span></span>|<span data-ttu-id="04f47-2177">설명</span><span class="sxs-lookup"><span data-stu-id="04f47-2177">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="04f47-2178">구문 분석 `s` 및 필요한 경우 UTC로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2178">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="04f47-2179">경우 `s` 표준 시간대 오프셋을 포함 또는 `s` 표준 시간대 정보가 없습니다 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> 플래그를 메서드 호출에서 문자열의 구문을 분석 <xref:System.DateTime.ToUniversalTime%2A> 반환 된 변환할 <xref:System.DateTime> 값을 UTC 를 설정 하 고는 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2179">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2180">경우 `s` UTC를 나타낸다는 것을 의미 경우 `s` 표준 시간대 정보가 들어 있지 않은 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> 플래그를 메서드가 문자열을 구문 분석을 수행 하 표준 시간대 변환 작업 없이 반환 된 <xref:System.DateTime> 값 및 집합은 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2180">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2181">다른 모든 경우에는 플래그는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2181">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="04f47-2182">에 정의 되지 않은 공백은 지정 `format` 개별 날짜나 시간 요소 사이 나타날 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2182">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="04f47-2183">에 정의 되지 않은 공백은 지정 `format` 의 시작 부분에 나타날 수 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2183">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="04f47-2184">에 정의 되지 않은 공백은 지정 `format` 의 끝에 표시 될 수 있습니다 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2184">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="04f47-2185">지정 하는 `s` 선행, 내부 및 후행 공백이에 정의 되지 않은 포함할 수 있습니다 `format`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2185">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="04f47-2186">지정 되는 경우 `s` 표준 시간대 정보가 없으면 현지 시간을 나타내는 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2186">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="04f47-2187">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값으로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2187">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="04f47-2188">지정 되는 경우 `s` 표준 시간대 정보가 없으면 UTC를 나타내는 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2188">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="04f47-2189">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그가 없으면,이 메서드는 반환 된 <xref:System.DateTime> 현지 시간 집합으로 측정 된 UTC에서 값의 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2189">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="04f47-2190">경우 `s` 시간 포함 날짜 정보 없이 반환 값의 날짜로 설정 되어 `DateTime.MinValue.Date`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2190">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="04f47-2191">`s` 매개 변수는 기본값을 사용 하 여 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2191">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="04f47-2192">에 없는 이외의 공백이 없습니다 `format` ï ´ ù.</span><span class="sxs-lookup"><span data-stu-id="04f47-2192">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="04f47-2193">경우 `s` 날짜 구성 요소를 반환 된 날짜에 <xref:System.DateTime> 값 1/1/0001로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2193">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="04f47-2194">경우 `s` 표준 시간대 정보가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2194">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2195">표준 시간대 정보에 있는 경우 `s`, 시간이 현지 시간으로 변환 됩니다 및 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2195">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="04f47-2196">표준 시간대 정보가 포함 된 문자열에 대해로 변환 하지 않으려면 시도 <xref:System.DateTime> 값과 해당 <xref:System.DateTime.Kind%2A> 속성이로 설정 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2196">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2197">이 플래그는 주로 현지 시간 UTC 시간으로 변환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2197">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="04f47-2198">다음 예제는 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2198">The following example demonstrates the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="04f47-2199">문자열 "5/01/2009 오전 8시 30분" 없습니다 분석할 수는 `styles` 매개 변수와 같으면 <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> 에서 선행 공백을 허용 되지 않으므로 `format`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2199">Note that the string " 5/01/2009 8:30 AM" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> because leading spaces are not allowed by `format`.</span></span> <span data-ttu-id="04f47-2200">또한 문자열 "5/01/2009 09시"으로 분석할 수 없습니다는 `format` 의 "MM/dd/yyyyhh:mm" 날짜 문자열 앞에 오지 않음 앞에 0 사용 하는 월 수로 때문에 `format` 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2200">Additionally, the string "5/01/2009 09:00" cannot be parsed successfully with a `format` of "MM/dd/yyyyhh:mm" because the date string does not precede the month number with a leading zero, as `format` requires.</span></span>  
  
 [!code-csharp[System.DateTime.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact1.cs#1)]
 [!code-vb[System.DateTime.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-2201"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span><span class="sxs-lookup"><span data-stu-id="04f47-2201"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
 <span data-ttu-id="04f47-2202">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-2202">-or-</span></span>  
  
 <span data-ttu-id="04f47-2203"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span><span class="sxs-lookup"><span data-stu-id="04f47-2203"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-2204">에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTime.TryParseExact" /> 메서드 반환 <see langword="false" /> 문자열을 구문 분석할 수 경우 시간 구성 요소 및 계약에 없는 AM/PM 지정자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2204">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.TryParseExact" /> method returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="04f47-2205">에 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전에서는 AM/PM 지정자는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2205">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para>
        </block>
        <altmember cref="Overload:System.DateTime.ParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTime&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="04f47-2206">A string that contains a date and time to convert.</span><span class="sxs-lookup"><span data-stu-id="04f47-2206">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="04f47-2207">An array of allowable formats of <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-2207">An array of allowable formats of <c>s</c>.</span></span></param>
        <param name="provider"><span data-ttu-id="04f47-2208">An object that supplies culture-specific format information about <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-2208">An object that supplies culture-specific format information about <c>s</c>.</span></span></param>
        <param name="style"><span data-ttu-id="04f47-2209">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-2209">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span></span> <span data-ttu-id="04f47-2210">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-2210">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <param name="result"><span data-ttu-id="04f47-2211">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <c>s</c>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span><span class="sxs-lookup"><span data-stu-id="04f47-2211">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <c>s</c>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="04f47-2212">The conversion fails if <c>s</c> or <c>formats</c> is <see langword="null" />, <c>s</c> or an element of <c>formats</c> is an empty string, or the format of <c>s</c> is not exactly as specified by at least one of the format patterns in <c>formats</c>.</span><span class="sxs-lookup"><span data-stu-id="04f47-2212">The conversion fails if <c>s</c> or <c>formats</c> is <see langword="null" />, <c>s</c> or an element of <c>formats</c> is an empty string, or the format of <c>s</c> is not exactly as specified by at least one of the format patterns in <c>formats</c>.</span></span> <span data-ttu-id="04f47-2213">This parameter is passed uninitialized.</span><span class="sxs-lookup"><span data-stu-id="04f47-2213">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="04f47-2214">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span><span class="sxs-lookup"><span data-stu-id="04f47-2214">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="04f47-2215">The format of the string representation must match at least one of the specified formats exactly.</span><span class="sxs-lookup"><span data-stu-id="04f47-2215">The format of the string representation must match at least one of the specified formats exactly.</span></span> <span data-ttu-id="04f47-2216">The method returns a value that indicates whether the conversion succeeded.</span><span class="sxs-lookup"><span data-stu-id="04f47-2216">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="04f47-2217"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04f47-2217"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-2218"><xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드는 할당 패턴 중 하 나와 일치 하는 날짜의 문자열 표현을 구문 분석 된 `formats` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2218">The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="04f47-2219">비슷하지만 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> 메서드를 제외 하 고는 <xref:System.DateTime.TryParseExact%2A> 메서드는 변환이 실패할 경우 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2219">It is like the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except the <xref:System.DateTime.TryParseExact%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="04f47-2220">`s` 매개 변수에 날짜 및 시간 구문 분석을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2220">The `s` parameter contains the date and time to parse.</span></span> <span data-ttu-id="04f47-2221">경우는 `s` 매개 변수는 한 번만 포함 하 고 날짜 없음 않으면 현재 날짜가 사용 됩니다는 `style` 매개 변수에 포함 됩니다는 <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> 기본 날짜는 쿼리에서 플래그 (`DateTime.Date.MinValue`) 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2221">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="04f47-2222">경우는 `s` 매개 변수에 포함만 날짜 및 시간, 자정 (00: 00:00) 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2222">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="04f47-2223">`style` 매개 변수를 결정 여부는 `s` 매개 변수 앞에 오는 포함 될 수 있습니다, 중간 또는 후행 공백 문자가에 형식 문자열 중 하나에서 허용 하는 것 이외의 `formats`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2223">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.</span></span>  
  
 <span data-ttu-id="04f47-2224">경우 `s` 표준 시간대 정보가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체가 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2224">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2225">사용 하 여이 동작을 변경할 수 있습니다는 <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> 플래그를 반환 하는 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, 또는 사용 하 여는 <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> 및 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그를 반환 하는 <xref:System.DateTime> 값 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2225">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2226">필요에 따라 시간이 현지 시간으로 변환 됩니다 s에 표준 시간대 정보를 포함 하는 경우 및 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2226">If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2227">사용 하 여이 동작을 변경할 수 있습니다는 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> 하지 utc (협정 세계시)를 현지 시간으로 변환 하 고 설정 하는 플래그는 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2227">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="04f47-2228">`formats` 패턴, 배열을 포함 하는 매개 변수 중 하나는 `s` 구문 분석 작업이 성공 하는 경우에 정확히 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2228">The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed.</span></span> <span data-ttu-id="04f47-2229">패턴은 `formats` 매개 변수가 구성에서 하나 이상의 사용자 지정 형식 지정자는 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md) 테이블 또는 미리 정의 된 패턴을 식별 하는 단일 표준 형식 지정자는 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2229">The patterns in the `formats` parameter consist of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="04f47-2230">에 대 한 고정 문화권을 사용 하는 사용자 지정 형식 패턴이에 날짜나 시간 구분 기호를 사용 하지 않는 경우는 `provider` 매개 변수 및 가장 넓은 형식으로 각 사용자 지정 형식 지정자입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2230">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="04f47-2231">예를 들어 패턴에 시간을 지정 하려는 경우 짧은 "H" 형식 대신 긴 형식 "HH"를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2231">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="04f47-2232">특정 날짜 및 시간 기호 및에서 사용 되는 (예: 특정 언어의 요일 이름) 문자열 `s` 가 정의한는 `provider` 매개 변수를의 정확한 형식을 있는 그대로 `s` 경우 `format` 는 표준 형식 지정자 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2232">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="04f47-2233">`provider` 매개 변수는 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2233">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="04f47-2234">A <xref:System.Globalization.CultureInfo> 해석 하는 데 사용 하는 문화권을 나타내는 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2234">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="04f47-2235"><xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체의 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> 속성 정의 기호와 형식을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2235">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="04f47-2236">A <xref:System.Globalization.DateTimeFormatInfo> 날짜 및 시간 데이터 형식을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2236">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="04f47-2237">사용자 지정 <xref:System.IFormatProvider> 구현 된 <xref:System.IFormatProvider.GetFormat%2A> 메서드 중 하나를 반환 합니다.는 <xref:System.Globalization.CultureInfo> 개체 또는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2237">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="04f47-2238">경우 `provider` 은 `null`, <xref:System.Globalization.CultureInfo> 현재 문화권에 해당 하는 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2238">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="04f47-2239">`styles` 의 하나 이상의 멤버를 포함 하는 매개 변수는 <xref:System.Globalization.DateTimeStyles> 공백에 정의 되지 않은 여부와 위치를 결정 하는 열거형 `format` 에 나타날 수 `s` 구문 분석 작업의 정확한 동작을 제어 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2239">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="04f47-2240">다음 표에 각 방법의 멤버는 <xref:System.Globalization.DateTimeStyles> 열거형의 작동에 영향을 줍니다는 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2240">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.</span></span>  
  
|<span data-ttu-id="04f47-2241">DateTimeStyles 멤버</span><span class="sxs-lookup"><span data-stu-id="04f47-2241">DateTimeStyles member</span></span>|<span data-ttu-id="04f47-2242">설명</span><span class="sxs-lookup"><span data-stu-id="04f47-2242">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="04f47-2243">구문 분석 `s` 및 필요한 경우 UTC로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2243">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="04f47-2244">경우 `s` 표준 시간대 오프셋을 포함 또는 `s` 표준 시간대 정보가 없습니다 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> 플래그를 메서드 호출에서 문자열의 구문을 분석 <xref:System.DateTime.ToUniversalTime%2A> 반환 된 변환할 <xref:System.DateTime> 값을 UTC 를 설정 하 고는 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2244">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2245">경우 `s` UTC를 나타낸다는 것을 의미 경우 `s` 표준 시간대 정보가 들어 있지 않은 하지만 `styles` 포함는 <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> 플래그를 메서드가 문자열을 구문 분석을 수행 하 표준 시간대 변환 작업 없이 반환 된 <xref:System.DateTime> 값 및 집합은 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2245">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2246">다른 모든 경우에는 플래그는 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2246">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="04f47-2247">에 정의 되지 않은 공백은 지정 `format` 개별 날짜나 시간 요소 사이 나타날 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2247">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="04f47-2248">에 정의 되지 않은 공백은 지정 `format` 의 시작 부분에 나타날 수 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2248">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="04f47-2249">에 정의 되지 않은 공백은 지정 `format` 의 끝에 표시 될 수 있습니다 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2249">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="04f47-2250">지정 하는 `s` 선행, 내부 및 후행 공백이에 정의 되지 않은 포함할 수 있습니다 `format`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2250">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="04f47-2251">지정 되는 경우 `s` 표준 시간대 정보가 없으면 현지 시간을 나타내는 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2251">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="04f47-2252">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값으로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2252">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="04f47-2253">지정 되는 경우 `s` 표준 시간대 정보가 없으면 UTC를 나타내는 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2253">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="04f47-2254">하지 않는 한는 <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> 플래그가 없으면,이 메서드는 반환 된 <xref:System.DateTime> 현지 시간 집합으로 측정 된 UTC에서 값의 <xref:System.DateTime.Kind%2A> 속성을 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2254">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="04f47-2255">경우 `s` 시간 포함 날짜 정보 없이 반환 값의 날짜로 설정 되어 `DateTime.MinValue.Date`합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2255">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="04f47-2256">`s` 매개 변수는 기본값을 사용 하 여 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2256">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="04f47-2257">에 없는 이외의 공백이 없습니다 `format` ï ´ ù.</span><span class="sxs-lookup"><span data-stu-id="04f47-2257">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="04f47-2258">경우 `s` 날짜 구성 요소를 반환 된 날짜에 <xref:System.DateTime> 값 1/1/0001로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2258">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="04f47-2259">경우 `s` 표준 시간대 정보가 없으면는 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2259">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2260">표준 시간대 정보에 있는 경우 `s`, 시간이 현지 시간으로 변환 됩니다 및 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 개체로 설정 되어 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2260">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="04f47-2261">표준 시간대 정보가 포함 된 문자열에 대해로 변환 하지 않으려면 시도 <xref:System.DateTime> 값과 해당 <xref:System.DateTime.Kind%2A> 속성이로 설정 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2261">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2262">이 플래그는 주로 현지 시간 UTC 시간으로 변환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2262">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="04f47-2263">다음 예제에서는 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드를 여러 가지 가능한 형식에서에서 문자열로 성공적으로 구문 분석할 수 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2263">The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method to ensure that a string in a number of possible formats can be successfully parsed .</span></span>  
  
 [!code-csharp[System.Datetime.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact2.cs#2)]
 [!code-vb[System.Datetime.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04f47-2264"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span><span class="sxs-lookup"><span data-stu-id="04f47-2264"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
 <span data-ttu-id="04f47-2265">-or-</span><span class="sxs-lookup"><span data-stu-id="04f47-2265">-or-</span></span>  
  
 <span data-ttu-id="04f47-2266"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span><span class="sxs-lookup"><span data-stu-id="04f47-2266"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="04f47-2267">에 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTime.TryParseExact" /> 메서드 반환 <see langword="false" /> 문자열을 구문 분석할 수 경우 시간 구성 요소 및 계약에 없는 AM/PM 지정자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2267">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.TryParseExact" /> method returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="04f47-2268">에 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 이전 버전에서는 AM/PM 지정자는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2268">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para>
        </block>
        <altmember cref="Overload:System.DateTime.ParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="UnixEpoch">
      <MemberSignature Language="C#" Value="public static readonly DateTime UnixEpoch;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime UnixEpoch" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.UnixEpoch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnixEpoch As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime UnixEpoch;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcNow">
      <MemberSignature Language="C#" Value="public static DateTime UtcNow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime UtcNow" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.UtcNow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UtcNow As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime UtcNow { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-2269">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</span><span class="sxs-lookup"><span data-stu-id="04f47-2269">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="04f47-2270">현재 UTC 날짜와 시간이 값인 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2270">An object whose value is the current UTC date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-2271">기본 운영 체제에 따라 달라 지는 시스템 타이머를 바탕으로이 속성을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2271">The resolution of this property depends on the system timer, which depends on the underlying operating system.</span></span> <span data-ttu-id="04f47-2272">것으로 확인 0.5 15 밀리초 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2272">It tends to be between 0.5 and 15 milliseconds.</span></span>

 <span data-ttu-id="04f47-2273">반환 값은.NET Framework 버전 2.0 부터는 <xref:System.DateTime> 인 <xref:System.DateTime.Kind%2A> 속성에서 반환 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2273">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="04f47-2274">사용 하는 대신 <xref:System.DateTime.UtcNow%2A> 은 <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2274">An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f47-2275">이전 이면 날짜 및 시간 값을 할당 하 여 utc (협정 세계시)는 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> 를 해당 <xref:System.DateTime.Kind%2A> 속성 후자 할당 날짜 및 시간 값은 UTC 시간의 오프셋 (같음 <xref:System.TimeSpan.Zero?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="04f47-2275">While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=nameWithType>).</span></span>
  
## Examples  
 <span data-ttu-id="04f47-2276">다음 예제에서는 <xref:System.DateTime.SpecifyKind%2A> 메서드를 보여 주는 방법을 <xref:System.DateTime.Kind%2A> 속성 영향을 줍니다는 <xref:System.DateTime.ToLocalTime%2A> 및 <xref:System.DateTime.ToUniversalTime%2A> 변환 메서드.</span><span class="sxs-lookup"><span data-stu-id="04f47-2276">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcNow" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public int Year { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Year" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Year" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Year As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Year { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f47-2277">Gets the year component of the date represented by this instance.</span><span class="sxs-lookup"><span data-stu-id="04f47-2277">Gets the year component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="04f47-2278">1에서 9999 사이의 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2278">The year, between 1 and 9999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f47-2279"><xref:System.DateTime.Year%2A> 속성 일반 달력에서 현재 인스턴스의 연도 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2279">The <xref:System.DateTime.Year%2A> property returns the year of the current instance in the Gregorian calendar.</span></span> <span data-ttu-id="04f47-2280">현재 문화권의 기본 달력을 사용 하 여 연도 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2280">It does not return the year using the default calendar of the current culture.</span></span> <span data-ttu-id="04f47-2281">특정 달력을 사용 하 여 연도 검색 하려면 해당 일정을 호출할 수 있습니다 `GetYear` 메서드에 다음 코드 에서처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2281">To retrieve the year using a particular calendar, you can call that calendar's `GetYear` method, as the following code shows.</span></span>  
  
 [!code-csharp[System.DateTime.Year#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)]
 [!code-vb[System.DateTime.Year#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="04f47-2282">다음 예제는 <xref:System.DateTime.Year%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="04f47-2282">The following example demonstrates the <xref:System.DateTime.Year%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
  </Members>
</Type>