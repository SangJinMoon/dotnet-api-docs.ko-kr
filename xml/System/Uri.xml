<Type Name="Uri" FullName="System.Uri">
  <TypeSignature Language="C#" Value="public class Uri : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Uri extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Uri" />
  <TypeSignature Language="VB.NET" Value="Public Class Uri&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Uri : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Uri = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c1747-101">URI(Uniform Resource Indentifier)의 개체 표현을 제공하며 URI 부분에 쉽게 액세스할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-101">Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-102">URI에는 인트라넷 또는 인터넷에서 응용 프로그램에 사용할 수 있는 리소스의 compact 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-102">A URI is a compact representation of a resource available to your application on the intranet or Internet.</span></span> <span data-ttu-id="c1747-103"><xref:System.Uri> 속성 및 메서드 구문 분석, 비교 및 결합을 포함 하는 Uri를 처리 하기 위한 클래스를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-103">The <xref:System.Uri> class defines the properties and methods for handling URIs, including parsing, comparing, and combining.</span></span> <span data-ttu-id="c1747-104">합니다 <xref:System.Uri> 클래스 속성 읽기 전용 이며 수정할 수 있는 개체를 만들려면 사용 합니다 <xref:System.UriBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-104">The <xref:System.Uri> class properties are read-only; to create a modifiable object, use the <xref:System.UriBuilder> class.</span></span>  
  
 <span data-ttu-id="c1747-105">상대 Uri (예를 들어, "/ new/index.htm") 절대 수 있도록 기본 URI와 관련 하 여 확장 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-105">Relative URIs (for example, "/new/index.htm") must be expanded with respect to a base URI so that they are absolute.</span></span> <span data-ttu-id="c1747-106"><xref:System.Uri.MakeRelative%2A> 필요한 경우 상대 Uri를 절대 Uri를 변환할 메서드가 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-106">The <xref:System.Uri.MakeRelative%2A> method is provided to convert absolute URIs to relative URIs when necessary.</span></span>  
  
 <span data-ttu-id="c1747-107"><xref:System.Uri> 생성자 문자열은 올바른 형식의 URI 구성표 식별자를 포함 하는 경우 URI 문자열을 이스케이프 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-107">The <xref:System.Uri> constructors do not escape URI strings if the string is a well-formed URI including a scheme identifier.</span></span>  
  
 <span data-ttu-id="c1747-108"><xref:System.Uri> 속성의 해당 16 진수 대체 127 보다 큰 유니코드 값을 사용 하 여 모든 문자를 사용 하 여 이스케이프 된 인코딩으로 정규 데이터 표현 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-108">The <xref:System.Uri> properties return a canonical data representation in escaped encoding, with all characters with Unicode values greater than 127 replaced with their hexadecimal equivalents.</span></span> <span data-ttu-id="c1747-109">정규 형식에서 URI를 삽입할는 <xref:System.Uri> 생성자에는 다음 단계를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-109">To put the URI in canonical form, the <xref:System.Uri> constructor performs the following steps:</span></span>  
  
-   <span data-ttu-id="c1747-110">URI 체계를 소문자로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-110">Converts the URI scheme to lowercase.</span></span>  
  
-   <span data-ttu-id="c1747-111">호스트 이름을 소문자로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-111">Converts the host name to lowercase.</span></span>  
  
-   <span data-ttu-id="c1747-112">호스트 이름이 IPv6 주소 이면에 정식 IPv6 주소가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-112">If the host name is an IPv6 address, the canonical IPv6 address is used.</span></span> <span data-ttu-id="c1747-113">ScopeId 및 기타 선택적인 IPv6 데이터가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-113">ScopeId and other optional IPv6 data are removed.</span></span>  
  
-   <span data-ttu-id="c1747-114">기본 및 빈 포트 번호를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-114">Removes default and empty port numbers.</span></span>

-   <span data-ttu-id="c1747-115">예약 된 용도가 없는 이스케이프 된 문자 (라고도: 백분율로 인코딩된 옥텟을) 디코딩 (라고도 이스케이프 해제 된).</span><span class="sxs-lookup"><span data-stu-id="c1747-115">Escaped characters (also known as percent-encoded octets) that don't have a reserved purpose are decoded (also known as being unescaped).</span></span> <span data-ttu-id="c1747-116">예약 되지 않은 이러한 문자는 대문자 및 소문자 (%41 %5A 및 %61 %7A), 소수 자릿수 (%30-%39), 하이픈 (%2D), 마침표 (%2E) (%5F), 밑줄 및 물결표 (%7E).</span><span class="sxs-lookup"><span data-stu-id="c1747-116">These unreserved characters include uppercase and lowercase letters (%41-%5A and %61-%7A), decimal digits (%30-%39), hyphen (%2D), period (%2E), underscore (%5F), and tilde (%7E).</span></span>

-   <span data-ttu-id="c1747-117">이스케이프 된 계층적 Uri에 대 한 압축 순서에서 같은 /. / /... 및 / / (시퀀스 이스케이프 여부).</span><span class="sxs-lookup"><span data-stu-id="c1747-117">Canonicalizes the path for hierarchical URIs by compacting sequences such as /./, /../, and // (whether or not the sequence is escaped).</span></span> <span data-ttu-id="c1747-118">이러한 시퀀스 압축 되지 않습니다 일부 구성표는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-118">Note that there are some schemes for which these sequences are not compacted.</span></span>
  
-   <span data-ttu-id="c1747-119">계층적 Uri에 대 한 호스트 슬래시 (/)로 종료 되지 않으면 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-119">For hierarchical URIs, if the host is not terminated with a forward slash (/), one is added.</span></span>  
  
-   <span data-ttu-id="c1747-120">기본적으로 RFC 2396에 따라 URI에서 예약 된 문자가 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-120">By default, any reserved characters in the URI are escaped in accordance with RFC 2396.</span></span> <span data-ttu-id="c1747-121">URI의 경우 예약된 문자는 다국어 리소스 식별자 또는 국제 도메인 이름 구문 분석을 활성화 한 경우이 동작 변경 내용 RFC 3986 및 RFC 3987에 따라 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-121">This behavior changes if International Resource Identifiers or International Domain Name parsing is enabled in which case reserved characters in the URI are escaped in accordance with RFC 3986 and RFC 3987.</span></span>

 <span data-ttu-id="c1747-122">일부 구성표, 점 세그먼트 및 빈 세그먼트에 대 한 생성자에는 정규화의 일부로 (/. / /... 및 / /)이 압축 됩니다 (즉, 제거 됨).</span><span class="sxs-lookup"><span data-stu-id="c1747-122">As part of canonicalization in the constructor for some schemes, dot-segments and empty segments (/./, /../, and //) are compacted (in other words, they are removed).</span></span> <span data-ttu-id="c1747-123">URI는 이러한 시퀀스는 압축 체계는 http, https, tcp, net.pipe 및 net.tcp 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-123">The schemes for which URI will compact these sequences include http, https, tcp, net.pipe, and net.tcp.</span></span> <span data-ttu-id="c1747-124">이러한 시퀀스는 일부 다른 스키마에 대 한 압축 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-124">For some other schemes, these sequences are not compacted.</span></span> <span data-ttu-id="c1747-125">이 압축 되는 모양을 실제로 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-125">Here's how this compacting looks in practice.</span></span>
  
```  
var uri = new Uri("http://myUrl/../.."); // http scheme, unescaped
OR
var uri = new Uri("http://myUrl/%2E%2E/%2E%2E"); // http scheme, escaped
OR
var uri = new Uri("ftp://myUrl/../.."); // ftp scheme, unescaped
OR
var uri = new Uri("ftp://myUrl/%2E%2E/%2E%2E"); // ftp scheme, escaped

Console.WriteLine(uri.AbsoluteUri);  
Console.WriteLine(uri.PathAndQuery);  
```  
  
 <span data-ttu-id="c1747-126">이 코드를 실행 하는 경우 필요한 경우 이스케이프 해제 하 고 압축 한 다음 이스케이프 시퀀스를 사용 하 여 다음 출력을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-126">When this code is executed, it returns the following output, with the escaped sequences unescaped if necessary and then compacted.</span></span>

```  
http://myUrl/  
/  
```  
  
 <span data-ttu-id="c1747-127">콘텐츠를 변환할 수 있습니다 합니다 <xref:System.Uri> 클래스를 사용 하 여 읽을 수 있는 URI 참조에 대 한 이스케이프 인코딩된 URI 참조를 <xref:System.Uri.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c1747-127">You can transform the contents of the <xref:System.Uri> class from an escape encoded URI reference to a readable URI reference by using the <xref:System.Uri.ToString%2A> method.</span></span> <span data-ttu-id="c1747-128">일부 예약 된 문자 수 여전히의 출력에서 이스케이프 된 <xref:System.Uri.ToString%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c1747-128">Note that some reserved characters might still be escaped in the output of the <xref:System.Uri.ToString%2A> method.</span></span> <span data-ttu-id="c1747-129">반환한 값에서 URI의 명확한 재구성을 지원 하기 위해 이것이 <xref:System.Uri.ToString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-129">This is to support unambiguous reconstruction of a URI from the value returned by <xref:System.Uri.ToString%2A>.</span></span>  
  
 <span data-ttu-id="c1747-130">일부 Uri 조각 식별자 또는 쿼리를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-130">Some URIs include a fragment identifier or a query or both.</span></span> <span data-ttu-id="c1747-131">단편 식별자는 숫자 기호 뒤에 오는 모든 텍스트 (#), 숫자 기호;를 포함 하지 않음 조각 텍스트에 저장 되는 <xref:System.Uri.Fragment%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-131">A fragment identifier is any text that follows a number sign (#), not including the number sign; the fragment text is stored in the <xref:System.Uri.Fragment%2A> property.</span></span> <span data-ttu-id="c1747-132">쿼리 정보는 URI에서 물음표 (?) 뒤에 오는 텍스트는 쿼리 텍스트에 저장 되는 <xref:System.Uri.Query%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-132">Query information is any text that follows a question mark (?) in the URI; the query text is stored in the <xref:System.Uri.Query%2A> property.</span></span>  
  
 <span data-ttu-id="c1747-133">.NET framework 버전 1.1에서는 생성자에 지정 된 문자열을 알 수 없는 스키마를 포함 하는 경우 및 "c:\\"를 Uri 클래스 삽입 "/ /" 콜론입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-133">In the .NET Framework version 1.1, if the string specified to a constructor contains an unknown scheme and "c:\\", the Uri class inserts "//" after the colon.</span></span> <span data-ttu-id="c1747-134">예를 들어, URI `xyz:c:\abc` 변환할 `xyz://c:/abc`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-134">For example, the URI `xyz:c:\abc` is converted to `xyz://c:/abc`.</span></span> <span data-ttu-id="c1747-135">.NET framework 버전 2.0에서이 동작이 제거 되었습니다, 그리고 및 문자열의 예는 변환할 `xyz:c:/abc`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-135">In the .NET Framework version 2.0, this behavior has been removed, and the example string is converted to `xyz:c:/abc`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1747-136">URI 클래스 IPv4 프로토콜에 대 한 두 자리 표기법 및 콜론 16 진수 IPv6 프로토콜에 대 한 IP 주소 사용을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-136">The URI class supports the use of IP addresses in both quad-notation for IPv4 protocol and colon-hexadecimal for IPv6 protocol.</span></span> <span data-ttu-id="c1747-137">해야 http://[::1와 같이 대괄호 안에 있는 IPv6 주소를 묶습니다] 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-137">Remember to enclose the IPv6 address in square brackets, as in http://[::1].</span></span>  
  
## <a name="international-resource-identifier-support"></a><span data-ttu-id="c1747-138">국가별 리소스 식별자 지원</span><span class="sxs-lookup"><span data-stu-id="c1747-138">International Resource Identifier Support</span></span>  
 <span data-ttu-id="c1747-139">웹 주소는 대개 매우 제한적인된 문자 집합을 구성 하는 uniform resource identifier를 사용 하 여 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-139">Web addresses are typically expressed using uniform resource identifiers that consist of a very restricted set of characters:</span></span>  
  
-   <span data-ttu-id="c1747-140">영문자의 대문자 및 소문자 ASCII 문자.</span><span class="sxs-lookup"><span data-stu-id="c1747-140">Upper and lower case ASCII letters from the English alphabet.</span></span>  
  
-   <span data-ttu-id="c1747-141">0~9의 숫자.</span><span class="sxs-lookup"><span data-stu-id="c1747-141">Digits from 0 to 9.</span></span>  
  
-   <span data-ttu-id="c1747-142">일부 기타 ASCII 기호.</span><span class="sxs-lookup"><span data-stu-id="c1747-142">A small number of other ASCII symbols.</span></span>  
  
 <span data-ttu-id="c1747-143">Uri에 대 한 사양은 RFC 2396, RFC 2732, RFC 3986 및 RFC 3987을 게시 하 여는 Task Force IETF (Internet Engineering)에 나와 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-143">The specifications for URIs are documented in RFC 2396, RFC 2732, RFC 3986, and RFC 3987 published by the Internet Engineering Task Force (IETF).</span></span>  
  
 <span data-ttu-id="c1747-144">인터넷이 성장하면서 영어 이외의 언어로 리소스를 식별해야 할 필요성이 증가하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-144">With the growth of the Internet, there is a growing need to identify resources using languages other than English.</span></span> <span data-ttu-id="c1747-145">이 필요성을 가능하게 하고 ASCII 이외 문자(유니코드/ISO 10646 문자 집합의 문자)를 허용하는 식별자를 IRI(International Resource Identifier)라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-145">Identifiers which facilitate this need and allow non-ASCII characters (characters in the Unicode/ISO 10646 character set) are known as International Resource Identifiers (IRIs).</span></span> <span data-ttu-id="c1747-146">IRI 사양은 IETF에서 게시한 RFC 3987에 설명되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-146">The specifications for IRIs are documented in RFC 3987 published by IETF.</span></span> <span data-ttu-id="c1747-147">IRI를 사용하면 URL에 유니코드 문자를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-147">Using IRIs allows a URL to contain Unicode characters.</span></span>  
  
 <span data-ttu-id="c1747-148">기존 <xref:System.Uri> RFC 3987을 기반으로 IRI 지원을 제공할 수 있는 2.0 SP1 및.NET Framework v3.5, 3.0 SP1에서에서이 클래스는 확장 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-148">The existing <xref:System.Uri> class has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide IRI support based on RFC 3987.</span></span> <span data-ttu-id="c1747-149">버전 4.5 이전.NET Framework 버전의 사용자는 특히 IRI 사용 하지 않는 한.NET Framework 2.0 동작에서 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-149">Users of .NET Framework versions before version 4.5 will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</span></span> <span data-ttu-id="c1747-150">이 덕분에 .NET Framework 이전 버전과의 응용 프로그램 호환성이 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-150">This ensures application compatibility with prior versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="c1747-151">Iri 지원을 사용 하려면 다음과 같이 변경 하면이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-151">To enable support for IRI, the following change is required:</span></span>  
  
-   <span data-ttu-id="c1747-152">다국어 도메인 이름 (IDN) 구문 분석 된 도메인 이름에 적용할 것인지와 IRI 구문 분석 규칙을 적용 해야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-152">Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied.</span></span> <span data-ttu-id="c1747-153">이 작업을 수행할 수 있습니다 합니다 *machine.config* 또는 합니다 *app.config* 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-153">This can be done in the *machine.config* or in the *app.config* file.</span></span> <span data-ttu-id="c1747-154">예를 들어, 다음 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-154">For example, add the following:</span></span>  
  
    ```xml  
    <configuration>  
      <uri>  
      <idn enabled="All" />  
      <iriParsing enabled="true" />  
      </uri>  
    </configuration>  
    ```  
  
 <span data-ttu-id="c1747-155">사용자가.NET Framework 4.5 이상에 항상 IRI를 사용 하도록 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-155">Users of .NET Framework 4.5 and newer always have IRI enabled.</span></span> <span data-ttu-id="c1747-156">IRI 구문 분석 변경할 수 없습니다를 사용 하는 *.config* 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-156">IRI parsing cannot be changed using a *.config* file.</span></span>  
  
 <span data-ttu-id="c1747-157">IDN을 사용하면 도메인 이름의 모든 유니코드 레이블이 해당 Punycode 문자로 변환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-157">Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents.</span></span> <span data-ttu-id="c1747-158">Punycode 이름에는 ASCII 문자만 사용되며 항상 xn-- 접두사로 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-158">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span> <span data-ttu-id="c1747-159">대부분의 DNS 서버는 ASCII 문자만 지원하므로(RFC 3940 참조) 이렇게 해야 인터넷에서 기존 DNS 서버를 지원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-159">The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).</span></span>  
  
 <span data-ttu-id="c1747-160">IRI 및 IDN을 사용하도록 설정하면 <xref:System.Uri.DnsSafeHost%2A?displayProperty=nameWithType> 속성 값에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-160">Enabling IRI and IDN affects the value of the <xref:System.Uri.DnsSafeHost%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c1747-161">IRI 및 IDN을 사용하면 <xref:System.Uri.Equals%2A>, <xref:System.Uri.OriginalString%2A>, <xref:System.Uri.GetComponents%2A> 및 <xref:System.Uri.IsWellFormedOriginalString%2A> 메서드의 동작을 변경할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-161">Enabling IRI and IDN can also change the behavior of the <xref:System.Uri.Equals%2A>, <xref:System.Uri.OriginalString%2A>, <xref:System.Uri.GetComponents%2A>, and <xref:System.Uri.IsWellFormedOriginalString%2A> methods.</span></span>  
  
 <span data-ttu-id="c1747-162">세 가지 idn 관련 값을 사용 하는 DNS 서버에 따라 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-162">There are three possible values for IDN depending on the DNS servers that are used:</span></span>  
  
-   <span data-ttu-id="c1747-163">idn 사용 = All</span><span class="sxs-lookup"><span data-stu-id="c1747-163">idn enabled = All</span></span>  
  
     <span data-ttu-id="c1747-164">이 값은 모든 유니코드 도메인 이름을 해당하는 Punycode 항목(IDN 이름)으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-164">This value will convert any Unicode domain names to their Punycode equivalents (IDN names).</span></span>  
  
-   <span data-ttu-id="c1747-165">사용 하도록 설정 하는 idn AllExceptIntranet =</span><span class="sxs-lookup"><span data-stu-id="c1747-165">idn enabled = AllExceptIntranet</span></span>  
  
     <span data-ttu-id="c1747-166">이 값은 Punycode 항목 (IDN 이름)을 사용 하려면 로컬 인트라넷에 없는 모든 유니코드 도메인 이름을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-166">This value will convert all Unicode domain names not on the local Intranet to use the Punycode equivalents (IDN names).</span></span> <span data-ttu-id="c1747-167">이 경우를 처리 하기 위해 로컬 인트라넷에 있는 국가별 이름을 인트라넷에 사용 되는 DNS 서버가 유니코드 이름 확인을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-167">In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode name resolution.</span></span>  
  
-   <span data-ttu-id="c1747-168">idn 사용 = 없음</span><span class="sxs-lookup"><span data-stu-id="c1747-168">idn enabled = None</span></span>  
  
     <span data-ttu-id="c1747-169">이 값은 Punycode를 사용하도록 어떠한 유니코드 도메인 이름도 변환하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-169">This value will not convert any Unicode domain names to use Punycode.</span></span> <span data-ttu-id="c1747-170">.NET Framework 2.0 동작을 사용 하 여 일치 하는 기본 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-170">This is the default value which is consistent with the .NET Framework 2.0 behaviour.</span></span>  
  
 <span data-ttu-id="c1747-171">IRI 구문 분석을 사용 하는 경우 (iriParsing 사용 = `true`) 정규화 및 문자 검사는 RFC 3986 및 RFC 3987의 최신 IRI 규칙에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-171">When IRI parsing is enabled (iriParsing enabled = `true`) normalization and character checking are done according to the latest IRI rules in RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="c1747-172">IRI 구문 분석 사용 안 함, 정규화 및 문자 검사 (IPv6 리터럴)에 대 한 RFC 2396 및 RFC 2732에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-172">When IRI parsing is disabled, normalization and character checking are performed according to RFC 2396 and RFC 2732 (for IPv6 literals).</span></span>  <span data-ttu-id="c1747-173">기본값은.NET framework 버전 4.5 이전 버전에서는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-173">In versions of the .NET Framework before version 4.5, the default value is `false`.</span></span> <span data-ttu-id="c1747-174">.NET framework 4.5 이상 버전에서 기본값은 `true`, 설정에 따라 IRI 구문 분석의 활성화 상태를 수정할 수 없습니다는 *.config* 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-174">In .NET Framework version 4.5 and newer, the default value is `true`, and the enabled state of IRI parsing cannot be modified by settings in a *.config* file.</span></span>  
  
 <span data-ttu-id="c1747-175">IRI 및 IDN 처리는 <xref:System.Uri> 를 사용 하 여 클래스 제어할 수도 있습니다는 <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType>를 <xref:System.Configuration.IdnElement?displayProperty=nameWithType>, 및 <xref:System.Configuration.UriSection?displayProperty=nameWithType> 구성 설정 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-175">IRI and IDN processing in the <xref:System.Uri> class can also be controlled using the <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType>, <xref:System.Configuration.IdnElement?displayProperty=nameWithType>, and <xref:System.Configuration.UriSection?displayProperty=nameWithType> configuration setting classes.</span></span> <span data-ttu-id="c1747-176"><xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> 설정은 <xref:System.Uri> 클래스에서 IRI 처리를 사용하거나 사용하지 않도록 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-176">The <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> setting enables or disables IRI processing in the <xref:System.Uri> class.</span></span> <span data-ttu-id="c1747-177"><xref:System.Configuration.IdnElement?displayProperty=nameWithType> 설정은 <xref:System.Uri> 클래스에서 IDN 처리를 사용하거나 사용하지 않도록 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-177">The <xref:System.Configuration.IdnElement?displayProperty=nameWithType> setting enables or disables IDN processing in the <xref:System.Uri> class.</span></span> <span data-ttu-id="c1747-178"><xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> 설정도 IDN을 간접적으로 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-178">The <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> setting also indirectly controls IDN.</span></span> <span data-ttu-id="c1747-179">IDN 처리가 가능하려면 IRI 처리를 사용하도록 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-179">IRI processing must be enabled for IDN processing to be possible.</span></span> <span data-ttu-id="c1747-180">IRI 처리가 사용하지 않도록 설정되면 IDN 처리는 .NET Framework 2.0 동작이 호환성에 사용되고 IDN 이름이 사용되지 않는 기본 설정으로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-180">If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.</span></span>  
  
 <span data-ttu-id="c1747-181">에 대 한 구성 설정을 합니다 <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> 및 <xref:System.Configuration.IdnElement?displayProperty=nameWithType> 는 한 번 읽을 때 첫 번째 <xref:System.Uri?displayProperty=nameWithType> 클래스 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-181">The configuration setting for the <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> and <xref:System.Configuration.IdnElement?displayProperty=nameWithType> will be read once when the first <xref:System.Uri?displayProperty=nameWithType> class is constructed.</span></span> <span data-ttu-id="c1747-182">해당 시점 후의 구성 설정 변경 내용은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-182">Changes to configuration settings after that time are ignored.</span></span>  
  
 <span data-ttu-id="c1747-183">또한 <xref:System.GenericUriParser?displayProperty=nameWithType> 클래스는 IRI 및 IDN을 지원하는 사용자 지정 가능한 파서를 만들 수 있도록 확장되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-183">The <xref:System.GenericUriParser?displayProperty=nameWithType> class has also been extended to allow creating a customizable parser that supports IRI and IDN.</span></span> <span data-ttu-id="c1747-184"><xref:System.GenericUriParser?displayProperty=nameWithType> 개체의 동작은 <xref:System.GenericUriParserOptions?displayProperty=nameWithType> 열거형에서 사용 가능한 값의 비트 조합을 <xref:System.GenericUriParser?displayProperty=nameWithType> 생성자에 전달하여 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-184">The behavior of a <xref:System.GenericUriParser?displayProperty=nameWithType> object is specified by passing a bitwise combination of the values available in the <xref:System.GenericUriParserOptions?displayProperty=nameWithType> enumeration to the <xref:System.GenericUriParser?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="c1747-185"><xref:System.GenericUriParserOptions.IriParsing?displayProperty=nameWithType> 형식은 파서가 RFC 3987에 지정된 IRI(International Resource Identifier)에 대한 구문 분석 규칙을 지원함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-185">The <xref:System.GenericUriParserOptions.IriParsing?displayProperty=nameWithType> type indicates the parser supports the parsing rules specified in RFC 3987 for International Resource Identifiers (IRI).</span></span> <span data-ttu-id="c1747-186">IRI 사용 여부는 위에 설명 된 구성 값에 따라 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-186">Whether IRI is used is dictated by the configuration values previously discussed.</span></span>  
  
 <span data-ttu-id="c1747-187"><xref:System.GenericUriParserOptions.Idn?displayProperty=nameWithType> 형식은 파서가 호스트 이름의 IDN(Internationalized Domain Name) 구문 분석을 지원함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-187">The <xref:System.GenericUriParserOptions.Idn?displayProperty=nameWithType> type indicates the parser supports Internationalized Domain Name (IDN) parsing (IDN) of host names.</span></span> <span data-ttu-id="c1747-188">IDN 사용 여부는 위에 설명 된 구성 값에 따라 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-188">Whether IDN is used is dictated by the configuration values previously discussed.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="c1747-189">성능 고려 사항</span><span class="sxs-lookup"><span data-stu-id="c1747-189">Performance Considerations</span></span>  
 <span data-ttu-id="c1747-190">\*Web.config을 사용 하는 경우 \* 파일이 응용 프로그램, 추가 시간을 초기화 하는 Uri를 포함 하는 구성표 식별자가 비표준 경우 Uri를 처리 하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-190">If you use a \*Web.config \*file that contains URIs to initialize your application, additional time is required to process the URIs if their scheme identifiers are nonstandard.</span></span> <span data-ttu-id="c1747-191">이러한 경우 시작 때가 아니라 Uri가 필요할 때 응용 프로그램의 영향을 받는 파트를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-191">In such a case, initialize the affected parts of your application when the URIs are needed, not at start time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-192">다음 예제에서는 인스턴스를 만듭니다는 <xref:System.Uri> 클래스를 사용 하 여 만들기는 <xref:System.Net.WebRequest> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c1747-192">The following example creates an instance of the <xref:System.Uri> class and uses it to create a <xref:System.Net.WebRequest> instance.</span></span>  
  
 [!code-cpp[Classic Uri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri Example/CS/source.cs#1)]
 [!code-vb[Classic Uri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="c1747-193">보안 문제 때문에 응용 프로그램 때는 주의 해야 수락 <see cref="T:System.Uri" /> 신뢰할 수 없는 소스에서 사용 하 여 인스턴스 <paramref name="dontEscape" /> 로 <see langword="true" />합니다. 호출 하 여 URI 문자열의 유효성을 확인할 수 있습니다는 <see cref="M:System.Uri.IsWellFormedOriginalString" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c1747-193">Because of security concerns, your application should use caution when accepting <see cref="T:System.Uri" /> instances from untrusted sources and with <paramref name="dontEscape" /> set to <see langword="true" />.You can check a URI string for validity by calling the <see cref="M:System.Uri.IsWellFormedOriginalString" /> method.</span></span></para></block>
    <altmember cref="T:System.Configuration.IdnElement" />
    <altmember cref="T:System.Configuration.IriParsingElement" />
    <altmember cref="T:System.Configuration.UriSection" />
    <altmember cref="P:System.Uri.DnsSafeHost" />
    <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
    <altmember cref="M:System.Uri.IsWellFormedOriginalString" />
    <altmember cref="T:System.UriBuilder" />
    <related type="Article" href="http://msdn.microsoft.com/library/35883fe9-2d09-4d8b-80ca-cf23a941e459"><span data-ttu-id="c1747-194">버전 2.0에서 System.Uri 네임스페이스 변경 내용</span><span class="sxs-lookup"><span data-stu-id="c1747-194">Changes to the System.Uri namespace in Version 2.0</span></span></related>
    <related type="Article" href="http://msdn.microsoft.com/library/b5e994c3-3535-4aff-8e1b-b69be22e9a22"><span data-ttu-id="c1747-195">System.UriSystem.Uri의 국가별 리소스 식별자 지원</span><span class="sxs-lookup"><span data-stu-id="c1747-195">International Resource Identifier Support in System.UriSystem.Uri</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/index.md"><span data-ttu-id="c1747-196">.NET Framework의 네트워크 프로그래밍</span><span class="sxs-lookup"><span data-stu-id="c1747-196">Network Programming in the .NET Framework</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1747-197"><see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-197">Initializes a new instance of the <see cref="T:System.Uri" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="new Uri : string -&gt; Uri" Usage="new System.Uri uriString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="c1747-198"><see cref="T:System.Uri" /> 인스턴스가 나타낼 리소스를 식별하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-198">A string that identifies the resource to be represented by the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="c1747-199">문자열 형식에서 IPv6 주소는 대괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-199">Note that an IPv6 address in string form must be enclosed within brackets.</span></span> <span data-ttu-id="c1747-200">예를 들어 "http://[2607:f8b0:400d:c06::69]"입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-200">For example, "http://[2607:f8b0:400d:c06::69]".</span></span></param>
        <summary><span data-ttu-id="c1747-201">URI가 지정된 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-201">Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-202">이 생성자는 <xref:System.Uri> URI 문자열에서 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c1747-202">This constructor creates a <xref:System.Uri> instance from a URI string.</span></span> <span data-ttu-id="c1747-203">URI 구문 분석, 정규 형식으로 배치 하 고 필요한 이스케이프 인코딩을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-203">It parses the URI, puts it in canonical format, and makes any required escape encodings.</span></span>  
  
 <span data-ttu-id="c1747-204">이 생성자는 보장 하지 않습니다는 <xref:System.Uri> 액세스할 수 있는 리소스를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-204">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
 <span data-ttu-id="c1747-205">이 생성자에 있다고 가정 합니다 `string` 매개 변수는 절대 URI를 참조 하 고 호출 하는 것과 같습니다는 <xref:System.Uri.%23ctor%2A> 생성자 <xref:System.UriKind> 로 <xref:System.UriKind.Absolute>.</span><span class="sxs-lookup"><span data-stu-id="c1747-205">This constructor assumes that the `string` parameter references an absolute URI and is equivalent to calling the <xref:System.Uri.%23ctor%2A> constructor with <xref:System.UriKind> set to <xref:System.UriKind.Absolute>.</span></span> <span data-ttu-id="c1747-206">경우는 `string` 생성자에 전달 된 매개 변수는 상대 URI를이 생성자가 throw를 <xref:System.UriFormatException>입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-206">If the `string` parameter passed to the constructor is a relative URI, this constructor will throw a <xref:System.UriFormatException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-207">다음 예제는 <xref:System.Uri> URI 사용 하 여 인스턴스 "http://www.contoso.com/"입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-207">The following example creates a <xref:System.Uri> instance with the URI "http://www.contoso.com/".</span></span>  
  
 [!code-cpp[Classic Uri.Uri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-208"><paramref name="uriString" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-208"><paramref name="uriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="c1747-209"><see href="http://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-209">In the <see href="http://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para><span data-ttu-id="c1747-210">
          </block>
          <paramref name="uriString" />이 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-210">
          </block>
          <paramref name="uriString" /> is empty.</span></span>  
  
<span data-ttu-id="c1747-211">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-211">-or-</span></span> 
<span data-ttu-id="c1747-212"><paramref name="uriString" />에 지정된 체계가 제대로 구성되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="c1747-212">The scheme specified in <paramref name="uriString" /> is not correctly formed.</span></span> <span data-ttu-id="c1747-213"><see cref="M:System.Uri.CheckSchemeName(System.String)" />을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c1747-213">See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.</span></span>  
  
<span data-ttu-id="c1747-214">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-214">-or-</span></span> 
 <span data-ttu-id="c1747-215"><paramref name="uriString" />에 슬래시가 너무 많은 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-215"><paramref name="uriString" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="c1747-216">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-216">-or-</span></span> 
<span data-ttu-id="c1747-217"><paramref name="uriString" />에 지정된 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-217">The password specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-218">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-218">-or-</span></span> 
<span data-ttu-id="c1747-219"><paramref name="uriString" />에 지정된 호스트 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-219">The host name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-220">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-220">-or-</span></span> 
<span data-ttu-id="c1747-221"><paramref name="uriString" />에 지정된 파일 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-221">The file name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-222">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-222">-or-</span></span> 
<span data-ttu-id="c1747-223"><paramref name="uriString" />에 지정된 사용자 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-223">The user name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-224">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-224">-or-</span></span> 
<span data-ttu-id="c1747-225"><paramref name="uriString" />에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-225">The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="c1747-226">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-226">-or-</span></span> 
<span data-ttu-id="c1747-227"><paramref name="uriString" />에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-227">The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="c1747-228">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-228">-or-</span></span> 
<span data-ttu-id="c1747-229"><paramref name="uriString" />의 길이가 65519자를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-229">The length of <paramref name="uriString" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="c1747-230">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-230">-or-</span></span> 
<span data-ttu-id="c1747-231"><paramref name="uriString" />에 지정된 체계의 길이가 1023자를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-231">The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="c1747-232">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-232">-or-</span></span> 
<span data-ttu-id="c1747-233"><paramref name="uriString" />에 잘못된 문자 시퀀스가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-233">There is an invalid character sequence in <paramref name="uriString" />.</span></span>  
  
<span data-ttu-id="c1747-234">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-234">-or-</span></span> 
<span data-ttu-id="c1747-235"><paramref name="uriString" />에 지정된 MS-DOS 경로는 c:\\\\로 시작해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-235">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Uri (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Uri(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new Uri : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; Uri" Usage="new System.Uri (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="c1747-236">새 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 포함된 <see cref="T:System.Uri" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-236">An instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class containing the information required to serialize the new <see cref="T:System.Uri" /> instance.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="c1747-237">새 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 관련하여 serialize된 스트림의 소스가 포함된 <see cref="T:System.Uri" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-237">An instance of the <see cref="T:System.Runtime.Serialization.StreamingContext" /> class containing the source of the serialized stream associated with the new <see cref="T:System.Uri" /> instance.</span></span></param>
        <summary><span data-ttu-id="c1747-238"><see cref="T:System.Uri" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스의 지정된 인스턴스로부터 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-238">Initializes a new instance of the <see cref="T:System.Uri" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-239">이 생성자를 구현 하는 <xref:System.Runtime.Serialization.ISerializable> 에 대 한 인터페이스를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-239">This constructor implements the <xref:System.Runtime.Serialization.ISerializable> interface for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-240"><paramref name="serializationInfo" /> 매개 변수에는 <see langword="null" /> URI가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-240">The <paramref name="serializationInfo" /> parameter contains a <see langword="null" /> URI.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="c1747-241"><paramref name="serializationInfo" /> 매개 변수에는 빈 URI가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-241">The <paramref name="serializationInfo" /> parameter contains a URI that is empty.</span></span>  
  
<span data-ttu-id="c1747-242">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-242">-or-</span></span> 
<span data-ttu-id="c1747-243">지정된 체계가 올바르게 구성되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-243">The scheme specified is not correctly formed.</span></span> <span data-ttu-id="c1747-244"><see cref="M:System.Uri.CheckSchemeName(System.String)" />을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c1747-244">See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.</span></span>  
  
<span data-ttu-id="c1747-245">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-245">-or-</span></span> 
<span data-ttu-id="c1747-246">URI에 너무 많은 슬래시가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-246">The URI contains too many slashes.</span></span>  
  
<span data-ttu-id="c1747-247">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-247">-or-</span></span> 
<span data-ttu-id="c1747-248">URI에 지정된 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-248">The password specified in the URI is not valid.</span></span>  
  
<span data-ttu-id="c1747-249">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-249">-or-</span></span> 
<span data-ttu-id="c1747-250">URI에 지정된 호스트 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-250">The host name specified in URI is not valid.</span></span>  
  
<span data-ttu-id="c1747-251">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-251">-or-</span></span> 
<span data-ttu-id="c1747-252">URI에 지정된 파일 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-252">The file name specified in the URI is not valid.</span></span>  
  
<span data-ttu-id="c1747-253">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-253">-or-</span></span> 
<span data-ttu-id="c1747-254">URI에 지정된 사용자 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-254">The user name specified in the URI is not valid.</span></span>  
  
<span data-ttu-id="c1747-255">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-255">-or-</span></span> 
<span data-ttu-id="c1747-256">URI에 지정된 호스트 또는 기관 이름을 백슬래시로 종료할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-256">The host or authority name specified in the URI cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="c1747-257">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-257">-or-</span></span> 
<span data-ttu-id="c1747-258">URI에 지정된 포트 번호가 잘못되었거나 해당 번호를 구문 분석할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-258">The port number specified in the URI is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="c1747-259">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-259">-or-</span></span> 
<span data-ttu-id="c1747-260">URI의 길이가 65519자를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-260">The length of URI exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="c1747-261">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-261">-or-</span></span> 
<span data-ttu-id="c1747-262">URI에 지정된 체계 길이가 1023자를 초과한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-262">The length of the scheme specified in the URI exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="c1747-263">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-263">-or-</span></span> 
<span data-ttu-id="c1747-264">URI에 잘못된 문자 시퀀스가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-264">There is an invalid character sequence in the URI.</span></span>  
  
<span data-ttu-id="c1747-265">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-265">-or-</span></span> 
<span data-ttu-id="c1747-266">URI에 지정된 MS-DOS 경로는 c:\\\\로 시작해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-266">The MS-DOS path specified in the URI must start with c:\\\\.</span></span></exception>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="c1747-267">XML 및 SOAP Serialization</span><span class="sxs-lookup"><span data-stu-id="c1747-267">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (string uriString, bool dontEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uriString, bool dontEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uriString As String, dontEscape As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(System::String ^ uriString, bool dontEscape);" />
      <MemberSignature Language="F#" Value="new Uri : string * bool -&gt; Uri" Usage="new System.Uri (uriString, dontEscape)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The constructor has been deprecated. Please use new Uri(string). The dontEscape parameter is deprecated and is always false. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
        <Parameter Name="dontEscape" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="c1747-268"><see cref="T:System.Uri" /> 인스턴스가 나타낼 리소스를 식별하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-268">A string that identifies the resource to be represented by the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="c1747-269">문자열 형식에서 IPv6 주소는 대괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-269">Note that an IPv6 address in string form must be enclosed within brackets.</span></span> <span data-ttu-id="c1747-270">예를 들어 "http://[2607:f8b0:400d:c06::69]"입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-270">For example, "http://[2607:f8b0:400d:c06::69]".</span></span></param>
        <param name="dontEscape"><span data-ttu-id="c1747-271"><c>uriString</c>이 완전히 이스케이프되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-271"><see langword="true" /> if <c>uriString</c> is completely escaped; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1747-272">문자 이스케이프를 명시적으로 제어하여 URI가 지정된 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-272">Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI, with explicit control of character escaping.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-273">이 생성자는 <xref:System.Uri> URI 문자열에서 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c1747-273">This constructor creates a <xref:System.Uri> instance from a URI string.</span></span> <span data-ttu-id="c1747-274">URI 구문 분석 하 고 정식으로 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-274">It parses the URI and puts it in canonical format.</span></span>  
  
 <span data-ttu-id="c1747-275">`dontEscape` 매개 변수 예약 된 문자를 변환할지 여부를에 이스케이프 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-275">The `dontEscape` parameter controls whether reserved characters are translated into escape sequences.</span></span> <span data-ttu-id="c1747-276">이 매개 변수를 설정 해야 `true` URI에 모든 예약 된 문자가 이스케이프 처리 되었습니다 되었음을 확인 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-276">This parameter should be set to `true` only if you are certain that all reserved characters in the URI have been escaped.</span></span> <span data-ttu-id="c1747-277">값을 설정 `true` 에 이스케이프 되지 않은 URI는 예기치 않은 동작이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-277">Setting the value to `true` for a URI that has not been completely escaped can cause unexpected behavior.</span></span> <span data-ttu-id="c1747-278">이 매개 변수를 항상 설정 하는 것이 좋습니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-278">It is strongly recommended that you always set this parameter to `false`.</span></span>  
  
 <span data-ttu-id="c1747-279">하는 경우 `dontEscape` 로 설정 된 `false`, 생성자는 모든 백분율 (%) 뒤에 올바른 이스케이프 시퀀스를 확인 하 여 예약된 된 문자를 이스케이프 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-279">If `dontEscape` is set to `false`, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence.</span></span> <span data-ttu-id="c1747-280">다음의 백분율 문자 시퀀스 올바르지 않으면 백분율 25%로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-280">If the character sequence following a percent is not valid, the percent is replaced by %25.</span></span>  
  
 <span data-ttu-id="c1747-281">이 생성자는 보장 하지 않습니다는 <xref:System.Uri> 액세스할 수 있는 리소스를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-281">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-282">다음 예제는 <xref:System.Uri> URI에 대 한 인스턴스 http://www.contoso.com/Hello%20World.htm합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-282">The following example creates a <xref:System.Uri> instance for the URI http://www.contoso.com/Hello%20World.htm.</span></span> <span data-ttu-id="c1747-283">포함 된 URI가 완전히 이스케이프 정규 형식에서 이므로 합니다 `dontEscape` 매개 변수 설정할 수 있습니다 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-283">Because the contained URI is completely escaped and is in canonical form, the `dontEscape` parameter can be set to `true`.</span></span>  
  
 [!code-cpp[Classic Uri.Uri1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri1 Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-284"><paramref name="uriString" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-284"><paramref name="uriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="c1747-285"><paramref name="uriString" />이 비어 있거나 공백만 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-285"><paramref name="uriString" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="c1747-286">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-286">-or-</span></span> 
<span data-ttu-id="c1747-287"><paramref name="uriString" />에 지정된 체계가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-287">The scheme specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-288">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-288">-or-</span></span> 
 <span data-ttu-id="c1747-289"><paramref name="uriString" />에 슬래시가 너무 많은 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-289"><paramref name="uriString" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="c1747-290">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-290">-or-</span></span> 
<span data-ttu-id="c1747-291"><paramref name="uriString" />에 지정된 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-291">The password specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-292">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-292">-or-</span></span> 
<span data-ttu-id="c1747-293"><paramref name="uriString" />에 지정된 호스트 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-293">The host name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-294">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-294">-or-</span></span> 
<span data-ttu-id="c1747-295"><paramref name="uriString" />에 지정된 파일 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-295">The file name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-296">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-296">-or-</span></span> 
<span data-ttu-id="c1747-297"><paramref name="uriString" />에 지정된 사용자 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-297">The user name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-298">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-298">-or-</span></span> 
<span data-ttu-id="c1747-299"><paramref name="uriString" />에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-299">The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="c1747-300">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-300">-or-</span></span> 
<span data-ttu-id="c1747-301"><paramref name="uriString" />에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-301">The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="c1747-302">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-302">-or-</span></span> 
<span data-ttu-id="c1747-303"><paramref name="uriString" />의 길이가 65519자를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-303">The length of <paramref name="uriString" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="c1747-304">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-304">-or-</span></span> 
<span data-ttu-id="c1747-305"><paramref name="uriString" />에 지정된 체계의 길이가 1023자를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-305">The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="c1747-306">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-306">-or-</span></span> 
<span data-ttu-id="c1747-307"><paramref name="uriString" />에 잘못된 문자 시퀀스가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-307">There is an invalid character sequence in <paramref name="uriString" />.</span></span>  
  
<span data-ttu-id="c1747-308">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-308">-or-</span></span> 
<span data-ttu-id="c1747-309"><paramref name="uriString" />에 지정된 MS-DOS 경로는 c:\\\\로 시작해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-309">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (string uriString, UriKind uriKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uriString, valuetype System.UriKind uriKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.String,System.UriKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(System::String ^ uriString, UriKind uriKind);" />
      <MemberSignature Language="F#" Value="new Uri : string * UriKind -&gt; Uri" Usage="new System.Uri (uriString, uriKind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
        <Parameter Name="uriKind" Type="System.UriKind" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="c1747-310"><see cref="T:System.Uri" /> 인스턴스가 나타낼 리소스를 식별하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-310">A string that identifies the resource to be represented by the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="c1747-311">문자열 형식에서 IPv6 주소는 대괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-311">Note that an IPv6 address in string form must be enclosed within brackets.</span></span> <span data-ttu-id="c1747-312">예를 들어 "http://[2607:f8b0:400d:c06::69]"입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-312">For example, "http://[2607:f8b0:400d:c06::69]".</span></span></param>
        <param name="uriKind"><span data-ttu-id="c1747-313">URI 문자열이 상대 URI 또는 절대 URI인지, 아니면 결정되지 않았는지를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-313">Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.</span></span></param>
        <summary><span data-ttu-id="c1747-314">URI가 지정된 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-314">Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI.</span></span> <span data-ttu-id="c1747-315">이 생성자를 사용하면 URI 문자열이 상대 URI 또는 절대 URI인지, 아니면 결정되지 않았는지를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-315">This constructor allows you to specify if the URI string is a relative URI, absolute URI, or is indeterminate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-316">상대 및 절대 Uri의 형식에 다른 제한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-316">Relative and absolute URIs have different restrictions on their format.</span></span> <span data-ttu-id="c1747-317">예를 들어, 상대 URI 체계를 또는 인증 기관에는 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-317">For example, a relative URI does not require a scheme or an authority.</span></span> <span data-ttu-id="c1747-318">지정 하는 값 `uriKind` 에 전달 된 URI의 형식과 일치 해야 `uriString`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-318">The value you specify in `uriKind` must match the type of URI passed in `uriString`.</span></span> <span data-ttu-id="c1747-319">그러나 경우 <xref:System.UriKind.RelativeOrAbsolute> 를 지정 하면 URI 문자열이 상대 또는 절대 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-319">However, if <xref:System.UriKind.RelativeOrAbsolute> is specified, the URI string can be relative or absolute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c1747-320"><paramref name="uriKind" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-320"><paramref name="uriKind" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-321"><paramref name="uriString" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-321"><paramref name="uriString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="c1747-322"><see href="http://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-322">In the <see href="http://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para><span data-ttu-id="c1747-323">
          </block>
          <paramref name="uriString" />에 상대 URI가 포함되고 <paramref name="uriKind" />가 <see cref="F:System.UriKind.Absolute" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-323">
          </block>
          <paramref name="uriString" /> contains a relative URI and <paramref name="uriKind" /> is <see cref="F:System.UriKind.Absolute" />.</span></span>  
  
<span data-ttu-id="c1747-324">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-324">or</span></span> 
 <span data-ttu-id="c1747-325"><paramref name="uriString" />에 절대 URI가 포함되어 있고 <paramref name="uriKind" />가 <see cref="F:System.UriKind.Relative" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-325"><paramref name="uriString" /> contains an absolute URI and <paramref name="uriKind" /> is <see cref="F:System.UriKind.Relative" />.</span></span>  
  
<span data-ttu-id="c1747-326">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-326">or</span></span> 
 <span data-ttu-id="c1747-327"><paramref name="uriString" />가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-327"><paramref name="uriString" /> is empty.</span></span>  
  
<span data-ttu-id="c1747-328">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-328">-or-</span></span> 
<span data-ttu-id="c1747-329"><paramref name="uriString" />에 지정된 체계가 제대로 구성되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="c1747-329">The scheme specified in <paramref name="uriString" /> is not correctly formed.</span></span> <span data-ttu-id="c1747-330"><see cref="M:System.Uri.CheckSchemeName(System.String)" />을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c1747-330">See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.</span></span>  
  
<span data-ttu-id="c1747-331">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-331">-or-</span></span> 
 <span data-ttu-id="c1747-332"><paramref name="uriString" />에 슬래시가 너무 많은 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-332"><paramref name="uriString" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="c1747-333">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-333">-or-</span></span> 
<span data-ttu-id="c1747-334"><paramref name="uriString" />에 지정된 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-334">The password specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-335">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-335">-or-</span></span> 
<span data-ttu-id="c1747-336"><paramref name="uriString" />에 지정된 호스트 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-336">The host name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-337">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-337">-or-</span></span> 
<span data-ttu-id="c1747-338"><paramref name="uriString" />에 지정된 파일 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-338">The file name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-339">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-339">-or-</span></span> 
<span data-ttu-id="c1747-340"><paramref name="uriString" />에 지정된 사용자 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-340">The user name specified in <paramref name="uriString" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-341">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-341">-or-</span></span> 
<span data-ttu-id="c1747-342"><paramref name="uriString" />에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-342">The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="c1747-343">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-343">-or-</span></span> 
<span data-ttu-id="c1747-344"><paramref name="uriString" />에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-344">The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="c1747-345">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-345">-or-</span></span> 
<span data-ttu-id="c1747-346"><paramref name="uriString" />의 길이가 65519자를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-346">The length of <paramref name="uriString" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="c1747-347">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-347">-or-</span></span> 
<span data-ttu-id="c1747-348"><paramref name="uriString" />에 지정된 체계의 길이가 1023자를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-348">The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="c1747-349">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-349">-or-</span></span> 
<span data-ttu-id="c1747-350"><paramref name="uriString" />에 잘못된 문자 시퀀스가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-350">There is an invalid character sequence in <paramref name="uriString" />.</span></span>  
  
<span data-ttu-id="c1747-351">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-351">-or-</span></span> 
<span data-ttu-id="c1747-352"><paramref name="uriString" />에 지정된 MS-DOS 경로는 c:\\\\로 시작해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-352">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, relativeUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="new Uri : Uri * string -&gt; Uri" Usage="new System.Uri (baseUri, relativeUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="c1747-353">기본 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-353">The base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="c1747-354">기본 URI에 추가할 상대 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-354">The relative URI to add to the base URI.</span></span></param>
        <summary><span data-ttu-id="c1747-355">지정된 기본 URI와 상대 URI 문자열을 기반으로 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-355">Initializes a new instance of the <see cref="T:System.Uri" /> class based on the specified base URI and relative URI string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-356">이 생성자를 만듭니다는 <xref:System.Uri> 결합 하 여 인스턴스를 `baseUri` 하며 `relativeUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-356">This constructor creates a <xref:System.Uri> instance by combining the `baseUri` and the `relativeUri`.</span></span> <span data-ttu-id="c1747-357">하는 경우 `relativeUri` (구성표, 호스트 이름 및 필요에 따라 포트 번호를 포함)는 절대 uri를 <xref:System.Uri> 만 사용 하 여 인스턴스가 만들어질 `relativeUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-357">If `relativeUri` is an absolute URI (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.</span></span>  
 
 <span data-ttu-id="c1747-358">경우는 `baseUri` 상대 부분이 (같은 `/api`), 상대 파트 슬래시로 끝나야 합니다 (같은 `/api/`) 이면 상대 부분 `baseUri` 되도록에서 생성 된 유지 <xref:System.Uri>.</span><span class="sxs-lookup"><span data-stu-id="c1747-358">If the `baseUri` has relative parts (like `/api`), then the relative part must be terminated with a slash, (like `/api/`), if the relative part of `baseUri` is to be preserved in the constructed <xref:System.Uri>.</span></span> 

 <span data-ttu-id="c1747-359">또한 경우는 `relativeUri` 상대 부분이 대체한 다음 슬래시로 시작 되는 `baseUri`</span><span class="sxs-lookup"><span data-stu-id="c1747-359">Additionally, if the `relativeUri` begins with a slash, then it will replace any relative part of the `baseUri`</span></span>

 <span data-ttu-id="c1747-360">이 생성자는 보장 하지 않습니다는 <xref:System.Uri> 액세스할 수 있는 리소스를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-360">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-361">다음 예제에서는의 새 인스턴스를 <xref:System.Uri> 클래스는 상대 Uri를 결합 하 여 http://www.contoso.com catalog/shownew.htm 절대 URI를 구성 하 고 http://www.contoso.com/catalog/shownew.htm입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-361">The following example creates a new instance of the <xref:System.Uri> class by combining the relative URIs http://www.contoso.com and catalog/shownew.htm to form the absolute URI http://www.contoso.com/catalog/shownew.htm.</span></span>  
  
 [!code-cpp[Classic Uri.Uri3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri3 Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-362"><paramref name="baseUri" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-362"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1747-363"><paramref name="baseUri" />가 절대 <see cref="T:System.Uri" /> 인스턴스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-363"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="c1747-364"><see href="http://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-364">In the <see href="http://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para><span data-ttu-id="c1747-365">
          </block> <paramref name="baseUri" />와 <paramref name="relativeUri" />를 결합하여 만든 URI가 비어 있거나 공백만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-365">
          </block> The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="c1747-366">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-366">-or-</span></span> 
<span data-ttu-id="c1747-367"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 체계가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-367">The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-368">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-368">-or-</span></span> 
<span data-ttu-id="c1747-369"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 슬래시가 너무 많은 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-369">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="c1747-370">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-370">-or-</span></span> 
<span data-ttu-id="c1747-371"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-371">The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-372">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-372">-or-</span></span> 
<span data-ttu-id="c1747-373"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 호스트 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-373">The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-374">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-374">-or-</span></span> 
<span data-ttu-id="c1747-375"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 파일 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-375">The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-376">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-376">-or-</span></span> 
<span data-ttu-id="c1747-377"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 사용자 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-377">The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-378">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-378">-or-</span></span> 
<span data-ttu-id="c1747-379"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-379">The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="c1747-380">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-380">-or-</span></span> 
<span data-ttu-id="c1747-381"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-381">The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="c1747-382">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-382">-or-</span></span> 
<span data-ttu-id="c1747-383"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI의 길이가 65519자를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-383">The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="c1747-384">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-384">-or-</span></span> 
<span data-ttu-id="c1747-385"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 체계의 길이가 1023자를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-385">The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="c1747-386">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-386">-or-</span></span> 
<span data-ttu-id="c1747-387"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 잘못된 문자 시퀀스가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-387">There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span>  
  
<span data-ttu-id="c1747-388">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-388">-or-</span></span> 
<span data-ttu-id="c1747-389"><paramref name="uriString" />에 지정된 MS-DOS 경로는 c:\\\\로 시작해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-389">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, Uri relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, class System.Uri relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, relativeUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(Uri ^ baseUri, Uri ^ relativeUri);" />
      <MemberSignature Language="F#" Value="new Uri : Uri * Uri -&gt; Uri" Usage="new System.Uri (baseUri, relativeUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="c1747-390">새 <see cref="T:System.Uri" /> 인스턴스의 기본인 절대 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-390">An absolute <see cref="T:System.Uri" /> that is the base for the new <see cref="T:System.Uri" /> instance.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="c1747-391"><c>baseUri</c>와 결합되는 상대 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-391">A relative <see cref="T:System.Uri" /> instance that is combined with <c>baseUri</c>.</span></span></param>
        <summary><span data-ttu-id="c1747-392">지정된 기본 <see cref="T:System.Uri" /> 인스턴스와 상대 <see cref="T:System.Uri" /> 인스턴스의 조합을 기반으로 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-392">Initializes a new instance of the <see cref="T:System.Uri" /> class based on the combination of a specified base <see cref="T:System.Uri" /> instance and a relative <see cref="T:System.Uri" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-393">이 생성자를 만듭니다 <xref:System.Uri> 절대를 결합 하 여 인스턴스 <xref:System.Uri> 인스턴스에 `baseUri`, 상대를 사용 하 여 <xref:System.Uri> 인스턴스에 `relativeUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-393">This constructor creates a new <xref:System.Uri> instance by combining an absolute <xref:System.Uri> instance, `baseUri`, with a relative <xref:System.Uri> instance, `relativeUri`.</span></span> <span data-ttu-id="c1747-394">경우 `relativeUri` 가 절대 <xref:System.Uri> (구성표, 호스트 이름 및 필요에 따라 포트 번호를 포함) 인스턴스를 <xref:System.Uri> 만 사용 하 여 인스턴스가 만들어집니다 `relativeUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-394">If `relativeUri` is an absolute <xref:System.Uri> instance (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.</span></span>  
 
 <span data-ttu-id="c1747-395">경우는 `baseUri` 상대 부분이 (같은 `/api`), 상대 파트 슬래시로 끝나야 합니다 (같은 `/api/`) 이면 상대 부분 `baseUri` 되도록에서 생성 된 유지 <xref:System.Uri>.</span><span class="sxs-lookup"><span data-stu-id="c1747-395">If the `baseUri` has relative parts (like `/api`), then the relative part must be terminated with a slash, (like `/api/`), if the relative part of `baseUri` is to be preserved in the constructed <xref:System.Uri>.</span></span> 

 <span data-ttu-id="c1747-396">또한 경우는 `relativeUri` 상대 부분이 대체한 다음 슬래시로 시작 되는 `baseUri`</span><span class="sxs-lookup"><span data-stu-id="c1747-396">Additionally, if the `relativeUri` begins with a slash, then it will replace any relative part of the `baseUri`</span></span>
 
 <span data-ttu-id="c1747-397">이 생성자는 보장 하지 않습니다는 <xref:System.Uri> 액세스할 수 있는 리소스를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-397">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-398">이 예제에서는 절대 <xref:System.Uri> 인스턴스에 `absoluteUri`, 및 상대 <xref:System.Uri> 인스턴스에 `relativeUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-398">This example creates an absolute <xref:System.Uri> instance, `absoluteUri`, and a relative <xref:System.Uri> instance, `relativeUri`.</span></span> <span data-ttu-id="c1747-399">새 <xref:System.Uri> 인스턴스를 `combinedUri`, 그런 다음 이러한 두 인스턴스에서 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-399">A new <xref:System.Uri> instance, `combinedUri`, is then created from these two instances.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#2)]
 [!code-csharp[NCLUriEnhancements#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#2)]
 [!code-vb[NCLUriEnhancements#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c1747-400"><paramref name="baseUri" />가 절대 <see cref="T:System.Uri" /> 인스턴스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-400"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-401"><paramref name="baseUri" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-401"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1747-402"><paramref name="baseUri" />가 절대 <see cref="T:System.Uri" /> 인스턴스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-402"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="c1747-403"><see href="http://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-403">In the <see href="http://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para><span data-ttu-id="c1747-404">
          </block> <paramref name="baseUri" />와 <paramref name="relativeUri" />를 결합하여 만든 URI가 비어 있거나 공백만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-404">
          </block> The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="c1747-405">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-405">-or-</span></span> 
<span data-ttu-id="c1747-406"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 체계가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-406">The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-407">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-407">-or-</span></span> 
<span data-ttu-id="c1747-408"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 슬래시가 너무 많은 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-408">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="c1747-409">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-409">-or-</span></span> 
<span data-ttu-id="c1747-410"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-410">The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-411">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-411">-or-</span></span> 
<span data-ttu-id="c1747-412"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 호스트 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-412">The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-413">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-413">-or-</span></span> 
<span data-ttu-id="c1747-414"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 파일 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-414">The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-415">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-415">-or-</span></span> 
<span data-ttu-id="c1747-416"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 사용자 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-416">The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-417">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-417">-or-</span></span> 
<span data-ttu-id="c1747-418"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-418">The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="c1747-419">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-419">-or-</span></span> 
<span data-ttu-id="c1747-420"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-420">The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="c1747-421">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-421">-or-</span></span> 
<span data-ttu-id="c1747-422"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI의 길이가 65519자를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-422">The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="c1747-423">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-423">-or-</span></span> 
<span data-ttu-id="c1747-424"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 체계의 길이가 1023자를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-424">The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="c1747-425">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-425">-or-</span></span> 
<span data-ttu-id="c1747-426"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 잘못된 문자 시퀀스가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-426">There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span>  
  
<span data-ttu-id="c1747-427">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-427">-or-</span></span> 
<span data-ttu-id="c1747-428"><paramref name="uriString" />에 지정된 MS-DOS 경로는 c:\\\\로 시작해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-428">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Uri (Uri baseUri, string relativeUri, bool dontEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string relativeUri, bool dontEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, relativeUri As String, dontEscape As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri(Uri ^ baseUri, System::String ^ relativeUri, bool dontEscape);" />
      <MemberSignature Language="F#" Value="new Uri : Uri * string * bool -&gt; Uri" Usage="new System.Uri (baseUri, relativeUri, dontEscape)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The constructor has been deprecated. Please new Uri(Uri, string). The dontEscape parameter is deprecated and is always false. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
        <Parameter Name="dontEscape" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="c1747-429">기본 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-429">The base URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="c1747-430">기본 URI에 추가할 상대 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-430">The relative URI to add to the base URI.</span></span></param>
        <param name="dontEscape"><span data-ttu-id="c1747-431"><c>uriString</c>이 완전히 이스케이프되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-431"><see langword="true" /> if <c>uriString</c> is completely escaped; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1747-432">문자 이스케이프를 명시적으로 제어하여 지정된 기본 URI와 상대 URI를 기반으로 <see cref="T:System.Uri" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-432">Initializes a new instance of the <see cref="T:System.Uri" /> class based on the specified base and relative URIs, with explicit control of character escaping.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-433">이 생성자는 <xref:System.Uri> 결합 하 여 인스턴스 `baseUri` 및 `relativeUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-433">This constructor creates a <xref:System.Uri> instance by combining `baseUri` and `relativeUri`.</span></span> <span data-ttu-id="c1747-434">에 전달 된 URI `relativeUri` (구성표, 호스트 이름 및 필요에 따라 포트 번호를 포함)는 절대 uri를 <xref:System.Uri> 만 사용 하 여 인스턴스가 만들어질 `relativeUri`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-434">If the URI passed in `relativeUri` is an absolute URI (containing a scheme, host name, and optionally a port number), the <xref:System.Uri> instance is created using only `relativeUri`.</span></span>  
  
 <span data-ttu-id="c1747-435">`dontEscape` 매개 변수 예약 된 문자를 변환할지 여부를에 이스케이프 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-435">The `dontEscape` parameter controls whether reserved characters are translated into escape sequences.</span></span> <span data-ttu-id="c1747-436">이 매개 변수를 설정 해야 `true` URI에 모든 예약 된 문자가 이스케이프 처리 되었습니다 되었음을 확인 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-436">This parameter should be set to `true` only if you are certain that all reserved characters in the URI have been escaped.</span></span> <span data-ttu-id="c1747-437">값을 설정 `true` 에 이스케이프 되지 않은 URI는 예기치 않은 동작이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-437">Setting the value to `true` for a URI that has not been completely escaped can cause unexpected behavior.</span></span> <span data-ttu-id="c1747-438">이 매개 변수를 항상 설정 하는 것이 좋습니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-438">It is strongly recommended that you always set this parameter to `false`.</span></span> <span data-ttu-id="c1747-439">하는 경우 `dontEscape` 로 설정 된 `false`, 생성자는 모든 백분율 (%) 뒤에 올바른 이스케이프 시퀀스를 확인 하 여 예약된 된 문자를 이스케이프 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-439">If `dontEscape` is set to `false`, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence.</span></span> <span data-ttu-id="c1747-440">다음의 백분율 문자 시퀀스 올바르지 않으면 백분율 25%로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-440">If the character sequence following a percent is not valid, the percent is replaced by %25.</span></span>  
  
 <span data-ttu-id="c1747-441">이 생성자는 보장 하지 않습니다는 <xref:System.Uri> 액세스할 수 있는 리소스를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-441">This constructor does not ensure that the <xref:System.Uri> refers to an accessible resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-442">다음 예제에서는의 새 인스턴스를 만듭니다는 <xref:System.Uri> 클래스는 상대 Uri를 결합 하 여 http://www.contoso.com 및 절대 URI를 구성 하기 위해 Hello%20World.htm 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-442">The following example creates a new instance of the <xref:System.Uri> class by combining the relative URIs http://www.contoso.com and Hello%20World.htm to form an absolute URI.</span></span>  
  
 [!code-cpp[Classic Uri.Uri4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Uri4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Uri4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Uri4 Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Uri4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Uri4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-443"><paramref name="baseUri" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-443"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1747-444"><paramref name="baseUri" />가 절대 <see cref="T:System.Uri" /> 인스턴스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-444"><paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="c1747-445"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI가 비어 있거나 공백만 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-445">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.</span></span>  
  
<span data-ttu-id="c1747-446">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-446">-or-</span></span> 
<span data-ttu-id="c1747-447"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 체계가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-447">The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-448">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-448">-or-</span></span> 
<span data-ttu-id="c1747-449"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 슬래시가 너무 많은 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-449">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="c1747-450">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-450">-or-</span></span> 
<span data-ttu-id="c1747-451"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-451">The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-452">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-452">-or-</span></span> 
<span data-ttu-id="c1747-453"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 호스트 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-453">The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-454">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-454">-or-</span></span> 
<span data-ttu-id="c1747-455"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 파일 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-455">The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-456">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-456">-or-</span></span> 
<span data-ttu-id="c1747-457"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 사용자 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-457">The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.</span></span>  
  
<span data-ttu-id="c1747-458">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-458">-or-</span></span> 
<span data-ttu-id="c1747-459"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-459">The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.</span></span>  
  
<span data-ttu-id="c1747-460">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-460">-or-</span></span> 
<span data-ttu-id="c1747-461"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-461">The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.</span></span>  
  
<span data-ttu-id="c1747-462">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-462">-or-</span></span> 
<span data-ttu-id="c1747-463"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI의 길이가 65519자를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-463">The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.</span></span>  
  
<span data-ttu-id="c1747-464">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-464">-or-</span></span> 
<span data-ttu-id="c1747-465"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 지정된 체계의 길이가 1023자를 초과하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-465">The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.</span></span>  
  
<span data-ttu-id="c1747-466">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-466">-or-</span></span> 
<span data-ttu-id="c1747-467"><paramref name="baseUri" />와 <paramref name="relativeUri" />를 조합하여 만든 URI에 잘못된 문자 시퀀스가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-467">There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.</span></span>  
  
<span data-ttu-id="c1747-468">또는</span><span class="sxs-lookup"><span data-stu-id="c1747-468">-or-</span></span> 
<span data-ttu-id="c1747-469"><paramref name="uriString" />에 지정된 MS-DOS 경로는 c:\\\\로 시작해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-469">The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\\\.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="c1747-470">보안 문제 때문에 응용 프로그램은이 생성자를 호출 하지이 URI 문자열을 사용 하 여 신뢰할 수 없는 소스에서 사용 하 여 <paramref name="dontEscape" /> 로 <see langword="true" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-470">Because of security concerns, your application should not call this constructor with URI strings from untrusted sources and with <paramref name="dontEscape" /> set to <see langword="true" />.</span></span> <span data-ttu-id="c1747-471">또는 호출 하 여 URI 문자열의 유효성을 확인할 수 있습니다는 <see cref="M:System.Uri.IsWellFormedOriginalString" /> 이 생성자를 호출 하기 전에 메서드.</span><span class="sxs-lookup"><span data-stu-id="c1747-471">Alternately, you can check a URI string for validity by calling the <see cref="M:System.Uri.IsWellFormedOriginalString" /> method prior to calling this constructor.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AbsolutePath">
      <MemberSignature Language="C#" Value="public string AbsolutePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AbsolutePath" />
      <MemberSignature Language="DocId" Value="P:System.Uri.AbsolutePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AbsolutePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AbsolutePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AbsolutePath : string" Usage="System.Uri.AbsolutePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-472">URI의 절대 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-472">Gets the absolute path of the URI.</span></span></summary>
        <value><span data-ttu-id="c1747-473">리소스에 대한 절대 경로가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-473">A <see cref="T:System.String" /> containing the absolute path to the resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-474"><xref:System.Uri.AbsolutePath%2A> 속성 정보에 대 한 요청을 해결 하려면 서버를 사용 하는 경로 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-474">The <xref:System.Uri.AbsolutePath%2A> property contains the path information that the server uses to resolve requests for information.</span></span> <span data-ttu-id="c1747-475">일반적으로 확보 하 여 응용 프로그램 또는 스크립트 정보를 제공 하도록 서버를 실행 해야 하지만 서버의 파일 시스템에 원하는 정보에 대 한 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-475">Typically this is the path to the desired information on the server's file system, although it also can indicate the application or script the server must run to provide the information.</span></span>  
  
 <span data-ttu-id="c1747-476">구성표, 호스트 이름 또는 URI의 쿼리 부분 경로 정보가 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-476">The path information does not include the scheme, host name, or query portion of the URI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-477">다음 예제에서는 경로 /catalog/shownew.htm을 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-477">The following example writes the path /catalog/shownew.htm to the console.</span></span>  
  
 [!code-cpp[Classic Uri.AbsolutePath Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.AbsolutePath Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.AbsolutePath Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.AbsolutePath Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-478">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-478">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteUri">
      <MemberSignature Language="C#" Value="public string AbsoluteUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AbsoluteUri" />
      <MemberSignature Language="DocId" Value="P:System.Uri.AbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AbsoluteUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AbsoluteUri { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AbsoluteUri : string" Usage="System.Uri.AbsoluteUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-479">절대 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-479">Gets the absolute URI.</span></span></summary>
        <value><span data-ttu-id="c1747-480">전체 URI가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-480">A <see cref="T:System.String" /> containing the entire URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-481">합니다 <xref:System.Uri.AbsoluteUri%2A> 속성에 저장 된 전체 URI를 포함 합니다 <xref:System.Uri> 인스턴스, 모든 조각 및 쿼리 문자열을 포함 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-481">The <xref:System.Uri.AbsoluteUri%2A> property includes the entire URI stored in the <xref:System.Uri> instance, including all fragments and query strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-482">다음 예제에서는 기록의 전체 콘텐츠를 <xref:System.Uri> 콘솔로 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c1747-482">The following example writes the complete contents of the <xref:System.Uri> instance to the console.</span></span> <span data-ttu-id="c1747-483">표시 된 예제에서 http://www.contoso.com/catalog/shownew.htm?date=today 콘솔에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-483">In the example shown, http://www.contoso.com/catalog/shownew.htm?date=today is written to the console.</span></span>  
  
 [!code-cpp[Classic Uri.AbsoluteUri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.AbsoluteUri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.AbsoluteUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.AbsoluteUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-484">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-484">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Authority">
      <MemberSignature Language="C#" Value="public string Authority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Authority" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Authority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authority As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Authority { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authority : string" Usage="System.Uri.Authority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-485">서버의 DNS(Domain Name System) 호스트 이름이나 IP 주소 및 포트 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-485">Gets the Domain Name System (DNS) host name or IP address and the port number for a server.</span></span></summary>
        <value><span data-ttu-id="c1747-486">이 인스턴스가 나타내는 URI의 인증 기관 구성 요소가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-486">A <see cref="T:System.String" /> containing the authority component of the URI represented by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-487"><xref:System.Uri.Authority%2A> 속성은 일반적으로 서버 DNS 호스트 이름 또는 IP 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-487">The <xref:System.Uri.Authority%2A> property is typically a server DNS host name or IP address.</span></span> <span data-ttu-id="c1747-488">이 속성의 URI에 대 한 기본 포트에서 서로 다른 경우 서비스 포트 번호를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-488">This property might include the service port number if it differs from the default port for the URI.</span></span> <span data-ttu-id="c1747-489">경우는 <xref:System.Uri.Authority%2A> 예약 된 문자를 포함 하는 구성 요소,이 속성에 의해 반환 되는 문자열 값에서 이러한 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-489">If the <xref:System.Uri.Authority%2A> component contains reserved characters, these are escaped in the string value returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-490">다음 예제에서는 호스트 이름 (www.contoso.com) 및 포트 번호 기록 (8080) 콘솔에 서버.</span><span class="sxs-lookup"><span data-stu-id="c1747-490">The following example writes the host name (www.contoso.com) and port number (8080) of the server to the console.</span></span>  
  
 [!code-cpp[Classic Uri.Authority Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Authority Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Authority Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Authority Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Authority Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Authority Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-491">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-491">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Canonicalize">
      <MemberSignature Language="C#" Value="protected virtual void Canonicalize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Canonicalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Canonicalize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Canonicalize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Canonicalize();" />
      <MemberSignature Language="F#" Value="abstract member Canonicalize : unit -&gt; unit&#xA;override this.Canonicalize : unit -&gt; unit" Usage="uri.Canonicalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1747-492">내부적으로 저장된 URI를 정규형으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-492">Converts the internally stored URI to canonical form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-493">URI의 정식 버전을 내부적으로 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-493">Stores the canonical version of the URI internally.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-494">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-494">This instance represents a relative URI, and this method is valid only for absolute URIs.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="c1747-495">URI가 잘못 구성된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-495">The URI is incorrectly formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckHostName">
      <MemberSignature Language="C#" Value="public static UriHostNameType CheckHostName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.UriHostNameType CheckHostName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.CheckHostName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckHostName (name As String) As UriHostNameType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static UriHostNameType CheckHostName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CheckHostName : string -&gt; UriHostNameType" Usage="System.Uri.CheckHostName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriHostNameType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c1747-496">유효성을 확인할 호스트 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-496">The host name to validate.</span></span> <span data-ttu-id="c1747-497">IPv4 또는 IPv6 주소이거나 인터넷 호스트 이름일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-497">This can be an IPv4 or IPv6 address or an Internet host name.</span></span></param>
        <summary><span data-ttu-id="c1747-498">지정된 호스트 이름이 유효한 DNS 이름인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-498">Determines whether the specified host name is a valid DNS name.</span></span></summary>
        <returns><span data-ttu-id="c1747-499">호스트 이름의 형식을 나타내는 <see cref="T:System.UriHostNameType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-499">A <see cref="T:System.UriHostNameType" /> that indicates the type of the host name.</span></span> <span data-ttu-id="c1747-500">호스트 이름의 형식을 확인할 수 없거나 호스트 이름이 <see langword="null" /> 또는 길이가 0인 문자열이면 이 메서드에서 <see cref="F:System.UriHostNameType.Unknown" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-500">If the type of the host name cannot be determined or if the host name is <see langword="null" /> or a zero-length string, this method returns <see cref="F:System.UriHostNameType.Unknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-501"><xref:System.Uri.CheckHostName%2A> 메서드 제공한 호스트 이름은 올바른 인터넷 호스트 이름에 대 한 요구 사항을 충족 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-501">The <xref:System.Uri.CheckHostName%2A> method checks that the host name provided meets the requirements for a valid Internet host name.</span></span> <span data-ttu-id="c1747-502">그러나 호스트의 존재 여부 확인에 대 한 호스트 이름 조회가 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-502">It does not, however, perform a host-name lookup to verify the existence of the host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-503">다음 예제에서는 호스트 이름이 올바른지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-503">The following example checks whether the host name is valid.</span></span>  
  
 [!code-cpp[Classic Uri.CheckHostName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.CheckHostName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.CheckHostName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.CheckHostName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSchemeName">
      <MemberSignature Language="C#" Value="public static bool CheckSchemeName (string schemeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckSchemeName(string schemeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.CheckSchemeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckSchemeName (schemeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CheckSchemeName(System::String ^ schemeName);" />
      <MemberSignature Language="F#" Value="static member CheckSchemeName : string -&gt; bool" Usage="System.Uri.CheckSchemeName schemeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="schemeName"><span data-ttu-id="c1747-504">유효성을 확인할 체계 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-504">The scheme name to validate.</span></span></param>
        <summary><span data-ttu-id="c1747-505">지정된 체계 이름이 유효한지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-505">Determines whether the specified scheme name is valid.</span></span></summary>
        <returns><span data-ttu-id="c1747-506">스키마 이름이 유효하면 <see cref="T:System.Boolean" /> 값이  <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-506">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the scheme name is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-507">이 메서드는 기본적으로 RFC 2396에 따라 유효성에 대 한 스키마 이름을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-507">This method checks the scheme name for validity according to RFC 2396 by default.</span></span> <span data-ttu-id="c1747-508">다국어 리소스 식별자 (IRIs) 또는 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우이 메서드는 RFC 3986에 따라 유효성 검사에 대 한 스키마 이름을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-508">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, this method checks the scheme name for validity according to RFC 3986.</span></span> <span data-ttu-id="c1747-509">체계 이름 문자로 시작 해야 하며 문자, 숫자 및 문자를 포함 해야 합니다 ".", "+" 또는 "-"입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-509">The scheme name must begin with a letter and must contain only letters, digits, and the characters ".", "+", or "-".</span></span>  
  
 <span data-ttu-id="c1747-510">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-510">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-511">다음 예제에서는 <xref:System.Uri> 인스턴스 및 스키마 이름이 올바른지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-511">The following example creates a <xref:System.Uri> instance and checks whether the scheme name is valid.</span></span>  
  
 [!code-cpp[NCLUriExamples#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#9)]
 [!code-csharp[NCLUriExamples#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#9)]
 [!code-vb[NCLUriExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecurity">
      <MemberSignature Language="C#" Value="protected virtual void CheckSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.CheckSecurity" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CheckSecurity ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CheckSecurity();" />
      <MemberSignature Language="F#" Value="abstract member CheckSecurity : unit -&gt; unit&#xA;override this.CheckSecurity : unit -&gt; unit" Usage="uri.CheckSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1747-512">이 메서드를 호출해도 아무런 효과가 나타나지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-512">Calling this method has no effect.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (Uri uri1, Uri uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Uri uri1, class System.Uri uri2, valuetype System.UriComponents partsToCompare, valuetype System.UriFormat compareFormat, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (uri1 As Uri, uri2 As Uri, partsToCompare As UriComponents, compareFormat As UriFormat, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(Uri ^ uri1, Uri ^ uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Compare : Uri * Uri * UriComponents * UriFormat * StringComparison -&gt; int" Usage="System.Uri.Compare (uri1, uri2, partsToCompare, compareFormat, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri1" Type="System.Uri" />
        <Parameter Name="uri2" Type="System.Uri" />
        <Parameter Name="partsToCompare" Type="System.UriComponents" />
        <Parameter Name="compareFormat" Type="System.UriFormat" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="uri1"><span data-ttu-id="c1747-513">첫 번째 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-513">The first <see cref="T:System.Uri" />.</span></span></param>
        <param name="uri2"><span data-ttu-id="c1747-514">두 번째 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-514">The second <see cref="T:System.Uri" />.</span></span></param>
        <param name="partsToCompare"><span data-ttu-id="c1747-515">비교할 <c>uri1</c>과 <c>uri2</c>의 부분을 지정하는 <see cref="T:System.UriComponents" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-515">A bitwise combination of the <see cref="T:System.UriComponents" /> values that specifies the parts of <c>uri1</c> and <c>uri2</c> to compare.</span></span></param>
        <param name="compareFormat"><span data-ttu-id="c1747-516">URI 구성 요소를 비교할 때 사용되는 문자 이스케이프를 지정하는 <see cref="T:System.UriFormat" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-516">One of the <see cref="T:System.UriFormat" /> values that specifies the character escaping used when the URI components are compared.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="c1747-517"><see cref="T:System.StringComparison" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-517">One of the <see cref="T:System.StringComparison" /> values.</span></span></param>
        <summary><span data-ttu-id="c1747-518">지정된 비교 규칙을 사용하여 두 URI의 지정된 부분을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-518">Compares the specified parts of two URIs using the specified comparison rules.</span></span></summary>
        <returns><span data-ttu-id="c1747-519">비교한 <see cref="T:System.Int32" /> 구성 요소 간의 어휘 관계를 나타내는 <see cref="T:System.Uri" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-519">An <see cref="T:System.Int32" /> value that indicates the lexical relationship between the compared <see cref="T:System.Uri" /> components.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c1747-520">값</span><span class="sxs-lookup"><span data-stu-id="c1747-520">Value</span></span> 
 </term><description> <span data-ttu-id="c1747-521">의미</span><span class="sxs-lookup"><span data-stu-id="c1747-521">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="c1747-522">0보다 작음</span><span class="sxs-lookup"><span data-stu-id="c1747-522">Less than zero</span></span> 
 </term><description><span data-ttu-id="c1747-523"><paramref name="uri1" />가 <paramref name="uri2" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-523"><paramref name="uri1" /> is less than <paramref name="uri2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c1747-524">0</span><span class="sxs-lookup"><span data-stu-id="c1747-524">Zero</span></span> 
 </term><description><span data-ttu-id="c1747-525"><paramref name="uri1" />가 <paramref name="uri2" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-525"><paramref name="uri1" /> equals <paramref name="uri2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c1747-526">0보다 큼</span><span class="sxs-lookup"><span data-stu-id="c1747-526">Greater than zero</span></span> 
 </term><description><span data-ttu-id="c1747-527"><paramref name="uri1" />가 <paramref name="uri2" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-527"><paramref name="uri1" /> is greater than <paramref name="uri2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-528">모두 `uri1` 하 고 `uri2` 는 `null`,이 메서드에서 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-528">If both `uri1` and `uri2` are `null`, this method returns 0.</span></span> <span data-ttu-id="c1747-529">URI 값을 비교할 때 상대 URI는 항상 절대 URI가 null이 아닌 URI 이며 항상 null URI 보다 큰 미만입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-529">When comparing URI values, a relative URI is always less than an absolute URI, and a non-null URI is always greater than a null URI.</span></span> <span data-ttu-id="c1747-530">사례에 대 한는 둘 다 `uri1` 및 `uri2` 되지 `null` 와 상대 Uri 또는 둘 다 절대 Uri를 모두는 <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> 메서드는 비교를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-530">For cases where both `uri1` and `uri2` are not `null` and are both relative URIs or both absolute URIs, the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> method performs the comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c1747-531"><paramref name="comparisonType" />은 유효한 <see cref="T:System.StringComparison" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-531"><paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DnsSafeHost">
      <MemberSignature Language="C#" Value="public string DnsSafeHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DnsSafeHost" />
      <MemberSignature Language="DocId" Value="P:System.Uri.DnsSafeHost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DnsSafeHost As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DnsSafeHost { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DnsSafeHost : string" Usage="System.Uri.DnsSafeHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-532">필요한 경우 이스케이프 해제된 후 호스트 이름을 가져오는 것이 DNS 확인에 사용하기에 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-532">Gets a host name that, after being unescaped if necessary, is safe to use for DNS resolution.</span></span></summary>
        <value><span data-ttu-id="c1747-533"><see cref="T:System.String" /> 확인을 위해 이미 적합 한 경우 DNS 확인용으로 또는 원래 호스트 문자열에 대 한 적합 한 형식에서 URI 호스트 부분을 포함 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-533">A <see cref="T:System.String" /> that contains the host part of the URI in a format suitable for DNS resolution; or the original host string, if it is already suitable for resolution.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-534">IPv6 주소를 대괄호 () 제거 됩니다 및 <xref:System.Net.IPAddress.ScopeId%2A> 이 인스턴스를 만들 때 지정 된 경우 속성이 설정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-534">For IPv6 addresses, the brackets ([]) are removed and the <xref:System.Net.IPAddress.ScopeId%2A> property is set, if one was specified when this instance was constructed.</span></span>

<span data-ttu-id="c1747-535">(예를 들어, "http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"), 다음 DnsSafeHost는 이스케이프 된 문자열 반환이 인스턴스를 생성 하는 이스케이프 된 문자열을 사용 하는 경우 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-535">If you used an escaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"), then DnsSafeHost returns an escaped string.</span></span> <span data-ttu-id="c1747-536">반환 된 모든 이스케이프 된 문자열을 이스케이프 해제 `DnsSafeHost` DNS 확인을 위해 해당 문자열을 사용 하기 전에 (예제 참조).</span><span class="sxs-lookup"><span data-stu-id="c1747-536">Unescape any escaped string returned from `DnsSafeHost` before using that string for DNS resolution (see the Example).</span></span> <span data-ttu-id="c1747-537">(예를 들어, "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), 다음 DnsSafeHost 이스케이프 되지 않은 문자열이 반환이 인스턴스를 생성 하는 잘못 된 이스케이프 해제 된 문자열을 사용 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="c1747-537">If you used an invalid unescaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), then DnsSafeHost returns an unescaped string.</span></span>
  
 <span data-ttu-id="c1747-538"><xref:System.Uri.DnsSafeHost%2A> 속성은이 항목의 뒷부분에 설명 된 대로 구성 설정에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-538">The <xref:System.Uri.DnsSafeHost%2A> property is dependent on configuration settings, as discussed later in this topic.</span></span> <span data-ttu-id="c1747-539">구성 설정을 사용 하는 경우 일관성 없는 결과가 발생할 수 있는 Windows 스토어 응용 프로그램에서 변경할 수 없습니다 <xref:System.Uri.DnsSafeHost%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-539">Configuration settings cannot be changed by Windows Store applications, which can lead to inconsistent results when using <xref:System.Uri.DnsSafeHost%2A>.</span></span> <span data-ttu-id="c1747-540"><xref:System.Uri.IdnHost%2A> 속성은 사용 하 여 안으로 제공 <xref:System.Uri.DnsSafeHost%2A>이므로 <xref:System.Uri.IdnHost%2A> 안전한 지, 어떤 현재 관계 없이 DNS를 항상 되도록 보장 됩니다 *app.config* 설정이 필요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-540">The <xref:System.Uri.IdnHost%2A> property is provided as the preferred alternative to using <xref:System.Uri.DnsSafeHost%2A>, because <xref:System.Uri.IdnHost%2A> is guaranteed to always be DNS safe, no matter what the current *app.config* settings might be.</span></span>  
  
 <span data-ttu-id="c1747-541"><xref:System.Uri.DnsSafeHost%2A> 속성이.NET Framework v3.5, 3.0 SP1에서에서 확장 되 고 2.0 식별자 IRI (International Resource)을 제공 하는 SP1에 따라 RFC 3987을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-541">The <xref:System.Uri.DnsSafeHost%2A> property has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide International Resource Identifier (IRI) support based on RFC 3987.</span></span> <span data-ttu-id="c1747-542">현재 사용자의 경우 IRI를 사용하도록 설정하지 않는 한 .NET Framework 2.0 동작에서 차이를 느끼지 못할 것입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-542">Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</span></span> <span data-ttu-id="c1747-543">이 덕분에 .NET Framework 이전 버전과의 응용 프로그램 호환성이 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-543">This ensures application compatibility with prior versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="c1747-544">Iri 지원을 사용 하는 다음 두 변경이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-544">To enable support for IRI, the following two changes are required:</span></span>  
  
1.  <span data-ttu-id="c1747-545">다음 줄을 추가 합니다 *machine.config* .NET Framework 2.0 디렉터리</span><span class="sxs-lookup"><span data-stu-id="c1747-545">Add the following line to the *machine.config* file under the .NET Framework 2.0 directory</span></span>  
  
     <span data-ttu-id="c1747-546">\<section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" /></span><span class="sxs-lookup"><span data-stu-id="c1747-546">\<section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" /></span></span>  
  
2.  <span data-ttu-id="c1747-547">다국어 도메인 이름 (IDN) 구문 분석 된 도메인 이름에 적용할 것인지와 IRI 구문 분석 규칙을 적용 해야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-547">Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied.</span></span> <span data-ttu-id="c1747-548">이 작업을 수행할 수 있습니다 합니다 *machine.config* 또는 합니다 *app.config* 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-548">This can be done in the *machine.config* or in the *app.config* file.</span></span> <span data-ttu-id="c1747-549">예를 들어, 다음 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-549">For example, add the following:</span></span>  
  
    ```xml  
    <configuration>  
      <uri>  
      <idn enabled="All" />  
      <iriParsing enabled="true" />  
      </uri>  
    </configuration>  
    ```  
  
 <span data-ttu-id="c1747-550">IDN을 사용하면 도메인 이름의 모든 유니코드 레이블이 해당 Punycode 문자로 변환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-550">Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents.</span></span> <span data-ttu-id="c1747-551">Punycode 이름에는 ASCII 문자만 사용되며 항상 xn-- 접두사로 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-551">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span> <span data-ttu-id="c1747-552">대부분의 DNS 서버는 ASCII 문자만 지원하므로(RFC 3940 참조) 이렇게 해야 인터넷에서 기존 DNS 서버를 지원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-552">The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).</span></span>  
  
 <span data-ttu-id="c1747-553">값에만 영향을 줍니다 IDN을 사용 하면는 <xref:System.Uri.DnsSafeHost%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-553">Enabling IDN only affects the value of the <xref:System.Uri.DnsSafeHost%2A> property.</span></span>  
  
 <span data-ttu-id="c1747-554">세 가지 idn 관련 값을 사용 하는 DNS 서버에 따라 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-554">There are three possible values for IDN depending on the DNS servers that are used:</span></span>  
  
-   <span data-ttu-id="c1747-555">idn 사용 = All</span><span class="sxs-lookup"><span data-stu-id="c1747-555">idn enabled = All</span></span>  
  
     <span data-ttu-id="c1747-556">이 값은 모든 유니코드 도메인 이름을 해당하는 Punycode 항목(IDN 이름)으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-556">This value will convert any Unicode domain names to their Punycode equivalents (IDN names).</span></span>  
  
-   <span data-ttu-id="c1747-557">사용 하도록 설정 하는 idn AllExceptIntranet =</span><span class="sxs-lookup"><span data-stu-id="c1747-557">idn enabled = AllExceptIntranet</span></span>  
  
     <span data-ttu-id="c1747-558">이 값은 해당하는 Punycode 항목(IDN 이름)을 사용하도록 모든 외부 유니코드 도메인 이름을 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-558">This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names).</span></span> <span data-ttu-id="c1747-559">이 경우 로컬 인트라넷에 있는 국가별 이름을 처리하기 위해 인트라넷에 사용되는 DNS 서버가 유니코드 이름 확인을 지원해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-559">In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.</span></span>  
  
-   <span data-ttu-id="c1747-560">idn 사용 = 없음</span><span class="sxs-lookup"><span data-stu-id="c1747-560">idn enabled = None</span></span>  
  
     <span data-ttu-id="c1747-561">이 값은 Punycode를 사용하도록 어떠한 유니코드 도메인 이름도 변환하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-561">This value will not convert any Unicode domain names to use Punycode.</span></span> <span data-ttu-id="c1747-562">.NET Framework 2.0 동작을 사용 하 여 일치 하는 기본 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-562">This is the default value which is consistent with the .NET Framework 2.0 behaviour.</span></span>  
  
 <span data-ttu-id="c1747-563">IRI 구분 분석 (iriParsing 사용 = `true`) 문자 검사가 최신 IRI 규칙 RFC 3987 및 정규화를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-563">Enabling IRI parsing (iriParsing enabled = `true`) will do normalization and character checking according to the latest IRI rules in RFC 3987.</span></span> <span data-ttu-id="c1747-564">기본값은 `false` 및는 정규화 수행 (및 문자 검사가 RFC 2396 및 RFC 2732 IPv6 리터럴)입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-564">The default value is `false` and will do normalization and character checking according to RFC 2396 and RFC 2732 (for IPv6 literals).</span></span>  
  
 <span data-ttu-id="c1747-565">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-565">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-566">다음 예제에서는 <xref:System.Uri> 문자열 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-566">The following example creates a <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="c1747-567">반환 된 값 간의 차이 보여 줍니다 <xref:System.Uri.Host%2A>호스트 이름 또는 URI에 지정 된 주소를 반환 하는, 및에서 반환 되는 값 <xref:System.Uri.DnsSafeHost%2A>, DNS 확인에 사용 하기에 안전 하 게 연결 되는 주소를 반환 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-567">It illustrates the difference between the value returned from <xref:System.Uri.Host%2A>, which returns the host name or address specified in the URI, and the value returned from <xref:System.Uri.DnsSafeHost%2A>, which returns an address that is safe to use in DNS resolution.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#4)]
 [!code-csharp[NCLUriEnhancements#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#4)]
 [!code-vb[NCLUriEnhancements#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#4)]  

 <span data-ttu-id="c1747-568">설명에서 설명 했 듯이를 해결 하기 전에 호스트 이름을 이스케이프 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-568">As explained in Remarks, unescape the host name before resolving it.</span></span> <span data-ttu-id="c1747-569">사용할 수는 <xref:System.Uri.UnescapeDataString%2A> 호스트 이름에 고 이스케이프 해제 하는 메서드를 호출 하 여 해결할 수는 <xref:System.Net.Dns.GetHostEntry%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c1747-569">You can use the <xref:System.Uri.UnescapeDataString%2A> method to unescape the host name, and you can resolve it by calling the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-570">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-570">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uri.Equals comparand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand"><span data-ttu-id="c1747-571">현재 인스턴스와 비교할 URI 식별자나 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-571">The <see cref="T:System.Uri" /> instance or a URI identifier to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="c1747-572">두 <see cref="T:System.Uri" /> 인스턴스가 같은지 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-572">Compares two <see cref="T:System.Uri" /> instances for equality.</span></span></summary>
        <returns><span data-ttu-id="c1747-573">두 인스턴스가 같은 URI를 나타내면 <see cref="T:System.Boolean" /> 값이 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-573">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the two instances represent the same URI; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-574">합니다 <xref:System.Uri.Equals%2A> 사용자 정보에 관계 없이 두 인스턴스를 비교 하는 메서드 (<xref:System.Uri.UserInfo%2A>) 및 조각 (<xref:System.Uri.Fragment%2A>)를 포함할 수 있는 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-574">The <xref:System.Uri.Equals%2A> method compares the two instances without regard to user information (<xref:System.Uri.UserInfo%2A>) and fragment (<xref:System.Uri.Fragment%2A>) parts that they might contain.</span></span> <span data-ttu-id="c1747-575">예를 들어, Uri를 지정 http://www.contoso.com/index.htm#search 하 고 http://user:password@www.contoso.com/index.htm서 <xref:System.Uri.Equals%2A> 메서드는 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-575">For example, given the URIs http://www.contoso.com/index.htm#search and http://user:password@www.contoso.com/index.htm, the <xref:System.Uri.Equals%2A> method would return `true`.</span></span>  
  
 <span data-ttu-id="c1747-576">없으면 <xref:System.Uri> 인스턴스 유니코드 호스트 이름의 형식이 및 `comparand` 매개 변수에 포함을 <xref:System.Uri> 인스턴스나 다음 해당 Punycode 호스트 이름에 있는 호스트 이름으로 구성 되는 식별자 <xref:System.Uri.Equals%2A> 반환 `true` 식별자 IRI (International Resource) 및 다국어 도메인 이름 (IDN)를 지원 하는 경우에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-576">If one <xref:System.Uri> instance is formed with a Unicode host name and `comparand` parameter contains a <xref:System.Uri> instance or identifier that is formed with a host name that has the equivalent Punycode host name, then <xref:System.Uri.Equals%2A> returns `true` only if International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled.</span></span> <span data-ttu-id="c1747-577">Punycode 이름에는 ASCII 문자만 사용되며 항상 xn-- 접두사로 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-577">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span>  
  
 <span data-ttu-id="c1747-578">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-578">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1747-579">.NET Framework 버전 1.0 및 1.1의 <xref:System.Uri.Query%2A> 도 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-579">In the .NET Framework versions 1.0 and 1.1, the <xref:System.Uri.Query%2A> is also ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1747-580"><xref:System.Uri.Equals%2A> 파생된 클래스에서 메서드를 재정의할 수 있습니다 주의 악의적인 엔터티가 메서드를 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-580">The <xref:System.Uri.Equals%2A> method can be overridden in a derived class; use caution as a malicious entity could modify the method.</span></span> <span data-ttu-id="c1747-581">이 인스턴스가 신뢰할 수 있는 원본에서 가져온는 알 수 없는 경우 보안 검사를 수행 하려면이 메서드를 사용 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-581">You should not use this method to perform security checks unless you know that this instance came from a trusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-582">이 예제에서는 두 <xref:System.Uri> 문자열에서 인스턴스를 비교 하 여 동일한 값을 나타내는지 여부를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-582">This example creates two <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value.</span></span> <span data-ttu-id="c1747-583">`address1` 및 `address2` 동일 하기 때문에 <xref:System.Uri.Fragment%2A> 이 비교에 대 한 부분은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-583">`address1` and `address2` are the same because the <xref:System.Uri.Fragment%2A> portion is ignored for this comparison.</span></span> <span data-ttu-id="c1747-584">결과 콘솔에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-584">The outcome is written to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#8)]
 [!code-csharp[NCLUriExamples#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#8)]
 [!code-vb[NCLUriExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1747-585">부분적으로 신뢰할 수 있는 코드에서 파생 되지 않도록 하려면 <see cref="T:System.Uri" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-585">to prevent partially trusted code from deriving from <see cref="T:System.Uri" />.</span></span> <span data-ttu-id="c1747-586">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="c1747-586">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="protected virtual void Escape ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Escape() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Escape" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Escape ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Escape();" />
      <MemberSignature Language="F#" Value="abstract member Escape : unit -&gt; unit&#xA;override this.Escape : unit -&gt; unit" Usage="uri.Escape " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1747-587">경로 구성 요소에서 안전하지 않거나 예약된 문자를 해당 16진 문자 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-587">Converts any unsafe or reserved characters in the path component to their hexadecimal character representations.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="c1747-588">생성자에서 전달된 URI가 잘못된 경우.</span><span class="sxs-lookup"><span data-stu-id="c1747-588">The URI passed from the constructor is invalid.</span></span> <span data-ttu-id="c1747-589">이 예외는 URI에 너무 많은 문자가 있거나 URI가 상대 URI인 경우 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-589">This exception can occur if a URI has too many characters or the URI is relative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EscapeDataString">
      <MemberSignature Language="C#" Value="public static string EscapeDataString (string stringToEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EscapeDataString(string stringToEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.EscapeDataString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EscapeDataString (stringToEscape As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EscapeDataString(System::String ^ stringToEscape);" />
      <MemberSignature Language="F#" Value="static member EscapeDataString : string -&gt; string" Usage="System.Uri.EscapeDataString stringToEscape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToEscape" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringToEscape"><span data-ttu-id="c1747-590">이스케이프할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-590">The string to escape.</span></span></param>
        <summary><span data-ttu-id="c1747-591">문자열을 이스케이프된 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-591">Converts a string to its escaped representation.</span></span></summary>
        <returns><span data-ttu-id="c1747-592"><see cref="T:System.String" />에 대해 이스케이프된 표현이 포함된 <paramref name="stringToEscape" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-592">A <see cref="T:System.String" /> that contains the escaped representation of <paramref name="stringToEscape" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-593">기본적으로 <xref:System.Uri.EscapeDataString%2A> 메서드는 RFC 2396 예약 되지 않은 문자를 제외한 모든 문자는 16 진수 표현으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-593">By default, the <xref:System.Uri.EscapeDataString%2A> method converts all characters except for RFC 2396 unreserved characters to their hexadecimal representation.</span></span> <span data-ttu-id="c1747-594">다국어 리소스 식별자 (IRIs) 또는 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우는 <xref:System.Uri.EscapeDataString%2A> 메서드 변환 모든 문자를 RFC 제외 하 고 3986 예약 되지 않은 문자를 해당 16 진수 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-594">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.EscapeDataString%2A> method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation.</span></span> <span data-ttu-id="c1747-595">모든 유니코드 문자는 이스케이프 되지 전에 utf-8 형식으로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-595">All Unicode characters are converted to UTF-8 format before being escaped.</span></span>  
  
 <span data-ttu-id="c1747-596">이 메서드는 가정 `stringToEscape` 에 이스케이프 시퀀스가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-596">This method assumes that `stringToEscape` has no escape sequences in it.</span></span>  
  
 <span data-ttu-id="c1747-597">기본적으로 문자열은 RFC 2396에 따라 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-597">By default, the string is escaped according to RFC 2396.</span></span> <span data-ttu-id="c1747-598">다국어 리소스 식별자 (IRIs) 또는 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우 문자열은 RFC 3986 및 RFC 3987에 따라 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-598">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="c1747-599">예약 된 문자와 예약 되지 않은의 정의 대 한 이러한 Rfc를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="c1747-599">See these RFCs for a definition of reserved and unreserved characters.</span></span>  
  
 <span data-ttu-id="c1747-600">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-600">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-601"><paramref name="stringToEscape" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-601"><paramref name="stringToEscape" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="c1747-602"><see href="http://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-602">In the <see href="http://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para>
          </block>  
  
<span data-ttu-id="c1747-603"><paramref name="stringToEscape" />의 길이가 32766자를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-603">The length of <paramref name="stringToEscape" /> exceeds 32766 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EscapeString">
      <MemberSignature Language="C#" Value="protected static string EscapeString (string str);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string EscapeString(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.EscapeString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function EscapeString (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ EscapeString(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member EscapeString : string -&gt; string" Usage="System.Uri.EscapeString str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The method has been deprecated. Please use GetComponents() or static EscapeUriString() to escape a Uri component or a string. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c1747-604">이스케이프된 표현으로 변형할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-604">The string to transform to its escaped representation.</span></span></param>
        <summary><span data-ttu-id="c1747-605">문자열을 이스케이프된 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-605">Converts a string to its escaped representation.</span></span></summary>
        <returns><span data-ttu-id="c1747-606">이스케이프된 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-606">The escaped representation of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-607"><xref:System.Uri.EscapeString%2A> 메서드 RFC 2396의 예약 된 문자 및 문자 값이 127 보다 큰 모든 문자 16 진수 표현으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-607">The <xref:System.Uri.EscapeString%2A> method converts RFC 2396 reserved characters and all characters with a character value greater than 127 to hexadecimal representation.</span></span> <span data-ttu-id="c1747-608">모든 유니코드 문자는 이스케이프 되지 전에 utf-8 형식으로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-608">All Unicode characters are converted to UTF-8 format before being escaped.</span></span>  
  
 <span data-ttu-id="c1747-609">기본적으로 문자열은 RFC 2396에 따라 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-609">By default, the string is escaped according to RFC 2396.</span></span> <span data-ttu-id="c1747-610">다국어 리소스 식별자 (IRIs) 또는 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우 문자열은 RFC 3986 및 RFC 3987에 따라 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-610">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="c1747-611">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-611">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeUriString">
      <MemberSignature Language="C#" Value="public static string EscapeUriString (string stringToEscape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EscapeUriString(string stringToEscape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.EscapeUriString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EscapeUriString (stringToEscape As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EscapeUriString(System::String ^ stringToEscape);" />
      <MemberSignature Language="F#" Value="static member EscapeUriString : string -&gt; string" Usage="System.Uri.EscapeUriString stringToEscape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToEscape" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringToEscape"><span data-ttu-id="c1747-612">이스케이프할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-612">The string to escape.</span></span></param>
        <summary><span data-ttu-id="c1747-613">URI 문자열을 이스케이프된 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-613">Converts a URI string to its escaped representation.</span></span></summary>
        <returns><span data-ttu-id="c1747-614"><see cref="T:System.String" />에 대해 이스케이프된 표현이 포함된 <paramref name="stringToEscape" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-614">A <see cref="T:System.String" /> that contains the escaped representation of <paramref name="stringToEscape" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-615">사용 합니다 <xref:System.Uri.EscapeUriString%2A> 대 한 매개 변수일 언 이스케이프 된 URI 문자열을 준비 하는 방법의 <xref:System.Uri.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-615">Use the <xref:System.Uri.EscapeUriString%2A> method to prepare an unescaped URI string to be a parameter to the <xref:System.Uri.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="c1747-616">기본적으로 <xref:System.Uri.EscapeUriString%2A> 메서드 RFC 2396 예약 되지 않은 문자를 제외한 모든 문자를 16 진수 표현으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-616">By default, the <xref:System.Uri.EscapeUriString%2A> method converts all characters, except RFC 2396 unreserved characters, to their hexadecimal representation.</span></span> <span data-ttu-id="c1747-617">다국어 리소스 식별자 (IRIs) 또는 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우는 <xref:System.Uri.EscapeUriString%2A> 메서드 변환 모든 문자를 RFC 제외 하 고 3986 예약 되지 않은 문자를 해당 16 진수 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-617">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.EscapeUriString%2A> method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation.</span></span> <span data-ttu-id="c1747-618">모든 유니코드 문자는 이스케이프 되지 전에 utf-8 형식으로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-618">All Unicode characters are converted to UTF-8 format before being escaped.</span></span>  
  
 <span data-ttu-id="c1747-619">이 메서드는 가정 `stringToEscape` 에 이스케이프 시퀀스가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-619">This method assumes that `stringToEscape` has no escape sequences in it.</span></span>  
  
 <span data-ttu-id="c1747-620">기본적으로 문자열은 RFC 2396에 따라 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-620">By default, the string is escaped according to RFC 2396.</span></span> <span data-ttu-id="c1747-621">다국어 리소스 식별자 (IRIs) 또는 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우 문자열은 RFC 3986 및 RFC 3987에 따라 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-621">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="c1747-622">예약 된 문자와 예약 되지 않은의 정의 대 한 이러한 Rfc를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="c1747-622">See these RFCs for a definition of reserved and unreserved characters.</span></span>  
  
 <span data-ttu-id="c1747-623">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-623">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-624"><paramref name="stringToEscape" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-624"><paramref name="stringToEscape" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para><span data-ttu-id="c1747-625"><see href="http://go.microsoft.com/fwlink/?LinkID=247912">Windows 스토어 앱용 .NET</see> 또는 <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">이식 가능한 클래스 라이브러리</see>에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-625">In the <see href="http://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span></para>
          </block>  
  
<span data-ttu-id="c1747-626"><paramref name="stringToEscape" />의 길이가 32766자를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-626">The length of <paramref name="stringToEscape" /> exceeds 32766 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public string Fragment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Fragment" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Fragment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fragment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Fragment { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Fragment : string" Usage="System.Uri.Fragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-627">이스케이프된 URI 조각을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-627">Gets the escaped URI fragment.</span></span></summary>
        <value><span data-ttu-id="c1747-628">URI 조각 정보가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-628">A <see cref="T:System.String" /> that contains any URI fragment information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-629"><xref:System.Uri.Fragment%2A> 속성 단편 마커를 포함 하 여 URI에는 조각 표식 (#)를 수행 하는 모든 텍스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-629">The <xref:System.Uri.Fragment%2A> property gets any text following a fragment marker (#) in the URI, including the fragment marker itself.</span></span> <span data-ttu-id="c1747-630">URI를 지정 된 http://www.contoso.com/index.htm#main, <xref:System.Uri.Fragment%2A> 속성 #main을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-630">Given the URI http://www.contoso.com/index.htm#main, the <xref:System.Uri.Fragment%2A> property would return #main.</span></span>  
  
 <span data-ttu-id="c1747-631">합니다 <xref:System.Uri.Fragment%2A> 속성이 있는 고려 되지 않습니다 <xref:System.Uri.Equals%2A> 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-631">The <xref:System.Uri.Fragment%2A> property is not considered in any <xref:System.Uri.Equals%2A> comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-632">다음 예제에서는 <xref:System.Uri> 인스턴스 및 조각 정보를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-632">The following example creates a <xref:System.Uri> instance and writes the fragment information to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]
 [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]
 [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-633">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-633">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromHex">
      <MemberSignature Language="C#" Value="public static int FromHex (char digit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FromHex(char digit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.FromHex(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHex (digit As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FromHex(char digit);" />
      <MemberSignature Language="F#" Value="static member FromHex : char -&gt; int" Usage="System.Uri.FromHex digit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digit" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="digit"><span data-ttu-id="c1747-634">변환할 16진수(0-9, a-f, A-F)입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-634">The hexadecimal digit (0-9, a-f, A-F) to convert.</span></span></param>
        <summary><span data-ttu-id="c1747-635">16진수의 10진수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-635">Gets the decimal value of a hexadecimal digit.</span></span></summary>
        <returns><span data-ttu-id="c1747-636">지정된 16진수에 해당하는 0에서 15까지의 숫자가 포함된 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-636">An <see cref="T:System.Int32" /> value that contains a number from 0 to 15 that corresponds to the specified hexadecimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-637"><xref:System.Uri.FromHex%2A> 메서드 나타내는 16 진수 문자를 변환 (0-9, a-f, A-F) 10 진수 값 (0 ~ 15).</span><span class="sxs-lookup"><span data-stu-id="c1747-637">The <xref:System.Uri.FromHex%2A> method converts a character representing a hexadecimal digit (0-9, a-f, A-F) to its decimal value (0 to 15).</span></span> <span data-ttu-id="c1747-638">하는 경우 `digit` 유효한 16 진수가 아닙니다는 <xref:System.ArgumentException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-638">If `digit` is not a valid hexadecimal digit, an <xref:System.ArgumentException> exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-639">다음 예제에서는 인지 결정 문자를 16 진수 문자, 인 경우 해당 10 진수 값을 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-639">The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#1)]
 [!code-csharp[NCLUriExamples#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#1)]
 [!code-vb[NCLUriExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c1747-640"><paramref name="digit" />가 유효한 16진수(0-9, a-f, A-F)가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-640"><paramref name="digit" /> is not a valid hexadecimal digit (0-9, a-f, A-F).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetComponents">
      <MemberSignature Language="C#" Value="public string GetComponents (UriComponents components, UriFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetComponents(valuetype System.UriComponents components, valuetype System.UriFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetComponents (components As UriComponents, format As UriFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetComponents(UriComponents components, UriFormat format);" />
      <MemberSignature Language="F#" Value="member this.GetComponents : UriComponents * UriFormat -&gt; string" Usage="uri.GetComponents (components, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="components" Type="System.UriComponents" />
        <Parameter Name="format" Type="System.UriFormat" />
      </Parameters>
      <Docs>
        <param name="components"><span data-ttu-id="c1747-641">호출자에게 반환할 현재 인스턴스 부분을 지정하는 <see cref="T:System.UriComponents" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-641">A bitwise combination of the <see cref="T:System.UriComponents" /> values that specifies which parts of the current instance to return to the caller.</span></span></param>
        <param name="format"><span data-ttu-id="c1747-642">특수 문자가 이스케이프되는 방법을 제어하는 <see cref="T:System.UriFormat" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-642">One of the <see cref="T:System.UriFormat" /> values that controls how special characters are escaped.</span></span></param>
        <summary><span data-ttu-id="c1747-643">특수 문자에 지정된 이스케이프를 사용하여 현재 인스턴스에 지정된 구성 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-643">Gets the specified components of the current instance using the specified escaping for special characters.</span></span></summary>
        <returns><span data-ttu-id="c1747-644">구성 요소가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-644">A <see cref="T:System.String" /> that contains the components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-645"><xref:System.UriComponents.Query>, <xref:System.UriComponents.Fragment>를 <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.UserInfo>를 <xref:System.UriComponents.Host>를 <xref:System.UriComponents.Port>, 및 <xref:System.UriComponents.Path> 구성 요소 구분 기호를 넣지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="c1747-645">The <xref:System.UriComponents.Query>, <xref:System.UriComponents.Fragment>, <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.UserInfo>, <xref:System.UriComponents.Host>, <xref:System.UriComponents.Port>, and <xref:System.UriComponents.Path> components do not include the delimiter.</span></span> <span data-ttu-id="c1747-646">결합할 수는 <xref:System.UriComponents.KeepDelimiter> 구분 기호를 사용 하 여 값을 가져오려면 이러한 값 중 하나를 사용 하 여 플래그 (비트 OR 연산자 사용).</span><span class="sxs-lookup"><span data-stu-id="c1747-646">You can combine the <xref:System.UriComponents.KeepDelimiter> flag (using the bitwise OR operator) with any of those values to get the value with the delimiter.</span></span> <span data-ttu-id="c1747-647">다른 모든 <xref:System.UriComponents> 값 및 값의 조합을 구분 기호는 반환된 된 값에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-647">For all other <xref:System.UriComponents> values, and combinations of values, the delimiters are included in the returned value.</span></span>  
  
 <span data-ttu-id="c1747-648">구성 요소는 URI에 표시 되는 순서 대로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-648">The components are returned in the order that they appear in the URI.</span></span> <span data-ttu-id="c1747-649">예를 들어 경우 <xref:System.UriComponents.Scheme> 를 지정 하면 가장 먼저 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-649">For example, if <xref:System.UriComponents.Scheme> is specified, it appears first.</span></span>  
  
 <span data-ttu-id="c1747-650">식별자 IRI (International Resource) 및 다국어 도메인 이름 (IDN) 지원이 활성화 된 경우에서 반환 된 문자 수를 <xref:System.String> 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-650">When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the number of characters returned in the <xref:System.String> increases.</span></span> <span data-ttu-id="c1747-651">IRI를 지원 하기 위해 사용 하는 Punycode 이름 ASCII 문자만 포함 하 고 항상 xn--접두사로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-651">Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix.</span></span> <span data-ttu-id="c1747-652">유니코드 서로게이트 문자에서 올바르게 처리 된 IRI 및 IDN을 사용 하는 경우는 <xref:System.Uri.GetComponents%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c1747-652">When IRI and IDN are enabled, Unicode surrogate characters are handled correctly by the <xref:System.Uri.GetComponents%2A> method.</span></span>  
  
 <span data-ttu-id="c1747-653">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-653">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1747-654">경우는 <xref:System.Uri.GetComponents%2A> 메서드를 호출 `format` 로 설정 <xref:System.UriFormat.Unescaped> , 반환 값에 대 한 인수로 사용할 수 없습니다는 <xref:System.Uri.%23ctor%2A> 비슷한 생성자 <xref:System.Uri>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-654">If the <xref:System.Uri.GetComponents%2A> method is called with `format` set to <xref:System.UriFormat.Unescaped> , you cannot use the return value as an argument to a <xref:System.Uri.%23ctor%2A> constructor to create an equivalent <xref:System.Uri>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1747-655"><paramref name="components" />가 유효한 <see cref="T:System.UriComponents" /> 값의 조합이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-655"><paramref name="components" /> is not a combination of valid <see cref="T:System.UriComponents" /> values.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-656">현재 <see cref="T:System.Uri" />가 절대 URI가 아닌 경우.</span><span class="sxs-lookup"><span data-stu-id="c1747-656">The current <see cref="T:System.Uri" /> is not an absolute URI.</span></span> <span data-ttu-id="c1747-657">상대 URI는 이 메서드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-657">Relative URIs cannot be used with this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uri.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1747-658">URI의 해시 코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-658">Gets the hash code for the URI.</span></span></summary>
        <returns><span data-ttu-id="c1747-659">이 URI에 대해 생성된 해시 값을 포함하는 <see cref="T:System.Int32" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-659">An <see cref="T:System.Int32" /> containing the hash value generated for this URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-660">다음 예제에서는 <xref:System.Uri> 인스턴스 및 해시 코드를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-660">The following example creates a <xref:System.Uri> instance and writes the hash code to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]
 [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]
 [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLeftPart">
      <MemberSignature Language="C#" Value="public string GetLeftPart (UriPartial part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLeftPart(valuetype System.UriPartial part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetLeftPart(System.UriPartial)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLeftPart (part As UriPartial) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLeftPart(UriPartial part);" />
      <MemberSignature Language="F#" Value="member this.GetLeftPart : UriPartial -&gt; string" Usage="uri.GetLeftPart part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.UriPartial" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="c1747-661">반환할 URI 부분의 끝을 지정하는 <see cref="T:System.UriPartial" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-661">One of the <see cref="T:System.UriPartial" /> values that specifies the end of the URI portion to return.</span></span></param>
        <summary><span data-ttu-id="c1747-662">지정된 <see cref="T:System.Uri" /> 인스턴스 부분을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-662">Gets the specified portion of a <see cref="T:System.Uri" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c1747-663">지정된 <see cref="T:System.String" /> 인스턴스 부분을 포함하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-663">A <see cref="T:System.String" /> that contains the specified portion of the <see cref="T:System.Uri" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-664">합니다 <xref:System.Uri.GetLeftPart%2A> 메서드가 반환 하 여 지정 하는 부분으로 끝나는 URI 문자열의 맨 왼쪽 부분을 포함 하는 문자열 `part`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-664">The <xref:System.Uri.GetLeftPart%2A> method returns a string containing the leftmost portion of the URI string, ending with the portion specified by `part`.</span></span>  
  
 <span data-ttu-id="c1747-665"><xref:System.Uri.GetLeftPart%2A> 다음과 같은 경우에 구분 기호를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-665"><xref:System.Uri.GetLeftPart%2A> includes delimiters in the following cases:</span></span>  
  
-   <span data-ttu-id="c1747-666"><xref:System.UriPartial.Scheme> 스키마 구분 기호를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-666"><xref:System.UriPartial.Scheme> includes the scheme delimiter.</span></span>  
  
-   <span data-ttu-id="c1747-667"><xref:System.UriPartial.Authority> 경로 구분 기호를 포함 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-667"><xref:System.UriPartial.Authority> does not include the path delimiter.</span></span>  
  
-   <span data-ttu-id="c1747-668"><xref:System.UriPartial.Path> 쿼리 또는 조각 구분 기호는 원래 URI에서 구분 기호를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-668"><xref:System.UriPartial.Path> includes any delimiters in the original URI up to the query or fragment delimiter.</span></span>  
  
-   <span data-ttu-id="c1747-669"><xref:System.UriPartial.Query> 포함 된 <xref:System.UriPartial.Path>, 쿼리 및 해당 구분 기호.</span><span class="sxs-lookup"><span data-stu-id="c1747-669"><xref:System.UriPartial.Query> includes the <xref:System.UriPartial.Path>, plus the query and its delimiter.</span></span>  
  
 <span data-ttu-id="c1747-670">다음 예제 URI 및 호출의 결과 보여 <xref:System.Uri.GetLeftPart%2A> 사용 하 여 <xref:System.UriPartial.Scheme>, <xref:System.UriPartial.Authority>합니다 <xref:System.UriPartial.Path>, 또는 <xref:System.UriPartial.Query>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-670">The following examples show a URI and the results of calling <xref:System.Uri.GetLeftPart%2A> with <xref:System.UriPartial.Scheme>, <xref:System.UriPartial.Authority>, <xref:System.UriPartial.Path>, or <xref:System.UriPartial.Query>.</span></span>  
  
|<span data-ttu-id="c1747-671">URI</span><span class="sxs-lookup"><span data-stu-id="c1747-671">URI</span></span>|<span data-ttu-id="c1747-672">Scheme</span><span class="sxs-lookup"><span data-stu-id="c1747-672">Scheme</span></span>|<span data-ttu-id="c1747-673">인증 기관</span><span class="sxs-lookup"><span data-stu-id="c1747-673">Authority</span></span>|<span data-ttu-id="c1747-674">Path</span><span class="sxs-lookup"><span data-stu-id="c1747-674">Path</span></span>|<span data-ttu-id="c1747-675">Query</span><span class="sxs-lookup"><span data-stu-id="c1747-675">Query</span></span>|  
|---------|------------|---------------|----------|-----------|  
|http://www.contoso.com/index.htm?date=today|<span data-ttu-id="c1747-676">http://</span><span class="sxs-lookup"><span data-stu-id="c1747-676">http://</span></span>|http://www.contoso.com|http://www.contoso.com/index.htm|http://www.contoso.com/index.htm?date=today|  
|http://www.contoso.com/index.htm#main|<span data-ttu-id="c1747-677">http://</span><span class="sxs-lookup"><span data-stu-id="c1747-677">http://</span></span>|http://www.contoso.com|http://www.contoso.com/index.htm|http://www.contoso.com/index.htm|  
|<span data-ttu-id="c1747-678">mailto:user@contoso.com?subject=uri</span><span class="sxs-lookup"><span data-stu-id="c1747-678">mailto:user@contoso.com?subject=uri</span></span>|<span data-ttu-id="c1747-679">mailto:</span><span class="sxs-lookup"><span data-stu-id="c1747-679">mailto:</span></span>|mailto:user@contoso.com|<span data-ttu-id="c1747-680">mailto:user@contoso.com?subject=uri</span><span class="sxs-lookup"><span data-stu-id="c1747-680">mailto:user@contoso.com?subject=uri</span></span>|<span data-ttu-id="c1747-681">\<없음 ></span><span class="sxs-lookup"><span data-stu-id="c1747-681">\<none></span></span>|  
|nntp://news.contoso.com/123456@contoso.com|<span data-ttu-id="c1747-682">nntp://</span><span class="sxs-lookup"><span data-stu-id="c1747-682">nntp://</span></span>|<span data-ttu-id="c1747-683">nntp://news.contoso.com</span><span class="sxs-lookup"><span data-stu-id="c1747-683">nntp://news.contoso.com</span></span>|nntp://news.contoso.com/123456@contoso.com|nntp://news.contoso.com/123456@contoso.com|  
|news:123456@contoso.com|<span data-ttu-id="c1747-684">뉴스:</span><span class="sxs-lookup"><span data-stu-id="c1747-684">news:</span></span>|news:123456@contoso.com|news:123456@contoso.com|<span data-ttu-id="c1747-685">\<없음 ></span><span class="sxs-lookup"><span data-stu-id="c1747-685">\<none></span></span>|  
|<span data-ttu-id="c1747-686">file://server/filename.ext</span><span class="sxs-lookup"><span data-stu-id="c1747-686">file://server/filename.ext</span></span>|<span data-ttu-id="c1747-687">file://</span><span class="sxs-lookup"><span data-stu-id="c1747-687">file://</span></span>|<span data-ttu-id="c1747-688">file://server</span><span class="sxs-lookup"><span data-stu-id="c1747-688">file://server</span></span>|<span data-ttu-id="c1747-689">file://server/filename.ext</span><span class="sxs-lookup"><span data-stu-id="c1747-689">file://server/filename.ext</span></span>|<span data-ttu-id="c1747-690">file://server/filename.ext</span><span class="sxs-lookup"><span data-stu-id="c1747-690">file://server/filename.ext</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c1747-691">다음 예제에서는 <xref:System.Uri> 인스턴스 및 경로 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-691">The following example creates a <xref:System.Uri> instance and writes the path to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]
 [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]
 [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-692">현재 <see cref="T:System.Uri" /> 인스턴스가 절대 인스턴스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-692">The current <see cref="T:System.Uri" /> instance is not an absolute instance.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c1747-693">지정된 <paramref name="part" />가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-693">The specified <paramref name="part" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="member this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="uri.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="c1747-694"><see cref="T:System.Runtime.Serialization.SerializationInfo" />를 serialize하는 데 필요한 정보가 포함된 <see cref="T:System.Uri" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-694">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Uri" />.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="c1747-695"><see cref="T:System.Runtime.Serialization.StreamingContext" />와 연결된 serialize된 스트림의 소스와 대상이 포함된 <see cref="T:System.Uri" />개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-695">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Uri" />.</span></span></param>
        <summary><span data-ttu-id="c1747-696">현재 인스턴스를 serialize하는 데 필요한 데이터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-696">Returns the data needed to serialize the current instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1747-697">serialization 메서드를 사용 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-697">to use serialization methods.</span></span> <span data-ttu-id="c1747-698">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="c1747-698">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="HexEscape">
      <MemberSignature Language="C#" Value="public static string HexEscape (char character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HexEscape(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.HexEscape(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HexEscape (character As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HexEscape(char character);" />
      <MemberSignature Language="F#" Value="static member HexEscape : char -&gt; string" Usage="System.Uri.HexEscape character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="c1747-699">16진수 표현으로 변환할 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-699">The character to convert to hexadecimal representation.</span></span></param>
        <summary><span data-ttu-id="c1747-700">지정된 문자를 16진수 값으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-700">Converts a specified character into its hexadecimal equivalent.</span></span></summary>
        <returns><span data-ttu-id="c1747-701">지정된 문자의 16진수 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-701">The hexadecimal representation of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-702">다음 예제에서는 16 진수 값에 문자를 변환 하 고 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-702">The following example converts a character to its hexadecimal equivalent and writes it to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#1)]
 [!code-csharp[NCLUriExamples#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#1)]
 [!code-vb[NCLUriExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1747-703"><paramref name="character" />가 255보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-703"><paramref name="character" /> is greater than 255.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HexUnescape">
      <MemberSignature Language="C#" Value="public static char HexUnescape (string pattern, ref int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char HexUnescape(string pattern, int32&amp; index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.HexUnescape(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HexUnescape (pattern As String, ByRef index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char HexUnescape(System::String ^ pattern, int % index);" />
      <MemberSignature Language="F#" Value="static member HexUnescape : string *  -&gt; char" Usage="System.Uri.HexUnescape (pattern, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="c1747-704">문자의 16진수 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-704">The hexadecimal representation of a character.</span></span></param>
        <param name="index"><span data-ttu-id="c1747-705">문자의 16진수 표현이 시작되는 <c>pattern</c>의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-705">The location in <c>pattern</c> where the hexadecimal representation of a character begins.</span></span></param>
        <summary><span data-ttu-id="c1747-706">지정된 문자의 16진수 표현을 문자로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-706">Converts a specified hexadecimal representation of a character to the character.</span></span></summary>
        <returns><span data-ttu-id="c1747-707"><paramref name="index" /> 위치에 있으며 16진수로 인코딩된 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-707">The character represented by the hexadecimal encoding at position <paramref name="index" />.</span></span> <span data-ttu-id="c1747-708"><paramref name="index" />의 문자가 16진수로 인코딩되지 않은 경우 <paramref name="index" />의 문자가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-708">If the character at <paramref name="index" /> is not hexadecimal encoded, the character at <paramref name="index" /> is returned.</span></span> <span data-ttu-id="c1747-709"><paramref name="index" />의 값이 증분되어 반환된 문자 다음에 오는 문자를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-709">The value of <paramref name="index" /> is incremented to point to the character following the one returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-710">다음 코드 예제에서는 여부를 확인 문자는 16 진수 인코딩, 그렇다면 해당 문자를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-710">The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#2)]
 [!code-csharp[NCLUriExamples#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#2)]
 [!code-vb[NCLUriExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1747-711"><paramref name="index" />가 0보다 작거나 <paramref name="pattern" />의 문자 수보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-711"><paramref name="index" /> is less than 0 or greater than or equal to the number of characters in <paramref name="pattern" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="System.Uri.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-712">이 인스턴스의 호스트 구성 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-712">Gets the host component of this instance.</span></span></summary>
        <value><span data-ttu-id="c1747-713">호스트 이름이 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-713">A <see cref="T:System.String" /> that contains the host name.</span></span> <span data-ttu-id="c1747-714">일반적으로 서버의 DNS 호스트 이름이나 IP 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-714">This is usually the DNS host name or IP address of the server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-715">달리는 <xref:System.Uri.Authority%2A> 속성, 속성 값이 포트 번호를 다루지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-715">Unlike the <xref:System.Uri.Authority%2A> property, this property value does not include the port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-716">다음 예제에서는 콘솔에 서버의 호스트 이름 (www.contoso.com)을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-716">The following example writes the host name (www.contoso.com) of the server to the console.</span></span>  
  
 [!code-cpp[Classic Uri.Host Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Host Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Host Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Host Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Host Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Host Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-717">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-717">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HostNameType">
      <MemberSignature Language="C#" Value="public UriHostNameType HostNameType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.UriHostNameType HostNameType" />
      <MemberSignature Language="DocId" Value="P:System.Uri.HostNameType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostNameType As UriHostNameType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property UriHostNameType HostNameType { UriHostNameType get(); };" />
      <MemberSignature Language="F#" Value="member this.HostNameType : UriHostNameType" Usage="System.Uri.HostNameType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriHostNameType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-718">URI에 지정된 호스트 이름의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-718">Gets the type of the host name specified in the URI.</span></span></summary>
        <value><span data-ttu-id="c1747-719"><see cref="T:System.UriHostNameType" /> 열거의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-719">A member of the <see cref="T:System.UriHostNameType" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-720">다음 예에서는 <xref:System.Uri> 인스턴스 및 쓰기는 <xref:System.Uri.HostNameType%2A> 콘솔.</span><span class="sxs-lookup"><span data-stu-id="c1747-720">The following example creates a <xref:System.Uri> instance and writes the <xref:System.Uri.HostNameType%2A> to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#9)]
 [!code-csharp[NCLUriExamples#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#9)]
 [!code-vb[NCLUriExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-721">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-721">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IdnHost">
      <MemberSignature Language="C#" Value="public string IdnHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IdnHost" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IdnHost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdnHost As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IdnHost { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IdnHost : string" Usage="System.Uri.IdnHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-722">Punycode를 적절하게 사용하는 호스트의 RFC 3490 규격 국제 도메인 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-722">The RFC 3490 compliant International Domain Name of the host, using Punycode as appropriate.</span></span> <span data-ttu-id="c1747-723">필요한 경우 이스케이프 해제된 후 이 문자열이 DNS 확인에 사용하기에 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-723">This string, after being unescaped if necessary, is safe to use for DNS resolution.</span></span></summary>
        <value><span data-ttu-id="c1747-724">IDN 표준에 따라 Punycode로 포맷된 호스트 이름을 반환합니다.<see cref="T:System.String" /></span><span class="sxs-lookup"><span data-stu-id="c1747-724">Returns the hostname, formatted with Punycode according to the IDN standard.<see cref="T:System.String" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-725">이 속성은 Punycode 형태로 도메인 이름이 필요로 하는 하위 수준 네트워킹 프로토콜의 사용에 대 한 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-725">This property is provided for the use of lower-level networking protocols that require the domain name in Punycode form.</span></span> <span data-ttu-id="c1747-726">사용 하 여 코드에는 해당 특정 형식으로 필요 하지 않으면, <xref:System.Uri.Host%2A> 호스트 이름에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-726">If your code does not require that specific format, use <xref:System.Uri.Host%2A> for the hostname.</span></span>  
  
 <span data-ttu-id="c1747-727">사용 되지 않는 <xref:System.Uri.DnsSafeHost%2A> 속성에 따라 달라 집니다 *app.config* 설정에는 Windows 스토어 응용 프로그램에서 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-727">The deprecated <xref:System.Uri.DnsSafeHost%2A> property is dependent on *app.config* settings, which cannot be changed by Windows Store applications.</span></span> <span data-ttu-id="c1747-728">IdnHost 안으로 제공 됩니다 <xref:System.Uri.DnsSafeHost%2A>이므로 <xref:System.Uri.IdnHost%2A> 안전한 지, 어떤 현재 관계 없이 DNS를 항상 되도록 보장 됩니다 *app.config* 설정이 필요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-728">IdnHost is provided as the preferred alternative to using <xref:System.Uri.DnsSafeHost%2A>, because <xref:System.Uri.IdnHost%2A> is guaranteed to always be DNS safe, no matter what the current *app.config* settings might be.</span></span>  

 <span data-ttu-id="c1747-729">(예를 들어, "http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"), 다음 IdnHost는 이스케이프 된 문자열 반환이 인스턴스를 생성 하는 이스케이프 된 문자열을 사용 하는 경우 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-729">If you used an escaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"), then IdnHost returns an escaped string.</span></span> <span data-ttu-id="c1747-730">DNS 확인을 위해 해당 문자열을 사용 하기 전에 IdnHost에서 반환 된 모든 이스케이프 된 문자열을 이스케이프 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-730">You should unescape any escaped string returned from IdnHost before using that string for DNS resolution.</span></span> <span data-ttu-id="c1747-731">주의 경우 데 잘못 된 이스케이프 되지 않은 문자열 (예를 들어, "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), 다음 IdnHost 이스케이프 되지 않은 문자열이 반환이 인스턴스를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-731">Be aware that if you used an invalid unescaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), then IdnHost returns an unescaped string.</span></span>


 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbsoluteUri">
      <MemberSignature Language="C#" Value="public bool IsAbsoluteUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbsoluteUri" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsAbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbsoluteUri As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbsoluteUri { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAbsoluteUri : bool" Usage="System.Uri.IsAbsoluteUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-732"><see cref="T:System.Uri" /> 인스턴스가 절대 URI인지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-732">Gets whether the <see cref="T:System.Uri" /> instance is absolute.</span></span></summary>
        <value><span data-ttu-id="c1747-733"><see cref="T:System.Boolean" /> 인스턴스가 절대 URI이면 <see langword="true" /> 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-733">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> instance is absolute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-734">이 속성은 `true` 하는 경우 문자열 또는 <xref:System.Uri> 생성자에 전달 된 인스턴스는 절대로 구문 분석할 수 <xref:System.Uri> 는 체계, 기관 및 경로 포함 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="c1747-734">This property is `true` if the string or <xref:System.Uri> instance that was passed into the constructor can be parsed as an absolute <xref:System.Uri> instance, which contains a scheme, an authority, and a path.</span></span> <span data-ttu-id="c1747-735">그렇지 않은 경우는 <xref:System.Uri> 인스턴스 상대 경로로 처리 되 고 스키마 또는 다른 URI 구성 요소를 생략할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-735">Otherwise, the <xref:System.Uri> instance is treated as relative and might omit the scheme or other URI components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBadFileSystemCharacter">
      <MemberSignature Language="C#" Value="protected virtual bool IsBadFileSystemCharacter (char character);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsBadFileSystemCharacter(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsBadFileSystemCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsBadFileSystemCharacter (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsBadFileSystemCharacter(char character);" />
      <MemberSignature Language="F#" Value="abstract member IsBadFileSystemCharacter : char -&gt; bool&#xA;override this.IsBadFileSystemCharacter : char -&gt; bool" Usage="uri.IsBadFileSystemCharacter character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="c1747-736">테스트할 <see cref="T:System.Char" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-736">The <see cref="T:System.Char" /> to test.</span></span></param>
        <summary><span data-ttu-id="c1747-737">파일 시스템 이름에 있는 문자가 잘못되었는지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-737">Gets whether a character is invalid in a file system name.</span></span></summary>
        <returns><span data-ttu-id="c1747-738">지정된 문자가 잘못되었으면 <see cref="T:System.Boolean" /> 값이 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-738">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the specified character is invalid; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-739">문자는 NTFS 파일 시스템에 대 한 규칙에 따라 분석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-739">The character is analyzed according to the rules for the NTFS file system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBaseOf">
      <MemberSignature Language="C#" Value="public bool IsBaseOf (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBaseOf(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsBaseOf(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBaseOf(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.IsBaseOf : Uri -&gt; bool" Usage="uri.IsBaseOf uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="c1747-740">테스트할 지정된 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-740">The specified <see cref="T:System.Uri" /> instance to test.</span></span></param>
        <summary><span data-ttu-id="c1747-741">현재 <see cref="T:System.Uri" /> 인스턴스가 지정된 <see cref="T:System.Uri" /> 인스턴스의 기본 URI인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-741">Determines whether the current <see cref="T:System.Uri" /> instance is a base of the specified <see cref="T:System.Uri" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c1747-742">현재 <see langword="true" /> 인스턴스가 <see cref="T:System.Uri" />의 기본 URI이면 <paramref name="uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-742"><see langword="true" /> if the current <see cref="T:System.Uri" /> instance is a base of <paramref name="uri" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-743"><xref:System.Uri.IsBaseOf%2A> 현재 비교 하는 데 사용 됩니다 <xref:System.Uri> 인스턴스를 지정 된 <xref:System.Uri> 이 URI에 지정 된 기본 인지 여부를 확인 하려면 <xref:System.Uri>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-743"><xref:System.Uri.IsBaseOf%2A> is used to compare the current <xref:System.Uri> instance to a specified <xref:System.Uri> to determine whether this URI is a base for the specified <xref:System.Uri>.</span></span> <span data-ttu-id="c1747-744">두 개를 비교 하는 경우 <xref:System.Uri> 사용자 정보를 기본 관계를 결정 하는 개체 (<xref:System.Uri.UserInfo%2A>) 평가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-744">When comparing two <xref:System.Uri> objects to determine a base relationship, the user information (<xref:System.Uri.UserInfo%2A>) is not evaluated.</span></span> <span data-ttu-id="c1747-745">Uri1과 uri2 두 Uri 비교 시 uri1는 마지막 슬래시 (/) 이후의 uri2의 모든 항목을 무시 하는 경우 두 Uri가 동일한 경우 uri2의 밑수입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-745">When comparing two URIs (uri1 and uri2), uri1 is the base of uri2 if, when you ignore everything in uri2 after the last slash (/), the two URIs are identical.</span></span> <span data-ttu-id="c1747-746">사용 하 여 http://host/path/path/file?query 기본 URI로 다음 표는 다른 Uri에 대 한 기본 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-746">Using http://host/path/path/file?query as the base URI, the following table shows whether it is a base for other URIs.</span></span>  
  
|<span data-ttu-id="c1747-747">URI</span><span class="sxs-lookup"><span data-stu-id="c1747-747">URI</span></span>|<span data-ttu-id="c1747-748">http://host/path/path/file?query 형식의 기본 형식 인지</span><span class="sxs-lookup"><span data-stu-id="c1747-748">http://host/path/path/file?query is base of</span></span>|  
|---------|------------------------------------------------------|  
|http://host/path/path/file/|<span data-ttu-id="c1747-749">예</span><span class="sxs-lookup"><span data-stu-id="c1747-749">yes</span></span>|  
|http://host/path/path/#fragment|<span data-ttu-id="c1747-750">예</span><span class="sxs-lookup"><span data-stu-id="c1747-750">yes</span></span>|  
|<span data-ttu-id="c1747-751">http://host/path/path/MoreDir/"</span><span class="sxs-lookup"><span data-stu-id="c1747-751">http://host/path/path/MoreDir/"</span></span>|<span data-ttu-id="c1747-752">예</span><span class="sxs-lookup"><span data-stu-id="c1747-752">yes</span></span>|  
|http://host/path/path/OtherFile?Query|<span data-ttu-id="c1747-753">예</span><span class="sxs-lookup"><span data-stu-id="c1747-753">yes</span></span>|  
|http://host/path/path/|<span data-ttu-id="c1747-754">예</span><span class="sxs-lookup"><span data-stu-id="c1747-754">yes</span></span>|  
|http://host/path/path/file|<span data-ttu-id="c1747-755">예</span><span class="sxs-lookup"><span data-stu-id="c1747-755">yes</span></span>|  
|http://host/path/path|<span data-ttu-id="c1747-756">no</span><span class="sxs-lookup"><span data-stu-id="c1747-756">no</span></span>|  
|http://host/path/path?query|<span data-ttu-id="c1747-757">아니요</span><span class="sxs-lookup"><span data-stu-id="c1747-757">no</span></span>|  
|http://host/path/path#Fragment|<span data-ttu-id="c1747-758">아니요</span><span class="sxs-lookup"><span data-stu-id="c1747-758">no</span></span>|  
|http://host/path/path2/|<span data-ttu-id="c1747-759">아니요</span><span class="sxs-lookup"><span data-stu-id="c1747-759">no</span></span>|  
<span data-ttu-id="c1747-760">://host/path/path2/MoreDir</span><span class="sxs-lookup"><span data-stu-id="c1747-760">://host/path/path2/MoreDir</span></span>|<span data-ttu-id="c1747-761">아니요</span><span class="sxs-lookup"><span data-stu-id="c1747-761">no</span></span>|  
|http://host/path/File|<span data-ttu-id="c1747-762">아니요</span><span class="sxs-lookup"><span data-stu-id="c1747-762">no</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c1747-763">이 예제에서는 만듭니다는 <xref:System.Uri> 자료를 나타내는 인스턴스 <xref:System.Uri> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c1747-763">This example creates a <xref:System.Uri> instance that represents a base <xref:System.Uri> instance.</span></span> <span data-ttu-id="c1747-764">그런 다음 두 번째 만듭니다 <xref:System.Uri> 문자열 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-764">It then creates a second <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="c1747-765">호출 <xref:System.Uri.IsBaseOf%2A> 기본 인스턴스는 두 번째 인스턴스의 기본 인지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-765">It calls <xref:System.Uri.IsBaseOf%2A> to determine whether the base instance is the base of the second instance.</span></span> <span data-ttu-id="c1747-766">결과 콘솔에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-766">The outcome is written to the console.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#6)]
 [!code-csharp[NCLUriEnhancements#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#6)]
 [!code-vb[NCLUriEnhancements#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-767"><paramref name="uri" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-767"><paramref name="uri" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultPort">
      <MemberSignature Language="C#" Value="public bool IsDefaultPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultPort" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsDefaultPort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaultPort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaultPort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefaultPort : bool" Usage="System.Uri.IsDefaultPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-768">URI의 포트 값이 이 체계의 기본값인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-768">Gets whether the port value of the URI is the default for this scheme.</span></span></summary>
        <value><span data-ttu-id="c1747-769"><see cref="T:System.Boolean" /> 속성 값이 이 체계의 기본 포트이면 <see langword="true" /> 값이 <see cref="P:System.Uri.Port" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-769">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the value in the <see cref="P:System.Uri.Port" /> property is the default port for this scheme; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-770">다음 예제에서는 <xref:System.Uri> 인스턴스 및 기본 포트를 사용 하는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-770">The following example creates a <xref:System.Uri> instance and checks whether it uses the default port.</span></span>  
  
 [!code-cpp[NCLUriExamples#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#4)]
 [!code-csharp[NCLUriExamples#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#4)]
 [!code-vb[NCLUriExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-771">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-771">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsExcludedCharacter">
      <MemberSignature Language="C#" Value="protected static bool IsExcludedCharacter (char character);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool IsExcludedCharacter(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsExcludedCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function IsExcludedCharacter (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool IsExcludedCharacter(char character);" />
      <MemberSignature Language="F#" Value="static member IsExcludedCharacter : char -&gt; bool" Usage="System.Uri.IsExcludedCharacter character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="c1747-772">테스트할 <see cref="T:System.Char" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-772">The <see cref="T:System.Char" /> to test.</span></span></param>
        <summary><span data-ttu-id="c1747-773">지정된 문자가 이스케이프되어야 하는지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-773">Gets whether the specified character should be escaped.</span></span></summary>
        <returns><span data-ttu-id="c1747-774">지정된 문자가 이스케이프되어야 하면 <see cref="T:System.Boolean" /> 값이 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-774">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the specified character should be escaped; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFile">
      <MemberSignature Language="C#" Value="public bool IsFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFile" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFile { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFile : bool" Usage="System.Uri.IsFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-775">지정된 <see cref="T:System.Uri" />가 파일 URI인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-775">Gets a value indicating whether the specified <see cref="T:System.Uri" /> is a file URI.</span></span></summary>
        <value><span data-ttu-id="c1747-776"><see cref="T:System.Boolean" />가 파일 URI이면 <see langword="true" /> 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-776">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> is a file URI; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-777">합니다 <xref:System.Uri.IsFile%2A> 속성은 `true` 때 합니다 <xref:System.Uri.Scheme%2A> 속성이 <xref:System.Uri.UriSchemeFile>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-777">The <xref:System.Uri.IsFile%2A> property is `true` when the <xref:System.Uri.Scheme%2A> property equals <xref:System.Uri.UriSchemeFile>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-778">다음 예제에서는 <xref:System.Uri> 인스턴스 및 파일 URI 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-778">The following example creates a <xref:System.Uri> instance and determines whether it is a file URI.</span></span>  
  
 [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]
 [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]
 [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-779">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-779">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsHexDigit">
      <MemberSignature Language="C#" Value="public static bool IsHexDigit (char character);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHexDigit(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsHexDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHexDigit (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHexDigit(char character);" />
      <MemberSignature Language="F#" Value="static member IsHexDigit : char -&gt; bool" Usage="System.Uri.IsHexDigit character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="c1747-780">유효성을 확인할 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-780">The character to validate.</span></span></param>
        <summary><span data-ttu-id="c1747-781">지정된 문자가 유효한 16진수인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-781">Determines whether a specified character is a valid hexadecimal digit.</span></span></summary>
        <returns><span data-ttu-id="c1747-782">문자가 유효한 16진수이면 <see cref="T:System.Boolean" /> 값이 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-782">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the character is a valid hexadecimal digit; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-783">16 진수 숫자 0-9와 A-f 또는 a-f 문자는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-783">Hexadecimal digits are the digits 0 to 9 and the letters A-F or a-f.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-784">다음 예제에서는 인지 결정 문자를 16 진수 문자, 인 경우 해당 10 진수 값을 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-784">The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#1)]
 [!code-csharp[NCLUriExamples#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#1)]
 [!code-vb[NCLUriExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHexEncoding">
      <MemberSignature Language="C#" Value="public static bool IsHexEncoding (string pattern, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHexEncoding(string pattern, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsHexEncoding(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHexEncoding (pattern As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHexEncoding(System::String ^ pattern, int index);" />
      <MemberSignature Language="F#" Value="static member IsHexEncoding : string * int -&gt; bool" Usage="System.Uri.IsHexEncoding (pattern, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="c1747-785">확인할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-785">The string to check.</span></span></param>
        <param name="index"><span data-ttu-id="c1747-786">16진수 인코딩을 확인할 <c>pattern</c>의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-786">The location in <c>pattern</c> to check for hexadecimal encoding.</span></span></param>
        <summary><span data-ttu-id="c1747-787">문자열의 문자가 16진수로 인코딩되었는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-787">Determines whether a character in a string is hexadecimal encoded.</span></span></summary>
        <returns><span data-ttu-id="c1747-788"><see cref="T:System.Boolean" />이 지정된 위치에 16진수로 인코딩되어 있으면 <see langword="true" /> 값이 <paramref name="pattern" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-788">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if <paramref name="pattern" /> is hexadecimal encoded at the specified location; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-789"><xref:System.Uri.IsHexEncoding%2A> 메서드 확인 인코딩에 대 한 16 진수 문자열에서 "%hexhex" 패턴 "hex" 위치 뒤에 오는 숫자 0에서 9에는 문자 A-f (대/소문자 구분).</span><span class="sxs-lookup"><span data-stu-id="c1747-789">The <xref:System.Uri.IsHexEncoding%2A> method checks for hexadecimal encoding that follows the pattern "%hexhex" in a string, where "hex" is a digit from 0 to 9 or a letter from A-F (case-insensitive).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-790">다음 코드 예제에서는 여부를 확인 문자는 16 진수 인코딩, 그렇다면 해당 문자를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-790">The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#2)]
 [!code-csharp[NCLUriExamples#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#2)]
 [!code-vb[NCLUriExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoopback">
      <MemberSignature Language="C#" Value="public bool IsLoopback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsLoopback" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoopback { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoopback : bool" Usage="System.Uri.IsLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-791">지정된 <see cref="T:System.Uri" />가 로컬 호스트를 참조하는지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-791">Gets whether the specified <see cref="T:System.Uri" /> references the local host.</span></span></summary>
        <value><span data-ttu-id="c1747-792">이 <see cref="T:System.Boolean" />가 로컬 호스트를 참조하면 <see langword="true" /> 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-792">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if this <see cref="T:System.Uri" /> references the local host; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-793"><xref:System.Uri.IsLoopback%2A> 반환 `true` 이 인스턴스가 만들어질 때 지정 된 URI는 127.0.0.1, 루프백, 하는 경우 localhost 또는 URI를 지정 하지 않은 경우 또는 호스트 정보 (예를 들어 file:///c:Dir/file.txt).</span><span class="sxs-lookup"><span data-stu-id="c1747-793"><xref:System.Uri.IsLoopback%2A> returns `true` if the URI specified when this instance was created was 127.0.0.1, loopback, or localhost, or if the URI did not specify host information (for example, file:///c:Dir/file.txt).</span></span> <span data-ttu-id="c1747-794">다른 모든 Uri 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-794">All other URIs return `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-795">다음 예제에서는 <xref:System.Uri> 인스턴스 및 로컬 호스트를 참조 하는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-795">The following example creates a <xref:System.Uri> instance and determines whether it references a local host.</span></span>  
  
 [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]
 [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]
 [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-796">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-796">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReservedCharacter">
      <MemberSignature Language="C#" Value="protected virtual bool IsReservedCharacter (char character);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsReservedCharacter(char character) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsReservedCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsReservedCharacter (character As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsReservedCharacter(char character);" />
      <MemberSignature Language="F#" Value="abstract member IsReservedCharacter : char -&gt; bool&#xA;override this.IsReservedCharacter : char -&gt; bool" Usage="uri.IsReservedCharacter character" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="character" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="character"><span data-ttu-id="c1747-797">테스트할 <see cref="T:System.Char" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-797">The <see cref="T:System.Char" /> to test.</span></span></param>
        <summary><span data-ttu-id="c1747-798">지정된 문자가 예약된 문자인지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-798">Gets whether the specified character is a reserved character.</span></span></summary>
        <returns><span data-ttu-id="c1747-799">지정된 문자가 예약된 문자이면 <see cref="T:System.Boolean" /> 값이 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-799">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the specified character is a reserved character otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnc">
      <MemberSignature Language="C#" Value="public bool IsUnc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnc" />
      <MemberSignature Language="DocId" Value="P:System.Uri.IsUnc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnc As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnc { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnc : bool" Usage="System.Uri.IsUnc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-800">지정된 <see cref="T:System.Uri" />가 UNC(Universal Naming Convention) 경로인지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-800">Gets whether the specified <see cref="T:System.Uri" /> is a universal naming convention (UNC) path.</span></span></summary>
        <value><span data-ttu-id="c1747-801"><see cref="T:System.Boolean" />가 UNC 경로이면 <see langword="true" /> 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-801">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> is a UNC path; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-802"><xref:System.Uri.IsUnc%2A> 속성은 `true` 하는 경우 지정 된 <xref:System.Uri> 인스턴스가 UNC 경로 (같은 \\\server\folder 또는 file://server/folder).</span><span class="sxs-lookup"><span data-stu-id="c1747-802">The <xref:System.Uri.IsUnc%2A> property is `true` if the specified <xref:System.Uri> instance is a UNC path (such as \\\server\folder or file://server/folder).</span></span> <span data-ttu-id="c1747-803">이 속성은 항상 반환 `true` URI는 file:// scheme 있고 호스트 구성 요소를 지정 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="c1747-803">This property always returns `true` if the URI has the file:// scheme and specifies a host component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-804">다음 예제에서는 <xref:System.Uri> 인스턴스 및 UNC 경로 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-804">The following example creates a <xref:System.Uri> instance and determines whether it is a UNC path.</span></span>  
  
 [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]
 [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]
 [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-805">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-805">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsWellFormedOriginalString">
      <MemberSignature Language="C#" Value="public bool IsWellFormedOriginalString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsWellFormedOriginalString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsWellFormedOriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Function IsWellFormedOriginalString () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsWellFormedOriginalString();" />
      <MemberSignature Language="F#" Value="member this.IsWellFormedOriginalString : unit -&gt; bool" Usage="uri.IsWellFormedOriginalString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1747-806">이 <see cref="T:System.Uri" />를 구성하는 데 사용된 문자열의 형식이 올바른지, 이후에 문자열을 이스케이프하지 않아도 되는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-806">Indicates whether the string used to construct this <see cref="T:System.Uri" /> was well-formed and is not required to be further escaped.</span></span></summary>
        <returns><span data-ttu-id="c1747-807">문자열이 제대로 구성되었으면 <see cref="T:System.Boolean" /> 값이 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-807">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the string was well-formed; else <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-808">문자열을 제대로 구성에 따라 RFC 2396 및 RFC 2732 기본적으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-808">The string is considered to be well-formed in accordance with RFC 2396 and RFC 2732 by default.</span></span> <span data-ttu-id="c1747-809">문자열은 RFC 3986 및 RFC 3987에 따라 제대로 구성 된 것으로 간주 됩니다 International Resource Identifier (IRIs) 또는 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-809">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is considered to be well-formed in accordance with RFC 3986 and RFC 3987</span></span>  
  
 <span data-ttu-id="c1747-810">문자열은 잘못 구성 된, 다음 조건 중 하나가 발생할 경우에 false를 반환 하도록 메서드를 일으키는 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-810">The string is considered poorly formed, causing the method to return false, if any of the following conditions occur.</span></span>  
  
|<span data-ttu-id="c1747-811">Error</span><span class="sxs-lookup"><span data-stu-id="c1747-811">Error</span></span>|<span data-ttu-id="c1747-812">예제</span><span class="sxs-lookup"><span data-stu-id="c1747-812">Example</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="c1747-813">문자열은 올바르게 이스케이프 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-813">The string is not correctly escaped.</span></span>|<span data-ttu-id="c1747-814">[http://www.contoso.com/path???/file](http://www.contoso.com/path???/file) 이름</span><span class="sxs-lookup"><span data-stu-id="c1747-814">[http://www.contoso.com/path???/file](http://www.contoso.com/path???/file) name</span></span>|  
|<span data-ttu-id="c1747-815">문자열은 절대 <xref:System.Uri> 암시적 파일을 나타내는 <xref:System.Uri>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-815">The string is an absolute <xref:System.Uri> that represents an implicit file <xref:System.Uri>.</span></span>|<span data-ttu-id="c1747-816">c:\\\directory\filename</span><span class="sxs-lookup"><span data-stu-id="c1747-816">c:\\\directory\filename</span></span>|  
|<span data-ttu-id="c1747-817">이 문자열은 절대 URI의 경로 앞에 슬래시를이 누락 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-817">The string is an absolute URI that is missing a slash before the path.</span></span>|<span data-ttu-id="c1747-818">file://c:/directory/filename</span><span class="sxs-lookup"><span data-stu-id="c1747-818">file://c:/directory/filename</span></span>|  
|<span data-ttu-id="c1747-819">문자열 이스케이프 백슬래시가 포함 슬래시로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-819">The string contains unescaped backslashes even if they are treated as forward slashes.</span></span>|<span data-ttu-id="c1747-820">http:\\\host/path/file</span><span class="sxs-lookup"><span data-stu-id="c1747-820">http:\\\host/path/file</span></span>|  
|<span data-ttu-id="c1747-821">문자열을 나타내는 계층적 절대 <xref:System.Uri> "://"에 포함 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-821">The string represents a hierarchical absolute <xref:System.Uri> and does not contain "://".</span></span>|<span data-ttu-id="c1747-822">www.contoso.com/path/file</span><span class="sxs-lookup"><span data-stu-id="c1747-822">www.contoso.com/path/file</span></span>|  
|<span data-ttu-id="c1747-823">에 대 한 파서를 <xref:System.Uri.Scheme%2A?displayProperty=nameWithType> 원래 문자열을 제대로 구성 되지 않았음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-823">The parser for the <xref:System.Uri.Scheme%2A?displayProperty=nameWithType> indicates that the original string was not well-formed.</span></span>|<span data-ttu-id="c1747-824">이 예제에서는 URI의 구성표에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-824">The example depends on the scheme of the URI.</span></span>|  
  
 <span data-ttu-id="c1747-825">기본적으로 문자열을이 만드는 데 <xref:System.Uri> RFC 2396 및 RFC 2732에 따라 잘 구성 된 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-825">By default, the string used to construct this <xref:System.Uri> are considered well-formed in accordance with RFC 2396 and RFC 2732.</span></span>  
  
 <span data-ttu-id="c1747-826">다국어 도메인 이름 (IDN) 지원과 식별자 IRI (International Resource)는 사용 하는 경우,이 생성 하는 데 문자열 <xref:System.Uri> RFC 3986 및 RFC 3987을 사용 하 여 따라 잘 구성 된 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-826">When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the string used to construct this <xref:System.Uri> are considered well-formed in accordance with RFC 3986 and RFC 3987.</span></span> <span data-ttu-id="c1747-827">IRI를 지원 하기 위해 사용 하는 Punycode 이름 ASCII 문자만 포함 하 고 항상 xn--접두사로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-827">Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix.</span></span>  
  
 <span data-ttu-id="c1747-828">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-828">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://www.ietf.org/">http://www.ietf.org</related>
      </Docs>
    </Member>
    <Member MemberName="IsWellFormedUriString">
      <MemberSignature Language="C#" Value="public static bool IsWellFormedUriString (string uriString, UriKind uriKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWellFormedUriString(string uriString, valuetype System.UriKind uriKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWellFormedUriString(System::String ^ uriString, UriKind uriKind);" />
      <MemberSignature Language="F#" Value="static member IsWellFormedUriString : string * UriKind -&gt; bool" Usage="System.Uri.IsWellFormedUriString (uriString, uriKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
        <Parameter Name="uriKind" Type="System.UriKind" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="c1747-829"><see cref="T:System.Uri" /> 생성을 시도하는 데 사용되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-829">The string used to attempt to construct a <see cref="T:System.Uri" />.</span></span></param>
        <param name="uriKind"><span data-ttu-id="c1747-830"><c>uriString</c>에 있는 <see cref="T:System.Uri" />의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-830">The type of the <see cref="T:System.Uri" /> in <c>uriString</c>.</span></span></param>
        <summary><span data-ttu-id="c1747-831">문자열로 URI 생성을 시도하여 문자열 형식이 올바른지 여부를 나타내고 이후에 문자열을 이스케이프하지 않아도 되는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-831">Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.</span></span></summary>
        <returns><span data-ttu-id="c1747-832">문자열이 제대로 구성되었으면 <see cref="T:System.Boolean" /> 값이 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-832">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the string was well-formed; else <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-833">버전 4.5 이전 버전의.NET에 기본적으로 문자열 간주 됩니다 RFC 2396 및 RFC 2732 따른 올바른 형식된.</span><span class="sxs-lookup"><span data-stu-id="c1747-833">In versions of .NET before version 4.5, by default the string is considered well-formed in accordance with RFC 2396 and RFC 2732.</span></span> <span data-ttu-id="c1747-834">다국어 리소스 식별자 (IRIs) 또는 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 문자열 RFC 3986 및 RFC 3987에 따라 올바른 형식된으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-834">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing are enabled, the string is considered well-formed in accordance with RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="c1747-835">.NET 4.5부터, 문자열은 항상 간주 따라 잘 구성 된 RFC 3986 및 RFC 3987 여부 IRI 또는 IDN은 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-835">Beginning in .NET 4.5, strings are always considered well-formed in accordance with RFC 3986 and RFC 3987, whether or not IRI or IDN are enabled.</span></span> <span data-ttu-id="c1747-836">그러나 이것이.NET 4.5를 대상으로 하는 앱에 대 한 true 이상.</span><span class="sxs-lookup"><span data-stu-id="c1747-836">Note, however, that this is only true for apps that target .NET 4.5 or later.</span></span> <span data-ttu-id="c1747-837">.NET 4.0을 대상으로 하는 앱 호환성 코드를 호출 하 고 이전 (4.5 버전 이전의) 동작이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-837">Apps that target .NET 4.0 invoke compatibility code, and experience the old (pre-4.5) behavior.</span></span>  
  
 <span data-ttu-id="c1747-838">문자열을 잘못 구성 된, 다음 조건 중 하나가 발생할 경우에 false를 반환 하도록 메서드를 일으키는 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-838">The string is considered poorly formed, causing the method to return false, if any of the following conditions occur</span></span>  
  
|<span data-ttu-id="c1747-839">Error</span><span class="sxs-lookup"><span data-stu-id="c1747-839">Error</span></span>|<span data-ttu-id="c1747-840">예제</span><span class="sxs-lookup"><span data-stu-id="c1747-840">Example</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="c1747-841">문자열은 올바르게 이스케이프 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-841">The string is not correctly escaped.</span></span>|<span data-ttu-id="c1747-842">[http://www.contoso.com/path???/file](http://www.contoso.com/path???/file) 이름</span><span class="sxs-lookup"><span data-stu-id="c1747-842">[http://www.contoso.com/path???/file](http://www.contoso.com/path???/file) name</span></span>|  
|<span data-ttu-id="c1747-843">문자열은 절대 <xref:System.Uri> 암시적 파일을 나타내는 <xref:System.Uri>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-843">The string is an absolute <xref:System.Uri> that represents an implicit file <xref:System.Uri>.</span></span>|<span data-ttu-id="c1747-844">c:\\\directory\filename</span><span class="sxs-lookup"><span data-stu-id="c1747-844">c:\\\directory\filename</span></span>|  
|<span data-ttu-id="c1747-845">이 문자열은 절대 URI의 경로 앞에 슬래시를이 누락 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-845">The string is an absolute URI that is missing a slash before the path.</span></span>|<span data-ttu-id="c1747-846">file://c:/directory/filename</span><span class="sxs-lookup"><span data-stu-id="c1747-846">file://c:/directory/filename</span></span>|  
|<span data-ttu-id="c1747-847">문자열 이스케이프 백슬래시가 포함 슬래시도 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-847">The string contains unescaped backslashes even if they will be treated as forward slashes</span></span>|<span data-ttu-id="c1747-848">http:\\\host/path/file</span><span class="sxs-lookup"><span data-stu-id="c1747-848">http:\\\host/path/file</span></span>|  
|<span data-ttu-id="c1747-849">문자열을 나타내는 계층적 절대 <xref:System.Uri> "://"에 포함 되어 있지 않습니다</span><span class="sxs-lookup"><span data-stu-id="c1747-849">The string represents a hierarchical absolute <xref:System.Uri> and does not contain "://"</span></span>|<span data-ttu-id="c1747-850">www.contoso.com/path/file</span><span class="sxs-lookup"><span data-stu-id="c1747-850">www.contoso.com/path/file</span></span>|  
|<span data-ttu-id="c1747-851">에 대 한 파서를 <xref:System.Uri.Scheme%2A> 원래 문자열을 제대로 구성 되지 않았음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-851">The parser for the <xref:System.Uri.Scheme%2A> indicates that the original string was not well-formed.</span></span>|<span data-ttu-id="c1747-852">이 예제에서는 URI의 구성표에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-852">The example depends on the scheme of the URI.</span></span>|  
|<span data-ttu-id="c1747-853">상대 Uri에 콜론을 사용 하 여.NET 4.5부터 (': ')가 첫 번째 세그먼트에 고려 되지 않습니다 잘 구성 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-853">Beginning with .NET 4.5, relative URIs with a colon (':') in their first segment are not considered well-formed.</span></span>|<span data-ttu-id="c1747-854">2013.05.29_14:33:41</span><span class="sxs-lookup"><span data-stu-id="c1747-854">2013.05.29_14:33:41</span></span>|  
  
 <span data-ttu-id="c1747-855">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-855">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://www.ietf.org/">http://www.ietf.org</related>
      </Docs>
    </Member>
    <Member MemberName="LocalPath">
      <MemberSignature Language="C#" Value="public string LocalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalPath" />
      <MemberSignature Language="DocId" Value="P:System.Uri.LocalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalPath : string" Usage="System.Uri.LocalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-856">파일 이름에 대한 로컬 운영 체제 표현을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-856">Gets a local operating-system representation of a file name.</span></span></summary>
        <value><span data-ttu-id="c1747-857">파일 이름에 대한 로컬 운영 체제 표현이 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-857">A <see cref="T:System.String" /> that contains the local operating-system representation of a file name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-858">이 속성에서 반환한 값 이스케이프 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-858">The value returned by this property is unescaped.</span></span> <span data-ttu-id="c1747-859">모든 슬래시 (/)을 Windows 파일 경로로 경로가 인식 되 면 이전 버전과 슬래시 바뀝니다 (\\).</span><span class="sxs-lookup"><span data-stu-id="c1747-859">If the path is recognized as a Windows file path, all forward slashes (/) are replaced by backward slashes (\\).</span></span>  
  
 <span data-ttu-id="c1747-860">URI에 대 한 `file://computer/file.ext`, 절대 경로가 `/file.ext` 로컬 경로 이며 `\\computer\file.ext`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-860">For the URI `file://computer/file.ext`, the absolute path is `/file.ext` and the local path is `\\computer\file.ext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-861">다음 예제에서는 <xref:System.Uri> 인스턴스 및 로컬 경로를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-861">The following example creates a <xref:System.Uri> instance and writes the local path to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#6)]
 [!code-csharp[NCLUriExamples#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#6)]
 [!code-vb[NCLUriExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-862">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-862">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public string MakeRelative (Uri toUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MakeRelative(class System.Uri toUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.MakeRelative(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function MakeRelative (toUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MakeRelative(Uri ^ toUri);" />
      <MemberSignature Language="F#" Value="member this.MakeRelative : Uri -&gt; string" Usage="uri.MakeRelative toUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The method has been deprecated. Please use MakeRelativeUri(Uri uri). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="toUri"><span data-ttu-id="c1747-863">현재 URI와 비교할 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-863">The URI to compare to the current URI.</span></span></param>
        <summary><span data-ttu-id="c1747-864">두 <see cref="T:System.Uri" /> 인스턴스 간의 차이점을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-864">Determines the difference between two <see cref="T:System.Uri" /> instances.</span></span></summary>
        <returns><span data-ttu-id="c1747-865">이 URI 인스턴스와 <paramref name="toUri" />의 호스트 이름 및 체계가 같으면 이 메서드에서 상대 URI를 나타내는 <see cref="T:System.String" />을 반환합니다. 이 상대 URI가 현재 URI 인스턴스에 추가되면 <paramref name="toUri" /> 매개 변수가 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-865">If the hostname and scheme of this URI instance and <paramref name="toUri" /> are the same, then this method returns a <see cref="T:System.String" /> that represents a relative URI that, when appended to the current URI instance, yields the <paramref name="toUri" /> parameter.</span></span>  
  
<span data-ttu-id="c1747-866">호스트 이름이나 체계가 다르면 이 메서드에서 <see cref="T:System.String" /> 매개 변수를 나타내는 <paramref name="toUri" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-866">If the hostname or scheme is different, then this method returns a <see cref="T:System.String" /> that represents the <paramref name="toUri" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-867">다음 표에서 URI 인스턴스 `toUri`, 호출의 결과 <xref:System.Uri.MakeRelative%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-867">The following table shows the URI instance, `toUri`, and the results of calling <xref:System.Uri.MakeRelative%2A>.</span></span>  
  
|<span data-ttu-id="c1747-868">현재 URI 인스턴스</span><span class="sxs-lookup"><span data-stu-id="c1747-868">Current URI instance</span></span>|`toUri`|<span data-ttu-id="c1747-869">반환 값</span><span class="sxs-lookup"><span data-stu-id="c1747-869">Return value</span></span>|  
|--------------------------|-------------|------------------|  
|http://www.contoso.com/|http://www.contoso.com/test/test.htm|<span data-ttu-id="c1747-870">test/test.htm</span><span class="sxs-lookup"><span data-stu-id="c1747-870">test/test.htm</span></span>|  
|http://www.contoso.com/test1/|http://www.contoso.com/|<span data-ttu-id="c1747-871">../</span><span class="sxs-lookup"><span data-stu-id="c1747-871">../</span></span>|  
|http://www.contoso.com:8000/|http://www.contoso.com/test/test.htm|http://www.contoso.com/test/test.htm|  
|http://username@www.contoso.com/|http://www.contoso.com/test1/test1.txt|<span data-ttu-id="c1747-872">test1/test1.txt</span><span class="sxs-lookup"><span data-stu-id="c1747-872">test1/test1.txt</span></span>|  
  
 <span data-ttu-id="c1747-873">사용자 정보를 URI에 있는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-873">User information, if present in the URI, is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-874">다음 예제에서는 2 <xref:System.Uri> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c1747-874">The following example creates 2 <xref:System.Uri> instances.</span></span> <span data-ttu-id="c1747-875">경로 정보 차이 콘솔에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-875">The difference in the path information is written to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#3)]
 [!code-csharp[NCLUriExamples#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#3)]
 [!code-vb[NCLUriExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-876"><paramref name="toUri" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-876"><paramref name="toUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-877">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-877">This instance represents a relative URI, and this method is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeRelativeUri">
      <MemberSignature Language="C#" Value="public Uri MakeRelativeUri (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri MakeRelativeUri(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.MakeRelativeUri(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ MakeRelativeUri(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.MakeRelativeUri : Uri -&gt; Uri" Usage="uri.MakeRelativeUri uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="c1747-878">현재 URI와 비교할 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-878">The URI to compare to the current URI.</span></span></param>
        <summary><span data-ttu-id="c1747-879">두 <see cref="T:System.Uri" /> 인스턴스 간의 차이점을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-879">Determines the difference between two <see cref="T:System.Uri" /> instances.</span></span></summary>
        <returns><span data-ttu-id="c1747-880">이 URI 인스턴스와 <paramref name="uri" />의 호스트 이름 및 스키마가 같으면 이 메서드에서 상대 <see cref="T:System.Uri" />를 반환합니다. 이 상대 URI가 현재 URI 인스턴스에 추가되면 <paramref name="uri" />가 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-880">If the hostname and scheme of this URI instance and <paramref name="uri" /> are the same, then this method returns a relative <see cref="T:System.Uri" /> that, when appended to the current URI instance, yields <paramref name="uri" />.</span></span>  
  
<span data-ttu-id="c1747-881">호스트 이름이나 체계가 다르면 이 메서드에서 <see cref="T:System.Uri" /> 매개 변수를 나타내는 <paramref name="uri" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-881">If the hostname or scheme is different, then this method returns a <see cref="T:System.Uri" /> that represents the <paramref name="uri" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-882">다음 표에서 URI 인스턴스 `toUri`, 호출의 결과 <xref:System.Uri.MakeRelativeUri%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-882">The following table shows the URI instance, `toUri`, and the results of calling <xref:System.Uri.MakeRelativeUri%2A>.</span></span>  
  
|<span data-ttu-id="c1747-883">현재 URI 인스턴스</span><span class="sxs-lookup"><span data-stu-id="c1747-883">Current URI instance</span></span>|`toUri`|<span data-ttu-id="c1747-884">반환 값</span><span class="sxs-lookup"><span data-stu-id="c1747-884">Return value</span></span>|  
|--------------------------|-------------|------------------|  
|http://www.contoso.com/|http://www.contoso.com/test/test.htm|<span data-ttu-id="c1747-885">test/test.htm</span><span class="sxs-lookup"><span data-stu-id="c1747-885">test/test.htm</span></span>|  
|http://www.contoso.com/test1/|http://www.contoso.com/|<span data-ttu-id="c1747-886">../</span><span class="sxs-lookup"><span data-stu-id="c1747-886">../</span></span>|  
|http://www.contoso.com:8000/|http://www.contoso.com/test/test.htm|http://www.contoso.com/test/test.htm|  
|http://username@www.contoso.com/|http://www.contoso.com/test1/test1.txt|<span data-ttu-id="c1747-887">test1/test1.txt</span><span class="sxs-lookup"><span data-stu-id="c1747-887">test1/test1.txt</span></span>|  
  
 <span data-ttu-id="c1747-888">사용자 정보를 URI에 있는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-888">User information, if present in the URI, is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-889">다음 예제에서는 2 <xref:System.Uri> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c1747-889">The following example creates 2 <xref:System.Uri> instances.</span></span> <span data-ttu-id="c1747-890">경로 정보 차이 콘솔에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-890">The difference in the path information is written to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#3)]
 [!code-csharp[NCLUriExamples#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#3)]
 [!code-vb[NCLUriExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-891"><paramref name="uri" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-891"><paramref name="uri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-892">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-892">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Uri uri1, Uri uri2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Uri uri1, class System.Uri uri2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.op_Equality(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (uri1 As Uri, uri2 As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Uri ^ uri1, Uri ^ uri2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Uri * Uri -&gt; bool" Usage="uri1 = uri2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri1" Type="System.Uri" />
        <Parameter Name="uri2" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri1"><span data-ttu-id="c1747-893"><c>uri2</c>와 비교할 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-893">A <see cref="T:System.Uri" /> instance to compare with <c>uri2</c>.</span></span></param>
        <param name="uri2"><span data-ttu-id="c1747-894"><c>uri1</c>과 비교할 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-894">A <see cref="T:System.Uri" /> instance to compare with <c>uri1</c>.</span></span></param>
        <summary><span data-ttu-id="c1747-895">두 <see cref="T:System.Uri" /> 인스턴스의 값이 같은지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-895">Determines whether two <see cref="T:System.Uri" /> instances have the same value.</span></span></summary>
        <returns><span data-ttu-id="c1747-896">두 <see cref="T:System.Boolean" /> 인스턴스가 동일하면 <see langword="true" /> 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-896">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> instances are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-897">이 오버 로드를 사용 하는 <xref:System.Uri.Equals%2A> 결정 하는 방법 여부를 두 <xref:System.Uri> 인스턴스가 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-897">This overload uses the <xref:System.Uri.Equals%2A> method to determine whether the two <xref:System.Uri> instances are equivalent.</span></span> <span data-ttu-id="c1747-898"><xref:System.Uri.UserInfo%2A> 및 <xref:System.Uri.Fragment%2A> 이 비교를 수행 하는 경우 콘텐츠는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-898"><xref:System.Uri.UserInfo%2A> and <xref:System.Uri.Fragment%2A> content is ignored when making this comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-899">이 예제에서는 세 가지 <xref:System.Uri> 문자열에서 인스턴스를 비교 하 여 동일한 값을 나타내는지 여부를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-899">This example creates three <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value.</span></span> <span data-ttu-id="c1747-900">`Address1` 및 `Address2` 동일 하기 때문에 <xref:System.Uri.Fragment%2A> 이 비교에 대 한 부분은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-900">`Address1` and `Address2` are the same because the <xref:System.Uri.Fragment%2A> portion is ignored for this comparison.</span></span> <span data-ttu-id="c1747-901">결과 콘솔에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-901">The outcome is written to the console.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#5)]
 [!code-csharp[NCLUriEnhancements#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#5)]
 [!code-vb[NCLUriEnhancements#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Uri uri1, Uri uri2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Uri uri1, class System.Uri uri2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.op_Inequality(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (uri1 As Uri, uri2 As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Uri ^ uri1, Uri ^ uri2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Uri * Uri -&gt; bool" Usage="System.Uri.op_Inequality (uri1, uri2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri1" Type="System.Uri" />
        <Parameter Name="uri2" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri1"><span data-ttu-id="c1747-902"><c>uri2</c>와 비교할 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-902">A <see cref="T:System.Uri" /> instance to compare with <c>uri2</c>.</span></span></param>
        <param name="uri2"><span data-ttu-id="c1747-903"><c>uri1</c>과 비교할 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-903">A <see cref="T:System.Uri" /> instance to compare with <c>uri1</c>.</span></span></param>
        <summary><span data-ttu-id="c1747-904">두 <see cref="T:System.Uri" /> 인스턴스의 값이 다른지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-904">Determines whether two <see cref="T:System.Uri" /> instances do not have the same value.</span></span></summary>
        <returns><span data-ttu-id="c1747-905">두 <see cref="T:System.Boolean" /> 인스턴스가 동일하면 <see langword="true" /> 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-905">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the two <see cref="T:System.Uri" /> instances are not equal; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c1747-906">매개 변수 중 하나가 <see langword="null" />이면 이 메서드에서 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-906">If either parameter is <see langword="null" />, this method returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-907">이 오버 로드를 사용 하 여는 <xref:System.Uri.Equals%2A> 결정 하는 방법 여부를 두 <xref:System.Uri> 인스턴스 같지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-907">This overload uses the <xref:System.Uri.Equals%2A> method to determine whether the two <xref:System.Uri> instances are not equivalent.</span></span> <span data-ttu-id="c1747-908"><xref:System.Uri.UserInfo%2A> 및 <xref:System.Uri.Fragment%2A> 이 비교를 수행 하는 경우 콘텐츠는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-908"><xref:System.Uri.UserInfo%2A> and <xref:System.Uri.Fragment%2A> content is ignored when making this comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-909">이 예제에서는 세 가지 <xref:System.Uri> 문자열에서 인스턴스를 비교 하 여 동일한 값을 나타내는지 여부를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-909">This example creates three <xref:System.Uri> instances from strings and compares them to determine whether they represent the same value.</span></span> <span data-ttu-id="c1747-910">`Address2` 및 `Address3` 동일 하지 않은 때문에 `Address3` 포함 된 <xref:System.Uri.Query%2A> 에 없는 `Address2`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-910">`Address2` and `Address3` are not the same because `Address3` contains a <xref:System.Uri.Query%2A> that is not found in `Address2`.</span></span> <span data-ttu-id="c1747-911">결과 콘솔에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-911">The outcome is written to the console.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#5)]
 [!code-csharp[NCLUriEnhancements#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#5)]
 [!code-vb[NCLUriEnhancements#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Uri.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Uri.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-912"><see cref="T:System.Uri" /> 생성자에 전달된 원래 URI 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-912">Gets the original URI string that was passed to the <see cref="T:System.Uri" /> constructor.</span></span></summary>
        <value><span data-ttu-id="c1747-913">이 인스턴스를 만들 때 URI를 지정했으면 해당 URI가 포함된 <see cref="T:System.String" />이고, 그렇지 않으면 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-913">A <see cref="T:System.String" /> containing the exact URI specified when this instance was constructed; otherwise, <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-914">생성자에 지정 된 URI에 선행 또는 후행 공백을 포함 하는 경우 이러한 공백이 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-914">If the URI specified to the constructor contained leading or trailing spaces, these spaces are preserved.</span></span>  
  
 <span data-ttu-id="c1747-915">이 속성에서 반환한 값에서 다른 <xref:System.Uri.ToString%2A> 고 <xref:System.Uri.AbsoluteUri%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-915">The value returned by this property differs from <xref:System.Uri.ToString%2A> and <xref:System.Uri.AbsoluteUri%2A>.</span></span> <span data-ttu-id="c1747-916"><xref:System.Uri.ToString%2A> 정규화 적으로 이스케이프 되지 않은 형식의 URI 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-916"><xref:System.Uri.ToString%2A> returns the canonically unescaped form of the URI.</span></span> <span data-ttu-id="c1747-917"><xref:System.Uri.AbsoluteUri%2A> 정규화 적으로 이스케이프 된 형식의 URI 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-917"><xref:System.Uri.AbsoluteUri%2A> returns the canonically escaped form of the URI.</span></span>  
  
 <span data-ttu-id="c1747-918">식별자 IRI (International Resource) 및 다국어 도메인 이름 (IDN) 지원이 활성화 된 경우 <xref:System.Uri.OriginalString%2A> 초기화 하는 데 사용 된 하나 경우 Punycode 호스트 이름 사용 하 여 원래 비 정규화 된 문자열을 반환 합니다 <xref:System.Uri> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c1747-918">When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, <xref:System.Uri.OriginalString%2A> returns the original non normalized string with Punycode host name if one was used to initialize the <xref:System.Uri> instance.</span></span> <span data-ttu-id="c1747-919">Punycode 이름에는 ASCII 문자만 사용되며 항상 xn-- 접두사로 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-919">Punycode names contain only ASCII characters and always start with the xn-- prefix.</span></span>  
  
 <span data-ttu-id="c1747-920">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-920">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
 <span data-ttu-id="c1747-921">경우는 <xref:System.Uri> 개체가 serialize 되는 <xref:System.Uri.OriginalString%2A> 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-921">When a <xref:System.Uri> object is serialized, the <xref:System.Uri.OriginalString%2A> is not preserved.</span></span> <span data-ttu-id="c1747-922">Serialization 프로세스 및 사용 하는 완벽 하 게 이스케이프 된 정규화 된 <xref:System.Uri.AbsoluteUri%2A> 직렬화 할 때 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-922">The serialization process uses the fully escaped and canonicalized <xref:System.Uri.AbsoluteUri%2A> property when serializing.</span></span> <span data-ttu-id="c1747-923">에 대 한는 <xref:System.Uri> IPv6 주소를 포함 하는, IPv6 주소 및 범위 ID가 포함 된 serialize 된에서 <xref:System.Uri> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-923">For a <xref:System.Uri> that contains an IPv6 address, the IPv6 address and the scope ID are included in the serialized <xref:System.Uri> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-924">다음 예제에서는 새 <xref:System.Uri> 문자열 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-924">The following example creates a new <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="c1747-925">반환 된 값 간의 차이 보여 줍니다 <xref:System.Uri.OriginalString%2A>, 생성자를 호출에서 전달 된 문자열을 반환 하는 <xref:System.Uri.ToString%2A>, 문자열의 정규 형식이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-925">It illustrates the difference between the value returned from <xref:System.Uri.OriginalString%2A>, which returns the string that was passed to the constructor, and from a call to <xref:System.Uri.ToString%2A>, which returns the canonical form of the string.</span></span>  
  
 [!code-cpp[NCLUriEnhancements#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriEnhancements/CPP/nclurienhancements.cpp#3)]
 [!code-csharp[NCLUriEnhancements#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriEnhancements/CS/nclurienhancements.cs#3)]
 [!code-vb[NCLUriEnhancements#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriEnhancements/VB/nclurienhancements.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-926">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-926">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected virtual void Parse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Parse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Parse" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Parse ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Parse();" />
      <MemberSignature Language="F#" Value="abstract member Parse : unit -&gt; unit&#xA;override this.Parse : unit -&gt; unit" Usage="uri.Parse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The method has been deprecated. It is not used by the system. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1747-927">현재 인스턴스의 URI를 구문 분석하여 유효한 URI에 필요한 모든 부분이 포함되어 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-927">Parses the URI of the current instance to ensure it contains all the parts required for a valid URI.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="c1747-928">생성자에서 전달된 URI가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-928">The Uri passed from the constructor is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PathAndQuery">
      <MemberSignature Language="C#" Value="public string PathAndQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathAndQuery" />
      <MemberSignature Language="DocId" Value="P:System.Uri.PathAndQuery" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathAndQuery As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathAndQuery { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathAndQuery : string" Usage="System.Uri.PathAndQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-929">물음표(?)로 구분된 <see cref="P:System.Uri.AbsolutePath" /> 및 <see cref="P:System.Uri.Query" /> 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-929">Gets the <see cref="P:System.Uri.AbsolutePath" /> and <see cref="P:System.Uri.Query" /> properties separated by a question mark (?).</span></span></summary>
        <value><span data-ttu-id="c1747-930">물음표(?)로 구분된 <see cref="T:System.String" /> 및 <see cref="P:System.Uri.AbsolutePath" /> 속성이 포함된 <see cref="P:System.Uri.Query" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-930">A <see cref="T:System.String" /> that contains the <see cref="P:System.Uri.AbsolutePath" /> and <see cref="P:System.Uri.Query" /> properties separated by a question mark (?).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-931"><xref:System.Uri.PathAndQuery%2A> 속성 서버에서 요청을 사용 하 여 전송 된 쿼리 정보 절대 경로 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-931">The <xref:System.Uri.PathAndQuery%2A> property contains the absolute path on the server and the query information sent with the request.</span></span> <span data-ttu-id="c1747-932">연결 하는 것과 동일 합니다 <xref:System.Uri.AbsolutePath%2A> 고 <xref:System.Uri.Query%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-932">It is identical to concatenating the <xref:System.Uri.AbsolutePath%2A> and <xref:System.Uri.Query%2A> properties.</span></span>  
  
 <span data-ttu-id="c1747-933"><xref:System.Uri.PathAndQuery%2A> 속성은 RFC 2396에 따라 기본적으로 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-933">The <xref:System.Uri.PathAndQuery%2A> property is escaped according to RFC 2396 by default.</span></span> <span data-ttu-id="c1747-934">다국어 리소스 식별자 (IRIs) 또는 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우는 <xref:System.Uri.PathAndQuery%2A> RFC 3986 및 RFC 3987에 따라 속성을 이스케이프 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-934">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <xref:System.Uri.PathAndQuery%2A> property is escaped according to RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="c1747-935">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-935">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-936">다음 예제에서는 URI 경로 씁니다 (/ catalog/shownew.htm) 및 쿼리 (날짜가 오늘과 같거나 오늘) 정보를 콘솔.</span><span class="sxs-lookup"><span data-stu-id="c1747-936">The following example writes the URI path (/catalog/shownew.htm) and query (date= today) information to the console.</span></span>  
  
 [!code-cpp[Classic Uri.PathAndQuery Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.PathAndQuery Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.PathAndQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-937">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-937">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Port" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="System.Uri.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-938">이 URI의 포트 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-938">Gets the port number of this URI.</span></span></summary>
        <value><span data-ttu-id="c1747-939">이 URI의 포트 번호가 포함된 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-939">An <see cref="T:System.Int32" /> value that contains the port number for this URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-940">포트 번호를 URI에서 참조 되는 서버에 연결 하기 위해 사용 되는 프로토콜 포트를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-940">The port number defines the protocol port used for contacting the server referenced in the URI.</span></span> <span data-ttu-id="c1747-941">포트 URI의 일부로 지정 하지 않으면는 <xref:System.Uri.Port%2A> 속성 프로토콜에 대 한 기본값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-941">If a port is not specified as part of the URI, the <xref:System.Uri.Port%2A> property returns the default value for the protocol.</span></span> <span data-ttu-id="c1747-942">기본 포트 번호가 있으면-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-942">If there is no default port number, this property returns -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-943">다음 예제에서는 콘솔에 URI의 포트 번호를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-943">The following example writes the URI port number to the console.</span></span> <span data-ttu-id="c1747-944">이 경우 값은 HTTP에 포트 80에 대 한 기본 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-944">In this case, the value is the default port number for HTTP, port 80.</span></span>  
  
 [!code-cpp[Classic Uri.Port Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Port Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Port Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Port Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Port Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Port Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-945">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-945">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public string Query { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Query" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Query" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Query As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Query { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Query : string" Usage="System.Uri.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-946">지정된 URI에 포함된 쿼리 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-946">Gets any query information included in the specified URI.</span></span></summary>
        <value><span data-ttu-id="c1747-947">지정된 URI에 포함된 쿼리 정보를 포함하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-947">A <see cref="T:System.String" /> that contains any query information included in the specified URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-948"><xref:System.Uri.Query%2A> 속성 URI에 포함 된 쿼리 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-948">The <xref:System.Uri.Query%2A> property contains any query information included in the URI.</span></span> <span data-ttu-id="c1747-949">쿼리 정보는 물음표 (?)로 경로 정보에서 분리 되 고 URI의 끝까지 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-949">Query information is separated from the path information by a question mark (?) and continues to the end of the URI.</span></span> <span data-ttu-id="c1747-950">반환 된 쿼리 정보를 선행 물음표를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-950">The query information returned includes the leading question mark.</span></span>  
  
 <span data-ttu-id="c1747-951">쿼리 정보는 RFC 2396에 따라 기본적으로 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-951">The query information is escaped according to RFC 2396 by default.</span></span> <span data-ttu-id="c1747-952">다국어 리소스 식별자 (IRIs) 또는 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우 쿼리 내용은 RFC 3986 및 RFC 3987에 따라 이스케이프 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-952">If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the query information is escaped according to RFC 3986 and RFC 3987.</span></span>  
  
 <span data-ttu-id="c1747-953">IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-953">For more information on IRI support, see the Remarks section for the <xref:System.Uri> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-954">쿼리를 작성 하는 다음 예제에서는? 날짜가 오늘과 같거나 오늘 콘솔로 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-954">The following example writes the query ?date= today to the console.</span></span>  
  
 [!code-cpp[Classic Uri.PathAndQuery Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Uri.PathAndQuery Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/CS/source.cs#2)]
 [!code-vb[Classic Uri.PathAndQuery Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.PathAndQuery Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-955">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-955">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.Uri.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-956">이 URI의 체계 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-956">Gets the scheme name for this URI.</span></span></summary>
        <value><span data-ttu-id="c1747-957">소문자로 변환된 이 URI의 스키마가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-957">A <see cref="T:System.String" /> that contains the scheme for this URI, converted to lowercase.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-958">합니다 <xref:System.Uri.Scheme%2A> 속성 초기화를 사용 하는 체계를 반환 합니다 <xref:System.Uri> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="c1747-958">The <xref:System.Uri.Scheme%2A> property returns the scheme used to initialize the <xref:System.Uri> instance.</span></span> <span data-ttu-id="c1747-959">이 속성 초기화에 사용 되는 체계를 나타내지 않습니다는 <xref:System.Uri> 인스턴스 인식 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-959">This property does not indicate that the scheme used to initialize the <xref:System.Uri> instance was recognized.</span></span>  
  
 <span data-ttu-id="c1747-960">다음 표에서 반환 하는 몇 가지 가능한 값의 예는 <xref:System.Uri.Scheme%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-960">The following table shows examples of some possible values returned by the <xref:System.Uri.Scheme%2A> property.</span></span>  
  
|<span data-ttu-id="c1747-961">Scheme</span><span class="sxs-lookup"><span data-stu-id="c1747-961">Scheme</span></span>|<span data-ttu-id="c1747-962">설명</span><span class="sxs-lookup"><span data-stu-id="c1747-962">Description</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="c1747-963">파일</span><span class="sxs-lookup"><span data-stu-id="c1747-963">file</span></span>|<span data-ttu-id="c1747-964">리소스는 로컬 컴퓨터의 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-964">The resource is a file on the local computer.</span></span>|  
|<span data-ttu-id="c1747-965">ftp</span><span class="sxs-lookup"><span data-stu-id="c1747-965">ftp</span></span>|<span data-ttu-id="c1747-966">FTP를 통해 리소스에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-966">The resource is accessed through FTP.</span></span>|  
|<span data-ttu-id="c1747-967">gopher</span><span class="sxs-lookup"><span data-stu-id="c1747-967">gopher</span></span>|<span data-ttu-id="c1747-968">Gopher 프로토콜을 통해 리소스에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-968">The resource is accessed through the Gopher protocol.</span></span>|  
|<span data-ttu-id="c1747-969">http</span><span class="sxs-lookup"><span data-stu-id="c1747-969">http</span></span>|<span data-ttu-id="c1747-970">HTTP를 통해 리소스에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-970">The resource is accessed through HTTP.</span></span>|  
|<span data-ttu-id="c1747-971">https</span><span class="sxs-lookup"><span data-stu-id="c1747-971">https</span></span>|<span data-ttu-id="c1747-972">SSL 암호화 HTTP를 통해 리소스에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-972">The resource is accessed through SSL-encrypted HTTP.</span></span>|  
|<span data-ttu-id="c1747-973">ldap</span><span class="sxs-lookup"><span data-stu-id="c1747-973">ldap</span></span>|<span data-ttu-id="c1747-974">LDAP 프로토콜을 통해 리소스에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-974">The resource is accessed through the LDAP protocol.</span></span>|  
|<span data-ttu-id="c1747-975">mailto</span><span class="sxs-lookup"><span data-stu-id="c1747-975">mailto</span></span>|<span data-ttu-id="c1747-976">리소스 전자 메일 주소 이며 SMTP 프로토콜을 통해 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-976">The resource is an email address and accessed through the SMTP protocol.</span></span>|  
|<span data-ttu-id="c1747-977">net.pipe</span><span class="sxs-lookup"><span data-stu-id="c1747-977">net.pipe</span></span>|<span data-ttu-id="c1747-978">명명 된 파이프를 통해 리소스에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-978">The resource is accessed through a named pipe.</span></span>|  
|<span data-ttu-id="c1747-979">net.tcp</span><span class="sxs-lookup"><span data-stu-id="c1747-979">net.tcp</span></span>|<span data-ttu-id="c1747-980">리소스는 TCP 끝점에서 액세스 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-980">The resource is accessed from TCP endpoint.</span></span>|  
|<span data-ttu-id="c1747-981">news</span><span class="sxs-lookup"><span data-stu-id="c1747-981">news</span></span>|<span data-ttu-id="c1747-982">NNTP 프로토콜을 통해 리소스에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-982">The resource is accessed through the NNTP protocol.</span></span>|  
|<span data-ttu-id="c1747-983">nntp</span><span class="sxs-lookup"><span data-stu-id="c1747-983">nntp</span></span>|<span data-ttu-id="c1747-984">NNTP 프로토콜을 통해 리소스에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-984">The resource is accessed through the NNTP protocol.</span></span>|  
|<span data-ttu-id="c1747-985">telnet</span><span class="sxs-lookup"><span data-stu-id="c1747-985">telnet</span></span>|<span data-ttu-id="c1747-986">텔넷 프로토콜을 통해 리소스에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-986">The resource is accessed through the TELNET protocol.</span></span>|  
|<span data-ttu-id="c1747-987">uuid</span><span class="sxs-lookup"><span data-stu-id="c1747-987">uuid</span></span>|<span data-ttu-id="c1747-988">리소스는 서비스와 통신 하는 것에 대 한 고유한 UUID 끝점 이름을 통해 액세스 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-988">The resource is accessed through a unique UUID endpoint name for communicating with a service.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c1747-989">다음 예제에서는 콘솔에 체계 이름 (http)를 기록 합니다 http://www.contoso.com/ URI입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-989">The following example writes the scheme name (http) to the console for the http://www.contoso.com/ URI.</span></span>  
  
 [!code-cpp[Classic Uri.Scheme Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Uri.Scheme Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Uri.Scheme Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Uri.Scheme Example/CS/source.cs#1)]
 [!code-vb[Classic Uri.Scheme Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Uri.Scheme Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-990">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-990">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SchemeDelimiter">
      <MemberSignature Language="C#" Value="public static readonly string SchemeDelimiter;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SchemeDelimiter" />
      <MemberSignature Language="DocId" Value="F:System.Uri.SchemeDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SchemeDelimiter As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SchemeDelimiter;" />
      <MemberSignature Language="F#" Value=" staticval mutable SchemeDelimiter : string" Usage="System.Uri.SchemeDelimiter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-991">통신 프로토콜 체계를 URI의 주소 부분과 구분하는 문자를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-991">Specifies the characters that separate the communication protocol scheme from the address portion of the URI.</span></span> <span data-ttu-id="c1747-992">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-992">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-993">다음 예제에서 문자열을 만듭니다 <xref:System.Uri.UriSchemeHttp>, <xref:System.Uri.SchemeDelimiter>, 및 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-993">The following example creates a string from <xref:System.Uri.UriSchemeHttp>, <xref:System.Uri.SchemeDelimiter>, and an address.</span></span> <span data-ttu-id="c1747-994"><xref:System.Uri> 인스턴스가 다음 문자열에서 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-994">A <xref:System.Uri> instance is then created from the string.</span></span>  
  
 [!code-cpp[NCLUriExamples#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#17)]
 [!code-csharp[NCLUriExamples#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#17)]
 [!code-vb[NCLUriExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Segments">
      <MemberSignature Language="C#" Value="public string[] Segments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Segments" />
      <MemberSignature Language="DocId" Value="P:System.Uri.Segments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Segments As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Segments { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Segments : string[]" Usage="System.Uri.Segments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-995">지정된 URI를 구성하는 경로 세그먼트가 포함된 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-995">Gets an array containing the path segments that make up the specified URI.</span></span></summary>
        <value><span data-ttu-id="c1747-996">지정된 URI를 구성하는 경로 세그먼트가 포함된 <see cref="T:System.String" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-996">A <see cref="T:System.String" /> array that contains the path segments that make up the specified URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-997"><xref:System.Uri.Segments%2A> 속성이 URI의 절대 경로 형성 하는 "세그먼트" (부분)를 포함 하는 문자열의 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-997">The <xref:System.Uri.Segments%2A> property returns an array of strings containing the "segments" (substrings) that form the URI's absolute path.</span></span> <span data-ttu-id="c1747-998">첫 번째 세그먼트는 슬래시 (/) 또는 경로 끝에 도달할 때까지 해당 첫 번째 문자에서 절대 경로 구문 분석 하 여 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-998">The first segment is obtained by parsing the absolute path from its first character until you reach a slash (/) or the end of the path.</span></span> <span data-ttu-id="c1747-999">각 추가 세그먼트는 이전 세그먼트 다음 첫 번째 문자에서 시작 하 고 슬래시 또는 경로의 끝을 사용 하 여 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-999">Each additional segment begins at the first character after the preceding segment, and terminates with the next slash or the end of the path.</span></span> <span data-ttu-id="c1747-1000">(URI의 절대 경로 포함 모든 호스트 및 포트와 쿼리 및 조각.)</span><span class="sxs-lookup"><span data-stu-id="c1747-1000">(A URI's absolute path contains everything after the host and port and before the query and fragment.)</span></span>  
  
 <span data-ttu-id="c1747-1001">다음 예제에서는 두 Uri에 대 한 절대 경로 세그먼트를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1001">The following example shows the absolute path and segments for two URIs.</span></span> <span data-ttu-id="c1747-1002">두 번째 예제 조각 및 쿼리를 절대 경로에 속하지 않는 및 세그먼트 많지 않기를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1002">The second example illustrates that the fragment and query are not part of the absolute path and therefore are not segments.</span></span>  
  
 <span data-ttu-id="c1747-1003">절대 URI:</span><span class="sxs-lookup"><span data-stu-id="c1747-1003">Absolute URI:</span></span>  
 http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm  
  
 <span data-ttu-id="c1747-1004">절대 경로:</span><span class="sxs-lookup"><span data-stu-id="c1747-1004">Absolute path:</span></span>  
 <span data-ttu-id="c1747-1005">/Chapters/Chapter1/Sections/Section1.htm</span><span class="sxs-lookup"><span data-stu-id="c1747-1005">/Chapters/Chapter1/Sections/Section1.htm</span></span>  
  
 <span data-ttu-id="c1747-1006">세그먼트:</span><span class="sxs-lookup"><span data-stu-id="c1747-1006">Segments:</span></span>  
 - /
 - <span data-ttu-id="c1747-1007">장 /</span><span class="sxs-lookup"><span data-stu-id="c1747-1007">Chapters/</span></span>
 - <span data-ttu-id="c1747-1008">Chapter1 /</span><span class="sxs-lookup"><span data-stu-id="c1747-1008">Chapter1/</span></span>
 - <span data-ttu-id="c1747-1009">섹션 /</span><span class="sxs-lookup"><span data-stu-id="c1747-1009">Sections/</span></span>
 - <span data-ttu-id="c1747-1010">Section1.htm</span><span class="sxs-lookup"><span data-stu-id="c1747-1010">Section1.htm</span></span>  
  
 <span data-ttu-id="c1747-1011">절대 URI:</span><span class="sxs-lookup"><span data-stu-id="c1747-1011">Absolute URI:</span></span>  
 http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm#page1?answer=NO  
  
 <span data-ttu-id="c1747-1012">절대 경로:</span><span class="sxs-lookup"><span data-stu-id="c1747-1012">Absolute path:</span></span>  
 <span data-ttu-id="c1747-1013">/Chapters/Chapter1/Sections/Section1.htm</span><span class="sxs-lookup"><span data-stu-id="c1747-1013">/Chapters/Chapter1/Sections/Section1.htm</span></span>  
  
 <span data-ttu-id="c1747-1014">세그먼트:</span><span class="sxs-lookup"><span data-stu-id="c1747-1014">Segments:</span></span>  
 - /
 - <span data-ttu-id="c1747-1015">장 /</span><span class="sxs-lookup"><span data-stu-id="c1747-1015">Chapters/</span></span>
 - <span data-ttu-id="c1747-1016">Chapter1 /</span><span class="sxs-lookup"><span data-stu-id="c1747-1016">Chapter1/</span></span>
 - <span data-ttu-id="c1747-1017">섹션 /</span><span class="sxs-lookup"><span data-stu-id="c1747-1017">Sections/</span></span>
 - <span data-ttu-id="c1747-1018">Section1.htm</span><span class="sxs-lookup"><span data-stu-id="c1747-1018">Section1.htm</span></span>  
  
 <span data-ttu-id="c1747-1019">참고 절대 경로 '/'를 사용 하 여 시작 하므로 첫 번째 세그먼트를 포함 하 고 아무 것도 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1019">Note that because the absolute path starts with a '/', the first segment contains it and nothing else.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-1020">다음 예제에서는 <xref:System.Uri> 3 사용 하 여 인스턴스 세그먼트 및 세그먼트 화면에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1020">The following example creates a <xref:System.Uri> instance with 3 segments and displays the segments on the screen.</span></span>  
  
 [!code-cpp[NCLUriExamples#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#5)]
 [!code-csharp[NCLUriExamples#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#5)]
 [!code-vb[NCLUriExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-1021">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-1021">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="c1747-1022"><see cref="T:System.Runtime.Serialization.SerializationInfo" />를 serialize하는 데 필요한 정보가 포함된 <see cref="T:System.Uri" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1022">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Uri" />.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="c1747-1023"><see cref="T:System.Runtime.Serialization.StreamingContext" />와 연결된 serialize된 스트림의 소스와 대상이 포함된 <see cref="T:System.Uri" />개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1023">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Uri" />.</span></span></param>
        <summary><span data-ttu-id="c1747-1024">현재 인스턴스를 serialize하는 데 필요한 데이터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1024">Returns the data needed to serialize the current instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1747-1025">serialization 메서드를 사용 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1025">to use serialization methods.</span></span> <span data-ttu-id="c1747-1026">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="c1747-1026">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uri.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1747-1027">지정된 <see cref="T:System.Uri" /> 인스턴스에 대한 정식 문자열 표현을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1027">Gets a canonical string representation for the specified <see cref="T:System.Uri" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c1747-1028">이스케이프되지 않은 <see cref="T:System.String" /> 인스턴스의 정식 표현을 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1028">A <see cref="T:System.String" /> instance that contains the unescaped canonical representation of the <see cref="T:System.Uri" /> instance.</span></span> <span data-ttu-id="c1747-1029">#, ? 및 %를 제외한 모든 문자가 이스케이프되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1029">All characters are unescaped except #, ?, and %.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-1030">이 메서드에서 반환 된 문자열에 포트 정보가 없습니다 포트 구성표에 대 한 기본 포트는 경우.</span><span class="sxs-lookup"><span data-stu-id="c1747-1030">The string returned by this method does not contain port information when the port is the default port for the scheme.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1747-1031">반환한 문자열을 <xref:System.Uri.ToString%2A> 메서드는 콘솔 응용 프로그램의 상태를 손상 시킬 수 있는 제어 문자를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1031">The string returned by the <xref:System.Uri.ToString%2A> method may contain control characters, which can corrupt the state of a console application.</span></span> <span data-ttu-id="c1747-1032">사용할 수는 <xref:System.Uri.GetComponents%2A> 메서드는 <xref:System.UriFormat.SafeUnescaped?displayProperty=nameWithType> 반환된 된 문자열에서 제어 문자를 제거 하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1032">You can use the <xref:System.Uri.GetComponents%2A> method with the <xref:System.UriFormat.SafeUnescaped?displayProperty=nameWithType> format to remove control characters from the returned string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-1033">다음 예제에서는 새 <xref:System.Uri> 문자열 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1033">The following example creates a new <xref:System.Uri> instance from a string.</span></span> <span data-ttu-id="c1747-1034">반환 된 값 간의 차이 보여 줍니다 <xref:System.Uri.OriginalString%2A>, 생성자를 호출에서 전달 된 문자열을 반환 하는 <xref:System.Uri.ToString%2A>, 문자열의 정규 형식이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1034">It illustrates the difference between the value returned from <xref:System.Uri.OriginalString%2A>, which returns the string that was passed to the constructor, and from a call to <xref:System.Uri.ToString%2A>, which returns the canonical form of the string.</span></span>  
  
 [!code-cpp[NCLUriExamples#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#7)]
 [!code-csharp[NCLUriExamples#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#7)]
 [!code-vb[NCLUriExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1747-1035">부분적으로 신뢰할 수 있는 코드에서 파생 되지 않도록 하려면 <see cref="T:System.Uri" />합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1035">to prevent partially trusted code from deriving from <see cref="T:System.Uri" />.</span></span> <span data-ttu-id="c1747-1036">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="c1747-1036">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryCreate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1747-1037">새 <see cref="T:System.Uri" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1037">Creates a new <see cref="T:System.Uri" />.</span></span> <span data-ttu-id="c1747-1038"><see cref="T:System.Uri" />를 만들 수 없으면 예외를 throw하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1038">Does not throw an exception if the <see cref="T:System.Uri" /> cannot be created.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (string uriString, UriKind uriKind, out Uri result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(string uriString, valuetype System.UriKind uriKind, [out] class System.Uri&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(System::String ^ uriString, UriKind uriKind, [Runtime::InteropServices::Out] Uri ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : string * UriKind *  -&gt; bool" Usage="System.Uri.TryCreate (uriString, uriKind, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriString" Type="System.String" />
        <Parameter Name="uriKind" Type="System.UriKind" />
        <Parameter Name="result" Type="System.Uri" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uriString"><span data-ttu-id="c1747-1039"><see cref="T:System.String" />를 나타내는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1039">The <see cref="T:System.String" /> representing the <see cref="T:System.Uri" />.</span></span></param>
        <param name="uriKind"><span data-ttu-id="c1747-1040">URI의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1040">The type of the Uri.</span></span></param>
        <param name="result"><span data-ttu-id="c1747-1041">이 메서드가 반환될 때 생성된 <see cref="T:System.Uri" />를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1041">When this method returns, contains the constructed <see cref="T:System.Uri" />.</span></span></param>
        <summary><span data-ttu-id="c1747-1042">지정된 <see cref="T:System.Uri" /> 인스턴스와 <see cref="T:System.String" />를 사용하여 새 <see cref="T:System.UriKind" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1042">Creates a new <see cref="T:System.Uri" /> using the specified <see cref="T:System.String" /> instance and a <see cref="T:System.UriKind" />.</span></span></summary>
        <returns><span data-ttu-id="c1747-1043"><see cref="T:System.Boolean" />가 만들어졌으면 <see langword="true" /> 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1043">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> was successfully created; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-1044">이 메서드가 반환 하는 경우 `true`, 새 <xref:System.Uri> 상태인 `result`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1044">If this method returns `true`, the new <xref:System.Uri> is in `result`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (Uri baseUri, string relativeUri, out Uri result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(class System.Uri baseUri, string relativeUri, [out] class System.Uri&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (baseUri As Uri, relativeUri As String, ByRef result As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(Uri ^ baseUri, System::String ^ relativeUri, [Runtime::InteropServices::Out] Uri ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : Uri * string *  -&gt; bool" Usage="System.Uri.TryCreate (baseUri, relativeUri, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
        <Parameter Name="result" Type="System.Uri" RefType="out" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="c1747-1045">기본 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1045">The base <see cref="T:System.Uri" />.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="c1747-1046">기본 <see cref="T:System.Uri" />에 추가할 <see cref="T:System.String" />으로 나타낸 상대 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1046">The relative <see cref="T:System.Uri" />, represented as a <see cref="T:System.String" />, to add to the base <see cref="T:System.Uri" />.</span></span></param>
        <param name="result"><span data-ttu-id="c1747-1047">이 메서드가 반환될 때 <c>baseUri</c>와 <c>relativeUri</c>에서 만든 <see cref="T:System.Uri" />를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1047">When this method returns, contains a <see cref="T:System.Uri" /> constructed from <c>baseUri</c> and <c>relativeUri</c>.</span></span> <span data-ttu-id="c1747-1048">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1048">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c1747-1049">지정된 기본 및 상대 <see cref="T:System.Uri" /> 인스턴스를 사용하여 새 <see cref="T:System.String" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1049">Creates a new <see cref="T:System.Uri" /> using the specified base and relative <see cref="T:System.String" /> instances.</span></span></summary>
        <returns><span data-ttu-id="c1747-1050"><see cref="T:System.Boolean" />가 만들어졌으면 <see langword="true" /> 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1050">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> was successfully created; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-1051">이 메서드가 반환 하는 경우 `true`, 새 <xref:System.Uri> 상태인 `result`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1051">If this method returns `true`, the new <xref:System.Uri> is in `result`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (Uri baseUri, Uri relativeUri, out Uri result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(class System.Uri baseUri, class System.Uri relativeUri, [out] class System.Uri&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (baseUri As Uri, relativeUri As Uri, ByRef result As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(Uri ^ baseUri, Uri ^ relativeUri, [Runtime::InteropServices::Out] Uri ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : Uri * Uri *  -&gt; bool" Usage="System.Uri.TryCreate (baseUri, relativeUri, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.Uri" />
        <Parameter Name="result" Type="System.Uri" RefType="out" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="c1747-1052">기본 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1052">The base <see cref="T:System.Uri" />.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="c1747-1053">기본 <see cref="T:System.Uri" />에 추가할 상대 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1053">The relative <see cref="T:System.Uri" /> to add to the base <see cref="T:System.Uri" />.</span></span></param>
        <param name="result"><span data-ttu-id="c1747-1054">이 메서드가 반환될 때 <c>baseUri</c>와 <c>relativeUri</c>에서 만든 <see cref="T:System.Uri" />를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1054">When this method returns, contains a <see cref="T:System.Uri" /> constructed from <c>baseUri</c> and <c>relativeUri</c>.</span></span> <span data-ttu-id="c1747-1055">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1055">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="c1747-1056">지정된 기본 및 상대 <see cref="T:System.Uri" /> 인스턴스를 사용하여 새 <see cref="T:System.Uri" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1056">Creates a new <see cref="T:System.Uri" /> using the specified base and relative <see cref="T:System.Uri" /> instances.</span></span></summary>
        <returns><span data-ttu-id="c1747-1057"><see cref="T:System.Boolean" />가 만들어졌으면 <see langword="true" /> 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1057">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <see cref="T:System.Uri" /> was successfully created; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-1058">이 메서드가 반환 하는 경우 `true`, 새 <xref:System.Uri> 상태인 `result`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1058">If this method returns `true`, the new <xref:System.Uri> is in `result`.</span></span>  
  
 <span data-ttu-id="c1747-1059">이 메서드 URI를 생성, 정규 형식으로 저장 및 유효성 검사를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1059">This method constructs the URI, puts it in canonical form, and validates it.</span></span> <span data-ttu-id="c1747-1060">처리 되지 않은 예외가 발생 하는 경우이 메서드를 catch 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1060">If an unhandled exception occurs, this method catches it.</span></span> <span data-ttu-id="c1747-1061">생성 하려는 경우는 <xref:System.Uri> get 예외 중 하나를 사용 하 고는 <xref:System.Uri.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1061">If you want to create a <xref:System.Uri> and get exceptions use one of the <xref:System.Uri.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-1062"><paramref name="baseUri" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-1062"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unescape">
      <MemberSignature Language="C#" Value="protected virtual string Unescape (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string Unescape(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.Unescape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Unescape (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ Unescape(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member Unescape : string -&gt; string&#xA;override this.Unescape : string -&gt; string" Usage="uri.Unescape path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("The method has been deprecated. Please use GetComponents() or static UnescapeDataString() to unescape a Uri component or a string. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="c1747-1063">변환할 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1063">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="c1747-1064">이스케이프 시퀀스를 이스케이프되지 않은 표현으로 대체하여 지정된 문자열을 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1064">Converts the specified string by replacing any escape sequences with their unescaped representation.</span></span></summary>
        <returns><span data-ttu-id="c1747-1065"><see cref="T:System.String" /> 매개 변수에 대해 이스케이프되지 않은 값이 포함된 <paramref name="path" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1065">A <see cref="T:System.String" /> that contains the unescaped value of the <paramref name="path" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnescapeDataString">
      <MemberSignature Language="C#" Value="public static string UnescapeDataString (string stringToUnescape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnescapeDataString(string stringToUnescape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Uri.UnescapeDataString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnescapeDataString (stringToUnescape As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UnescapeDataString(System::String ^ stringToUnescape);" />
      <MemberSignature Language="F#" Value="static member UnescapeDataString : string -&gt; string" Usage="System.Uri.UnescapeDataString stringToUnescape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToUnescape" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringToUnescape"><span data-ttu-id="c1747-1066">이스케이프되지 않을 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1066">The string to unescape.</span></span></param>
        <summary><span data-ttu-id="c1747-1067">문자열을 이스케이프되지 않은 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1067">Converts a string to its unescaped representation.</span></span></summary>
        <returns><span data-ttu-id="c1747-1068"><see cref="T:System.String" />에 대해 이스케이프되지 않은 표현이 포함된 <paramref name="stringToUnescape" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1068">A <see cref="T:System.String" /> that contains the unescaped representation of <paramref name="stringToUnescape" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-1069">이 메서드를 사용 하 여 신중 하 게 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1069">You should use this method with care.</span></span> <span data-ttu-id="c1747-1070">이전에 이스케이프 된 문자열을 이스케이프 모호 해지고 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1070">Unescaping a string that has been previously unescaped can lead to ambiguities and errors.</span></span>  
  
 <span data-ttu-id="c1747-1071">다양 한 웹 브라우저에 더하기 Uri의 공백을 이스케이프 문자 ("+") 그러나 여 응용 프로그램이 UnescapeDataString 메서드 변환 하지 않습니다 더하기 문자 공간으로 모든 URI 구성표에서이 동작은 표준 없기 때문에.</span><span class="sxs-lookup"><span data-stu-id="c1747-1071">Many Web browsers escape spaces inside of URIs into plus ("+") characters; however, the UnescapeDataString method does not convert plus characters into spaces because this behavior is not standard across all URI schemes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-1072">다음 코드 예제에서는 URI를 이스케이프 해제 하 고 더하기 문자 ("+") 공간에 하나를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1072">The following code example unescapes a URI, and then converts any plus characters ("+") into spaces.</span></span>  
  
 [!code-csharp[NCLUriExamples#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1747-1073"><paramref name="stringToUnescape" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-1073"><paramref name="stringToUnescape" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Uri.EscapeDataString(System.String)" />
        <altmember cref="M:System.Uri.EscapeUriString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UriSchemeFile">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeFile;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeFile" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeFile" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeFile As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeFile;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeFile : string" Usage="System.Uri.UriSchemeFile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1074">URI를 파일 포인터로 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1074">Specifies that the URI is a pointer to a file.</span></span> <span data-ttu-id="c1747-1075">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1075">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-1076">.NET Framework 버전 1.1에에서는 "`file:///path`"URI로 번역 되어"`file:/path`"입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1076">In .NET Framework version 1.1, a "`file:///path`" URI was translated to "`file:/path`".</span></span> <span data-ttu-id="c1747-1077">이 버전 2.0에 대 한 수정 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1077">This has been corrected for version 2.0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-1078">다음 예제는 <xref:System.Uri> 인스턴스 및 스키마 인지 여부를 결정 <xref:System.Uri.UriSchemeFile>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1078">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeFile>.</span></span>  
  
 [!code-cpp[NCLUriExamples#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#10)]
 [!code-csharp[NCLUriExamples#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#10)]
 [!code-vb[NCLUriExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeFtp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeFtp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeFtp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeFtp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeFtp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeFtp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeFtp : string" Usage="System.Uri.UriSchemeFtp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1079">FTP(파일 전송 프로토콜)를 통해 URI에 액세스하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1079">Specifies that the URI is accessed through the File Transfer Protocol (FTP).</span></span> <span data-ttu-id="c1747-1080">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1080">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-1081">다음 예제는 <xref:System.Uri> 인스턴스 및 스키마 인지 여부를 결정 <xref:System.Uri.UriSchemeFtp>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1081">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeFtp>.</span></span>  
  
 [!code-cpp[NCLUriExamples#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#15)]
 [!code-csharp[NCLUriExamples#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#15)]
 [!code-vb[NCLUriExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeGopher">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeGopher;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeGopher" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeGopher" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeGopher As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeGopher;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeGopher : string" Usage="System.Uri.UriSchemeGopher" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1082">Gopher 프로토콜을 통해 URI에 액세스하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1082">Specifies that the URI is accessed through the Gopher protocol.</span></span> <span data-ttu-id="c1747-1083">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1083">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-1084">다음 예제는 <xref:System.Uri> 인스턴스 및 스키마 인지 여부를 결정 <xref:System.Uri.UriSchemeGopher>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1084">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeGopher>.</span></span>  
  
 [!code-cpp[NCLUriExamples#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#14)]
 [!code-csharp[NCLUriExamples#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#14)]
 [!code-vb[NCLUriExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeHttp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeHttp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeHttp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeHttp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeHttp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeHttp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeHttp : string" Usage="System.Uri.UriSchemeHttp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1085">HTTP(Hypertext Transfer Protocol)를 통해 URI에 액세스하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1085">Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</span></span> <span data-ttu-id="c1747-1086">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1086">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-1087">다음 예제는 <xref:System.Uri> 인스턴스 및 스키마 인지 여부를 결정 <xref:System.Uri.UriSchemeHttp>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1087">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeHttp>.</span></span>  
  
 [!code-cpp[NCLUriExamples#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#9)]
 [!code-csharp[NCLUriExamples#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#9)]
 [!code-vb[NCLUriExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeHttps">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeHttps;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeHttps" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeHttps" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeHttps As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeHttps;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeHttps : string" Usage="System.Uri.UriSchemeHttps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1088">HTTPS(Secure Hypertext Transfer Protocol)를 통해 URI에 액세스하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1088">Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</span></span> <span data-ttu-id="c1747-1089">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1089">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-1090">다음 예제는 <xref:System.Uri> 인스턴스 및 스키마 인지 여부를 결정 <xref:System.Uri.UriSchemeHttps>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1090">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeHttps>.</span></span>  
  
 [!code-cpp[NCLUriExamples#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#16)]
 [!code-csharp[NCLUriExamples#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#16)]
 [!code-vb[NCLUriExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeMailto">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeMailto;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeMailto" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeMailto" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeMailto As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeMailto;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeMailto : string" Usage="System.Uri.UriSchemeMailto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1091">URI를 이메일 주소로 지정하고 SMTP(Simple Mail Transport Protocol)를 통해 URI에 액세스하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1091">Specifies that the URI is an email address and is accessed through the Simple Mail Transport Protocol (SMTP).</span></span> <span data-ttu-id="c1747-1092">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1092">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-1093">다음 예제는 <xref:System.Uri> 인스턴스 및 스키마 인지 여부를 결정 <xref:System.Uri.UriSchemeMailto>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1093">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeMailto>.</span></span>  
  
 [!code-cpp[NCLUriExamples#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#11)]
 [!code-csharp[NCLUriExamples#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#11)]
 [!code-vb[NCLUriExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNetPipe">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNetPipe;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNetPipe" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNetPipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNetPipe As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNetPipe;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNetPipe : string" Usage="System.Uri.UriSchemeNetPipe" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1094">WCF(Windows Communication Foundation)에서 사용하는 NetPipe 체계를 통해 URI에 액세스하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1094">Specifies that the URI is accessed through the NetPipe scheme used by Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="c1747-1095">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1095">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNetTcp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNetTcp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNetTcp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNetTcp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNetTcp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNetTcp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNetTcp : string" Usage="System.Uri.UriSchemeNetTcp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1096">WCF(Windows Communication Foundation)에서 사용하는 NetTcp 체계를 통해 URI에 액세스하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1096">Specifies that the URI is accessed through the NetTcp scheme used by Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="c1747-1097">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1097">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNews">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNews;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNews" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNews" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNews As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNews;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNews : string" Usage="System.Uri.UriSchemeNews" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1098">URI를 인터넷 뉴스 그룹으로 지정하고 NNTP(Network News Transport Protocol)를 통해 URI에 액세스하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1098">Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP).</span></span> <span data-ttu-id="c1747-1099">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1099">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1747-1100">다음 예제는 <xref:System.Uri> 인스턴스 및 스키마 인지 여부를 결정 <xref:System.Uri.UriSchemeNews>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1100">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeNews>.</span></span>  
  
 [!code-cpp[NCLUriExamples#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#12)]
 [!code-csharp[NCLUriExamples#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#12)]
 [!code-vb[NCLUriExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriSchemeNntp">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemeNntp;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemeNntp" />
      <MemberSignature Language="DocId" Value="F:System.Uri.UriSchemeNntp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemeNntp As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemeNntp;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemeNntp : string" Usage="System.Uri.UriSchemeNntp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1101">URI를 인터넷 뉴스 그룹으로 지정하고 NNTP(Network News Transport Protocol)를 통해 URI에 액세스하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1101">Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP).</span></span> <span data-ttu-id="c1747-1102">이 필드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1102">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-1103">NNTP <xref:System.Uri> 구문 분석 오류에서.NET Framework 버전 1.1 수정 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1103">The NNTP <xref:System.Uri> parsing errors in .NET Framework version 1.1 have been corrected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-1104">다음 예제는 <xref:System.Uri> 인스턴스 및 스키마 인지 여부를 결정 <xref:System.Uri.UriSchemeNntp>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1104">The following example creates a <xref:System.Uri> instance and determines whether the scheme is <xref:System.Uri.UriSchemeNntp>.</span></span>  
  
 [!code-cpp[NCLUriExamples#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#13)]
 [!code-csharp[NCLUriExamples#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#13)]
 [!code-vb[NCLUriExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserEscaped">
      <MemberSignature Language="C#" Value="public bool UserEscaped { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserEscaped" />
      <MemberSignature Language="DocId" Value="P:System.Uri.UserEscaped" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserEscaped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserEscaped { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UserEscaped : bool" Usage="System.Uri.UserEscaped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1105"><see cref="T:System.Uri" /> 인스턴스를 만들기 전에 URI 문자열을 완전히 이스케이프했음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1105">Indicates that the URI string was completely escaped before the <see cref="T:System.Uri" /> instance was created.</span></span></summary>
        <value><span data-ttu-id="c1747-1106"><see cref="T:System.Boolean" /> 인스턴스를 만들 때 <see langword="true" /> 매개 변수를 <paramref name="dontEscape" />로 설정했으면 <see langword="true" /> 값이 <see cref="T:System.Uri" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1106">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> if the <paramref name="dontEscape" /> parameter was set to <see langword="true" /> when the <see cref="T:System.Uri" /> instance was created; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-1107">합니다 <xref:System.Uri.UserEscaped%2A> 속성이로 설정 되어 `true` 를 나타내는 문자열을 만드는 데는 <xref:System.Uri> 인스턴스가 완전히 이스케이프 생성자에 전달 된 것입니다. 즉, `dontEscape` 생성자 호출의 매개 변수 로설정된`true`.</span><span class="sxs-lookup"><span data-stu-id="c1747-1107">The <xref:System.Uri.UserEscaped%2A> property is set to `true` to indicate that the string used to create the <xref:System.Uri> instance was completely escaped before it was passed to the constructor; that is, the `dontEscape` parameter of the constructor call was set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-1108">다음 예제에서는 <xref:System.Uri> 인스턴스를 만들 때 완전히 이스케이프 했는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1108">The following example creates a <xref:System.Uri> instance and determines whether it was fully escaped when it was created.</span></span>  
  
 [!code-cpp[NCLUriExamples#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#18)]
 [!code-csharp[NCLUriExamples#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#18)]
 [!code-vb[NCLUriExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserInfo">
      <MemberSignature Language="C#" Value="public string UserInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserInfo" />
      <MemberSignature Language="DocId" Value="P:System.Uri.UserInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserInfo : string" Usage="System.Uri.UserInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1747-1109">지정된 URI와 연결된 사용자 이름, 암호 및 기타 사용자 관련 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1109">Gets the user name, password, or other user-specific information associated with the specified URI.</span></span></summary>
        <value><span data-ttu-id="c1747-1110">URI와 연결된 사용자 정보가 포함된 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1110">A <see cref="T:System.String" /> that contains the user information associated with the URI.</span></span> <span data-ttu-id="c1747-1111">반환된 값에는 URI의 사용자 정보 부분을 구분하기 위해 예약된 '@' 문자가 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1111">The returned value does not include the '@' character reserved for delimiting the user information part of the URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1747-1112">이 속성에서 반환 값은 일반적으로 "userName:password" 형식으로.</span><span class="sxs-lookup"><span data-stu-id="c1747-1112">The value returned by this property is usually in the format "userName:password".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1747-1113">다음 예제에서는 <xref:System.Uri> 인스턴스 및 사용자 정보를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c1747-1113">The following example creates a <xref:System.Uri> instance and writes the user information to the console.</span></span>  
  
 [!code-cpp[NCLUriExamples#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLUriExamples/CPP/uriexamples.cpp#18)]
 [!code-csharp[NCLUriExamples#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLUriExamples/CS/uriexamples.cs#18)]
 [!code-vb[NCLUriExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLUriExamples/VB/uriexamples.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1747-1114">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</span><span class="sxs-lookup"><span data-stu-id="c1747-1114">This instance represents a relative URI, and this property is valid only for absolute URIs.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>