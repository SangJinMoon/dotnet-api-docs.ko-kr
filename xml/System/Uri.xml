<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Uri.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac553a20a01b2a514dee7ffc20954bee6556ec8dd8e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53a20a01b2a514dee7ffc20954bee6556ec8dd8e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Uri">
          <source>Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.</source>
          <target state="translated">URI(Uniform Resource Indentifier)의 개체 표현을 제공하며 URI 부분에 쉽게 액세스할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>A URI is a compact representation of a resource available to your application on the intranet or Internet.</source>
          <target state="translated">URI가 인트라넷 또는 인터넷에서 응용 프로그램에 사용할 수 있는 리소스의 압축 된 표현을 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class defines the properties and methods for handling URIs, including parsing, comparing, and combining.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스를 구문 분석, 비교 및 결합을 포함 한 Uri를 처리 하기 위한 메서드와 속성을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class properties are read-only; to create a modifiable object, use the <ph id="ph2">&lt;xref:System.UriBuilder&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스 속성은 읽기 전용으로 설정 하 고 수정할 수 있는 개체를 만들려면 사용은 <ph id="ph2">&lt;xref:System.UriBuilder&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Relative URIs (for example, "/new/index.htm") must be expanded with respect to a base URI so that they are absolute.</source>
          <target state="translated">상대 Uri (예를 들어 "/ new/index.htm") 절대 되도록 기본 URI와 관련 하 여 확장 해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.Uri.MakeRelative%2A&gt;</ph> method is provided to convert absolute URIs to relative URIs when necessary.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.MakeRelative%2A&gt;</ph> 메서드 필요한 경우에 상대 Uri를 절대 Uri를 변환 하기 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.Uri&gt;</ph> constructors do not escape URI strings if the string is a well-formed URI including a scheme identifier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri&gt;</ph> 생성자 문자열은 올바른 형식의 URI 구성표 식별자를 포함 하는 경우 URI 문자열을 이스케이프 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.Uri&gt;</ph> properties return a canonical data representation in escaped encoding, with all characters with Unicode values greater than 127 replaced with their hexadecimal equivalents.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri&gt;</ph> 속성을 정규 데이터 표현 모든 문자를 해당 16 진수 대체 127 보다 큰 유니코드 값에 이스케이프 된 인코딩을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>To put the URI in canonical form, the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> constructor performs the following steps:</source>
          <target state="translated">정규 형식으로 URI를 배치 하는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 생성자는 다음 단계를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Converts the URI scheme to lowercase.</source>
          <target state="translated">URI 체계를 소문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Converts the host name to lowercase.</source>
          <target state="translated">호스트 이름을 소문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>If the host name is an IPv6 address, the canonical IPv6 address is used.</source>
          <target state="translated">호스트 이름에는 IPv6 주소 이면 정식 IPv6 주소 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>ScopeId and other optional IPv6 data are removed.</source>
          <target state="translated">ScopeId 및 기타 선택적인 IPv6 데이터가 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Removes default and empty port numbers.</source>
          <target state="translated">기본 및 빈 포트 번호를 제거합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Escaped characters (also known as percent-encoded octets) that don't have a reserved purpose are decoded (also known as being unescaped).</source>
          <target state="translated">에 예약 된 용도가 없는 이스케이프 된 문자 (라고도 퍼센트 인코딩 8 진수) 디코딩 (라고도 되 고 이스케이프 해제) 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>These unreserved characters include uppercase and lowercase letters (%41-%5A and %61-%7A), decimal digits (%30-%39), hyphen (%2D), period (%2E), underscore (%5F), and tilde (%7E).</source>
          <target state="translated">예약 되지 않은 이러한 문자는 대문자 및 소문자 (%41-%5A 및 %61-%7A), 10 진수 (30 ~ %39), 하이픈 (%2D), 마침표 (%2E) (%5F), 밑줄 및 물결표 (%7E).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Canonicalizes the path for hierarchical URIs by compacting sequences such as /./, /../, and // (whether or not the sequence is escaped).</source>
          <target state="translated">이스케이프 된 표현을 여와 같은 /. / /... /, 및 / / (시퀀스 이스케이프 여부).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Note that there are some schemes for which these sequences are not compacted.</source>
          <target state="translated">참고 구성표를 선택 해 이러한 시퀀스 압축 되지 않습니다는 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>For hierarchical URIs, if the host is not terminated with a forward slash (/), one is added.</source>
          <target state="translated">계층적 Uri에 대 한 호스트 슬래시 (/)로 종료 되지 않으면 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>By default, any reserved characters in the URI are escaped in accordance with RFC 2396.</source>
          <target state="translated">기본적으로 RFC 2396에 따라 URI에서 예약된 된 문자 이스케이프 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>This behavior changes if International Resource Identifiers or International Domain Name parsing is enabled in which case reserved characters in the URI are escaped in accordance with RFC 3986 and RFC 3987.</source>
          <target state="translated">URI에 예약 된 문자가 있는 국제 리소스 식별자 또는 국제 도메인 이름 구문 분석을 활성화 한 경우이 동작 변경 내용에 따라 RFC 3986 및 RFC 3987 이스케이프 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>As part of canonicalization in the constructor for some schemes, dot-segments and empty segments (/./, /../, and //) are compacted (in other words, they are removed).</source>
          <target state="translated">일부 구성표, 점 세그먼트 및 빈 세그먼트에 대 한 생성자에는 정규화의 일부로 (/. /, /... /, 및 / /)이 압축 됩니다 (즉, 제거 됨).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The schemes for which URI will compact these sequences include http, https, tcp, net.pipe, and net.tcp.</source>
          <target state="translated">URI는 이러한 시퀀스를 압축 체계에는 http, https, tcp, net.pipe 및 net.tcp 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>For some other schemes, these sequences are not compacted.</source>
          <target state="translated">이러한 시퀀스는 다른 체계에 대 한 압축 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Here's how this compacting looks in practice.</source>
          <target state="translated">이 압축 되는 모양을 실제로 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>When this code is executed, it returns the following output, with the escaped sequences unescaped if necessary and then compacted.</source>
          <target state="translated">이 코드를 실행 하는 경우 다음 압축 하 고 필요한 경우 이스케이프 되지 않은 이스케이프 시퀀스와 다음과 같은 출력을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>You can transform the contents of the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class from an escape encoded URI reference to a readable URI reference by using the <ph id="ph2">&lt;xref:System.Uri.ToString%2A&gt;</ph> method.</source>
          <target state="translated">콘텐츠를 변환할 수 있습니다는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 에서 사용 하 여 읽을 수 있는 URI 참조에 대 한 이스케이프 인코딩된 URI 참조 클래스는 <ph id="ph2">&lt;xref:System.Uri.ToString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Note that some reserved characters might still be escaped in the output of the <ph id="ph1">&lt;xref:System.Uri.ToString%2A&gt;</ph> method.</source>
          <target state="translated">일부 예약 된 문자 수 하의 출력에서 이스케이프는 <ph id="ph1">&lt;xref:System.Uri.ToString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>This is to support unambiguous reconstruction of a URI from the value returned by <ph id="ph1">&lt;xref:System.Uri.ToString%2A&gt;</ph>.</source>
          <target state="translated">반환한 값에서 URI의 명확한 재구성을 지원 하기 위해 이것이 <ph id="ph1">&lt;xref:System.Uri.ToString%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Some URIs include a fragment identifier or a query or both.</source>
          <target state="translated">일부 Uri 단편 식별자 나 쿼리 또는 둘 다 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>A fragment identifier is any text that follows a number sign (#), not including the number sign; the fragment text is stored in the <ph id="ph1">&lt;xref:System.Uri.Fragment%2A&gt;</ph> property.</source>
          <target state="translated">단편 식별자는 숫자 기호 뒤에 오는 모든 텍스트 (#), 숫자 기호; 포함 하지 않고 조각 텍스트에 저장 됩니다는 <ph id="ph1">&lt;xref:System.Uri.Fragment%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Query information is any text that follows a question mark (?) in the URI; the query text is stored in the <ph id="ph1">&lt;xref:System.Uri.Query%2A&gt;</ph> property.</source>
          <target state="translated">쿼리 정보는 URI;에서 물음표 (?) 뒤에 오는 모든 텍스트 쿼리 텍스트에 저장 됩니다는 <ph id="ph1">&lt;xref:System.Uri.Query%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>In the .NET Framework version 1.1, if the string specified to a constructor contains an unknown scheme and "c:<ph id="ph1">\\</ph>", the Uri class inserts "//" after the colon.</source>
          <target state="translated">.NET Framework 버전 1.1에서 알 수 없는 체계를 포함 하는 생성자에 지정 된 문자열의에서 및 "c:<ph id="ph1">\\</ph>", Uri 클래스 삽입 "/ /" 콜론 뒤 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>For example, the URI <ph id="ph1">`xyz:c:\abc`</ph> is converted to <ph id="ph2">`xyz://c:/abc`</ph>.</source>
          <target state="translated">예를 들어 URI <ph id="ph1">`xyz:c:\abc`</ph> 변환할 <ph id="ph2">`xyz://c:/abc`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>In the .NET Framework version 2.0, this behavior has been removed, and the example string is converted to <ph id="ph1">`xyz:c:/abc`</ph>.</source>
          <target state="translated">.NET Framework 버전 2.0에서에서이 동작은 제거 되 고 문자열의 예는으로 변환 됩니다 <ph id="ph1">`xyz:c:/abc`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The URI class supports the use of IP addresses in both quad-notation for IPv4 protocol and colon-hexadecimal for IPv6 protocol.</source>
          <target state="translated">URI 클래스는 IPv4 프로토콜에 대 한 두 개인 쿼드 표기법 및 IPv6 프로토콜에 대 한 콜론 16 진수의 IP 주소 사용을 지원합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Remember to enclose the IPv6 address in square brackets, as in http://[::1].</source>
          <target state="translated">기억 http://[::1에서와 같이 대괄호에 IPv6 주소를 포함 하려면].</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>International Resource Identifier Support</source>
          <target state="translated">국가별 리소스 식별자 지원</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Web addresses are typically expressed using uniform resource identifiers that consist of a very restricted set of characters:</source>
          <target state="translated">웹 주소는 일반적으로 매우 제한 된 문자 집합으로 구성 된 uniform resource identifier를 사용 하 여 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Upper and lower case ASCII letters from the English alphabet.</source>
          <target state="translated">영문자의 대문자 및 소문자 ASCII 문자.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Digits from 0 to 9.</source>
          <target state="translated">0~9의 숫자.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>A small number of other ASCII symbols.</source>
          <target state="translated">일부 기타 ASCII 기호.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The specifications for URIs are documented in RFC 2396, RFC 2732, RFC 3986, and RFC 3987 published by the Internet Engineering Task Force (IETF).</source>
          <target state="translated">Uri에 대 한 사양은 RFC 2396, RFC 2732, RFC 3986 및 여는 IETF Internet Engineering Task Force ()을 게시 하는 RFC 3987 설명 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>With the growth of the Internet, there is a growing need to identify resources using languages other than English.</source>
          <target state="translated">인터넷이 성장하면서 영어 이외의 언어로 리소스를 식별해야 할 필요성이 증가하고 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Identifiers which facilitate this need and allow non-ASCII characters (characters in the Unicode/ISO 10646 character set) are known as International Resource Identifiers (IRIs).</source>
          <target state="translated">이 필요성을 가능하게 하고 ASCII 이외 문자(유니코드/ISO 10646 문자 집합의 문자)를 허용하는 식별자를 IRI(International Resource Identifier)라고 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The specifications for IRIs are documented in RFC 3987 published by IETF.</source>
          <target state="translated">IRI 사양은 IETF에서 게시한 RFC 3987에 설명되어 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Using IRIs allows a URL to contain Unicode characters.</source>
          <target state="translated">IRI를 사용하면 URL에 유니코드 문자를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The existing <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide IRI support based on RFC 3987.</source>
          <target state="translated">기존 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> RFC 3987을 기준으로 IRI 지원을 제공할 수 있는 2.0 s p 1으로 및 클래스는.NET Framework v 3.5, 3.0 s p 1에서에서 확장 되었습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Users of .NET Framework versions before version 4.5 will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</source>
          <target state="translated">.NET Framework 버전이 버전 4.5의 이전 버전의 사용자는 특히 IRI를 사용 하지 않는 한 모든 변경 된.NET Framework 2.0 동작 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>This ensures application compatibility with prior versions of the .NET Framework.</source>
          <target state="translated">이 덕분에 .NET Framework 이전 버전과의 응용 프로그램 호환성이 제공됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>To enable support for IRI, the following change is required:</source>
          <target state="translated">에 IRI에 대 한 지원을 사용 하려면 다음과 같이 변경 하면가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied.</source>
          <target state="translated">도메인 이름에 적용 된 다국어 도메인 이름 (IDN) 구문 분석 및 여부 IRI 구문 분석 규칙을 적용 해야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>This can be done in the <bpt id="p1">*</bpt>machine.config<ept id="p1">*</ept> or in the <bpt id="p2">*</bpt>app.config<ept id="p2">*</ept> file.</source>
          <target state="translated">이 작업을 수행할 수 있습니다는 <bpt id="p1">*</bpt>machine.config<ept id="p1">*</ept> 또는 <bpt id="p2">*</bpt>app.config<ept id="p2">*</ept> 파일입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>For example, add the following:</source>
          <target state="translated">예를 들어, 다음을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Users of .NET Framework 4.5 and newer always have IRI enabled.</source>
          <target state="translated">사용자가.NET Framework 4.5 이상 버전에 항상 IRI 사용 하도록 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>IRI parsing cannot be changed using a <bpt id="p1">*</bpt>.config<ept id="p1">*</ept> file.</source>
          <target state="translated">IRI 구문 분석을 변경할 수 없습니다를 사용 하는 <bpt id="p1">*</bpt>.config<ept id="p1">*</ept> 파일입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents.</source>
          <target state="translated">IDN을 사용하면 도메인 이름의 모든 유니코드 레이블이 해당 Punycode 문자로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Punycode names contain only ASCII characters and always start with the xn-- prefix.</source>
          <target state="translated">Punycode 이름에는 ASCII 문자만 사용되며 항상 xn-- 접두사로 시작합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).</source>
          <target state="translated">대부분의 DNS 서버는 ASCII 문자만 지원하므로(RFC 3940 참조) 이렇게 해야 인터넷에서 기존 DNS 서버를 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Enabling IRI and IDN affects the value of the <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">IRI 및 IDN을 사용하도록 설정하면 <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A?displayProperty=nameWithType&gt;</ph> 속성 값에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Enabling IRI and IDN can also change the behavior of the <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Uri.OriginalString%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Uri.GetComponents%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Uri.IsWellFormedOriginalString%2A&gt;</ph> methods.</source>
          <target state="translated">IRI 및 IDN을 사용하면 <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Uri.OriginalString%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Uri.GetComponents%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Uri.IsWellFormedOriginalString%2A&gt;</ph> 메서드의 동작을 변경할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>There are three possible values for IDN depending on the DNS servers that are used:</source>
          <target state="translated">사용 되는 DNS 서버에 따라 IDN에 대 한 3 가지 가능한 값인 가지가 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>idn enabled = All</source>
          <target state="translated">사용 하도록 설정 하는 idn = All</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>This value will convert any Unicode domain names to their Punycode equivalents (IDN names).</source>
          <target state="translated">이 값은 모든 유니코드 도메인 이름을 해당하는 Punycode 항목(IDN 이름)으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>idn enabled = AllExceptIntranet</source>
          <target state="translated">사용 하도록 설정 하는 idn AllExceptIntranet =</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>This value will convert all Unicode domain names not on the local Intranet to use the Punycode equivalents (IDN names).</source>
          <target state="translated">이 값은 punycode (IDN 이름)을 사용 하도록 로컬 인트라넷에 없는 모든 유니코드 도메인 이름을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode name resolution.</source>
          <target state="translated">이 경우를 처리 하기 위해 로컬 인트라넷에 국제 이름을 인트라넷에 사용 되는 DNS 서버 유니코드 이름 확인을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>idn enabled = None</source>
          <target state="translated">사용 하도록 설정 하는 idn = 없음</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>This value will not convert any Unicode domain names to use Punycode.</source>
          <target state="translated">이 값은 Punycode를 사용하도록 어떠한 유니코드 도메인 이름도 변환하지 않습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>This is the default value which is consistent with the .NET Framework 2.0 behaviour.</source>
          <target state="translated">.NET Framework 2.0 동작은와 일치 하는 기본값입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>When IRI parsing is enabled (iriParsing enabled = <ph id="ph1">`true`</ph>) normalization and character checking are done according to the latest IRI rules in RFC 3986 and RFC 3987.</source>
          <target state="translated">IRI 구문 분석을 사용 하는 경우 (활성화 iriParsing = <ph id="ph1">`true`</ph>) 정규화 및 문자 검사 RFC 3986 및 RFC 3987 최신 IRI 규칙에 따라 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>When IRI parsing is disabled, normalization and character checking are performed according to RFC 2396 and RFC 2732 (for IPv6 literals).</source>
          <target state="translated">IRI 구문 분석 하지 않는 경우 정규화와 문자 검사 (IPv6 리터럴)에 대 한 RFC 2396 및 RFC 2732 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>In versions of the .NET Framework before version 4.5, the default value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본값은.NET framework 버전 4.5의 이전 버전에서는 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>In .NET Framework version 4.5 and newer, the default value is <ph id="ph1">`true`</ph>, and the enabled state of IRI parsing cannot be modified by settings in a <bpt id="p1">*</bpt>.config<ept id="p1">*</ept> file.</source>
          <target state="translated">기본값은.NET Framework 4.5 이상 버전에서에서 <ph id="ph1">`true`</ph>, 설정에 의해 IRI 구문 분석의 활성화 상태를 수정할 수 없습니다는 <bpt id="p1">*</bpt>.config<ept id="p1">*</ept> 파일입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>IRI and IDN processing in the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class can also be controlled using the <ph id="ph2">&lt;xref:System.Configuration.IriParsingElement?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Configuration.IdnElement?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Configuration.UriSection?displayProperty=nameWithType&gt;</ph> configuration setting classes.</source>
          <target state="translated">IRI 및 IDN에 대 한 처리는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 를 사용 하 여 클래스 제어할 수도 있습니다는 <ph id="ph2">&lt;xref:System.Configuration.IriParsingElement?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Configuration.IdnElement?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Configuration.UriSection?displayProperty=nameWithType&gt;</ph> 구성 설정 클래스입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IriParsingElement?displayProperty=nameWithType&gt;</ph> setting enables or disables IRI processing in the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.IriParsingElement?displayProperty=nameWithType&gt;</ph> 설정은 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 클래스에서 IRI 처리를 사용하거나 사용하지 않도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IdnElement?displayProperty=nameWithType&gt;</ph> setting enables or disables IDN processing in the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.IdnElement?displayProperty=nameWithType&gt;</ph> 설정은 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 클래스에서 IDN 처리를 사용하거나 사용하지 않도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IriParsingElement?displayProperty=nameWithType&gt;</ph> setting also indirectly controls IDN.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.IriParsingElement?displayProperty=nameWithType&gt;</ph> 설정도 IDN을 간접적으로 제어합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>IRI processing must be enabled for IDN processing to be possible.</source>
          <target state="translated">IDN 처리가 가능하려면 IRI 처리를 사용하도록 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.</source>
          <target state="translated">IRI 처리가 사용하지 않도록 설정되면 IDN 처리는 .NET Framework 2.0 동작이 호환성에 사용되고 IDN 이름이 사용되지 않는 기본 설정으로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The configuration setting for the <ph id="ph1">&lt;xref:System.Configuration.IriParsingElement?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Configuration.IdnElement?displayProperty=nameWithType&gt;</ph> will be read once when the first <ph id="ph3">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> class is constructed.</source>
          <target state="translated">에 대 한 구성 설정을 <ph id="ph1">&lt;xref:System.Configuration.IriParsingElement?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Configuration.IdnElement?displayProperty=nameWithType&gt;</ph> 읽을 한 번 때 첫 번째 <ph id="ph3">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Changes to configuration settings after that time are ignored.</source>
          <target state="translated">해당 시점 후의 구성 설정 변경 내용은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.GenericUriParser?displayProperty=nameWithType&gt;</ph> class has also been extended to allow creating a customizable parser that supports IRI and IDN.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.GenericUriParser?displayProperty=nameWithType&gt;</ph> 클래스는 IRI 및 IDN을 지원하는 사용자 지정 가능한 파서를 만들 수 있도록 확장되었습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The behavior of a <ph id="ph1">&lt;xref:System.GenericUriParser?displayProperty=nameWithType&gt;</ph> object is specified by passing a bitwise combination of the values available in the <ph id="ph2">&lt;xref:System.GenericUriParserOptions?displayProperty=nameWithType&gt;</ph> enumeration to the <ph id="ph3">&lt;xref:System.GenericUriParser?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.GenericUriParser?displayProperty=nameWithType&gt;</ph> 개체의 동작은 <ph id="ph2">&lt;xref:System.GenericUriParserOptions?displayProperty=nameWithType&gt;</ph> 열거형에서 사용 가능한 값의 비트 조합을 <ph id="ph3">&lt;xref:System.GenericUriParser?displayProperty=nameWithType&gt;</ph> 생성자에 전달하여 지정합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.GenericUriParserOptions.IriParsing?displayProperty=nameWithType&gt;</ph> type indicates the parser supports the parsing rules specified in RFC 3987 for International Resource Identifiers (IRI).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.GenericUriParserOptions.IriParsing?displayProperty=nameWithType&gt;</ph> 형식은 파서가 RFC 3987에 지정된 IRI(International Resource Identifier)에 대한 구문 분석 규칙을 지원함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Whether IRI is used is dictated by the configuration values previously discussed.</source>
          <target state="translated">IRI 사용 여부는 위에 설명 된 구성 값에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The <ph id="ph1">&lt;xref:System.GenericUriParserOptions.Idn?displayProperty=nameWithType&gt;</ph> type indicates the parser supports Internationalized Domain Name (IDN) parsing (IDN) of host names.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.GenericUriParserOptions.Idn?displayProperty=nameWithType&gt;</ph> 형식은 파서가 호스트 이름의 IDN(Internationalized Domain Name) 구문 분석을 지원함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Whether IDN is used is dictated by the configuration values previously discussed.</source>
          <target state="translated">IDN 사용 여부는 위에 설명 된 구성 값에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Performance Considerations</source>
          <target state="translated">성능 고려 사항</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>If you use a *Web.config *file that contains URIs to initialize your application, additional time is required to process the URIs if their scheme identifiers are nonstandard.</source>
          <target state="translated">*Web.config을 사용 하는 경우 *의 체계 식별자는 비표준입니다. Uri를 처리 하도록 응용 프로그램, 추가 시간을 초기화 하는 Uri가 포함 된 파일이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>In such a case, initialize the affected parts of your application when the URIs are needed, not at start time.</source>
          <target state="translated">이 경우 시작 때가 아니라 Uri가 필요할 때 응용 프로그램의 영향을 받는 부분이 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class and uses it to create a <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instance.</source>
          <target state="translated">다음 예제에서는의 인스턴스는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스를 사용 하 여 만들는 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Uri">
          <source>Because of security concerns, your application should use caution when accepting <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instances from untrusted sources and with <ph id="ph2">&lt;paramref name="dontEscape" /&gt;</ph> set to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.You can check a URI string for validity by calling the <ph id="ph4">&lt;see cref="M:System.Uri.IsWellFormedOriginalString" /&gt;</ph> method.</source>
          <target state="translated">보안 문제 때문에 응용 프로그램 때는 주의 해야 수락 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 과 신뢰할 수 없는 소스에서 인스턴스 <ph id="ph2">&lt;paramref name="dontEscape" /&gt;</ph> 로 설정 <ph id="ph3">&lt;see langword="true" /&gt;</ph>합니다. 호출 하 여 URI 문자열의 유효성을 확인할 수 있습니다는 <ph id="ph4">&lt;see cref="M:System.Uri.IsWellFormedOriginalString" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="T:System.Uri">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>A string that identifies the resource to be represented by the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 나타낼 리소스를 식별하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>Note that an IPv6 address in string form must be enclosed within brackets.</source>
          <target state="translated">문자열 형식에서 IPv6 주소는 대괄호로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>For example, "http://[2607:f8b0:400d:c06::69]".</source>
          <target state="translated">예를 들어 "http://[2607:f8b0:400d:c06::69]"입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> class with the specified URI.</source>
          <target state="translated">URI가 지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance from a URI string.</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> URI 문자열에서 인스턴스.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String)">
          <source>It parses the URI, puts it in canonical format, and makes any required escape encodings.</source>
          <target state="translated">URI 구문 분석, 정규 형식에 배치 하 고 필요한 이스케이프 인코딩을 사용 하면 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String)">
          <source>This constructor does not ensure that the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> refers to an accessible resource.</source>
          <target state="translated">이 생성자는 보장 하지 않습니다는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 가 액세스할 수 있는 리소스를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String)">
          <source>This constructor assumes that the <ph id="ph1">`string`</ph> parameter references an absolute URI and is equivalent to calling the <ph id="ph2">&lt;xref:System.Uri.%23ctor%2A&gt;</ph> constructor with <ph id="ph3">&lt;xref:System.UriKind&gt;</ph> set to <ph id="ph4">&lt;xref:System.UriKind.Absolute&gt;</ph>.</source>
          <target state="translated">이 생성자를 가정 하는 <ph id="ph1">`string`</ph> 매개 변수는 절대 URI를 참조 하 고 호출 하는 것과 같습니다는 <ph id="ph2">&lt;xref:System.Uri.%23ctor%2A&gt;</ph> 생성자 <ph id="ph3">&lt;xref:System.UriKind&gt;</ph> 로 설정 <ph id="ph4">&lt;xref:System.UriKind.Absolute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String)">
          <source>If the <ph id="ph1">`string`</ph> parameter passed to the constructor is a relative URI, this constructor will throw a <ph id="ph2">&lt;xref:System.UriFormatException&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`string`</ph> 생성자에 전달 된 매개 변수는 상대 URI 이면이 생성자를 발생 시킵니다는 <ph id="ph2">&lt;xref:System.UriFormatException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance with the URI "<ph id="ph2">http://www.contoso.com/</ph>".</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> URI 사용 하 여 인스턴스 "<ph id="ph2">http://www.contoso.com/</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt>In the <bpt id="p3">[</bpt>.NET for Windows Store apps<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p4">[</bpt>Portable Class Library<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="uriString" /&gt;</ph></source>
          <target state="translated"><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt><bpt id="p3">[</bpt>Windows 스토어 앱용 .NET<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 또는 <bpt id="p4">[</bpt>이식 가능한 클래스 라이브러리<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>에서 대신 기본 클래스 예외 <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>을 catch합니다.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="uriString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>is empty.</source>
          <target state="translated">가 비어 있는 경우</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>The scheme specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not correctly formed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 체계가 제대로 구성되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>See <ph id="ph1">&lt;see cref="M:System.Uri.CheckSchemeName(System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Uri.CheckSchemeName(System.String)" /&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> contains too many slashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 슬래시가 너무 많은 경우</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>The password specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 암호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>The host name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 호스트 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>The file name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 파일 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>The user name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 사용자 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>The host or authority name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> cannot be terminated by backslashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>The port number specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid or cannot be parsed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> exceeds 65519 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>의 길이가 65519자를 초과합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>The length of the scheme specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> exceeds 1023 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 체계의 길이가 1023자를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>There is an invalid character sequence in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 잘못된 문자 시퀀스가 있는 경우</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String)">
          <source>The MS-DOS path specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> must start with c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 MS-DOS 경로는 c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>로 시작해야 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> class containing the information required to serialize the new <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 인스턴스를 serialize하는 데 필요한 정보가 포함된 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> class containing the source of the serialized stream associated with the new <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 인스턴스와 관련하여 serialize된 스트림의 소스가 포함된 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> class from the specified instances of the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>와 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 클래스의 지정된 인스턴스로부터 <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface for the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">이 생성자를 구현 하는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> 에 대 한 인터페이스는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="serializationInfo" /&gt;</ph> parameter contains a <ph id="ph2">&lt;see langword="null" /&gt;</ph> URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serializationInfo" /&gt;</ph> 매개 변수에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph> URI가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="serializationInfo" /&gt;</ph> parameter contains a URI that is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serializationInfo" /&gt;</ph> 매개 변수에는 빈 URI가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The scheme specified is not correctly formed.</source>
          <target state="translated">지정된 체계가 올바르게 구성되지 않은 경우</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>See <ph id="ph1">&lt;see cref="M:System.Uri.CheckSchemeName(System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Uri.CheckSchemeName(System.String)" /&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The URI contains too many slashes.</source>
          <target state="translated">URI에 너무 많은 슬래시가 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The password specified in the URI is not valid.</source>
          <target state="translated">URI에 지정된 암호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The host name specified in URI is not valid.</source>
          <target state="translated">URI에 지정된 호스트 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The file name specified in the URI is not valid.</source>
          <target state="translated">URI에 지정된 파일 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The user name specified in the URI is not valid.</source>
          <target state="translated">URI에 지정된 사용자 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The host or authority name specified in the URI cannot be terminated by backslashes.</source>
          <target state="translated">URI에 지정된 호스트 또는 기관 이름을 백슬래시로 종료할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The port number specified in the URI is not valid or cannot be parsed.</source>
          <target state="translated">URI에 지정된 포트 번호가 잘못되었거나 해당 번호를 구문 분석할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The length of URI exceeds 65519 characters.</source>
          <target state="translated">URI의 길이가 65519자를 초과합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The length of the scheme specified in the URI exceeds 1023 characters.</source>
          <target state="translated">URI에 지정된 체계 길이가 1023자를 초과한 경우</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>There is an invalid character sequence in the URI.</source>
          <target state="translated">URI에 잘못된 문자 시퀀스가 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The MS-DOS path specified in the URI must start with c:<ph id="ph1">\\</ph><ph id="ph2">\\</ph>.</source>
          <target state="translated">URI에 지정된 MS-DOS 경로는 c:<ph id="ph1">\\</ph><ph id="ph2">\\</ph>로 시작해야 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>A string that identifies the resource to be represented by the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 나타낼 리소스를 식별하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>Note that an IPv6 address in string form must be enclosed within brackets.</source>
          <target state="translated">문자열 형식에서 IPv6 주소는 대괄호로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>For example, "http://[2607:f8b0:400d:c06::69]".</source>
          <target state="translated">예를 들어 "http://[2607:f8b0:400d:c06::69]"입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>uriString<ept id="p1">&lt;/c&gt;</ept> is completely escaped; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>uriString<ept id="p1">&lt;/c&gt;</ept>이 완전히 이스케이프되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> class with the specified URI, with explicit control of character escaping.</source>
          <target state="translated">문자 이스케이프를 명시적으로 제어하여 URI가 지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance from a URI string.</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> URI 문자열에서 인스턴스.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>It parses the URI and puts it in canonical format.</source>
          <target state="translated">URI를 구문 분석 하 고 정규 형식에 배치 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The <ph id="ph1">`dontEscape`</ph> parameter controls whether reserved characters are translated into escape sequences.</source>
          <target state="translated"><ph id="ph1">`dontEscape`</ph> 매개 변수 컨트롤 예약 된 문자를 변환할지 여부를 이스케이프 시퀀스로 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>This parameter should be set to <ph id="ph1">`true`</ph> only if you are certain that all reserved characters in the URI have been escaped.</source>
          <target state="translated">이 매개 변수 설정 해야 <ph id="ph1">`true`</ph> URI에서 모든 예약 된 문자 이스케이프 처리 되었습니다 되었음을 확인 하는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>Setting the value to <ph id="ph1">`true`</ph> for a URI that has not been completely escaped can cause unexpected behavior.</source>
          <target state="translated">값을 설정 <ph id="ph1">`true`</ph> 에 이스케이프 되지 않은 URI 예기치 않은 동작이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>It is strongly recommended that you always set this parameter to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 매개 변수를 설정 항상 가장 좋습니다 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>If <ph id="ph1">`dontEscape`</ph> is set to <ph id="ph2">`false`</ph>, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence.</source>
          <target state="translated">경우 <ph id="ph1">`dontEscape`</ph> 로 설정 된 <ph id="ph2">`false`</ph>, 백분율 (%)의 항목을 모두 유효한 이스케이프 시퀀스 뒤에 있는지 확인 하 여 예약된 된 문자를 이스케이프 하는 생성자입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>If the character sequence following a percent is not valid, the percent is replaced by %25.</source>
          <target state="translated">다음의 백분율 문자 시퀀스 유효 하지 않을 경우 백분율 %25로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>This constructor does not ensure that the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> refers to an accessible resource.</source>
          <target state="translated">이 생성자는 보장 하지 않습니다는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 가 액세스할 수 있는 리소스를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance for the URI <ph id="ph2">http://www.contoso.com/Hello%20World.htm</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> URI에 대 한 인스턴스 <ph id="ph2">http://www.contoso.com/Hello%20World.htm</ph>합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>Because the contained URI is completely escaped and is in canonical form, the <ph id="ph1">`dontEscape`</ph> parameter can be set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">포함 된 URI가 완전히 이스케이프 및 정규 형식 때문에 <ph id="ph1">`dontEscape`</ph> 로 매개 변수를 설정할 수 있습니다 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is empty or contains only spaces.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>이 비어 있거나 공백만 포함하는 경우</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The scheme specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 체계가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> contains too many slashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 슬래시가 너무 많은 경우</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The password specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 암호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The host name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 호스트 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The file name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 파일 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The user name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 사용자 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The host or authority name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> cannot be terminated by backslashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The port number specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid or cannot be parsed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The length of <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> exceeds 65519 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>의 길이가 65519자를 초과합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The length of the scheme specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> exceeds 1023 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 체계의 길이가 1023자를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>There is an invalid character sequence in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 잘못된 문자 시퀀스가 있는 경우</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.Boolean)">
          <source>The MS-DOS path specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> must start with c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 MS-DOS 경로는 c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>로 시작해야 합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>A string that identifies the resource to be represented by the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 나타낼 리소스를 식별하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>Note that an IPv6 address in string form must be enclosed within brackets.</source>
          <target state="translated">문자열 형식에서 IPv6 주소는 대괄호로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>For example, "http://[2607:f8b0:400d:c06::69]".</source>
          <target state="translated">예를 들어 "http://[2607:f8b0:400d:c06::69]"입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.</source>
          <target state="translated">URI 문자열이 상대 URI 또는 절대 URI인지, 아니면 결정되지 않았는지를 지정합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> class with the specified URI.</source>
          <target state="translated">URI가 지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>This constructor allows you to specify if the URI string is a relative URI, absolute URI, or is indeterminate.</source>
          <target state="translated">이 생성자를 사용하면 URI 문자열이 상대 URI 또는 절대 URI인지, 아니면 결정되지 않았는지를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>Relative and absolute URIs have different restrictions on their format.</source>
          <target state="translated">상대 및 절대 Uri의 형식에 서로 다른 제한이 있습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>For example, a relative URI does not require a scheme or an authority.</source>
          <target state="translated">예를 들어 체계나 인증 기관이 상대 URI 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The value you specify in <ph id="ph1">`uriKind`</ph> must match the type of URI passed in <ph id="ph2">`uriString`</ph>.</source>
          <target state="translated">에 지정한 값 <ph id="ph1">`uriKind`</ph> 에 전달 된 URI의 형식과 일치 해야 <ph id="ph2">`uriString`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>However, if <ph id="ph1">&lt;xref:System.UriKind.RelativeOrAbsolute&gt;</ph> is specified, the URI string can be relative or absolute.</source>
          <target state="translated">그러나 경우 <ph id="ph1">&lt;xref:System.UriKind.RelativeOrAbsolute&gt;</ph> , 지정한 상대 또는 절대 URI 문자열이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source><ph id="ph1">&lt;paramref name="uriKind" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriKind" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt>In the <bpt id="p3">[</bpt>.NET for Windows Store apps<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p4">[</bpt>Portable Class Library<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="uriString" /&gt;</ph></source>
          <target state="translated"><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt><bpt id="p3">[</bpt>Windows 스토어 앱용 .NET<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 또는 <bpt id="p4">[</bpt>이식 가능한 클래스 라이브러리<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>에서 대신 기본 클래스 예외 <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>을 catch합니다.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept><ph id="ph4">
</ph><ph id="ph5">&lt;paramref name="uriString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>contains a relative URI and <ph id="ph1">&lt;paramref name="uriKind" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.UriKind.Absolute" /&gt;</ph>.</source>
          <target state="translated">에 상대 URI가 포함되고 <ph id="ph1">&lt;paramref name="uriKind" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.UriKind.Absolute" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>or</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> contains an absolute URI and <ph id="ph2">&lt;paramref name="uriKind" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.UriKind.Relative" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 절대 URI가 포함되어 있고 <ph id="ph2">&lt;paramref name="uriKind" /&gt;</ph>가 <ph id="ph3">&lt;see cref="F:System.UriKind.Relative" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>or</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>가 비어 있는 경우</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The scheme specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not correctly formed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 체계가 제대로 구성되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>See <ph id="ph1">&lt;see cref="M:System.Uri.CheckSchemeName(System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Uri.CheckSchemeName(System.String)" /&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> contains too many slashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 슬래시가 너무 많은 경우</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The password specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 암호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The host name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 호스트 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The file name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 파일 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The user name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 사용자 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The host or authority name specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> cannot be terminated by backslashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The port number specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> is not valid or cannot be parsed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The length of <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> exceeds 65519 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>의 길이가 65519자를 초과합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The length of the scheme specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> exceeds 1023 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 체계의 길이가 1023자를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>There is an invalid character sequence in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 잘못된 문자 시퀀스가 있는 경우</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.String,System.UriKind)">
          <source>The MS-DOS path specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> must start with c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 MS-DOS 경로는 c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>로 시작해야 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The base URI.</source>
          <target state="translated">기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The relative URI to add to the base URI.</source>
          <target state="translated">기본 URI에 추가할 상대 URI입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> class based on the specified base URI and relative URI string.</source>
          <target state="translated">지정된 기본 URI와 상대 URI 문자열을 기반으로 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance by combining the <ph id="ph2">`baseUri`</ph> and the <ph id="ph3">`relativeUri`</ph>.</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 결합 하 여 인스턴스는 <ph id="ph2">`baseUri`</ph> 및 <ph id="ph3">`relativeUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>If <ph id="ph1">`relativeUri`</ph> is an absolute URI (containing a scheme, host name, and optionally a port number), the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance is created using only <ph id="ph3">`relativeUri`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`relativeUri`</ph> (구성표, 호스트 이름 및 필요에 따라 포트 번호 포함)는 절대 uri 인는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 만 사용 하 여 인스턴스를 만들 <ph id="ph3">`relativeUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>If the <ph id="ph1">`baseUri`</ph> has relative parts (like <ph id="ph2">`/api`</ph>), then the relative part must be terminated with a slash, (like <ph id="ph3">`/api/`</ph>), if the relative part of <ph id="ph4">`baseUri`</ph> is to be preserved in the constructed <ph id="ph5">&lt;xref:System.Uri&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`baseUri`</ph> 상대 부분으로 구성 (같은 <ph id="ph2">`/api`</ph>), 상대 부품 슬래시로 끝나야 합니다 (같은 <ph id="ph3">`/api/`</ph>) 경우의 상대 일부 <ph id="ph4">`baseUri`</ph> 되도록에 생성 된 보존 <ph id="ph5">&lt;xref:System.Uri&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>Additionally, if the <ph id="ph1">`relativeUri`</ph> begins with a slash, then it will replace any relative part of the <ph id="ph2">`baseUri`</ph></source>
          <target state="translated">또한 경우는 <ph id="ph1">`relativeUri`</ph> 상대 부분의 바뀝니다 다음 슬래시로 시작 되는 <ph id="ph2">`baseUri`</ph></target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>This constructor does not ensure that the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> refers to an accessible resource.</source>
          <target state="translated">이 생성자는 보장 하지 않습니다는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 가 액세스할 수 있는 리소스를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The following example creates a new instance of the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class by combining the relative URIs <ph id="ph2">http://www.contoso.com</ph> and catalog/shownew.htm to form the absolute URI <ph id="ph3">http://www.contoso.com/catalog/shownew.htm</ph>.</source>
          <target state="translated">다음 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 상대 Uri를 결합 하 여 클래스 <ph id="ph2">http://www.contoso.com</ph> 및 절대 URI를 구성 하는 catalog/shownew.htm <ph id="ph3">http://www.contoso.com/catalog/shownew.htm</ph>합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is not an absolute <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>가 절대 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt>In the <bpt id="p3">[</bpt>.NET for Windows Store apps<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p4">[</bpt>Portable Class Library<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt><bpt id="p3">[</bpt>Windows 스토어 앱용 .NET<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 또는 <bpt id="p4">[</bpt>이식 가능한 클래스 라이브러리<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>에서 대신 기본 클래스 예외 <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>을 catch합니다.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept></target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is empty or contains only spaces.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI가 비어 있거나 공백만 포함하는 경우</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The scheme specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 체계가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> contains too many slashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 슬래시가 너무 많은 경우</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The password specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 암호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The host name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 호스트 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The file name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 파일 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The user name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 사용자 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The host or authority name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> cannot be terminated by backslashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The port number specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid or cannot be parsed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The length of the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> exceeds 65519 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI의 길이가 65519자를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The length of the scheme specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> exceeds 1023 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 체계의 길이가 1023자를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>There is an invalid character sequence in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 잘못된 문자 시퀀스가 있는 경우</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String)">
          <source>The MS-DOS path specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> must start with c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 MS-DOS 경로는 c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>로 시작해야 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>An absolute <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that is the base for the new <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스의 기본인 절대 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>A relative <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that is combined with <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept>와 결합되는 상대 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> class based on the combination of a specified base <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance and a relative <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated">지정된 기본 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스와 상대 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스의 조합을 기반으로 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance by combining an absolute <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance, <ph id="ph3">`baseUri`</ph>, with a relative <ph id="ph4">&lt;xref:System.Uri&gt;</ph> instance, <ph id="ph5">`relativeUri`</ph>.</source>
          <target state="translated">이 생성자를 새로 만듭니다. <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 절대 결합 하 여 인스턴스 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 인스턴스에 <ph id="ph3">`baseUri`</ph>와 상대 <ph id="ph4">&lt;xref:System.Uri&gt;</ph> 인스턴스, <ph id="ph5">`relativeUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>If <ph id="ph1">`relativeUri`</ph> is an absolute <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance (containing a scheme, host name, and optionally a port number), the <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance is created using only <ph id="ph4">`relativeUri`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`relativeUri`</ph> 가 절대 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> (구성표, 호스트 이름 및 필요에 따라 포트 번호 포함) 인스턴스는 <ph id="ph3">&lt;xref:System.Uri&gt;</ph> 만 사용 하 여 인스턴스를 만들 <ph id="ph4">`relativeUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>If the <ph id="ph1">`baseUri`</ph> has relative parts (like <ph id="ph2">`/api`</ph>), then the relative part must be terminated with a slash, (like <ph id="ph3">`/api/`</ph>), if the relative part of <ph id="ph4">`baseUri`</ph> is to be preserved in the constructed <ph id="ph5">&lt;xref:System.Uri&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`baseUri`</ph> 상대 부분으로 구성 (같은 <ph id="ph2">`/api`</ph>), 상대 부품 슬래시로 끝나야 합니다 (같은 <ph id="ph3">`/api/`</ph>) 경우의 상대 일부 <ph id="ph4">`baseUri`</ph> 되도록에 생성 된 보존 <ph id="ph5">&lt;xref:System.Uri&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>Additionally, if the <ph id="ph1">`relativeUri`</ph> begins with a slash, then it will replace any relative part of the <ph id="ph2">`baseUri`</ph></source>
          <target state="translated">또한 경우는 <ph id="ph1">`relativeUri`</ph> 상대 부분의 바뀝니다 다음 슬래시로 시작 되는 <ph id="ph2">`baseUri`</ph></target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>This constructor does not ensure that the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> refers to an accessible resource.</source>
          <target state="translated">이 생성자는 보장 하지 않습니다는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 가 액세스할 수 있는 리소스를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>This example creates an absolute <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance, <ph id="ph2">`absoluteUri`</ph>, and a relative <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance, <ph id="ph4">`relativeUri`</ph>.</source>
          <target state="translated">이 예제에서는 절대 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스, <ph id="ph2">`absoluteUri`</ph>, 인스턴스와 상대 <ph id="ph3">&lt;xref:System.Uri&gt;</ph> 인스턴스, <ph id="ph4">`relativeUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>A new <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance, <ph id="ph2">`combinedUri`</ph>, is then created from these two instances.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스에 <ph id="ph2">`combinedUri`</ph>, 그런 다음 이러한 두 인스턴스에서 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is not an absolute <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>가 절대 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is not an absolute <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>가 절대 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt>In the <bpt id="p3">[</bpt>.NET for Windows Store apps<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p4">[</bpt>Portable Class Library<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt><bpt id="p3">[</bpt>Windows 스토어 앱용 .NET<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 또는 <bpt id="p4">[</bpt>이식 가능한 클래스 라이브러리<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>에서 대신 기본 클래스 예외 <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>을 catch합니다.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept></target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is empty or contains only spaces.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI가 비어 있거나 공백만 포함하는 경우</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The scheme specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 체계가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> contains too many slashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 슬래시가 너무 많은 경우</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The password specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 암호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The host name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 호스트 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The file name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 파일 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The user name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 사용자 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The host or authority name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> cannot be terminated by backslashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The port number specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid or cannot be parsed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The length of the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> exceeds 65519 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI의 길이가 65519자를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The length of the scheme specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> exceeds 1023 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 체계의 길이가 1023자를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>There is an invalid character sequence in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 잘못된 문자 시퀀스가 있는 경우</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.Uri)">
          <source>The MS-DOS path specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> must start with c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 MS-DOS 경로는 c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>로 시작해야 합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The base URI.</source>
          <target state="translated">기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The relative URI to add to the base URI.</source>
          <target state="translated">기본 URI에 추가할 상대 URI입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>uriString<ept id="p1">&lt;/c&gt;</ept> is completely escaped; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>uriString<ept id="p1">&lt;/c&gt;</ept>이 완전히 이스케이프되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> class based on the specified base and relative URIs, with explicit control of character escaping.</source>
          <target state="translated">문자 이스케이프를 명시적으로 제어하여 지정된 기본 URI와 상대 URI를 기반으로 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance by combining <ph id="ph2">`baseUri`</ph> and <ph id="ph3">`relativeUri`</ph>.</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 결합 하 여 인스턴스 <ph id="ph2">`baseUri`</ph> 및 <ph id="ph3">`relativeUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>If the URI passed in <ph id="ph1">`relativeUri`</ph> is an absolute URI (containing a scheme, host name, and optionally a port number), the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance is created using only <ph id="ph3">`relativeUri`</ph>.</source>
          <target state="translated">에 전달 된 URI <ph id="ph1">`relativeUri`</ph> (구성표, 호스트 이름 및 필요에 따라 포트 번호 포함)는 절대 uri 인는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 만 사용 하 여 인스턴스를 만들 <ph id="ph3">`relativeUri`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The <ph id="ph1">`dontEscape`</ph> parameter controls whether reserved characters are translated into escape sequences.</source>
          <target state="translated"><ph id="ph1">`dontEscape`</ph> 매개 변수 컨트롤 예약 된 문자를 변환할지 여부를 이스케이프 시퀀스로 합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>This parameter should be set to <ph id="ph1">`true`</ph> only if you are certain that all reserved characters in the URI have been escaped.</source>
          <target state="translated">이 매개 변수 설정 해야 <ph id="ph1">`true`</ph> URI에서 모든 예약 된 문자 이스케이프 처리 되었습니다 되었음을 확인 하는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>Setting the value to <ph id="ph1">`true`</ph> for a URI that has not been completely escaped can cause unexpected behavior.</source>
          <target state="translated">값을 설정 <ph id="ph1">`true`</ph> 에 이스케이프 되지 않은 URI 예기치 않은 동작이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>It is strongly recommended that you always set this parameter to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 매개 변수를 설정 항상 가장 좋습니다 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>If <ph id="ph1">`dontEscape`</ph> is set to <ph id="ph2">`false`</ph>, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence.</source>
          <target state="translated">경우 <ph id="ph1">`dontEscape`</ph> 로 설정 된 <ph id="ph2">`false`</ph>, 백분율 (%)의 항목을 모두 유효한 이스케이프 시퀀스 뒤에 있는지 확인 하 여 예약된 된 문자를 이스케이프 하는 생성자입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>If the character sequence following a percent is not valid, the percent is replaced by %25.</source>
          <target state="translated">다음의 백분율 문자 시퀀스 유효 하지 않을 경우 백분율 %25로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>This constructor does not ensure that the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> refers to an accessible resource.</source>
          <target state="translated">이 생성자는 보장 하지 않습니다는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 가 액세스할 수 있는 리소스를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The following example creates a new instance of the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class by combining the relative URIs <ph id="ph2">http://www.contoso.com</ph> and Hello%20World.htm to form an absolute URI.</source>
          <target state="translated">다음 예제에서는의 새 인스턴스를 만듭니다.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 상대 Uri를 결합 하 여 클래스 <ph id="ph2">http://www.contoso.com</ph> 및 Hello%20World.htm 절대 URI를 구성 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is not an absolute <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>가 절대 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is empty or contains only spaces.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI가 비어 있거나 공백만 포함하는 경우</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The scheme specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 체계가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> contains too many slashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 슬래시가 너무 많은 경우</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The password specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 암호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The host name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 호스트 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The file name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 파일 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The user name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 사용자 이름이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The host or authority name specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> cannot be terminated by backslashes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 호스트 또는 인증 기관 이름이 백슬래시로 끝나는 경우</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The port number specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> is not valid or cannot be parsed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 포트 번호가 잘못되었거나 구문 분석될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The length of the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> exceeds 65519 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI의 길이가 65519자를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The length of the scheme specified in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph> exceeds 1023 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 지정된 체계의 길이가 1023자를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>There is an invalid character sequence in the URI formed by combining <ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> and <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="relativeUri" /&gt;</ph>를 조합하여 만든 URI에 잘못된 문자 시퀀스가 있는 경우</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>The MS-DOS path specified in <ph id="ph1">&lt;paramref name="uriString" /&gt;</ph> must start with c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uriString" /&gt;</ph>에 지정된 MS-DOS 경로는 c:<ph id="ph2">\\</ph><ph id="ph3">\\</ph>로 시작해야 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>Because of security concerns, your application should not call this constructor with URI strings from untrusted sources and with <ph id="ph1">&lt;paramref name="dontEscape" /&gt;</ph> set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">보안 문제 때문에 응용 프로그램은이 생성자를 호출 하지이 URI 문자열과 신뢰할 수 없는 소스에서 <ph id="ph1">&lt;paramref name="dontEscape" /&gt;</ph> 로 설정 <ph id="ph2">&lt;see langword="true" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
          <source>Alternately, you can check a URI string for validity by calling the <ph id="ph1">&lt;see cref="M:System.Uri.IsWellFormedOriginalString" /&gt;</ph> method prior to calling this constructor.</source>
          <target state="translated">또는 호출 하 여 URI 문자열의 유효성을 확인할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Uri.IsWellFormedOriginalString" /&gt;</ph> 이 생성자를 호출 하기 전에 메서드.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="P:System.Uri.AbsolutePath">
          <source>Gets the absolute path of the URI.</source>
          <target state="translated">URI의 절대 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.AbsolutePath">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the absolute path to the resource.</source>
          <target state="translated">리소스에 대한 절대 경로가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.AbsolutePath">
          <source>The <ph id="ph1">&lt;xref:System.Uri.AbsolutePath%2A&gt;</ph> property contains the path information that the server uses to resolve requests for information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.AbsolutePath%2A&gt;</ph> 속성 정보에 대 한 요청을 확인 하는 서버에서 사용 하는 경로 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.AbsolutePath">
          <source>Typically this is the path to the desired information on the server's file system, although it also can indicate the application or script the server must run to provide the information.</source>
          <target state="translated">일반적으로 이것은 또한 확보 응용 프로그램이 나 정보를 제공 하는 서버를 실행 해야 하는 스크립트 있지만 서버의 파일 시스템에 원하는 정보에 대 한 경로.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.AbsolutePath">
          <source>The path information does not include the scheme, host name, or query portion of the URI.</source>
          <target state="translated">구성표, 호스트 이름 또는 URI의 쿼리 부분에는 경로 정보가 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.AbsolutePath">
          <source>The following example writes the path /catalog/shownew.htm to the console.</source>
          <target state="translated">다음 예제에서는 경로 /catalog/shownew.htm을 콘솔에 씁니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="P:System.Uri.AbsolutePath">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="P:System.Uri.AbsoluteUri">
          <source>Gets the absolute URI.</source>
          <target state="translated">절대 URI를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.AbsoluteUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the entire URI.</source>
          <target state="translated">전체 URI가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.AbsoluteUri">
          <source>The <ph id="ph1">&lt;xref:System.Uri.AbsoluteUri%2A&gt;</ph> property includes the entire URI stored in the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance, including all fragments and query strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.AbsoluteUri%2A&gt;</ph> 속성에 저장 된 전체 URI를 포함 된는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 모든 조각 및 쿼리 문자열을 포함 하 여 인스턴스.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.AbsoluteUri">
          <source>The following example writes the complete contents of the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance to the console.</source>
          <target state="translated">다음 예제에서는 작성의 전체 내용을 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 콘솔에는 인스턴스.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.AbsoluteUri">
          <source>In the example shown, <ph id="ph1">http://www.contoso.com/catalog/shownew.htm?date=today</ph> is written to the console.</source>
          <target state="translated">표시 된 예제에서 <ph id="ph1">http://www.contoso.com/catalog/shownew.htm?date=today</ph> 콘솔에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="P:System.Uri.AbsoluteUri">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="P:System.Uri.Authority">
          <source>Gets the Domain Name System (DNS) host name or IP address and the port number for a server.</source>
          <target state="translated">서버의 DNS(Domain Name System) 호스트 이름이나 IP 주소 및 포트 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Authority">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the authority component of the URI represented by this instance.</source>
          <target state="translated">이 인스턴스가 나타내는 URI의 인증 기관 구성 요소가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Authority">
          <source>The <ph id="ph1">&lt;xref:System.Uri.Authority%2A&gt;</ph> property is typically a server DNS host name or IP address.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.Authority%2A&gt;</ph> 속성은 일반적으로 서버 DNS 호스트 이름 또는 IP 주소입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Authority">
          <source>This property might include the service port number if it differs from the default port for the URI.</source>
          <target state="translated">이 속성은 URI에 대 한 기본 포트와에서 다른 경우 서비스 포트 번호를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Authority">
          <source>If the <ph id="ph1">&lt;xref:System.Uri.Authority%2A&gt;</ph> component contains reserved characters, these are escaped in the string value returned by this property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Uri.Authority%2A&gt;</ph> 예약 된 문자를 포함 하는 구성 요소,이이 속성에서 반환 된 문자열 값에 이스케이프 합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Authority">
          <source>The following example writes the host name (www.contoso.com) and port number (8080) of the server to the console.</source>
          <target state="translated">다음 예제에서는 호스트 이름 (www.contoso.com) 및 포트 번호를 씁니다 (8080)의 콘솔에는 서버입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="P:System.Uri.Authority">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Uri.Canonicalize">
          <source>Converts the internally stored URI to canonical form.</source>
          <target state="translated">내부적으로 저장된 URI를 정규형으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Canonicalize">
          <source>Stores the canonical version of the URI internally.</source>
          <target state="translated">URI의 정식 버전을 내부적으로 저장합니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Uri.Canonicalize">
          <source>This instance represents a relative URI, and this method is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Uri.Canonicalize">
          <source>The URI is incorrectly formed.</source>
          <target state="translated">URI가 잘못 구성된 경우</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Uri.CheckHostName(System.String)">
          <source>The host name to validate.</source>
          <target state="translated">유효성을 확인할 호스트 이름입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Uri.CheckHostName(System.String)">
          <source>This can be an IPv4 or IPv6 address or an Internet host name.</source>
          <target state="translated">IPv4 또는 IPv6 주소이거나 인터넷 호스트 이름일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Uri.CheckHostName(System.String)">
          <source>Determines whether the specified host name is a valid DNS name.</source>
          <target state="translated">지정된 호스트 이름이 유효한 DNS 이름인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Uri.CheckHostName(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.UriHostNameType" /&gt;</ph> that indicates the type of the host name.</source>
          <target state="translated">호스트 이름의 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.UriHostNameType" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Uri.CheckHostName(System.String)">
          <source>If the type of the host name cannot be determined or if the host name is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or a zero-length string, this method returns <ph id="ph2">&lt;see cref="F:System.UriHostNameType.Unknown" /&gt;</ph>.</source>
          <target state="translated">호스트 이름의 형식을 확인할 수 없거나 호스트 이름이 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 길이가 0인 문자열이면 이 메서드에서 <ph id="ph2">&lt;see cref="F:System.UriHostNameType.Unknown" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.CheckHostName(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Uri.CheckHostName%2A&gt;</ph> method checks that the host name provided meets the requirements for a valid Internet host name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.CheckHostName%2A&gt;</ph> 메서드 제공한 호스트 이름은 올바른 인터넷 호스트 이름에 대 한 요구 사항을 충족 하는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.CheckHostName(System.String)">
          <source>It does not, however, perform a host-name lookup to verify the existence of the host.</source>
          <target state="translated">그러나 호스트의 존재 여부를 확인 하는 호스트 이름 조회 수행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.CheckHostName(System.String)">
          <source>The following example checks whether the host name is valid.</source>
          <target state="translated">다음 예제에서는 호스트 이름이 올바른지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Uri.CheckSchemeName(System.String)">
          <source>The scheme name to validate.</source>
          <target state="translated">유효성을 확인할 체계 이름입니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Uri.CheckSchemeName(System.String)">
          <source>Determines whether the specified scheme name is valid.</source>
          <target state="translated">지정된 체계 이름이 유효한지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Uri.CheckSchemeName(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the scheme name is valid; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스키마 이름이 유효하면 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값이  <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.CheckSchemeName(System.String)">
          <source>This method checks the scheme name for validity according to RFC 2396 by default.</source>
          <target state="translated">이 메서드는 기본적으로 RFC 2396에 따라 유효성에 대 한 구성표 이름을 확인합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.CheckSchemeName(System.String)">
          <source>If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, this method checks the scheme name for validity according to RFC 3986.</source>
          <target state="translated">국제 리소스 식별자 (펼치기) 하거나 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우이 메서드는 RFC 3986에 따라 유효성에 대 한 구성표 이름을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.CheckSchemeName(System.String)">
          <source>The scheme name must begin with a letter and must contain only letters, digits, and the characters ".", "+", or "-".</source>
          <target state="translated">구성표 이름은 문자로 시작 해야 하며 문자, 숫자 및 문자를 포함 해야 합니다 ".", "+" 또는 "-"입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.CheckSchemeName(System.String)">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.CheckSchemeName(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and checks whether the scheme name is valid.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 및 스키마 이름이 올바른지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Uri.CheckSecurity">
          <source>Calling this method has no effect.</source>
          <target state="translated">이 메서드를 호출해도 아무런 효과가 나타나지 않습니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.UriComponents" /&gt;</ph> values that specifies the parts of <bpt id="p1">&lt;c&gt;</bpt>uri1<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>uri2<ept id="p2">&lt;/c&gt;</ept> to compare.</source>
          <target state="translated">비교할 <bpt id="p1">&lt;c&gt;</bpt>uri1<ept id="p1">&lt;/c&gt;</ept>과 <bpt id="p2">&lt;c&gt;</bpt>uri2<ept id="p2">&lt;/c&gt;</ept>의 부분을 지정하는 <ph id="ph1">&lt;see cref="T:System.UriComponents" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.UriFormat" /&gt;</ph> values that specifies the character escaping used when the URI components are compared.</source>
          <target state="translated">URI 구성 요소를 비교할 때 사용되는 문자 이스케이프를 지정하는 <ph id="ph1">&lt;see cref="T:System.UriFormat" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.StringComparison" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.StringComparison" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source>Compares the specified parts of two URIs using the specified comparison rules.</source>
          <target state="translated">지정된 비교 규칙을 사용하여 두 URI의 지정된 부분을 비교합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that indicates the lexical relationship between the compared <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> components.</source>
          <target state="translated">비교한 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 구성 요소 간의 어휘 관계를 나타내는 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 의미</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="uri1" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="uri2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="uri1" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="uri2" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="uri1" /&gt;</ph> equals <ph id="ph4">&lt;paramref name="uri2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="uri1" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="uri2" /&gt;</ph>와 같습니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="uri1" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="uri2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="uri1" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="uri2" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source>If both <ph id="ph1">`uri1`</ph> and <ph id="ph2">`uri2`</ph> are <ph id="ph3">`null`</ph>, this method returns 0.</source>
          <target state="translated">두 <ph id="ph1">`uri1`</ph> 및 <ph id="ph2">`uri2`</ph> 는 <ph id="ph3">`null`</ph>,이 메서드는 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source>When comparing URI values, a relative URI is always less than an absolute URI, and a non-null URI is always greater than a null URI.</source>
          <target state="translated">URI 값을 비교할 때 상대 URI는 항상 절대 URI 및 null이 아닌 URI는 항상 null URI 보다 큰 미만입니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source>For cases where both <ph id="ph1">`uri1`</ph> and <ph id="ph2">`uri2`</ph> are not <ph id="ph3">`null`</ph> and are both relative URIs or both absolute URIs, the <ph id="ph4">&lt;xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType&gt;</ph> method performs the comparison.</source>
          <target state="translated">사례에 대 한 여기서 둘 다 <ph id="ph1">`uri1`</ph> 및 <ph id="ph2">`uri2`</ph> 없는 <ph id="ph3">`null`</ph> 절과 상대 Uri 또는 둘 다 절대 Uri를 모두는 <ph id="ph4">&lt;xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType&gt;</ph> 메서드는 비교를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
          <source><ph id="ph1">&lt;paramref name="comparisonType" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.StringComparison" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparisonType" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.StringComparison" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="P:System.Uri.DnsSafeHost">
          <source>Gets a host name that, after being unescaped if necessary, is safe to use for DNS resolution.</source>
          <target state="translated">필요한 경우 이스케이프 해제된 후 호스트 이름을 가져오는 것이 DNS 확인에 사용하기에 안전합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the host part of the URI in a format suitable for DNS resolution; or the original host string, if it is already suitable for resolution.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 해상도에 적합 한 이미 있으면 DNS 확인 또는 원래 호스트 문자열에 대 한 적합 한 형식에서 URI의 호스트 부분을 포함 하는 합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>For IPv6 addresses, the brackets ([]) are removed and the <ph id="ph1">&lt;xref:System.Net.IPAddress.ScopeId%2A&gt;</ph> property is set, if one was specified when this instance was constructed.</source>
          <target state="translated">IPv6 주소에 대 한 괄호 ()를 제거 하 고 <ph id="ph1">&lt;xref:System.Net.IPAddress.ScopeId%2A&gt;</ph> 속성이 설정 되어이 인스턴스를 만들 때 지정 된 경우.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>If you used an escaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"), then DnsSafeHost returns an escaped string.</source>
          <target state="translated">(예를 들어 "http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"), 다음 DnsSafeHost 반환 이스케이프 된 문자열이이 인스턴스를 구성 하려면 이스케이프 된 문자열을 사용 하는 경우입니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>Unescape any escaped string returned from <ph id="ph1">`DnsSafeHost`</ph> before using that string for DNS resolution (see the Example).</source>
          <target state="translated">반환 된 모든 이스케이프 된 문자열을 이스케이프 해제 <ph id="ph1">`DnsSafeHost`</ph> DNS 확인을 위해 해당 문자열을 사용 하기 전에 (예 참조).</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>If you used an invalid unescaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), then DnsSafeHost returns an unescaped string.</source>
          <target state="translated">잘못 된 이스케이프 되지 않은 문자열 (예를 들어 "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), 다음 DnsSafeHost 반환 이스케이프 해제 된 문자열이이 인스턴스를 구성 하려면 사용 하는 경우입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>The <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph> property is dependent on configuration settings, as discussed later in this topic.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph> 속성은이 항목의 뒷부분에 설명 된 대로 구성 설정에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>Configuration settings cannot be changed by Windows Store applications, which can lead to inconsistent results when using <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph>.</source>
          <target state="translated">구성 설정을 사용 하는 경우 일관성 없는 결과가 발생할 수 있는 Windows 스토어 응용 프로그램을 통해 변경할 수 없습니다 <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>The <ph id="ph1">&lt;xref:System.Uri.IdnHost%2A&gt;</ph> property is provided as the preferred alternative to using <ph id="ph2">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph>, because <ph id="ph3">&lt;xref:System.Uri.IdnHost%2A&gt;</ph> is guaranteed to always be DNS safe, no matter what the current <bpt id="p1">*</bpt>app.config<ept id="p1">*</ept> settings might be.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.IdnHost%2A&gt;</ph> 속성은 사용 하지 않으려면 기본 제공 <ph id="ph2">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph>때문에, <ph id="ph3">&lt;xref:System.Uri.IdnHost%2A&gt;</ph> DNS 안전 어떤 현재에 관계 없이 항상 되도록 보장 <bpt id="p1">*</bpt>app.config<ept id="p1">*</ept> 설정 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>The <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph> property has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide International Resource Identifier (IRI) support based on RFC 3987.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph> .NET Framework v 3.5, 3.0 s p 1에서에서 확장 된 속성 및 2.0 식별자 IRI (International Resource)을 제공 하려면 s p 1에 따라 RFC 3987을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</source>
          <target state="translated">현재 사용자의 경우 IRI를 사용하도록 설정하지 않는 한 .NET Framework 2.0 동작에서 차이를 느끼지 못할 것입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>This ensures application compatibility with prior versions of the .NET Framework.</source>
          <target state="translated">이 덕분에 .NET Framework 이전 버전과의 응용 프로그램 호환성이 제공됩니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>To enable support for IRI, the following two changes are required:</source>
          <target state="translated">IRI에 대 한 지원을 설정 하는 다음 두 가지 변경이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>Add the following line to the <bpt id="p1">*</bpt>machine.config<ept id="p1">*</ept> file under the .NET Framework 2.0 directory</source>
          <target state="translated">다음 줄을 추가 <bpt id="p1">*</bpt>machine.config<ept id="p1">*</ept> .NET Framework 2.0 디렉터리 아래 파일</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source><ph id="ph1">\&lt;</ph>section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" /&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" /&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied.</source>
          <target state="translated">도메인 이름에 적용 된 다국어 도메인 이름 (IDN) 구문 분석 및 여부 IRI 구문 분석 규칙을 적용 해야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>This can be done in the <bpt id="p1">*</bpt>machine.config<ept id="p1">*</ept> or in the <bpt id="p2">*</bpt>app.config<ept id="p2">*</ept> file.</source>
          <target state="translated">이 작업을 수행할 수 있습니다는 <bpt id="p1">*</bpt>machine.config<ept id="p1">*</ept> 또는 <bpt id="p2">*</bpt>app.config<ept id="p2">*</ept> 파일입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>For example, add the following:</source>
          <target state="translated">예를 들어, 다음을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents.</source>
          <target state="translated">IDN을 사용하면 도메인 이름의 모든 유니코드 레이블이 해당 Punycode 문자로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>Punycode names contain only ASCII characters and always start with the xn-- prefix.</source>
          <target state="translated">Punycode 이름에는 ASCII 문자만 사용되며 항상 xn-- 접두사로 시작합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).</source>
          <target state="translated">대부분의 DNS 서버는 ASCII 문자만 지원하므로(RFC 3940 참조) 이렇게 해야 인터넷에서 기존 DNS 서버를 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>Enabling IDN only affects the value of the <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph> property.</source>
          <target state="translated">값에만 영향을 미칩니다 IDN을 사용 하도록 설정 된 <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>There are three possible values for IDN depending on the DNS servers that are used:</source>
          <target state="translated">사용 되는 DNS 서버에 따라 IDN에 대 한 3 가지 가능한 값인 가지가 있습니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>idn enabled = All</source>
          <target state="translated">사용 하도록 설정 하는 idn = All</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>This value will convert any Unicode domain names to their Punycode equivalents (IDN names).</source>
          <target state="translated">이 값은 모든 유니코드 도메인 이름을 해당하는 Punycode 항목(IDN 이름)으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>idn enabled = AllExceptIntranet</source>
          <target state="translated">사용 하도록 설정 하는 idn AllExceptIntranet =</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names).</source>
          <target state="translated">이 값은 해당하는 Punycode 항목(IDN 이름)을 사용하도록 모든 외부 유니코드 도메인 이름을 변환합니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.</source>
          <target state="translated">이 경우 로컬 인트라넷에 있는 국가별 이름을 처리하기 위해 인트라넷에 사용되는 DNS 서버가 유니코드 이름 확인을 지원해야 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>idn enabled = None</source>
          <target state="translated">사용 하도록 설정 하는 idn = 없음</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>This value will not convert any Unicode domain names to use Punycode.</source>
          <target state="translated">이 값은 Punycode를 사용하도록 어떠한 유니코드 도메인 이름도 변환하지 않습니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>This is the default value which is consistent with the .NET Framework 2.0 behaviour.</source>
          <target state="translated">.NET Framework 2.0 동작은와 일치 하는 기본값입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>Enabling IRI parsing (iriParsing enabled = <ph id="ph1">`true`</ph>) will do normalization and character checking according to the latest IRI rules in RFC 3987.</source>
          <target state="translated">IRI 구문 분석을 사용 하도록 설정 (활성화 iriParsing = <ph id="ph1">`true`</ph>) 최신 IRI에 따라 검사 문자 규칙 RFC 3987 및 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>The default value is <ph id="ph1">`false`</ph> and will do normalization and character checking according to RFC 2396 and RFC 2732 (for IPv6 literals).</source>
          <target state="translated">기본값은 <ph id="ph1">`false`</ph> 고 됩니다 정규화 및 수행 (IPv6 리터럴)에 대 한 RFC 2396에 따라 검사 및 RFC 2732 문자입니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance from a string.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 문자열 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>It illustrates the difference between the value returned from <ph id="ph1">&lt;xref:System.Uri.Host%2A&gt;</ph>, which returns the host name or address specified in the URI, and the value returned from <ph id="ph2">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph>, which returns an address that is safe to use in DNS resolution.</source>
          <target state="translated">반환 된 값 간의 차이 설명 하는지 <ph id="ph1">&lt;xref:System.Uri.Host%2A&gt;</ph>, 호스트 이름 또는 URI에 지정 된 주소를 반환 하는 및에서 반환 되는 값 <ph id="ph2">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph>, DNS 확인에 사용 하기에 안전 하 게 연결 되는 주소를 반환 하는 합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>As explained in Remarks, unescape the host name before resolving it.</source>
          <target state="translated">설명에서 설명 했 듯이 해결 하기 전에 호스트 이름에 이스케이프 해제 합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.DnsSafeHost">
          <source>You can use the <ph id="ph1">&lt;xref:System.Uri.UnescapeDataString%2A&gt;</ph> method to unescape the host name, and you can resolve it by calling the <ph id="ph2">&lt;xref:System.Net.Dns.GetHostEntry%2A&gt;</ph> method.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Uri.UnescapeDataString%2A&gt;</ph> 호스트 이름 및 있습니다 unescape 메서드를 호출 하 여 해결할 수는 <ph id="ph2">&lt;xref:System.Net.Dns.GetHostEntry%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="P:System.Uri.DnsSafeHost">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Uri.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance or a URI identifier to compare with the current instance.</source>
          <target state="translated">현재 인스턴스와 비교할 URI 식별자나 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Uri.Equals(System.Object)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instances for equality.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 같은지 비교합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Uri.Equals(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the two instances represent the same URI; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">두 인스턴스가 같은 URI를 나타내면 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> method compares the two instances without regard to user information (<ph id="ph2">&lt;xref:System.Uri.UserInfo%2A&gt;</ph>) and fragment (<ph id="ph3">&lt;xref:System.Uri.Fragment%2A&gt;</ph>) parts that they might contain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> 사용자 정보에 관계 없이 두 인스턴스를 비교 하는 메서드 (<ph id="ph2">&lt;xref:System.Uri.UserInfo%2A&gt;</ph>) 및 조각을 (<ph id="ph3">&lt;xref:System.Uri.Fragment%2A&gt;</ph>)를 포함할 수 있는 부분입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>For example, given the URIs <ph id="ph1">http://www.contoso.com/index.htm#search</ph> and <ph id="ph2">http://user:password@www.contoso.com/index.htm</ph>, the <ph id="ph3">&lt;xref:System.Uri.Equals%2A&gt;</ph> method would return <ph id="ph4">`true`</ph>.</source>
          <target state="translated">예를 들어 Uri <ph id="ph1">http://www.contoso.com/index.htm#search</ph> 및 <ph id="ph2">http://user:password@www.contoso.com/index.htm</ph>, <ph id="ph3">&lt;xref:System.Uri.Equals%2A&gt;</ph> 메서드는 반환 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>If one <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance is formed with a Unicode host name and <ph id="ph2">`comparand`</ph> parameter contains a <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance or identifier that is formed with a host name that has the equivalent Punycode host name, then <ph id="ph4">&lt;xref:System.Uri.Equals%2A&gt;</ph> returns <ph id="ph5">`true`</ph> only if International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled.</source>
          <target state="translated">한 경우 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 유니코드 호스트 이름의 형식이 및 <ph id="ph2">`comparand`</ph> 매개 변수를 포함 한 <ph id="ph3">&lt;xref:System.Uri&gt;</ph> 인스턴스 또는 해당 Punycode 호스트 이름에 항목이 호스트 이름의 형식이 식별자 <ph id="ph4">&lt;xref:System.Uri.Equals%2A&gt;</ph> 반환 <ph id="ph5">`true`</ph> 식별자 IRI (International Resource) 및 도메인 이름 IDN (Internationalized) 지 원하는 경우에 활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>Punycode names contain only ASCII characters and always start with the xn-- prefix.</source>
          <target state="translated">Punycode 이름에는 ASCII 문자만 사용되며 항상 xn-- 접두사로 시작합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>In the .NET Framework versions 1.0 and 1.1, the <ph id="ph1">&lt;xref:System.Uri.Query%2A&gt;</ph> is also ignored.</source>
          <target state="translated">.NET Framework 버전 1.0 및 1.1에서는 <ph id="ph1">&lt;xref:System.Uri.Query%2A&gt;</ph> 도 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> method can be overridden in a derived class; use caution as a malicious entity could modify the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> 파생된 클래스에서 메서드를 재정의할 수 있습니다; 악의적인 엔터티가 메서드를 수정할 수 주의 사용 합니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>You should not use this method to perform security checks unless you know that this instance came from a trusted source.</source>
          <target state="translated">출처를 신뢰할 수 있는이 인스턴스에 임을 알고 있지 않는 보안 검사를 수행 하려면이 메서드를 사용 하지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>This example creates two <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instances from strings and compares them to determine whether they represent the same value.</source>
          <target state="translated">이 예제에서는 두 개의 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 문자열에서 인스턴스를 동일한 값을 나타내는지 여부를 확인 하 고 비교 합니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source><ph id="ph1">`address1`</ph> and <ph id="ph2">`address2`</ph> are the same because the <ph id="ph3">&lt;xref:System.Uri.Fragment%2A&gt;</ph> portion is ignored for this comparison.</source>
          <target state="translated"><ph id="ph1">`address1`</ph> 및 <ph id="ph2">`address2`</ph> 동일 하기 때문에 <ph id="ph3">&lt;xref:System.Uri.Fragment%2A&gt;</ph> 이 비교에 대 한 부분은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>The outcome is written to the console.</source>
          <target state="translated">결과 콘솔에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>to prevent partially trusted code from deriving from <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에서 파생 되지 않도록 하려면 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.Equals(System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Uri.Escape">
          <source>Converts any unsafe or reserved characters in the path component to their hexadecimal character representations.</source>
          <target state="translated">경로 구성 요소에서 안전하지 않거나 예약된 문자를 해당 16진 문자 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Uri.Escape">
          <source>The URI passed from the constructor is invalid.</source>
          <target state="translated">생성자에서 전달된 URI가 잘못된 경우.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Uri.Escape">
          <source>This exception can occur if a URI has too many characters or the URI is relative.</source>
          <target state="translated">이 예외는 URI에 너무 많은 문자가 있거나 URI가 상대 URI인 경우 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>The string to escape.</source>
          <target state="translated">이스케이프할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>Converts a string to its escaped representation.</source>
          <target state="translated">문자열을 이스케이프된 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the escaped representation of <ph id="ph2">&lt;paramref name="stringToEscape" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>에 대해 이스케이프된 표현이 포함된 <ph id="ph2">&lt;paramref name="stringToEscape" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Uri.EscapeDataString%2A&gt;</ph> method converts all characters except for RFC 2396 unreserved characters to their hexadecimal representation.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Uri.EscapeDataString%2A&gt;</ph> 메서드 RFC 2396 예약 되지 않은 문자를 제외한 모든 문자 16 진수 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <ph id="ph1">&lt;xref:System.Uri.EscapeDataString%2A&gt;</ph> method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation.</source>
          <target state="translated">국제 리소스 식별자 (펼치기) 하거나 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Uri.EscapeDataString%2A&gt;</ph> 메서드 변환 모든 문자, RFC를 제외 하 고 3986 예약 되지 않은 자 16 진수 표현입니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>All Unicode characters are converted to UTF-8 format before being escaped.</source>
          <target state="translated">모든 유니코드 문자는 이스케이프 되기 전에 utf-8 형식으로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>This method assumes that <ph id="ph1">`stringToEscape`</ph> has no escape sequences in it.</source>
          <target state="translated">이 메서드는 가정 <ph id="ph1">`stringToEscape`</ph> 에 이스케이프 시퀀스가 없습니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>By default, the string is escaped according to RFC 2396.</source>
          <target state="translated">기본적으로 RFC 2396에 따라 문자열은 이스케이프 됩니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</source>
          <target state="translated">국제 리소스 식별자 (펼치기) 하거나 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우 문자열은 RFC 3986 및 RFC 3987에 따라 이스케이프 됩니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>See these RFCs for a definition of reserved and unreserved characters.</source>
          <target state="translated">예약 된 문자와 예약 되지 않은 문자에 대 한 정의 대 한 다음이 Rfc를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeDataString(System.String)">
          <source><ph id="ph1">&lt;paramref name="stringToEscape" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stringToEscape" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeDataString(System.String)">
          <source><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt>In the <bpt id="p3">[</bpt>.NET for Windows Store apps<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p4">[</bpt>Portable Class Library<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt><bpt id="p3">[</bpt>Windows 스토어 앱용 .NET<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 또는 <bpt id="p4">[</bpt>이식 가능한 클래스 라이브러리<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>에서 대신 기본 클래스 예외 <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>을 catch합니다.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept></target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeDataString(System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="stringToEscape" /&gt;</ph> exceeds 32766 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stringToEscape" /&gt;</ph>의 길이가 32766자를 초과합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeString(System.String)">
          <source>The string to transform to its escaped representation.</source>
          <target state="translated">이스케이프된 표현으로 변형할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeString(System.String)">
          <source>Converts a string to its escaped representation.</source>
          <target state="translated">문자열을 이스케이프된 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeString(System.String)">
          <source>The escaped representation of the string.</source>
          <target state="translated">이스케이프된 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Uri.EscapeString%2A&gt;</ph> method converts RFC 2396 reserved characters and all characters with a character value greater than 127 to hexadecimal representation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.EscapeString%2A&gt;</ph> 메서드 RFC 2396의 예약 된 문자 및 문자 값이 127 보다 큰 모든 문자 16 진수 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeString(System.String)">
          <source>All Unicode characters are converted to UTF-8 format before being escaped.</source>
          <target state="translated">모든 유니코드 문자는 이스케이프 되기 전에 utf-8 형식으로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeString(System.String)">
          <source>By default, the string is escaped according to RFC 2396.</source>
          <target state="translated">기본적으로 RFC 2396에 따라 문자열은 이스케이프 됩니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeString(System.String)">
          <source>If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</source>
          <target state="translated">국제 리소스 식별자 (펼치기) 하거나 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우 문자열은 RFC 3986 및 RFC 3987에 따라 이스케이프 됩니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeString(System.String)">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>The string to escape.</source>
          <target state="translated">이스케이프할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>Converts a URI string to its escaped representation.</source>
          <target state="translated">URI 문자열을 이스케이프된 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the escaped representation of <ph id="ph2">&lt;paramref name="stringToEscape" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>에 대해 이스케이프된 표현이 포함된 <ph id="ph2">&lt;paramref name="stringToEscape" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Uri.EscapeUriString%2A&gt;</ph> method to prepare an unescaped URI string to be a parameter to the <ph id="ph2">&lt;xref:System.Uri.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Uri.EscapeUriString%2A&gt;</ph> 를 매개 변수로에서는 언 이스케이프 된 URI 문자열을 준비 하는 메서드는 <ph id="ph2">&lt;xref:System.Uri.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Uri.EscapeUriString%2A&gt;</ph> method converts all characters, except RFC 2396 unreserved characters, to their hexadecimal representation.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Uri.EscapeUriString%2A&gt;</ph> 메서드 RFC 2396 예약 되지 않은 문자를 제외한 모든 문자를 16 진수 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <ph id="ph1">&lt;xref:System.Uri.EscapeUriString%2A&gt;</ph> method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation.</source>
          <target state="translated">국제 리소스 식별자 (펼치기) 하거나 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Uri.EscapeUriString%2A&gt;</ph> 메서드 변환 모든 문자, RFC를 제외 하 고 3986 예약 되지 않은 자 16 진수 표현입니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>All Unicode characters are converted to UTF-8 format before being escaped.</source>
          <target state="translated">모든 유니코드 문자는 이스케이프 되기 전에 utf-8 형식으로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>This method assumes that <ph id="ph1">`stringToEscape`</ph> has no escape sequences in it.</source>
          <target state="translated">이 메서드는 가정 <ph id="ph1">`stringToEscape`</ph> 에 이스케이프 시퀀스가 없습니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>By default, the string is escaped according to RFC 2396.</source>
          <target state="translated">기본적으로 RFC 2396에 따라 문자열은 이스케이프 됩니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.</source>
          <target state="translated">국제 리소스 식별자 (펼치기) 하거나 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우 문자열은 RFC 3986 및 RFC 3987에 따라 이스케이프 됩니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>See these RFCs for a definition of reserved and unreserved characters.</source>
          <target state="translated">예약 된 문자와 예약 되지 않은 문자에 대 한 정의 대 한 다음이 Rfc를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeUriString(System.String)">
          <source><ph id="ph1">&lt;paramref name="stringToEscape" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stringToEscape" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeUriString(System.String)">
          <source><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt>In the <bpt id="p3">[</bpt>.NET for Windows Store apps<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p4">[</bpt>Portable Class Library<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;block subset="none" type="note"&gt;</bpt><ph id="ph1">
</ph><bpt id="p2">&lt;para&gt;</bpt><bpt id="p3">[</bpt>Windows 스토어 앱용 .NET<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 또는 <bpt id="p4">[</bpt>이식 가능한 클래스 라이브러리<ept id="p4">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>에서 대신 기본 클래스 예외 <ph id="ph2">&lt;see cref="T:System.FormatException" /&gt;</ph>을 catch합니다.<ept id="p2">&lt;/para&gt;</ept><ph id="ph3">
</ph><ept id="p1">&lt;/block&gt;</ept></target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Uri.EscapeUriString(System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="stringToEscape" /&gt;</ph> exceeds 32766 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stringToEscape" /&gt;</ph>의 길이가 32766자를 초과합니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="P:System.Uri.Fragment">
          <source>Gets the escaped URI fragment.</source>
          <target state="translated">이스케이프된 URI 조각을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Fragment">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains any URI fragment information.</source>
          <target state="translated">URI 조각 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Fragment">
          <source>The <ph id="ph1">&lt;xref:System.Uri.Fragment%2A&gt;</ph> property gets any text following a fragment marker (#) in the URI, including the fragment marker itself.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.Fragment%2A&gt;</ph> 속성 마커 자체를 포함 하 여 URI에는 조각 표식 (#)이 오는 모든 텍스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Fragment">
          <source>Given the URI <ph id="ph1">http://www.contoso.com/index.htm#main</ph>, the <ph id="ph2">&lt;xref:System.Uri.Fragment%2A&gt;</ph> property would return #main.</source>
          <target state="translated">URI를 지정 된 <ph id="ph1">http://www.contoso.com/index.htm#main</ph>, <ph id="ph2">&lt;xref:System.Uri.Fragment%2A&gt;</ph> 속성은 #main을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Fragment">
          <source>The <ph id="ph1">&lt;xref:System.Uri.Fragment%2A&gt;</ph> property is not considered in any <ph id="ph2">&lt;xref:System.Uri.Equals%2A&gt;</ph> comparison.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.Fragment%2A&gt;</ph> 속성이에 고려 되지 않습니다 <ph id="ph2">&lt;xref:System.Uri.Equals%2A&gt;</ph> 비교 합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Fragment">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and writes the fragment information to the console.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스를 조각 정보를 콘솔에 씁니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="P:System.Uri.Fragment">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Uri.FromHex(System.Char)">
          <source>The hexadecimal digit (0-9, a-f, A-F) to convert.</source>
          <target state="translated">변환할 16진수(0-9, a-f, A-F)입니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Uri.FromHex(System.Char)">
          <source>Gets the decimal value of a hexadecimal digit.</source>
          <target state="translated">16진수의 10진수 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Uri.FromHex(System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that contains a number from 0 to 15 that corresponds to the specified hexadecimal digit.</source>
          <target state="translated">지정된 16진수에 해당하는 0에서 15까지의 숫자가 포함된 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.FromHex(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Uri.FromHex%2A&gt;</ph> method converts a character representing a hexadecimal digit (0-9, a-f, A-F) to its decimal value (0 to 15).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.FromHex%2A&gt;</ph> 메서드 나타내는 16 진수 문자를 변환 합니다 (0-9, a-f, A-F)을 10 진수 값 (0 ~ 15).</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.FromHex(System.Char)">
          <source>If <ph id="ph1">`digit`</ph> is not a valid hexadecimal digit, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> exception is thrown.</source>
          <target state="translated">경우 <ph id="ph1">`digit`</ph> 은 유효한 16 진수 숫자가 <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.FromHex(System.Char)">
          <source>The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.</source>
          <target state="translated">다음 예제에서는 문자 인지 여부는 16 진수 문자와 인 경우 콘솔에 해당 하는 10 진수 값을 쓰는 결정 합니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Uri.FromHex(System.Char)">
          <source><ph id="ph1">&lt;paramref name="digit" /&gt;</ph> is not a valid hexadecimal digit (0-9, a-f, A-F).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="digit" /&gt;</ph>가 유효한 16진수(0-9, a-f, A-F)가 아닌 경우</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.UriComponents" /&gt;</ph> values that specifies which parts of the current instance to return to the caller.</source>
          <target state="translated">호출자에게 반환할 현재 인스턴스 부분을 지정하는 <ph id="ph1">&lt;see cref="T:System.UriComponents" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.UriFormat" /&gt;</ph> values that controls how special characters are escaped.</source>
          <target state="translated">특수 문자가 이스케이프되는 방법을 제어하는 <ph id="ph1">&lt;see cref="T:System.UriFormat" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>Gets the specified components of the current instance using the specified escaping for special characters.</source>
          <target state="translated">특수 문자에 지정된 이스케이프를 사용하여 현재 인스턴스에 지정된 구성 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the components.</source>
          <target state="translated">구성 요소가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>The <ph id="ph1">&lt;xref:System.UriComponents.Query&gt;</ph>, <ph id="ph2">&lt;xref:System.UriComponents.Fragment&gt;</ph>, <ph id="ph3">&lt;xref:System.UriComponents.Scheme&gt;</ph>, <ph id="ph4">&lt;xref:System.UriComponents.UserInfo&gt;</ph>, <ph id="ph5">&lt;xref:System.UriComponents.Host&gt;</ph>, <ph id="ph6">&lt;xref:System.UriComponents.Port&gt;</ph>, and <ph id="ph7">&lt;xref:System.UriComponents.Path&gt;</ph> components do not include the delimiter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriComponents.Query&gt;</ph>, <ph id="ph2">&lt;xref:System.UriComponents.Fragment&gt;</ph>, <ph id="ph3">&lt;xref:System.UriComponents.Scheme&gt;</ph>, <ph id="ph4">&lt;xref:System.UriComponents.UserInfo&gt;</ph>, <ph id="ph5">&lt;xref:System.UriComponents.Host&gt;</ph>, <ph id="ph6">&lt;xref:System.UriComponents.Port&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.UriComponents.Path&gt;</ph> 구성 요소 구분 기호를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>You can combine the <ph id="ph1">&lt;xref:System.UriComponents.KeepDelimiter&gt;</ph> flag (using the bitwise OR operator) with any of those values to get the value with the delimiter.</source>
          <target state="translated">결합할 수는 <ph id="ph1">&lt;xref:System.UriComponents.KeepDelimiter&gt;</ph> 플래그 (비트 OR 연산자를 사용 하 여)와 해당 값 구분 기호 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>For all other <ph id="ph1">&lt;xref:System.UriComponents&gt;</ph> values, and combinations of values, the delimiters are included in the returned value.</source>
          <target state="translated">다른 모든 <ph id="ph1">&lt;xref:System.UriComponents&gt;</ph> 값 및 값 조합의 반환된 된 값에 구분 기호가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>The components are returned in the order that they appear in the URI.</source>
          <target state="translated">구성 요소는 URI에 나타나는 순서 대로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>For example, if <ph id="ph1">&lt;xref:System.UriComponents.Scheme&gt;</ph> is specified, it appears first.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">&lt;xref:System.UriComponents.Scheme&gt;</ph> 지정, 가장 먼저 나타납니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the number of characters returned in the <ph id="ph1">&lt;xref:System.String&gt;</ph> increases.</source>
          <target state="translated">에 문자 수가 반환 식별자 IRI (International Resource) 및 도메인 이름 IDN (Internationalized) 지원이 활성화 되 고 <ph id="ph1">&lt;xref:System.String&gt;</ph> 증가 합니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix.</source>
          <target state="translated">IRI 지 원하는 데 사용 되는 ASCII 문자만 포함 하 고 항상 xn--접두사로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>When IRI and IDN are enabled, Unicode surrogate characters are handled correctly by the <ph id="ph1">&lt;xref:System.Uri.GetComponents%2A&gt;</ph> method.</source>
          <target state="translated">유니코드 서로게이트 문자에서 올바르게 처리 된 IRI 및 IDN을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Uri.GetComponents%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>If the <ph id="ph1">&lt;xref:System.Uri.GetComponents%2A&gt;</ph> method is called with <ph id="ph2">`format`</ph> set to <ph id="ph3">&lt;xref:System.UriFormat.Unescaped&gt;</ph> , you cannot use the return value as an argument to a <ph id="ph4">&lt;xref:System.Uri.%23ctor%2A&gt;</ph> constructor to create an equivalent <ph id="ph5">&lt;xref:System.Uri&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Uri.GetComponents%2A&gt;</ph> 메서드는 <ph id="ph2">`format`</ph> 로 설정 <ph id="ph3">&lt;xref:System.UriFormat.Unescaped&gt;</ph> , 반환 값에 대 한 인수로 사용할 수 없습니다는 <ph id="ph4">&lt;xref:System.Uri.%23ctor%2A&gt;</ph> 생성자를 만들려면 해당 <ph id="ph5">&lt;xref:System.Uri&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source><ph id="ph1">&lt;paramref name="components" /&gt;</ph> is not a combination of valid <ph id="ph2">&lt;see cref="T:System.UriComponents" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="components" /&gt;</ph>가 유효한 <ph id="ph2">&lt;see cref="T:System.UriComponents" /&gt;</ph> 값의 조합이 아닌 경우</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> is not an absolute URI.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>가 절대 URI가 아닌 경우.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
          <source>Relative URIs cannot be used with this method.</source>
          <target state="translated">상대 URI는 이 메서드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Uri.GetHashCode">
          <source>Gets the hash code for the URI.</source>
          <target state="translated">URI의 해시 코드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Uri.GetHashCode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the hash value generated for this URI.</source>
          <target state="translated">이 URI에 대해 생성된 해시 값을 포함하는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetHashCode">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and writes the hash code to the console.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 및 해시 코드를 콘솔에 씁니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.UriPartial" /&gt;</ph> values that specifies the end of the URI portion to return.</source>
          <target state="translated">반환할 URI 부분의 끝을 지정하는 <ph id="ph1">&lt;see cref="T:System.UriPartial" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>Gets the specified portion of a <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스 부분을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the specified portion of the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 인스턴스 부분을 포함하는 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>The <ph id="ph1">&lt;xref:System.Uri.GetLeftPart%2A&gt;</ph> method returns a string containing the leftmost portion of the URI string, ending with the portion specified by <ph id="ph2">`part`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.GetLeftPart%2A&gt;</ph> 로 지정 된 부분으로 끝나는 URI 문자열의 맨 왼쪽 부분을 포함 하는 문자열을 반환 하는 메서드 <ph id="ph2">`part`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source><ph id="ph1">&lt;xref:System.Uri.GetLeftPart%2A&gt;</ph> includes delimiters in the following cases:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.GetLeftPart%2A&gt;</ph> 다음과 같은 경우 구분 기호가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source><ph id="ph1">&lt;xref:System.UriPartial.Scheme&gt;</ph> includes the scheme delimiter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriPartial.Scheme&gt;</ph> 구성표 구분 기호를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source><ph id="ph1">&lt;xref:System.UriPartial.Authority&gt;</ph> does not include the path delimiter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriPartial.Authority&gt;</ph> 경로 구분 기호를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source><ph id="ph1">&lt;xref:System.UriPartial.Path&gt;</ph> includes any delimiters in the original URI up to the query or fragment delimiter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriPartial.Path&gt;</ph> 쿼리 또는 조각 구분 기호는 원래 URI에 구분 기호를 포함합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source><ph id="ph1">&lt;xref:System.UriPartial.Query&gt;</ph> includes the <ph id="ph2">&lt;xref:System.UriPartial.Path&gt;</ph>, plus the query and its delimiter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UriPartial.Query&gt;</ph> 포함 된 <ph id="ph2">&lt;xref:System.UriPartial.Path&gt;</ph>와 쿼리 및 구분 합니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>The following examples show a URI and the results of calling <ph id="ph1">&lt;xref:System.Uri.GetLeftPart%2A&gt;</ph> with <ph id="ph2">&lt;xref:System.UriPartial.Scheme&gt;</ph>, <ph id="ph3">&lt;xref:System.UriPartial.Authority&gt;</ph>, <ph id="ph4">&lt;xref:System.UriPartial.Path&gt;</ph>, or <ph id="ph5">&lt;xref:System.UriPartial.Query&gt;</ph>.</source>
          <target state="translated">다음 예제 URI 및 호출의 결과 보여 <ph id="ph1">&lt;xref:System.Uri.GetLeftPart%2A&gt;</ph> 와 <ph id="ph2">&lt;xref:System.UriPartial.Scheme&gt;</ph>, <ph id="ph3">&lt;xref:System.UriPartial.Authority&gt;</ph>, <ph id="ph4">&lt;xref:System.UriPartial.Path&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.UriPartial.Query&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>URI</source>
          <target state="translated">URI</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>Scheme</source>
          <target state="translated">Scheme</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>Authority</source>
          <target state="translated">인증 기관</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>Path</source>
          <target state="translated">Path</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>Query</source>
          <target state="translated">Query</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>http://</source>
          <target state="translated">http://</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>http://</source>
          <target state="translated">http://</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source><ph id="ph1">mailto:user@contoso.com</ph>?subject=uri</source>
          <target state="translated"><ph id="ph1">mailto:user@contoso.com</ph>?subject=uri</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>mailto:</source>
          <target state="translated">mailto:</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source><ph id="ph1">mailto:user@contoso.com</ph>?subject=uri</source>
          <target state="translated"><ph id="ph1">mailto:user@contoso.com</ph>?subject=uri</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source><ph id="ph1">\&lt;</ph>none&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>none&gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>nntp://</source>
          <target state="translated">nntp://</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>nntp://news.contoso.com</source>
          <target state="translated">nntp://news.contoso.com</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>news:</source>
          <target state="translated">뉴스:</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source><ph id="ph1">\&lt;</ph>none&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>none&gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>file://server/filename.ext</source>
          <target state="translated">file://server/filename.ext</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>file://</source>
          <target state="translated">file://</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>file://server</source>
          <target state="translated">file://server</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>file://server/filename.ext</source>
          <target state="translated">file://server/filename.ext</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>file://server/filename.ext</source>
          <target state="translated">file://server/filename.ext</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and writes the path to the console.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 및 경로를 콘솔에 씁니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance is not an absolute instance.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 절대 인스턴스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Uri.GetLeftPart(System.UriPartial)">
          <source>The specified <ph id="ph1">&lt;paramref name="part" /&gt;</ph> is not valid.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="part" /&gt;</ph>가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object containing the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>를 serialize하는 데 필요한 정보가 포함된 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object containing the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>와 연결된 serialize된 스트림의 소스와 대상이 포함된 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>개체입니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Returns the data needed to serialize the current instance.</source>
          <target state="translated">현재 인스턴스를 serialize하는 데 필요한 데이터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>to use serialization methods.</source>
          <target state="translated">serialization 메서드를 사용 하 합니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Uri.HexEscape(System.Char)">
          <source>The character to convert to hexadecimal representation.</source>
          <target state="translated">16진수 표현으로 변환할 문자입니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Uri.HexEscape(System.Char)">
          <source>Converts a specified character into its hexadecimal equivalent.</source>
          <target state="translated">지정된 문자를 16진수 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Uri.HexEscape(System.Char)">
          <source>The hexadecimal representation of the specified character.</source>
          <target state="translated">지정된 문자의 16진수 표현입니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.HexEscape(System.Char)">
          <source>The following example converts a character to its hexadecimal equivalent and writes it to the console.</source>
          <target state="translated">다음 예제에서는 문자 16 진수 표현으로 변환 합니다. 콘솔에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Uri.HexEscape(System.Char)">
          <source><ph id="ph1">&lt;paramref name="character" /&gt;</ph> is greater than 255.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="character" /&gt;</ph>가 255보다 큰 경우</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Uri.HexUnescape(System.String,System.Int32@)">
          <source>The hexadecimal representation of a character.</source>
          <target state="translated">문자의 16진수 표현입니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Uri.HexUnescape(System.String,System.Int32@)">
          <source>The location in <bpt id="p1">&lt;c&gt;</bpt>pattern<ept id="p1">&lt;/c&gt;</ept> where the hexadecimal representation of a character begins.</source>
          <target state="translated">문자의 16진수 표현이 시작되는 <bpt id="p1">&lt;c&gt;</bpt>pattern<ept id="p1">&lt;/c&gt;</ept>의 위치입니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Uri.HexUnescape(System.String,System.Int32@)">
          <source>Converts a specified hexadecimal representation of a character to the character.</source>
          <target state="translated">지정된 문자의 16진수 표현을 문자로 변환합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Uri.HexUnescape(System.String,System.Int32@)">
          <source>The character represented by the hexadecimal encoding at position <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 위치에 있으며 16진수로 인코딩된 문자입니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Uri.HexUnescape(System.String,System.Int32@)">
          <source>If the character at <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not hexadecimal encoded, the character at <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>의 문자가 16진수로 인코딩되지 않은 경우 <ph id="ph2">&lt;paramref name="index" /&gt;</ph>의 문자가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Uri.HexUnescape(System.String,System.Int32@)">
          <source>The value of <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is incremented to point to the character following the one returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>의 값이 증분되어 반환된 문자 다음에 오는 문자를 가리킵니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.HexUnescape(System.String,System.Int32@)">
          <source>The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.</source>
          <target state="translated">다음 코드 예제에서는 확인 하는 문자 인지 여부를 16 진수로 인코딩된 고이 경우 해당 문자를 콘솔에 씁니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Uri.HexUnescape(System.String,System.Int32@)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than or equal to the number of characters in <ph id="ph2">&lt;paramref name="pattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;paramref name="pattern" /&gt;</ph>의 문자 수보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="P:System.Uri.Host">
          <source>Gets the host component of this instance.</source>
          <target state="translated">이 인스턴스의 호스트 구성 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Host">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the host name.</source>
          <target state="translated">호스트 이름이 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Host">
          <source>This is usually the DNS host name or IP address of the server.</source>
          <target state="translated">일반적으로 서버의 DNS 호스트 이름이나 IP 주소입니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Host">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Uri.Authority%2A&gt;</ph> property, this property value does not include the port number.</source>
          <target state="translated">와 달리는 <ph id="ph1">&lt;xref:System.Uri.Authority%2A&gt;</ph> 속성, 속성 값이 포트 번호를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Host">
          <source>The following example writes the host name (www.contoso.com) of the server to the console.</source>
          <target state="translated">다음 예제에서는 콘솔에는 서버의 호스트 이름 (www.contoso.com)을 씁니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="P:System.Uri.Host">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="P:System.Uri.HostNameType">
          <source>Gets the type of the host name specified in the URI.</source>
          <target state="translated">URI에 지정된 호스트 이름의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.HostNameType">
          <source>A member of the <ph id="ph1">&lt;see cref="T:System.UriHostNameType" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UriHostNameType" /&gt;</ph> 열거의 멤버입니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.HostNameType">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and writes the <ph id="ph2">&lt;xref:System.Uri.HostNameType%2A&gt;</ph> to the console.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 및 쓰기는 <ph id="ph2">&lt;xref:System.Uri.HostNameType%2A&gt;</ph> 콘솔에 있습니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="P:System.Uri.HostNameType">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="P:System.Uri.IdnHost">
          <source>The RFC 3490 compliant International Domain Name of the host, using Punycode as appropriate.</source>
          <target state="translated">Punycode를 적절하게 사용하는 호스트의 RFC 3490 규격 국제 도메인 이름입니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="P:System.Uri.IdnHost">
          <source>This string, after being unescaped if necessary, is safe to use for DNS resolution.</source>
          <target state="translated">필요한 경우 이스케이프 해제된 후 이 문자열이 DNS 확인에 사용하기에 안전합니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IdnHost">
          <source>Returns the hostname, formatted with Punycode according to the IDN standard.<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">IDN 표준에 따라 Punycode로 포맷된 호스트 이름을 반환합니다.<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IdnHost">
          <source>This property is provided for the use of lower-level networking protocols that require the domain name in Punycode form.</source>
          <target state="translated">이 속성은 Punycode 형태로 도메인 이름 요구 하는 하위 수준의 네트워킹 프로토콜의 사용에 대 한 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IdnHost">
          <source>If your code does not require that specific format, use <ph id="ph1">&lt;xref:System.Uri.Host%2A&gt;</ph> for the hostname.</source>
          <target state="translated">코드는 특정 형식에 필요 하지 않으면 사용 하 여 <ph id="ph1">&lt;xref:System.Uri.Host%2A&gt;</ph> 호스트 이름에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IdnHost">
          <source>The deprecated <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph> property is dependent on <bpt id="p1">*</bpt>app.config<ept id="p1">*</ept> settings, which cannot be changed by Windows Store applications.</source>
          <target state="translated">사용 되지 않는 <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph> 속성에 따라 달라 집니다. <bpt id="p1">*</bpt>app.config<ept id="p1">*</ept> Windows 스토어 응용 프로그램에서 변경할 수 없는 설정 합니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IdnHost">
          <source>IdnHost is provided as the preferred alternative to using <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph>, because <ph id="ph2">&lt;xref:System.Uri.IdnHost%2A&gt;</ph> is guaranteed to always be DNS safe, no matter what the current <bpt id="p1">*</bpt>app.config<ept id="p1">*</ept> settings might be.</source>
          <target state="translated">IdnHost 사용 하지 않으려면 기본으로 제공 되 <ph id="ph1">&lt;xref:System.Uri.DnsSafeHost%2A&gt;</ph>때문에, <ph id="ph2">&lt;xref:System.Uri.IdnHost%2A&gt;</ph> DNS 안전 어떤 현재에 관계 없이 항상 되도록 보장 <bpt id="p1">*</bpt>app.config<ept id="p1">*</ept> 설정 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IdnHost">
          <source>If you used an escaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"), then IdnHost returns an escaped string.</source>
          <target state="translated">(예를 들어 "http://[fe80::200:39ff:fe36:1a2d%254]/temp/example.htm"), 다음 IdnHost 반환 이스케이프 된 문자열이이 인스턴스를 구성 하려면 이스케이프 된 문자열을 사용 하는 경우입니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IdnHost">
          <source>You should unescape any escaped string returned from IdnHost before using that string for DNS resolution.</source>
          <target state="translated">DNS 확인을 위해 해당 문자열을 사용 하기 전에 IdnHost에서 반환 된 모든 이스케이프 된 문자열을 이스케이프 해제 해야 합니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IdnHost">
          <source>Be aware that if you used an invalid unescaped string to construct this instance (for example, "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), then IdnHost returns an unescaped string.</source>
          <target state="translated">유의 (예를 들어 "http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm"), 다음 IdnHost 반환 이스케이프 해제 된 문자열이이 인스턴스를 구성 하려면 잘못 된 이스케이프 되지 않은 문자열을 사용 되는 경우입니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="P:System.Uri.IsAbsoluteUri">
          <source>Gets whether the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance is absolute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 절대 URI인지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsAbsoluteUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> instance is absolute; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 인스턴스가 절대 URI이면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsAbsoluteUri">
          <source>This property is <ph id="ph1">`true`</ph> if the string or <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance that was passed into the constructor can be parsed as an absolute <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance, which contains a scheme, an authority, and a path.</source>
          <target state="translated">이 속성은 <ph id="ph1">`true`</ph> 경우 문자열 또는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 생성자에 전달 된 인스턴스는 절대로 구문 분석할 수 <ph id="ph3">&lt;xref:System.Uri&gt;</ph> 인스턴스는 구성표, 기관, 및 경로 포함 합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsAbsoluteUri">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance is treated as relative and might omit the scheme or other URI components.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 상대 인스턴스로 처리 되 고 구성표나 다른 URI 구성 요소를 생략할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Uri.IsBadFileSystemCharacter(System.Char)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Uri.IsBadFileSystemCharacter(System.Char)">
          <source>Gets whether a character is invalid in a file system name.</source>
          <target state="translated">파일 시스템 이름에 있는 문자가 잘못되었는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Uri.IsBadFileSystemCharacter(System.Char)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the specified character is invalid; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 문자가 잘못되었으면 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBadFileSystemCharacter(System.Char)">
          <source>The character is analyzed according to the rules for the NTFS file system.</source>
          <target state="translated">NTFS 파일 시스템에 대 한 규칙에 따라 문자를 분석 합니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance to test.</source>
          <target state="translated">테스트할 지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance is a base of the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스가 지정된 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스의 기본 URI인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance is a base of <ph id="ph3">&lt;paramref name="uri" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 인스턴스가 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>의 기본 URI이면 <ph id="ph3">&lt;paramref name="uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source><ph id="ph1">&lt;xref:System.Uri.IsBaseOf%2A&gt;</ph> is used to compare the current <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance to a specified <ph id="ph3">&lt;xref:System.Uri&gt;</ph> to determine whether this URI is a base for the specified <ph id="ph4">&lt;xref:System.Uri&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.IsBaseOf%2A&gt;</ph> 현재 비교에 사용 되 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 인스턴스를 지정 된 <ph id="ph3">&lt;xref:System.Uri&gt;</ph> 이 URI에 지정 된에 대 한 기준 인지 여부를 확인 <ph id="ph4">&lt;xref:System.Uri&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>When comparing two <ph id="ph1">&lt;xref:System.Uri&gt;</ph> objects to determine a base relationship, the user information (<ph id="ph2">&lt;xref:System.Uri.UserInfo%2A&gt;</ph>) is not evaluated.</source>
          <target state="translated">비교할 두 개의 때 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 기본 관계를 사용자 정보를 확인 하는 개체 (<ph id="ph2">&lt;xref:System.Uri.UserInfo%2A&gt;</ph>) 평가 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>When comparing two URIs (uri1 and uri2), uri1 is the base of uri2 if, when you ignore everything in uri2 after the last slash (/), the two URIs are identical.</source>
          <target state="translated">두 Uri (uri1 및 uri2)을 비교할 때 uri1는 uri2 로그의 마지막 슬래시 (/) 이후의 uri2의 모든 항목을 무시 하는 경우 두 Uri 동일입니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>Using <ph id="ph1">http://host/path/path/file?query</ph> as the base URI, the following table shows whether it is a base for other URIs.</source>
          <target state="translated">사용 하 여 <ph id="ph1">http://host/path/path/file?query</ph> 기본 URI로 다음 표는 다른 Uri에 대 한 기반 인지 여부입니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>URI</source>
          <target state="translated">URI</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source><ph id="ph1">http://host/path/path/file?query</ph> is base of</source>
          <target state="translated"><ph id="ph1">http://host/path/path/file?query</ph> 형식의 기본 형식 인지</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source><ph id="ph1">http://host/path/path/MoreDir/</ph>"</source>
          <target state="translated"><ph id="ph1">http://host/path/path/MoreDir/</ph>"</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>no</source>
          <target state="translated">no</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>no</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>no</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>no</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>://host/path/path2/MoreDir</source>
          <target state="translated">://host/path/path2/MoreDir</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>no</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>no</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>This example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance that represents a base <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance.</source>
          <target state="translated">이 예제에서는 만듭니다는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 나타내는 기본 인스턴스는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>It then creates a second <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance from a string.</source>
          <target state="translated">그런 다음 두 번째 만듭니다 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 문자열에서 인스턴스.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>It calls <ph id="ph1">&lt;xref:System.Uri.IsBaseOf%2A&gt;</ph> to determine whether the base instance is the base of the second instance.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Uri.IsBaseOf%2A&gt;</ph> 기본 인스턴스는 두 번째 인스턴스의 기본 인지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source>The outcome is written to the console.</source>
          <target state="translated">결과 콘솔에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Uri.IsBaseOf(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="P:System.Uri.IsDefaultPort">
          <source>Gets whether the port value of the URI is the default for this scheme.</source>
          <target state="translated">URI의 포트 값이 이 체계의 기본값인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsDefaultPort">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the value in the <ph id="ph3">&lt;see cref="P:System.Uri.Port" /&gt;</ph> property is the default port for this scheme; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 속성 값이 이 체계의 기본 포트이면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="P:System.Uri.Port" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsDefaultPort">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and checks whether it uses the default port.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 및 기본 포트를 사용 하는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="P:System.Uri.IsDefaultPort">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Uri.IsExcludedCharacter(System.Char)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Uri.IsExcludedCharacter(System.Char)">
          <source>Gets whether the specified character should be escaped.</source>
          <target state="translated">지정된 문자가 이스케이프되어야 하는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Uri.IsExcludedCharacter(System.Char)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the specified character should be escaped; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 문자가 이스케이프되어야 하면 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="P:System.Uri.IsFile">
          <source>Gets a value indicating whether the specified <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> is a file URI.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>가 파일 URI인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsFile">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> is a file URI; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>가 파일 URI이면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsFile">
          <source>The <ph id="ph1">&lt;xref:System.Uri.IsFile%2A&gt;</ph> property is <ph id="ph2">`true`</ph> when the <ph id="ph3">&lt;xref:System.Uri.Scheme%2A&gt;</ph> property equals <ph id="ph4">&lt;xref:System.Uri.UriSchemeFile&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.IsFile%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph> 때는 <ph id="ph3">&lt;xref:System.Uri.Scheme%2A&gt;</ph> 속성과 같은 <ph id="ph4">&lt;xref:System.Uri.UriSchemeFile&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsFile">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether it is a file URI.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스를 파일 URI 인지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="P:System.Uri.IsFile">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Uri.IsHexDigit(System.Char)">
          <source>The character to validate.</source>
          <target state="translated">유효성을 확인할 문자입니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Uri.IsHexDigit(System.Char)">
          <source>Determines whether a specified character is a valid hexadecimal digit.</source>
          <target state="translated">지정된 문자가 유효한 16진수인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Uri.IsHexDigit(System.Char)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the character is a valid hexadecimal digit; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">문자가 유효한 16진수이면 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsHexDigit(System.Char)">
          <source>Hexadecimal digits are the digits 0 to 9 and the letters A-F or a-f.</source>
          <target state="translated">16 진수는 숫자 0에서 9와 A-f 또는 a-f 문자는 합니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsHexDigit(System.Char)">
          <source>The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.</source>
          <target state="translated">다음 예제에서는 문자 인지 여부는 16 진수 문자와 인 경우 콘솔에 해당 하는 10 진수 값을 쓰는 결정 합니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Uri.IsHexEncoding(System.String,System.Int32)">
          <source>The string to check.</source>
          <target state="translated">확인할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Uri.IsHexEncoding(System.String,System.Int32)">
          <source>The location in <bpt id="p1">&lt;c&gt;</bpt>pattern<ept id="p1">&lt;/c&gt;</ept> to check for hexadecimal encoding.</source>
          <target state="translated">16진수 인코딩을 확인할 <bpt id="p1">&lt;c&gt;</bpt>pattern<ept id="p1">&lt;/c&gt;</ept>의 위치입니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Uri.IsHexEncoding(System.String,System.Int32)">
          <source>Determines whether a character in a string is hexadecimal encoded.</source>
          <target state="translated">문자열의 문자가 16진수로 인코딩되었는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Uri.IsHexEncoding(System.String,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if <ph id="ph3">&lt;paramref name="pattern" /&gt;</ph> is hexadecimal encoded at the specified location; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>이 지정된 위치에 16진수로 인코딩되어 있으면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;paramref name="pattern" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsHexEncoding(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Uri.IsHexEncoding%2A&gt;</ph> method checks for hexadecimal encoding that follows the pattern "%hexhex" in a string, where "hex" is a digit from 0 to 9 or a letter from A-F (case-insensitive).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.IsHexEncoding%2A&gt;</ph> 메서드 확인 인코딩에 대 한 16 진수 패턴을 따르는 문자열에서 "%hexhex" 위치 "hex"는 숫자 0에서 9 또는 A-f (대/소문자 구분)에서 문자입니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsHexEncoding(System.String,System.Int32)">
          <source>The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.</source>
          <target state="translated">다음 코드 예제에서는 확인 하는 문자 인지 여부를 16 진수로 인코딩된 고이 경우 해당 문자를 콘솔에 씁니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="P:System.Uri.IsLoopback">
          <source>Gets whether the specified <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> references the local host.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>가 로컬 호스트를 참조하는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsLoopback">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if this <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> references the local host; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>가 로컬 호스트를 참조하면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsLoopback">
          <source><ph id="ph1">&lt;xref:System.Uri.IsLoopback%2A&gt;</ph> returns <ph id="ph2">`true`</ph> if the URI specified when this instance was created was 127.0.0.1, loopback, or localhost, or if the URI did not specify host information (for example, file:///c:Dir/file.txt).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.IsLoopback%2A&gt;</ph> 반환 <ph id="ph2">`true`</ph> 이 인스턴스를 만들 때 지정 된 URI가 127.0.0.1, 루프백 또는 localhost, URI를 지정 하지 않은 경우 또는 호스트 정보 (예를 들어 file:///c:Dir/file.txt).</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsLoopback">
          <source>All other URIs return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">다른 모든 Uri 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsLoopback">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether it references a local host.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 및 로컬 호스트를 참조 하는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="P:System.Uri.IsLoopback">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Uri.IsReservedCharacter(System.Char)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Uri.IsReservedCharacter(System.Char)">
          <source>Gets whether the specified character is a reserved character.</source>
          <target state="translated">지정된 문자가 예약된 문자인지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Uri.IsReservedCharacter(System.Char)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the specified character is a reserved character otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 문자가 예약된 문자이면 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="P:System.Uri.IsUnc">
          <source>Gets whether the specified <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> is a universal naming convention (UNC) path.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>가 UNC(Universal Naming Convention) 경로인지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsUnc">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> is a UNC path; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>가 UNC 경로이면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsUnc">
          <source>The <ph id="ph1">&lt;xref:System.Uri.IsUnc%2A&gt;</ph> property is <ph id="ph2">`true`</ph> if the specified <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance is a UNC path (such as <ph id="ph4">\\</ph>\server\folder or file://server/folder).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.IsUnc%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph> 경우 지정 된 <ph id="ph3">&lt;xref:System.Uri&gt;</ph> 인스턴스는 UNC 경로 (같은 <ph id="ph4">\\</ph>\server\folder 또는 file://server/folder).</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsUnc">
          <source>This property always returns <ph id="ph1">`true`</ph> if the URI has the file:// scheme and specifies a host component.</source>
          <target state="translated">이 속성은 항상 반환 <ph id="ph1">`true`</ph> URI는 file:// scheme 개이고 호스트 구성 요소를 지정 하는 경우.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.IsUnc">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether it is a UNC path.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 및 UNC 경로 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="P:System.Uri.IsUnc">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>Indicates whether the string used to construct this <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> was well-formed and is not required to be further escaped.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>를 구성하는 데 사용된 문자열의 형식이 올바른지, 이후에 문자열을 이스케이프하지 않아도 되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the string was well-formed; else <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">문자열이 제대로 구성되었으면 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>The string is considered to be well-formed in accordance with RFC 2396 and RFC 2732 by default.</source>
          <target state="translated">문자열은 기본적으로 RFC 2732 및 RFC 2396에 따라 제대로 구성 된 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is considered to be well-formed in accordance with RFC 3986 and RFC 3987</source>
          <target state="translated">문자열에 따라 RFC 3986 및 RFC 3987 잘 구성 된 것으로 간주 됩니다 국제 리소스 식별자 (펼치기) 하거나 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>The string is considered poorly formed, causing the method to return false, if any of the following conditions occur.</source>
          <target state="translated">문자열에 불완전 하 게 구성한 다음 조건 중 하나가 발생할 경우에 false를 반환 하도록 메서드가으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>Error</source>
          <target state="translated">Error</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>The string is not correctly escaped.</source>
          <target state="translated">문자열이 올바르게 이스케이프 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source><bpt id="p1">[</bpt><ph id="ph1">http://www.contoso.com/path???/file</ph><ept id="p1">](http://www.contoso.com/path???/file)</ept> name</source>
          <target state="translated"><bpt id="p1">[</bpt><ph id="ph1">http://www.contoso.com/path???/file</ph><ept id="p1">](http://www.contoso.com/path???/file)</ept> 이름</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>The string is an absolute <ph id="ph1">&lt;xref:System.Uri&gt;</ph> that represents an implicit file <ph id="ph2">&lt;xref:System.Uri&gt;</ph>.</source>
          <target state="translated">문자열은 절대 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 암시적 파일을 나타내는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>c:<ph id="ph1">\\</ph>\directory\filename</source>
          <target state="translated">c:<ph id="ph1">\\</ph>\directory\filename</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>The string is an absolute URI that is missing a slash before the path.</source>
          <target state="translated">문자열은 절대 URI에 경로 앞에 슬래시는 없습니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>file://c:/directory/filename</source>
          <target state="translated">file://c:/directory/filename</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>The string contains unescaped backslashes even if they are treated as forward slashes.</source>
          <target state="translated">문자열 이스케이프 백슬래시가 포함 슬래시로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>http:<ph id="ph1">\\</ph>\host/path/file</source>
          <target state="translated">http:<ph id="ph1">\\</ph>\host/path/file</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>The string represents a hierarchical absolute <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and does not contain "://".</source>
          <target state="translated">문자열 나타내는 계층적 절대 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> "://"에 포함 되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>www.contoso.com/path/file</source>
          <target state="translated">www.contoso.com/path/file</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>The parser for the <ph id="ph1">&lt;xref:System.Uri.Scheme%2A?displayProperty=nameWithType&gt;</ph> indicates that the original string was not well-formed.</source>
          <target state="translated">에 대 한 파서는 <ph id="ph1">&lt;xref:System.Uri.Scheme%2A?displayProperty=nameWithType&gt;</ph> 원래 문자열이 제대로 구성 되지 않았음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>The example depends on the scheme of the URI.</source>
          <target state="translated">이 예제에서는 URI 체계에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>By default, the string used to construct this <ph id="ph1">&lt;xref:System.Uri&gt;</ph> are considered well-formed in accordance with RFC 2396 and RFC 2732.</source>
          <target state="translated">기본적으로이 생성 하는 문자열 사용 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> RFC 2396 및 RFC 2732에 따라 잘 구성 된 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the string used to construct this <ph id="ph1">&lt;xref:System.Uri&gt;</ph> are considered well-formed in accordance with RFC 3986 and RFC 3987.</source>
          <target state="translated">식별자 IRI (International Resource) 및 다국어 도메인 이름 (IDN) 지원을 사용할 수 있는 경우,이 생성 하는 데 문자열 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> RFC 3986 및 RFC 3987 따라 잘 구성 된 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix.</source>
          <target state="translated">IRI 지 원하는 데 사용 되는 ASCII 문자만 포함 하 고 항상 xn--접두사로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedOriginalString">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>The string used to attempt to construct a <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 생성을 시도하는 데 사용되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>The type of the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> in <bpt id="p1">&lt;c&gt;</bpt>uriString<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>uriString<ept id="p1">&lt;/c&gt;</ept>에 있는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>의 형식입니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.</source>
          <target state="translated">문자열로 URI 생성을 시도하여 문자열 형식이 올바른지 여부를 나타내고 이후에 문자열을 이스케이프하지 않아도 되는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the string was well-formed; else <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">문자열이 제대로 구성되었으면 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>In versions of .NET before version 4.5, by default the string is considered well-formed in accordance with RFC 2396 and RFC 2732.</source>
          <target state="translated">버전 4.5의 이전 버전의.NET 기본적으로 문자열 간주 됩니다 RFC 2396 및 RFC 2732에 잘 구성 된 따라.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing are enabled, the string is considered well-formed in accordance with RFC 3986 and RFC 3987.</source>
          <target state="translated">국제 리소스 식별자 (펼치기) 하거나 다국어 도메인 이름 (IDN) 구문 분석을 사용할 경우 문자열에 올바른 형식의 RFC 3986 및 RFC 3987에 따라를 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>Beginning in .NET 4.5, strings are always considered well-formed in accordance with RFC 3986 and RFC 3987, whether or not IRI or IDN are enabled.</source>
          <target state="translated">.NET 4.5부터, 문자열은 항상 간주 따라 잘 구성 된 RFC 3986와 RFC 3987 여부 IRI 또는 IDN 활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>Note, however, that this is only true for apps that target .NET 4.5 or later.</source>
          <target state="translated">단,이 옵션은 에서만.NET 4.5를 대상으로 하는 응용 프로그램 참인지 이상.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>Apps that target .NET 4.0 invoke compatibility code, and experience the old (pre-4.5) behavior.</source>
          <target state="translated">.NET 4.0을 대상으로 하는 응용 프로그램 호환성 코드 호출과 이전 (이전 4.5) 동작이 동일 합니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>The string is considered poorly formed, causing the method to return false, if any of the following conditions occur</source>
          <target state="translated">문자열은 불완전 하 게 구성한 다음 조건 중 하나가 발생할 경우에 false를 반환 하도록 메서드를 발생 시키는 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>Error</source>
          <target state="translated">Error</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>The string is not correctly escaped.</source>
          <target state="translated">문자열이 올바르게 이스케이프 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source><bpt id="p1">[</bpt><ph id="ph1">http://www.contoso.com/path???/file</ph><ept id="p1">](http://www.contoso.com/path???/file)</ept> name</source>
          <target state="translated"><bpt id="p1">[</bpt><ph id="ph1">http://www.contoso.com/path???/file</ph><ept id="p1">](http://www.contoso.com/path???/file)</ept> 이름</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>The string is an absolute <ph id="ph1">&lt;xref:System.Uri&gt;</ph> that represents an implicit file <ph id="ph2">&lt;xref:System.Uri&gt;</ph>.</source>
          <target state="translated">문자열은 절대 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 암시적 파일을 나타내는 <ph id="ph2">&lt;xref:System.Uri&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>c:<ph id="ph1">\\</ph>\directory\filename</source>
          <target state="translated">c:<ph id="ph1">\\</ph>\directory\filename</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>The string is an absolute URI that is missing a slash before the path.</source>
          <target state="translated">문자열은 절대 URI에 경로 앞에 슬래시는 없습니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>file://c:/directory/filename</source>
          <target state="translated">file://c:/directory/filename</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>The string contains unescaped backslashes even if they will be treated as forward slashes</source>
          <target state="translated">문자열에는 슬래시도 간주 되며 경우에 이스케이프 백슬래시가 포함</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>http:<ph id="ph1">\\</ph>\host/path/file</source>
          <target state="translated">http:<ph id="ph1">\\</ph>\host/path/file</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>The string represents a hierarchical absolute <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and does not contain "://"</source>
          <target state="translated">문자열 나타내는 계층적 절대 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> "://"에 포함 되어 있지 않습니다</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>www.contoso.com/path/file</source>
          <target state="translated">www.contoso.com/path/file</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>The parser for the <ph id="ph1">&lt;xref:System.Uri.Scheme%2A&gt;</ph> indicates that the original string was not well-formed.</source>
          <target state="translated">에 대 한 파서는 <ph id="ph1">&lt;xref:System.Uri.Scheme%2A&gt;</ph> 원래 문자열이 제대로 구성 되지 않았음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>The example depends on the scheme of the URI.</source>
          <target state="translated">이 예제에서는 URI 체계에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>Beginning with .NET 4.5, relative URIs with a colon (':') in their first segment are not considered well-formed.</source>
          <target state="translated">상대 Uri는 콜론으로,.NET 4.5 부터는 (': ')의 첫 번째 세그먼트에 고려 되지 않습니다 제대로 구성 합니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>2013.05.29_14:33:41</source>
          <target state="translated">2013.05.29_14:33:41</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="P:System.Uri.LocalPath">
          <source>Gets a local operating-system representation of a file name.</source>
          <target state="translated">파일 이름에 대한 로컬 운영 체제 표현을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.LocalPath">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the local operating-system representation of a file name.</source>
          <target state="translated">파일 이름에 대한 로컬 운영 체제 표현이 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.LocalPath">
          <source>The value returned by this property is unescaped.</source>
          <target state="translated">이 속성에서 반환 되는 값 이스케이프있지 않습니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.LocalPath">
          <source>If the path is recognized as a Windows file path, all forward slashes (/) are replaced by backward slashes (<ph id="ph1">\\</ph>).</source>
          <target state="translated">경로 Windows 파일 경로으로 인식 되며, 모든 슬래시 (/) 대신 백슬래시 (<ph id="ph1">\\</ph>).</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.LocalPath">
          <source>For the URI <ph id="ph1">`file://computer/file.ext`</ph>, the absolute path is <ph id="ph2">`/file.ext`</ph> and the local path is <ph id="ph3">`\\computer\file.ext`</ph>.</source>
          <target state="translated">URI에 대 한 <ph id="ph1">`file://computer/file.ext`</ph>, 절대 경로 <ph id="ph2">`/file.ext`</ph> 로컬 경로 이며 <ph id="ph3">`\\computer\file.ext`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.LocalPath">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and writes the local path to the console.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 및 로컬 경로를 콘솔에 씁니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="P:System.Uri.LocalPath">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>The URI to compare to the current URI.</source>
          <target state="translated">현재 URI와 비교할 URI입니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>Determines the difference between two <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instances.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스 간의 차이점을 확인합니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>If the hostname and scheme of this URI instance and <ph id="ph1">&lt;paramref name="toUri" /&gt;</ph> are the same, then this method returns a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> that represents a relative URI that, when appended to the current URI instance, yields the <ph id="ph3">&lt;paramref name="toUri" /&gt;</ph> parameter.</source>
          <target state="translated">이 URI 인스턴스와 <ph id="ph1">&lt;paramref name="toUri" /&gt;</ph>의 호스트 이름 및 체계가 같으면 이 메서드에서 상대 URI를 나타내는 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>을 반환합니다. 이 상대 URI가 현재 URI 인스턴스에 추가되면 <ph id="ph3">&lt;paramref name="toUri" /&gt;</ph> 매개 변수가 생성됩니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>If the hostname or scheme is different, then this method returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the <ph id="ph2">&lt;paramref name="toUri" /&gt;</ph> parameter.</source>
          <target state="translated">호스트 이름이나 체계가 다르면 이 메서드에서 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 매개 변수를 나타내는 <ph id="ph2">&lt;paramref name="toUri" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>The following table shows the URI instance, <ph id="ph1">`toUri`</ph>, and the results of calling <ph id="ph2">&lt;xref:System.Uri.MakeRelative%2A&gt;</ph>.</source>
          <target state="translated">다음 표에서 URI 인스턴스를 보여 줍니다. <ph id="ph1">`toUri`</ph>, 호출의 결과 및 <ph id="ph2">&lt;xref:System.Uri.MakeRelative%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>Current URI instance</source>
          <target state="translated">현재 URI 인스턴스</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>test/test.htm</source>
          <target state="translated">test/test.htm</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>../</source>
          <target state="translated">../</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>test1/test1.txt</source>
          <target state="translated">test1/test1.txt</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>User information, if present in the URI, is ignored.</source>
          <target state="translated">사용자 정보를 URI에 있는 경우 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>The following example creates 2 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instances.</source>
          <target state="translated">다음 예에서는 2 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>The difference in the path information is written to the console.</source>
          <target state="translated">경로 정보가 차이 콘솔에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="toUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelative(System.Uri)">
          <source>This instance represents a relative URI, and this method is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>The URI to compare to the current URI.</source>
          <target state="translated">현재 URI와 비교할 URI입니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>Determines the difference between two <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instances.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스 간의 차이점을 확인합니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>If the hostname and scheme of this URI instance and <ph id="ph1">&lt;paramref name="uri" /&gt;</ph> are the same, then this method returns a relative <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> that, when appended to the current URI instance, yields <ph id="ph3">&lt;paramref name="uri" /&gt;</ph>.</source>
          <target state="translated">이 URI 인스턴스와 <ph id="ph1">&lt;paramref name="uri" /&gt;</ph>의 호스트 이름 및 스키마가 같으면 이 메서드에서 상대 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>를 반환합니다. 이 상대 URI가 현재 URI 인스턴스에 추가되면 <ph id="ph3">&lt;paramref name="uri" /&gt;</ph>가 생성됩니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>If the hostname or scheme is different, then this method returns a <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that represents the <ph id="ph2">&lt;paramref name="uri" /&gt;</ph> parameter.</source>
          <target state="translated">호스트 이름이나 체계가 다르면 이 메서드에서 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 매개 변수를 나타내는 <ph id="ph2">&lt;paramref name="uri" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>The following table shows the URI instance, <ph id="ph1">`toUri`</ph>, and the results of calling <ph id="ph2">&lt;xref:System.Uri.MakeRelativeUri%2A&gt;</ph>.</source>
          <target state="translated">다음 표에서 URI 인스턴스를 보여 줍니다. <ph id="ph1">`toUri`</ph>, 호출의 결과 및 <ph id="ph2">&lt;xref:System.Uri.MakeRelativeUri%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>Current URI instance</source>
          <target state="translated">현재 URI 인스턴스</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>test/test.htm</source>
          <target state="translated">test/test.htm</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>../</source>
          <target state="translated">../</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>test1/test1.txt</source>
          <target state="translated">test1/test1.txt</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>User information, if present in the URI, is ignored.</source>
          <target state="translated">사용자 정보를 URI에 있는 경우 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>The following example creates 2 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instances.</source>
          <target state="translated">다음 예에서는 2 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>The difference in the path information is written to the console.</source>
          <target state="translated">경로 정보가 차이 콘솔에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Uri.MakeRelativeUri(System.Uri)">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Uri.op_Equality(System.Uri,System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance to compare with <bpt id="p1">&lt;c&gt;</bpt>uri2<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>uri2<ept id="p1">&lt;/c&gt;</ept>와 비교할 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Uri.op_Equality(System.Uri,System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance to compare with <bpt id="p1">&lt;c&gt;</bpt>uri1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>uri1<ept id="p1">&lt;/c&gt;</ept>과 비교할 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Uri.op_Equality(System.Uri,System.Uri)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instances have the same value.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스의 값이 같은지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Uri.op_Equality(System.Uri,System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> instances are equivalent; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 인스턴스가 동일하면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.op_Equality(System.Uri,System.Uri)">
          <source>This overload uses the <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> method to determine whether the two <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instances are equivalent.</source>
          <target state="translated">이 오버 로드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> 확인할 수 있는지 여부를 두 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 인스턴스가 동일 합니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.op_Equality(System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;xref:System.Uri.UserInfo%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Uri.Fragment%2A&gt;</ph> content is ignored when making this comparison.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.UserInfo%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Uri.Fragment%2A&gt;</ph> 이 비교를 수행할 때 내용이 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.op_Equality(System.Uri,System.Uri)">
          <source>This example creates three <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instances from strings and compares them to determine whether they represent the same value.</source>
          <target state="translated">이 예제에서는 세 개를 만들며 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 문자열에서 인스턴스를 동일한 값을 나타내는지 여부를 확인 하 고 비교 합니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.op_Equality(System.Uri,System.Uri)">
          <source><ph id="ph1">`Address1`</ph> and <ph id="ph2">`Address2`</ph> are the same because the <ph id="ph3">&lt;xref:System.Uri.Fragment%2A&gt;</ph> portion is ignored for this comparison.</source>
          <target state="translated"><ph id="ph1">`Address1`</ph> 및 <ph id="ph2">`Address2`</ph> 동일 하기 때문에 <ph id="ph3">&lt;xref:System.Uri.Fragment%2A&gt;</ph> 이 비교에 대 한 부분은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.op_Equality(System.Uri,System.Uri)">
          <source>The outcome is written to the console.</source>
          <target state="translated">결과 콘솔에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance to compare with <bpt id="p1">&lt;c&gt;</bpt>uri2<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>uri2<ept id="p1">&lt;/c&gt;</ept>와 비교할 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance to compare with <bpt id="p1">&lt;c&gt;</bpt>uri1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>uri1<ept id="p1">&lt;/c&gt;</ept>과 비교할 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instances do not have the same value.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스의 값이 다른지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> instances are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 인스턴스가 동일하면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
          <source>If either parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, this method returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">매개 변수 중 하나가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 이 메서드에서 <ph id="ph2">&lt;see langword="true" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
          <source>This overload uses the <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> method to determine whether the two <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instances are not equivalent.</source>
          <target state="translated">이 오버 로드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Uri.Equals%2A&gt;</ph> 확인할 수 있는지 여부를 두 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 인스턴스가 동일 합니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;xref:System.Uri.UserInfo%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Uri.Fragment%2A&gt;</ph> content is ignored when making this comparison.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.UserInfo%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Uri.Fragment%2A&gt;</ph> 이 비교를 수행할 때 내용이 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
          <source>This example creates three <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instances from strings and compares them to determine whether they represent the same value.</source>
          <target state="translated">이 예제에서는 세 개를 만들며 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 문자열에서 인스턴스를 동일한 값을 나타내는지 여부를 확인 하 고 비교 합니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
          <source><ph id="ph1">`Address2`</ph> and <ph id="ph2">`Address3`</ph> are not the same because <ph id="ph3">`Address3`</ph> contains a <ph id="ph4">&lt;xref:System.Uri.Query%2A&gt;</ph> that is not found in <ph id="ph5">`Address2`</ph>.</source>
          <target state="translated"><ph id="ph1">`Address2`</ph> 및 <ph id="ph2">`Address3`</ph> 동일 하지 않으면 때문에 <ph id="ph3">`Address3`</ph> 포함 한 <ph id="ph4">&lt;xref:System.Uri.Query%2A&gt;</ph> 에서 찾을 수 없습니다는 <ph id="ph5">`Address2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
          <source>The outcome is written to the console.</source>
          <target state="translated">결과 콘솔에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="P:System.Uri.OriginalString">
          <source>Gets the original URI string that was passed to the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> constructor.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 생성자에 전달된 원래 URI 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the exact URI specified when this instance was constructed; otherwise, <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스를 만들 때 URI를 지정했으면 해당 URI가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>If the URI specified to the constructor contained leading or trailing spaces, these spaces are preserved.</source>
          <target state="translated">생성자에 지정 된 URI에는 선행 또는 후행 공백이 포함 된, 이러한 공백이 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>The value returned by this property differs from <ph id="ph1">&lt;xref:System.Uri.ToString%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Uri.AbsoluteUri%2A&gt;</ph>.</source>
          <target state="translated">이 속성에서 반환 된 값과 다른 <ph id="ph1">&lt;xref:System.Uri.ToString%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Uri.AbsoluteUri%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source><ph id="ph1">&lt;xref:System.Uri.ToString%2A&gt;</ph> returns the canonically unescaped form of the URI.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.ToString%2A&gt;</ph> URI의 정식 이스케이프 되지 않은 형식을 반환합니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source><ph id="ph1">&lt;xref:System.Uri.AbsoluteUri%2A&gt;</ph> returns the canonically escaped form of the URI.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.AbsoluteUri%2A&gt;</ph> 정규화 적으로 이스케이프 된 형식의 URI 반환 합니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, <ph id="ph1">&lt;xref:System.Uri.OriginalString%2A&gt;</ph> returns the original non normalized string with Punycode host name if one was used to initialize the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance.</source>
          <target state="translated">식별자 IRI (International Resource) 및 도메인 이름 IDN (Internationalized) 지원이 활성화 된 경우 <ph id="ph1">&lt;xref:System.Uri.OriginalString%2A&gt;</ph> 하나 초기화에 사용 된 경우 Punycode 호스트 이름의 비 정규화 된 원래 문자열을 반환 된 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>Punycode names contain only ASCII characters and always start with the xn-- prefix.</source>
          <target state="translated">Punycode 이름에는 ASCII 문자만 사용되며 항상 xn-- 접두사로 시작합니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>When a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> object is serialized, the <ph id="ph2">&lt;xref:System.Uri.OriginalString%2A&gt;</ph> is not preserved.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 개체가 serialize 되는 <ph id="ph2">&lt;xref:System.Uri.OriginalString%2A&gt;</ph> 유지 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>The serialization process uses the fully escaped and canonicalized <ph id="ph1">&lt;xref:System.Uri.AbsoluteUri%2A&gt;</ph> property when serializing.</source>
          <target state="translated">완벽 하 게 이스케이프 된 및 정규화 된 serialization 프로세스에 사용 하 여 <ph id="ph1">&lt;xref:System.Uri.AbsoluteUri%2A&gt;</ph> 직렬화 할 때 속성입니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>For a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> that contains an IPv6 address, the IPv6 address and the scope ID are included in the serialized <ph id="ph2">&lt;xref:System.Uri&gt;</ph> object.</source>
          <target state="translated">에 대 한는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> IPv6 주소를 포함 하는 IPv6 주소와 범위 ID 포함 되어, serialize 된에 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance from a string.</source>
          <target state="translated">다음 예제에서는 새 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 문자열 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.OriginalString">
          <source>It illustrates the difference between the value returned from <ph id="ph1">&lt;xref:System.Uri.OriginalString%2A&gt;</ph>, which returns the string that was passed to the constructor, and from a call to <ph id="ph2">&lt;xref:System.Uri.ToString%2A&gt;</ph>, which returns the canonical form of the string.</source>
          <target state="translated">반환 된 값 간의 차이 설명 하는지 <ph id="ph1">&lt;xref:System.Uri.OriginalString%2A&gt;</ph>, 생성자 및에 대 한 호출에서 전달 된 문자열을 반환 하는 <ph id="ph2">&lt;xref:System.Uri.ToString%2A&gt;</ph>, 문자열의 정규 형식을 반환 하는 합니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="P:System.Uri.OriginalString">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Uri.Parse">
          <source>Parses the URI of the current instance to ensure it contains all the parts required for a valid URI.</source>
          <target state="translated">현재 인스턴스의 URI를 구문 분석하여 유효한 URI에 필요한 모든 부분이 포함되어 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Uri.Parse">
          <source>The Uri passed from the constructor is invalid.</source>
          <target state="translated">생성자에서 전달된 URI가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="P:System.Uri.PathAndQuery">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Uri.AbsolutePath" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Uri.Query" /&gt;</ph> properties separated by a question mark (?).</source>
          <target state="translated">물음표(?)로 구분된 <ph id="ph1">&lt;see cref="P:System.Uri.AbsolutePath" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Uri.Query" /&gt;</ph> 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.PathAndQuery">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="P:System.Uri.AbsolutePath" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Uri.Query" /&gt;</ph> properties separated by a question mark (?).</source>
          <target state="translated">물음표(?)로 구분된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Uri.AbsolutePath" /&gt;</ph> 속성이 포함된 <ph id="ph3">&lt;see cref="P:System.Uri.Query" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.PathAndQuery">
          <source>The <ph id="ph1">&lt;xref:System.Uri.PathAndQuery%2A&gt;</ph> property contains the absolute path on the server and the query information sent with the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.PathAndQuery%2A&gt;</ph> 속성 서버와 요청과 함께 전송 되는 쿼리 정보에 절대 경로 포함 합니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.PathAndQuery">
          <source>It is identical to concatenating the <ph id="ph1">&lt;xref:System.Uri.AbsolutePath%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Uri.Query%2A&gt;</ph> properties.</source>
          <target state="translated">같은 연결 하는 <ph id="ph1">&lt;xref:System.Uri.AbsolutePath%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Uri.Query%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.PathAndQuery">
          <source>The <ph id="ph1">&lt;xref:System.Uri.PathAndQuery%2A&gt;</ph> property is escaped according to RFC 2396 by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.PathAndQuery%2A&gt;</ph> 속성은 기본적으로 RFC 2396에 따라 이스케이프 합니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.PathAndQuery">
          <source>If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the <ph id="ph1">&lt;xref:System.Uri.PathAndQuery%2A&gt;</ph> property is escaped according to RFC 3986 and RFC 3987.</source>
          <target state="translated">국제 리소스 식별자 (펼치기) 하거나 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Uri.PathAndQuery%2A&gt;</ph> 속성은 RFC 3986 및 RFC 3987에 따라 이스케이프 합니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.PathAndQuery">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.PathAndQuery">
          <source>The following example writes the URI path (/catalog/shownew.htm) and query (date= today) information to the console.</source>
          <target state="translated">다음 예제에서는 URI 경로 씁니다 (/ catalog/shownew.htm) 및 쿼리 (날짜가 오늘과 같거나 오늘) 정보를 콘솔.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="P:System.Uri.PathAndQuery">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="P:System.Uri.Port">
          <source>Gets the port number of this URI.</source>
          <target state="translated">이 URI의 포트 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Port">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that contains the port number for this URI.</source>
          <target state="translated">이 URI의 포트 번호가 포함된 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Port">
          <source>The port number defines the protocol port used for contacting the server referenced in the URI.</source>
          <target state="translated">포트 번호는 URI에서 참조 되는 서버를 연결 하는 데 사용 되는 프로토콜 포트를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Port">
          <source>If a port is not specified as part of the URI, the <ph id="ph1">&lt;xref:System.Uri.Port%2A&gt;</ph> property returns the default value for the protocol.</source>
          <target state="translated">포트 URI의 일부로 지정 하지 않으면는 <ph id="ph1">&lt;xref:System.Uri.Port%2A&gt;</ph> 속성 프로토콜에 대 한 기본 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Port">
          <source>If there is no default port number, this property returns -1.</source>
          <target state="translated">기본 포트 번호가 없으면 이면-1을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Port">
          <source>The following example writes the URI port number to the console.</source>
          <target state="translated">다음 예제에서는 콘솔에 URI의 포트 번호를 씁니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Port">
          <source>In this case, the value is the default port number for HTTP, port 80.</source>
          <target state="translated">이 경우에 값은 HTTP, 포트 80에 대 한 기본 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="P:System.Uri.Port">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="P:System.Uri.Query">
          <source>Gets any query information included in the specified URI.</source>
          <target state="translated">지정된 URI에 포함된 쿼리 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Query">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains any query information included in the specified URI.</source>
          <target state="translated">지정된 URI에 포함된 쿼리 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Query">
          <source>The <ph id="ph1">&lt;xref:System.Uri.Query%2A&gt;</ph> property contains any query information included in the URI.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.Query%2A&gt;</ph> 속성은 URI에 포함 된 쿼리 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Query">
          <source>Query information is separated from the path information by a question mark (?) and continues to the end of the URI.</source>
          <target state="translated">쿼리 정보는 물음표 (?)로 경로 정보에서 분리 되 고 URI의 끝으로 계속 합니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Query">
          <source>The query information returned includes the leading question mark.</source>
          <target state="translated">앞에 나오는 물음표를 같은 쿼리 정보가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Query">
          <source>The query information is escaped according to RFC 2396 by default.</source>
          <target state="translated">쿼리 정보는 RFC 2396에 따라 기본적으로 이스케이프 됩니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Query">
          <source>If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the query information is escaped according to RFC 3986 and RFC 3987.</source>
          <target state="translated">국제 리소스 식별자 (펼치기) 하거나 다국어 도메인 이름 (IDN) 구문 분석을 사용 하는 경우 쿼리 정보에 따라 RFC 3986 및 RFC 3987 이스케이프 됩니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Query">
          <source>For more information on IRI support, see the Remarks section for the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> class.</source>
          <target state="translated">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Query">
          <source>The following example writes the query ?date= today to the console.</source>
          <target state="translated">쿼리를 작성 하는 다음 예제에서는? 날짜가 오늘과 같거나 오늘 콘솔에 있습니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="P:System.Uri.Query">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="P:System.Uri.Scheme">
          <source>Gets the scheme name for this URI.</source>
          <target state="translated">이 URI의 체계 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the scheme for this URI, converted to lowercase.</source>
          <target state="translated">소문자로 변환된 이 URI의 스키마가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The <ph id="ph1">&lt;xref:System.Uri.Scheme%2A&gt;</ph> property returns the scheme used to initialize the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.Scheme%2A&gt;</ph> 초기화 하는 데 체계를 반환 하는 속성은 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>This property does not indicate that the scheme used to initialize the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance was recognized.</source>
          <target state="translated">이 속성의 체계를 초기화 하는 데 사용 나타내지 않습니다는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스가 (가) 인식 합니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The following table shows examples of some possible values returned by the <ph id="ph1">&lt;xref:System.Uri.Scheme%2A&gt;</ph> property.</source>
          <target state="translated">다음 표에서에서 반환 된 몇 가지 가능한 값의 예는 <ph id="ph1">&lt;xref:System.Uri.Scheme%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>Scheme</source>
          <target state="translated">Scheme</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>file</source>
          <target state="translated">파일</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is a file on the local computer.</source>
          <target state="translated">리소스가 로컬 컴퓨터에 있는 파일입니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>ftp</source>
          <target state="translated">ftp</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed through FTP.</source>
          <target state="translated">FTP를 통해 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>gopher</source>
          <target state="translated">gopher</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed through the Gopher protocol.</source>
          <target state="translated">Gopher 프로토콜을 통해 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>http</source>
          <target state="translated">http</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed through HTTP.</source>
          <target state="translated">HTTP를 통해 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>https</source>
          <target state="translated">https</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed through SSL-encrypted HTTP.</source>
          <target state="translated">HTTP SSL 암호화를 통해 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>ldap</source>
          <target state="translated">ldap</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed through the LDAP protocol.</source>
          <target state="translated">LDAP 프로토콜을 통해 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>mailto</source>
          <target state="translated">mailto</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is an email address and accessed through the SMTP protocol.</source>
          <target state="translated">리소스는 전자 메일 주소 및 SMTP 프로토콜을 통해 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>net.pipe</source>
          <target state="translated">net.pipe</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed through a named pipe.</source>
          <target state="translated">명명 된 파이프를 통해 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>net.tcp</source>
          <target state="translated">net.tcp</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed from TCP endpoint.</source>
          <target state="translated">TCP 끝점에서 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>news</source>
          <target state="translated">news</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed through the NNTP protocol.</source>
          <target state="translated">NNTP 프로토콜을 통해 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>nntp</source>
          <target state="translated">nntp</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed through the NNTP protocol.</source>
          <target state="translated">NNTP 프로토콜을 통해 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>telnet</source>
          <target state="translated">telnet</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed through the TELNET protocol.</source>
          <target state="translated">텔넷 프로토콜을 통해 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>uuid</source>
          <target state="translated">uuid</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The resource is accessed through a unique UUID endpoint name for communicating with a service.</source>
          <target state="translated">서비스와 통신 하기 위한 고유한 UUID 끝점 이름을 통해 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Scheme">
          <source>The following example writes the scheme name (http) to the console for the <ph id="ph1">http://www.contoso.com/</ph> URI.</source>
          <target state="translated">다음 예제에서는 콘솔에 대 한 구성표 이름 (http)를 작성은 <ph id="ph1">http://www.contoso.com/</ph> URI입니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="P:System.Uri.Scheme">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="F:System.Uri.SchemeDelimiter">
          <source>Specifies the characters that separate the communication protocol scheme from the address portion of the URI.</source>
          <target state="translated">통신 프로토콜 체계를 URI의 주소 부분과 구분하는 문자를 지정합니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="F:System.Uri.SchemeDelimiter">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.SchemeDelimiter">
          <source>The following example creates a string from <ph id="ph1">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>, <ph id="ph2">&lt;xref:System.Uri.SchemeDelimiter&gt;</ph>, and an address.</source>
          <target state="translated">다음 예제에서는 문자열에서 <ph id="ph1">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>, <ph id="ph2">&lt;xref:System.Uri.SchemeDelimiter&gt;</ph>, 및 주소입니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.SchemeDelimiter">
          <source>A <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance is then created from the string.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 그런 다음 문자열에서 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="P:System.Uri.Segments">
          <source>Gets an array containing the path segments that make up the specified URI.</source>
          <target state="translated">지정된 URI를 구성하는 경로 세그먼트가 포함된 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains the path segments that make up the specified URI.</source>
          <target state="translated">지정된 URI를 구성하는 경로 세그먼트가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>The <ph id="ph1">&lt;xref:System.Uri.Segments%2A&gt;</ph> property returns an array of strings containing the "segments" (substrings) that form the URI's absolute path.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.Segments%2A&gt;</ph> 속성이 URI의 절대 경로 형성 하는 "세그먼트" (부분 문자열)를 포함 하는 문자열의 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>The first segment is obtained by parsing the absolute path from its first character until you reach a slash (/) or the end of the path.</source>
          <target state="translated">첫 번째 세그먼트는 슬래시 (/) 또는 경로 끝에 도달할 때까지 해당 첫 번째 문자에서 절대 경로 구문 분석 하 여 가져옵니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>Each additional segment begins at the first character after the preceding segment, and terminates with the next slash or the end of the path.</source>
          <target state="translated">추가로 각 세그먼트는 이전 세그먼트 다음 첫 번째 문자에서 시작 하 고 슬래시 또는 경로의 끝으로 종료 합니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>(A URI's absolute path contains everything after the host and port and before the query and fragment.)</source>
          <target state="translated">(URI의 절대 경로 포함 된 모든 호스트 및 포트와 쿼리 및 조각.)</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>The following example shows the absolute path and segments for two URIs.</source>
          <target state="translated">다음 예제에서는 두 Uri에 대 한 절대 경로 세그먼트를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>The second example illustrates that the fragment and query are not part of the absolute path and therefore are not segments.</source>
          <target state="translated">두 번째 예에서는 보여 줍니다 조각 및 쿼리 절대 경로에 속하지 않는 세그먼트 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>Absolute URI</source>
          <target state="translated">절대 URI</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>Absolute path</source>
          <target state="translated">절대 경로</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>/Chapters/Chapter1/Sections/Section1.htm</source>
          <target state="translated">/Chapters/Chapter1/Sections/Section1.htm</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>Segments</source>
          <target state="translated">세그먼트</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>/Chapters/Chapter1/Sections/Section1.htm</source>
          <target state="translated">/Chapters/Chapter1/Sections/Section1.htm</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>Absolute URI</source>
          <target state="translated">절대 URI</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>Absolute path</source>
          <target state="translated">절대 경로</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>/Chapters/Chapter1/Sections/Section1.htm</source>
          <target state="translated">/Chapters/Chapter1/Sections/Section1.htm</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>Segments</source>
          <target state="translated">세그먼트</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>/Chapters/Chapter1/Sections/Section1.htm</source>
          <target state="translated">/Chapters/Chapter1/Sections/Section1.htm</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>Note that because the absolute path starts with a '/', the first segment contains it and nothing else.</source>
          <target state="translated">절대 경로 '/'로 시작, 때문에 첫 번째 세그먼트 포함 되어 있는지와 겉 참고 합니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.Segments">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance with 3 segments and displays the segments on the screen.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 3 사용 하 여 인스턴스 세그먼트 및 세그먼트 화면에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="P:System.Uri.Segments">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object containing the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>를 serialize하는 데 필요한 정보가 포함된 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object containing the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>와 연결된 serialize된 스트림의 소스와 대상이 포함된 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>개체입니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Returns the data needed to serialize the current instance.</source>
          <target state="translated">현재 인스턴스를 serialize하는 데 필요한 데이터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>to use serialization methods.</source>
          <target state="translated">serialization 메서드를 사용 하 합니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Uri.ToString">
          <source>Gets a canonical string representation for the specified <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스에 대한 정식 문자열 표현을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Uri.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> instance that contains the unescaped canonical representation of the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instance.</source>
          <target state="translated">이스케이프되지 않은 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 인스턴스의 정식 표현을 포함하는 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Uri.ToString">
          <source>All characters are unescaped except #, ?, and %.</source>
          <target state="translated">#, ? 및 %를 제외한 모든 문자가 이스케이프되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.ToString">
          <source>The string returned by this method does not contain port information when the port is the default port for the scheme.</source>
          <target state="translated">이 메서드에서 반환 되는 문자열에 포트 정보는 구성표에 대 한 기본 포트는 포트는 경우</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.ToString">
          <source>The string returned by the <ph id="ph1">&lt;xref:System.Uri.ToString%2A&gt;</ph> method may contain control characters, which can corrupt the state of a console application.</source>
          <target state="translated">반환 되는 문자열은 <ph id="ph1">&lt;xref:System.Uri.ToString%2A&gt;</ph> 메서드는 콘솔 응용 프로그램의 상태를 손상 시킬 수 있는 제어 문자 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.ToString">
          <source>You can use the <ph id="ph1">&lt;xref:System.Uri.GetComponents%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.UriFormat.SafeUnescaped?displayProperty=nameWithType&gt;</ph> format to remove control characters from the returned string.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Uri.GetComponents%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.UriFormat.SafeUnescaped?displayProperty=nameWithType&gt;</ph> 반환 된 문자열에서 제어 문자를 제거 하는 형식입니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.ToString">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance from a string.</source>
          <target state="translated">다음 예제에서는 새 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 문자열 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.ToString">
          <source>It illustrates the difference between the value returned from <ph id="ph1">&lt;xref:System.Uri.OriginalString%2A&gt;</ph>, which returns the string that was passed to the constructor, and from a call to <ph id="ph2">&lt;xref:System.Uri.ToString%2A&gt;</ph>, which returns the canonical form of the string.</source>
          <target state="translated">반환 된 값 간의 차이 설명 하는지 <ph id="ph1">&lt;xref:System.Uri.OriginalString%2A&gt;</ph>, 생성자 및에 대 한 호출에서 전달 된 문자열을 반환 하는 <ph id="ph2">&lt;xref:System.Uri.ToString%2A&gt;</ph>, 문자열의 정규 형식을 반환 하는 합니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.ToString">
          <source>to prevent partially trusted code from deriving from <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에서 파생 되지 않도록 하려면 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.ToString">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="T:System.Uri">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="T:System.Uri">
          <source>Does not throw an exception if the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> cannot be created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>를 만들 수 없으면 예외를 throw하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representing the <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>를 나타내는 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
          <source>The type of the Uri.</source>
          <target state="translated">URI의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
          <source>When this method returns, contains the constructed <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">이 메서드가 반환될 때 생성된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> instance and a <ph id="ph3">&lt;see cref="T:System.UriKind" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스와 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>를 사용하여 새 <ph id="ph3">&lt;see cref="T:System.UriKind" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> was successfully created; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>가 만들어졌으면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the new <ph id="ph2">&lt;xref:System.Uri&gt;</ph> is in <ph id="ph3">`result`</ph>.</source>
          <target state="translated">이 메서드가 반환 하는 경우 <ph id="ph1">`true`</ph>, 새 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 중인 <ph id="ph3">`result`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
          <source>The base <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
          <source>The relative <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>, represented as a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, to add to the base <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 추가할 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>으로 나타낸 상대 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
          <source>When this method returns, contains a <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> constructed from <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>relativeUri<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">이 메서드가 반환될 때 <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept>와 <bpt id="p2">&lt;c&gt;</bpt>relativeUri<ept id="p2">&lt;/c&gt;</ept>에서 만든 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> using the specified base and relative <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> instances.</source>
          <target state="translated">지정된 기본 및 상대 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스를 사용하여 새 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> was successfully created; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>가 만들어졌으면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the new <ph id="ph2">&lt;xref:System.Uri&gt;</ph> is in <ph id="ph3">`result`</ph>.</source>
          <target state="translated">이 메서드가 반환 하는 경우 <ph id="ph1">`true`</ph>, 새 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 중인 <ph id="ph3">`result`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source>The base <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source>The relative <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to add to the base <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>에 추가할 상대 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source>When this method returns, contains a <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> constructed from <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>relativeUri<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">이 메서드가 반환될 때 <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept>와 <bpt id="p2">&lt;c&gt;</bpt>relativeUri<ept id="p2">&lt;/c&gt;</ept>에서 만든 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> using the specified base and relative <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> instances.</source>
          <target state="translated">지정된 기본 및 상대 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스를 사용하여 새 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph> was successfully created; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>가 만들어졌으면 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="T:System.Uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the new <ph id="ph2">&lt;xref:System.Uri&gt;</ph> is in <ph id="ph3">`result`</ph>.</source>
          <target state="translated">이 메서드가 반환 하는 경우 <ph id="ph1">`true`</ph>, 새 <ph id="ph2">&lt;xref:System.Uri&gt;</ph> 중인 <ph id="ph3">`result`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source>This method constructs the URI, puts it in canonical form, and validates it.</source>
          <target state="translated">이 메서드는 URI를 생성 하 고, 정규 형식에 배치 유효성 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source>If an unhandled exception occurs, this method catches it.</source>
          <target state="translated">처리 되지 않은 예외가 발생 하는 경우이 메서드를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source>If you want to create a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and get exceptions use one of the <ph id="ph2">&lt;xref:System.Uri.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">만들려는 경우 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> get 예외 중 하나를 사용 하 고는 <ph id="ph2">&lt;xref:System.Uri.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="M:System.Uri.Unescape(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to convert.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Uri.Unescape(System.String)">
          <source>Converts the specified string by replacing any escape sequences with their unescaped representation.</source>
          <target state="translated">이스케이프 시퀀스를 이스케이프되지 않은 표현으로 대체하여 지정된 문자열을 변환합니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Uri.Unescape(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the unescaped value of the <ph id="ph2">&lt;paramref name="path" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 매개 변수에 대해 이스케이프되지 않은 값이 포함된 <ph id="ph2">&lt;paramref name="path" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Uri.UnescapeDataString(System.String)">
          <source>The string to unescape.</source>
          <target state="translated">이스케이프되지 않을 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Uri.UnescapeDataString(System.String)">
          <source>Converts a string to its unescaped representation.</source>
          <target state="translated">문자열을 이스케이프되지 않은 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Uri.UnescapeDataString(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the unescaped representation of <ph id="ph2">&lt;paramref name="stringToUnescape" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>에 대해 이스케이프되지 않은 표현이 포함된 <ph id="ph2">&lt;paramref name="stringToUnescape" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.UnescapeDataString(System.String)">
          <source>You should use this method with care.</source>
          <target state="translated">주의 하 여이 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.UnescapeDataString(System.String)">
          <source>Unescaping a string that has been previously unescaped can lead to ambiguities and errors.</source>
          <target state="translated">이전에 이스케이프 된 문자열을 이스케이프 취소 모호 해지고 오류가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.UnescapeDataString(System.String)">
          <source>Many Web browsers escape spaces inside of URIs into plus ("+") characters; however, the UnescapeDataString method does not convert plus characters into spaces because this behavior is not standard across all URI schemes.</source>
          <target state="translated">다양 한 웹 브라우저 더하기를 Uri의 공백을 이스케이프 문자 ("+"); 그러나 UnescapeDataString 메서드 변환 하지 않습니다 더하기 문자 공간으로 모든 URI 구성표에서이 동작은 표준 없기 때문에.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Uri.UnescapeDataString(System.String)">
          <source>The following code example unescapes a URI, and then converts any plus characters ("+") into spaces.</source>
          <target state="translated">다음 코드 예제에서는 URI를 해제 하 고 더하기 문자 ("+")를 공백으로 하나를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Uri.UnescapeDataString(System.String)">
          <source><ph id="ph1">&lt;paramref name="stringToUnescape" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stringToUnescape" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeFile">
          <source>Specifies that the URI is a pointer to a file.</source>
          <target state="translated">URI를 파일 포인터로 지정합니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeFile">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeFile">
          <source>In .NET Framework version 1.1, a "<ph id="ph1">`file:///path`</ph>" URI was translated to "<ph id="ph2">`file:/path`</ph>".</source>
          <target state="translated">.NET Framework 버전 1.1에에서는 "<ph id="ph1">`file:///path`</ph>"URI로 번역 되어"<ph id="ph2">`file:/path`</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeFile">
          <source>This has been corrected for version 2.0.</source>
          <target state="translated">버전 2.0에 대 한 수정 되었습니다.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeFile">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeFile&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 구성표 인지를 확인 하 고 인스턴스 <ph id="ph2">&lt;xref:System.Uri.UriSchemeFile&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeFtp">
          <source>Specifies that the URI is accessed through the File Transfer Protocol (FTP).</source>
          <target state="translated">FTP(파일 전송 프로토콜)를 통해 URI에 액세스하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeFtp">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeFtp">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeFtp&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 구성표 인지를 확인 하 고 인스턴스 <ph id="ph2">&lt;xref:System.Uri.UriSchemeFtp&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeGopher">
          <source>Specifies that the URI is accessed through the Gopher protocol.</source>
          <target state="translated">Gopher 프로토콜을 통해 URI에 액세스하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeGopher">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeGopher">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeGopher&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 구성표 인지를 확인 하 고 인스턴스 <ph id="ph2">&lt;xref:System.Uri.UriSchemeGopher&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeHttp">
          <source>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</source>
          <target state="translated">HTTP(Hypertext Transfer Protocol)를 통해 URI에 액세스하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeHttp">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeHttp">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 구성표 인지를 확인 하 고 인스턴스 <ph id="ph2">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeHttps">
          <source>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</source>
          <target state="translated">HTTPS(Secure Hypertext Transfer Protocol)를 통해 URI에 액세스하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeHttps">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeHttps">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeHttps&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 구성표 인지를 확인 하 고 인스턴스 <ph id="ph2">&lt;xref:System.Uri.UriSchemeHttps&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeMailto">
          <source>Specifies that the URI is an email address and is accessed through the Simple Mail Transport Protocol (SMTP).</source>
          <target state="translated">URI를 이메일 주소로 지정하고 SMTP(Simple Mail Transport Protocol)를 통해 URI에 액세스하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeMailto">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeMailto">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeMailto&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 구성표 인지를 확인 하 고 인스턴스 <ph id="ph2">&lt;xref:System.Uri.UriSchemeMailto&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeNetPipe">
          <source>Specifies that the URI is accessed through the NetPipe scheme used by Windows Communication Foundation (WCF).</source>
          <target state="translated">WCF(Windows Communication Foundation)에서 사용하는 NetPipe 체계를 통해 URI에 액세스하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeNetPipe">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeNetTcp">
          <source>Specifies that the URI is accessed through the NetTcp scheme used by Windows Communication Foundation (WCF).</source>
          <target state="translated">WCF(Windows Communication Foundation)에서 사용하는 NetTcp 체계를 통해 URI에 액세스하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeNetTcp">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeNews">
          <source>Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP).</source>
          <target state="translated">URI를 인터넷 뉴스 그룹으로 지정하고 NNTP(Network News Transport Protocol)를 통해 URI에 액세스하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeNews">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeNews">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeNews&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 구성표 인지를 확인 하 고 인스턴스 <ph id="ph2">&lt;xref:System.Uri.UriSchemeNews&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeNntp">
          <source>Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP).</source>
          <target state="translated">URI를 인터넷 뉴스 그룹으로 지정하고 NNTP(Network News Transport Protocol)를 통해 URI에 액세스하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="F:System.Uri.UriSchemeNntp">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeNntp">
          <source>The NNTP <ph id="ph1">&lt;xref:System.Uri&gt;</ph> parsing errors in .NET Framework version 1.1 have been corrected.</source>
          <target state="translated">NNTP <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 구문 분석 오류.NET Framework의 버전 1.1 수정 되었습니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Uri.UriSchemeNntp">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether the scheme is <ph id="ph2">&lt;xref:System.Uri.UriSchemeNntp&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 구성표 인지를 확인 하 고 인스턴스 <ph id="ph2">&lt;xref:System.Uri.UriSchemeNntp&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="P:System.Uri.UserEscaped">
          <source>Indicates that the URI string was completely escaped before the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance was created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스를 만들기 전에 URI 문자열을 완전히 이스케이프했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.UserEscaped">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that is <ph id="ph2">&lt;see langword="true" /&gt;</ph> if the <ph id="ph3">&lt;paramref name="dontEscape" /&gt;</ph> parameter was set to <ph id="ph4">&lt;see langword="true" /&gt;</ph> when the <ph id="ph5">&lt;see cref="T:System.Uri" /&gt;</ph> instance was created; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 인스턴스를 만들 때 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 매개 변수를 <ph id="ph3">&lt;paramref name="dontEscape" /&gt;</ph>로 설정했으면 <ph id="ph4">&lt;see langword="true" /&gt;</ph> 값이 <ph id="ph5">&lt;see cref="T:System.Uri" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph6">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.UserEscaped">
          <source>The <ph id="ph1">&lt;xref:System.Uri.UserEscaped%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> to indicate that the string used to create the <ph id="ph3">&lt;xref:System.Uri&gt;</ph> instance was completely escaped before it was passed to the constructor; that is, the <ph id="ph4">`dontEscape`</ph> parameter of the constructor call was set to <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Uri.UserEscaped%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph2">`true`</ph> 를 나타내는 문자열을 만드는 데 사용 하 여 <ph id="ph3">&lt;xref:System.Uri&gt;</ph> 인스턴스 완전히 이스케이프 생성자에 전달 되었습니다; 즉, <ph id="ph4">`dontEscape`</ph> 를생성자호출의매개변수를설정한<ph id="ph5">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.UserEscaped">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and determines whether it was fully escaped when it was created.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스를 만들 때 완전히 이스케이프 했는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="P:System.Uri.UserInfo">
          <source>Gets the user name, password, or other user-specific information associated with the specified URI.</source>
          <target state="translated">지정된 URI와 연결된 사용자 이름, 암호 및 기타 사용자 관련 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.UserInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the user information associated with the URI.</source>
          <target state="translated">URI와 연결된 사용자 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.UserInfo">
          <source>The returned value does not include the '@' character reserved for delimiting the user information part of the URI.</source>
          <target state="translated">반환된 값에는 URI의 사용자 정보 부분을 구분하기 위해 예약된 '@' 문자가 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.UserInfo">
          <source>The value returned by this property is usually in the format "userName:password".</source>
          <target state="translated">이 속성에서 반환 되는 값은 일반적으로 "userName:password" 형식에서입니다.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Uri.UserInfo">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> instance and writes the user information to the console.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 인스턴스 및 사용자 정보를 콘솔에 씁니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="P:System.Uri.UserInfo">
          <source>This instance represents a relative URI, and this property is valid only for absolute URIs.</source>
          <target state="translated">이 인스턴스가 상대 URI를 나타내고 이 속성이 절대 URI에만 유효한 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>