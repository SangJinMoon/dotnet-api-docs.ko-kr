<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventHandler.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53058760c0eb1545e669ee6bd61bb90901585ac3e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3058760c0eb1545e669ee6bd61bb90901585ac3e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EventHandler">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.EventHandler">
          <source>An object that contains no event data.</source>
          <target state="translated">이벤트 데이터가 포함되지 않은 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.EventHandler">
          <source>Represents the method that will handle an event that has no event data.</source>
          <target state="translated">이벤트 데이터가 없는 이벤트를 처리할 메서드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</source>
          <target state="translated">.NET Framework의 이벤트 모델은 이벤트 처리기와 연결 하는 이벤트 대리자가 있다는 사실을 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>To raise an event, two elements are needed:</source>
          <target state="translated">이벤트를 발생 시키기 위해 두 개의 요소가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>A delegate that identifies the method that provides the response to the event.</source>
          <target state="translated">이벤트에 대 한 응답을 제공 하는 메서드를 식별 하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>Optionally, a class that holds the event data, if the event provides data.</source>
          <target state="translated">이벤트 데이터를 제공 하는 경우 이벤트 데이터를 보유 하는 클래스를 필요에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</source>
          <target state="translated">대리자는 반환 값 형식 및 메서드에 대 한 매개 변수 목록 형식 즉, 시그니처를 정의 하는 형식입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</source>
          <target state="translated">대리자 형식을 대리자와 동일한 서명으로 메서드를 참조할 수 있는 변수를 선언에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The standard signature of an event handler delegate defines a method that does not return a value.</source>
          <target state="translated">값을 반환 하지 않는 메서드를 정의 하는 이벤트 처리기 대리자의 표준 서명 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>This method's first parameter is of type <ph id="ph1">&lt;xref:System.Object&gt;</ph> and refers to the instance that raises the event.</source>
          <target state="translated">이 메서드의 첫 번째 매개 변수는 형식 <ph id="ph1">&lt;xref:System.Object&gt;</ph> 이벤트를 발생 시키는 인스턴스를 참조 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>Its second parameter is derived from type <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> and holds the event data.</source>
          <target state="translated">두 번째 매개 변수 형식에서 파생 된 <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> 이벤트 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>If the event does not generate event data, the second parameter is simply the value of the <ph id="ph1">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">두 번째 매개 변수는 단순히의 값이 이벤트에서 이벤트 데이터를 생성 하는 경우는 <ph id="ph1">&lt;xref:System.EventArgs.Empty?displayProperty=nameWithType&gt;</ph> 필드입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>Otherwise, the second parameter is a type derived from <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> and supplies any fields or properties needed to hold the event data.</source>
          <target state="translated">그렇지 않으면 두 번째 매개 변수는에서 파생 된 형식이 <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> 모든 필드 또는 이벤트 데이터를 보유 하는 데 필요한 속성을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegate is a predefined delegate that specifically represents an event handler method for an event that does not generate data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> 대리자는 특히 데이터를 생성 하지 않는 이벤트에 대 한 이벤트 처리기 메서드를 나타내는 미리 정의 된 대리자입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>If your event does generate data, you must use the generic <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegate class.</source>
          <target state="translated">이벤트에서 데이터를 생성 하는 경우에 제네릭 사용 해야 <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> 대리자 클래스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>To associate the event with the method that will handle the event, add an instance of the delegate to the event.</source>
          <target state="translated">이벤트를 이벤트를 처리 하는 메서드를 연결 하려면 대리자의 인스턴스 이벤트에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>For more information about event handler delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The following example shows an event named <ph id="ph1">`ThresholdReached`</ph> that is associated with an <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> delegate.</source>
          <target state="translated">다음 예에서는 라는 이벤트 <ph id="ph1">`ThresholdReached`</ph> 연관 된는 <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EventHandler">
          <source>The method assigned to the <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> delegate is called in the <ph id="ph2">`OnThresholdReached`</ph> method.</source>
          <target state="translated">에 할당 된 메서드는 <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> 대리자에서 호출 되는 <ph id="ph2">`OnThresholdReached`</ph> 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>