<Type Name="EventHandler" FullName="System.EventHandler">
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="1dd10-101">이벤트 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="1dd10-102">이벤트 데이터가 포함되지 않은 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-102">An object that contains no event data.</span></span></param>
    <summary><span data-ttu-id="1dd10-103">이벤트 데이터가 없는 이벤트를 처리할 메서드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-103">Represents the method that will handle an event that has no event data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dd10-104">.NET Framework의 이벤트 모델은 이벤트 처리기와 연결 하는 이벤트 대리자가 있다는 사실을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-104">The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</span></span> <span data-ttu-id="1dd10-105">이벤트를 발생 시키기 위해 두 개의 요소가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-105">To raise an event, two elements are needed:</span></span>  
  
-   <span data-ttu-id="1dd10-106">이벤트에 대 한 응답을 제공 하는 메서드를 식별 하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-106">A delegate that identifies the method that provides the response to the event.</span></span>  
  
-   <span data-ttu-id="1dd10-107">이벤트 데이터를 제공 하는 경우 이벤트 데이터를 보유 하는 클래스를 필요에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-107">Optionally, a class that holds the event data, if the event provides data.</span></span>  
  
 <span data-ttu-id="1dd10-108">대리자는 반환 값 형식 및 메서드에 대 한 매개 변수 목록 형식 즉, 시그니처를 정의 하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-108">The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</span></span> <span data-ttu-id="1dd10-109">대리자 형식을 대리자와 동일한 서명으로 메서드를 참조할 수 있는 변수를 선언에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-109">You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</span></span>  
  
 <span data-ttu-id="1dd10-110">값을 반환 하지 않는 메서드를 정의 하는 이벤트 처리기 대리자의 표준 서명 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-110">The standard signature of an event handler delegate defines a method that does not return a value.</span></span> <span data-ttu-id="1dd10-111">이 메서드의 첫 번째 매개 변수는 형식 <xref:System.Object> 이벤트를 발생 시키는 인스턴스를 참조 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-111">This method's first parameter is of type <xref:System.Object> and refers to the instance that raises the event.</span></span> <span data-ttu-id="1dd10-112">두 번째 매개 변수 형식에서 파생 된 <xref:System.EventArgs> 이벤트 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-112">Its second parameter is derived from type <xref:System.EventArgs> and holds the event data.</span></span> <span data-ttu-id="1dd10-113">두 번째 매개 변수는 단순히의 값이 이벤트에서 이벤트 데이터를 생성 하는 경우는 <xref:System.EventArgs.Empty?displayProperty=nameWithType> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-113">If the event does not generate event data, the second parameter is simply the value of the <xref:System.EventArgs.Empty?displayProperty=nameWithType> field.</span></span> <span data-ttu-id="1dd10-114">그렇지 않으면 두 번째 매개 변수는에서 파생 된 형식이 <xref:System.EventArgs> 모든 필드 또는 이벤트 데이터를 보유 하는 데 필요한 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-114">Otherwise, the second parameter is a type derived from <xref:System.EventArgs> and supplies any fields or properties needed to hold the event data.</span></span>  
  
 <span data-ttu-id="1dd10-115"><xref:System.EventHandler> 대리자는 특히 데이터를 생성 하지 않는 이벤트에 대 한 이벤트 처리기 메서드를 나타내는 미리 정의 된 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-115">The <xref:System.EventHandler> delegate is a predefined delegate that specifically represents an event handler method for an event that does not generate data.</span></span> <span data-ttu-id="1dd10-116">이벤트에서 데이터를 생성 하는 경우에 제네릭 사용 해야 <xref:System.EventHandler%601> 대리자 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-116">If your event does generate data, you must use the generic <xref:System.EventHandler%601> delegate class.</span></span>  
  
 <span data-ttu-id="1dd10-117">이벤트를 이벤트를 처리 하는 메서드를 연결 하려면 대리자의 인스턴스 이벤트에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-117">To associate the event with the method that will handle the event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="1dd10-118">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-118">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span>  
  
 <span data-ttu-id="1dd10-119">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-119">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1dd10-120">다음 예에서는 라는 이벤트 `ThresholdReached` 연관 된는 <xref:System.EventHandler> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dd10-120">The following example shows an event named `ThresholdReached` that is associated with an <xref:System.EventHandler> delegate.</span></span> <span data-ttu-id="1dd10-121">에 할당 된 메서드는 <xref:System.EventHandler> 대리자에서 호출 되는 `OnThresholdReached` 메서드.</span><span class="sxs-lookup"><span data-stu-id="1dd10-121">The method assigned to the <xref:System.EventHandler> delegate is called in the `OnThresholdReached` method.</span></span>  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>