<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Console.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5493e36b1a7f90051fb8a40e338875db53b19f390.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">493e36b1a7f90051fb8a40e338875db53b19f390</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Represents the standard input, output, and error streams for console applications.</source>
          <target state="translated">콘솔 응용 프로그램에 대한 표준 입력, 출력 및 오류 스트림을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal.</source>
          <target state="translated">콘솔에 있는 사용자 상호 작용 운영 체제 또는 텍스트 기반 콘솔 응용 프로그램에서 컴퓨터 키보드를 통해 텍스트 입력을 입력 하 여 및 컴퓨터 터미널에서 한 텍스트 출력을 참조 하 여 운영 체제 창입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands.</source>
          <target state="translated">예를 들어 Windows 운영 체제는 콘솔 명령 프롬프트 창을 이라고 하며 MS-DOS 명령을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class provides basic support for applications that read characters from, and write characters to, the console.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console&gt;</ph> 클래스에서 문자를 읽고 및 콘솔에 문자를 작성 하는 응용 프로그램에 대 한 기본 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For information about developing with the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class, see the following sections:</source>
          <target state="translated">사용 하 여 개발 하는 방법에 대 한 내용은 <ph id="ph1">&lt;xref:System.Console&gt;</ph> 다음 섹션을 참조 하세요.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Console I/O Streams<ept id="p1">](#Streams)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>콘솔 I/O 스트림<ept id="p1">](#Streams)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Screen Buffer and Console Window<ept id="p1">](#Buffer)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>화면 버퍼 및 콘솔 창<ept id="p1">](#Buffer)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Unicode Support for the Console<ept id="p1">](#Unicode)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>콘솔에 대 한 유니코드 지원<ept id="p1">](#Unicode)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>Common Operations<ept id="p1">](#Operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>일반 작업<ept id="p1">](#Operations)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><bpt id="p1">[</bpt>.NET Core Notes<ept id="p1">](#Core)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET core 정보<ept id="p1">](#Core)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Console I/O Streams</source>
          <target state="translated">콘솔 I/O 스트림</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream.</source>
          <target state="translated">콘솔 응용 프로그램 시작 되 면 운영 체제에 자동으로 연결 세 I/O 스트림 콘솔: 표준 입력 스트림, 표준 출력 스트림 및 표준 오류 출력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream.</source>
          <target state="translated">응용 프로그램 표준 입력된 스트림을;에서 사용자 입력을 읽을 수합니다 있습니다. 표준 출력 스트림에 일반 데이터 쓰기 및 표준 오류 출력 스트림에 오류 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>These streams are presented to your application as the values of the <ph id="ph1">&lt;xref:System.Console.In%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">이러한 스트림은의 값으로 응용 프로그램에 <ph id="ph1">&lt;xref:System.Console.In%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Console.Error%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>By default, the value of the <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> property is a <ph id="ph2">&lt;xref:System.IO.TextReader?displayProperty=nameWithType&gt;</ph> object that represents the keyboard, and the values of the <ph id="ph3">&lt;xref:System.Console.Out%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Error%2A&gt;</ph> properties are <ph id="ph5">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> objects that represent a console window.</source>
          <target state="translated">기본적으로 값은 <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> 속성은는 <ph id="ph2">&lt;xref:System.IO.TextReader?displayProperty=nameWithType&gt;</ph> 키보드, 및의 값을 나타내는 개체는 <ph id="ph3">&lt;xref:System.Console.Out%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Console.Error%2A&gt;</ph> 속성은 <ph id="ph5">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> 콘솔 창을 나타내는 개체를 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files.</source>
          <target state="translated">그러나 콘솔 창 또는 키보드; 나타내지 않는 스트림과에 이러한 속성을 설정할 수 있습니다. 예를 들어 파일을 나타내는 스트림을 이러한 속성을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To redirect the standard input, standard output, or standard error stream, call the <ph id="ph1">&lt;xref:System.Console.SetIn%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.SetOut%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Console.SetError%2A?displayProperty=nameWithType&gt;</ph> method, respectively.</source>
          <target state="translated">표준 입력, 표준 출력 또는 표준 오류 스트림을 리디렉션할 호출는 <ph id="ph1">&lt;xref:System.Console.SetIn%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.SetOut%2A?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Console.SetError%2A?displayProperty=nameWithType&gt;</ph> 메서드를 각각.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams.</source>
          <target state="translated">즉, 여러 스레드를에서 읽을 수 또는 쓰기 위해 스트림을 이러한 스트림을 사용 하는 I/O 작업은 동기화 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>This means that methods that are ordinarily asynchronous, such as <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph>, execute synchronously if the object represents a console stream.</source>
          <target state="translated">즉, 메서드 등 일반적으로 비동기 <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph>, 개체가 나타내는 콘솔 스트림에 동기적으로 실행 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class to display output in unattended applications, such as server applications.</source>
          <target state="translated">사용 하지 않는 <ph id="ph1">&lt;xref:System.Console&gt;</ph> 무인 응용 프로그램에서 서버 응용 프로그램 같은 출력을 표시 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Calls to methods such as <ph id="ph1">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> have no effect in GUI applications.</source>
          <target state="translated">와 같은 메서드를 호출 <ph id="ph1">&lt;xref:System.Console.Write%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> GUI 응용 프로그램에는 아무런 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><ph id="ph1">&lt;xref:System.Console&gt;</ph> class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console&gt;</ph> 내부 스트림에 콘솔에 지시 하는 경우 정상적으로 작동 하는 클래스 멤버 리디렉션되면 스트림, 예를 들어 파일에 예외가 throw 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Program your application to catch <ph id="ph1">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> exceptions if you redirect a standard stream.</source>
          <target state="translated">Catch 하도록 응용 프로그램을 프로그래밍 <ph id="ph1">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> 표준 스트림을 리디렉션하는 경우는 예외입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.IsInputRedirected%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Console.IsErrorRedirected%2A&gt;</ph> properties to determine whether a standard stream is redirected before performing an operation that throws an <ph id="ph4">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> exception.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.IsInputRedirected%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Console.IsErrorRedirected%2A&gt;</ph> 속성을 throw 하는 작업을 수행 하기 전에 표준 스트림을 리디렉션할가 있는지 여부를 확인 한 <ph id="ph4">&lt;xref:System.IO.IOException?displayProperty=nameWithType&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>It is sometimes useful to explicitly call the members of the stream objects represented by the <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> properties.</source>
          <target state="translated">명시적으로 나타내는 스트림 개체의 멤버를 호출 하는 기능이 유용할는 <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, by default, the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method reads input from the standard input stream.</source>
          <target state="translated">예를 들어 기본적으로 <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> 메서드는 표준 입력 스트림에서 입력을 읽습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Similarly, the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed ("\r\n").</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 메서드를 표준 출력 스트림에 데이터를 기록 하 고 데이터 뒤에 캐리지 리턴 기본 줄 종료 문자열, 및 줄 바꿈 ("\r\n").</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Console&gt;</ph> 클래스에 표준 오류 출력 스트림을 또는 스트림에 기록 된 데이터에 대 한 줄 종료 문자열을 변경 하는 속성 데이터를 기록 하는 해당 메서드가 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can solve this problem by setting the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> property to another line termination string.</source>
          <target state="translated">설정 하 여이 문제를 해결할 수는 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Console.Error%2A&gt;</ph> 속성을 다른 줄 종료 문자열입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:</source>
          <target state="translated">예를 들어 다음 C# 문에 두 개의 캐리지 리턴 및 줄 바꿈 시퀀스를 표준 오류 출력 스트림에 대 한 줄 종료 문자열을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can then explicitly call the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method of the error output stream object, as in the following C# statement:</source>
          <target state="translated">명시적으로 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 의 오류 출력 스트림 개체의 다음 C# 문 에서처럼 메서드:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Screen Buffer and Console Window</source>
          <target state="translated">화면 버퍼 및 콘솔 창</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Two closely related features of the console are the screen buffer and the console window.</source>
          <target state="translated">콘솔의 밀접 한 관련이 있는 두 기능은 화면 버퍼 및 콘솔 창입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer.</source>
          <target state="translated">텍스트는 실제로 읽기 또는 콘솔에 소유 하는 스트림에서에 기록 되지만에서 읽거나 쓸 화면 버퍼를 라는 콘솔이 소유 하는 빈 영역으로 나타납니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character.</source>
          <target state="translated">화면 버퍼는 콘솔의 특성이 며 행과 열의 각 눈금 교집합 또는 문자 셀은 문자를 포함할 수 있는 사각형으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Each character has its own foreground color, and each character cell has its own background color.</source>
          <target state="translated">각 문자에는 고유한 전경색 및 각 문자 셀에는 자체 배경색입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The screen buffer is viewed through a rectangular region called the console window.</source>
          <target state="translated">화면 버퍼가 콘솔 창 이라는 사각형 영역을 통해 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The console window is another attribute of the console; it is not the console itself, which is an operating system window.</source>
          <target state="translated">콘솔 창은; 콘솔의 다른 특성 콘솔 자체는 운영 체제 창 아닙니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer.</source>
          <target state="translated">콘솔 창 행과 열으로 정렬 된, 화면 버퍼의 크기 보다 작거나 및 보기 기본 화면 버퍼의 다른 영역으로 이동할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.</source>
          <target state="translated">화면 버퍼 콘솔 창 보다 큰 경우 콘솔 창에는 화면 버퍼 영역 위치가 변경 될 수 있으므로 콘솔이 자동으로 스크롤 막대 표시 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>A cursor indicates the screen buffer position where text is currently read or written.</source>
          <target state="translated">커서 위치 텍스트를 현재 읽거나 쓸 화면 버퍼 위치를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The cursor can be hidden or made visible, and its height can be changed.</source>
          <target state="translated">커서를 숨기 거 나 표시할 수 있습니다 및 높이 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If the cursor is visible, the console window position is moved automatically so the cursor is always in view.</source>
          <target state="translated">커서가 표시 하는 경우 콘솔 창 위치 하므로 커서 항상 보기에 자동으로 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin.</source>
          <target state="translated">화면 버퍼에서 문자 셀 좌표에 대 한 원점은 왼쪽된 위 모퉁이 및 커서와 콘솔 창 위치 해당 원점을 기준으로 측정 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0.</source>
          <target state="translated">0부터 시작 하는 인덱스를 사용 하 여; 위치를 지정할 수 즉, 0, 행 및 열 0으로 왼쪽에 있는 열으로 맨 위 행을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The maximum value for the row and column indexes is <ph id="ph1">&lt;xref:System.Int16.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">행 및 열 인덱스에 대 한 최대값은 <ph id="ph1">&lt;xref:System.Int16.MaxValue?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Unicode Support for the Console</source>
          <target state="translated">콘솔에 대 한 유니코드 지원</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In general, the console reads input and writes output by using the current console code page, which the system locale defines by default.</source>
          <target state="translated">일반적으로 콘솔 입력 읽고 기본적으로 시스템 로캘에 따라 정의 현재 콘솔 코드 페이지가 사용 하 여 출력을 씁니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately.</source>
          <target state="translated">특정 코드 페이지를 콘솔에 의해 매핑되지 않는 문자를 표시 하려고 하면 모든 문자를 표시 또는 정확 하 게 나타내야 할 수 없습니다 코드 페이지를 사용할 수 있는 유니코드 문자 집합만 처리할 수입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example illustrates this problem.</source>
          <target state="translated">다음 예제에서는 이 문제를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console.</source>
          <target state="translated">콘솔에 U + 044F에 U + 0410에서 키릴 자모 문자를 표시 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.</source>
          <target state="translated">콘솔 코드 페이지 437을 사용 하는 시스템에서 예제를 실행 하는 경우에 키릴자모 문자 코드 페이지 437의에서 문자에 매핑되지 않으므로 각 문자는 물음표 (?)로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In addition to supporting code pages, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class supports UTF-8 encoding with the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> class.</source>
          <target state="translated">코드 페이지를 지원할 뿐 아니라는 <ph id="ph1">&lt;xref:System.Console&gt;</ph> 클래스 utf-8 인코딩을 지원는 <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Beginning with the .NET Framework 4.5, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class also supports UTF-16 encoding with the <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> class.</source>
          <target state="translated">.NET Framework 4.5 부터는 <ph id="ph1">&lt;xref:System.Console&gt;</ph> 클래스에는 utf-16 인코딩을 지원는 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To display Unicode characters to the console.</source>
          <target state="translated">콘솔에 유니코드 문자를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>you set the <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> property to either <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> or  <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character.</source>
          <target state="translated">유니코드 문자에 대 한 지원 특정 유니코드 문자를 인식 하기 위해 인코더 차지 하며 해당 문자를 렌더링 하는 데 필요한 문자 모양이 있는 글꼴도 필요 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console.</source>
          <target state="translated">유니코드 문자를 콘솔을 성공적으로 표시 하려면 콘솔 글꼴 비 래스터 또는 Consolas 또는 운영 체제에 따라 같은 트루타입 글꼴이에 설정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example shows how you can programmatically change the font from a raster font to Lucida Console.</source>
          <target state="translated">다음 예제에서는 변경 하는 방법을 프로그래밍 방식으로 글꼴 래스터 글꼴에서 Lucida Console을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, TrueType fonts can display only a subset of glyphs.</source>
          <target state="translated">그러나 트루타입 글꼴이 문자의 하위 집합을 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02.</source>
          <target state="translated">예를 들어 운영 체제에 따라 글꼴 U + FB02를 사용할 수 있는 약 64, 000 문자 U + 0021에서 643만 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To see which characters a particular font supports, open the <bpt id="p1">**</bpt>Fonts<ept id="p1">**</ept> applet in Control Panel, choose the <bpt id="p2">**</bpt>Find a character<ept id="p2">**</ept> option, and choose the font whose character set you'd like to examine in the <bpt id="p3">**</bpt>Font<ept id="p3">**</ept> list of the <bpt id="p4">**</bpt>Character Map<ept id="p4">**</ept> window.</source>
          <target state="translated">열, 특정 글꼴 문자를 확인 하려면 지원는 <bpt id="p1">**</bpt>글꼴<ept id="p1">**</ept> 제어판 애플릿을 선택는 <bpt id="p2">**</bpt>문자 찾으려면<ept id="p2">**</ept> 옵션을 에서검사할문자집합수는글꼴선택<bpt id="p3">**</bpt> 글꼴<ept id="p3">**</ept> 목록이 <bpt id="p4">**</bpt>문자표<ept id="p4">**</ept> 창.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Windows uses font linking to display glyphs that are not available in a particular font.</source>
          <target state="translated">Windows 특정 글꼴에 사용할 수 없는 문자를 표시할 글꼴 연결을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For information about font linking to display additional character sets, see <bpt id="p1">[</bpt>Globalization Step-by-Step: Fonts<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=229111)</ept>.</source>
          <target state="translated">글꼴 추가 문자 집합을 표시 하려면 연결에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>전역화 단계별: 글꼴<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=229111)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Linked fonts are defined in the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink subkey of the registry.</source>
          <target state="translated">연결 된 글꼴은 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink 하위 레지스트리 키에 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font.</source>
          <target state="translated">이 하위 키와 연결 된 각 항목은 기본 글꼴의 이름에 해당 하 고 값은 글꼴 파일을 정의 하는 문자열 배열 및 글꼴 기본 글꼴에 연결 된 키를 누릅니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Each member of the array defines a linked font and takes the form <bpt id="p1">*</bpt>font-file-name<ept id="p1">*</ept>,<bpt id="p2">*</bpt>font-name<ept id="p2">*</ept>.</source>
          <target state="translated">배열의 각 멤버에 연결 된 글꼴을 정의 하며 형식은 <bpt id="p1">*</bpt>글꼴 파일 이름<ept id="p1">*</ept>,<bpt id="p2">*</bpt>글꼴 이름<ept id="p2">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.</source>
          <target state="translated">다음 예에서는 라는 SimSun simsun.ttc 단순화 한 문자를 표시 하는 명명 된 글꼴 파일에 연결 된 글꼴 프로그래밍 방식으로 정의 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Unicode support for the console has the following limitations:</source>
          <target state="translated">콘솔에 대 한 유니코드 지원에는 다음과 같은 제한이 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>UTF-32 encoding is not supported.</source>
          <target state="translated">Utf-32 인코딩은 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> classes, respectively.</source>
          <target state="translated">지원 되는 유일한 유니코드 인코딩은 u t F-8과 u t F 16으로 표시 되는 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> 클래스 각각.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Bidirectional output is not supported.</source>
          <target state="translated">양방향 출력 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.</source>
          <target state="translated">기본적인 다국어 문자표 문자 표시 (즉, 서로게이트 쌍의) 연결 된 글꼴 파일에 정의 된 경우에는 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Display of characters in complex scripts is not supported.</source>
          <target state="translated">복잡 한 스크립트의 문자 표시를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters.</source>
          <target state="translated">결합 문자 시퀀스 (즉, 기본 문자 및 결합 문자를 하나 이상의 구성 된 문자)는 별개의 문자로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>To work around this limitation, you can normalize the string to be displayed by calling the <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> method before sending output to the console.</source>
          <target state="translated">이 제한을 해결 하려면 문자열을 호출 하 여 표시를 정규화 할 수는 <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> 콘솔에 출력을 보내기 전에 메서드.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated">다음 예에서 조합 문자를 포함 하는 문자열 시퀀스 U + 0061 출력 문자열을 정규화 하기 전에 두 문자로 및 후 단일 문자로 + 0308 콘솔에 표시 됩니다.는 <ph id="ph1">&lt;xref:System.String.Normalize%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.</source>
          <target state="translated">유니코드 문자를 특정 combining 해당 하는 미리 구성 된 양식이 포함에 대 한 표준 문자 시퀀스 하는 경우에 정규화는 실행 가능한 솔루션을 참고 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If a font provides a glyph for a code point in the private use area, that glyph will be displayed.</source>
          <target state="translated">개인 사용 영역에 있는 코드 포인트에 대 한 문자 모양을 제공 하는 글꼴, 해당 문자 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, because characters in the private use area are application-specific, this may not be the expected glyph.</source>
          <target state="translated">그러나 응용 프로그램별 개인 사용 영역에 있는 문자 이므로, 예상된 문자 모양 아닐 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example displays a range of Unicode characters to the console.</source>
          <target state="translated">다음 예제에서는 콘솔에는 유니코드 문자의 범위를 표시합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (<ph id="ph1">`false`</ph>) or UTF-16 encoding (<ph id="ph2">`true`</ph>).</source>
          <target state="translated">이 예제에서는 3 개의 명령줄 매개 변수: 현재 콘솔 인코딩을 사용 여부와 표시 되는 범위의 끝을 표시 하려면 범위의 시작 (<ph id="ph1">`false`</ph>) 또는 utf-16 인코딩 (<ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>It assumes that the console is using a TrueType font.</source>
          <target state="translated">콘솔은 트루타입 글꼴이 사용 하 여 가정 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Common Operations</source>
          <target state="translated">일반 작업</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class contains the following methods for reading console input and writing console output:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console&gt;</ph> 클래스 콘솔 입력을 읽고 콘솔 출력을 쓰기 위한 다음과 같은 메서드가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method read an individual character.</source>
          <target state="translated">오버 로드는 <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드는 개별 문자를 읽습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method reads an entire line of input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 메서드 입력의 전체 줄을 읽습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph> 메서드 오버 로드 서식이 지정 되거나 지정 되지 않은 문자열을 값 형식, 문자, 배열 또는 개체 집합의 인스턴스를 변환한 다음 해당 문자열이 콘솔에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>A parallel set of <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method overloads output the same string as the <ph id="ph2">&lt;xref:System.Console.Write%2A&gt;</ph> overloads but also add a line termination string.</source>
          <target state="translated">병렬 집합 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 출력으로 문자열을 동일한 오버 로드는 <ph id="ph2">&lt;xref:System.Console.Write%2A&gt;</ph> 오버 로드가 있지만 줄 종료 문자열을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class also contains methods and properties to perform the following operations:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console&gt;</ph> 클래스는 다음 작업을 수행 하도록 메서드 및 속성에도 포함:</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the size of the screen buffer.</source>
          <target state="translated">가져오거나 화면 버퍼의 크기를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties let you get or set the buffer height and width, respectively, and the <ph id="ph3">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph> method lets you set the buffer size in a single method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> 속성을 통해 버퍼 높이 너비를 각각 설정할 수 및 <ph id="ph3">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph> 메서드를 사용 하는 단일 메서드 호출에서 버퍼 크기를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the size of the console window.</source>
          <target state="translated">가져오거나 콘솔 창의 크기를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties let you get or set the window height and width, respectively, and the <ph id="ph3">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method lets you set the window size in a single method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> 속성을 통해 창 높이 너비를 각각 설정할 수 및 <ph id="ph3">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> 메서드는 단일 메서드 호출의 창 크기를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the size of the cursor.</source>
          <target state="translated">Get 또는 커서의 크기를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> property specifies the height of the cursor in a character cell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> 속성 문자 셀에서 커서의 높이 지정 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the position of the console window relative to the screen buffer.</source>
          <target state="translated">가져오거나 화면 버퍼에 상대적인 콘솔 창 위치를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <ph id="ph3">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> method lets you set these values in a single method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 속성을 통해 가져오거나 맨 위 행 및 콘솔 창에 표시 되는 화면 버퍼의 맨 왼쪽 열을 설정할 수 및 <ph id="ph3">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> 메서드를 사용 하면 단일 메서드 호출에서 이러한 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the position of the cursor by getting or setting the <ph id="ph1">&lt;xref:System.Console.CursorTop%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> properties, or set the position of the cursor by calling the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> method.</source>
          <target state="translated">가져오거나 수집 또는 설정 하 여 커서의 위치를 설정할는 <ph id="ph1">&lt;xref:System.Console.CursorTop%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> 속성 또는 set를 호출 하 여 커서의 위치는 <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Move or clear data in the screen buffer by calling the <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> method.</source>
          <target state="translated">이동 하거나 호출 하 여 화면 버퍼에서 데이터를 지울는 <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Get or set the foreground and background colors by using the <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> properties, or reset the background and foreground to their default colors by calling the <ph id="ph3">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 전경색과 배경색을 설정할는 <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> 속성을 로드 및 언로드합니다 배경색 및 전경색을 호출 하 여 다시 설정 또는 <ph id="ph3">&lt;xref:System.Console.ResetColor%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Play the sound of a beep through the console speaker by calling the <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 콘솔 스피커를 통해 경고음을 재생 소리를 재생는 <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> Notes</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> 참고 사항</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>In the .NET Framework on the desktop, the <ph id="ph1">&lt;xref:System.Console&gt;</ph> class uses the encoding returned by <ph id="ph2">`GetConsoleCP`</ph> and <ph id="ph3">`GetConsoleOutputCP`</ph>, which typically is a code page encoding.</source>
          <target state="translated">바탕 화면에서.NET framework에서는 <ph id="ph1">&lt;xref:System.Console&gt;</ph> 클래스에서 반환 된 인코딩을 사용 하 여 <ph id="ph2">`GetConsoleCP`</ph> 및 <ph id="ph3">`GetConsoleOutputCP`</ph>, 일반적으로 코드 페이지 인코딩.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default.</source>
          <target state="translated">예를 들어 코드 문화권이 영어 (미국) 코드 페이지 437 인 시스템에는 기본적으로 사용 되는 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>However, <ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> may make only a limited subset of these encodings available.</source>
          <target state="translated">그러나 <ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> 이러한 인코딩은의 제한 된 하위 집합만 사용할 수 있게 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Where this is the case, <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> is used as the default encoding for the console.</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> 콘솔에 대 한 기본 인코딩을으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>If your app depends on specific code page encodings, you can still make them available by doing the following <bpt id="p1">*</bpt>before<ept id="p1">*</ept> you call any <ph id="ph1">&lt;xref:System.Console&gt;</ph> methods:</source>
          <target state="translated">특정 코드 페이지 인코딩에 종속 되는 앱을 계속 하도록 만들 수 있습니다 사용할 수 있는 다음을 수행 하 여 <bpt id="p1">*</bpt>전에<ept id="p1">*</ept> 호출 하면 <ph id="ph1">&lt;xref:System.Console&gt;</ph> 메서드:</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</source>
          <target state="translated">프로젝트에 System.Text.Encoding.CodePages.dll 어셈블리에 대 한 참조를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Retrieve the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object from the <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">검색 된 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 에서 개체는 <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the additional encodings supported by the encoding provider available.</source>
          <target state="translated">전달 된 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 개체를 <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> 메서드를 사용할 수 있는 인코딩 공급자에서 지 원하는 추가 인코딩을 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The <ph id="ph1">&lt;xref:System.Console&gt;</ph> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <ph id="ph2">&lt;xref:System.Console&gt;</ph> output methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console&gt;</ph> 클래스 다음 자동으로 사용 합니다, UTF8 아닌 기본 시스템 인코딩과를 호출 하기 전에 인코딩 공급자를 등록 한 <ph id="ph2">&lt;xref:System.Console&gt;</ph> 출력 메서드.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The following example demonstrates how to read data from, and write data to, the standard input and output streams.</source>
          <target state="translated">다음 예제에서 데이터를 읽고 데이터를 표준 입력 및 출력 스트림에 기록 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>Note that these streams can be redirected by using the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.SetOut%2A&gt;</ph> methods.</source>
          <target state="translated">이러한 스트림을 사용 하 여 리디렉션할 수 있는 참고는 <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.SetOut%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>Gets or sets the background color of the console.</source>
          <target state="translated">콘솔의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>A value that specifies the background color of the console; that is, the color that appears behind each character.</source>
          <target state="translated">각 문자의 배경에 표시되는 콘솔의 배경색을 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>The default is black.</source>
          <target state="translated">기본값은 검정입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>A change to the <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> property affects only output that is written to individual character cells after the background color is changed.</source>
          <target state="translated">에 대 한 변경의 <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> 속성은 명령 프롬프트 창의 배경색을 변경한 후 개별 문자 셀에 기록 된 유일한 출력에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>To change the background color of the console window as a whole, set the <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> property and call the <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> method.</source>
          <target state="translated">전체 콘솔 창의 배경색을 변경 하려면는 <ph id="ph1">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> 속성과 호출은 <ph id="ph2">&lt;xref:System.Console.Clear%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>The following example provides an illustration.</source>
          <target state="translated">다음 예제에서 이에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>A get operation for a Windows-based application, in which a console does not exist, returns <ph id="ph1">&lt;xref:System.ConsoleColor.Black?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Windows 기반 응용 프로그램의 경우는 콘솔이 없으면 get 작업에 반환 <ph id="ph1">&lt;xref:System.ConsoleColor.Black?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>The following example saves the values of the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration to an array and stores the current values of the <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> properties to variables.</source>
          <target state="translated">값을 저장 하는 다음 예제는 <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> 배열에는 열거형의 현재 값을 저장 하 고는 <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> 변수에 속성입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>It then changes the foreground color to each color in the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current background, and it changes the background color to each color in the <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current foreground.</source>
          <target state="translated">각 색에 전경색을 다음 변경는 <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> 현재 배경 일치 하는 색를 제외한 각 색에 배경색을 변경 하는 열거형은 <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> 열거형을 제외 하 고 일치 하는 색을는 현재 전경입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method to restore the original console colors.</source>
          <target state="translated">(전경색 배경색으로 동일한 경우 텍스트가 표시 되지 않습니다.) 마지막으로 호출 하는 <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> 원래 콘솔 색을 복원 하려면 메서드.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>The color specified in a set operation is not a valid member of <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</source>
          <target state="translated">집합 작업에서 지정된 색이 <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>의 올바른 멤버가 아닙니다. </target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Console.BackgroundColor">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BackgroundColor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Plays the sound of a beep through the console speaker.</source>
          <target state="translated">콘솔 스피커를 통해 경고음을 재생합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Console.Beep">
          <source>Plays the sound of a beep through the console speaker.</source>
          <target state="translated">콘솔 스피커를 통해 경고음을 재생합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>By default, the beep plays at a frequency of 800 hertz for a duration of 200 milliseconds.</source>
          <target state="translated">기본적으로 경고음 800 헤르츠의 주파수에서 200 밀리초 동안 재생 됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>The <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> 메서드가 64 비트 버전의 Windows Vista 및 Windows XP에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> wraps a call to the Windows <bpt id="p1">[</bpt>Beep function<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> Windows에 대 한 호출을 래핑합니다 <bpt id="p1">[</bpt>함수 경고음을 발생시킬지<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>Whether <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</source>
          <target state="translated">여부 <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> Windows 7 8254 프로그램 가능 간격 타이머 칩의 존재 여부에 따라 달라 집니다 전에 버전의 Windows에서 소리를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>Starting with Windows 7, it depends on the default sound device.</source>
          <target state="translated">종속 기본 사운드 장치에 Windows 7을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep">
          <source>The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.</source>
          <target state="translated">이 예제에서는 명령줄 인수로 1부터 9 까지의 숫자를 받아서 해당 횟수 만큼 경고음을 재생 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Console.Beep">
          <source>This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</source>
          <target state="translated">이 메서드가 사용자 인터페이스에 대한 액세스를 허용하지 않는 SQL Server와 같은 서버에서 실행되었습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>The frequency of the beep, ranging from 37 to 32767 hertz.</source>
          <target state="translated">경고음의 주파수이며 해당 범위는 37 - 32767헤르츠입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>The duration of the beep measured in milliseconds.</source>
          <target state="translated">경고음의 지속 시간(밀리초)입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>Plays the sound of a beep of a specified frequency and duration through the console speaker.</source>
          <target state="translated">지정한 시간 동안 지정한 주파수로 콘솔 스피커를 통해 경고음을 재생합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> wraps a call to the Windows <bpt id="p1">[</bpt>Beep function<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> Windows에 대 한 호출을 래핑합니다 <bpt id="p1">[</bpt>함수 경고음을 발생시킬지<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>Whether <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</source>
          <target state="translated">여부 <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> Windows 7 8254 프로그램 가능 간격 타이머 칩의 존재 여부에 따라 달라 집니다 전에 버전의 Windows에서 소리를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>Starting with Windows 7, it depends on the default sound device.</source>
          <target state="translated">종속 기본 사운드 장치에 Windows 7을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> 메서드가 64 비트 버전의 Windows Vista 및 Windows XP에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> method by playing the first few notes of a song through the console speaker.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.Beep%2A&gt;</ph> 콘솔 스피커를 통해 노래의 처음 몇 개의 메모를 재생 하 여 메서드.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="frequency" /&gt;</ph> is less than 37 or more than 32767 hertz.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="frequency" /&gt;</ph>가 37헤르츠보다 작거나 32767헤르츠보다 큽니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="duration" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="duration" /&gt;</ph>가 0보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Console.Beep(System.Int32,System.Int32)">
          <source>This method was executed on a server, such as SQL Server, that does not permit access to the console.</source>
          <target state="translated">이 메서드가 콘솔에 대한 액세스를 허용하지 않는 SQL Server와 같은 서버에서 실행되었습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>Gets or sets the height of the buffer area.</source>
          <target state="translated">버퍼 영역의 높이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>The current height, in rows, of the buffer area.</source>
          <target state="translated">버퍼 영역의 현재 높이(행)입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>This property defines the number of rows (or lines) stored in the buffer that is accessed by a console mode window.</source>
          <target state="translated">이 속성의 액세스를 콘솔 모드 창 하는 버퍼에 저장 된 행 (또는 줄)를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property defines the number of rows that are actually displayed in the console window at any particular time.</source>
          <target state="translated">반면,는 <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> 속성 특정 시간에 실제로 콘솔 창에 표시 되는 행의 수를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>If the number of rows actually written to the buffer exceeds the number of rows defined by the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property, the window can be scrolled vertically so that it displays a contiguous number of rows that are equal to the <ph id="ph2">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property and are located anywhere in the buffer.</source>
          <target state="translated">버퍼에 실제로 기록 된 행 수에 정의 된 행 수를 초과 하는 경우는 <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> 속성 수와 같지 않은 행의 연속 표시 되도록 창을 세로로 스크롤할 수 있는 <ph id="ph2">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> 되 고 속성이 있어야 에 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>If a set operation decreases the value of the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> property, the uppermost lines are removed.</source>
          <target state="translated">Set 작업의 값을 감소 하는 경우는 <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> 속성을 맨 위 줄이 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>For example, if the number of lines is reduced from 300 to 250, lines 0 through 49 are removed, and the existing lines 50 through 299 become lines 0 through 249.</source>
          <target state="translated">예를 들어 250 줄 수가 300에서 감소, 줄 49 사이의 0 제거 되 고 될 299 50 줄 기존 하는 경우에 0부터 249를 정렬 됩니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</source>
          <target state="translated">이 예제에서는 300 행과 열의 85 버퍼 크기로 설정 하는 운영 체제 창의 크기를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The value in a set operation is less than or equal to zero.</source>
          <target state="translated">집합 작업의 값이 0보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">집합 작업의 값이 <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The value in a set operation is less than <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>.</source>
          <target state="translated">집합 작업의 값이 <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Console.BufferHeight">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferHeight">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>Gets or sets the width of the buffer area.</source>
          <target state="translated">버퍼 영역의 너비를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>The current width, in columns, of the buffer area.</source>
          <target state="translated">버퍼 영역의 현재 너비(열)입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>If a set operation decreases the value of the <ph id="ph1">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> property, the rightmost columns are removed.</source>
          <target state="translated">Set 작업의 값을 감소 하는 경우는 <ph id="ph1">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> 속성 오른쪽에 있는 열이 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>For example, if the number of columns is reduced from 80 to 60, columns 60 through 79 of each row are removed.</source>
          <target state="translated">예를 들어 80에서 60으로 열 수를 줄이면 열 60 각 행의 79 개를 통해 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</source>
          <target state="translated">이 예제에서는 300 행과 열의 85 버퍼 크기로 설정 하는 운영 체제 창의 크기를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The value in a set operation is less than or equal to zero.</source>
          <target state="translated">집합 작업의 값이 0보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">집합 작업의 값이 <ph id="ph1">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The value in a set operation is less than <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>.</source>
          <target state="translated">집합 작업의 값이 <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Console.BufferWidth">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.BufferWidth">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="E:System.Console.CancelKeyPress">
          <source>Occurs when the <ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph> modifier key (Ctrl) and either the <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph> console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph> 보조 키(Ctrl)와 <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph> 콘솔 키(C) 또는 Break 키를 동시에 누르면(Ctrl+C 또는 Ctrl+Break) 발생합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>This event is used in conjunction with <ph id="ph1">&lt;xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">와 함께에서이 이벤트는 <ph id="ph1">&lt;xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> event enables a console application to intercept the Ctrl+C signal so the event handler can decide whether to continue executing or terminate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> 이벤트를 이벤트 처리기는 계속 실행 하거나 종료할 것인지 결정할 수 있도록 Ctrl + C 신호를 가로채기 위해 콘솔 응용 프로그램을 활성화 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>When the user presses either Ctrl+C or Ctrl+Break, the <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> event is fired and the application's <ph id="ph2">&lt;xref:System.ConsoleCancelEventHandler&gt;</ph> event handler is executed.</source>
          <target state="translated">Ctrl + C 또는 Ctrl + Break를 누를 때는 <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> 이벤트가 발생 하 고 응용 프로그램의 <ph id="ph2">&lt;xref:System.ConsoleCancelEventHandler&gt;</ph> 이벤트 처리기가 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The event handler is passed a <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs&gt;</ph> object that has two useful properties:</source>
          <target state="translated">이벤트 처리기에 전달 되는 <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs&gt;</ph> 두 유용한 속성이 있는 개체:</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.SpecialKey%2A&gt;</ph>, which allows you to determine whether the handler was invoked as a result of the user pressing Ctrl+C (the property value is <ph id="ph2">&lt;xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType&gt;</ph>) or Ctrl+Break (the property value is <ph id="ph3">&lt;xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.SpecialKey%2A&gt;</ph>Ctrl + C를 누르면 사용자로 인해 처리기가 호출 되어 있는지 여부를 확인할 수 있습니다 (속성 값이 <ph id="ph2">&lt;xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType&gt;</ph>) 또는 Ctrl + Break (속성 값은 <ph id="ph3">&lt;xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph>, which allows you to determine how to your application should respond to the user pressing Ctrl+C or Ctrl+Break.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph>방법을 응용 프로그램에 사용자에 게 응답 키를 눌러 Ctrl + C 또는 Ctrl + Break를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>By default, the <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, which causes program execution to terminate when the event handler exits.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 프로그램 종료 이벤트 처리기가 종료 될 때 실행이 원인입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>Changing its property to <ph id="ph1">`true`</ph> specifies that the application should continue to execute.</source>
          <target state="translated">해당 속성을 변경 <ph id="ph1">`true`</ph> 응용 프로그램 실행을 계속 되도록 지정 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>If your application has simple requirements, you can use the <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> property instead of this event.</source>
          <target state="translated">이 요구 사항이 단순한 응용 프로그램에 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> 이 이벤트 대신 속성입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>By setting this property to <ph id="ph1">`false`</ph>, you can ensure that your application always exits if the user presses Ctrl+C.</source>
          <target state="translated">이 속성을 설정 하 여 <ph id="ph1">`false`</ph>, 사용자가 Ctrl + C를 누르면가 응용 프로그램을 항상 종료 되도록 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>By setting it to <ph id="ph1">`true`</ph>, you can ensure that pressing Ctrl+C will not terminate the application.</source>
          <target state="translated">로 설정 하 여 <ph id="ph1">`true`</ph>, Ctrl + C를 누르면 응용 프로그램을 종료 하지 것입니다 되도록 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The event handler for this event is executed on a thread pool thread.</source>
          <target state="translated">이 이벤트에 대 한 이벤트 처리기는 스레드 풀 스레드에서 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>The following example demonstrates how the <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> event is used.</source>
          <target state="translated">다음 예제에서는 방법을 <ph id="ph1">&lt;xref:System.Console.CancelKeyPress&gt;</ph> 이벤트 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>When you press Ctrl+C, the read operation is interrupted and the <ph id="ph1">`myHandler`</ph> event handler is invoked.</source>
          <target state="translated">Ctrl + C를 누를 때 읽기 작업이 중단 되 고 <ph id="ph1">`myHandler`</ph> 이벤트 처리기가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>Upon entry to the event handler, the <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, which means that the current process will terminate when the event handler terminates.</source>
          <target state="translated">이벤트 처리기에 진입할 때는 <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 이벤트 처리기가 종료 될 때 현재 프로세스를 종료 되었음을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>However, the event handler sets the <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph>, which means that the process will not terminate and the read operation will resume.</source>
          <target state="translated">그러나 이벤트 처리기 설정는 <ph id="ph1">&lt;xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph2">`true`</ph>, 즉은 프로세스가 종료 되지 것입니다 있으며 읽기 작업이 다시 시작 됩니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Console.CancelKeyPress">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Console.CapsLock">
          <source>Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</source>
          <target state="translated">Caps Lock 키보드 토글의 설정 또는 해제 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CapsLock">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if CAPS LOCK is turned on; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if CAPS LOCK is turned off.</source>
          <target state="translated">Caps Lock이 설정되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, Caps Lock이 해제되어 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Console.Clear">
          <source>Clears the console buffer and corresponding console window of display information.</source>
          <target state="translated">콘솔 버퍼와 해당 콘솔 창에서 표시 정보를 지웁니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>Using the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method is equivalent invoking the MS-DOS <ph id="ph2">`cls`</ph> command in the command prompt window.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> 메서드는 호출 MS-DOS 해당 <ph id="ph2">`cls`</ph> 명령 프롬프트 창에서 명령을 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>When the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method is called, the cursor automatically scrolls to the top-left corner of the window and the contents of the screen buffer are set to blanks using the current foreground background colors.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> 메서드는, 창의 왼쪽 위 모서리는 커서가 자동으로 스크롤하고 및 화면 버퍼의 내용을 현재 전경 배경 색을 사용 하 여 공백으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>Attempting to call the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method when a console application's output is redirected to a file throws a <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">호출을 시도 <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> 콘솔 응용 프로그램의 출력을 파일로 리디렉션되는 경우 메서드에서 throw 한 <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>To prevent this, always wrap a call to the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method in a <ph id="ph2">`try`</ph>…<ph id="ph3">`catch`</ph></source>
          <target state="translated">이 방지 하려면 항상 호출을 래핑하는 <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> 에서 메서드는 <ph id="ph2">`try`</ph>...<ph id="ph3">`catch`</ph></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>block.</source>
          <target state="translated">블록입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> 메서드는 루프를 실행 하기 전에 콘솔 지우기를 사용자 전경색과 배경색을 선택 하 고 표시할 문자열을 입력 하 라는 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>If the user chooses not to exit the program, the console's original foreground and background colors are restored and the <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> method is called again before re-executing the loop.</source>
          <target state="translated">사용자가 프로그램을 종료 하도록 하지 하는 경우 콘솔의 원래 전경 색과 배경색 복원 됩니다 및 <ph id="ph1">&lt;xref:System.Console.Clear%2A&gt;</ph> 메서드는 루프를 다시 실행 하기 전에 다시 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>The example relies on a <ph id="ph1">`GetKeyPress`</ph> method to validate the user's selection of a foreground and background color.</source>
          <target state="translated">의존 하는 예제는 <ph id="ph1">`GetKeyPress`</ph> 메서드를 사용자가 선택한 색 전경색과 배경색의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">이 예제에서는 5 문자를 조합 하 여 5 문자 사각형에 의해 그리려면 다음 쓰기가 발생 하는 위치를 결정 하는 커서를 배치 "+", "&amp;#124;", 및 "-" 문자열입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Clear">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">다른 문자열의 조합을 사용 하 여 더 적은 단계로 사용 하 여 사각형을 그릴 수 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Console.Clear">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>Gets or sets the column position of the cursor within the buffer area.</source>
          <target state="translated">버퍼 영역 내에서 커서의 열 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>The current position, in columns, of the cursor.</source>
          <target state="translated">커서의 현재 위치(열)입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">이 예제에서는 5 문자를 조합 하 여 5 문자 사각형에 의해 그리려면 다음 쓰기가 발생 하는 위치를 결정 하는 커서를 배치 "+", "&amp;#124;", 및 "-" 문자열입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">다른 문자열의 조합을 사용 하 여 더 적은 단계로 사용 하 여 사각형을 그릴 수 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>The value in a set operation is less than zero.</source>
          <target state="translated">Set 작업의 값이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated">집합 작업의 값이 <ph id="ph1">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Console.CursorLeft">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorLeft">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>Gets or sets the height of the cursor within a character cell.</source>
          <target state="translated">문자 셀 내부의 커서 높이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The size of the cursor expressed as a percentage of the height of a character cell.</source>
          <target state="translated">문자 셀 높이의 백분율로 표시되는 커서의 크기입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The property value ranges from 1 to 100.</source>
          <target state="translated">속성 값의 범위는 1에서 100까지입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The cursor appearance varies, ranging from a horizontal line at the bottom of the cell when the property value is 1, to completely filling the cell when the property value is 100.</source>
          <target state="translated">속성 값이 1, 속성 값이 100 경우 셀을 완전히 채워지는 경우 셀의 아래쪽에 가로 줄에서 범위의 커서 모양을 다릅니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> property.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.CursorSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.</source>
          <target state="translated">이 예제에서는 때마다 콘솔 키를 누르면 다음 커서를 종료 하기 전에 원래 크기로 복원 하는 커서의 크기를 늘립니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>The value specified in a set operation is less than 1 or greater than 100.</source>
          <target state="translated">set 작업에 지정된 값이 1보다 작거나 100보다 큽니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Console.CursorSize">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorSize">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>Gets or sets the row position of the cursor within the buffer area.</source>
          <target state="translated">버퍼 영역 내에서 커서의 행 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>The current position, in rows, of the cursor.</source>
          <target state="translated">커서의 현재 위치(행)입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">이 예제에서는 5 문자를 조합 하 여 5 문자 사각형에 의해 그리려면 다음 쓰기가 발생 하는 위치를 결정 하는 커서를 배치 "+", "&amp;#124;", 및 "-" 문자열입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">다른 문자열의 조합을 사용 하 여 더 적은 단계로 사용 하 여 사각형을 그릴 수 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>The value in a set operation is less than zero.</source>
          <target state="translated">Set 작업의 값이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>The value in a set operation is greater than or equal to <ph id="ph1">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated">집합 작업의 값이 <ph id="ph1">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Console.CursorTop">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorTop">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="P:System.Console.CursorVisible">
          <source>Gets or sets a value indicating whether the cursor is visible.</source>
          <target state="translated">커서가 표시되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cursor is visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">커서가 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 표시되지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> property.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.</source>
          <target state="translated">입력의 첫 번째 열은 '+' 문자인 경우에 표시 또는 입력이 보이지 않는 예제에서는 커서는 '-' 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.Console.CursorVisible">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="P:System.Console.CursorVisible">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.CursorVisible">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="P:System.Console.Error">
          <source>Gets the standard error output stream.</source>
          <target state="translated">표준 오류 출력 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that represents the standard error output stream.</source>
          <target state="translated">표준 오류 출력 스트림을 나타내는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>This standard error stream is set to the console by default.</source>
          <target state="translated">이 표준 오류 스트림에 기본적으로 콘솔에 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>It can be set to another stream with the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method.</source>
          <target state="translated">다른 스트림으로로 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>After the standard error stream is redirected, it can be reacquired by calling the <ph id="ph1">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> method.</source>
          <target state="translated">다시 호출 하 여 수 후 표준 오류 스트림을 리디렉션되는 <ph id="ph1">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>In console applications whose informational output is often redirected to a file, the standard error stream available through the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property can be used to display information to the console even if output is redirected.</source>
          <target state="translated">콘솔 응용 프로그램 정보 제공 용 이므로 출력을 가진 파일에 종종 리디렉션되면, 표준 오류 스트림의 통해 사용할 수는 <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> 출력이 리디렉션된 경우에 콘솔에 정보를 표시 하려면 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>The following example displays product tables for 10 numbers at a time starting with 1.</source>
          <target state="translated">다음 예제에서는 1부터 시작 하는 한 번에 10 개의 번호에 대 한 제품 테이블을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>After every set of 10 numbers, the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property is used to ask the user whether to display the next set.</source>
          <target state="translated">모든 집합에 10 개의 번호 뒤에서 <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> 속성을 다음 집합을 표시할지 여부를 사용자에 게 요청 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>If the standard output is redirected to a file, the user is still asked whether the routine should generate the next set of products.</source>
          <target state="translated">표준 출력 파일로 리디렉션되는 경우 사용자는 루틴 제품의 다음 집합을 생성할지 여부를 묻습니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the <ph id="ph1">`tabSize`</ph> variable.</source>
          <target state="translated">다음 예제는 4 개의 공백에 정의 된 값으로 텍스트 파일의 탭 문자를 대체 하 ExpandTabs 라는 명령줄 유틸리티는 <ph id="ph1">`tabSize`</ph> 변수입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>It redirects the standard input and output streams to files, but uses the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property to write the standard error stream to the console.</source>
          <target state="translated">리디렉션되어 표준 입력 및 출력 파일을 스트리밍하 하지만 사용 하 여는 <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> 콘솔에 표준 오류 스트림을 쓸 속성입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.</source>
          <target state="translated">탭 문자를 포함 하는 파일의 이름과 출력 파일의 이름을 제공 하 여 명령줄에서 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>The following example is a simple text file viewer that displays the contents of one or more text files to the console.</source>
          <target state="translated">다음 예제에서는 콘솔에 하나 이상의 텍스트 파일의 내용을 표시 하는 간단한 텍스트 파일 뷰어입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method to redirect error information to a file, calls the <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</source>
          <target state="translated">명령줄 인수 없이, 또는 명령줄 인수로 전달 된 모든 파일이 존재 하지 않는 경우이 예에서는 호출 하는 경우는 <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> 오류 정보를 파일로 리디렉션하는 메서드를 호출의 <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> 표준 오차 썼는지 중 메서드 스트림, 문서를 나타내고 오류 정보 파일에 기록 되었습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>Note that the <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph2">`true`</ph> before reacquiring the error stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> 속성이 <ph id="ph2">`true`</ph> 오류 스트림에 썼는지 하기 전에.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Error">
          <source>This ensures that output will be sent to the console immediately rather than buffered.</source>
          <target state="translated">이렇게 하면는 출력은 콘솔에 즉시 전송 되지 않고 버퍼링 합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>Gets or sets the foreground color of the console.</source>
          <target state="translated">콘솔의 전경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph> that specifies the foreground color of the console; that is, the color of each character that is displayed.</source>
          <target state="translated">표시되는 각 문자의 색인 콘솔의 전경색을 지정하는 <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>The default is gray.</source>
          <target state="translated">기본값은 회색입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>A get operation for a Windows-based application, in which a console does not exist, returns <ph id="ph1">&lt;xref:System.ConsoleColor.Gray&gt;</ph>.</source>
          <target state="translated">Windows 기반 응용 프로그램의 경우는 콘솔이 없으면 get 작업에 반환 <ph id="ph1">&lt;xref:System.ConsoleColor.Gray&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.</source>
          <target state="translated">다음 예제에서는 인지 확인 콘솔의 배경색은 검정, 그럴 경우에 배경색 빨간색과 검정색으로 전경색을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>The following example saves the values of the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration to an array and stores the current values of the <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> properties to variables.</source>
          <target state="translated">값을 저장 하는 다음 예제는 <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> 배열에는 열거형의 현재 값을 저장 하 고는 <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> 변수에 속성입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>It then changes the foreground color to each color in the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current background, and it changes the background color to each color in the <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current foreground.</source>
          <target state="translated">각 색에 전경색을 다음 변경는 <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> 현재 배경 일치 하는 색를 제외한 각 색에 배경색을 변경 하는 열거형은 <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> 열거형을 제외 하 고 일치 하는 색을는 현재 전경입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method to restore the original console colors.</source>
          <target state="translated">(전경색 배경색으로 동일한 경우 텍스트가 표시 되지 않습니다.) 마지막으로 호출 하는 <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> 원래 콘솔 색을 복원 하려면 메서드.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>The color specified in a set operation is not a valid member of <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>.</source>
          <target state="translated">집합 작업에서 지정된 색이 <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph>의 올바른 멤버가 아닙니다. </target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Console.ForegroundColor">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.ForegroundColor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="P:System.Console.In">
          <source>Gets the standard input stream.</source>
          <target state="translated">표준 입력 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that represents the standard input stream.</source>
          <target state="translated">표준 입력 스트림을 나타내는 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>This property is set to the standard input stream by default.</source>
          <target state="translated">이 속성은 기본적으로 표준 입력된 스트림을로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>This property can be set to another stream with the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">이 속성을 다른 스트림으로 <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>Read operations on the standard input stream execute synchronously.</source>
          <target state="translated">표준 입력 스트림에서 읽기 작업을 동기적으로 실행 합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>That is, they block until the specified read operation has completed.</source>
          <target state="translated">즉, 지정 된 읽기 작업이 완료 될 때까지 차단 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>This is true even if an asynchronous method, such as <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;</ph>, is called on the <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Console.In%2A&gt;</ph> property.</source>
          <target state="translated">도 마찬가지입니다 경우 비동기 메서드를 같은 <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;</ph>, 라고 하는 <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> 에서 반환 된 개체는 <ph id="ph3">&lt;xref:System.Console.In%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.In">
          <source>The following sample illustrates the use of the <ph id="ph1">`In`</ph> property.</source>
          <target state="translated">다음 샘플에서는 <ph id="ph1">`In`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>Gets or sets the encoding the console uses to read input.</source>
          <target state="translated">콘솔이 입력을 읽기 위해 사용하는 인코딩을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>The encoding used to read console input.</source>
          <target state="translated">콘솔 입력을 읽는 데 사용되는 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>The console uses the input encoding to translate keyboard input into a corresponding character.</source>
          <target state="translated">콘솔 입력 키보드 입력을 해당 문자로 변환 인코딩을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>The input encoding incorporates a code page that maps 256 keyboard character codes to individual characters.</source>
          <target state="translated">입력 인코딩 256 키보드 문자 코드의 개별 문자에 매핑되는 코드 페이지를 통합 합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>Different code pages include different special characters, typically customized for a language or a group of languages.</source>
          <target state="translated">여러 코드 페이지에는 일반적으로 언어 또는 언어 그룹에 대해 사용자 지정된 여러 특수 문자가 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, a property get operation may return a cached value instead of the console's current input encoding.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 속성 get 작업 콘솔의 현재 입력 인코딩의 대신 캐시 된 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>This can occur if the value of the <ph id="ph1">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> property is modified by some means other than an assignment to the <ph id="ph2">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> property, such as calling the Windows <ph id="ph3">`SetConsoleCP`</ph> function or using the <ph id="ph4">`chcp`</ph> command from a PowerShell script.</source>
          <target state="translated">때문일 수 있습니다 값은 <ph id="ph1">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> 속성이 아닌에 할당 하는 다른 방법으로 수정 되는 <ph id="ph2">&lt;xref:System.Console.InputEncoding%2A&gt;</ph> Windows를 호출 하는 등의 속성 <ph id="ph3">`SetConsoleCP`</ph> 함수 또는 사용 하 여는 <ph id="ph4">`chcp`</ph> PowerShell 스크립트에서 명령을 합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>The property value in a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">설정 작업에서 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 속성 값이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">이 작업을 실행하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Console.InputEncoding">
          <source>Your application does not have permission to perform this operation.</source>
          <target state="translated">응용 프로그램에 이 작업을 수행할 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>for reading and writing to top-level windows and subwindows.</source>
          <target state="translated">읽고 최상위 창 및 하위 창에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.InputEncoding">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.Console.IsErrorRedirected">
          <source>Gets a value that indicates whether the error output stream has been redirected from the standard error stream.</source>
          <target state="translated">오류 출력 스트림이 표준 오류 스트림에서 리디렉션되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.IsErrorRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if error output is redirected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">오류 출력이 리디렉션되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 리디렉션되지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="P:System.Console.IsInputRedirected">
          <source>Gets a value that indicates whether input has been redirected from the standard input stream.</source>
          <target state="translated">입력이 표준 입력 스트림에서 리디렉션되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.IsInputRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if input is redirected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">입력이 리디렉션되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 리디렉션되지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="P:System.Console.IsOutputRedirected">
          <source>Gets a value that indicates whether output has been redirected from the standard output stream.</source>
          <target state="translated">출력이 표준 출력 스트림에서 리디렉션되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.IsOutputRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if output is redirected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">출력이 리디렉션되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 리디렉션되지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.Console.KeyAvailable">
          <source>Gets a value indicating whether a key press is available in the input stream.</source>
          <target state="translated">입력 스트림에서 키 누름을 사용할 수 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a key press is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">키 누름을 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 사용할 수 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source>The property value is returned immediately; that is, the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property does not block input until a key press is available.</source>
          <target state="translated">속성 값 즉시 반환 됩니다. 즉,는 <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> 속성 키 누름을 사용할 수 있는 될 때까지 입력을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source>Use the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property in conjunction with only the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method, not the <ph id="ph3">&lt;xref:System.Console.Read%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Console.ReadLine%2A&gt;</ph> methods.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> 속성과 함께는 <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드를 하지는 <ph id="ph3">&lt;xref:System.Console.Read%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.KeyAvailable">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property to create a loop that runs until a key is pressed.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> 키를 누를 때까지 실행 되는 루프를 만들 속성입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="P:System.Console.KeyAvailable">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.Console.KeyAvailable">
          <source>Standard input is redirected to a file instead of the keyboard.</source>
          <target state="translated">표준 입력이 키보드 대신에 파일로 리디렉션됩니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Console.LargestWindowHeight">
          <source>Gets the largest possible number of console window rows, based on the current font and screen resolution.</source>
          <target state="translated">현재 글꼴 및 화면 해상도에 따라 콘솔 창 행의 가능한 최대 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.LargestWindowHeight">
          <source>The height of the largest possible console window measured in rows.</source>
          <target state="translated">콘솔 창의 가능한 최대 높이(행)입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Console.LargestWindowWidth">
          <source>Gets the largest possible number of console window columns, based on the current font and screen resolution.</source>
          <target state="translated">현재 글꼴 및 화면 해상도에 따라 콘솔 창 열의 가능한 최대 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.LargestWindowWidth">
          <source>The width of the largest possible console window measured in columns.</source>
          <target state="translated">콘솔 창의 가능한 최대 너비(열)입니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">화면 버퍼의 지정한 소스 영역을 지정한 대상 영역에 복사합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The leftmost column of the source area.</source>
          <target state="translated">소스 영역의 맨 왼쪽 열입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The topmost row of the source area.</source>
          <target state="translated">소스 영역의 맨 위 행입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The number of columns in the source area.</source>
          <target state="translated">소스 영역에 있는 열의 수입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The number of rows in the source area.</source>
          <target state="translated">소스 영역에 있는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The leftmost column of the destination area.</source>
          <target state="translated">대상 영역의 맨 왼쪽 열입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The topmost row of the destination area.</source>
          <target state="translated">대상 영역의 맨 위 행입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">화면 버퍼의 지정한 소스 영역을 지정한 대상 영역에 복사합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the destination and source parameters specify a position located outside the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</source>
          <target state="translated">대상 및 소스 매개 변수가 현재 화면 버퍼의 경계 외부에 있는 위치를 지정 하는 경우 대상 영역에 포함 되는 소스 영역에 대 한 부분만 복사 됩니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>That is, the source area is clipped to fit the current screen buffer.</source>
          <target state="translated">즉, 소스 영역 현재 화면 버퍼에 맞게 잘립니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method copies the source area to the destination area.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> 메서드 대상 영역 소스 영역에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the destination area does not intersect the source area, the source area is filled with blanks using the current foreground and background colors.</source>
          <target state="translated">대상 영역의 소스 영역을 교차 하지 않는, 소스 영역을 사용 하 여 현재 전경색과 배경색 공백으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Otherwise, the intersected portion of the source area is not filled.</source>
          <target state="translated">그렇지 않으면 소스 영역에 교차 부분이 채워지지 않습니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>One or more of the parameters is less than zero.</source>
          <target state="translated">하나 이상의 매개 변수가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph>가 <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph>가 <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph>가 <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph>가 <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The leftmost column of the source area.</source>
          <target state="translated">소스 영역의 맨 왼쪽 열입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The topmost row of the source area.</source>
          <target state="translated">소스 영역의 맨 위 행입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The number of columns in the source area.</source>
          <target state="translated">소스 영역에 있는 열의 수입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The number of rows in the source area.</source>
          <target state="translated">소스 영역에 있는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The leftmost column of the destination area.</source>
          <target state="translated">대상 영역의 맨 왼쪽 열입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The topmost row of the destination area.</source>
          <target state="translated">대상 영역의 맨 위 행입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The character used to fill the source area.</source>
          <target state="translated">소스 영역을 채우는 데 사용되는 문자입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The foreground color used to fill the source area.</source>
          <target state="translated">소스 영역을 채우는 데 사용되는 전경색입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The background color used to fill the source area.</source>
          <target state="translated">소스 영역을 채우는 데 사용되는 배경색입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>Copies a specified source area of the screen buffer to a specified destination area.</source>
          <target state="translated">화면 버퍼의 지정한 소스 영역을 지정한 대상 영역에 복사합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>If the destination and source parameters specify a position located beyond the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</source>
          <target state="translated">대상 및 소스 매개 변수가 현재 화면 버퍼의 경계를 벗어난 위치를 지정 하는 경우 대상 영역에 포함 되는 소스 영역에 대 한 부분만 복사 됩니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>That is, the source area is clipped to fit the current screen buffer.</source>
          <target state="translated">즉, 소스 영역 현재 화면 버퍼에 맞게 잘립니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method copies the source area to the destination area.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> 메서드 대상 영역 소스 영역에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>If the destination area does not intersect the source area, the source area is filled with the character specified by <ph id="ph1">`sourceChar`</ph>, using the colors specified by <ph id="ph2">`sourceForeColor`</ph> and <ph id="ph3">`sourceBackColor`</ph>.</source>
          <target state="translated">대상 영역의 소스 영역을 교차 하지 않는, 소스 영역에서 지정 된 문자로 채워집니다 <ph id="ph1">`sourceChar`</ph>, 하 여 지정 된 색을 사용 하 여 <ph id="ph2">`sourceForeColor`</ph> 및 <ph id="ph3">`sourceBackColor`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>Otherwise, the intersected portion of the source area is not filled.</source>
          <target state="translated">그렇지 않으면 소스 영역에 교차 부분이 채워지지 않습니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method performs no operation if <ph id="ph2">`sourceWidth`</ph> or <ph id="ph3">`sourceHeight`</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> 메서드 하면 아무런 작업도 수행 <ph id="ph2">`sourceWidth`</ph> 또는 <ph id="ph3">`sourceHeight`</ph> 은 0입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>One or more of the parameters is less than zero.</source>
          <target state="translated">하나 이상의 매개 변수가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="targetLeft" /&gt;</ph>가 <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> or <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="targetTop" /&gt;</ph>가 <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceTop" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceHeight" /&gt;</ph>가 <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph> is greater than or equal to <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceLeft" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="sourceWidth" /&gt;</ph>가 <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>One or both of the color parameters is not a member of the <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph> enumeration.</source>
          <target state="translated">색 매개 변수 중 하나 또는 둘 다가 <ph id="ph1">&lt;see cref="T:System.ConsoleColor" /&gt;</ph> 열거형의 멤버가 아닙니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="P:System.Console.NumberLock">
          <source>Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</source>
          <target state="translated">Num Lock 키보드 토글의 설정 또는 해제 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.NumberLock">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if NUM LOCK is turned on; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if NUM LOCK is turned off.</source>
          <target state="translated">Num Lock이 설정되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, Num Lock이 해제되어 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Acquires the standard error stream.</source>
          <target state="translated">표준 오류 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError">
          <source>Acquires the standard error stream.</source>
          <target state="translated">표준 오류 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError">
          <source>The standard error stream.</source>
          <target state="translated">표준 오류 스트림입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>This method can be used to reacquire the standard error stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는에서 변경 된 후 표준 오류 스트림을 다시 가져오는 데 사용할 수는 <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>The following example is a simple text file viewer that displays the contents of one or more text files to the console.</source>
          <target state="translated">다음 예제에서는 콘솔에 하나 이상의 텍스트 파일의 내용을 표시 하는 간단한 텍스트 파일 뷰어입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method to redirect error information to a file, calls the <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</source>
          <target state="translated">명령줄 인수 없이, 또는 명령줄 인수로 전달 된 모든 파일이 존재 하지 않는 경우이 예에서는 호출 하는 경우는 <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> 오류 정보를 파일로 리디렉션하는 메서드를 호출의 <ph id="ph2">&lt;xref:System.Console.OpenStandardError%2A&gt;</ph> 표준 오차 썼는지 중 메서드 스트림, 문서를 나타내고 오류 정보 파일에 기록 되었습니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>Note that the <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph2">`true`</ph> before reacquiring the error stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> 속성이 <ph id="ph2">`true`</ph> 오류 스트림에 썼는지 하기 전에.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError">
          <source>This ensures that output will be sent to the console immediately rather than buffered.</source>
          <target state="translated">이렇게 하면는 출력은 콘솔에 즉시 전송 되지 않고 버퍼링 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>The internal stream buffer size.</source>
          <target state="translated">내부 스트림 버퍼 크기입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>Acquires the standard error stream, which is set to a specified buffer size.</source>
          <target state="translated">표준 오류 스트림을 가져와 지정한 버퍼 크기로 설정합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>The standard error stream.</source>
          <target state="translated">표준 오류 스트림입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source>This method can be used to reacquire the standard error stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는에서 변경 된 후 표준 오류 스트림을 다시 가져오는 데 사용할 수는 <ph id="ph1">&lt;xref:System.Console.SetError%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardError(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph>가 0보다 작거나 같은 경우</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Acquires the standard input stream.</source>
          <target state="translated">표준 입력 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput">
          <source>Acquires the standard input stream.</source>
          <target state="translated">표준 입력 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput">
          <source>The standard input stream.</source>
          <target state="translated">표준 입력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput">
          <source>This method can be used to reacquire the standard input stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는에서 변경 된 후 표준 입력된 스트림을 다시 가져오는 데 사용할 수는 <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput">
          <source>The following example illustrates the use of the <ph id="ph1">`OpenStandardInput`</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`OpenStandardInput`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>The internal stream buffer size.</source>
          <target state="translated">내부 스트림 버퍼 크기입니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>Acquires the standard input stream, which is set to a specified buffer size.</source>
          <target state="translated">표준 입력 스트림을 가져와 지정한 버퍼 크기로 설정합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>The standard input stream.</source>
          <target state="translated">표준 입력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 하 여 변경 된 후 표준 출력 스트림을 다시 가져오는 데 사용할 수는 <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source>The following example illustrates the use of the <ph id="ph1">`OpenStandardInput`</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`OpenStandardInput`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardInput(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph>가 0보다 작거나 같은 경우</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Acquires the standard output stream.</source>
          <target state="translated">표준 출력 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput">
          <source>Acquires the standard output stream.</source>
          <target state="translated">표준 출력 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput">
          <source>The standard output stream.</source>
          <target state="translated">표준 출력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 하 여 변경 된 후 표준 출력 스트림을 다시 가져오는 데 사용할 수는 <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>To run it, you must supply two command-line arguments.</source>
          <target state="translated">를 실행 하려면 두 명령줄 인수를 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>This file need not exist.</source>
          <target state="translated">이 파일이 있을 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">그러한 경우 해당 내용은 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The internal stream buffer size.</source>
          <target state="translated">내부 스트림 버퍼 크기입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>Acquires the standard output stream, which is set to a specified buffer size.</source>
          <target state="translated">표준 출력 스트림을 가져와 지정한 버퍼 크기로 설정합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The standard output stream.</source>
          <target state="translated">표준 출력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>This method can be used to reacquire the standard output stream after it has been changed by the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 하 여 변경 된 후 표준 출력 스트림을 다시 가져오는 데 사용할 수는 <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.OpenStandardOutput%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>To run it, you must supply two command line arguments.</source>
          <target state="translated">를 실행 하려면 두 명령줄 인수를 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>This file need not exist.</source>
          <target state="translated">이 파일이 있을 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">그러한 경우 해당 내용은 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Console.OpenStandardOutput(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph>가 0보다 작거나 같은 경우</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="P:System.Console.Out">
          <source>Gets the standard output stream.</source>
          <target state="translated">표준 출력 스트림을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that represents the standard output stream.</source>
          <target state="translated">표준 출력 스트림을 나타내는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>This property is set to the standard output stream by default.</source>
          <target state="translated">이 속성을 표준 출력 스트림에 기본적으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>This property can be set to another stream with the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">이 속성을 다른 스트림으로 <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>Note that calls to <ph id="ph1">`Console.Out.WriteLine`</ph> methods are equivalent to calls to the corresponding <ph id="ph2">&lt;xref:System.Console.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">호출은 <ph id="ph1">`Console.Out.WriteLine`</ph> 메서드는 해당 요소에 대 한 호출으로 동일 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> property to display an array containing the names of files in the application's current directory to the standard output device.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> 속성을 표준 출력 장치에 응용 프로그램의 현재 디렉터리에 파일의 이름을 포함 하는 배열을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>It then sets the standard output to a file named Files.txt and lists the array elements to the file.</source>
          <target state="translated">다음 Files.txt 라는 파일에 표준 출력을 설정 하 고 파일에 배열 요소를 나열 합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Out">
          <source>Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.</source>
          <target state="translated">마지막으로, 표준 출력 스트림에 출력을 설정 하 고 다시 표준 출력 장치 배열 요소를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>Gets or sets the encoding the console uses to write output.</source>
          <target state="translated">콘솔이 출력을 쓰기 위해 사용하는 인코딩을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The encoding used to write console output.</source>
          <target state="translated">콘솔 출력을 쓰는 데 사용되는 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The console uses the output encoding to translate characters written by an application into corresponding console display characters.</source>
          <target state="translated">콘솔을 해당 콘솔 디스플레이 문자로 응용 프로그램에 의해 작성 된 문자를 출력 인코딩으로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The default code page that the console uses is determined by the system locale.</source>
          <target state="translated">콘솔을 사용 하는 기본 코드 페이지는 시스템 로캘에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, a property get operation may return a cached value instead of the console's current output encoding.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 속성 get 작업 콘솔의 현재 출력 인코딩 대신 캐시 된 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>This can occur if the value of the <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> property is modified by some means other than an assignment to the <ph id="ph2">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> property, such as calling the Windows <ph id="ph3">`SetConsoleOutputCP`</ph> function.</source>
          <target state="translated">때문일 수 있습니다 값은 <ph id="ph1">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> 속성이 아닌에 할당 하는 다른 방법으로 수정 되는 <ph id="ph2">&lt;xref:System.Console.OutputEncoding%2A&gt;</ph> Windows를 호출 하는 등의 속성 <ph id="ph3">`SetConsoleOutputCP`</ph> 함수입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>The property value in a set operation is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">설정 작업에서 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 속성 값이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>An error occurred during the execution of this operation.</source>
          <target state="translated">이 작업을 실행하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="P:System.Console.OutputEncoding">
          <source>Your application does not have permission to perform this operation.</source>
          <target state="translated">응용 프로그램에 이 작업을 수행할 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>for reading and writing to top-level windows and subwindows.</source>
          <target state="translated">읽고 최상위 창 및 하위 창에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Of the Unicode encodings, the <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> class supports UTF-8 encoding with the <ph id="ph2">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> class and, starting with the <ph id="ph3">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, it supports UTF-16 encoding with the <ph id="ph4">&lt;see cref="T:System.Text.UnicodeEncoding" /&gt;</ph> class.</source>
          <target state="translated">유니코드 인코딩 중는 <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> 클래스 utf-8 인코딩을 지원는 <ph id="ph2">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> 클래스와부터 <ph id="ph3">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, u t F-16으로 인코딩을 지원는 <ph id="ph4">&lt;see cref="T:System.Text.UnicodeEncoding" /&gt;</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>UTF-32 encoding with the <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> class is not supported.</source>
          <target state="translated">U t F-32에 인코딩을 <ph id="ph1">&lt;see cref="T:System.Text.UTF32Encoding" /&gt;</ph> 클래스가 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Attempting to set the output encoding to UTF-32 throws an <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph>.</source>
          <target state="translated">U t F-32 throw 출력 인코딩을 설정 하려고 한 <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>Note that successfully displaying Unicode characters to the console requires the following:</source>
          <target state="translated">참고는 성공적으로 콘솔에 유니코드 문자를 표시 하려면 다음이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The console must use a TrueType font, such as Lucida Console or Consolas, to display characters.</source>
          <target state="translated">문자를 표시 하는 콘솔 Lucida Console 또는 Consolas, 같은 트루타입 글꼴이 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>A font used by the console must define the particular glyph or glyphs to be displayed.</source>
          <target state="translated">콘솔에서 사용 되는 글꼴 특정 문자 모양 또는 표시할 문자 모양 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>The console can take advantage of font linking to display glyphs from linked fonts if the base font does not contain a definition for that glyph.</source>
          <target state="translated">콘솔 글꼴 기본 글꼴 해당 문자에 대 한 정의가 포함 되어 있지 않으면 연결 된 글꼴의 문자 모양을 표시 하려면 연결의 장점은 걸릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.OutputEncoding">
          <source>For more information about support for Unicode encoding by the console, see the "Unicode Support for the Console" section in the <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> class.</source>
          <target state="translated">유니코드에 대 한 지원에 대 한 자세한 내용은 "유니코드 지원에 대 한 the 콘솔" 섹션을 참조 콘솔에 인코딩는 <ph id="ph1">&lt;see cref="T:System.Console" /&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Console.Read">
          <source>Reads the next character from the standard input stream.</source>
          <target state="translated">표준 입력 스트림에서 다음 문자를 읽습니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Console.Read">
          <source>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</source>
          <target state="translated">입력 스트림의 다음 문자를 반환하거나 현재 읽을 문자가 더 이상 없으면 -1을 반환합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>The <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> method blocks its return while you type input characters; it terminates when you press the <ph id="ph2">&lt;xref:System.ConsoleKey.Enter&gt;</ph> key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> 메서드는 입력된 문자를 입력 하는 동안 반환 차단; 키를 누르면를 종료 하는 <ph id="ph2">&lt;xref:System.ConsoleKey.Enter&gt;</ph> 키입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Pressing Enter appends a platform-dependent line termination sequence to your input (for example, Windows appends a carriage return-linefeed sequence).</source>
          <target state="translated">플랫폼 종속 줄 종료 시퀀스를 입력 추가 Enter 키를 누르면 (예: Windows 캐리지 리턴-줄 바꿈 시퀀스 추가).</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Subsequent calls to the <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> method retrieve your input one character at a time.</source>
          <target state="translated">에 대 한 후속 호출에서 <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> 메서드는 한 번에 사용자 입력된 한 문자를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>After the final character is retrieved, <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> blocks its return again and the cycle repeats.</source>
          <target state="translated">마지막 문자를 검색 한 후 <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> 반환 차단 다시 고 주기가 반복 합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method, or the <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property and <ph id="ph3">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method are preferable to using the <ph id="ph4">&lt;xref:System.Console.Read%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 메서드, 또는 <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드는을 사용 하는 것이 좋습니다는 <ph id="ph4">&lt;xref:System.Console.Read%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Note that the method does not return -1 unless you perform one of the following actions:</source>
          <target state="translated">Note 메서드는 다음 작업 중 하나를 수행 하지 않으면-1 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Simultaneously press the <ph id="ph1">&lt;xref:System.ConsoleModifiers.Control&gt;</ph> modifier key and <ph id="ph2">&lt;xref:System.ConsoleKey.Z&gt;</ph> console key (Ctrl+Z), which signals the end-of-file condition.</source>
          <target state="translated">동시에 누르면는 <ph id="ph1">&lt;xref:System.ConsoleModifiers.Control&gt;</ph> 보조키 및 <ph id="ph2">&lt;xref:System.ConsoleKey.Z&gt;</ph> 콘솔 키 (Ctrl + Z), 파일 끝 조건을 신호를 보냅니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Press an equivalent key that signals the end-of-file condition, such as the F6 function key in Windows.</source>
          <target state="translated">Windows에서 기능 F6 키 같은 파일 끝 조건을 신호를 보내는 동일한 키를 누릅니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>Redirect the input stream to a source, such as a text file, that has an actual end-of-file character.</source>
          <target state="translated">예: 실제 파일의 끝 문자를 텍스트 파일을 소스에 입력된 스트림을 리디렉션하려 합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Read">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Console.Read%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Console.Read">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">다음 문자나 사용자가 누른 기능 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">다음 문자나 사용자가 누른 기능 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>The pressed key is displayed in the console window.</source>
          <target state="translated">누른 키는 콘솔 창에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>An object that describes the <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph> constant and Unicode character, if any, that correspond to the pressed console key.</source>
          <target state="translated">누른 콘솔 키에 해당하는 <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph> 상수 및 유니코드 문자(있을 경우)를 설명하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph> object also describes, in a bitwise combination of <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph> 개체는 하나 이상의 Shift, Alt 또는 Ctrl 보조키를 콘솔 키와 동시에 눌렀는지 여부를 나타내는 <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph> 값을 비트 조합으로 나타냅니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method waits, that is, blocks on the thread issuing the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method, until a character or function key is pressed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드 대기, 즉, 블록을 발급 하는 스레드는 <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 문자나 함수 키를 누를 때까지 메서드.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</source>
          <target state="translated">하나 이상의 Alt, Ctrl 또는 shift 키 한정자 키와 함께 조합 하 여 문자 또는 함수 키를 누를 수 수 있습니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>However, pressing a modifier key by itself will not cause the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method to return.</source>
          <target state="translated">그러나 단독으로 보조 키를 누르면 발생 하지 것입니다는 <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>Depending on your application, you might want to use the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method in conjunction with the <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property.</source>
          <target state="translated">응용 프로그램에 따라 사용 하려는 <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드와 함께 <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method reads from the keyboard even if the standard input is redirected to a file with the <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 표준 입력이 사용 하 여 파일 리디렉션되는 경우에 키보드에서 읽고 메서드는 <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>One of the most common uses of the <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</source>
          <target state="translated">가장 일반적인 중 하나가 사용 하는 <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> 방법은 키를 누르면와 응용 프로그램을 종료 하거나 정보의 추가 창만 표시 될 때까지 프로그램 실행을 중단 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The following example uses the  <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> method to wait for the user to press the Enter key before terminating the app.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> 메서드를 응용 프로그램을 종료 하기 전에 Enter 키를 눌러 사용자에 대해 기다려야 합니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>Note that this overload of the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method by default echoes any displayable keys that the user presses to the console.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 기본적으로 메서드 누르면 콘솔에 표시할 수 있는 모든 키를 보냅니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>To suppress them, call the  <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method with an <ph id="ph2">`intercept`</ph> argument of <ph id="ph3">`true`</ph>.</source>
          <target state="translated">호출을 표시 하지 않으려면는 <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드는 <ph id="ph2">`intercept`</ph> 의 인수 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> method to display information about which key the user pressed..</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.ReadKey&gt;</ph> 사용자가 누른 키에 대 한 정보를 표시 하는 메서드.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey">
          <source>The <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> property is redirected from some stream other than the console.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> 속성이 콘솔 이외의 다른 스트림에서 리디렉션됩니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Determines whether to display the pressed key in the console window.</source>
          <target state="translated">누른 키를 콘솔 창에 표시할지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to not display the pressed key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">누른 키를 표시하지 않으려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 표시하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Obtains the next character or function key pressed by the user.</source>
          <target state="translated">다음 문자나 사용자가 누른 기능 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The pressed key is optionally displayed in the console window.</source>
          <target state="translated">누른 키는 선택적으로 콘솔 창에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>An object that describes the <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph> constant and Unicode character, if any, that correspond to the pressed console key.</source>
          <target state="translated">누른 콘솔 키에 해당하는 <ph id="ph1">&lt;see cref="T:System.ConsoleKey" /&gt;</ph> 상수 및 유니코드 문자(있을 경우)를 설명하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph> object also describes, in a bitwise combination of <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ConsoleKeyInfo" /&gt;</ph> 개체는 하나 이상의 Shift, Alt 또는 Ctrl 보조키를 콘솔 키와 동시에 눌렀는지 여부를 나타내는 <ph id="ph2">&lt;see cref="T:System.ConsoleModifiers" /&gt;</ph> 값을 비트 조합으로 나타냅니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method waits, that is, blocks on the thread issuing the <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method, until a character or function key is pressed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드 대기, 즉, 블록을 발급 하는 스레드는 <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 문자나 함수 키를 누를 때까지 메서드.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</source>
          <target state="translated">하나 이상의 Alt, Ctrl 또는 shift 키 한정자 키와 함께 조합 하 여 문자 또는 함수 키를 누를 수 수 있습니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>However, pressing a modifier key by itself will not cause the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method to return.</source>
          <target state="translated">그러나 단독으로 보조 키를 누르면 발생 하지 것입니다는 <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>If the <ph id="ph1">`intercept`</ph> parameter is <ph id="ph2">`true`</ph>, the pressed key is intercepted and not displayed in the console window; otherwise, the pressed key is displayed.</source>
          <target state="translated">경우는 <ph id="ph1">`intercept`</ph> 매개 변수는 <ph id="ph2">`true`</ph>, 누른된 키를 가로채 고 하지 콘솔 창에 표시 되 고, 그렇지 않으면, 누른된 키가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Depending on your application, you might want to use the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method in conjunction with the <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property.</source>
          <target state="translated">응용 프로그램에 따라 사용 하려는 <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드와 함께 <ph id="ph2">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method reads from the keyboard even if the standard input is redirected to a file with the <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 표준 입력이 사용 하 여 파일 리디렉션되는 경우에 키보드에서 읽고 메서드는 <ph id="ph2">&lt;xref:System.Console.SetIn%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>One of the most common uses of the <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</source>
          <target state="translated">가장 일반적인 중 하나가 사용 하는 <ph id="ph1">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 방법은 키를 누르면와 응용 프로그램을 종료 하거나 정보의 추가 창만 표시 될 때까지 프로그램 실행을 중단 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The following example uses the  <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> method to wait for the user to press the Enter key before terminating the app.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> 메서드를 응용 프로그램을 종료 하기 전에 Enter 키를 눌러 사용자에 대해 기다려야 합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>Note that, if the user presses any other key, it is not echoed to the console.</source>
          <target state="translated">즉, 사용자가 다른 키를 누르면 것 하지에 에코할 콘솔 note 합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> method to display information about the key pressed by a user without echoing that key to the console.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.ReadKey%28System.Boolean%29&gt;</ph> 메서드를 콘솔에 해당 키를 에코 하지 않고 사용자가 누른 키에 대 한 정보를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Console.ReadKey(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> property is redirected from some stream other than the console.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> 속성이 콘솔 이외의 다른 스트림에서 리디렉션됩니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>Reads the next line of characters from the standard input stream.</source>
          <target state="translated">표준 입력 스트림에서 다음 줄의 문자를 읽습니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>The next line of characters from the input stream, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no more lines are available.</source>
          <target state="translated">입력 스트림의 다음 줄 문자를 반환하거나 사용할 수 있는 줄이 더 이상 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method reads a line from the standard input stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 메서드는 표준 입력 스트림에서 한 줄을 읽습니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>(For the definition of a line, see the paragraph after the following list.) This means that:</source>
          <target state="translated">(줄의 정의 대 한 참조는 단락 다음 목록 뒤). 이는 다음을 의미합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If the standard input device is the keyboard, the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method blocks until the user presses the <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept> key.</source>
          <target state="translated">장치가 있는 경우 표준 입력 키보드는 <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 사용자가 될 때까지 차단 메서드는 <bpt id="p1">**</bpt>Enter<ept id="p1">**</ept> 키입니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>One of the most common uses of the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method is to pause program execution before clearing the console and displaying new information to it, or to prompt the user to press the Enter key before terminating the application.</source>
          <target state="translated">가장 일반적인 중 하나가 사용 하는 <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 방법은 응용 프로그램을 종료 하기 전에 Enter 키를 누릅니다 하 라는 메시지를 확인 하거나 콘솔을 지우는 것이 고, 새 정보를 표시 하기 전에 프로그램 실행을 일시 중지 합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example illustrates this.</source>
          <target state="translated">다음은 이에 대한 예입니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If standard input is redirected to a file, the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method reads a line of text from a file.</source>
          <target state="translated">표준 입력을 파일로 리디렉션되는 경우는 <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 메서드는 파일에서 텍스트 줄을 읽습니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>For example, the following is a text file named ReadLine1.txt:</source>
          <target state="translated">예를 들어 다음은 ReadLine1.txt 라는 텍스트 파일입니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method to read input that is redirected from a file.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 메서드는 파일에서 리디렉션된 입력을 읽습니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The read operation terminates when the  method returns <ph id="ph1">`null`</ph>, which indicates that no lines remain to be read.</source>
          <target state="translated">메서드가 반환 될 때 읽기 작업 종료 <ph id="ph1">`null`</ph>, 읽을 줄이 더 남아 있는지 나타냅니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>After compiling the example to an executable named ReadLine1.exe, you can run it from the command line with the syntax</source>
          <target state="translated">이 예제는 실행 가능한 명명 된 ReadLine1.exe 컴파일 후 실행할 수 있습니다 구문 사용 하 여 명령줄에서</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>to read the contents of the file and display them to the console.</source>
          <target state="translated">파일의 내용을 읽고 콘솔에 표시 합니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>A line is defined as a sequence of characters followed by a carriage return (hexadecimal 0x000d), a line feed (hexadecimal 0x000a), or the value of the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">줄은 문자 뒤에 캐리지 리턴 (16 진수 0x000d), 줄 바꿈 (16 진수 0x000a) 또는 값의 시퀀스로 정의 됩니다는 <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The returned string does not contain the terminating character(s).</source>
          <target state="translated">반환 된 문자열에는 종결 문자가 없습니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>By default, the method reads input from a 256-character input buffer.</source>
          <target state="translated">기본적으로 메서드는 256 자 입력된 버퍼에서 입력을 읽습니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>Because this includes the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> character(s), the method can read lines that contain up to 254 characters.</source>
          <target state="translated">이 포함 되어 있으므로 <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> 는 문자, 메서드가 최대 254 자의 문자를 포함 하는 줄을 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>To read longer lines, call the <ph id="ph1">&lt;xref:System.Console.OpenStandardInput%28System.Int32%29&gt;</ph> method.</source>
          <target state="translated">긴 줄 읽기, 호출 된 <ph id="ph1">&lt;xref:System.Console.OpenStandardInput%28System.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method executes synchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 메서드가 동기적으로 실행 합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>That is, it blocks until a line is read or the Ctrl+Z keyboard combination is pressed.</source>
          <target state="translated">즉, 한 줄을 읽었을 또는 Ctrl + Z 키를 누를 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> object that represents the standard input stream and that has both a synchronous <ph id="ph3">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method and an asynchronous <ph id="ph4">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> 표준 입력된 스트림을 나타내는 했으며 동기는 개체 <ph id="ph3">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> 메서드와 비동기 <ph id="ph4">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>However, when used as the console's standard input stream, the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> executes synchronously rather than asynchronously and returns a <ph id="ph2">`Task&lt;String&gt;`</ph> only after the read operation has completed.</source>
          <target state="translated">그러나 콘솔의 표준 입력된 스트림을으로 사용 되는 <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> 동기적으로 처리 하지 않고 비동기적으로 실행 하 고 반환 된 <ph id="ph2">`Task&lt;String&gt;`</ph> 읽기 작업이 완료 된 후에 합니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If this method throws an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, the reader's position in the underlying <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <ph id="ph3">&lt;xref:System.Console.ReadLine%2A&gt;</ph> buffer are discarded.</source>
          <target state="translated">이 메서드에서 throw 하는 경우는 <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> 예외, 판독기의 위치는 기본 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 개체는 문자를 읽으려면 메서드에서 못한 하지만 내부에 이미 읽은 문자 수 만큼 앞 <ph id="ph3">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 버퍼는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>Since the position of the reader in the stream cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">이미 읽은 복구할 및 다시 초기화 하 여만 액세스할 수 스트림의 판독기의 위치는 변경할 수는 <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If the initial position within the stream is unknown or the stream does not support seeking, the underlying <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> also needs to be reinitialized.</source>
          <target state="translated">스트림 내에서 처음 위치를 알 수 없습니다. 또는 스트림이 검색을 내부을 지원 하지 않는 경우 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 도 다시 초기화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>To avoid such a situation and to produce robust code, you should use the <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> property and <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> method and store the read characters in a pre-allocated buffer.</source>
          <target state="translated">사용 해야 이러한 상황을 방지 하려면 하 고 강력한 코드를 생성 하는 <ph id="ph1">&lt;xref:System.Console.KeyAvailable%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 읽기 미리 할당 된 버퍼에서 문자를 메서드와 저장소입니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>If the Ctrl+Z character is pressed when the method is reading input from the console, the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">메서드가 반환 하는 경우 Ctrl + Z 문자를 누르면 메서드 호출이 콘솔에서 입력을 읽기 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>This enables the user to prevent further keyboard input when the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> method is called in a loop.</source>
          <target state="translated">때이 사용 하면 더 이상 키보드를 방지 하기 위해 사용자 입력의 <ph id="ph1">&lt;xref:System.Console.ReadLine%2A&gt;</ph> 루프에서 메서드 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example illustrates this scenario.</source>
          <target state="translated">다음 예제에서는이 시나리오를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to.</source>
          <target state="translated">다음 예제에서는 두 개의 명령줄 인수: 기존 텍스트 파일의 이름 및 출력을 쓸 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>It opens the existing text file and redirects the standard input from the keyboard to that file.</source>
          <target state="translated">기존 텍스트 파일이 열리고 해당 파일에는 키보드의 표준 입력을 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>It also redirects the standard output from the console to the output file.</source>
          <target state="translated">또한 출력 파일에 표준 콘솔 출력을 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ReadLine">
          <source>It then uses the <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method to write the result to the output file.</source>
          <target state="translated">다음 사용 하 여는 <ph id="ph1">&lt;xref:System.Console.ReadLine%2A?displayProperty=nameWithType&gt;</ph> 메서드는 파일의 각 줄 읽기를 탭 문자를 4 개의 공백이의 모든 시퀀스를 대체 하 고 사용 하 여는 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 메서드 결과 출력 파일에 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>There is insufficient memory to allocate a buffer for the returned string.</source>
          <target state="translated">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Console.ReadLine">
          <source>The number of characters in the next line of characters is greater than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">다음 줄의 문자 수가 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Console.ResetColor">
          <source>Sets the foreground and background console colors to their defaults.</source>
          <target state="translated">콘솔의 전경색과 배경색을 해당 기본값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>The foreground and background colors are restored to the colors that existed when the current process began.</source>
          <target state="translated">전경색과 배경색은 현재 프로세스가 시작 된 시점의 색에 복원 됩니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> properties.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>The following example saves the values of the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration to an array and stores the current values of the <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> properties to variables.</source>
          <target state="translated">값을 저장 하는 다음 예제는 <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> 배열에는 열거형의 현재 값을 저장 하 고는 <ph id="ph2">&lt;xref:System.Console.BackgroundColor%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Console.ForegroundColor%2A&gt;</ph> 변수에 속성입니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>It then changes the foreground color to each color in the <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current background, and it changes the background color to each color in the <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> enumeration except to the color that matches the current foreground.</source>
          <target state="translated">각 색에 전경색을 다음 변경는 <ph id="ph1">&lt;xref:System.ConsoleColor&gt;</ph> 현재 배경 일치 하는 색를 제외한 각 색에 배경색을 변경 하는 열거형은 <ph id="ph2">&lt;xref:System.ConsoleColor&gt;</ph> 열거형을 제외 하 고 일치 하는 색을는 현재 전경입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> method to restore the original console colors.</source>
          <target state="translated">(전경색 배경색으로 동일한 경우 텍스트가 표시 되지 않습니다.) 마지막으로 호출 하는 <ph id="ph1">&lt;xref:System.Console.ResetColor%2A&gt;</ph> 원래 콘솔 색을 복원 하려면 메서드.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Console.ResetColor">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Console.ResetColor">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.ResetColor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The width of the buffer area measured in columns.</source>
          <target state="translated">측정된 버퍼 영역의 너비(열)입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The height of the buffer area measured in rows.</source>
          <target state="translated">측정된 버퍼 영역의 높이(행)입니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>Sets the height and width of the screen buffer area to the specified values.</source>
          <target state="translated">화면 버퍼의 높이와 너비를 지정한 값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> properties; and the <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> ; 속성 및 <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, 및 <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The example draws a grid pattern in the screen buffer based on the screen buffer width.</source>
          <target state="translated">이 예제에서는 화면 버퍼 너비에 따라 화면 버퍼에서을 표 패턴을 그립니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</source>
          <target state="translated">다음 예제에서는 콘솔 창 아래쪽 화살표, 왼쪽 화살표 또는 오른쪽 화살표 콘솔 키를 누르면 위쪽 화살표 중 어느 것을 대 한 응답으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The grid pattern helps you see the movement of the console window relative to the screen buffer.</source>
          <target state="translated">Grid 패턴을 사용 하면 화면 버퍼에 상대적인 콘솔 창의 이동 상태를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> or <ph id="ph2">&lt;paramref name="width" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="width" /&gt;</ph>가 0보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> or <ph id="ph2">&lt;paramref name="width" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="width" /&gt;</ph>가 <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetBufferSize(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The column position of the cursor.</source>
          <target state="translated">커서의 열 위치입니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Columns are numbered from left to right starting at 0.</source>
          <target state="translated">열은 0부터 시작하여 왼쪽부터 오른쪽까지 번호가 지정됩니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The row position of the cursor.</source>
          <target state="translated">커서의 행 위치입니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Rows are numbered from top to bottom starting at 0.</source>
          <target state="translated">행은 0부터 시작하여 위에서 아래로 번호가 지정됩니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Sets the position of the cursor.</source>
          <target state="translated">커서의 위치를 설정합니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> method to specify where the next write operation in the console window is to begin.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> 메서드를 콘솔 창에 다음 쓰기 작업을 시작할 위치를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>If the specified cursor position is outside the area that is currently visible in the console window, the window origin changes automatically to make the cursor visible.</source>
          <target state="translated">지정한 커서 위치가 콘솔 창에 현재 표시 되는 영역 밖에 있으면 창 원점이 커서를 볼 수 있도록 자동으로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The cursor automatically moves to the next character position each time a character is written to the console window.</source>
          <target state="translated">커서를 콘솔 창에 문자를 쓸 때마다 다음 문자 위치로 자동으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>If the cursor is at the bottom right character position of the console window, the next write operation causes the console window to scroll so the cursor remains visible.</source>
          <target state="translated">커서가 콘솔 창의 맨 아래 오른쪽 문자 위치에 있는 경우 다음 쓰기 작업을 수행 하면 커서가 표시 되 게 스크롤해야 콘솔 창</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>If you want to write a character to the bottom right character position without causing the console window to scroll, use the <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> method to move a character to that position.</source>
          <target state="translated">콘솔 창을 스크롤할 사용 하지 않고 아래 오른쪽 문자 위치에 문자를 작성 하려면는 <ph id="ph1">&lt;xref:System.Console.MoveBufferArea%2A&gt;</ph> 메서드를 한 문자를 해당 위치로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> properties, and the <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> methods.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.CursorTop%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Console.SetCursorPosition%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Console.Clear%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&amp;#124;", and "-" strings.</source>
          <target state="translated">이 예제에서는 5 문자를 조합 하 여 5 문자 사각형에 의해 그리려면 다음 쓰기가 발생 하는 위치를 결정 하는 커서를 배치 "+", "&amp;#124;", 및 "-" 문자열입니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Note that the rectangle could be drawn with fewer steps using a combination of other strings.</source>
          <target state="translated">다른 문자열의 조합을 사용 하 여 더 적은 단계로 사용 하 여 사각형을 그릴 수 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="top" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="top" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="top" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="top" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetCursorPosition(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>A stream that is the new standard error output.</source>
          <target state="translated">새 표준 오류 출력을 나타내는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Console.Error" /&gt;</ph> property to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.Error" /&gt;</ph> 속성을 지정한 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 개체로 설정합니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> property is set to the standard error output stream.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Console.Error%2A&gt;</ph> 속성을 표준 오류 출력 스트림을로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> that encapsulates a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> can be used to send error messages to a file.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> 캡슐화 하는 <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> 파일에 오류 메시지를 보내는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>The following example shows how to redirect the standard error stream to a file.</source>
          <target state="translated">다음 예제에서는 파일에 표준 오류 스트림을 리디렉션하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="newError" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newError" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetError(System.IO.TextWriter)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>A stream that is the new standard input.</source>
          <target state="translated">새 표준 입력을 나타내는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> property to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.In" /&gt;</ph> 속성을 지정한 <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체로 설정합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> property is set to the standard input stream.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Console.In%2A&gt;</ph> 속성을 표준 입력된 스트림을로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> that encapsulates a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> can be used to receive input from a file.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> 캡슐화 하는 <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> 파일에서 입력을 받는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.SetIn%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>To run it, you must supply two command line arguments.</source>
          <target state="translated">를 실행 하려면 두 명령줄 인수를 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>This file need not exist.</source>
          <target state="translated">이 파일이 있을 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">그러한 경우 해당 내용은 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source><ph id="ph1">&lt;paramref name="newIn" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newIn" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetIn(System.IO.TextReader)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>A stream that is the new standard output.</source>
          <target state="translated">새 표준 출력을 나타내는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Console.Out" /&gt;</ph> property to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.Out" /&gt;</ph> 속성을 지정한 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 개체로 설정합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> property is set to the standard output stream.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Console.Out%2A&gt;</ph> 속성을 표준 출력 스트림에로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> that encapsulates a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> can be used to send output to a file.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> 캡슐화 하는 <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> 파일에 출력을 보내는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.SetOut%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>It replaces four consecutive space characters in a string with a tab character.</source>
          <target state="translated">탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>To run it, you must supply two command line arguments.</source>
          <target state="translated">를 실행 하려면 두 명령줄 인수를 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The first is the name of an existing text file to redirect the standard input stream to.</source>
          <target state="translated">첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The second is the name of a file to redirect the standard output stream to.</source>
          <target state="translated">두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>This file need not exist.</source>
          <target state="translated">이 파일이 있을 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>If it does, its contents will be overwritten.</source>
          <target state="translated">그러한 경우 해당 내용은 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="newOut" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newOut" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetOut(System.IO.TextWriter)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The column position of the upper left  corner of the console window.</source>
          <target state="translated">콘솔 창에서 왼쪽 위 모퉁이의 열 위치입니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The row position of the upper left corner of the console window.</source>
          <target state="translated">콘솔 창에서 왼쪽 위 모퉁이의 행 위치입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>Sets the position of the console window relative to the screen buffer.</source>
          <target state="translated">화면 버퍼에 상대적인 콘솔 창의 위치를 설정합니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The operating system window displays the console window, and the console window displays a portion of the screen buffer.</source>
          <target state="translated">운영 체제 창 콘솔 창에 표시 하 고 콘솔 창 화면 버퍼의 일부를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> method affects the position of the console window relative to the screen buffer, but does not affect the position of the operating system window relative to the desktop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> 메서드 화면 버퍼에 상대적인 콘솔 창의 위치에 영향을 하지만 운영 체제 창의 데스크톱에 상대적인 위치에 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The console and operating system windows generally do not affect each other.</source>
          <target state="translated">콘솔 및 운영 체제 windows 일반적으로 영향을 주지 않습니다 서로 합니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>However, if the screen buffer cannot be displayed in the current boundaries of the console window, the operating system automatically appends scroll bars to the operating system window.</source>
          <target state="translated">그러나 콘솔 창의 현재 경계에 화면 버퍼를 표시할 수 없으면, 운영 체제 스크롤 막대 운영 체제 창에 자동으로 추가 합니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>In that case, moving the operating system window scroll bars affects the position of the console window, and moving the console window with the <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> method affects the position of the operating system window scroll bars.</source>
          <target state="translated">이 경우 운영 체제 창 스크롤 막대 콘솔 창의 위치에 영향을 이동 하 고 사용 하 여 콘솔 창 이동는 <ph id="ph1">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph> 메서드 운영 체제 창 스크롤 막대의 위치에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> properties; and the <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> ; 속성 및 <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, 및 <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The example draws a grid pattern in the screen buffer based on the screen buffer width.</source>
          <target state="translated">이 예제에서는 화면 버퍼 너비에 따라 화면 버퍼에서을 표 패턴을 그립니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</source>
          <target state="translated">다음 예제에서는 콘솔 창 아래쪽 화살표, 왼쪽 화살표 또는 오른쪽 화살표 콘솔 키를 누르면 위쪽 화살표 중 어느 것을 대 한 응답으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The grid pattern helps you see the movement of the console window relative to the screen buffer.</source>
          <target state="translated">Grid 패턴을 사용 하면 화면 버퍼에 상대적인 콘솔 창의 이동 상태를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="top" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="top" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> is greater than <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>가 <ph id="ph4">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="top" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> is greater than <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="top" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>가 <ph id="ph4">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowPosition(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The width of the console window measured in columns.</source>
          <target state="translated">콘솔 창의 너비(열)입니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The height of the console window measured in rows.</source>
          <target state="translated">콘솔 창의 높이(행)입니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>Sets the height and width of the console window to the specified values.</source>
          <target state="translated">콘솔 창의 높이와 너비를 지정한 값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method, and the <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> properties.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> 메서드, 및 <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>You must run the example to see the full effect of changing the console window size.</source>
          <target state="translated">콘솔 창 크기를 변경 합니다. 전체 결과 보려면이 예제를 실행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed.</source>
          <target state="translated">이 예제에서는 85 열과 43 행으로 설정 하는 콘솔 창의 크기를 보고 키를 누를 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</source>
          <target state="translated">아무 키나 누르면 콘솔 창의 크기는 반 축소, 새 차원을 보고 및 예제에서는 다른 키 누름을 기다립니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.</source>
          <target state="translated">마지막으로, 모든 키를 누를 때 콘솔 창 원래 크기로 복원 되 고이 예제에서는 종료 합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> or <ph id="ph2">&lt;paramref name="height" /&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="height" /&gt;</ph>가 0보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> or <ph id="ph3">&lt;paramref name="height" /&gt;</ph> plus <ph id="ph4">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> is greater than or equal to <ph id="ph5">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> + <ph id="ph2">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="height" /&gt;</ph> + <ph id="ph4">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph>이 <ph id="ph5">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> or <ph id="ph2">&lt;paramref name="height" /&gt;</ph> is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="height" /&gt;</ph>가 최대 창 너비 또는 현재 화면 해상도 및 콘솔 글꼴의 높이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>The user does not have permission to perform this action.</source>
          <target state="translated">사용자에게 이 작업을 수행할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.SetWindowSize(System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>Gets or sets the title to display in the console title bar.</source>
          <target state="translated">콘솔 제목 표시줄에 표시할 제목을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>The string to be displayed in the title bar of the console.</source>
          <target state="translated">콘솔의 제목 표시줄에 표시될 문자열입니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>The maximum length of the title string is 24500 characters.</source>
          <target state="translated">최대 제목 문자열 길이는 24500자입니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.Title%2A&gt;</ph> property.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.Title%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>The example displays the current title of the operating system window, waits for a key press, then displays a new title.</source>
          <target state="translated">이 예제에서는 운영 체제 창의 현재 제목을 표시 하 고 키 누름을 기다린 다음 새 제목을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>In a get operation, the retrieved title is longer than 24500 characters.</source>
          <target state="translated">가져오기 작업에서 검색된 제목이 24500자 보다 깁니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>In a set operation, the specified title is longer than 24500 characters.</source>
          <target state="translated">설정 작업에서 검색된 제목이 24500자 보다 깁니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>In a set operation, the specified title is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">설정 작업에서 지정된 제목이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="P:System.Console.Title">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.Title">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="P:System.Console.TreatControlCAsInput">
          <source>Gets or sets a value indicating whether the combination of the <ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph> modifier key and <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph> console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.ConsoleModifiers.Control" /&gt;</ph> 보조키와 <ph id="ph2">&lt;see cref="F:System.ConsoleKey.C" /&gt;</ph> 콘솔 키의 조합(Ctrl+C)이 일반 입력으로 처리되는지 운영 체제에서 처리하는 충돌로 처리되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if Ctrl+C is treated as ordinary input; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Ctrl+C가 일반 입력으로 처리되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 처리되지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> property is <ph id="ph2">`false`</ph> and Ctrl+C is pressed, the pressed keys are not stored in the input buffer and the operating system terminates the currently executing process.</source>
          <target state="translated">하는 경우의 값은 <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph> 및 Ctrl + C를 누르면, 누른된 키 입력된 버퍼에 저장 되지 않은 및 운영 체제에서 현재 실행 중인 프로세스를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>This is the default value.</source>
          <target state="translated">기본값입니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>Use this property judiciously because setting it to <ph id="ph1">`true`</ph> has such a dramatic effect.</source>
          <target state="translated">속성을 설정 하기 때문에이 속성을 주의 해 서 사용 <ph id="ph1">`true`</ph> 는 큰 영향을 주므로 합니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>Most users expect Ctrl+C to terminate a console application.</source>
          <target state="translated">일반적으로 Ctrl + C는 콘솔 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>If you disable the effect of Ctrl+C, the user must remember to use Ctrl+Break to terminate the application, which is a less familiar key combination.</source>
          <target state="translated">Ctrl + C의 효과 비활성화 하면 사용자 덜 친숙 한 키 결합 된 응용 프로그램을 종료 하려면 Ctrl + Break를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Console.TreatControlCAsInput%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="P:System.Console.TreatControlCAsInput">
          <source>Unable to get or set the input mode of the console input buffer.</source>
          <target state="translated">콘솔 입력 버퍼의 입력 모드를 가져오거나 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.TreatControlCAsInput">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>Gets or sets the height of the console window area.</source>
          <target state="translated">콘솔 창 영역의 높이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>The height of the console window measured in rows.</source>
          <target state="translated">콘솔 창의 높이(행)입니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> property when output is redirected throws either an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> or an <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">값을 설정 하는 <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> 출력이 리디렉션된 경우이 속성 중 하나를 throw 한 <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>To prevent an exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">예외를 방지 하려면 경우에만이 속성의 값을 설정할 수는 <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method, and the <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> properties.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> 메서드, 및 <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>You must run the example to see the full effect of changing the console window size.</source>
          <target state="translated">콘솔 창 크기를 변경 합니다. 전체 결과 보려면이 예제를 실행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</source>
          <target state="translated">이 예제에서는 85 열과 43 행으로 설정 하는 콘솔 창의 크기를 보고 키 입력 될 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</source>
          <target state="translated">아무 키나 누르면 콘솔 창의 크기는 반 축소, 새 차원을 보고 및 예제에서는 다른 키 누름을 기다립니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowHeight">
          <source>Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</source>
          <target state="translated">마지막으로, 모든 키를 누를 때 콘솔 창 원래 크기로 복원 되 고이 예제에서는 종료 합니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> 속성 값 또는 <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> 속성 값이 0보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property plus the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> property is greater than or equal to <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> 속성 값과 <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> 속성 값의 합이 <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> 속성 값 또는 <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> 속성 값이 현재 화면 해상도 및 콘솔 글꼴에 가장 클 수 있는 창의 너비 또는 높이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="P:System.Console.WindowHeight">
          <source>Error reading or writing information.</source>
          <target state="translated">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>Gets or sets the leftmost position of the console window area relative to the screen buffer.</source>
          <target state="translated">화면 버퍼에 상대적인 콘솔 창 영역의 맨 왼쪽 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The leftmost console window position measured in columns.</source>
          <target state="translated">맨 왼쪽 콘솔 창 위치(열)입니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The console represents a rectangular window into a larger rectangular buffer area.</source>
          <target state="translated">콘솔에 더 큰 버퍼 사각형 영역 직사각형 창은 나타냅니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</source>
          <target state="translated">행의 수 및 열 번호로 가로 창과 버퍼 세로 방향으로 측정 됩니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The dimensions of the buffer area are defined by the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">버퍼 영역의 차원이에 의해 정의 되는 <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The dimensions of the console area are defined by the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties.</source>
          <target state="translated">콘솔 영역의 차원이에 의해 정의 되는 <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property determines which column of the buffer area is displayed in the first column of the console window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 속성 결정 버퍼의 열에서 첫 번째 열의 콘솔 창에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property can range from 0 to <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph><ph id="ph3"> - </ph><ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 속성 범위는 0에서 <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> <ph id="ph3"> - </ph> <ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Attempting to set it to a value outside that range throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">Throw 범위를 벗어난 값으로 설정 하려고 한 <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>When a console window first opens, the default value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property is zero, which indicates that the first column shown by the console corresponds to the first column (the column at position zero) in the buffer area.</source>
          <target state="translated">경우 콘솔 창을 처음 열면의 기본값은 <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 속성은 0 이며이 콘솔에 표시 된 첫 번째 열 버퍼 영역의 첫 번째 열 (위치 0에 열)에 해당 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The default width of both the console window and the buffer area is 80 columns.</source>
          <target state="translated">콘솔 창과 버퍼 영역이 모두의 기본 너비는 80 열입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>This means that the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property can be modified only if the console window is made narrower or the buffer area is made wider.</source>
          <target state="translated">즉는 <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 콘솔 창이 좁아 짐 더욱 또는 버퍼 영역이 더욱 광범위 한 경우에 속성을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Note that if the width of the buffer area exceeds the width of the console window, the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property is automatically adjusted when the user uses the horizontal scroll bar to define the window's relationship to the buffer area.</source>
          <target state="translated">버퍼 영역의 너비 값 콘솔 창의 너비를 초과 하는 경우는 <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 속성에는 사용자, 가로 스크롤 막대를 사용 하 여 버퍼 영역으로 창의 관계를 정의 하는 경우 자동으로 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property when output is redirected throws an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">값을 설정 하는 <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 경우 출력은이 속성에 throw 리디렉션되는 <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>To prevent the exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">예외를 방지 하려면 경우에만이 속성의 값을 설정할 수는 <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>The following example opens an 80-column console window and defines a buffer area that is 120 columns wide.</source>
          <target state="translated">다음 예제에서는 80 열 콘솔 창 열고 열을 120는 버퍼 영역을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key.</source>
          <target state="translated">창 및 버퍼 크기에 정보를 표시 하 고 키를 왼쪽 화살표 키 또는 오른쪽 화살표 키를 눌러 될 때까지 기다립니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>In the former case, it decrements the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property by one if the result is a legal value.</source>
          <target state="translated">옵션을 선택한 경우에 것 감소의 값은 <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 속성을 결과가 유효한 값 이면 1입니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>In the latter case, it increases the value of the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property by one if the result would be legal.</source>
          <target state="translated">후자의 경우 값을 증가 <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 속성을 결과 법적 되는 경우 1입니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowLeft">
          <source>Note that the example does not have to handle an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, because it checks that the value to be assigned to the <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> property is not negative and does not cause the sum of the <ph id="ph3">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties to exceed the <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> property value.</source>
          <target state="translated">이 예제에서는 처리할 필요가 없기를 <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>확인 하기 때문에에 할당할 값은 <ph id="ph2">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 속성이 음수 이므로의 합을 발생 하지 않습니다는 <ph id="ph3">&lt;xref:System.Console.WindowLeft%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> 를 초과 하는 속성은 <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>In a set operation, the value to be assigned is less than zero.</source>
          <target state="translated">집합 작업에서 할당할 값이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>As a result of the assignment, <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> would exceed <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>.</source>
          <target state="translated">할당 결과, <ph id="ph1">&lt;see cref="P:System.Console.WindowLeft" /&gt;</ph>과 <ph id="ph2">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph>의 합이 <ph id="ph3">&lt;see cref="P:System.Console.BufferWidth" /&gt;</ph>를 초과합니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="P:System.Console.WindowLeft">
          <source>Error reading or writing information.</source>
          <target state="translated">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>Gets or sets the top position of the console window area relative to the screen buffer.</source>
          <target state="translated">화면 버퍼에 상대적인 콘솔 창 영역의 위쪽 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The uppermost console window position measured in rows.</source>
          <target state="translated">맨 위 콘솔 창 위치(행)입니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The console represents a rectangular window into a larger rectangular buffer area.</source>
          <target state="translated">콘솔에 더 큰 버퍼 사각형 영역 직사각형 창은 나타냅니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</source>
          <target state="translated">행의 수 및 열 번호로 가로 창과 버퍼 세로 방향으로 측정 됩니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The dimensions of the buffer area are defined by the <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> properties.</source>
          <target state="translated">버퍼 영역의 차원이에 의해 정의 되는 <ph id="ph1">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.BufferWidth%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The dimensions of the console area are defined by the <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties.</source>
          <target state="translated">콘솔 영역의 차원이에 의해 정의 되는 <ph id="ph1">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> property determines which row of the buffer area is displayed in the first column of the console window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> 속성 결정 버퍼의 행에서 첫 번째 열의 콘솔 창에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The value of the <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> property can range from 0 to <ph id="ph2">&lt;xref:System.Console.BufferHeight%2A&gt;</ph><ph id="ph3"> - </ph><ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> 속성 범위는 0에서 <ph id="ph2">&lt;xref:System.Console.BufferHeight%2A&gt;</ph> <ph id="ph3"> - </ph> <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Attempting to set it to a value outside that range throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">Throw 범위를 벗어난 값으로 설정 하려고 한 <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> property when output is redirected throws an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">값을 설정 하는 <ph id="ph1">&lt;xref:System.Console.WindowTop%2A&gt;</ph> 경우 출력은이 속성에 throw 리디렉션되는 <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>To prevent the exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">예외를 방지 하려면 경우에만이 속성의 값을 설정할 수는 <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> properties; and the <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, and <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Console.WindowLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WindowTop%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Console.WindowWidth%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WindowHeight%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Console.BufferWidth%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Console.BufferHeight%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Console.CursorVisible%2A&gt;</ph> ; 속성 및 <ph id="ph8">&lt;xref:System.Console.SetWindowPosition%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Console.SetBufferSize%2A&gt;</ph>, 및 <ph id="ph10">&lt;xref:System.Console.ReadKey%2A&gt;</ph> 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The example draws a grid pattern in the screen buffer based on the screen buffer width.</source>
          <target state="translated">이 예제에서는 화면 버퍼 너비에 따라 화면 버퍼에서을 표 패턴을 그립니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</source>
          <target state="translated">다음 예제에서는 콘솔 창 아래쪽 화살표, 왼쪽 화살표 또는 오른쪽 화살표 콘솔 키를 누르면 위쪽 화살표 중 어느 것을 대 한 응답으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowTop">
          <source>The grid pattern helps you see the movement of the console window relative to the screen buffer.</source>
          <target state="translated">Grid 패턴을 사용 하면 화면 버퍼에 상대적인 콘솔 창의 이동 상태를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>In a set operation, the value to be assigned is less than zero.</source>
          <target state="translated">집합 작업에서 할당할 값이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>As a result of the assignment, <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> would exceed <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>.</source>
          <target state="translated">할당 결과, <ph id="ph1">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph>과 <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph>의 합이 <ph id="ph3">&lt;see cref="P:System.Console.BufferHeight" /&gt;</ph>를 초과합니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="P:System.Console.WindowTop">
          <source>Error reading or writing information.</source>
          <target state="translated">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>Gets or sets the width of the console window.</source>
          <target state="translated">콘솔 창의 컨트롤의 너비를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>The width of the console window measured in columns.</source>
          <target state="translated">콘솔 창의 너비(열)입니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>Attempting to set the value of the <ph id="ph1">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> property when output is redirected throws either an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> or an <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> exception.</source>
          <target state="translated">값을 설정 하는 <ph id="ph1">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> 출력이 리디렉션된 경우이 속성 중 하나를 throw 한 <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>To prevent an exception, you can set the value of this property only if the <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">예외를 방지 하려면 경우에만이 속성의 값을 설정할 수는 <ph id="ph1">&lt;xref:System.Console.IsOutputRedirected%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>This example demonstrates the <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> method, and the <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> properties.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Console.SetWindowSize%2A&gt;</ph> 메서드, 및 <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Console.WindowHeight%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>You must run the example to see the full effect of changing the console window size.</source>
          <target state="translated">콘솔 창 크기를 변경 합니다. 전체 결과 보려면이 예제를 실행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</source>
          <target state="translated">이 예제에서는 85 열과 43 행으로 설정 하는 콘솔 창의 크기를 보고 키 입력 될 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</source>
          <target state="translated">아무 키나 누르면 콘솔 창의 크기는 반 축소, 새 차원을 보고 및 예제에서는 다른 키 누름을 기다립니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Console.WindowWidth">
          <source>Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</source>
          <target state="translated">마지막으로, 모든 키를 누를 때 콘솔 창 원래 크기로 복원 되 고이 예제에서는 종료 합니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> 속성 값 또는 <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> 속성 값이 0보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property plus the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> property is greater than or equal to <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> 속성 값과 <ph id="ph2">&lt;see cref="P:System.Console.WindowTop" /&gt;</ph> 속성 값의 합이 <ph id="ph3">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> property or the value of the <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> property is greater than the largest possible window width or height for the current screen resolution and console font.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Console.WindowWidth" /&gt;</ph> 속성 값 또는 <ph id="ph2">&lt;see cref="P:System.Console.WindowHeight" /&gt;</ph> 속성 값이 현재 화면 해상도 및 콘솔 글꼴에 가장 클 수 있는 창의 너비 또는 높이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="P:System.Console.WindowWidth">
          <source>Error reading or writing information.</source>
          <target state="translated">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Writes the text representation of the specified value or values to the standard output stream.</source>
          <target state="translated">지정한 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Boolean)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Boolean)">
          <source>Writes the text representation of the specified Boolean value to the standard output stream.</source>
          <target state="translated">지정한 부울 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>, which outputs either <ph id="ph3">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>를 출력 하 <ph id="ph3">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Boolean)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char)">
          <source>Writes the specified Unicode character value to the standard output stream.</source>
          <target state="translated">지정한 유니코드 문자 값을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[])">
          <source>A Unicode character array.</source>
          <target state="translated">유니코드 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[])">
          <source>Writes the specified array of Unicode characters to the standard output stream.</source>
          <target state="translated">지정한 유니코드 문자의 배열을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[])">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Decimal)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Decimal)">
          <source>Writes the text representation of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to the standard output stream.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Decimal)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Decimal)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Double)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Double)">
          <source>Writes the text representation of the specified double-precision floating-point value to the standard output stream.</source>
          <target state="translated">지정한 배정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Double)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Double)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int32)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int32)">
          <source>Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</source>
          <target state="translated">지정한 부호 있는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int64)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int64)">
          <source>Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</source>
          <target state="translated">지정한 부호 있는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Int64)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Int64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Object)">
          <source>The value to write, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">쓸 값이거나 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Object)">
          <source>Writes the text representation of the specified object to the standard output stream.</source>
          <target state="translated">지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, nothing is written and no exception is thrown.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph>아무 것도 기록 하 고 예외가 throw 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>Otherwise, the <ph id="ph1">`ToString`</ph> method of <ph id="ph2">`value`</ph> is called to produce its string representation, and the resulting string is written to the standard output stream.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">`ToString`</ph> 방식의 <ph id="ph2">`value`</ph> 문자열 표현 호출 되어 결과 문자열을 표준 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Single)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Single)">
          <source>Writes the text representation of the specified single-precision floating-point value to the standard output stream.</source>
          <target state="translated">지정한 단정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Single)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Single)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String)">
          <source>Writes the specified string value to the standard output stream.</source>
          <target state="translated">지정한 문자열 값을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>If value is <ph id="ph1">`null`</ph>, nothing is written to the standard output stream.</source>
          <target state="translated">값이 <ph id="ph1">`null`</ph>를 표준 출력 스트림에 아무 것도 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt32)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt32)">
          <source>Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</source>
          <target state="translated">지정한 부호 없는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt64)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt64)">
          <source>Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</source>
          <target state="translated">지정한 부호 없는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.UInt64)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.UInt64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>An object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 개체입니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>Writes the text representation of the specified object to the standard output stream using the specified format information.</source>
          <target state="translated">지정한 형식 정보를 사용하여 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의.NET Framework를 개체의 값 텍스트 표현으로 변환한 다음 문자열에서 표현을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">결과 문자열은 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">포맷 프로세스 각 서식 항목을 해당 개체의 값의 텍스트 표현을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">형식 항목의 구문은 <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>맞춤<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>를 지정 하는 필수 인덱스, 선택 사항인 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework에는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">와 같은 메서드에서 지 원하는 복합 서식 지정 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 일부 오버 로드의 <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">자세한 정보에 대 한 날짜 및 시간 형식 지정자에 대 한 참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형 형식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The following example uses the <ph id="ph1">`WriteLine`</ph> method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`WriteLine`</ph> 메서드를 사용하여 숫자, 날짜 및 열거형에 대한 표준 형식 지정자를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.Write%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 형식 사양이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>An array of objects to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</source>
          <target state="translated">지정한 형식 정보를 사용하여 지정한 개체 배열의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의.NET Framework를 개체의 값 텍스트 표현으로 변환한 다음 문자열에서 표현을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">결과 문자열은 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">포맷 프로세스 각 서식 항목을 해당 개체의 값의 텍스트 표현을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">형식 항목의 구문은 <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>맞춤<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>를 지정 하는 필수 인덱스, 선택 사항인 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework에는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">와 같은 메서드에서 지 원하는 복합 서식 지정 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 일부 오버 로드의 <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">자세한 정보에 대 한 날짜 및 시간 형식 지정자에 대 한 참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형 형식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">`arg`</ph> parameter is a parameter array.</source>
          <target state="translated"><ph id="ph1">`arg`</ph> 매개 변수는 매개 변수 배열입니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Arguments  can be passed to the method either as an array or as list of five or more items.</source>
          <target state="translated">배열 또는 5 개 이상의 항목 목록으로 메서드 인수를 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The examples illustrate both forms of method call.</source>
          <target state="translated">이 예에서는 메서드 호출의 형태를 모두 설명 합니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The following example defines a <ph id="ph1">`Person`</ph> class with a number of properties that provide information about a person.</source>
          <target state="translated">다음 예제에서는 정의 <ph id="ph1">`Person`</ph> 다양 한 사람에 대 한 정보를 제공 하는 속성을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Its <ph id="ph1">`GetDescription`</ph> method returns an array that contains all of the property values except one.</source>
          <target state="translated">해당 <ph id="ph1">`GetDescription`</ph> 메서드 외에 다른 속성 값이 모두 포함 하는 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The example then uses the array returned by the  <ph id="ph1">`GetDescription`</ph> method  to display the values of the Person object.</source>
          <target state="translated">반환 된 배열에 다음 사용 하 여이 예제는 <ph id="ph1">`GetDescription`</ph> Person 개체의 값을 표시 하는 메서드.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Note that the example calls the <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method rather than the <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method because it attempts to display the value of the <ph id="ph3">`Person.Remarks`</ph> property on the same line.</source>
          <target state="translated">이 예에서는 호출 하는 <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> 메서드 보다는 <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> 메서드 값을 표시 하려고 했기 때문에 <ph id="ph3">`Person.Remarks`</ph> 같은 줄에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>To do this, it examines the value of the <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> properties to determine whether there is enough space for the remark to fit.</source>
          <target state="translated">값이를 위해 검사는 <ph id="ph1">&lt;xref:System.Console.CursorLeft%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.WindowWidth%2A&gt;</ph> 속성을에 맞게 묶어 표시에 대 한 충분 한 공간이 있는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>If there is, it displays the line.</source>
          <target state="translated">없을 경우, 줄을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>If not, it writes a line, indents three spaces, and displays the remark.</source>
          <target state="translated">그렇지 않으면 텍스트 줄을 쓰는, 들여쓰는 세 개의 공백 및 주석 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The following example is identical to the first, except that it supplies a five-item list as the <ph id="ph1">`arg`</ph> argument instead of a parameter array.</source>
          <target state="translated">다음 예제는 5 개 항목 목록을으로 제공 한다는 점을 제외 하면 첫 번째는 <ph id="ph1">`arg`</ph> 매개 변수 배열이 아니라 인수가 있습니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="arg" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 형식 사양이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>This method is not called by C++ code.</source>
          <target state="translated">C + + 코드에서이 메서드는 합니다.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>The C++ compiler resolves calls to <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> that include a string and a list of four or more object parameters as a call to <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">C + + 컴파일러에 대 한 호출을 해결 <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> 문자열과 4 개 이상의 개체 매개 변수 목록에 대 한 호출으로 포함 하는 <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object[])">
          <source>It resolves calls to <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> that include a string and an object array as a call to <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">에 대 한 호출을 해결 <bpt id="p1">[</bpt>System.Console.Write<ept id="p1">](xref:System.Console.Write*)</ept> 문자열과 개체 배열에 대 한 호출으로 포함 하는 <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>An array of Unicode characters.</source>
          <target state="translated">유니코드 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>의 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes the specified subarray of Unicode characters to the standard output stream.</source>
          <target state="translated">지정한 유니코드 문자의 하위 배열을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>This method writes <ph id="ph1">`count`</ph> characters starting at position <ph id="ph2">`index`</ph> of <ph id="ph3">`buffer`</ph> to the standard output stream.</source>
          <target state="translated">이 메서드는 작성 <ph id="ph1">`count`</ph> 문자 위치에서 시작 <ph id="ph2">`index`</ph> 의 <ph id="ph3">`buffer`</ph> 표준 출력 스트림에 합니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> specify a position that is not within <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> + <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>에 없는 위치를 지정합니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.Char[],System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects to the standard output stream using the specified format information.</source>
          <target state="translated">지정한 형식 정보를 사용하여 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의.NET Framework를 개체의 값 텍스트 표현으로 변환한 다음 문자열에서 표현을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">결과 문자열은 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">포맷 프로세스 각 서식 항목을 해당 개체의 값의 텍스트 표현을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">형식 항목의 구문은 <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>맞춤<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>를 지정 하는 필수 인덱스, 선택 사항인 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework에는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">와 같은 메서드에서 지 원하는 복합 서식 지정 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 일부 오버 로드의 <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">자세한 정보에 대 한 날짜 및 시간 형식 지정자에 대 한 참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형 형식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">`WriteLine`</ph> method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`WriteLine`</ph> 메서드를 사용하여 숫자, 날짜 및 열거형에 대한 표준 형식 지정자를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 형식 사양이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 세 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects to the standard output stream using the specified format information.</source>
          <target state="translated">지정한 형식 정보를 사용하여 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의.NET Framework를 개체의 값 텍스트 표현으로 변환한 다음 문자열에서 표현을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">결과 문자열은 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">포맷 프로세스 각 서식 항목을 해당 개체의 값의 텍스트 표현을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">형식 항목의 구문은 <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>맞춤<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>를 지정 하는 필수 인덱스, 선택 사항인 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework에는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">와 같은 메서드에서 지 원하는 복합 서식 지정 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 일부 오버 로드의 <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">자세한 정보에 대 한 날짜 및 시간 형식 지정자에 대 한 참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형 형식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">`WriteLine`</ph> method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`WriteLine`</ph> 메서드를 사용하여 숫자, 날짜 및 열거형에 대한 표준 형식 지정자를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">`Write`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Write`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 형식 사양이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 세 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The fourth object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 네 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects and variable-length parameter list to the standard output stream using the specified format information.</source>
          <target state="translated">지정한 형식 정보를 사용하여 지정한 개체 및 가변 길이 매개 변수 목록의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">이 API는 CLS 규격이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The CLS-compliant alternative is <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">CLS 규격 대체 항목은 <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers automatically resolve a call to this method as a call to <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">C# 및 Visual Basic 컴파일러에 대 한 호출으로이 메서드에 대 한 호출을 자동으로 해결 <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의.NET Framework를 개체의 값 텍스트 표현으로 변환한 다음 문자열에서 표현을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">결과 문자열은 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">포맷 프로세스 각 서식 항목을 해당 개체의 값의 텍스트 표현을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">형식 항목의 구문은 <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>맞춤<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>를 지정 하는 필수 인덱스, 선택 사항인 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework에는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">와 같은 메서드에서 지 원하는 복합 서식 지정 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 일부 오버 로드의 <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">자세한 정보에 대 한 날짜 및 시간 형식 지정자에 대 한 참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형 형식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The following example illustrates the use of variable parameters with the <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">다음 예제와 가변 매개 변수 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method is called with a composite format string and five format items.</source>
          <target state="translated">메서드는 복합 형식 문자열 및 다섯 개의 형식 항목을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 형식 사양이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method is marked with the <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> keyword, which means that it supports a variable number of parameters.</source>
          <target state="translated">이 메서드가로 표시 된 <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> 키워드 가변 개수의 매개 변수를 지원 한다는 의미입니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</source>
          <target state="translated">Visual c + +에서 메서드를 호출할 수 있지만 C# 또는 Visual Basic 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers resolve calls to <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> as calls to <ph id="ph2">&lt;see cref="M:System.Console.Write(System.String,System.Object[])" /&gt;</ph>.</source>
          <target state="translated">C# 및 Visual Basic 컴파일러에 대 한 호출을 해결 <ph id="ph1">&lt;see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> 에 호출로 <ph id="ph2">&lt;see cref="M:System.Console.Write(System.String,System.Object[])" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="T:System.Console">
          <source>Writes the specified data, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 지정한 데이터를 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or <ph id="ph1">`vbCrLf`</ph> in Visual Basic).</source>
          <target state="translated">기본 줄 종결자는 문자열의 값은 캐리지 리턴 뒤에 줄 바꿈 (C#에서 "\r\n" 또는 <ph id="ph1">`vbCrLf`</ph> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Console">
          <source>You can change the line terminator by setting the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> property to another string.</source>
          <target state="translated">줄 종결자를 설정 하 여 변경할 수 있습니다는 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> 속성을 다른 문자열로 합니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine">
          <source>Writes the current line terminator to the standard output stream.</source>
          <target state="translated">현재 줄 종결자를 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or <ph id="ph1">`vbCrLf`</ph> in Visual Basic).</source>
          <target state="translated">기본 줄 종결자는 문자열의 값은 캐리지 리턴 뒤에 줄 바꿈 (C#에서 "\r\n" 또는 <ph id="ph1">`vbCrLf`</ph> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>You can change the line terminator by setting the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> property to another string.</source>
          <target state="translated">줄 종결자를 설정 하 여 변경할 수 있습니다는 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Console.Out%2A&gt;</ph> 속성을 다른 문자열로 합니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>The example provides an illustration.</source>
          <target state="translated">예제에서는 그림을 제공합니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>The example changes the line terminator from its default value of "\r\n" or <ph id="ph1">`vbCrLf`</ph> to "\r\n\r\n" or <ph id="ph2">`vbCrLf`</ph><ph id="ph3"> + </ph><ph id="ph4">`vbCrLf`</ph>.</source>
          <target state="translated">이 예제에서는 "\r\n"의 값이 기본값에서 줄 종결자를 변경 또는 <ph id="ph1">`vbCrLf`</ph> "\r\n\r\n"를 또는 <ph id="ph2">`vbCrLf`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`vbCrLf`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> methods to display output to the console.</source>
          <target state="translated">그런 다음 호출 하는 <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> 콘솔에 출력을 표시 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 지정한 부울 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>The following example generates ten random integers and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method to indicate whether they are even.</source>
          <target state="translated">다음 예제에서는 10 개 난수를 생성 하 고 사용 하 여는 <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> 메서드도 지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char)">
          <source>Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 지정한 유니코드 문자 값을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[])">
          <source>A Unicode character array.</source>
          <target state="translated">유니코드 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[])">
          <source>Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 지정한 유니코드 문자의 배열을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[])">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[])">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>Writes the text representation of the specified <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 지정한 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Decimal)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Double)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Double)">
          <source>Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 지정한 배정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Double)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Double)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int32)">
          <source>Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 부호 있는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int64)">
          <source>Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 부호 있는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Int64)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Int64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Object)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Object)">
          <source>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, only the line terminator is written.</source>
          <target state="translated"><ph id="ph1">`value`</ph>가 <ph id="ph2">`null`</ph>이면 줄 종결자만 씁니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>Otherwise, the <ph id="ph1">`ToString`</ph> method of <ph id="ph2">`value`</ph> is called to produce its string representation, and the resulting string is written to the standard output stream.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">`ToString`</ph> 방식의 <ph id="ph2">`value`</ph> 문자열 표현 호출 되어 결과 문자열을 표준 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Object%29&gt;</ph> method to display each value in an object array to the console.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.Object%29&gt;</ph> 메서드 콘솔에 개체 배열에 각 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Single)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Single)">
          <source>Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 지정한 단정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Single)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Single)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String)">
          <source>Writes the specified string value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 지정한 문자열 값을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>If value is <ph id="ph1">`null`</ph>, only the line terminator is written to the standard output stream.</source>
          <target state="translated">값이 <ph id="ph1">`null`</ph>, 줄 종결자만 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> method.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>The example changes the line terminator from its default value of "\r\n" or <ph id="ph1">`vbCrLf`</ph> to "\r\n\r\n" or <ph id="ph2">`vbCrLf`</ph><ph id="ph3"> + </ph><ph id="ph4">`vbCrLf`</ph>.</source>
          <target state="translated">이 예제에서는 "\r\n"의 값이 기본값에서 줄 종결자를 변경 또는 <ph id="ph1">`vbCrLf`</ph> "\r\n\r\n"를 또는 <ph id="ph2">`vbCrLf`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`vbCrLf`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> and <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> methods to display output to the console.</source>
          <target state="translated">그런 다음 호출 하는 <ph id="ph1">&lt;xref:System.Console.WriteLine&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Console.WriteLine%28System.String%29&gt;</ph> 콘솔에 출력을 표시 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 부호 없는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The value to write.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 부호 없는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The text representation of <ph id="ph1">`value`</ph> is produced by calling the <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">텍스트 표현을 <ph id="ph1">`value`</ph> 호출 하 여 생성 된 <ph id="ph2">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.UInt64)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>An object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 개체입니다.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의.NET Framework를 개체의 값 텍스트 표현으로 변환한 다음 문자열에서 표현을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">결과 문자열은 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">포맷 프로세스 각 서식 항목을 해당 개체의 값의 텍스트 표현을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">형식 항목의 구문은 <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>맞춤<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>를 지정 하는 필수 인덱스, 선택 사항인 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework에는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">와 같은 메서드에서 지 원하는 복합 서식 지정 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 일부 오버 로드의 <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">자세한 정보에 대 한 날짜 및 시간 형식 지정자에 대 한 참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형 형식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> method to display five randomly generated <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> 메서드를 임의로 생성 된 5 표시 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> method to display the current date.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29&gt;</ph> 메서드를 현재 날짜를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>Note that the format item in the <ph id="ph1">`format`</ph> argument uses the "D" <bpt id="p1">[</bpt>standard date and time format string<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> to display the date in the long date format of the current culture.</source>
          <target state="translated">형식 항목에 <ph id="ph1">`format`</ph> 인수 "D"를 사용 하 여 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 현재 문화권의 긴 날짜 형식으로 날짜를 표시 하 합니다.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 형식 사양이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>An array of objects to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체 배열의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의.NET Framework를 개체의 값 텍스트 표현으로 변환한 다음 문자열에서 표현을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">결과 문자열은 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">포맷 프로세스 각 서식 항목을 해당 개체의 값의 텍스트 표현을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">형식 항목의 구문은 <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>맞춤<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>를 지정 하는 필수 인덱스, 선택 사항인 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework에는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">와 같은 메서드에서 지 원하는 복합 서식 지정 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 일부 오버 로드의 <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">자세한 정보에 대 한 날짜 및 시간 형식 지정자에 대 한 참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형 형식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">다음 예제에서는 숫자, 날짜 및 열거형의 표준 형식 지정자를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="arg" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 형식 사양이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>This method is not called by C++ code.</source>
          <target state="translated">C + + 코드에서이 메서드는 합니다.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>The C++ compiler resolves calls to <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> that include a string and a list of four or more object parameters as a call to <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">C + + 컴파일러에 대 한 호출을 해결 <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> 문자열과 4 개 이상의 개체 매개 변수 목록에 대 한 호출으로 포함 하는 <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object[])">
          <source>It resolves calls to <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> that include a string and an object array as a call to <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">에 대 한 호출을 해결 <bpt id="p1">[</bpt>System.Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine*)</ept> 문자열과 개체 배열에 대 한 호출으로 포함 하는 <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>An array of Unicode characters.</source>
          <target state="translated">유니코드 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>의 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</source>
          <target state="translated">뒤에 현재 줄 종결자가 오는, 지정한 유니코드 문자의 하위 배열을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This method writes <ph id="ph1">`count`</ph> characters starting at position <ph id="ph2">`index`</ph> of <ph id="ph3">`buffer`</ph> to the standard output stream.</source>
          <target state="translated">이 메서드는 작성 <ph id="ph1">`count`</ph> 문자 위치에서 시작 <ph id="ph2">`index`</ph> 의 <ph id="ph3">`buffer`</ph> 표준 출력 스트림에 합니다.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> specify a position that is not within <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> + <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>에 없는 위치를 지정합니다.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의.NET Framework를 개체의 값 텍스트 표현으로 변환한 다음 문자열에서 표현을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">결과 문자열은 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">포맷 프로세스 각 서식 항목을 해당 개체의 값의 텍스트 표현을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">형식 항목의 구문은 <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>맞춤<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>를 지정 하는 필수 인덱스, 선택 사항인 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework에는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">와 같은 메서드에서 지 원하는 복합 서식 지정 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 일부 오버 로드의 <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">자세한 정보에 대 한 날짜 및 시간 형식 지정자에 대 한 참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형 형식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">다음 예제에서는 숫자, 날짜 및 열거형의 표준 형식 지정자를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 형식 사양이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 세 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의.NET Framework를 개체의 값 텍스트 표현으로 변환한 다음 문자열에서 표현을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">결과 문자열은 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">포맷 프로세스 각 서식 항목을 해당 개체의 값의 텍스트 표현을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">형식 항목의 구문은 <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>맞춤<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>를 지정 하는 필수 인덱스, 선택 사항인 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework에는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">와 같은 메서드에서 지 원하는 복합 서식 지정 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 일부 오버 로드의 <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">자세한 정보에 대 한 날짜 및 시간 형식 지정자에 대 한 참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형 형식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</source>
          <target state="translated">다음 예제에서는 숫자, 날짜 및 열거형의 표준 형식 지정자를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The following example is a tip calculator that calculates an 18% tip and uses the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method to display the amount of the original charge, the amount of the tip, and the total amount.</source>
          <target state="translated">다음 예제는 18% 팁을 계산 하 고 사용 하는 팁 계산기는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 메서드 원래 충전량 팁, 크기 및 전체 시간 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</source>
          <target state="translated">콘솔 응용 프로그램 사용자가을 명령줄 매개 변수가 원래 충전량 제공 해야 하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 형식 사양이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The first object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The second object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The third object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 세 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The fourth object to write using <bpt id="p1">&lt;c&gt;</bpt>format<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>형식<ept id="p1">&lt;/c&gt;</ept>을 사용하여 쓸 네 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Writes the text representation of the specified objects and variable-length parameter list, followed by the current line terminator, to the standard output stream using the specified format information.</source>
          <target state="translated">지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체 및 가변 길이 매개 변수 목록의 텍스트 표현을 표준 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">이 API는 CLS 규격이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The CLS-compliant alternative is <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">CLS 규격 대체 항목은 <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers automatically resolve a call to this method as a call to <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">C# 및 Visual Basic 컴파일러에 대 한 호출으로이 메서드에 대 한 호출을 자동으로 해결 <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의.NET Framework를 개체의 값 텍스트 표현으로 변환한 다음 문자열에서 표현을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The resulting string is written to the output stream.</source>
          <target state="translated">결과 문자열은 출력 스트림에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the text representation of the value of the corresponding object.</source>
          <target state="translated">포맷 프로세스 각 서식 항목을 해당 개체의 값의 텍스트 표현을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>index<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>alignment<ept id="p2">*</ept>][<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</source>
          <target state="translated">형식 항목의 구문은 <ph id="ph1">`{`</ph> <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept>[<ph id="ph2">`,`</ph><bpt id="p2">*</bpt>맞춤<ept id="p2">*</ept>] [<ph id="ph3">`:`</ph><bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]<ph id="ph4">`}`</ph>를 지정 하는 필수 인덱스, 선택 사항인 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</source>
          <target state="translated">.NET Framework에는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and some overloads of <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">와 같은 메서드에서 지 원하는 복합 서식 지정 기능에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 일부 오버 로드의 <ph id="ph3">&lt;xref:System.Console.WriteLine%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>합성 서식 지정<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 서식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">자세한 정보에 대 한 날짜 및 시간 형식 지정자에 대 한 참조 <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형 형식 지정자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">서식 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>For more information about the line terminator, see the Remarks section of the <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> method that takes no parameters.</source>
          <target state="translated">줄 종결자에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Console.WriteLine%2A&gt;</ph> 매개 변수를 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The following example illustrates the use of variable arguments with the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 변수 인수를 사용 하 여 <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method is called with a composite format string and five format items.</source>
          <target state="translated">메서드는 복합 형식 문자열 및 다섯 개의 형식 항목을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The format specification in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 형식 사양이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>for modifying safe top-level windows and subwindows.</source>
          <target state="translated">안전 하 게 보호 최상위 창 및 하위 창 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>This method is marked with the <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> keyword, which means that it supports a variable number of parameters.</source>
          <target state="translated">이 메서드가로 표시 된 <ph id="ph1">&lt;see langword="vararg" /&gt;</ph> 키워드 가변 개수의 매개 변수를 지원 한다는 의미입니다.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</source>
          <target state="translated">Visual c + +에서 메서드를 호출할 수 있지만 C# 또는 Visual Basic 코드에서 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
          <source>The C# and Visual Basic compilers resolve calls to <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> as calls to <ph id="ph2">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object[])" /&gt;</ph>.</source>
          <target state="translated">C# 및 Visual Basic 컴파일러에 대 한 호출을 해결 <ph id="ph1">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /&gt;</ph> 에 호출로 <ph id="ph2">&lt;see cref="M:System.Console.WriteLine(System.String,System.Object[])" /&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>