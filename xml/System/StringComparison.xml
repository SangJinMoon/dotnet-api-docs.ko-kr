<Type Name="StringComparison" FullName="System.StringComparison">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4b4b0456e2f1e8439629a8c729a2ba2582b5c94" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30727817" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum StringComparison" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed StringComparison extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.StringComparison" />
  <TypeSignature Language="VB.NET" Value="Public Enum StringComparison" />
  <TypeSignature Language="C++ CLI" Value="public enum class StringComparison" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cc0fc-101">
        <see cref="M:System.String.Compare(System.String,System.String)" /> 및 <see cref="M:System.String.Equals(System.Object)" /> 메서드의 특정 오버로드에서 사용할 문화권, 대/소문자 및 정렬 규칙을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc0fc-101">Specifies the culture, case, and sort rules to be used by certain overloads of the <see cref="M:System.String.Compare(System.String,System.String)" /> and <see cref="M:System.String.Equals(System.Object)" /> methods.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc0fc-102"><xref:System.StringComparison> 열거형 문자열 비교 현재 문화권 이나 고정 문화권, word 또는 정렬 서 수 규칙을 사용 하 고 대/소문자 구분 또는 대/소문자 구분 해야 하는지 여부를 지정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-102">The <xref:System.StringComparison> enumeration is used to specify whether a string comparison should use the current culture or the invariant culture, word or ordinal sort rules, and be case-sensitive or case-insensitive.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc0fc-103">와 같은 문자열 비교 메서드를 호출할 때 <xref:System.String.Compare%2A?displayProperty=nameWithType>, <xref:System.String.Equals%2A?displayProperty=nameWithType>, 또는 <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, 형식의 매개 변수를 포함 하는 오버 로드를 항상 호출 해야 <xref:System.StringComparison> 메서드가 수행할 비교 형식을 지정할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-103">When you call a string comparison method such as <xref:System.String.Compare%2A?displayProperty=nameWithType>, <xref:System.String.Equals%2A?displayProperty=nameWithType>, or <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, you should always call an overload that includes a parameter of type <xref:System.StringComparison> so that you can specify the type of comparison that the method performs.</span></span> <span data-ttu-id="cc0fc-104">자세한 내용은 [문자열 사용에 대한 모범 사례](~/docs/standard/base-types/best-practices-strings.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-104">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="cc0fc-105">단어 정렬 규칙을 사용 하는 작업에 따라는 자신에 게 할당 하는 특수 한 가중치가 문화권 구분 비교를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-105">An operation that uses word sort rules performs a culture-sensitive comparison wherein certain nonalphanumeric Unicode characters might have special weights assigned to them.</span></span> <span data-ttu-id="cc0fc-106">단어 정렬 규칙 및 하이픈을 특정 문화권의 규칙을 사용 하 여 ("-")는 매우 작은 가중치가 할당 "coop" 및 "co-op" 정렬된 된 목록에서 서로 인접 표시 되도록 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-106">Using word sort rules and the conventions of a specific culture, the hyphen ("-") might have a very small weight assigned to it so that "coop" and "co-op" appear next to each other in a sorted list.</span></span>  
  
 <span data-ttu-id="cc0fc-107">정렬 서 수 규칙을 사용 하는 작업을 각각의 숫자 값 (유니코드 코드 포인트)에 따라 비교 <xref:System.Char> 문자열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-107">An operation that uses ordinal sort rules performs a comparison based on the numeric value (Unicode code point) of each <xref:System.Char> in the string.</span></span> <span data-ttu-id="cc0fc-108">서 수 비교는 빠른 하지만 문화권을 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-108">An ordinal comparison is fast but culture-insensitive.</span></span> <span data-ttu-id="cc0fc-109">정렬 서 수 규칙을 사용 하 여 유니코드 문자 (U +)로 시작 하는 문자열을 정렬할 경우 xxxx yyyy 보다 작은 숫자로 문자열 U + xxxx 문자열 U + yyyy 하기 전에 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-109">When you use ordinal sort rules to sort strings that start with Unicode characters (U+), the string U+xxxx comes before the string U+yyyy if the value of xxxx is numerically less than yyyy.</span></span>  
  
 <span data-ttu-id="cc0fc-110">비교에 대 한 자세한 내용은 참조는 <xref:System.String?displayProperty=nameWithType> 클래스 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-110">For more information about comparisons, see the <xref:System.String?displayProperty=nameWithType> class remarks.</span></span> <span data-ttu-id="cc0fc-111">문화권에 대 한 자세한 내용은 참조는 <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> 클래스 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-111">For more information about culture, see the <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> class remarks.</span></span> <span data-ttu-id="cc0fc-112">서 수 또는 문화권 구분 비교 규칙 또는 고정 문화권의 규칙을 사용 하는 경우에 사용 되는 지침 참조 [문자열 사용에 대 한 유용한](~/docs/standard/base-types/best-practices-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-112">For guidelines on when to use ordinal or culture-sensitive comparison rules or the rules of the invariant culture, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc0fc-113">다음 예제에서는의 각 멤버를 사용 하 여 4 개의 집합이 단어를 비교는 <xref:System.StringComparison> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-113">The following example compares four sets of words by using each member of the <xref:System.StringComparison> enumeration.</span></span>  <span data-ttu-id="cc0fc-114">비교는 영어 (미국) 및 라프어 (스웨덴) Nothern 문화권의 규칙을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-114">The comparisons use the conventions of the English (United States) and Sami, Nothern (Sweden) cultures.</span></span> <span data-ttu-id="cc0fc-115">Note 문자열 "encyclopædia" 및 "백과"는 라프어 (스웨덴) 북부 문화권 있지만 EN-US 문화권에 해당 하는 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cc0fc-115">Note that the strings "encyclopædia" and "encyclopedia" are considered equivalent in the en-US culture but not in the Sami, Northern (Sweden) culture.</span></span>  
  
 [!code-csharp[System.String.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/equals_ex3.cs#3)]
 [!code-vb[System.String.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/equals_ex3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.String" />
    <altmember cref="M:System.String.Compare(System.String,System.String)" />
    <altmember cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />
    <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
    <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
  </Docs>
  <Members>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="CurrentCulture" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison CurrentCulture = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="CurrentCulture" />
      <MemberSignature Language="C++ CLI" Value="CurrentCulture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc0fc-116">문화권 구분 정렬 규칙 및 현재 문화권을 사용하여 문자열을 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc0fc-116">Compare strings using culture-sensitive sort rules and the current culture.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CurrentCultureIgnoreCase">
      <MemberSignature Language="C#" Value="CurrentCultureIgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison CurrentCultureIgnoreCase = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.CurrentCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="CurrentCultureIgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="CurrentCultureIgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc0fc-117">문화권 구분 정렬 규칙 및 현재 문화권을 사용하고 비교되는 문자열의 대/소문자를 무시하여 문자열을 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc0fc-117">Compare strings using culture-sensitive sort rules, the current culture, and ignoring the case of the strings being compared.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="InvariantCulture" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison InvariantCulture = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="InvariantCulture" />
      <MemberSignature Language="C++ CLI" Value="InvariantCulture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc0fc-118">문화권 구분 정렬 규칙 및 고정 문화권을 사용하여 문자열을 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc0fc-118">Compare strings using culture-sensitive sort rules and the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InvariantCultureIgnoreCase">
      <MemberSignature Language="C#" Value="InvariantCultureIgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison InvariantCultureIgnoreCase = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.InvariantCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="InvariantCultureIgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="InvariantCultureIgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc0fc-119">문화권 구분 정렬 규칙 및 고정 문화권을 사용하고 비교되는 문자열의 대/소문자를 무시하여 문자열을 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc0fc-119">Compare strings using culture-sensitive sort rules, the invariant culture, and ignoring the case of the strings being compared.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="Ordinal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison Ordinal = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Ordinal" />
      <MemberSignature Language="C++ CLI" Value="Ordinal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc0fc-120">서수(이진) 정렬 규칙을 사용하여 문자열을 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc0fc-120">Compare strings using ordinal (binary) sort rules.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OrdinalIgnoreCase">
      <MemberSignature Language="C#" Value="OrdinalIgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.StringComparison OrdinalIgnoreCase = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.StringComparison.OrdinalIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="OrdinalIgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="OrdinalIgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc0fc-121">서수(이진) 정렬 규칙을 사용하고 비교되는 문자열의 대/소문자를 무시하여 문자열을 비교합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc0fc-121">Compare strings using ordinal (binary) sort rules and ignoring the case of the strings being compared.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>