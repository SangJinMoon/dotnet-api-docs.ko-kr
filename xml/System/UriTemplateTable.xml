<Type Name="UriTemplateTable" FullName="System.UriTemplateTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2db0456ccc377ab950898d7e2091c481b09812bd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36427262" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UriTemplateTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplateTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplateTable" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplateTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplateTable" />
  <TypeSignature Language="F#" Value="type UriTemplateTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d4152-101">
        <see cref="T:System.UriTemplate" /> 개체의 연결 세트를 나타내는 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4152-101">A class that represents an associative set of <see cref="T:System.UriTemplate" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4152-102"><xref:System.UriTemplateTable>은 개발자가 선택한 개체에 바인딩된 <xref:System.UriTemplate> 개체의 연결 세트입니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-102">A <xref:System.UriTemplateTable> is an associative set of <xref:System.UriTemplate> objects bound to an object of the developer's choosing.</span></span> <span data-ttu-id="d4152-103">후보 URI(Uniform Resource Identifier)를 세트의 템플릿에 일치시키고 일치하는 템플릿과 연결된 데이터를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-103">It allows you to match candidate Uniform Resource Identifiers (URIs) against the templates in the set and retrieve the data associated with the matching templates.</span></span> <span data-ttu-id="d4152-104"><xref:System.UriTemplateTable>의 내용은 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 메서드가 호출되기 전까지 변경할 수 있으며, 메서드가 호출되면 다음 형식의 유효성 검사 중 하나가 실시됩니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-104">The contents of <xref:System.UriTemplateTable> can be changed until the <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> method is called, at which time one of following types of validation occurs:</span></span>  
  
-   <span data-ttu-id="d4152-105"><xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29>가 호출되어 `false`를 전달하면 <xref:System.UriTemplateTable>은 테이블에 구조상 동등한 템플릿이 여러 개가 없음을 확인하기 위해 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-105">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `false`, the <xref:System.UriTemplateTable> checks to make sure the table contains no multiple structurally-equivalent templates.</span></span> <span data-ttu-id="d4152-106">그러한 템플릿이 있는 경우 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-106">If it finds such templates, it throws an exception.</span></span> <span data-ttu-id="d4152-107">이 형식의 유효성 검사는 단 하나의 템플릿이 들어오는 URI와 일치하도록 하려는 경우에 <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29>과 함께 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-107">This type of validation is used in conjunction with <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> when you want to ensure only one template matches an incoming URI.</span></span>  
  
-   <span data-ttu-id="d4152-108"><xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29>가 호출되어 `true`를 전달하면 구조상 동등한 템플릿 여러 개가 <xref:System.UriTemplateTable>에 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-108">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `true`, multiple structurally-equivalent templates can be contained within a <xref:System.UriTemplateTable>.</span></span> <span data-ttu-id="d4152-109">그러나 템플릿 내의 쿼리 문자열은 모호해서는 안 됩니다. 동일한 쿼리 문자열은 허용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-109">However, any query strings in the templates must not be ambiguous; identical query strings are allowed.</span></span> <span data-ttu-id="d4152-110">모호한 쿼리 문자열에 대 한 자세한 내용은 참조 [UriTemplate 및 UriTemplateTable](~/docs/framework/wcf/feature-details/uritemplate-and-uritemplatetable.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-110">For more information about ambiguous query strings, see [UriTemplate and UriTemplateTable](~/docs/framework/wcf/feature-details/uritemplate-and-uritemplatetable.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4152-111">다음 코드에서는 <xref:System.UriTemplateTable>을 만들고 이를 채우며 후보 <xref:System.Uri>와 일치시키는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-111">The following code shows how to create a <xref:System.UriTemplateTable>, populate it, and use it to match against a candidate <xref:System.Uri>.</span></span>  
  
 [!code-csharp[UriTemplateTable#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/program.cs#0)]
 [!code-vb[UriTemplateTable#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/program1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4152-112">
            <see cref="T:System.UriTemplateTable" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-112">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4152-113">
            <see cref="T:System.UriTemplateTable" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-113">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4152-114">다음 예제에서는 <xref:System.UriTemplateTable> 클래스를 인스턴스화하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-114">The following example shows how to instantiate the <xref:System.UriTemplateTable> class.</span></span>  
  
 [!code-csharp[UriTemplateTable#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/program.cs#1)]
 [!code-vb[UriTemplateTable#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; keyValuePairs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.UriTemplate, object&gt;&gt; keyValuePairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyValuePairs As IEnumerable(Of KeyValuePair(Of UriTemplate, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ keyValuePairs);" />
      <MemberSignature Language="F#" Value="new UriTemplateTable : seq&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate, obj&gt;&gt; -&gt; UriTemplateTable" Usage="new System.UriTemplateTable keyValuePairs" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyValuePairs" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.UriTemplate,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePairs">
          <span data-ttu-id="d4152-115">URI 템플릿 및 연결된 데이터로 구성된 키/값 쌍 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-115">A collection of key/value pairs that consist of URI templates and associated data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4152-116">지정된 키/값 쌍 컬렉션을 사용하여 <see cref="T:System.UriTemplateTable" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-116">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified collection of key/value pairs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4152-117">다음 예제에서는 <xref:System.UriTemplateTable> 클래스를 인스턴스화하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-117">The following example shows how to instantiate the <xref:System.UriTemplateTable> class.</span></span>  
  
 [!code-csharp[UriTemplateTable#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#2)]
 [!code-vb[UriTemplateTable#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable (Uri baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseAddress As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable(Uri ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new UriTemplateTable : Uri -&gt; UriTemplateTable" Usage="new System.UriTemplateTable baseAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="d4152-118">기본 주소를 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-118">A <see cref="T:System.Uri" /> instance that contains the base address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4152-119">지정된 기본 주소를 사용하여 <see cref="T:System.UriTemplateTable" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-119">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified base address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4152-120">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-120">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[UriTemplateTable#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/program.cs#3)]
 [!code-vb[UriTemplateTable#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/program1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable (Uri baseAddress, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; keyValuePairs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseAddress, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.UriTemplate, object&gt;&gt; keyValuePairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseAddress As Uri, keyValuePairs As IEnumerable(Of KeyValuePair(Of UriTemplate, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable(Uri ^ baseAddress, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ keyValuePairs);" />
      <MemberSignature Language="F#" Value="new UriTemplateTable : Uri * seq&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate, obj&gt;&gt; -&gt; UriTemplateTable" Usage="new System.UriTemplateTable (baseAddress, keyValuePairs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="keyValuePairs" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.UriTemplate,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress">
          <span data-ttu-id="d4152-121">기본 주소를 포함하는 <see cref="T:System.Uri" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-121">A <see cref="T:System.Uri" /> instance that contains the base address.</span>
          </span>
        </param>
        <param name="keyValuePairs">
          <span data-ttu-id="d4152-122">URI 템플릿 및 연결된 데이터로 구성된 키/값 쌍 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-122">A collection of key/value pairs that consist of URI templates and associated data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4152-123">지정된 기본 주소 및 키/값 쌍 컬렉션을 사용하여 <see cref="T:System.UriTemplateTable" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-123">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified base address and collection of key/value pairs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d4152-124">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-124">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[UriTemplateTable#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#4)]
 [!code-vb[UriTemplateTable#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public Uri BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : Uri with get, set" Usage="System.UriTemplateTable.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4152-125">
            <see cref="T:System.UriTemplateTable" /> 인스턴스의 기본 주소를 가져오고 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-125">Gets and sets the base address for the <see cref="T:System.UriTemplateTable" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4152-126">기본 주소를 포함하는 <see cref="T:System.Uri" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-126">A <see cref="T:System.Uri" /> that contains the base address.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4152-127"><xref:System.UriTemplateTable.BaseAddress%2A> 속성은 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29>, <xref:System.UriTemplateTable.Match%28System.Uri%29> 또는 <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29>을 호출하기 전에만 설정할 수 있습니다. 그렇지 않으면 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-127">The <xref:System.UriTemplateTable.BaseAddress%2A> property can only be set prior to calling <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> or <xref:System.UriTemplateTable.Match%28System.Uri%29> or <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> otherwise an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4152-128">다음 예제에서는 <xref:System.UriTemplateTable.BaseAddress%2A> 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-128">The following example shows how to access the <xref:System.UriTemplateTable.BaseAddress%2A> property.</span></span>  
  
 [!code-csharp[UriTemplateTable#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#5)]
 [!code-vb[UriTemplateTable#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.UriTemplateTable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4152-129">
            <see cref="T:System.UriTemplateTable" />이 읽기 전용인지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-129">Gets a value that specifies whether the <see cref="T:System.UriTemplateTable" /> is read only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4152-130">
            <see cref="T:System.UriTemplateTable" />속성이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-130">
              <see langword="true" /> if the <see cref="T:System.UriTemplateTable" /> property is read only; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4152-131"><xref:System.UriTemplateTable>은 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 메서드가 호출된 후에만 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-131">A <xref:System.UriTemplateTable> is read only after the <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4152-132">다음 예제에서는 <xref:System.UriTemplateTable.IsReadOnly%2A> 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-132">The following example shows how to access the <xref:System.UriTemplateTable.IsReadOnly%2A> property.</span></span>  
  
 [!code-csharp[UriTemplateTable#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#6)]
 [!code-vb[UriTemplateTable#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValuePairs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; KeyValuePairs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.UriTemplate, object&gt;&gt; KeyValuePairs" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.KeyValuePairs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValuePairs As IList(Of KeyValuePair(Of UriTemplate, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ KeyValuePairs { System::Collections::Generic::IList&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyValuePairs : System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate, obj&gt;&gt;" Usage="System.UriTemplateTable.KeyValuePairs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;System.UriTemplate,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4152-133">
            <see cref="T:System.UriTemplate" /> 개체 및 연결된 데이터로 구성된 키/값 쌍 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-133">Gets a collection of key/value pairs that consist of <see cref="T:System.UriTemplate" /> objects and their associated data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4152-134">
            <see cref="T:System.UriTemplate" /> 개체 및 연결된 데이터로 구성된 키/값 쌍 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-134">A collection of key/value pairs that consist of <see cref="T:System.UriTemplate" /> objects and their associated data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4152-135">테이블의 각 <xref:System.UriTemplate> 인스턴스에는 연결된 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-135">Each <xref:System.UriTemplate> instance in the table has data associated with it.</span></span> <span data-ttu-id="d4152-136"><xref:System.UriTemplateTable.KeyValuePairs%2A> 속성은 키/값 쌍 컬렉션을 포함하며, 여기서 키는 <xref:System.UriTemplate> 인스턴스이고 값은 <xref:System.UriTemplate>과 연결된 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-136">The <xref:System.UriTemplateTable.KeyValuePairs%2A> property contains a collection of key value pairs where the key is a <xref:System.UriTemplate> instance and the value is the data associated with the <xref:System.UriTemplate>.</span></span> <span data-ttu-id="d4152-137">값은 <xref:System.UriTemplateTable.KeyValuePairs%2A>, <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 또는 <xref:System.UriTemplateTable.Match%28System.Uri%29>을 호출하기 전에만 <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> 속성에 추가할 수 있습니다. 그렇지 않으면 <xref:System.NotSupportedException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-137">Values can only be added to <xref:System.UriTemplateTable.KeyValuePairs%2A> property prior to calling <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> or <xref:System.UriTemplateTable.Match%28System.Uri%29> or <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> otherwise a <xref:System.NotSupportedException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4152-138">다음 예제에서는 <xref:System.UriTemplateTable.KeyValuePairs%2A> 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-138">The following example shows how to access the <xref:System.UriTemplateTable.KeyValuePairs%2A> property.</span></span>  
  
 [!code-csharp[UriTemplateTable#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#7)]
 [!code-vb[UriTemplateTable#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly (bool allowDuplicateEquivalentUriTemplates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly(bool allowDuplicateEquivalentUriTemplates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly (allowDuplicateEquivalentUriTemplates As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly(bool allowDuplicateEquivalentUriTemplates);" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : bool -&gt; unit" Usage="uriTemplateTable.MakeReadOnly allowDuplicateEquivalentUriTemplates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowDuplicateEquivalentUriTemplates" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowDuplicateEquivalentUriTemplates">
          <span data-ttu-id="d4152-139">
            <see cref="T:System.UriTemplate" />에 동일한 <see cref="T:System.UriTemplateTable" /> 인스턴스의 중복이 허용되는지 여부를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-139">Specifies whether to allow duplicate equivalent <see cref="T:System.UriTemplate" /> instances in the <see cref="T:System.UriTemplateTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4152-140">
            <see cref="T:System.UriTemplateTable" />을 읽기 전용으로 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-140">Makes the <see cref="T:System.UriTemplateTable" /> read only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4152-141"><xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 메서드 호출 시 다음 형식의 유효성 검사 중 하나가 실시됩니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-141">When the <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> method is called, one of the following types of validation occurs:</span></span>  
  
-   <span data-ttu-id="d4152-142"><xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29>가 호출되어 `false`를 전달하면 <xref:System.UriTemplateTable>은 테이블에 구조상 동등한 템플릿이 여러 개가 없음을 확인하기 위해 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-142">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `false`, the <xref:System.UriTemplateTable> checks to make sure the table contains no multiple structurally-equivalent templates.</span></span> <span data-ttu-id="d4152-143">그러한 템플릿이 있는 경우 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-143">If it finds such templates, an exception is thrown.</span></span> <span data-ttu-id="d4152-144">이 형식의 유효성 검사는 단 하나의 템플릿이 들어오는 URI와 일치하도록 하려는 경우에 <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29>과 함께 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-144">This type of validation is used in conjunction with <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> when you want to ensure only one template matches an incoming URI.</span></span>  
  
-   <span data-ttu-id="d4152-145"><xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29>가 호출되어 `true`를 전달하면 구조상 동등한 템플릿 여러 개가 <xref:System.UriTemplateTable>에 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-145">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `true`, multiple structurally-equivalent templates can be contained within a <xref:System.UriTemplateTable>.</span></span> <span data-ttu-id="d4152-146">그러나 템플릿 내의 쿼리 문자열은 모호해서는 안 됩니다. 동일한 쿼리 문자열은 허용됩니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-146">However, any query strings in the templates must not be ambiguous; identical query strings are allowed.</span></span> <span data-ttu-id="d4152-147">이 형식의 유효성 검사는 후보 URI에 대해 여러 개의 템플릿 일치가 허용되는 경우 <xref:System.UriTemplateTable.Match%28System.Uri%29>와 함께 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-147">This type of validation is used in conjunction with <xref:System.UriTemplateTable.Match%28System.Uri%29> when multiple template matches are allowed on the candidate URI.</span></span>  
  
 <span data-ttu-id="d4152-148">첫 번째 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 호출만 유효하며, 후속 호출은 무시되고 예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-148">Only the first call to <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is honored, subsequent calls are ignored without any exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;UriTemplateMatch&gt; Match (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.UriTemplateMatch&gt; Match(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.Match(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;UriTemplateMatch ^&gt; ^ Match(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.Match : Uri -&gt; System.Collections.ObjectModel.Collection&lt;UriTemplateMatch&gt;" Usage="uriTemplateTable.Match uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.UriTemplateMatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="d4152-149">후보 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-149">The candidate URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4152-150">후보 <see cref="T:System.Uri" />를 <see cref="T:System.UriTemplateTable" />과 일치시키려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-150">Attempts to match a candidate <see cref="T:System.Uri" /> to the <see cref="T:System.UriTemplateTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4152-151">
            <see cref="T:System.UriTemplateMatch" /> 인스턴스의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-151">A collection of <see cref="T:System.UriTemplateMatch" /> instances.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4152-152">이 메서드는 일치 항목을 여러 개 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-152">This method may return multiple matches.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4152-153">다음 예제에서는 <xref:System.UriTemplateTable.Match%28System.Uri%29> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-153">The following example shows how to call the <xref:System.UriTemplateTable.Match%28System.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplateTable#9](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#9)]
 [!code-vb[UriTemplateTable#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchSingle">
      <MemberSignature Language="C#" Value="public UriTemplateMatch MatchSingle (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch MatchSingle(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.MatchSingle(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ MatchSingle(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.MatchSingle : Uri -&gt; UriTemplateMatch" Usage="uriTemplateTable.MatchSingle uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="d4152-154">후보 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-154">The candidate URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4152-155">후보 <see cref="T:System.Uri" />를 <see cref="T:System.UriTemplateTable" />과 일치시키려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-155">Attempts to match a candidate <see cref="T:System.Uri" /> to the <see cref="T:System.UriTemplateTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4152-156">단일 <see cref="T:System.UriTemplateMatch" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-156">A single <see cref="T:System.UriTemplateMatch" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4152-157">이 메서드는 최대 하나의 일치 항목을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-157">This method returns, at most, one match.</span></span> <span data-ttu-id="d4152-158">둘 이상의 일치가 발견될 경우 <xref:System.UriTemplateMatchException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-158">If more than one match is found, a <xref:System.UriTemplateMatchException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4152-159">다음 예제에서는 <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d4152-159">The following example shows how to call the <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplateTable#10](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#10)]
 [!code-vb[UriTemplateTable#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalBaseAddress">
      <MemberSignature Language="C#" Value="public Uri OriginalBaseAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri OriginalBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.OriginalBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ OriginalBaseAddress { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalBaseAddress : Uri" Usage="System.UriTemplateTable.OriginalBaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4152-160">원래 기본 주소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-160">Gets the original base address.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4152-161">원래 기본 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4152-161">The original base address.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>