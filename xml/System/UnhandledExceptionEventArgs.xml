<Type Name="UnhandledExceptionEventArgs" FullName="System.UnhandledExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2bc5b27ab8c70f87bc485bcd049f405e98420956" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30727767" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UnhandledExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UnhandledExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.UnhandledExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class UnhandledExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnhandledExceptionEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>응용 프로그램 도메인에서 처리되지 않은 예외가 있을 때 발생하는 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.UnhandledExceptionEventArgs> 예외 개체 및 공용 언어 런타임의 종료 여부를 나타내는 플래그에 대 한 액세스를 제공 합니다. <xref:System.UnhandledExceptionEventArgs> 로 전달 된 매개 변수 중 하나는 <xref:System.UnhandledExceptionEventHandler> 에 대 한는 <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> 이벤트입니다.  
  
 이벤트 처리기 대리자에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.UnhandledException" />
    <altmember cref="T:System.UnhandledExceptionEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnhandledExceptionEventArgs (object exception, bool isTerminating);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object exception, bool isTerminating) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UnhandledExceptionEventArgs.#ctor(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As Object, isTerminating As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnhandledExceptionEventArgs(System::Object ^ exception, bool isTerminating);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Object" />
        <Parameter Name="isTerminating" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exception">처리되지 않는 예외입니다.</param>
        <param name="isTerminating">
          런타임이 종료 중이면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>예외 개체 및 공용 언어 런타임 종료 플래그를 사용하여 <see cref="T:System.UnhandledExceptionEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionObject">
      <MemberSignature Language="C#" Value="public object ExceptionObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ExceptionObject" />
      <MemberSignature Language="DocId" Value="P:System.UnhandledExceptionEventArgs.ExceptionObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ExceptionObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>처리되지 않은 예외 개체를 가져옵니다.</summary>
        <value>처리되지 않은 예외 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 반환 형식의 개체 <xref:System.Object> 하나에서 파생 하는 대신 <xref:System.Exception>합니다. 공용 언어 사양에서 모든 예외 형식을 파생 필요로 하지만 <xref:System.Exception>, 개체에서 파생 되지 않은 예외를 throw 하는 방법에 대 한 수 <xref:System.Exception>합니다. 이 예외와 함께 작동 하도록 다음을 수행할 수 있습니다.  
  
-   적용는 <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> 특성이 <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows%2A?displayProperty=nameWithType> 값 `true` 이벤트 처리기가 포함 된 어셈블리에 있습니다. 파생 되지 않은 모든 예외를 래핑합니다이 <xref:System.Exception> 클래스에 <xref:System.Runtime.CompilerServices.RuntimeWrappedException> 개체입니다. 있습니다 수 다음 안전 하 게 캐스팅 (C#) 또는 변환 (Visual Basic의 경우)이이 속성을 반환 하는 개체는 <xref:System.Exception> 개체를 원래 예외 개체를 검색는 <xref:System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException%2A?displayProperty=nameWithType> 속성입니다. Note C# 및 Visual Basic 컴파일러 같은 일부 컴파일러에서는이 특성을 자동으로 적용 합니다.  
  
-   이 속성을 반환 하는 개체를 캐스팅는 <xref:System.Exception> 개체입니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.AppDomain.UnhandledException> 이벤트입니다. 이벤트 처리기를 정의 `MyHandler`, 기본 응용 프로그램 도메인에서 처리 되지 않은 예외가 throw 됩니다 때마다 호출 되는 합니다. 다음 두 가지 예외를 throw합니다. 첫 번째는에서 처리 한 **try/catch** 블록입니다. 두 번째는 처리 되지 않으며 호출의 `MyHandle` 응용 프로그램을 종료 하기 전에 루틴입니다.  
  
 [!code-cpp[AppDomain_UnhandledException#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomain_UnhandledException/CPP/unhandledexception.cpp#1)]
 [!code-csharp[AppDomain_UnhandledException#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomain_UnhandledException/CS/unhandledexception.cs#1)]
 [!code-vb[AppDomain_UnhandledException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomain_UnhandledException/VB/unhandledexception.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" />
        <altmember cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />
      </Docs>
    </Member>
    <Member MemberName="IsTerminating">
      <MemberSignature Language="C#" Value="public bool IsTerminating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTerminating" />
      <MemberSignature Language="DocId" Value="P:System.UnhandledExceptionEventArgs.IsTerminating" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTerminating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTerminating { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>공용 언어 런타임의 종료 여부를 나타냅니다.</summary>
        <value>
          런타임이 종료 중이면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 버전 2.0부터,이 속성은 반환 `true` 대부분에 대 한 버전 1.0 및 1.1의 동작으로 되돌리려면 응용 프로그램 호환성 플래그를 사용 하지 않으면 예외를 처리 합니다. 일반적으로 인해 종료 응용 프로그램의 스레드 풀 스레드를 비롯 한 스레드의 가장 처리 되지 않은 예외 없이 진행 수 있도록 이유에서입니다. 런타임 종료 되지 않는 사례 목록을 비롯 한 자세한 내용은 참조 하십시오. [관리 되는 스레드의 예외](~/docs/standard/threading/exceptions-in-managed-threads.md)합니다.  
  
## <a name="version-information"></a>버전 정보  
 다음.NET Framework 버전 1.0 및 1.1에 적용:이 속성은 반환 `true` 예외가 이지만 수신 응용 프로그램의 주 스레드에 의해 처리 되지 않습니다. 또한이 속성 반환 `true` 처리 되지 않은 예외를 수신 하는 관리 되지 않는 스레드가 관리 코드를 실행 합니다. 마지막으로,이 속성은 반환 `false` 스레드 풀 스레드 및 버전 1.0 및 1.1 이러한 스레드의에서 처리 되지 않은 예외를 catch 하 고 무시 하기 때문에 응용 프로그램에서 생성 하는 관리 되는 스레드에 대 한 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>