<Type Name="Int16" FullName="System.Int16">
  <TypeSignature Language="C#" Value="public struct Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int16 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int16&gt;, class System.IConvertible, class System.IEquatable`1&lt;int16&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int16" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int16&#xA;Implements IComparable, IComparable(Of Short), IConvertible, IEquatable(Of Short), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8edee-101">부호 있는 16비트 정수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-101">Represents a 16-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-102"><xref:System.Int16> 값 형식은 음수 32768에서 양수 32767 까지의 값을 가진 부호 있는 정수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-102">The <xref:System.Int16> value type represents signed integers with values ranging from negative 32768 through positive 32767.</span></span>  
  
 <span data-ttu-id="8edee-103">이 형식은 문자열 표현으로,이 형식의 인스턴스로 숫자의 문자열 표현을 변환 하 고이 형식의 인스턴스를 비교 하는이 형식의 인스턴스 값을 변환 하는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-103">This type provides methods to convert the value of an instance of this type to its string representation, to convert the string representation of a number to an instance of this type, and to compare instances of this type.</span></span>  
  
 <span data-ttu-id="8edee-104">멤버를 호출할 수도 있습니다는 <xref:System.Math> 다양 한 범위의 숫자의 몫과 정수 나누기의 나머지를 계산 합니다. 2의 최대값 또는 최소값 값을 판별한 절대 값을 가져오는 등의 숫자 작업을 수행 하는 클래스 정수, 숫자의 부호를 가져오고 숫자를 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-104">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
 <span data-ttu-id="8edee-105">형식 사양 코드로 값 형식의 문자열 표현을 제어 하는 방법에 대 한 정보를 참조 하십시오. [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-105">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8edee-106">이 유형의 모든 멤버는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-106">All members of this type are thread safe.</span></span> <span data-ttu-id="8edee-107">멤버 인스턴스 상태를 수정 하려면 표시 되는 실제로 새 값으로 초기화 하는 새 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-107">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="8edee-108">으로 다른 종류와이 형식의 인스턴스를 포함 하는 공유 변수를 읽고 쓰는 보호 해야 스레드로부터 안전을 보장 하려면 잠금에 의해.</span><span class="sxs-lookup"><span data-stu-id="8edee-108">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt16" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8edee-109">이 인스턴스를 지정된 개체나 다른 <see cref="T:System.Int16" /> 인스턴스와 비교하고 이 인스턴스의 값이 지정된 개체나 다른 <see cref="T:System.Int16" /> 인스턴스의 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-109">Compares this instance to a specified object or another <see cref="T:System.Int16" /> instance and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or the other <see cref="T:System.Int16" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.CompareTo(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(short value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8edee-110">비교할 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-110">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="8edee-111">이 인스턴스를 지정된 16비트 부호 있는 정수와 비교하고 이 인스턴스의 값이 지정된 16비트 부호 있는 정수보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-111">Compares this instance to a specified 16-bit signed integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="8edee-112">이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-112">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="8edee-113"><list type="table"><listheader><term> 반환 값</span><span class="sxs-lookup"><span data-stu-id="8edee-113"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="8edee-114"></term><description> 설명</span><span class="sxs-lookup"><span data-stu-id="8edee-114"></term><description> Description</span></span>  
  
 <span data-ttu-id="8edee-115"></description></listheader><item><term> 0보다 작음</span><span class="sxs-lookup"><span data-stu-id="8edee-115"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="8edee-116"></term><description> 이 인스턴스는 <paramref name="value" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-116"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="8edee-117"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="8edee-117"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="8edee-118"></term><description> 이 인스턴스는 <paramref name="value" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-118"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="8edee-119"></description></item><item><term> 0보다 큼</span><span class="sxs-lookup"><span data-stu-id="8edee-119"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="8edee-120"></term><description> 이 인스턴스는 <paramref name="value" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-120"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-121">이 메서드를 구현 하는 <xref:System.IComparable%601?displayProperty=nameWithType> 인터페이스 및 수행 보다 조금 더 나은 <xref:System.Int16.CompareTo%2A?displayProperty=nameWithType> 메서드 변환할 필요가 없기 때문에 `value` 매개 변수를 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-121">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int16.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="8edee-122">프로그래밍 언어에 따라 코딩할 수는 <xref:System.Int16.CompareTo%2A> 메서드 매개 변수 형식이 비트 수가 적은 보다 인스턴스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-122">Depending on your programming language, it might be possible to code a <xref:System.Int16.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="8edee-123">일부 프로그래밍 언어 매개 변수를 나타내는 형식으로 비트 수는 인스턴스와 암시적 확대 변환을 수행 하기 때문에 이것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-123">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="8edee-124">예를 들어 인스턴스 형식이 <xref:System.Int32> 매개 변수 형식이 고 <xref:System.Byte>합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-124">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="8edee-125">Microsoft C# 컴파일러는 매개 변수의 값을 나타내는 명령을 생성 한 <xref:System.Int32> 개체를 생성 합니다.는 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 의 값을 비교 하는 메서드는 <xref:System.Int32> 인스턴스 및 <xref:System.Int32> 매개 변수 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-125">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="8edee-126">해당 컴파일러에서 숫자 형식에 암시적으로 확대 변환을 수행 여부를 확인 하려면 해당 프로그래밍 언어의 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="8edee-126">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-127">다음 코드 예제에서는 제네릭 및 제네릭이 아닌 버전을 보여 줍니다.는 <xref:System.Int16.CompareTo%2A> 여러 값 및 참조 형식에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-127">The following code example demonstrates generic and nongeneric versions of the <xref:System.Int16.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Int16.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8edee-128">비교할 개체 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-128">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8edee-129">이 인스턴스를 지정된 개체와 비교하고 이 인스턴스의 값이 개체의 값보다 작은지, 같은지 또는 큰지를 나타내는 정수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-129">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the object.</span></span></summary>
        <returns><span data-ttu-id="8edee-130">이 인스턴스와 <paramref name="value" />의 상대 값을 나타내는 부호 있는 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-130">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="8edee-131"><list type="table"><listheader><term> 반환 값</span><span class="sxs-lookup"><span data-stu-id="8edee-131"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="8edee-132"></term><description> 설명</span><span class="sxs-lookup"><span data-stu-id="8edee-132"></term><description> Description</span></span>  
  
 <span data-ttu-id="8edee-133"></description></listheader><item><term> 0보다 작음</span><span class="sxs-lookup"><span data-stu-id="8edee-133"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="8edee-134"></term><description> 이 인스턴스는 <paramref name="value" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-134"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="8edee-135"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="8edee-135"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="8edee-136"></term><description> 이 인스턴스는 <paramref name="value" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-136"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="8edee-137"></description></item><item><term> 0보다 큼</span><span class="sxs-lookup"><span data-stu-id="8edee-137"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="8edee-138"></term><description> 이 인스턴스는 <paramref name="value" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-138"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="8edee-139">또는</span><span class="sxs-lookup"><span data-stu-id="8edee-139">-or-</span></span>  
  
 <span data-ttu-id="8edee-140"><paramref name="value" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-140"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-141"><xref:System.Int16>, 해당 값에 관계 없이 null 참조 정보 보다 큰 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-141">An <xref:System.Int16>, regardless of its value, is considered greater than a null reference.</span></span>  
  
 <span data-ttu-id="8edee-142">`value` 매개 변수 여야 `null` 또는 인스턴스의 <xref:System.Int16>, 그러지 않으면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-142">The `value` parameter must be `null` or an instance of <xref:System.Int16>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8edee-143"><paramref name="value" />이 <see cref="T:System.Int16" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-143"><paramref name="value" /> is not an <see cref="T:System.Int16" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8edee-144">이 인스턴스가 지정된 개체나 <see cref="T:System.Int16" />과 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-144">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int16" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (short obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Equals(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(short obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8edee-145">이 인스턴스와 비교할 <see cref="T:System.Int16" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-145">An <see cref="T:System.Int16" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8edee-146">이 인스턴스가 지정된 <see cref="T:System.Int16" /> 값과 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-146">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int16" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="8edee-147"><see langword="true" />가 이 인터페이스와 같은 값을 가지면 <paramref name="obj" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-147"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-148">이 메서드를 구현 하는 <xref:System.IEquatable%601?displayProperty=nameWithType> 인터페이스를 하 고 수행 보다 조금 더 나은 <xref:System.Int16.Equals%2A> 변환할 필요가 없기 때문에 `obj` 매개 변수를 개체로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-148">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int16.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="8edee-149">컴파일러 오버 로드 확인의 두 동작에는 명백한 차이 고려 될 수 있습니다 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-149">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int16.Equals(System.Int16)" /> method overloads.</span></span> <span data-ttu-id="8edee-150">경우 간에 암시적 변환이 <paramref name="obj" /> 인수 및 <see cref="T:System.Int16" /> 정의 및 인수 인수로 형식화 되지 않습니다는 <see cref="T:System.Object" />, 컴파일러는 암시적 변환 및 호출을 수행는 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-150">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int16.Equals(System.Int16)" /> method.</span></span> <span data-ttu-id="8edee-151">호출 그렇지 않은 경우는 <see cref="M:System.Int16.Equals(System.Object)" /> 메서드는 항상 반환 <see langword="false" /> 경우 해당 <paramref name="obj" /> 인수가 <see cref="T:System.Int16" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-151">Otherwise, they call the <see cref="M:System.Int16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int16" /> value.</span></span> <span data-ttu-id="8edee-152">다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-152">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="8edee-153">경우에 <see cref="T:System.Byte" /> 및 <see cref="T:System.SByte" /> 값을 반환 하는 첫 번째 비교 <see langword="true" /> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드를 두 번째 비교 반환하는반면<see langword="false" />컴파일러를 호출 하기 때문에 <see cref="M:System.Int16.Equals(System.Object)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-153">In the case of the <see cref="T:System.Byte" /> and <see cref="T:System.SByte" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int16.Equals(System.Int16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int16.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</para>
        </block>
        <altmember cref="M:System.Int16.Equals(System.Object)" />
        <altmember cref="Overload:System.Int16.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8edee-154">이 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-154">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8edee-155">이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-155">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="8edee-156"><see langword="true" />가 <paramref name="obj" />의 인스턴스이고 이 인스턴스의 값과 같으면 <see cref="T:System.Int16" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-156"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int16" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8edee-157">다음 코드 예제에서는 `Equals` 의 컨텍스트에서 `Int16`, 두 개의 짧은 값을 비교 하 고 반환 `true` 같은 값을 나타내는 경우 또는 `false` 일치 하지 않을 경우.</span><span class="sxs-lookup"><span data-stu-id="8edee-157">The following code example illustrates the use of `Equals` in the context of `Int16`, comparing two short values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int16_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int16_Equals/CPP/int16_equals.cpp#1)]
 [!code-csharp[Int16_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int16_Equals/CS/int16_equals.cs#1)]
 [!code-vb[Int16_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int16_Equals/VB/int16_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="8edee-158">컴파일러 오버 로드 확인의 두 동작에는 명백한 차이 고려 될 수 있습니다 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-158">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int16.Equals(System.Int16)" /> method overloads.</span></span> <span data-ttu-id="8edee-159">경우 간에 암시적 변환이 <paramref name="obj" /> 인수 및 <see cref="T:System.Int16" /> 정의 및 인수 인수로 형식화 되지 않습니다는 <see cref="T:System.Object" />, 컴파일러는 암시적 변환 및 호출을 수행는 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-159">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int16.Equals(System.Int16)" /> method.</span></span> <span data-ttu-id="8edee-160">호출 그렇지 않은 경우는 <see cref="M:System.Int16.Equals(System.Object)" /> 메서드는 항상 반환 <see langword="false" /> 경우 해당 <paramref name="obj" /> 인수가 <see cref="T:System.Int16" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-160">Otherwise, they call the <see cref="M:System.Int16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int16" /> value.</span></span> <span data-ttu-id="8edee-161">다음 예제에서는 두 개의 메서드 오버 로드 간의 동작 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-161">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="8edee-162">경우에 <see cref="T:System.Byte" /> 및 <see cref="T:System.SByte" /> 값을 반환 하는 첫 번째 비교 <see langword="true" /> 컴파일러가 확대 변환 및 호출에 자동으로 수행 하기 때문에 <see cref="M:System.Int16.Equals(System.Int16)" /> 메서드를 두 번째 비교 반환하는반면<see langword="false" />컴파일러를 호출 하기 때문에 <see cref="M:System.Int16.Equals(System.Object)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-162">In the case of the <see cref="T:System.Byte" /> and <see cref="T:System.SByte" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int16.Equals(System.Int16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int16.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8edee-163">이 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-163">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="8edee-164">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-164">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8edee-165"><see cref="T:System.TypeCode" /> 값 형식에 대한 <see cref="T:System.Int16" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-165">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-166">열거형 상수인 <see cref="F:System.TypeCode.Int16" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-166">The enumerated constant, <see cref="F:System.TypeCode.Int16" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const short MaxValue = 32767;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 MaxValue = int16(32767)" />
      <MemberSignature Language="DocId" Value="F:System.Int16.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Short  = 32767" />
      <MemberSignature Language="C++ CLI" Value="public: short MaxValue = 32767;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>32767</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8edee-167"><see cref="T:System.Int16" />의 최대값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-167">Represents the largest possible value of an <see cref="T:System.Int16" />.</span></span> <span data-ttu-id="8edee-168">이 필드는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-168">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-169">이 상수의 값은 32767; 즉, 16 진수 0x7FFF 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-169">The value of this constant is 32767; that is, hexadecimal 0x7FFF.</span></span>  
  
 <span data-ttu-id="8edee-170"><xref:System.Int16.MaxValue> 속성은 일반적으로 방지 하는 데 사용 됩니다는 <xref:System.OverflowException> 상한이 더 높은 인 숫자 형식에서 변환 하는 경우 (같은 <xref:System.UInt16> 또는 <xref:System.Int32>)에 <xref:System.Int16>합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-170">The <xref:System.Int16.MaxValue> property is typically used to prevent an <xref:System.OverflowException> when converting from a numeric type with a greater upper range (such as a <xref:System.UInt16> or a <xref:System.Int32>) to an <xref:System.Int16>.</span></span> <span data-ttu-id="8edee-171">이 예제에서는이 사용법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-171">The example illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-172">다음 예제에서는 <xref:System.Int16.MaxValue> 를 방지 하려면 속성은 <xref:System.OverflowException> 변환할 때는 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-172">The following example uses the <xref:System.Int16.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Int16.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.MaxValue/cpp/minvalue.cpp#1)]
 [!code-csharp[System.Int16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.Int16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int16.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const short MinValue = -32768;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 MinValue = int16(-32768)" />
      <MemberSignature Language="DocId" Value="F:System.Int16.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Short  = -32768" />
      <MemberSignature Language="C++ CLI" Value="public: short MinValue = -32768;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>-32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8edee-173"><see cref="T:System.Int16" />의 가능한 최소값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-173">Represents the smallest possible value of <see cref="T:System.Int16" />.</span></span> <span data-ttu-id="8edee-174">이 필드는 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-174">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-175">이 상수의 값은-32768; 즉, 16 진수 0x8000입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-175">The value of this constant is -32768; that is, hexadecimal 0x8000.</span></span>  
  
 <span data-ttu-id="8edee-176"><xref:System.Int16.MinValue> 속성은 일반적으로 방지 하는 데 사용 됩니다는 <xref:System.OverflowException> 더욱 더 낮은 범위를 가진 숫자 형식에서 변환 하는 경우 (같은 <xref:System.Int32> 또는 <xref:System.Int64>)에 <xref:System.Int16>합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-176">The <xref:System.Int16.MinValue> property is typically used to prevent an <xref:System.OverflowException> when converting from a numeric type with a greater lower range (such as an <xref:System.Int32> or an <xref:System.Int64>) to an <xref:System.Int16>.</span></span> <span data-ttu-id="8edee-177">이 예제에서는이 사용법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-177">The example illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-178">다음 예제에서는 <xref:System.Int16.MinValue> 를 방지 하려면 속성은 <xref:System.OverflowException> 변환할 때는 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-178">The following example uses the <xref:System.Int16.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Int16.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.MaxValue/cpp/minvalue.cpp#1)]
 [!code-csharp[System.Int16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.Int16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int16.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8edee-179">숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-179">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8edee-180">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-180">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="8edee-181">숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-181">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8edee-182"><paramref name="s" />에 있는 수에 해당하는 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-182">A 16-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-183">`s` 매개 변수 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-183">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="8edee-184">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="8edee-184">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="8edee-185">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-185">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8edee-186">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-186">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8edee-187">요소</span><span class="sxs-lookup"><span data-stu-id="8edee-187">Element</span></span>|<span data-ttu-id="8edee-188">설명</span><span class="sxs-lookup"><span data-stu-id="8edee-188">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8edee-189">*ws*</span><span class="sxs-lookup"><span data-stu-id="8edee-189">*ws*</span></span>|<span data-ttu-id="8edee-190">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-190">Optional white space.</span></span>|  
|<span data-ttu-id="8edee-191">*sign*</span><span class="sxs-lookup"><span data-stu-id="8edee-191">*sign*</span></span>|<span data-ttu-id="8edee-192">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-192">An optional sign.</span></span>|  
|<span data-ttu-id="8edee-193">*digits*</span><span class="sxs-lookup"><span data-stu-id="8edee-193">*digits*</span></span>|<span data-ttu-id="8edee-194">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-194">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="8edee-195">`s` 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-195">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8edee-196">정수 값의 10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-196">In addition to the integer value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="8edee-197">에 나타날 수 있는 스타일 요소를 명시적으로 정의 하려면 `s`를 사용 하 여는 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 또는 <xref:System.Int16.Parse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-197">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int16.Parse%2A> method.</span></span>  
  
 <span data-ttu-id="8edee-198">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 현재 시스템 문화권에 따라 초기화 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-198">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="8edee-199">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-199">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="8edee-200">다른 문화권의 서식 지정 정보를 사용 하 여 문자열의 구문을 분석을 사용 하 여는 <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 또는 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-200">To parse a string using the formatting information of some other culture, use the <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-201">다음 예제에서는 문자열 값을 사용 하 여 16 비트 부호 있는 정수 값으로 변환 하는 <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-201">The following example demonstrates how to convert a string value into a 16-bit signed integer value using the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8edee-202">결과 정수 값 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-202">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int16.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int16.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#1)]
 [!code-vb[System.Int16.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8edee-203"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-203"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8edee-204"><paramref name="s" />의 형식이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-204"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8edee-205"><paramref name="s" />가 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-205"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8edee-206">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-206">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="8edee-207"><c>s</c>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-207">A bitwise combination of the enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="8edee-208">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-208">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="8edee-209">지정된 스타일로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-209">Converts the string representation of a number in a specified style to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8edee-210"><paramref name="s" />에 지정된 수에 해당하는 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-210">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-211">`style` 매개 변수 (예: 공백 또는 부호 기호)에 사용할 수 있는 스타일 요소를 정의 고 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-211">The `style` parameter defines the style elements (such as white space or a sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8edee-212">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-212">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="8edee-213">값에 따라 `style`, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-213">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8edee-214">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="8edee-214">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="8edee-215">또는 if `style` 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="8edee-215">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="8edee-216">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="8edee-216">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="8edee-217">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-217">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8edee-218">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-218">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8edee-219">요소</span><span class="sxs-lookup"><span data-stu-id="8edee-219">Element</span></span>|<span data-ttu-id="8edee-220">설명</span><span class="sxs-lookup"><span data-stu-id="8edee-220">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8edee-221">*ws*</span><span class="sxs-lookup"><span data-stu-id="8edee-221">*ws*</span></span>|<span data-ttu-id="8edee-222">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-222">Optional white space.</span></span> <span data-ttu-id="8edee-223">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 플래그를 또는 끝날 때 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-223">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8edee-224">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-224">A culture-specific currency symbol.</span></span> <span data-ttu-id="8edee-225">문자열에 해당 위치는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 현재 문화권의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-225">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="8edee-226">현재 문화권의 통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-226">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-227">*sign*</span><span class="sxs-lookup"><span data-stu-id="8edee-227">*sign*</span></span>|<span data-ttu-id="8edee-228">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-228">An optional sign.</span></span> <span data-ttu-id="8edee-229">부호의 시작 부분에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-229">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8edee-230">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-230">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-231">*digits*</span><span class="sxs-lookup"><span data-stu-id="8edee-231">*digits*</span></span>|<span data-ttu-id="8edee-232">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-232">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="8edee-233">*,*</span><span class="sxs-lookup"><span data-stu-id="8edee-233">*,*</span></span>|<span data-ttu-id="8edee-234">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-234">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="8edee-235">현재 문화권의 천 단위 구분 기호에 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-235">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-236">*.*</span><span class="sxs-lookup"><span data-stu-id="8edee-236">*.*</span></span>|<span data-ttu-id="8edee-237">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-237">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8edee-238">에 현재 문화권의 소수점 기호가 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-238">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-239">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8edee-239">*fractional_digits*</span></span>|<span data-ttu-id="8edee-240">0 숫자의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-240">A sequence of the 0 digit.</span></span> <span data-ttu-id="8edee-241">소수 자릿수에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-241">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8edee-242">0이 아닌 모든 숫자에 표시 되 면 *소수 자릿수*, 메서드에서 throw 된 <xref:System.OverflowException>합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-242">If any digit other than 0 appears in *fractional_digits*, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="8edee-243">*e*</span><span class="sxs-lookup"><span data-stu-id="8edee-243">*e*</span></span>|<span data-ttu-id="8edee-244">'E' 또는 'E' 문자를 나타내는 `s` 지 수 표기법으로 표현 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-244">The 'e' or 'E' character, which indicates that `s` can be represented in exponential notation.</span></span> <span data-ttu-id="8edee-245">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-245">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8edee-246">그러나는 `s` 매개 변수를 나타내야의 범위에 속하는 숫자는 <xref:System.Int16> 데이터 입력 하 고 0이 아닌 소수 부분을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-246">However, the `s` parameter must represent a number in the range of the <xref:System.Int16> data type and cannot have a non-zero fractional component.</span></span>|  
|<span data-ttu-id="8edee-247">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8edee-247">*hexdigits*</span></span>|<span data-ttu-id="8edee-248">16 진수 숫자 0 ~ f 또는 0-6.</span><span class="sxs-lookup"><span data-stu-id="8edee-248">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="8edee-249">문자열 *자리* 만 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 스타일) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-249">A string with *digits* only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="8edee-250">나머지 <xref:System.Globalization.NumberStyles> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-250">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="8edee-251">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-251">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8edee-252">비 복합 NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="8edee-252">Non-composite NumberStyles values</span></span>|<span data-ttu-id="8edee-253">S에서 숫자 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="8edee-253">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="8edee-254">10 진수 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-254">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="8edee-255">*.*</span><span class="sxs-lookup"><span data-stu-id="8edee-255">The *.*</span></span> <span data-ttu-id="8edee-256">및 *소수 자릿수* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-256">and *fractional_digits* elements.</span></span> <span data-ttu-id="8edee-257">그러나 *소수 자릿수* 0 숫자가 하나 이상 구성 되어야 합니다 또는 <xref:System.OverflowException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-257">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="8edee-258">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-258">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="8edee-259">*ws* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-259">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="8edee-260">*ws* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-260">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="8edee-261">기호 앞에 올 수 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-261">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="8edee-262">뒤에 기호 표시 될 수 있습니다 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-262">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="8edee-263">*기호* 숫자 값이 들어 괄호 안에 형식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-263">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="8edee-264">*,* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-264">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="8edee-265">* $ * 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-265">The *$* element.</span></span>|  
  
 <span data-ttu-id="8edee-266">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 접두사 없이 16 진수 값의 문자열 표현 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-266">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be the string representation of a hexadecimal value without a prefix.</span></span> <span data-ttu-id="8edee-267">예를 들어 "9AF3" 성공적으로 구문 분석 하지만 "0x9AF3" 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-267">For example, "9AF3" parses successfully, but "0x9AF3" does not.</span></span> <span data-ttu-id="8edee-268">다른 플래그만에 있을 수 있는 `style` 는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-268">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8edee-269">(의 <xref:System.Globalization.NumberStyles> 열거형에는 복합 숫자 스타일 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 공백 플래그가 모두를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="8edee-269">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="8edee-270">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 현재 시스템 문화권에 따라 초기화 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-270">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="8edee-271">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-271">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8edee-272">구문 분석을 `s` 특정 문화권의 서식 지정 정보를 사용 하 여 호출 된 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-272">To parse `s` using the formatting information of a specific culture, call the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-273">다음 예제에서는 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 의 문자열 표현을 구문 분석할 메서드의 <xref:System.Int16> EN-US 문화권을 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-273">The following example uses the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of <xref:System.Int16> values using the en-US culture.</span></span>  
  
 [!code-cpp[System.Int16.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int16.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int16.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8edee-274"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-274"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8edee-275"><paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-275"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="8edee-276">또는</span><span class="sxs-lookup"><span data-stu-id="8edee-276">-or-</span></span>  
  
 <span data-ttu-id="8edee-277"><paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 및 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 값의 조합이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-277"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8edee-278"><paramref name="s" />의 형식이 <paramref name="style" />과 호환되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-278"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8edee-279"><paramref name="s" />가 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-279"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="8edee-280">또는</span><span class="sxs-lookup"><span data-stu-id="8edee-280">-or-</span></span>  
  
 <span data-ttu-id="8edee-281"><paramref name="s" />에 0이 아닌 소수 자릿수가 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-281"><paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8edee-282">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-282">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="8edee-283"><c>s</c>에 대한 문화권별 서식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-283">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="8edee-284">지정된 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-284">Converts the string representation of a number in a specified culture-specific format to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8edee-285"><paramref name="s" />에 지정된 수에 해당하는 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-285">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-286">`s` 매개 변수 형식의 숫자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-286">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="8edee-287">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="8edee-287">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="8edee-288">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-288">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8edee-289">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-289">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8edee-290">요소</span><span class="sxs-lookup"><span data-stu-id="8edee-290">Element</span></span>|<span data-ttu-id="8edee-291">설명</span><span class="sxs-lookup"><span data-stu-id="8edee-291">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8edee-292">ws</span><span class="sxs-lookup"><span data-stu-id="8edee-292">ws</span></span>|<span data-ttu-id="8edee-293">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-293">An optional white space.</span></span>|  
|<span data-ttu-id="8edee-294">sign</span><span class="sxs-lookup"><span data-stu-id="8edee-294">sign</span></span>|<span data-ttu-id="8edee-295">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-295">An optional sign.</span></span>|  
|<span data-ttu-id="8edee-296">digits</span><span class="sxs-lookup"><span data-stu-id="8edee-296">digits</span></span>|<span data-ttu-id="8edee-297">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-297">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="8edee-298">`s` 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-298">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8edee-299">에 선행 및 후행 공백을 선행 기호 함께 10 진수 숫자, 이외에 허용 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-299">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed in `s`.</span></span> <span data-ttu-id="8edee-300">명시적으로 함께 culture 별 서식 지정 정보에 포함 될 수 있는 스타일 요소를 정의 하려면 `s`를 사용 하 여는 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-300">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8edee-301">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 가 가져오는 구현은 <xref:System.Globalization.NumberFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-301">The `provider` parameter is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="8edee-302"><xref:System.Globalization.NumberFormatInfo> 의 형식에 대 한 문화권별 정보를 제공 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-302">The <xref:System.Globalization.NumberFormatInfo> provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8edee-303">경우 `provider` 은 `null`, <xref:System.Globalization.NumberFormatInfo> 현재 culture가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-303">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-304">다음 예제에서는의 문자열 표현을 구문 분석 <xref:System.Int16> 있는 값은 <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-304">The following example parses string representations of <xref:System.Int16> values with the <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Int16.Parse#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse4.cpp#4)]
 [!code-csharp[System.Int16.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#4)]
 [!code-vb[System.Int16.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8edee-305"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-305"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8edee-306"><paramref name="s" />의 형식이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-306"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8edee-307"><paramref name="s" />가 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-307"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.ToString" />
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Short" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8edee-308">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-308">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="8edee-309"><c>s</c>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-309">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="8edee-310">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-310">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8edee-311"><c>s</c>에 대한 문화권별 서식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-311">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="8edee-312">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-312">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8edee-313"><paramref name="s" />에 지정된 수에 해당하는 16비트 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-313">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-314">`style` 매개 변수 (예: 공백 또는 양수 부호)에 사용할 수 있는 스타일 요소를 정의 고 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-314">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8edee-315">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-315">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="8edee-316">값에 따라 `style`, `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-316">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8edee-317">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="8edee-317">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="8edee-318">또는 if `style` 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="8edee-318">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="8edee-319">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="8edee-319">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="8edee-320">대괄호 ([ 및 ]) 안의 요소는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-320">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8edee-321">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-321">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8edee-322">요소</span><span class="sxs-lookup"><span data-stu-id="8edee-322">Element</span></span>|<span data-ttu-id="8edee-323">설명</span><span class="sxs-lookup"><span data-stu-id="8edee-323">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8edee-324">*ws*</span><span class="sxs-lookup"><span data-stu-id="8edee-324">*ws*</span></span>|<span data-ttu-id="8edee-325">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-325">Optional white space.</span></span> <span data-ttu-id="8edee-326">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 플래그를 또는 끝날 때 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-326">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8edee-327">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-327">A culture-specific currency symbol.</span></span> <span data-ttu-id="8edee-328">문자열에 해당 위치는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 현재 문화권의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-328">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="8edee-329">현재 문화권의 통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-329">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-330">*sign*</span><span class="sxs-lookup"><span data-stu-id="8edee-330">*sign*</span></span>|<span data-ttu-id="8edee-331">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-331">An optional sign.</span></span> <span data-ttu-id="8edee-332">부호의 시작 부분에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 의 끝에 있고, 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-332">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8edee-333">괄호를 사용할 수 있습니다 `s` 경우 음수 값을 나타내는 데 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-333">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-334">*digits*</span><span class="sxs-lookup"><span data-stu-id="8edee-334">*digits*</span></span>|<span data-ttu-id="8edee-335">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-335">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="8edee-336">*,*</span><span class="sxs-lookup"><span data-stu-id="8edee-336">*,*</span></span>|<span data-ttu-id="8edee-337">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-337">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="8edee-338">현재 문화권의 천 단위 구분 기호에 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-338">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-339">*.*</span><span class="sxs-lookup"><span data-stu-id="8edee-339">*.*</span></span>|<span data-ttu-id="8edee-340">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-340">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8edee-341">에 현재 문화권의 소수점 기호가 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-341">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-342">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8edee-342">*fractional_digits*</span></span>|<span data-ttu-id="8edee-343">0 숫자의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-343">A sequence of the 0 digit.</span></span> <span data-ttu-id="8edee-344">소수 자릿수에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-344">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8edee-345">0이 아닌 모든 숫자에 표시 되 면 *소수 자릿수*, 메서드에서 throw 된 <xref:System.OverflowException>합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-345">If any digit other than 0 appears in *fractional_digits*, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="8edee-346">*e*</span><span class="sxs-lookup"><span data-stu-id="8edee-346">*e*</span></span>|<span data-ttu-id="8edee-347">'E' 또는 'E' 문자를 나타내는 `s` 지 수 표기법으로 표현 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-347">The 'e' or 'E' character, which indicates that `s` can be represented in exponential notation.</span></span> <span data-ttu-id="8edee-348">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-348">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8edee-349">그러나는 `s` 매개 변수를 나타내야의 범위에 속하는 숫자는 <xref:System.Int16> 데이터 입력 하 고 0이 아닌 소수 부분을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-349">However, the `s` parameter must represent a number in the range of the <xref:System.Int16> data type and cannot have a non-zero fractional component.</span></span>|  
|<span data-ttu-id="8edee-350">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8edee-350">*hexdigits*</span></span>|<span data-ttu-id="8edee-351">16 진수 숫자 0 ~ f 또는 0-6.</span><span class="sxs-lookup"><span data-stu-id="8edee-351">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="8edee-352">문자열 *자리* 만 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 스타일) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-352">A string with *digits* only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="8edee-353">나머지 <xref:System.Globalization.NumberStyles> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-353">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="8edee-354">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-354">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8edee-355">비 복합 NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="8edee-355">Non-composite NumberStyles values</span></span>|<span data-ttu-id="8edee-356">S에서 숫자 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="8edee-356">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="8edee-357">10 진수 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-357">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="8edee-358">*.*</span><span class="sxs-lookup"><span data-stu-id="8edee-358">The *.*</span></span> <span data-ttu-id="8edee-359">및 *소수 자릿수* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-359">and *fractional_digits* elements.</span></span> <span data-ttu-id="8edee-360">그러나 *소수 자릿수* 0 숫자가 하나 이상 구성 되어야 합니다 또는 <xref:System.OverflowException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-360">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="8edee-361">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-361">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="8edee-362">*ws* 의 시작 부분에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-362">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="8edee-363">*ws* 의 끝에 요소 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-363">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="8edee-364">기호 앞에 올 수 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-364">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="8edee-365">뒤에 기호 표시 될 수 있습니다 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-365">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="8edee-366">*기호* 숫자 값이 들어 괄호 안에 형식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-366">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="8edee-367">*,* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-367">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="8edee-368">* $ * 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-368">The *$* element.</span></span>|  
  
 <span data-ttu-id="8edee-369">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 접두사 없이 16 진수 값의 문자열 표현 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-369">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be the string representation of a hexadecimal value without a prefix.</span></span> <span data-ttu-id="8edee-370">예를 들어 "9AF3" 성공적으로 구문 분석 하지만 "0x9AF3" 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-370">For example, "9AF3" parses successfully, but "0x9AF3" does not..</span></span> <span data-ttu-id="8edee-371">다른 플래그만에 있을 수 있는 `style` 는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-371">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8edee-372">(의 <xref:System.Globalization.NumberStyles> 열거형에는 복합 숫자 스타일 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 공백 플래그가 모두를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="8edee-372">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="8edee-373">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현 인 <xref:System.IFormatProvider.GetFormat%2A> 메서드를 가져옵니다는 <xref:System.Globalization.NumberFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-373">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="8edee-374"><xref:System.Globalization.NumberFormatInfo> 개체의 형식에 대 한 문화권별 정보를 제공 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-374">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8edee-375">경우 `provider` 은 `null`, <xref:System.Globalization.NumberFormatInfo> 개체가 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-375">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-376">다음 예제에서는 다양 한 `style` 및 `provider` 의 문자열 표현을 구문 분석에 매개 변수 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-376">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int16> values.</span></span>  
  
 [!code-cpp[System.Int16.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int16.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#3)]
 [!code-vb[System.Int16.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8edee-377"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-377"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8edee-378"><paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-378"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="8edee-379">또는</span><span class="sxs-lookup"><span data-stu-id="8edee-379">-or-</span></span>  
  
 <span data-ttu-id="8edee-380"><paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 및 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 값의 조합이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-380"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8edee-381"><paramref name="s" />의 형식이 <paramref name="style" />과 호환되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-381"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8edee-382"><paramref name="s" />가 <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-382"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="8edee-383">또는</span><span class="sxs-lookup"><span data-stu-id="8edee-383">-or-</span></span>  
  
 <span data-ttu-id="8edee-384"><paramref name="s" />에 0이 아닌 소수 자릿수가 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-384"><paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-385">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-385">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-386">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-386">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="8edee-387">현재 인스턴스의 값이 0이 아니면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-387"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-388">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-388">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-389"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-389">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-390">메서드 대신 호출 하는 것은 <xref:System.Convert.ToBoolean%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-390">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-391">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-391">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-392">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-392">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-393"><see cref="T:System.Byte" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-393">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-394">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-394">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-395"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-395">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-396">메서드 대신 호출 하는 것은 <xref:System.Convert.ToByte%28System.Int16%29?displayProperty=nameWithType> 메서드</span><span class="sxs-lookup"><span data-stu-id="8edee-396">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int16%29?displayProperty=nameWithType> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-397">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-397">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-398">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-398">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-399"><see cref="T:System.Char" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-399">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-400">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-400">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-401"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-401">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-402">메서드 대신 호출 하는 것은 <xref:System.Convert.ToChar%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-402">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-403">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-403">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-404">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-404">This conversion is not supported.</span></span> <span data-ttu-id="8edee-405">이 메서드를 사용하려고 하면 <see cref="T:System.InvalidCastException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-405">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-406">이 변환은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-406">This conversion is not supported.</span></span> <span data-ttu-id="8edee-407">값이 반환되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-407">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8edee-408">모든 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-408">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-409">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-409">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-410">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-410">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-411"><see cref="T:System.Decimal" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-411">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-412">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-412">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-413"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-413">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-414">메서드 대신 호출 하는 것은 <xref:System.Convert.ToDecimal%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-414">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-415">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-415">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-416">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-416">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-417"><see cref="T:System.Double" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-417">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-418">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-418">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-419"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-419">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-420">메서드 대신 호출 하는 것은 <xref:System.Convert.ToDouble%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-420">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-421">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-421">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-422">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-422">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-423">변경되지 않은 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-423">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-424">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-424">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-425"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-425">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-426">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-426">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-427">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-427">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-428"><see cref="T:System.Int32" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-428">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-429">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-429">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-430"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-430">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-431">메서드 대신 호출 하는 것은 <xref:System.Convert.ToInt32%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-431">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-432">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-432">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-433">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-433">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-434"><see cref="T:System.Int64" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-434">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-435">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-435">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-436"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-436">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-437">메서드 대신 호출 하는 것은 <xref:System.Convert.ToInt64%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-437">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-438">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-438">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-439">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-439">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-440"><see cref="T:System.SByte" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-440">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-441">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-441">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-442"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-442">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-443">메서드 대신 호출 하는 것은 <xref:System.Convert.ToSByte%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-443">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-444">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-444">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-445">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-445">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-446"><see cref="T:System.Single" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-446">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-447">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-447">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-448"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-448">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-449">메서드 대신 호출 하는 것은 <xref:System.Convert.ToSingle%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-449">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8edee-450">이 <see cref="T:System.Int16" /> 값을 변환할 대상 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-450">The type to which to convert this <see cref="T:System.Int16" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="8edee-451">반환된 값의 형식에 대한 정보를 제공하는 <see cref="T:System.IFormatProvider" /> 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-451">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="8edee-452">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-452">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-453"><paramref name="type" />으로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-453">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-454">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-454">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-455"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-455">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-456">메서드 대신 호출 하는 것은 `static` (`Shared` Visual basic에서) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-456">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-457">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-457">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-458">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-458">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-459">변경되지 않은 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-459">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-460">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-460">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-461"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-461">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-462">메서드 대신 호출 하는 것은 <xref:System.Convert.ToUInt16%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-462">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-463">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-463">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-464">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-464">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-465"><see cref="T:System.UInt32" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-465">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-466">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-466">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-467"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-467">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-468">메서드 대신 호출 하는 것은 <xref:System.Convert.ToUInt32%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-468">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-469">이 매개 변수는 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-469">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8edee-470">이 멤버에 대한 설명은 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-470">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8edee-471"><see cref="T:System.UInt64" />로 변환된 현재 인스턴스의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-471">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-472">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8edee-472">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edee-473"><xref:System.Int16> 인스턴스가 <xref:System.IConvertible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-473">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8edee-474">메서드 대신 호출 하는 것은 <xref:System.Convert.ToUInt64%28System.Int16%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-474">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8edee-475">이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-475">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8edee-476">이 인스턴스의 숫자 값을 해당하는 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-476">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="8edee-477">음수 부호(값이 음수일 경우)와 0부터 9 사이의 숫자(앞에 오는 0은 사용하지 않음)들로 구성된 이 인스턴스의 값에 대한 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-477">The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-478"><xref:System.Int16.ToString> 메서드 형식을 <xref:System.Int16> 기본값 ("G" 또는 일반)에서 값을 사용 하 여 형식은 <xref:System.Globalization.NumberFormatInfo> 현재 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-478">The <xref:System.Int16.ToString> method formats an <xref:System.Int16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="8edee-479">다른 형식이 나 문화권을 지정 하려는 경우 사용의 다른 오버 로드는 <xref:System.Int16.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="8edee-479">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8edee-480">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="8edee-480">To use format</span></span>|<span data-ttu-id="8edee-481">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="8edee-481">For culture</span></span>|<span data-ttu-id="8edee-482">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="8edee-482">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8edee-483">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-483">Default ("G") format</span></span>|<span data-ttu-id="8edee-484">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-484">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8edee-485">특정 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-485">A specific format</span></span>|<span data-ttu-id="8edee-486">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-486">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
|<span data-ttu-id="8edee-487">특정 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-487">A specific format</span></span>|<span data-ttu-id="8edee-488">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-488">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="8edee-489">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-489">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8edee-490">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-490">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="8edee-491">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-491">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-492">다음 예제에서는 <xref:System.Int16.ToString> 배열을 표시 하는 메서드 <xref:System.Int16> 값을 콘솔.</span><span class="sxs-lookup"><span data-stu-id="8edee-492">The following example uses the <xref:System.Int16.ToString> method to display an array of <xref:System.Int16> values to the console.</span></span>  
  
 [!code-csharp[System.Int16.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Int16.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8edee-493">문화권별 형식 지정 정보를 제공하는 <see cref="T:System.IFormatProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-493">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8edee-494">지정된 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-494">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="8edee-495">이 인스턴스의 값을 <paramref name="provider" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-495">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-496"><xref:System.Int16.ToString%28System.IFormatProvider%29> 메서드 형식을 <xref:System.Int16> 기본값 ("G" 또는 일반)에서 값을 사용 하 여 형식은 <xref:System.Globalization.NumberFormatInfo> 지정된 된 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-496">The <xref:System.Int16.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="8edee-497">다른 형식이 나 현재 문화권을 지정 하려는 경우 사용의 다른 오버 로드는 <xref:System.Int16.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="8edee-497">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8edee-498">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="8edee-498">To use format</span></span>|<span data-ttu-id="8edee-499">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="8edee-499">For culture</span></span>|<span data-ttu-id="8edee-500">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="8edee-500">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8edee-501">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-501">Default ("G") format</span></span>|<span data-ttu-id="8edee-502">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-502">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="8edee-503">특정 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-503">A specific format</span></span>|<span data-ttu-id="8edee-504">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-504">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
|<span data-ttu-id="8edee-505">특정 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-505">A specific format</span></span>|<span data-ttu-id="8edee-506">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-506">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="8edee-507">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-507">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8edee-508">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-508">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="8edee-509">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-509">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="8edee-510">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현 인 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-510">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="8edee-511">일반적으로 `provider` 는 <xref:System.Globalization.NumberFormatInfo> 개체 또는 <xref:System.Globalization.CultureInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-511">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="8edee-512"><xref:System.Globalization.NumberFormatInfo> 개체 형식에 대 한이 메서드에서 반환 된 문자열의 문화권 관련 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-512">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="8edee-513">경우 `provider` 은 `null`로 포맷 된이 인스턴스는 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-513">If `provider` is `null`, this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-514">다음 예제에서는 배열을 반복 <xref:System.Int16> 값을 호출 하 여 각각의 콘솔에 표시 된 <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 서로 다른 공급자로 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-514">The following example iterates an array of <xref:System.Int16> values and displays each of them to the console by calling the <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method with different format providers.</span></span> <span data-ttu-id="8edee-515">각각에 대해 생성 된 형식이 지정 된 문자열 기본 "G" 형식 지정자로 정의 되는 형식은 단순 하므로 <xref:System.Int16> 값의 값에 관계 없이 동일는 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-515">Because of the simple formatting defined by the default "G" format specifier, the formatted strings produced for each <xref:System.Int16> value are identical regardless of the value of the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Int16.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#2)]
 [!code-vb[System.Int16.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8edee-516">숫자 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-516">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="8edee-517">지정된 형식을 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-517">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="8edee-518">이 인스턴스의 값을 <paramref name="format" />에 지정된 내용에 따라 나타낸 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-518">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-519"><xref:System.Int16.ToString%28System.String%29> 메서드 형식을 <xref:System.Int16> 를 사용 하 여 지정 된 형식에서 값을 <xref:System.Globalization.NumberFormatInfo> 현재 문화권의 규칙을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-519">The <xref:System.Int16.ToString%28System.String%29> method formats an <xref:System.Int16> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="8edee-520">기본값 ("G" 또는 일반)을 사용 하려는 경우 다른 문화권이 지정, 다른 오버 로드를 사용 하거나 형식는 <xref:System.Int16.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="8edee-520">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8edee-521">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="8edee-521">To use format</span></span>|<span data-ttu-id="8edee-522">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="8edee-522">For culture</span></span>|<span data-ttu-id="8edee-523">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="8edee-523">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8edee-524">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-524">Default ("G") format</span></span>|<span data-ttu-id="8edee-525">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-525">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="8edee-526">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-526">Default ("G") format</span></span>|<span data-ttu-id="8edee-527">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-527">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8edee-528">특정 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-528">A specific format</span></span>|<span data-ttu-id="8edee-529">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-529">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="8edee-530">`format` 표준 또는 사용자 지정 숫자 형식 문자열 매개 변수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-530">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="8edee-531">모든 사용자 지정 숫자 서식 문자 "R" (또는 "r") 이외의 모든 표준 숫자 형식 문자열은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-531">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="8edee-532">경우 `format` 은 `null` 이거나 빈 문자열이 면 반환 값이 인스턴스의 형식은 일반 숫자 형식 지정자 ("G")로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-532">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="8edee-533">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-533">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8edee-534">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-534">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="8edee-535">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-535">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="8edee-536">이 인스턴스의 반환 값으로 지정 되는 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-536">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-537">다음 예제에서는 두 개의 <xref:System.Int16> 값을 각 지원 되는 표준 형식 문자열 및 몇 가지 사용자 지정 형식 문자열을 사용 하 여 콘솔에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-537">The following example initializes two <xref:System.Int16> values and displays them to the console using each of the supported standard format strings and several custom format strings.</span></span> <span data-ttu-id="8edee-538">이 예제는 현재 문화권이 EN-US 상태로 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-538">The example is run with en-US as the current culture.</span></span>  
  
 [!code-csharp[System.Int16.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Int16.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8edee-539">숫자 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-539">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="8edee-540">문화권별 서식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-540">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8edee-541">지정된 형식 및 문화권별 형식 정보를 사용하여 이 인스턴스의 숫자 값을 해당 문자열 표현으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-541">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="8edee-542"><paramref name="format" /> 및 <paramref name="provider" />로 지정된 이 인스턴스 값의 문자열 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-542">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-543"><xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29> 메서드 형식을 <xref:System.Int16> 값을 사용 하 여 지정 된 형식에서 <xref:System.Globalization.NumberFormatInfo> 지정된 된 문화권의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-543">The <xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int16> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="8edee-544">다른 오버 로드를 사용 하 여 기본 형식 또는 문화권 설정을 사용 하려는 경우는 <xref:System.Int16.ToString%2A> 다음과 같이 메서드:</span><span class="sxs-lookup"><span data-stu-id="8edee-544">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8edee-545">형식을 사용 하려면</span><span class="sxs-lookup"><span data-stu-id="8edee-545">To use format</span></span>|<span data-ttu-id="8edee-546">문화권에 대 한</span><span class="sxs-lookup"><span data-stu-id="8edee-546">For culture</span></span>|<span data-ttu-id="8edee-547">오버 로드를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="8edee-547">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8edee-548">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-548">Default ("G") format</span></span>|<span data-ttu-id="8edee-549">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-549">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="8edee-550">기본 ("G") 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-550">Default ("G") format</span></span>|<span data-ttu-id="8edee-551">특정 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-551">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8edee-552">특정 형식</span><span class="sxs-lookup"><span data-stu-id="8edee-552">A specific format</span></span>|<span data-ttu-id="8edee-553">기본 (현재) 문화권</span><span class="sxs-lookup"><span data-stu-id="8edee-553">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
  
 <span data-ttu-id="8edee-554">`format` 표준 또는 사용자 지정 숫자 형식 문자열 매개 변수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-554">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="8edee-555">모든 사용자 지정 숫자 서식 문자 "R" (또는 "r") 이외의 모든 표준 숫자 형식 문자열은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-555">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="8edee-556">경우 `format` 은 `null` 또는 빈 문자열 (""),이 메서드에 의해 반환 된 문자열의 형식은 일반 숫자 형식 지정자 ("G")로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-556">If `format` is `null` or an empty string (""), the string returned by this method is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="8edee-557">.NET Framework에서는 다음 서식 지정 항목에 자세히 설명 하는 광범위 한 서식 지정 지원을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-557">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8edee-558">숫자 서식 지정자에 대 한 자세한 내용은 참조 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md) 및 [사용자 지정 숫자 형식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-558">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="8edee-559">서식 지정 하는 방법에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-559">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="8edee-560">`provider` 매개 변수는 한 <xref:System.IFormatProvider> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-560">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="8edee-561">해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 이 메서드에 의해 반환 되는 문자열의 형식에 대 한 문화권별 정보를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-561">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="8edee-562">구현 하는 개체 <xref:System.IFormatProvider> 다음 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-562">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="8edee-563">A <xref:System.Globalization.CultureInfo> 해당 형식 지정 규칙을 사용 하려는 문화권을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-563">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="8edee-564">A <xref:System.Globalization.NumberFormatInfo> 이 값에 대 한 특정 숫자 형식 지정 정보를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-564">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="8edee-565">구현 하는 사용자 지정 개체 <xref:System.IFormatProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-565">A custom object that implements <xref:System.IFormatProvider>.</span></span>  
  
 <span data-ttu-id="8edee-566">경우 `provider` 은 `null`, 또는 <xref:System.Globalization.NumberFormatInfo> 개체에서 가져올 수 없습니다 `provider`, 반환 값으로 지정 됩니다는 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-566">If `provider` is `null`, or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-567">다음 예제에서는 표시는 <xref:System.Int16> 네 가지 문화권에서 사용 하 여 각 지원 되는 표준 형식 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-567">The following example displays an <xref:System.Int16> value using each of the supported standard format strings in four different cultures.</span></span>  
  
 [!code-csharp[System.Int16.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Int16.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8edee-568">숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-568">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="8edee-569">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-569">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Int16.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.ReadOnlySpan{System.Char},System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] short % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.String,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] short % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8edee-570">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-570">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="8edee-571">이 메서드는 변환이 성공한 경우 <c>s</c>에 포함된 숫자에 해당하는 16비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-571">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8edee-572"><c>s</c> 매개 변수가 <see langword="null" /> 또는 <see cref="F:System.String.Empty" />이거나, 형식이 올바르지 않거나, <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-572">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span> <span data-ttu-id="8edee-573">이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <c>result</c>에 제공된 모든 값을 덮어쓰게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-573">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8edee-574">숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-574">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="8edee-575">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-575">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="8edee-576"><see langword="true" />가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-576"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-577"><xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> 에서 다른 메서드는 <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> 메서드 구문 분석 된 반환 하는 대신 구문 분석 작업이 성공 했는지를 나타내는 부울 값을 반환 하 여 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-577">The <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> method differs from the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref:System.Int16> value.</span></span> <span data-ttu-id="8edee-578">테스트 하기 위해 예외 처리를 사용할 필요가 <xref:System.FormatException> 에 `s` 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-578">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="8edee-579">`s` 매개 변수는 양식에서 숫자의 문자열 표현 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-579">The `s` parameter should be the string representation of a number in the form:</span></span>  
  
 <span data-ttu-id="8edee-580">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="8edee-580">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="8edee-581">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-581">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8edee-582">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-582">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8edee-583">요소</span><span class="sxs-lookup"><span data-stu-id="8edee-583">Element</span></span>|<span data-ttu-id="8edee-584">설명</span><span class="sxs-lookup"><span data-stu-id="8edee-584">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8edee-585">*ws*</span><span class="sxs-lookup"><span data-stu-id="8edee-585">*ws*</span></span>|<span data-ttu-id="8edee-586">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-586">Optional white space.</span></span>|  
|<span data-ttu-id="8edee-587">*sign*</span><span class="sxs-lookup"><span data-stu-id="8edee-587">*sign*</span></span>|<span data-ttu-id="8edee-588">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-588">An optional sign.</span></span>|  
|<span data-ttu-id="8edee-589">*digits*</span><span class="sxs-lookup"><span data-stu-id="8edee-589">*digits*</span></span>|<span data-ttu-id="8edee-590">0에서 9 사이의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-590">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="8edee-591">`s` 매개 변수를 사용 하 여 해석 되는 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-591">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8edee-592">10 진수 숫자, 이외에 선행 및 후행 공백을 선행 기호 함께 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-592">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="8edee-593">명시적으로 함께 culture 별 서식 지정 정보에 포함 될 수 있는 스타일 요소를 정의 하려면 `s`를 사용 하 여는 <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8edee-593">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8edee-594">`s` 매개 변수에서 서식 지정 정보를 사용 하 여 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 현재 시스템 문화권에 따라 초기화 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-594">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="8edee-595">자세한 내용은 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8edee-595">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="8edee-596">이 오버 로드는 <xref:System.Int16.TryParse%2A> 의 모든 자릿수 1 보다 크거나는 `s` 소수 자리 수로 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-596">This overload of the <xref:System.Int16.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="8edee-597">16 진수 숫자의 문자열 표현을 구문 분석, 호출 된 <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-597">To parse the string representation of a hexadecimal number, call the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-598">다음 예제에서는 <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> 메서드를 여러 가지 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-598">The following example calls the <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int16.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int16.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="8edee-599">문자열 중 일부는 <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29> 메서드는이 예제는 변환할 수 없습니다 됩니다:</span><span class="sxs-lookup"><span data-stu-id="8edee-599">Some of the strings that the <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="8edee-600">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="8edee-600">"9432.0".</span></span> <span data-ttu-id="8edee-601">문자열에서 소수 구분 기호;를 포함할 수 없기 때문에 변환이 실패 정수 계열 자릿수만 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-601">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="8edee-602">"16,667".</span><span class="sxs-lookup"><span data-stu-id="8edee-602">"16,667".</span></span> <span data-ttu-id="8edee-603">문자열에는 그룹 구분 기호; 포함할 수 없기 때문에 변환이 실패 정수 계열 자릿수만 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-603">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="8edee-604">"(100)".</span><span class="sxs-lookup"><span data-stu-id="8edee-604">"(100)".</span></span> <span data-ttu-id="8edee-605">문자열의 현재 문화권에 의해 정의 된 것과 다른 음수 기호를 포함할 수 없기 때문에 변환이 실패 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-605">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="8edee-606">"01FA"입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-606">"01FA".</span></span> <span data-ttu-id="8edee-607">변환은 문자열이 16 진수; 포함할 수 없기 때문에 실패 10 진수 숫자만 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-607">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] short % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] short % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8edee-608">변환할 숫자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-608">A string containing a number to convert.</span></span> <span data-ttu-id="8edee-609">이 문자열은 <c>style</c>에서 지정하는 스타일을 사용하여 해석됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-609">The string is interpreted using the style specified by <c>style</c>.</span></span></param>
        <param name="style"><span data-ttu-id="8edee-610"><c>s</c>에 나타날 수 있는 스타일 요소를 나타내는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-610">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="8edee-611">지정할 일반적인 값은 <see cref="F:System.Globalization.NumberStyles.Integer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-611">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8edee-612"><c>s</c>에 대한 문화권별 형식 지정 정보를 제공하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-612">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="8edee-613">이 메서드는 변환이 성공한 경우 <c>s</c>에 포함된 숫자에 해당하는 16비트 부호 있는 정수 값을 반환하고, 변환이 실패한 경우 0을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-613">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8edee-614"><c>s</c> 매개 변수가 <see langword="null" /> 또는 <see cref="F:System.String.Empty" />이거나, 형식이 <c>style</c>과 호환되지 않거나, <see cref="F:System.Int16.MinValue" />보다 작거나 <see cref="F:System.Int16.MaxValue" />보다 큰 숫자를 나타내는 경우 변환이 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-614">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span> <span data-ttu-id="8edee-615">이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 원래 <c>result</c>에 제공된 모든 값을 덮어쓰게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-615">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8edee-616">지정된 스타일 및 문화권별 형식으로 된 숫자의 문자열 표현을 해당하는 16비트 부호 있는 정수로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-616">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="8edee-617">반환 값은 변환이 성공했는지 아니면 실패했는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-617">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="8edee-618"><see langword="true" />가 성공적으로 변환되었으면 <paramref name="s" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-618"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edee-619"><xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> 에서 다른 메서드는 <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 메서드 구문 분석 된 반환 하는 대신 구문 분석 작업이 성공 했는지를 나타내는 부울 값을 반환 하 여 <xref:System.Int16> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-619">The <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method differs from the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref:System.Int16> value.</span></span> <span data-ttu-id="8edee-620">테스트 하기 위해 예외 처리를 사용할 필요가 <xref:System.FormatException> 에 `s` 잘못 되었으며 성공적으로 구문 분석할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-620">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="8edee-621">`style` 매개 변수 (예: 공백 또는 양수 또는 음수 기호)에 사용할 수 있는 스타일 요소를 정의 고 `s` 구문 분석 작업이 성공 하려면에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-621">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8edee-622">비트 플래그의 조합 이어야 합니다는 <xref:System.Globalization.NumberStyles> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-622">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="8edee-623">스타일의 값에 따라는 `s` 매개 변수는 다음과 같은 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-623">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8edee-624">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="8edee-624">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="8edee-625">또는 경우에는 `style` 매개 변수를 포함 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="8edee-625">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span></span>  
  
 <span data-ttu-id="8edee-626">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="8edee-626">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="8edee-627">항목 대괄호 ([및])는 선택적 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-627">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8edee-628">다음 표에서 각 요소에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-628">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8edee-629">요소</span><span class="sxs-lookup"><span data-stu-id="8edee-629">Element</span></span>|<span data-ttu-id="8edee-630">설명</span><span class="sxs-lookup"><span data-stu-id="8edee-630">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8edee-631">*ws*</span><span class="sxs-lookup"><span data-stu-id="8edee-631">*ws*</span></span>|<span data-ttu-id="8edee-632">선택적 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-632">Optional white space.</span></span> <span data-ttu-id="8edee-633">맨 앞에 공백이 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 플래그를 또는 끝날 때 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-633">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8edee-634">Culture 별 통화 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-634">A culture-specific currency symbol.</span></span> <span data-ttu-id="8edee-635">위치는 문자열에 의해 정의 됩니다는 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 의 속성은 <xref:System.Globalization.NumberFormatInfo> 에서 반환 된 개체는 <xref:System.IFormatProvider.GetFormat%2A> 의 메서드는 `provider` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-635">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="8edee-636">통화 기호에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-636">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-637">*sign*</span><span class="sxs-lookup"><span data-stu-id="8edee-637">*sign*</span></span>|<span data-ttu-id="8edee-638">가 선택적 부호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-638">An optional sign.</span></span>|  
|<span data-ttu-id="8edee-639">*digits*</span><span class="sxs-lookup"><span data-stu-id="8edee-639">*digits*</span></span>|<span data-ttu-id="8edee-640">0부터 9 까지의 숫자 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-640">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="8edee-641">*,*</span><span class="sxs-lookup"><span data-stu-id="8edee-641">*,*</span></span>|<span data-ttu-id="8edee-642">Culture 별 1000 단위 구분 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-642">A culture-specific thousands separator.</span></span> <span data-ttu-id="8edee-643">1000 단위 구분 기호에 지정 된 문화권의 `provider` 에 나타날 수 있습니다 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 플래그 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-643">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-644">*.*</span><span class="sxs-lookup"><span data-stu-id="8edee-644">*.*</span></span>|<span data-ttu-id="8edee-645">Culture 별 소수점 기호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-645">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8edee-646">에 지정 된 문화권의 소수점 기호가 `provider` 에 나타날 수 `s` 경우 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-646">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-647">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8edee-647">*fractional_digits*</span></span>|<span data-ttu-id="8edee-648">하나 이상의 숫자 0입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-648">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="8edee-649">소수 자릿수에 나타날 수 `s` 경우에만 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-649">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-650">*e*</span><span class="sxs-lookup"><span data-stu-id="8edee-650">*e*</span></span>|<span data-ttu-id="8edee-651">'E' 또는 'E' 문자는 값은 지 수 표기법으로 표현 됨을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-651">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="8edee-652">`s` 경우 매개 변수 지 수 표기법으로 숫자를 나타낼 수 `style` 포함는 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-652">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8edee-653">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8edee-653">*hexdigits*</span></span>|<span data-ttu-id="8edee-654">16 진수 숫자 0 ~ f 또는 0-6.</span><span class="sxs-lookup"><span data-stu-id="8edee-654">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="8edee-655">숫자만 있는 문자열 (해당 하는 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 플래그) 항상 성공적으로 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-655">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="8edee-656">나머지 <xref:System.Globalization.NumberStyles> 멤버 수 있지만이 입력된 문자열에 있이 필요가 없습니다 있는 요소를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-656">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="8edee-657">다음 표에서 개별 <xref:System.Globalization.NumberStyles> 멤버에 나타날 수 있는 요소에 영향을 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-657">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8edee-658">비 복합 NumberStyles 값</span><span class="sxs-lookup"><span data-stu-id="8edee-658">Non-composite NumberStyles values</span></span>|<span data-ttu-id="8edee-659">S에서 숫자 허용 되는 요소</span><span class="sxs-lookup"><span data-stu-id="8edee-659">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="8edee-660">10 진수 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-660">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="8edee-661">*.*</span><span class="sxs-lookup"><span data-stu-id="8edee-661">The *.*</span></span> <span data-ttu-id="8edee-662">및 *소수 자릿수* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-662">and *fractional_digits* elements.</span></span> <span data-ttu-id="8edee-663">그러나 *소수 자릿수* 하나 이상의 0 자릿수 또는 메서드가 반환 되는 구성 되어야 합니다 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-663">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="8edee-664">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-664">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="8edee-665">경우 `s` 지 수 표기법으로 숫자를 나타내는, 나타내야의 범위 내의 정수는 <xref:System.Int16> 0이 아닌 소수 부분이 없는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-665">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int16> data type without a non-zero fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="8edee-666">*ws* 의 시작 부분에 요소 *s*합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-666">The *ws* element at the beginning of *s*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="8edee-667">*ws* 의 끝에 요소 *s*합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-667">The *ws* element at the end of *s*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="8edee-668">기호 앞에 올 수 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-668">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="8edee-669">뒤에 기호 표시 될 수 있습니다 *자릿수*합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-669">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="8edee-670">*기호* 숫자 값이 들어 괄호 안에 형식 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-670">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="8edee-671">*,* 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-671">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="8edee-672">* $ * 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-672">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="8edee-673">모든 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-673">All elements.</span></span> <span data-ttu-id="8edee-674">*s* 16 진수 숫자 또는 지 수 표기법으로 숫자를에서 매개 변수를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-674">The *s* parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="8edee-675">*ws* 부분이 나 끝 부분에 요소 `s`, *기호* 맨 앞에 `s`, 및 *합니다.*</span><span class="sxs-lookup"><span data-stu-id="8edee-675">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="8edee-676">기호입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-676">symbol.</span></span> <span data-ttu-id="8edee-677">`s` 매개 변수로 지 수 표기법을 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-677">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="8edee-678">*ws*, *기호*, 1000 단위 구분 기호 (*,*), 소수점 및 (*.*) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-678">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="8edee-679">모든 스타일 제외 하 고 `s` 16 진수를 나타낼 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-679">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="8edee-680">경우는 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 플래그를 사용할 `s` 접두사 없이 16 진수 값 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-680">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="8edee-681">예를 들어 "9AF3" 성공적으로 구문 분석 하지만 "0x9AF3" 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-681">For example, "9AF3" parses successfully, but "0x9AF3" does not.</span></span> <span data-ttu-id="8edee-682">다른 플래그만에 있을 수 있는 `style` 는 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 및 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-682">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8edee-683">(의 <xref:System.Globalization.NumberStyles> 열거형에는 복합 스타일 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, 공백 플래그가 모두를 포함 하는.)</span><span class="sxs-lookup"><span data-stu-id="8edee-683">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="8edee-684">`provider` 매개 변수는는 <xref:System.IFormatProvider> 구현에서와 같은 한 <xref:System.Globalization.CultureInfo> 개체 또는 <xref:System.Globalization.NumberFormatInfo> 개체의 <xref:System.IFormatProvider.GetFormat%2A> 메서드가 반환 되는 <xref:System.Globalization.NumberFormatInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-684">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="8edee-685"><xref:System.Globalization.NumberFormatInfo> 개체의 형식에 대 한 문화권별 정보를 제공 `s`합니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-685">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8edee-686">경우 `provider` 은 `null`, <xref:System.Globalization.NumberFormatInfo> 개체가 현재 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-686">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8edee-687">다음 예제에서는 <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> 메서드를 여러 가지 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-687">The following example calls the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int16.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int16.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8edee-688"><paramref name="style" />이 <see cref="T:System.Globalization.NumberStyles" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="8edee-688"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="8edee-689">또는</span><span class="sxs-lookup"><span data-stu-id="8edee-689">-or-</span></span>  
  
 <span data-ttu-id="8edee-690"><paramref name="style" />이 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 및 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 값의 조합이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="8edee-690"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="Overload:System.Int16.Parse" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>