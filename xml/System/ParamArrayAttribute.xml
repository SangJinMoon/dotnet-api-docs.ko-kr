<Type Name="ParamArrayAttribute" FullName="System.ParamArrayAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bbdd51cde6603fd337db607533c7be2ebff268a2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30727127" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ParamArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParamArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ParamArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParamArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParamArrayAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bb50a-101">메서드가 해당 호출에 가변 개수의 인수를 사용할 수 있음을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb50a-101">Indicates that a method will allow a variable number of arguments in its invocation.</span>
      </span>
      <span data-ttu-id="bb50a-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb50a-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb50a-103"><xref:System.ParamArrayAttribute> 메서드 매개 변수는 매개 변수가 배열 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-103">The <xref:System.ParamArrayAttribute> indicates that a method parameter is a parameter array.</span></span> <span data-ttu-id="bb50a-104">매개 변수 배열 인수 수 알된 수의 지정을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-104">A parameter array allows the specification of an unknown number of arguments.</span></span> <span data-ttu-id="bb50a-105">매개 변수 배열은 정식 매개 변수 목록에서 마지막 매개 변수 여야 합니다. 및 1 차원 배열 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-105">A parameter array must be the last parameter in a formal parameter list, and it must be a single-dimension array.</span></span> <span data-ttu-id="bb50a-106">메서드를 호출할 때 매개 변수 배열을 사용 하 여 두 가지 방법 중 하나로 지정 하는 메서드에 인수:</span><span class="sxs-lookup"><span data-stu-id="bb50a-106">When the method is called, a parameter array permits arguments to a method to be specified in either of two ways:</span></span>  
  
-   <span data-ttu-id="bb50a-107">매개 변수 배열 형식으로 암시적으로 변환할 수 있는 형식의 단일 식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-107">As a single expression of a type that is implicitly convertible to the parameter array type.</span></span> <span data-ttu-id="bb50a-108">값 매개 변수로 매개 변수 배열 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-108">The parameter array functions as a value parameter.</span></span>  
  
-   <span data-ttu-id="bb50a-109">0 개 이상의 인수를 각 인수는 매개 변수 배열 요소의 형식으로 암시적 변환이 가능한 형식의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-109">As zero or more arguments, where each argument is an expression of a type that is implictly convertible to the type of the parameter array element.</span></span>  
  
 <span data-ttu-id="bb50a-110">다음 섹션의 예제에는 호출 규칙을 모두 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-110">The example in the next section illustrates both calling conventions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb50a-111">일반적으로 <xref:System.ParamArrayAttribute> 코드에서 직접 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-111">Typically, the <xref:System.ParamArrayAttribute> is not used directly in code.</span></span> <span data-ttu-id="bb50a-112">대신, 개별 언어 키워드와 같은 `ParamArray` Visual basic에서 및 `params` C#에 대 한 래퍼도 사용 되는 <xref:System.ParamArrayAttribute> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-112">Instead, individual language keywords, such as `ParamArray` in Visual Basic and `params` in C#, are used as wrappers for the <xref:System.ParamArrayAttribute> class.</span></span> <span data-ttu-id="bb50a-113">C#과 같은 일부 언어에서는 수도 언어 키워드를 사용 해야 하 고의 사용을 금지 <xref:System.ParamArrayAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-113">Some languages, such as C#, may even require the use of the language keyword and prohibit the use of <xref:System.ParamArrayAttribute>.</span></span>  
  
 <span data-ttu-id="bb50a-114">오버 로드 확인 하는 동안 컴파일러 매개 변수 배열에 매개 변수 배열을 포함 하는 오버 로드 보다 더 적은 1 개의 매개 변수가 있지만 존재 하지 않는 메서드 오버 로드를 발생은 대체 하 게 메서드를 포함 하는 오버 로드를 가진는 매개 변수 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-114">During overload resolution, when compilers that support parameter arrays encounter a method overload that does not exist but has one fewer parameter than an overload that includes a parameter array, they will replace the method with the overload that includes the parameter array.</span></span> <span data-ttu-id="bb50a-115">에 대 한 호출 예를 들어는 `String.Split()` 인스턴스 메서드 (에 존재 하지 않는 <xref:System.String> 클래스)에 대 한 호출으로 확인 됩니다는 <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb50a-115">For example, a call to the `String.Split()` instance method (which does not exist in the <xref:System.String> class) is resolved as a call to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bb50a-116">컴파일러는 필요한 형식의 빈 배열을 메서드에 전달할 수도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-116">The compiler will also pass an empty array of the required type to the method.</span></span> <span data-ttu-id="bb50a-117">즉, 길이가 0 인 매개 변수 배열에서 요소를 처리할 때 배열을 처리 하는 메서드를 준비 항상 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-117">This means that the method must always be prepared to handle an array whose length is zero when it processes the elements in the parameter array.</span></span> <span data-ttu-id="bb50a-118">예제에서는 그림을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-118">The example provides an illustration.</span></span>  
  
 <span data-ttu-id="bb50a-119">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-119">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb50a-120">다음 예제에서는 정의 `Temperature` 클래스를 포함 하는 `Display` 메서드를 하나 이상의 형식이 지정 된 온도 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-120">The following example defines a `Temperature` class that includes a `Display` method, which is intended to display one or more formatted temperature values.</span></span> <span data-ttu-id="bb50a-121">메서드에 단일 매개 변수가 `formats`, 매개 변수 배열 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-121">The method has a single parameter, `formats`, which is defined as a parameter array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#1)]
 [!code-vb[System.ParamArrayAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#1)]  
  
 <span data-ttu-id="bb50a-122">다음 예제에서는 세 가지 서로 다른 호출에는 `Temperature.Display` 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb50a-122">The following example illustrates three different calls to the `Temperature.Display` method.</span></span> <span data-ttu-id="bb50a-123">첫 번째 메서드는 형식 문자열의 배열을 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-123">In the first, the method is passed an array of format strings.</span></span> <span data-ttu-id="bb50a-124">두 번째 페이지인 메서드 4 개의 개별 형식 문자열 인수로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-124">In the second, the method is passed four individual format strings as arguments.</span></span> <span data-ttu-id="bb50a-125">세 번째 메서드는 인수 없이 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb50a-125">In the third, the method is called with no arguments.</span></span> <span data-ttu-id="bb50a-126">예제의 출력에서 알 수 있듯이, Visual Basic 및 C# 컴파일러로 변환에 대 한 호출에서 `Display` 빈 문자열 배열 사용 하 여 메서드.</span><span class="sxs-lookup"><span data-stu-id="bb50a-126">As the output from the example illustrates, the Visual Basic and C# compilers translate this into a call to the `Display` method with an empty string array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#2)]
 [!code-vb[System.ParamArrayAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParamArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ParamArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParamArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb50a-127">기본 속성을 사용하여 <see cref="T:System.ParamArrayAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb50a-127">Initializes a new instance of the <see cref="T:System.ParamArrayAttribute" /> class with default properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>