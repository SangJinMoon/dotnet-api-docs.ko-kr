<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FormatException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5041fd4b21ce035beb017a4f1a02285a70f983f8c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">041fd4b21ce035beb017a4f1a02285a70f983f8c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.FormatException">
          <source>The exception that is thrown when the format of an argument is invalid, or when a <bpt id="p1">[</bpt>composite format string<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> is not well formed.</source>
          <target state="translated">인수의 형식이 올바르지 않거나 <bpt id="p1">[</bpt>합성 서식 문자열<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>이 잘못 만들어진 경우 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>A <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception can be thrown for one of the following reasons:</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 다음 이유 중 하나에 대 한 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In a call to a method that converts a string to some other data type, the string doesn't conform to the required pattern.</source>
          <target state="translated">문자열을 다른 데이터 형식을 변환 하는 메서드 호출에서 문자열 필수 패턴에 맞지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This typically occurs when calling some methods of the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class and the <ph id="ph2">`Parse`</ph> and <ph id="ph3">`ParseExact`</ph> methods of some types.</source>
          <target state="translated">일부 메서드를 호출할 때 일반적으로 발생는 <ph id="ph1">&lt;xref:System.Convert&gt;</ph> 클래스 및 <ph id="ph2">`Parse`</ph> 및 <ph id="ph3">`ParseExact`</ph> 일부 형식의 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In most cases, particularly if the string that you're converting is input by a user or read from a file, you should use a <ph id="ph1">`try/catch`</ph> block and handle the <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> exception if the conversion is unsuccessful.</source>
          <target state="translated">대부분의 경우에서 변환 하는 문자열을 파일에서 읽거나 사용자가 입력 하는 경우에 특히 사용할지는 <ph id="ph1">`try/catch`</ph> 차단 하 고 처리는 <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> 변환이 실패 한 경우 예외입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>You can also replace the call to the conversion method with a call to a <ph id="ph1">`TryParse`</ph> or <ph id="ph2">`TryParseExact`</ph> method, if one exists.</source>
          <target state="translated">호출 하 여 변환 메서드를 호출을 바꿀 수도 있습니다는 <ph id="ph1">`TryParse`</ph> 또는 <ph id="ph2">`TryParseExact`</ph> 메서드를 사용할 수 있는 경우.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>However, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception that is thrown when you're trying to parse a predefined or hard-coded string indicates a program error.</source>
          <target state="translated">그러나 한 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 미리 정의 된 또는 하드 코드 된 문자열을 구문 분석 하려고 하는 경우 throw 되는 예외는 프로그램 오류를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In this case, you should correct the error rather than handle the exception.</source>
          <target state="translated">이 경우 오류를 수정 대신 해야 예외를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The conversion of a string to the following types in the <ph id="ph1">&lt;xref:System&gt;</ph> namespace can throw a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> exception:</source>
          <target state="translated">문자열로 변환 하는 같은 형식에는 <ph id="ph1">&lt;xref:System&gt;</ph> 네임 스페이스를 throw 할 수는 <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> 예외:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><ph id="ph1">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType&gt;</ph> methods require the string to be converted to be "True", "true", "False", or "false".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType&gt;</ph> 방법에는 "True"를 "true" 되도록 변환 될 문자열, "False" 또는 "false" 필요 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Any other value throws a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception.</source>
          <target state="translated">다른 모든 값을 throw 한 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><ph id="ph1">&lt;xref:System.DateTime&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DateTime&gt;</ph>와 <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>All date and time data is interpreted based on the formatting conventions of a particular culture: either the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture.</source>
          <target state="translated">모든 날짜 및 시간 데이터는 특정 문화권의 서식 지정 규칙에 따라 해석 됩니다: 현재 스레드 문화권 (또는 경우에 따라 현재 응용 프로그램 도메인 문화권), 고정 문화권 또는 지정 된 문화권.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>When you call the <ph id="ph1">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType&gt;</ph> methods, date and time data must also conform <bpt id="p1">*</bpt>exactly<ept id="p1">*</ept> to a pattern specified by one or more <bpt id="p2">[</bpt>standard format strings<ept id="p2">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> or <bpt id="p3">[</bpt>custom format strings<ept id="p3">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> that are provided as arguments in the method call.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType&gt;</ph> 메서드, 날짜 및 시간 데이터 또한 준수 해야 <bpt id="p1">*</bpt>정확히<ept id="p1">*</ept> 하나 이상의 지정 된 패턴을 <bpt id="p2">[</bpt>표준 형식 문자열<ept id="p2">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 또는 <bpt id="p3">[</bpt>사용자 지정 형식 문자열<ept id="p3">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> 메서드 호출에서 인수로 제공 되는 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>If it doesn't conform to an expected culture-specific pattern, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception is thrown.</source>
          <target state="translated">예상 되는 culture 관련 패턴을 준수 하지 않는 경우는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This means that date and time data saved in a culture-specific format on one system might not parse successfully on another system.</source>
          <target state="translated">이 시스템에서 문화권별 형식으로 저장 하는 날짜 및 시간 데이터 수 구문 분석할 성공적으로 다른 시스템에서 의미 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For more information about parsing dates and times, see <bpt id="p1">[</bpt>Parsing Date and Time Strings<ept id="p1">](~/docs/standard/base-types/parsing-datetime.md)</ept> and the documentation for the method that threw the exception.</source>
          <target state="translated">날짜 및 시간 구문 분석 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>구문 분석 하는 날짜 및 시간 문자열<ept id="p1">](~/docs/standard/base-types/parsing-datetime.md)</ept> 및 예외를 발생 시킨 메서드에 대 한 설명서입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><bpt id="p1">**</bpt>GUIDs.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>GUIDs.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The string representation of a GUID must consist of 32 hexadecimal digits (0-F), and must be in one of the five formats output by the <ph id="ph1">&lt;xref:System.Guid.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">GUID의 문자열 표현을 32 자리 16 진수 (0-F)로 구성 되어야 하며 여 출력 되는 다섯 가지 형식 중 하나에 있어야는 <ph id="ph1">&lt;xref:System.Guid.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph> 메서드를 참조하세요.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><bpt id="p1">**</bpt>Numeric types, including all signed integers, unsigned integers, and floating-point types.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>모든 부호 있는 정수, 부호 없는 정수 및 부동 소수점 형식을 비롯 한 숫자 형식입니다.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The string to be parsed must consist of the Latin digits 0-9.</source>
          <target state="translated">구문 분석할 문자열 라틴어 숫자 0-9 구성 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>A positive or negative sign, decimal separator, group separators, and currency symbol may also be permitted.</source>
          <target state="translated">양수 또는 음수 기호, 소수 구분 기호, 그룹 구분 기호 및 통화 기호 허용 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Trying to parse a string that contains any other character always throws a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception.</source>
          <target state="translated">문자를 다른를 포함 하는 문자열을 구문 분석 하 항상 throw 한 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>All numeric strings are interpreted based on the formatting conventions of a particular culture: either the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture.</source>
          <target state="translated">모든 숫자 문자열을 특정 문화권의 서식 지정 규칙에 따라 해석 됩니다: 현재 스레드 문화권 (또는 경우에 따라 현재 응용 프로그램 도메인 문화권), 고정 문화권 또는 지정 된 문화권입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>As a result, a numeric string that is parsed by using the conventions of one culture might fail when using the conventions of another.</source>
          <target state="translated">결과적으로, 하나의 문화권의 규칙을 사용 하 여 구문 분석 되는 숫자 문자열의 다른 규칙을 사용 하는 경우 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For more information about parsing numeric strings, see <bpt id="p1">[</bpt>Parsing Numeric Strings<ept id="p1">](~/docs/standard/base-types/parsing-numeric.md)</ept> and the documentation for the specific method that threw the exception.</source>
          <target state="translated">숫자 문자열 구문 분석 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>숫자 문자열 구문 분석<ept id="p1">](~/docs/standard/base-types/parsing-numeric.md)</ept> 및 예외를 발생 시킨 특정 메서드에 대 한 설명서입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><bpt id="p1">**</bpt>Time intervals.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>시간 간격입니다.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The string to be parsed must be either in fixed culture-insensitive format or in a culture-sensitive format defined by the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture.</source>
          <target state="translated">고정 문화권을 구분 하지 않는 형식에서 또는 현재 스레드 문화권에 의해 (또는 경우에 따라 현재 응용 프로그램 도메인 문화권), 정의 된 문화권 구분 형식에서 문자열을 구문 분석할 수 여야 고정 문화권 또는 지정 된 문화권입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>If the string isn't in an appropriate format, or if, at the minimum, the days, hours, and minutes components of the time interval aren't present, the parsing method throws a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception.</source>
          <target state="translated">문자열이 한 적절 한 형식이 나 최소, 일, 시간, if를에 없는 시간 간격의 분 구성 요소를 사용할 수 없는 경우 구문 분석 방법 throw 한 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For more information, see the documentation for the <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> parsing method that threw the exception.</source>
          <target state="translated">자세한 내용은 참조에 대 한 설명서는 <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> 예외를 발생 시킨 메서드 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>A type implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, which supports format strings that define how an object is converted to its string representation, and an invalid format string is used.</source>
          <target state="translated">형식이 구현 하는 <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> 인터페이스를 지 원하는 개체를 문자열 표현으로 변환 되는 방법을 정의 하는 형식 문자열 및 잘못 된 형식 문자열에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This is most common in a formatting operation.</source>
          <target state="translated">서식 지정 작업에서 가장 일반적입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In the following example, the "Q" standard format string is used in a composite format string to format a number.</source>
          <target state="translated">다음 예제에서는 "Q" 표준 형식 문자열은 숫자의 서식을 지정 하려면 복합 형식 문자열에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>However, "Q" is not a valid <bpt id="p1">[</bpt>standard format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
          <target state="translated">그러나 "Q" 유효 하지 않거나 <bpt id="p1">[</bpt>표준 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This exception results from a coding error.</source>
          <target state="translated">이 예외는 코딩 오류를 발생합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>To correct the error, either remove the format string or substitute a valid one.</source>
          <target state="translated">이 오류를 해결 하려면 형식 문자열을 제거 하거나 올바른 대체 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The following example corrects the error by replacing the invalid format string with the "C" (currency) format string.</source>
          <target state="translated">다음 예제에서는 잘못 된 형식 문자열 "C" (currency) 형식 문자열 대체 하 여 오류를 해결 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>A <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception can also be thrown by parsing methods, such as <ph id="ph2">&lt;xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Guid.ParseExact%2A?displayProperty=nameWithType&gt;</ph>, that require the string to be parsed to conform exactly to the pattern specified by a format string.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 와 같은 메서드를 구문 분석 하 여 예외가 throw 될 수 있습니다 <ph id="ph2">&lt;xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Guid.ParseExact%2A?displayProperty=nameWithType&gt;</ph>, 문자열을 형식 문자열에 지정 된 패턴을 정확 하 게 따르는으로 구문 분석 해야 하는 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In the following example, the string representation of a GUID is expected to conform to the pattern specified by the "G" standard format string.</source>
          <target state="translated">다음 예제에서는 "G" 표준 형식 문자열에 지정 된 패턴을 따르는 GUID의 문자열 표현을 예정입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>However, the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> structure's implementation of <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> does not support the "G" format string.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Guid&gt;</ph> 구조체의 구현의 <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> "G" 형식 문자열을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This exception also results from a coding error.</source>
          <target state="translated">이 예외는 또한 코딩 오류를 발생합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>To correct it, call a parsing method that doesn’t require a precise format, such as <ph id="ph1">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph>, or substitute a valid format string.</source>
          <target state="translated">이 문제를 해결 하려면 같은 정확한 형식으로 필요 하지 않은 구문 분석 메서드를 호출 <ph id="ph1">&lt;xref:System.DateTime.Parse%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph>, 하거나 유효한 형식 문자열을 대체 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The following example corrects the error by calling the <ph id="ph1">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 호출 하 여 오류를 수정한는 <ph id="ph1">&lt;xref:System.Guid.Parse%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>One or more of the indexes of the format items in a <bpt id="p1">[</bpt>composite format string<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> is greater than the indexes of the items in the object list or parameter array.</source>
          <target state="translated">하나 이상의의 형식 항목의 인덱스는 <bpt id="p1">[</bpt>합성 형식 문자열<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 개체 목록 또는 매개 변수 배열에 있는 항목의 인덱스 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In the following example, the largest index of a format item in the format string is 3.</source>
          <target state="translated">다음 예제에서는 서식 문자열의 형식 항목의 가장 큰 인덱스는 3입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Because the indexes of items in the object list are zero-based, this format string would require the object list to have four items.</source>
          <target state="translated">개체 목록에 있는 항목의 인덱스가 0부터 시작 하기 때문에이 형식 문자열에는 4 개의 항목이 있어야 개체 목록이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Instead, it has only three, <ph id="ph1">`dat`</ph>, <ph id="ph2">`temp`</ph>, and <ph id="ph3">`scale`</ph>, so the code results in a <ph id="ph4">&lt;xref:System.FormatException&gt;</ph> exception at run time:.</source>
          <target state="translated">대신,이 세 번만 <ph id="ph1">`dat`</ph>, <ph id="ph2">`temp`</ph>, 및 <ph id="ph3">`scale`</ph>는 코드에서 발생 하므로 <ph id="ph4">&lt;xref:System.FormatException&gt;</ph> 런타임 시 예외: 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>In this case, the <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception is a result of developer error.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 예외 개발자 오류의 결과입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>It should be corrected rather than handled in a <ph id="ph1">`try/catch`</ph> block by making sure that each item in the object list corresponds to the index of a format item.</source>
          <target state="translated">이 수정 되지 않고 됩니다에서 처리 한 <ph id="ph1">`try/catch`</ph> 개체 목록에서 각 항목 형식 항목의 인덱스에 해당 하는지 확인 하 여 블록입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>To correct this example, change the index of the second format item to refer to the <ph id="ph1">`dat`</ph> variable, and decrement the index of each subsequent format item by one.</source>
          <target state="translated">이 예제를 해결 하려면 참조 하는 두 번째 형식 항목의 인덱스를 변경는 <ph id="ph1">`dat`</ph> 변수와 감소 씩 각 후속 형식 항목의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The composite format string isn't well-formed.</source>
          <target state="translated">합성 형식 문자열 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception is always a result of developer error.</source>
          <target state="translated">이런 경우는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 예외는 항상 개발자 오류의 결과입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>It should be corrected rather than handled in a <ph id="ph1">`try/catch`</ph> block.</source>
          <target state="translated">이 수정 되지 않고 됩니다에서 처리 한 <ph id="ph1">`try/catch`</ph> 블록입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Trying to include literal braces in a string, as the following example does, will throw the exception.</source>
          <target state="translated">다음 예제에서는 않습니다, 예외를 throw 하는 대로 문자열에 리터럴 중괄호를 포함 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The recommended technique for including literal braces in a composite format string is to include them in the object list and use format items to insert them into the result string.</source>
          <target state="translated">복합 형식 문자열에 리터럴 중괄호를 포함 하는 데 권장 되는 방법 개체 목록에 포함할 형식 항목을 사용 하 여 결과 문자열에 삽입 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For example, you can modify the previous composite format string as shown here.</source>
          <target state="translated">예를 들어 다음과 같이 이전 합성 형식 문자열을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The exception is also thrown if your format string contains a typo.</source>
          <target state="translated">형식 문자열을 보시 겠어요 포함 되어 있는 경우에 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The following call to the <ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph> method omits a closing brace and pairs an opening brace with a closing bracket.</source>
          <target state="translated">다음에 대 한 호출에서 <ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph> 메서드 닫는 중괄호를 생략 하 고 여는 중괄호와 닫는 대괄호 쌍입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>To correct the error, ensure that all opening and closing braces correspond.</source>
          <target state="translated">이 오류를 해결 하려면 모든 중괄호와 닫는 중괄호 맞는지 확인 하십시오.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>You've supplied the object list in a composite formatting method as a strongly typed parameter array, and the <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception indicates that the index of one or more format items exceeds the number of arguments in the object list.</source>
          <target state="translated">개체 목록에 있는 합성 서식 지정 메서드에 강력한 형식의 매개 변수 배열로 제공한 및 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 예외 하나 이상의 형식 항목의 인덱스 개체 목록에서 인수 수를 초과 했음을 나타내는 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>This occurs because no explicit conversion between array types exists, so instead the compiler treats the array as a single argument rather than as a parameter array.</source>
          <target state="translated">대신 컴파일러가 매개 변수 배열이 아니라 단일 인수도 배열 처리 배열 형식 간의 명시적 변환이 존재 하기 때문에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For example, the following call to the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> exception, although the highest index of the format items is 3, and the parameter array of type <ph id="ph3">&lt;xref:System.Int32&gt;</ph> has four elements.</source>
          <target state="translated">다음을 호출 하는 예를 들어는 <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> 메서드가 throw는 <ph id="ph2">&lt;xref:System.FormatException&gt;</ph> 예외를 형식 항목의 가장 높은 인덱스는 3 및 형식의 매개 변수 배열을 <ph id="ph3">&lt;xref:System.Int32&gt;</ph> 에 4 개의 요소가 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Instead of handling this exception, you should eliminate its cause.</source>
          <target state="translated">이 예외를 처리 하는 대신 해당 원인을 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>Because neither Visual Basic nor C# can convert an integer array to an object array, you have to perform the conversion yourself before calling the composite formatting method.</source>
          <target state="translated">Visual Basic 또는 C# 아닙니다 개체 배열에 정수 배열로 변환할 수, 합성 서식 지정 메서드가 호출 하기 전에 사용자가 직접 변환을 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The following example provides one implementation.</source>
          <target state="translated">다음 예제에는 하나의 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source><ph id="ph1">&lt;xref:System.FormatException&gt;</ph> uses the HRESULT COR_E_FORMAT, which has the value 0x80131537.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 0x80131537 값이 있는 HRESULT COR_E_FORMAT를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>The <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> class derives from  <ph id="ph2">&lt;xref:System.Exception&gt;</ph> and adds no unique members.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 클래스에서 파생 <ph id="ph2">&lt;xref:System.Exception&gt;</ph> 고유한 멤버가 추가 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormatException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.FormatException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">인스턴스에 대 한 초기 속성 값 목록은 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>, 참조는 <ph id="ph2">&lt;xref:System.FormatException.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.FormatException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Invalid format."</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> "형식이 잘못 되었습니다." 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">이 메시지는 현재 시스템 문화권을 고려합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 참조(Visual Basic의 경우 <ph id="ph1">`Nothing`</ph>)</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">지역화된 오류 메시지 문자열입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">@FSHO2@오류를 설명하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">지정된 오류 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> 속성을 사용 하 여 새 예외는 <ph id="ph2">`message`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph>의 내용은 사용자의 이해를 돕기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 참조(Visual Basic의 경우 <ph id="ph1">`Nothing`</ph>)</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">원본 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 null 참조(Visual Basic에서는 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)가 아니면, 현재 예외는 내부 예외를 처리하는 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 블록에서 발생한 것입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외의 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달된 값과 같은 값을 반환하거나 <ph id="ph2">`Nothing`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 null 참조(Visual Basic의 경우 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">내부 예외 참조</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormatException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>