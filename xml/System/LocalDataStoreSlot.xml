<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LocalDataStoreSlot.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5215ef12b40b23db1c35c50dde5b9ca0e34834020.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">215ef12b40b23db1c35c50dde5b9ca0e34834020</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.LocalDataStoreSlot">
          <source>Encapsulates a memory slot to store local data.</source>
          <target state="translated">메모리 슬롯을 캡슐화하여 로컬 데이터를 저장합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.LocalDataStoreSlot">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields, and data slots.</source>
          <target state="translated">.NET Framework에서는 스레드 로컬 저장소 (TLS)를 사용 하기 위한 두 가지 메커니즘을 제공: 스레드 상대 정적 필드 및 데이터 슬롯입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>Thread-relative static fields are <ph id="ph1">`static`</ph> fields (<ph id="ph2">`Shared`</ph> fields in Visual Basic) that are marked with the <ph id="ph3">&lt;xref:System.ThreadStaticAttribute&gt;</ph> attribute.</source>
          <target state="translated">스레드 상대 정적 필드는 <ph id="ph1">`static`</ph> 필드 (<ph id="ph2">`Shared`</ph> Visual Basic의 필드)로 표시 되는 <ph id="ph3">&lt;xref:System.ThreadStaticAttribute&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>They provide better performance than data slots, and enable compile-time type checking.</source>
          <target state="translated">데이터 슬롯 보다 나은 성능을 제공 하며 컴파일 타임 형식 검사를 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>Data slots are slower and more awkward to use than thread-relative static fields.</source>
          <target state="translated">데이터 슬롯은 느리고 스레드 상대 정적 필드 보다 사용 하기가 더 어렵습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>Also, data is stored as type <ph id="ph1">&lt;xref:System.Object&gt;</ph>, so you must cast it to the correct type before using it.</source>
          <target state="translated">데이터 형식으로 저장 됩니다는 또한 <ph id="ph1">&lt;xref:System.Object&gt;</ph>이므로 사용 하기 전에 올바른 형식으로 캐스팅 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>However, you can use data slots when you have insufficient information at compile time to allocate static fields.</source>
          <target state="translated">그러나 정적 필드에 할당할 컴파일 타임에 정보가 부족 하 여 있는 경우 데이터 슬롯을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>For more information about using TLS, see <bpt id="p1">[</bpt>Thread Local Storage: Thread-Relative Static Fields and Data Slots<ept id="p1">](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)</ept>.</source>
          <target state="translated">TLS를 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>스레드 로컬 저장소: 스레드 상대 정적 필드 및 데이터 슬롯<ept id="p1">](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>Similarly, the .NET Framework provides two mechanisms for using context local storage: context-relative static fields and data slots.</source>
          <target state="translated">마찬가지로.NET Framework 로컬 컨텍스트 저장소를 사용 하기 위한 두 가지 메커니즘을 제공: 상황에 맞는 상대 정적 필드 및 데이터 슬롯입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>Context-relative static fields are static fields that are marked with the <ph id="ph1">&lt;xref:System.ContextStaticAttribute&gt;</ph> attribute.</source>
          <target state="translated">상황에 맞는 상대 정적 필드는 표시 된 정적 필드는 <ph id="ph1">&lt;xref:System.ContextStaticAttribute&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>The trade-offs between using these two mechanisms are similar to the tradeoffs between using thread-relative static fields and data slots.</source>
          <target state="translated">이 두 가지 메커니즘을 사용 하 여 간의 장단점 스레드 상대 정적 필드 및 데이터 슬롯을 사용 하 여의 관계와 비슷합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>The <ph id="ph1">&lt;xref:System.LocalDataStoreSlot&gt;</ph> structure serves as a local store memory mechanism that threads and contexts can use to store thread-specific and context-specific data, respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.LocalDataStoreSlot&gt;</ph> 구조 역할에 로컬 저장소는 스레드와 메모리 메커니즘 및 컨텍스트는 스레드 및 상황에 맞는 데이터를 각각 저장 하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>The common language runtime allocates a multi-slot data store array to each process when it is created.</source>
          <target state="translated">공용 언어 런타임에서 생성 될 때 각 프로세스에 다중 슬롯 데이터 저장소 배열을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>The thread or context calls various functions to allocate a data slot in the data store, to store and retrieve a data value in the slot, and to free a data slot for reuse after the thread or context object expires.</source>
          <target state="translated">스레드 또는 컨텍스트로 개체 만료 된 후 다시 사용 하는 다양 한 함수를 데이터 저장소에 데이터 슬롯을 할당, 저장 하 고,이 슬롯에서 데이터 값을 검색 하 고 데이터 슬롯을 확보 하는 스레드 또는 컨텍스트로 호출 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>The data slots are unique per thread or context; their values are not shared between the thread or context objects.</source>
          <target state="translated">데이터 슬롯은 스레드 또는 컨텍스트로; 당 고유 해당 값은 스레드 또는 컨텍스트로 개체 간에 공유 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>Data slots can be allocated by a name or by an index number.</source>
          <target state="translated">이름이 나 인덱스 번호로 데이터 슬롯을 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>For more information about storing local data, see <ph id="ph1">&lt;xref:System.Threading.Thread&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.Remoting.Contexts.Context&gt;</ph>.</source>
          <target state="translated">로컬 데이터를 저장 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Threading.Thread&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Runtime.Remoting.Contexts.Context&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LocalDataStoreSlot">
          <source>The <ph id="ph1">&lt;xref:System.LocalDataStoreSlot&gt;</ph> class is used with methods such as <ph id="ph2">&lt;xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph5">&lt;xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType&gt;</ph>; it does not have any methods of its own that you need to use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.LocalDataStoreSlot&gt;</ph> 과 같은 클래스 메서드와 함께 사용 됩니다 <ph id="ph2">&lt;xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType&gt;</ph>; 것 되지 않은 하는 자체의 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.LocalDataStoreSlot.Finalize">
          <source>Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <ph id="ph1">&lt;see cref="T:System.LocalDataStoreSlot" /&gt;</ph> object.</source>
          <target state="translated">가비지 수집기에서 <ph id="ph1">&lt;see cref="T:System.LocalDataStoreSlot" /&gt;</ph> 개체를 회수할 때 리소스가 해제되고 다른 정리 작업이 수행되도록 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.LocalDataStoreSlot.Finalize">
          <source>The garbage collector calls <ph id="ph1">&lt;xref:System.LocalDataStoreSlot.Finalize%2A&gt;</ph> when the current object is ready to be finalized.</source>
          <target state="translated">가비지 컬렉션이 <ph id="ph1">&lt;xref:System.LocalDataStoreSlot.Finalize%2A&gt;</ph> 현재 개체를 종료 될 경우.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>