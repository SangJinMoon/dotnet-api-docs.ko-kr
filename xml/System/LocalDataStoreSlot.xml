<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="215ef12b40b23db1c35c50dde5b9ca0e34834020" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30726897" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1cd2c-101">메모리 슬롯을 캡슐화하여 로컬 데이터를 저장합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1cd2c-101">Encapsulates a memory slot to store local data.</span>
      </span>
      <span data-ttu-id="1cd2c-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1cd2c-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cd2c-103">.NET Framework에서는 스레드 로컬 저장소 (TLS)를 사용 하기 위한 두 가지 메커니즘을 제공: 스레드 상대 정적 필드 및 데이터 슬롯입니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-103">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields, and data slots.</span></span>  
  
-   <span data-ttu-id="1cd2c-104">스레드 상대 정적 필드는 `static` 필드 (`Shared` Visual Basic의 필드)로 표시 되는 <xref:System.ThreadStaticAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-104">Thread-relative static fields are `static` fields (`Shared` fields in Visual Basic) that are marked with the <xref:System.ThreadStaticAttribute> attribute.</span></span> <span data-ttu-id="1cd2c-105">데이터 슬롯 보다 나은 성능을 제공 하며 컴파일 타임 형식 검사를 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-105">They provide better performance than data slots, and enable compile-time type checking.</span></span>  
  
-   <span data-ttu-id="1cd2c-106">데이터 슬롯은 느리고 스레드 상대 정적 필드 보다 사용 하기가 더 어렵습니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-106">Data slots are slower and more awkward to use than thread-relative static fields.</span></span> <span data-ttu-id="1cd2c-107">데이터 형식으로 저장 됩니다는 또한 <xref:System.Object>이므로 사용 하기 전에 올바른 형식으로 캐스팅 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-107">Also, data is stored as type <xref:System.Object>, so you must cast it to the correct type before using it.</span></span> <span data-ttu-id="1cd2c-108">그러나 정적 필드에 할당할 컴파일 타임에 정보가 부족 하 여 있는 경우 데이터 슬롯을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-108">However, you can use data slots when you have insufficient information at compile time to allocate static fields.</span></span>  
  
 <span data-ttu-id="1cd2c-109">TLS를 사용 하는 방법에 대 한 자세한 내용은 참조 [스레드 로컬 저장소: 스레드 상대 정적 필드 및 데이터 슬롯](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-109">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="1cd2c-110">마찬가지로.NET Framework 로컬 컨텍스트 저장소를 사용 하기 위한 두 가지 메커니즘을 제공: 상황에 맞는 상대 정적 필드 및 데이터 슬롯입니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-110">Similarly, the .NET Framework provides two mechanisms for using context local storage: context-relative static fields and data slots.</span></span> <span data-ttu-id="1cd2c-111">상황에 맞는 상대 정적 필드는 표시 된 정적 필드는 <xref:System.ContextStaticAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-111">Context-relative static fields are static fields that are marked with the <xref:System.ContextStaticAttribute> attribute.</span></span> <span data-ttu-id="1cd2c-112">이 두 가지 메커니즘을 사용 하 여 간의 장단점 스레드 상대 정적 필드 및 데이터 슬롯을 사용 하 여의 관계와 비슷합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-112">The trade-offs between using these two mechanisms are similar to the tradeoffs between using thread-relative static fields and data slots.</span></span>  
  
 <span data-ttu-id="1cd2c-113"><xref:System.LocalDataStoreSlot> 구조 역할에 로컬 저장소는 스레드와 메모리 메커니즘 및 컨텍스트는 스레드 및 상황에 맞는 데이터를 각각 저장 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-113">The <xref:System.LocalDataStoreSlot> structure serves as a local store memory mechanism that threads and contexts can use to store thread-specific and context-specific data, respectively.</span></span> <span data-ttu-id="1cd2c-114">공용 언어 런타임에서 생성 될 때 각 프로세스에 다중 슬롯 데이터 저장소 배열을 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-114">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="1cd2c-115">스레드 또는 컨텍스트로 개체 만료 된 후 다시 사용 하는 다양 한 함수를 데이터 저장소에 데이터 슬롯을 할당, 저장 하 고,이 슬롯에서 데이터 값을 검색 하 고 데이터 슬롯을 확보 하는 스레드 또는 컨텍스트로 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-115">The thread or context calls various functions to allocate a data slot in the data store, to store and retrieve a data value in the slot, and to free a data slot for reuse after the thread or context object expires.</span></span>  
  
 <span data-ttu-id="1cd2c-116">데이터 슬롯은 스레드 또는 컨텍스트로; 당 고유 해당 값은 스레드 또는 컨텍스트로 개체 간에 공유 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-116">The data slots are unique per thread or context; their values are not shared between the thread or context objects.</span></span> <span data-ttu-id="1cd2c-117">이름이 나 인덱스 번호로 데이터 슬롯을 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-117">Data slots can be allocated by a name or by an index number.</span></span>  
  
 <span data-ttu-id="1cd2c-118">로컬 데이터를 저장 하는 방법에 대 한 자세한 내용은 참조 <xref:System.Threading.Thread> 또는 <xref:System.Runtime.Remoting.Contexts.Context>합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-118">For more information about storing local data, see <xref:System.Threading.Thread> or <xref:System.Runtime.Remoting.Contexts.Context>.</span></span> <span data-ttu-id="1cd2c-119"><xref:System.LocalDataStoreSlot> 과 같은 클래스 메서드와 함께 사용 됩니다 <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>, 및 <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; 것 되지 않은 하는 자체의 메서드를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-119">The <xref:System.LocalDataStoreSlot> class is used with methods such as <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>, <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>, and <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; it does not have any methods of its own that you need to use.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1cd2c-120">가비지 수집기에서 <see cref="T:System.LocalDataStoreSlot" /> 개체를 회수할 때 리소스가 해제되고 다른 정리 작업이 수행되도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-120">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.LocalDataStoreSlot" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cd2c-121">가비지 컬렉션이 <xref:System.LocalDataStoreSlot.Finalize%2A> 현재 개체를 종료 될 경우.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-121">The garbage collector calls <xref:System.LocalDataStoreSlot.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>