<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ApplicationIdentity.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5948463978cab5fd4276d14f450c722a8c154dbac.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">948463978cab5fd4276d14f450c722a8c154dbac</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ApplicationIdentity">
          <source>Provides the ability to uniquely identify a manifest-activated application.</source>
          <target state="translated">매니페스트로 활성화되는 응용 프로그램을 고유하게 식별하는 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ApplicationIdentity">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ApplicationIdentity">
          <source>The <ph id="ph1">&lt;xref:System.ApplicationIdentity&gt;</ph> class is used in the activation of manifest-based applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ApplicationIdentity&gt;</ph> 클래스는 응용 프로그램 매니페스트 기반 활성화에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ApplicationIdentity">
          <source>The following code example demonstrates the use of an <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> object to obtain the <ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph> for a manifest-based application.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> 개체를 가져옵니다는 <ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph> 매니페스트 기반 응용 프로그램에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ApplicationIdentity">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ApplicationIdentity.#ctor(System.String)">
          <source>The full name of the application.</source>
          <target state="translated">응용 프로그램의 전체 이름입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ApplicationIdentity.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ApplicationIdentity" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ApplicationIdentity" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ApplicationIdentity.#ctor(System.String)">
          <source>The format of the <ph id="ph1">`applicationIdentityFullName`</ph> parameter is a comma-delimited Unicode string that begins with the name, as follows:</source>
          <target state="translated">형식은 <ph id="ph1">`applicationIdentityFullName`</ph> 매개 변수는 다음과 같이 이름으로 시작 하는 쉼표로 구분 된 유니코드 문자열:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ApplicationIdentity.#ctor(System.String)">
          <source>Where <bpt id="p1">*</bpt>deploymentIdentity<ept id="p1">*</ept><ph id="ph1"> =</ph></source>
          <target state="translated">Where <bpt id="p1">*</bpt>deploymentIdentity<ept id="p1">*</ept><ph id="ph1"> =</ph></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ApplicationIdentity.#ctor(System.String)">
          <source>And <bpt id="p1">*</bpt>applicationIdentity<ept id="p1">*</ept><ph id="ph1"> =</ph></source>
          <target state="translated">And <bpt id="p1">*</bpt>applicationIdentity<ept id="p1">*</ept><ph id="ph1"> =</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ApplicationIdentity.#ctor(System.String)">
          <source>The following is an example of the full name for an application named ActivationContext:</source>
          <target state="translated">다음은 ActivationContext 이라는 응용 프로그램에 대 한 전체 이름의 예입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ApplicationIdentity.#ctor(System.String)">
          <source>The default value for processor architecture is "msil", and the default value for type is "win32".</source>
          <target state="translated">프로세서 아키텍처에 대 한 기본값은 "msil" 및 형식에 대 한 기본값은 "win32"입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ApplicationIdentity.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="applicationIdentityFullName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="applicationIdentityFullName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ApplicationIdentity.CodeBase">
          <source>Gets the location of the deployment manifest as a URL.</source>
          <target state="translated">배포 매니페스트의 위치를 URL로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ApplicationIdentity.CodeBase">
          <source>The URL of the deployment manifest.</source>
          <target state="translated">배포 매니페스트의 URL입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ApplicationIdentity.CodeBase">
          <source>The following are two examples of <ph id="ph1">&lt;xref:System.ApplicationIdentity.CodeBase%2A&gt;</ph> property values for an application named ActivationContext:</source>
          <target state="translated">다음은 두 가지 예 <ph id="ph1">&lt;xref:System.ApplicationIdentity.CodeBase%2A&gt;</ph> ActivationContext 이라는 응용 프로그램에 대 한 속성 값:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ApplicationIdentity.CodeBase">
          <source>file://C:/UserFiles/UserName/SolutionName/ActivationContext/publish/ActivationContext.application.</source>
          <target state="translated">file://C:/UserFiles/UserName/SolutionName/ActivationContext/publish/ActivationContext.application.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ApplicationIdentity.CodeBase">
          <source>The following code example demonstrates the use of an <ph id="ph1">&lt;xref:System.ApplicationIdentity&gt;</ph> object to obtain the value of the <ph id="ph2">&lt;xref:System.ApplicationIdentity.CodeBase%2A&gt;</ph> property for a manifest-based application.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ApplicationIdentity&gt;</ph> 개체의 값을 가져옵니다는 <ph id="ph2">&lt;xref:System.ApplicationIdentity.CodeBase%2A&gt;</ph> 매니페스트 기반 응용 프로그램에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ApplicationIdentity.CodeBase">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ApplicationIdentity.FullName">
          <source>Gets the full name of the application.</source>
          <target state="translated">응용 프로그램의 전체 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ApplicationIdentity.FullName">
          <source>The full name of the application, also known as the display name.</source>
          <target state="translated">표시 이름이라고도 하는 응용 프로그램의 전체 이름입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ApplicationIdentity.FullName">
          <source>For a description of the format of the <ph id="ph1">&lt;xref:System.ApplicationIdentity.FullName%2A&gt;</ph> property, see the <ph id="ph2">&lt;xref:System.ApplicationIdentity.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">에 대 한 설명은 형식의 <ph id="ph1">&lt;xref:System.ApplicationIdentity.FullName%2A&gt;</ph> 속성 참조는 <ph id="ph2">&lt;xref:System.ApplicationIdentity.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ApplicationIdentity.FullName">
          <source>The following code example demonstrates the use of an <ph id="ph1">&lt;xref:System.ApplicationIdentity&gt;</ph> object to obtain the value of the <ph id="ph2">&lt;xref:System.ApplicationIdentity.FullName%2A&gt;</ph> property for a manifest-based application.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ApplicationIdentity&gt;</ph> 개체의 값을 가져옵니다는 <ph id="ph2">&lt;xref:System.ApplicationIdentity.FullName%2A&gt;</ph> 매니페스트 기반 응용 프로그램에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ApplicationIdentity.FullName">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to populate with data.</source>
          <target state="translated">데이터로 채울 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>) structure for the serialization.</source>
          <target state="translated">serialization에 대한 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the data needed to serialize the target object.</source>
          <target state="translated">대상 개체를 serialize하는 데 필요한 데이터로 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체를 채웁니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ApplicationIdentity.ToString">
          <source>Returns the full name of the manifest-activated application.</source>
          <target state="translated">매니페스트로 활성화되는 응용 프로그램의 전체 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ApplicationIdentity.ToString">
          <source>The full name of the manifest-activated application.</source>
          <target state="translated">매니페스트로 활성화되는 응용 프로그램의 전체 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ApplicationIdentity.ToString">
          <source>For a description of the format of a full name for a manifest activated application, see the <ph id="ph1">&lt;xref:System.ApplicationIdentity.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">매니페스트는 활성화 된 응용 프로그램에 대 한 전체 이름 형식에 대 한 참조는 <ph id="ph1">&lt;xref:System.ApplicationIdentity.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>