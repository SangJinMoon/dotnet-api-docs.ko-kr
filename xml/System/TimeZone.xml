<Type Name="TimeZone" FullName="System.TimeZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48c8637cd68b6bc9b5c217e19bb4f6c5c135f7d4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37727742" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TimeZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TimeZone extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.TimeZone" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TimeZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZone abstract" />
  <TypeSignature Language="F#" Value="type TimeZone = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="18340-101">표준 시간대를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="18340-101">Represents a time zone.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18340-102">표준 시간대에 동일한 표준 시간대 사용 되는 지리적 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-102">A time zone is a geographical region in which the same standard time is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="18340-103">가능 하면 사용 합니다 <xref:System.TimeZoneInfo> 대신 클래스는 <xref:System.TimeZone> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-103">Whenever possible, use the <xref:System.TimeZoneInfo> class instead of the <xref:System.TimeZone> class.</span></span>  
  
 <span data-ttu-id="18340-104">사용할 수는 <xref:System.TimeZone> 클래스는 현재 표준 시간대에 대 한 정보를 검색 하 고 시간을 현지 시간에서 utc (협정 세계시)로 또는 그 반대로 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18340-104">You can use the <xref:System.TimeZone> class to retrieve information about the current time zone, and to convert times from local time to Coordinated Universal Time (UTC) or vice versa.</span></span> <span data-ttu-id="18340-105">그러나 사용할 수 없습니다는 <xref:System.TimeZone> 다른 시간대의 날짜 및 시간 변환을 처리 하기 위해 또는 현지 시간대 이외의 표준 시간대를 나타내는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-105">However, you cannot use the <xref:System.TimeZone> class to represent time zones other than the local zone or to handle date and time conversions from one time zone to another.</span></span> <span data-ttu-id="18340-106">이 목적을 위해 사용 된 <xref:System.TimeZoneInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-106">For this purpose, use the <xref:System.TimeZoneInfo> class.</span></span> <span data-ttu-id="18340-107">사용자 지정 표준 시간대를 만들고 다른 시간대의 시간을 변환할 수 로컬 시스템에 정의 된 표준 시간대에 대 한 정보를 검색할이 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18340-107">You can use this class to retrieve information on any time zone defined on the local system, to create custom time zones, and to convert times from one time zone to another.</span></span>  
  
 <span data-ttu-id="18340-108"><xref:System.TimeZone> 클래스는 현지 표준 시간대에 대 한 단일 일광 절약 시간 조정 규칙에만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-108">The <xref:System.TimeZone> class supports only a single daylight saving time adjustment rule for the local time zone.</span></span> <span data-ttu-id="18340-109">결과적으로 <xref:System.TimeZone> 클래스 일광 절약 시간 정보를 보고 하거나는 최신 조정 규칙을 적용 되는 기간 동안만 UTC와 현지 시간 사이의 변환 정확 하 게 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18340-109">As a result, the <xref:System.TimeZone> class can accurately report daylight saving time information or convert between UTC and local time only for the period in which the latest adjustment rule is in effect.</span></span> <span data-ttu-id="18340-110">반면,는 <xref:System.TimeZoneInfo> 클래스 여러 조정 규칙을 지원 하므로 기록 표준 시간대 데이터로 작업할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18340-110">In contrast, the <xref:System.TimeZoneInfo> class supports multiple adjustment rules, which makes it possible to work with historic time zone data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18340-111">다음 예제에서는 참조 및 선택한 표시 `TimeZone` 요소 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-111">The following example references and displays selected `TimeZone` class elements.</span></span>  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="18340-112">
        <para>에 대 한 구현을 제공 하는 것 외에도 해당 <see langword="abstract" /> 멤버 (표시 된 <see langword="MustOverride" /> Visual basic에서), 클래스에서 파생 된 것 <see cref="T:System.TimeZone" /> 의 기본 동작 재정의 <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> 메서드. 왜냐하면의 기본 동작 <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> .NET Framework 버전 2.0에 대 한 호출에 종속 되지 않습니다 <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />.NET Framework 버전 1.0 및 1.1에서에서 수행한 것 처럼, 합니다.  자세한 내용은 참조는 <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> 메서드.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="18340-112">
          <para>In addition to providing implementations for its <see langword="abstract" /> members (those marked <see langword="MustOverride" /> in Visual Basic), it is important that classes derived from <see cref="T:System.TimeZone" /> override the default behavior of the <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> method. This is because the default behavior of <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> in the .NET Framework version 2.0 does not depend on a call to <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />, as it did in the .NET Framework versions 1.0 and 1.1.  For details, see the <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> method.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeZone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TimeZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18340-113">
            <see cref="T:System.TimeZone" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-113">Initializes a new instance of the <see cref="T:System.TimeZone" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZone CurrentTimeZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZone CurrentTimeZone" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.CurrentTimeZone" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentTimeZone As TimeZone" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZone ^ CurrentTimeZone { TimeZone ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeZone : TimeZone" Usage="System.TimeZone.CurrentTimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18340-114">현재 컴퓨터의 표준 시간대를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-114">Gets the time zone of the current computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18340-115">현재 현지 시간대를 나타내는 <see cref="T:System.TimeZone" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-115">A <see cref="T:System.TimeZone" /> object that represents the current local time zone.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18340-116">합니다 <xref:System.TimeZone.CurrentTimeZone%2A> 속성에 해당 하는 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-116">The <xref:System.TimeZone.CurrentTimeZone%2A> property corresponds to the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="18340-117">가능 하면 사용 된 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-117">Whenever possible, use the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18340-118">다음 예제에서는 참조는 `CurrentTimeZone` 속성과 표준 시간에 대 한 이름 및 일광 절약 시간제 현지 표준 시간대를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-118">The following example references the `CurrentTimeZone` property and displays the names for standard time and daylight saving time for the local time zone.</span></span>  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="18340-119">
            <para>현지 시간 영역 데이터가 후 캐시 된 <see cref="P:System.TimeZone.CurrentTimeZone" /> 은 먼저 표준 시간대 정보를 검색 하는 데 사용 됩니다. 시스템의 로컬 표준 시간대 이후에 변경 된 <see cref="P:System.TimeZone.CurrentTimeZone" /> 속성이이 변경 내용을 반영 하지 않습니다. 응용 프로그램을 실행 하는 동안 표준 시간대 변경 내용을 처리 해야 할 경우, 사용 된 <see cref="T:System.TimeZoneInfo" /> 클래스 및 호출 해당 <see cref="M:System.TimeZoneInfo.ClearCachedData" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-119">
              <para>Local time zone data is cached after <see cref="P:System.TimeZone.CurrentTimeZone" /> is first used to retrieve time zone information. If the system's local time zone subsequently changes, the <see cref="P:System.TimeZone.CurrentTimeZone" /> property does not reflect this change. If you need to handle time zone changes while your application is running, use the <see cref="T:System.TimeZoneInfo" /> class and call its <see cref="M:System.TimeZoneInfo.ClearCachedData" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.TimeZoneInfo.Local" />
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public abstract string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightName : string" Usage="System.TimeZone.DaylightName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18340-120">일광 절약 표준 시간대 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-120">Gets the daylight saving time zone name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18340-121">일광 절약 표준 시간대 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-121">The daylight saving time zone name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18340-122">빈 문자열 표준 시간대의 일광 절약 시간제를 사용 하지 않는 경우 ("")이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="18340-122">If daylight saving time is not used in the time zone, an empty string ("") is returned.</span></span>  
  
 <span data-ttu-id="18340-123">합니다 <xref:System.TimeZone.DaylightName%2A> 속성에 해당 하는 <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-123">The <xref:System.TimeZone.DaylightName%2A> property corresponds to the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="18340-124">가능 하면 사용 된 <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-124">Whenever possible, use the <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18340-125">다음 예제에서는 참조 및 표시를 `DaylightName` 현재 표준 시간대의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-125">The following example references and displays the `DaylightName` property of the current time zone.</span></span>  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.DaylightName" />
      </Docs>
    </Member>
    <Member MemberName="GetDaylightChanges">
      <MemberSignature Language="C#" Value="public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.DaylightTime GetDaylightChanges(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaylightChanges (year As Integer) As DaylightTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Globalization::DaylightTime ^ GetDaylightChanges(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetDaylightChanges : int -&gt; System.Globalization.DaylightTime" Usage="timeZone.GetDaylightChanges year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DaylightTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="18340-126">일광 절약 시간이 적용되는 연도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-126">The year that the daylight saving time period applies to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18340-127">특정 연도에 대한 일광 절약 시간 적용 기간을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-127">Returns the daylight saving time period for a particular year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18340-128">
            <paramref name="year" />에서 일광 절약 시간의 시작 및 종료 날짜를 포함하는 <see cref="T:System.Globalization.DaylightTime" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-128">A <see cref="T:System.Globalization.DaylightTime" /> object that contains the start and end date for daylight saving time in <paramref name="year" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18340-129">연간 일광 절약 시간 마침표를 하나만 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="18340-129">Only one daylight saving time period per year is supported.</span></span>  
  
 <span data-ttu-id="18340-130">반환 값은 현재 표준 시간대의 일광 절약 시간제를 사용 하지 않으면를 <xref:System.Globalization.DaylightTime> 개체를 여기서 값 <xref:System.Globalization.DaylightTime.Start%2A> 및 <xref:System.Globalization.DaylightTime.End%2A> 는 <xref:System.DateTime.MinValue?displayProperty=nameWithType>의 값 <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=nameWithType> 는 <xref:System.TimeSpan> 틱 수가 0으로 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-130">If daylight saving time is not used in the current time zone, the return value is a <xref:System.Globalization.DaylightTime> object, where the value of <xref:System.Globalization.DaylightTime.Start%2A> and <xref:System.Globalization.DaylightTime.End%2A> is <xref:System.DateTime.MinValue?displayProperty=nameWithType>, and the value of <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=nameWithType> is a <xref:System.TimeSpan> initialized to 0 ticks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="18340-131">
            <paramref name="year" />가 1보다 작거나 9999보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-131">
              <paramref name="year" /> is less than 1 or greater than 9999.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="18340-132">
            <para>때문에 합니다 <see cref="T:System.TimeZone" /> 클래스가 하나만 일광 절약 시간 조정 규칙을 지원 합니다 <see cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" /> 을 해당 연도에 조정 규칙을 실제로 적용 되는지 여부에 관계 없이 모든 연도 현재 조정 규칙을 적용 하는 메서드. 배열을 사용 하 여 보다 정확한 결과 얻을 수 운영 체제 자체에 정확한 데이터를 특정 연도 대 한 가정 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 반환한 개체는 <see cref="M:System.TimeZoneInfo.GetAdjustmentRules" /> 메서드. <see cref="P:System.Globalization.DaylightTime.Start" />, <see cref="P:System.Globalization.DaylightTime.End" />, 및 <see cref="P:System.Globalization.DaylightTime.Delta" /> 속성에 해당 합니다 <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />, <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />, 및 <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 속성입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-132">
              <para>Because the <see cref="T:System.TimeZone" /> class supports only one daylight saving time adjustment rule, the <see cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" /> method applies the current adjustment rule to any year, regardless of whether the adjustment rule actually applies to that year. Assuming that the operating system itself has accurate data for a particular year, a more accurate result is available by working with the array of <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects returned by the <see cref="M:System.TimeZoneInfo.GetAdjustmentRules" /> method. The <see cref="P:System.Globalization.DaylightTime.Start" />, <see cref="P:System.Globalization.DaylightTime.End" />, and <see cref="P:System.Globalization.DaylightTime.Delta" /> properties correspond to the <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />, <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />, and <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> properties.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.TimeZoneInfo.GetAdjustmentRules" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public abstract TimeSpan GetUtcOffset (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUtcOffset (time As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TimeSpan GetUtcOffset(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetUtcOffset : DateTime -&gt; TimeSpan" Usage="timeZone.GetUtcOffset time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="18340-133">날짜 및 시간 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-133">A date and time value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18340-134">지정된 현지 시간에 대한 UTC(협정 세계시) 오프셋을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-134">Returns the Coordinated Universal Time (UTC) offset for the specified local time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18340-135">
            <paramref name="time" />의 UTC(협정 세계시) 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-135">The Coordinated Universal Time (UTC) offset from <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18340-136">이 메서드는 반환 오프셋 또는 차이 사이 `time` 매개 변수 및 utc (협정 세계시).</span><span class="sxs-lookup"><span data-stu-id="18340-136">This method returns the offset, or difference, between the `time` parameter and Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="18340-137">구체적인 요건은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="18340-137">That is:</span></span>  
  
 <span data-ttu-id="18340-138">`time` = UTC + 오프셋</span><span class="sxs-lookup"><span data-stu-id="18340-138">`time` = UTC + offset</span></span>  
  
 <span data-ttu-id="18340-139">표준 시간대를 해석 하는 메서드 `time` 에 따라 해당 <xref:System.DateTime.Kind%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-139">The method interprets the time zone of `time` based on its <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="18340-140">경우 값을 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType> 또는 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, 메서드는 현지 표준 시간대의 오프셋을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-140">If the value of the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, the method returns the offset of the local time zone.</span></span> <span data-ttu-id="18340-141">경우 값을 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, 메서드 오프셋을 같음 반환 <xref:System.TimeSpan.Zero?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-141">If the value of the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, the method returns an offset equal to <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="18340-142">현지 표준 시간대가 일광 절약 시간제를 따르는 경우 <xref:System.TimeZone.GetUtcOffset%2A> 에 현재 조정 규칙을 적용 `time` 현지 표준 시간대의 오프셋을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-142">If the local time zone observes daylight saving time, <xref:System.TimeZone.GetUtcOffset%2A> applies the current adjustment rule to `time` when determining the offset of the local time zone.</span></span> <span data-ttu-id="18340-143">반환 된 오프셋, <xref:System.TimeZone.GetUtcOffset%2A> 반영 하는지 여부를 `time` 시간대의 표준 시간 또는 일광 절약 시간 안에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="18340-143">That is, the offset returned by <xref:System.TimeZone.GetUtcOffset%2A> reflects whether `time` falls in the time zone's standard time or its daylight saving time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18340-144"><xref:System.TimeZone.GetUtcOffset%2A> 메서드는 현지 표준 시간대에 대 한 현재 일광 절약 시간 조정 규칙만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-144">The <xref:System.TimeZone.GetUtcOffset%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone.</span></span> <span data-ttu-id="18340-145">결과적으로, 반드시 정확 하 게 되는 기간에는 최신 조정 규칙을 적용 하는 동안에 로컬 시간 UTC 오프셋을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-145">As a result, it is guaranteed to accurately return the UTC offset of a local time only during the period in which the latest adjustment rule is in effect.</span></span> <span data-ttu-id="18340-146">경우 부정확 한 결과 반환할 수 있습니다이 `time` 기록 날짜와 이전 조정 규칙에 적용 된 시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-146">It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.</span></span>  
  
 <span data-ttu-id="18340-147">합니다 <xref:System.TimeZone.GetUtcOffset%2A> 에 해당 하는 메서드를 <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="18340-147">The <xref:System.TimeZone.GetUtcOffset%2A> method corresponds to the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="18340-148">가능 하면 사용 된 <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="18340-148">Whenever possible, use the <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="18340-149">날짜 및 시간 값 표현 되므로 `time` UTC의 해당이 값의이 오프셋은 밀접 하 게 연관 되지, 로컬 또는 지정 되지 않은 날짜 및 시간 값에 다른 컴퓨터에서 실행 하는 경우 또는 아래에 있는 동일한 컴퓨터에서 실행할 때 다른 오프셋된 값을 반환할 수 있습니다 다른 표준 시간대입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-149">Because the date and time value represented by `time` and this value's offset from UTC are not tightly coupled, a local or unspecified date and time value can return a different offset value when run on different computers or when run on the same computer under different time zones.</span></span> <span data-ttu-id="18340-150">이 동작은 바람직하지 않을 경우 사용 하 여는 <xref:System.DateTimeOffset> 값을 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-150">If this behavior is undesirable, use a <xref:System.DateTimeOffset> value instead.</span></span> <span data-ttu-id="18340-151"><xref:System.DateTimeOffset> 기원후 밀접 하 게 결합 날짜 및 시간 값을 해당 오프셋을 사용 하 여 UTC에서.</span><span class="sxs-lookup"><span data-stu-id="18340-151">The <xref:System.DateTimeOffset> data type tightly couples a date and time value with its offset from UTC.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="18340-152">지정된 날짜와 시간이 일광 절약 시간 적용 기간 내에 있는지의 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-152">Returns a value indicating whether a specified date and time is within a daylight saving time period.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public virtual bool IsDaylightSavingTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDaylightSavingTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDaylightSavingTime (time As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDaylightSavingTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member IsDaylightSavingTime : DateTime -&gt; bool&#xA;override this.IsDaylightSavingTime : DateTime -&gt; bool" Usage="timeZone.IsDaylightSavingTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="18340-153">날짜와 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-153">A date and time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18340-154">지정된 날짜와 시간이 일광 절약 시간 적용 기간 내에 있는지의 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-154">Returns a value indicating whether the specified date and time is within a daylight saving time period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18340-155">
            <paramref name="time" />이 일광 절약 시간 적용 기간에 해당하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-155">
              <see langword="true" /> if <paramref name="time" /> is in a daylight saving time period; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18340-156">일광 절약 시간이 적용 되는 연도에서 파생 되는 `time` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-156">The year to which the daylight saving time period applies is derived from the `time` parameter.</span></span>  
  
 <span data-ttu-id="18340-157">때문에 합니다 <xref:System.TimeZone> 클래스는 하나의 일광 절약 시간 조정 규칙을 지원 합니다 <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> 조정 규칙의 유용성에 적용 날짜에 관계 없이 모든 날짜에 현재 조정 규칙을 적용 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="18340-157">Because the <xref:System.TimeZone> class supports a single daylight saving time adjustment rule, the <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> method applies the current adjustment rule to any date, regardless of whether the adjustment rule was in effect on that date.</span></span> <span data-ttu-id="18340-158">사용 하 여 보다 정확한 결과 얻을 수 운영 체제 자체에 정확 하 게 일광 절약 시간 기록 데이터가 가정 된 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="18340-158">Assuming that the operating system itself has accurate historic daylight saving time data, a more accurate result is available by using the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="18340-159">가능 하면 사용 된 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="18340-159">Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDaylightSavingTime(valuetype System.DateTime time, class System.Globalization.DaylightTime daylightTimes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDaylightSavingTime (time As DateTime, daylightTimes As DaylightTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDaylightSavingTime(DateTime time, System::Globalization::DaylightTime ^ daylightTimes);" />
      <MemberSignature Language="F#" Value="static member IsDaylightSavingTime : DateTime * System.Globalization.DaylightTime -&gt; bool" Usage="System.TimeZone.IsDaylightSavingTime (time, daylightTimes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="daylightTimes" Type="System.Globalization.DaylightTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="18340-160">날짜와 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-160">A date and time.</span>
          </span>
        </param>
        <param name="daylightTimes">To be added.</param>
        <summary>
          <span data-ttu-id="18340-161">지정된 날짜와 시간이 지정된 일광 절약 시간 적용 기간 내에 있는지의 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-161">Returns a value indicating whether the specified date and time is within the specified daylight saving time period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18340-162">
            <paramref name="time" />이 <paramref name="daylightTimes" />에 해당하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-162">
              <see langword="true" /> if <paramref name="time" /> is in <paramref name="daylightTimes" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18340-163">합니다 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 메서드 오버이 로드와 동일한 기능을 제공 합니다 <xref:System.TimeZone.IsDaylightSavingTime%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="18340-163">The <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method provides the same functionality as this overload of the <xref:System.TimeZone.IsDaylightSavingTime%2A> method.</span></span> <span data-ttu-id="18340-164">가능 하면 사용 된 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="18340-164">Whenever possible, use the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="18340-165">
            <paramref name="daylightTimes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-165">
              <paramref name="daylightTimes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public abstract string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardName : string" Usage="System.TimeZone.StandardName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18340-166">표준 시간대 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-166">Gets the standard time zone name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18340-167">표준 시간대 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-167">The standard time zone name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18340-168">합니다 <xref:System.TimeZone.StandardName%2A> 속성에 해당 하는 <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-168">The <xref:System.TimeZone.StandardName%2A> property corresponds to the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="18340-169">가능 하면 사용 된 <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-169">Whenever possible, use the <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18340-170">다음 예제에서는 참조 및 표시를 `StandardName` 현재 표준 시간대의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-170">The following example references and displays the `StandardName` property of the current time zone.</span></span>  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="18340-171">이 속성을 <see langword="null" />로 설정하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-171">An attempt was made to set this property to <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.TimeZoneInfo.StandardName" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToLocalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToLocalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToLocalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToLocalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToLocalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToLocalTime : DateTime -&gt; DateTime&#xA;override this.ToLocalTime : DateTime -&gt; DateTime" Usage="timeZone.ToLocalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="18340-172">UTC(협정 세계시) 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-172">A Coordinated Universal Time (UTC) time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18340-173">지정된 날짜 및 시간 값에 해당하는 현지 시간을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-173">Returns the local time that corresponds to a specified date and time value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18340-174">
            <paramref name="time" />에 해당하는 현지 시간을 값으로 가지는 <see cref="T:System.DateTime" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-174">A <see cref="T:System.DateTime" /> object whose value is the local time that corresponds to <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18340-175">다음 표에서 간의 관계를 보여 줍니다.는 `time` 매개 변수 및 <xref:System.DateTime> 이 메서드에서 반환 된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-175">The following table shows the relationship between the `time` parameter and the <xref:System.DateTime> value returned by this method.</span></span>  
  
|<span data-ttu-id="18340-176">`time` 매개 변수</span><span class="sxs-lookup"><span data-stu-id="18340-176">`time` parameter</span></span>|<span data-ttu-id="18340-177">동작</span><span class="sxs-lookup"><span data-stu-id="18340-177">Behavior</span></span>|<span data-ttu-id="18340-178">반환 값</span><span class="sxs-lookup"><span data-stu-id="18340-178">Return value</span></span>|  
|----------------------|--------------|------------------|  
|<span data-ttu-id="18340-179">Utc (협정 세계시) 시간 (<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="18340-179">A Coordinated Universal Time (UTC) time (<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>).</span></span>|<span data-ttu-id="18340-180">UTC에서 시간을 현지 시간으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-180">Converts the time from UTC to the local time.</span></span>|<span data-ttu-id="18340-181">`time`에 해당하는 현지 시간을 값으로 가지는 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-181">A <xref:System.DateTime> object whose value is the local time that corresponds to `time`.</span></span>|  
|<span data-ttu-id="18340-182">현지 시간 (<xref:System.DateTimeKind.Local?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="18340-182">A local time (<xref:System.DateTimeKind.Local?displayProperty=nameWithType>).</span></span>|<span data-ttu-id="18340-183">변환할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="18340-183">No conversion necessary.</span></span>|<span data-ttu-id="18340-184">동일 <xref:System.DateTime> 나타내는 값을 `time` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-184">The same <xref:System.DateTime> value represented by the `time` parameter.</span></span>|  
|<span data-ttu-id="18340-185">지정 되지 않은 시간 (<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="18340-185">An unspecified time (<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>).</span></span>|<span data-ttu-id="18340-186">utc 시간과 현지 시간을 UTC에서 변환 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-186">Assumes that the time is UTC and converts it from UTC to the local time.</span></span>|<span data-ttu-id="18340-187">`time`에 해당하는 현지 시간을 값으로 가지는 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-187">A <xref:System.DateTime> object whose value is the local time that corresponds to `time`.</span></span>|  
  
 <span data-ttu-id="18340-188">현지 표준 시간대가 일광 절약 시간제를 따르는 경우 <xref:System.TimeZone.ToLocalTime%2A> 에 현재 조정 규칙을 적용 `time` 변환을 수행 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="18340-188">If the local time zone observes daylight saving time, <xref:System.TimeZone.ToLocalTime%2A> applies the current adjustment rule to `time` when performing the conversion.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18340-189"><xref:System.TimeZone.ToLocalTime%2A> 메서드는 현지 표준 시간대에 대 한 현재 일광 절약 시간 조정 규칙만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-189">The <xref:System.TimeZone.ToLocalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone.</span></span> <span data-ttu-id="18340-190">결과적으로, 반드시 정확 하 게 되는 기간에는 최신 조정 규칙을 적용 하는 동안에 특정 UTC 시간에 해당 하는 현지 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-190">As a result, it is guaranteed to accurately return the local time corresponding to a particular UTC time only during the period in which the latest adjustment rule is in effect.</span></span> <span data-ttu-id="18340-191">경우 부정확 한 결과 반환할 수 있습니다이 `time` 기록 날짜와 이전 조정 규칙에 적용 된 시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-191">It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.</span></span>  
  
 <span data-ttu-id="18340-192">합니다 <xref:System.TimeZone.ToLocalTime%2A> 에 해당 하는 메서드를 <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> 메서드를 해당 `destinationTimeZone` 매개 변수 설정 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-192">The <xref:System.TimeZone.ToLocalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> method with its `destinationTimeZone` parameter set to <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="18340-193">가능 하면 사용 된 <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="18340-193">Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="18340-194">
            <para>필수는 아니지만 대부분의 경우에서.NET Framework 버전 2.0에서 실행 되는 파생 된 클래스 재정의 해야이 메서드의 기본 구현 합니다. .NET Framework 버전 1.0 및 1.1에서는 <see langword="ToLocalTime" /> 라는 메서드를 <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> 메서드 현지 시간을 반환 하는 경우 일광 절약 시간제에 맞게 조정 합니다. 그러나.NET Framework 2.0부터 기본 구현의 동작에 따라 달라 집니다 합니다 <see cref="P:System.DateTime.Kind" /> 의 속성을 <paramref name="time" /> 매개 변수. 해당 값이 <see cref="F:System.DateTimeKind.Local" />,이 메서드는 반환 <paramref name="time" /> 변경 되지 않습니다. 해당 값이 하나 <see cref="F:System.DateTimeKind.Utc" /> 또는 <see cref="F:System.DateTimeKind.Unspecified" />,이 메서드에서 <paramref name="time" /> 호출 하지 않고 로컬 시스템 시간으로 변환 하는 UTC를 <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> 메서드.  다음 코드에서는 간단히의 기본 구현 재정의 한를 <see langword="ToLocalTime" /> 메서드. 이 코드는 <see langword="internalTimeZone" /> 변수의 전용 인스턴스를 나타냅니다는 <see langword="TimeZone" /> 클래스: [! csharp 코드 [System.TimeZone.ToLocalTime#1] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. TimeZone.ToLocalTime/CS/TimeZone_ToLocalTime.cs#1)] [! vb 코드 [System.TimeZone.ToLocalTime#1] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. TimeZone.ToLocalTime/VB/TimeZone_ToLocalTime.vb#1)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-194">
              <para>Although it is not required, in most cases derived classes running under the .NET Framework version 2.0 should override the default implementation of this method. In the .NET Framework versions 1.0 and 1.1, the <see langword="ToLocalTime" /> method called the <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> method and adjusted for daylight saving time when returning the local time. However, starting with the .NET Framework 2.0, the behavior of the default implementation depends on the <see cref="P:System.DateTime.Kind" /> property of the <paramref name="time" /> parameter. If its value is <see cref="F:System.DateTimeKind.Local" />, this method returns <paramref name="time" /> unchanged. If its value is either <see cref="F:System.DateTimeKind.Utc" /> or <see cref="F:System.DateTimeKind.Unspecified" />, this method assumes <paramref name="time" /> is UTC and converts it to the local system time without calling the <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> method.  The following code provides a simple override of the default implementation of the <see langword="ToLocalTime" /> method. In this code, the <see langword="internalTimeZone" /> variable represents a private instance of the <see langword="TimeZone" /> class:  [!code-csharp[System.TimeZone.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/CS/TimeZone_ToLocalTime.cs#1)] [!code-vb[System.TimeZone.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/VB/TimeZone_ToLocalTime.vb#1)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToUniversalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToUniversalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToUniversalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToUniversalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToUniversalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToUniversalTime : DateTime -&gt; DateTime&#xA;override this.ToUniversalTime : DateTime -&gt; DateTime" Usage="timeZone.ToUniversalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="18340-195">날짜와 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-195">A date and time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18340-196">지정된 시간에 해당하는 UTC(협정 세계시)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-196">Returns the Coordinated Universal Time (UTC) that corresponds to a specified time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="18340-197">
            <paramref name="time" />에 해당하는 UTC(협정 세계시)를 값으로 가지는 <see cref="T:System.DateTime" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18340-197">A <see cref="T:System.DateTime" /> object whose value is the Coordinated Universal Time (UTC) that corresponds to <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18340-198">현지 표준 시간대가 일광 절약 시간제를 따르는 경우 <xref:System.TimeZone.ToUniversalTime%2A> 에 현재 조정 규칙을 적용 합니다 `time` 변환을 수행 하는 경우 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-198">If the local time zone observes daylight saving time, <xref:System.TimeZone.ToUniversalTime%2A> applies the current adjustment rule to the `time` parameter when performing the conversion.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18340-199"><xref:System.TimeZone.ToUniversalTime%2A> 메서드는 현지 표준 시간대에 대 한 현재 일광 절약 시간 조정 규칙만 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-199">The <xref:System.TimeZone.ToUniversalTime%2A> method recognizes only the current daylight saving time adjustment rule for the local time zone.</span></span> <span data-ttu-id="18340-200">결과적으로, 반드시 정확 하 게 협정 세계시 (UTC) 시간에 해당 하는 특정 로컬 되는 기간에는 최신 조정 규칙을 적용 하는 동안에를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-200">As a result, it is guaranteed to accurately return the Coordinated Universal Time (UTC) corresponding to a particular local time only during the period in which the latest adjustment rule is in effect.</span></span> <span data-ttu-id="18340-201">경우 부정확 한 결과 반환할 수 있습니다이 `time` 기록 날짜와 이전 조정 규칙에 적용 된 시간 값입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-201">It may return inaccurate results if `time` is a historic date and time value that was subject to a previous adjustment rule.</span></span>  
  
 <span data-ttu-id="18340-202">경우는 `time` 은 모호한 시간이 매개 변수, 메서드는 표준 시간 임을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-202">If the `time` parameter is an ambiguous time, the method assumes that it is a standard time.</span></span> <span data-ttu-id="18340-203">(모호한 시간은 표준 시간 또는 현지 표준 시간대에서 일광 절약 시간에 매핑될 수 있는.) 경우 `time` 잘못 된 시간인 메서드는 반환 UTC 오프셋이 현지 표준 시간대의 UTC에서 현지 시간을 빼서 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-203">(An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone.) If `time` is an invalid time, the method simply subtracts the local time from the local time zone's UTC offset to return UTC.</span></span> <span data-ttu-id="18340-204">(잘못 된 시간은 일광 절약 시간 조정 규칙 응용 프로그램 때문에 존재 하지 않는 것입니다.)</span><span class="sxs-lookup"><span data-stu-id="18340-204">(An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)</span></span>  
  
 <span data-ttu-id="18340-205">때문에 `time` 해석 되는 현재 시스템에서 현재 표준 시간대를 기준으로이 메서드에서 반환 된 시간과 날짜 다를 수 있습니다 응용 프로그램이 서로 다른 컴퓨터 또는 동일한 컴퓨터에서 다른 표준 시간대를 사용 하 여 실행 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="18340-205">Because `time` is interpreted in relation to the current time zone on the current system, the date and time returned by this method can differ if an application is run on different computers or on the same computer with different time zones.</span></span> <span data-ttu-id="18340-206">시간에서 날짜 및 시간 값을 단일 하 고 명확한 지점을 나타내야 합니다 하는 경우 사용을 <xref:System.DateTimeOffset> 를 현지 시간을 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="18340-206">For cases in which a date and time value must represent a single, unambiguous point in time, use a <xref:System.DateTimeOffset> value to represent the local time.</span></span>  
  
 <span data-ttu-id="18340-207"><xref:System.TimeZone.ToUniversalTime%2A> 에 해당 하는 메서드를 <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> 메서드 오버 로드는 <xref:System.DateTime> 매개 변수입니다 <xref:System.DateTime.Kind%2A> 속성 같지 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-207">The <xref:System.TimeZone.ToUniversalTime%2A> method corresponds to the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> method overload with a <xref:System.DateTime> parameter whose <xref:System.DateTime.Kind%2A> property does not equal <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="18340-208">가능 하면 사용 된 <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="18340-208">Whenever possible, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      </Docs>
    </Member>
  </Members>
</Type>