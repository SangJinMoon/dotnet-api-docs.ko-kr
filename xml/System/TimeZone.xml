<Type Name="TimeZone" FullName="System.TimeZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72b216b53b069d5fe20d01e603a0145f8e6c8052" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36428708" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TimeZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TimeZone extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.TimeZone" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TimeZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZone abstract" />
  <TypeSignature Language="F#" Value="type TimeZone = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>표준 시간대를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 표준 시간대는 동일한 표준 시간대 사용 되는 지리적 영역입니다.  
  
> [!IMPORTANT]
>  사용 가능한 경우 항상는 <xref:System.TimeZoneInfo> 클래스 대신는 <xref:System.TimeZone> 클래스입니다.  
  
 사용할 수는 <xref:System.TimeZone> 클래스를 현재 표준 시간대에 대 한 정보를 검색 하 고 시간을 현지 시간에서 utc (협정 세계시)로 또는 그 반대로 변환할 수 있습니다. 그러나 사용할 수 없습니다는 <xref:System.TimeZone> 현지 시간대 이외의 다른 시간대 하거나 다른 한 표준 시간대의 날짜 및 시간 변환을 처리 하는 클래스입니다. 이 작업을 위해 사용 하 여는 <xref:System.TimeZoneInfo> 클래스입니다. 이 클래스를 사용자 지정 표준 시간대를 만들고 시간을 한 표준 시간대에서 다른 변환할를 로컬 시스템에 정의 된 표준 시간대에 대 한 정보를 검색에 사용할 수 있습니다.  
  
 <xref:System.TimeZone> 클래스 현지 표준 시간대에 대 한 하나의 일광 절약 시간 조정 규칙에만 지원 합니다. 결과적으로 <xref:System.TimeZone> 클래스 일광 절약 시간 정보를 보고 정확 하 게 하거나는 최신 조정 규칙이 적용 되는 기간에 대 한 UTC와 현지 시간으로 변환할 수 있습니다. 반면,는 <xref:System.TimeZoneInfo> 클래스 여러 조정 규칙이 지원 시간대 기록 데이터로 작업할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 참조와 선택 표시 `TimeZone` 클래스 요소입니다.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>에 대 한 구현을 제공 하는 것 외에도 해당 <see langword="abstract" /> 멤버 (표시 된 <see langword="MustOverride" /> Visual basic에서),이 클래스에서 파생 되는 중요 <see cref="T:System.TimeZone" /> 의 기본 동작을 재정의 <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> 메서드. 때문에 이것이의 기본 동작 <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> .NET framework에서 버전 2.0에 대 한 호출에 종속 되지 않는 <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />.NET Framework 버전 1.0 및 1.1에서에서와 마찬가지로, 합니다.  자세한 내용은 참조는 <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> 메서드.</para>
    </block>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeZone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TimeZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.TimeZone" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZone CurrentTimeZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZone CurrentTimeZone" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.CurrentTimeZone" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentTimeZone As TimeZone" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZone ^ CurrentTimeZone { TimeZone ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeZone : TimeZone" Usage="System.TimeZone.CurrentTimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 컴퓨터의 표준 시간대를 가져옵니다.</summary>
        <value>현재 현지 시간대를 나타내는 <see cref="T:System.TimeZone" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZone.CurrentTimeZone%2A> 속성에 해당 하는 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 속성입니다. 가능 하면 사용 된 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 참조는 `CurrentTimeZone` 속성 및 표준 시간에 대 한 이름 및 일광 절약 시간제 현지 표준 시간대를 표시 합니다.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>현지 표준 시간대 데이터가 캐시 되는 후 <see cref="P:System.TimeZone.CurrentTimeZone" /> 은 먼저 표준 시간대 정보를 검색 하는 데 사용 됩니다. 시스템의 로컬 표준 시간대 이후에 변경 된 <see cref="P:System.TimeZone.CurrentTimeZone" /> 속성이 변경이 내용을 반영 하지 않습니다. 응용 프로그램을 실행 하는 동안 표준 시간대 변경 내용을 처리 하는 경우, 사용 하 여는 <see cref="T:System.TimeZoneInfo" /> 클래스 및 호출 해당 <see cref="M:System.TimeZoneInfo.ClearCachedData" /> 메서드.</para>
        </block>
        <altmember cref="P:System.TimeZoneInfo.Local" />
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public abstract string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightName : string" Usage="System.TimeZone.DaylightName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>일광 절약 표준 시간대 이름을 가져옵니다.</summary>
        <value>일광 절약 표준 시간대 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 빈 문자열 표준 시간대의 일광 절약 시간제를 사용 하지 않는 경우 ("")이 반환 됩니다.  
  
 <xref:System.TimeZone.DaylightName%2A> 속성에 해당 하는 <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> 속성입니다. 가능 하면 사용 된 <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 참조와 표시는 `DaylightName` 현재 표준 시간대의 속성입니다.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.DaylightName" />
      </Docs>
    </Member>
    <Member MemberName="GetDaylightChanges">
      <MemberSignature Language="C#" Value="public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.DaylightTime GetDaylightChanges(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaylightChanges (year As Integer) As DaylightTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Globalization::DaylightTime ^ GetDaylightChanges(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetDaylightChanges : int -&gt; System.Globalization.DaylightTime" Usage="timeZone.GetDaylightChanges year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DaylightTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">일광 절약 시간이 적용되는 연도입니다.</param>
        <summary>특정 연도에 대한 일광 절약 시간 적용 기간을 반환합니다.</summary>
        <returns>
          <paramref name="year" />에서 일광 절약 시간의 시작 및 종료 날짜를 포함하는 <see cref="T:System.Globalization.DaylightTime" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연간 일광 절약 시간제 마침표를 하나만 사용할 수 있습니다.  
  
 반환 값은 현재 표준 시간대의 일광 절약 시간제를 사용 하지 않으면는 <xref:System.Globalization.DaylightTime> 개체를 여기서 값 <xref:System.Globalization.DaylightTime.Start%2A> 및 <xref:System.Globalization.DaylightTime.End%2A> 은 <xref:System.DateTime.MinValue?displayProperty=nameWithType>의 값과 <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=nameWithType> 은 <xref:System.TimeSpan> 틱 수가 0으로 초기화 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />가 1보다 작거나 9999보다 큽니다.</exception>
        <block subset="none" type="usage">
          <para>때문에 <see cref="T:System.TimeZone" /> 클래스 하나만 일광 절약 시간 조정 규칙 지원는 <see cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" /> 메서드는 현재 조정 규칙을 조정 규칙 해당 연도에 실제로 적용 되는지 여부에 관계 없이 모든 연도 적용 됩니다. 배열을 사용 하 여 더 정확한 결과 사용할 수 있는 운영 체제 자체에 특정 연도 대 한 정확한 데이터가 있다고 가정할 경우 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 에서 반환 된 개체는 <see cref="M:System.TimeZoneInfo.GetAdjustmentRules" /> 메서드. <see cref="P:System.Globalization.DaylightTime.Start" />, <see cref="P:System.Globalization.DaylightTime.End" />, 및 <see cref="P:System.Globalization.DaylightTime.Delta" /> 속성에 해당 하는 <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />, <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />, 및 <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 속성입니다.</para>
        </block>
        <altmember cref="M:System.TimeZoneInfo.GetAdjustmentRules" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public abstract TimeSpan GetUtcOffset (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUtcOffset (time As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TimeSpan GetUtcOffset(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetUtcOffset : DateTime -&gt; TimeSpan" Usage="timeZone.GetUtcOffset time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">날짜 및 시간 값입니다.</param>
        <summary>지정된 현지 시간에 대한 UTC(협정 세계시) 오프셋을 반환합니다.</summary>
        <returns>
          <paramref name="time" />의 UTC(협정 세계시) 오프셋입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 반환 오프셋 또는 차이 사이 `time` 매개 변수 및 utc (협정 세계시)입니다. 구체적인 요건은 다음과 같습니다.  
  
 `time` = UTC + 오프셋  
  
 표준 시간대에서 크거나 `time` 에 따라 해당 <xref:System.DateTime.Kind%2A> 속성입니다. 하는 경우의 값은 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Local?displayProperty=nameWithType> 또는 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, 메서드 현지 표준 시간대 오프셋을 반환 합니다. 하는 경우의 값은 <xref:System.DateTime.Kind%2A> 속성은 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, 메서드가 오프셋에 반환 <xref:System.TimeSpan.Zero?displayProperty=nameWithType>합니다.  
  
 현지 표준 시간대가 일광 절약 시간제를 따르는 경우 <xref:System.TimeZone.GetUtcOffset%2A> 에 현재 조정 규칙을 적용 `time` 현지 표준 시간대 오프셋 결정할 때. 반환 되는 오프셋, 즉 <xref:System.TimeZone.GetUtcOffset%2A> 반영 하는지 여부를 `time` 속하는 표준 시간대의 표준 시간 또는 일광 절약 시간.  
  
> [!NOTE]
>  <xref:System.TimeZone.GetUtcOffset%2A> 메서드는 현재 일광 절약 시간 조정에 대 한 규칙만 현지 표준 시간대를 인식 합니다. 결과적으로, 정확 하 게 반환 현지 시간 변수의 UTC 오프셋이 있는 최신 조정 규칙이 적용 되는 기간 동안에 보장 됩니다. 경우에 부정확 한 결과가 반환 될 수 있습니다 `time` 가 기록 날짜 및 이전 조정 규칙에 종속 되는 시간 값입니다.  
  
 <xref:System.TimeZone.GetUtcOffset%2A> 에 해당 하는 메서드는 <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> 메서드. 가능 하면 사용 된 <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> 메서드.  
  
 날짜 및 시간 값 표현 되므로 `time` UTC에서의 해당이 값의이 오프셋 느슨한, 로컬 또는 지정 되지 않은 날짜 및 시간 값에는 경우 다른 컴퓨터에서 실행 또는 아래에 있는 동일한 컴퓨터에서 실행 시점에 다른 오프셋된 값을 반환할 수 있습니다 다른 표준 시간대입니다. 사용 하 여이 동작이 필요 없는 경우는 <xref:System.DateTimeOffset> 값을 대신 합니다. <xref:System.DateTimeOffset> 데이터 형식을 밀접 하 게 결합 날짜 및 시간 값의 오프셋으로 측정 된 UTC에서 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 날짜와 시간이 일광 절약 시간 적용 기간 내에 있는지의 여부를 나타내는 값을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public virtual bool IsDaylightSavingTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDaylightSavingTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDaylightSavingTime (time As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDaylightSavingTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member IsDaylightSavingTime : DateTime -&gt; bool&#xA;override this.IsDaylightSavingTime : DateTime -&gt; bool" Usage="timeZone.IsDaylightSavingTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">날짜와 시간입니다.</param>
        <summary>지정된 날짜와 시간이 일광 절약 시간 적용 기간 내에 있는지의 여부를 나타내는 값을 반환합니다.</summary>
        <returns>
          <paramref name="time" />이 일광 절약 시간 적용 기간에 해당하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일광 절약 시간이 적용 되는 연도에서 파생 됩니다는 `time` 매개 변수입니다.  
  
 때문에 <xref:System.TimeZone> 클래스는 하나의 일광 절약 시간 조정 규칙을 지원 합니다.는 <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> 메서드는 현재 조정 규칙에 관계 없이 여부 조정 규칙에 적용 해당 날짜의 모든 날짜에 적용 됩니다. 사용 하 여 더 정확한 결과 사용할 수 있는 운영 체제 자체에 정확 하 게 일광 절약 시간 기록 데이터가 있다고 가정할 경우는 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 메서드. 가능 하면 사용 된 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDaylightSavingTime(valuetype System.DateTime time, class System.Globalization.DaylightTime daylightTimes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDaylightSavingTime (time As DateTime, daylightTimes As DaylightTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDaylightSavingTime(DateTime time, System::Globalization::DaylightTime ^ daylightTimes);" />
      <MemberSignature Language="F#" Value="static member IsDaylightSavingTime : DateTime * System.Globalization.DaylightTime -&gt; bool" Usage="System.TimeZone.IsDaylightSavingTime (time, daylightTimes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="daylightTimes" Type="System.Globalization.DaylightTime" />
      </Parameters>
      <Docs>
        <param name="time">날짜와 시간입니다.</param>
        <param name="daylightTimes">To be added.</param>
        <summary>지정된 날짜와 시간이 지정된 일광 절약 시간 적용 기간 내에 있는지의 여부를 나타내는 값을 반환합니다.</summary>
        <returns>
          <paramref name="time" />이 <paramref name="daylightTimes" />에 해당하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 이 오버 로드와 동일한 기능을 제공 하는 메서드는 <xref:System.TimeZone.IsDaylightSavingTime%2A> 메서드. 가능 하면 사용 된 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="daylightTimes" />가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public abstract string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardName : string" Usage="System.TimeZone.StandardName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표준 시간대 이름을 가져옵니다.</summary>
        <value>표준 시간대 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZone.StandardName%2A> 속성에 해당 하는 <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> 속성입니다. 가능 하면 사용 된 <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 참조와 표시는 `StandardName` 현재 표준 시간대의 속성입니다.  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">이 속성을 <see langword="null" />로 설정하려고 한 경우</exception>
        <altmember cref="P:System.TimeZoneInfo.StandardName" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToLocalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToLocalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToLocalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToLocalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToLocalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToLocalTime : DateTime -&gt; DateTime&#xA;override this.ToLocalTime : DateTime -&gt; DateTime" Usage="timeZone.ToLocalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">UTC(협정 세계시) 시간입니다.</param>
        <summary>지정된 날짜 및 시간 값에 해당하는 현지 시간을 반환합니다.</summary>
        <returns>
          <paramref name="time" />에 해당하는 현지 시간을 값으로 가지는 <see cref="T:System.DateTime" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 간의 관계를 보여 줍니다.는 `time` 매개 변수 및 <xref:System.DateTime> 이 메서드에서 반환 된 값입니다.  
  
|`time` 매개 변수|동작|반환 값|  
|----------------------|--------------|------------------|  
|Utc (협정 세계시) 시간 (<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>).|측정 된 UTC에서의 시간을 현지 시간으로 변환합니다.|`time`에 해당하는 현지 시간을 값으로 가지는 <xref:System.DateTime> 개체입니다.|  
|현지 시간 (<xref:System.DateTimeKind.Local?displayProperty=nameWithType>).|변환할 필요가 없습니다.|동일한 <xref:System.DateTime> 가 나타내는 값의 `time` 매개 변수입니다.|  
|지정 되지 않은 시간 (<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>).|시간이 UTC 이며 현지 시간으로 측정 된 UTC에서 변환 한다고 가정 합니다.|`time`에 해당하는 현지 시간을 값으로 가지는 <xref:System.DateTime> 개체입니다.|  
  
 현지 표준 시간대가 일광 절약 시간제를 따르는 경우 <xref:System.TimeZone.ToLocalTime%2A> 에 현재 조정 규칙을 적용 `time` 변환을 수행할 때.  
  
> [!NOTE]
>  <xref:System.TimeZone.ToLocalTime%2A> 메서드는 현재 일광 절약 시간 조정에 대 한 규칙만 현지 표준 시간대를 인식 합니다. 결과적으로,는 최신 조정 규칙이 적용 되는 기간 동안에 특정 UTC 시간에 해당 하는 현지 시간을 정확 하 게 반환할 보장 됩니다. 경우에 부정확 한 결과가 반환 될 수 있습니다 `time` 가 기록 날짜 및 이전 조정 규칙에 종속 되는 시간 값입니다.  
  
 <xref:System.TimeZone.ToLocalTime%2A> 에 해당 하는 메서드는 <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> 메서드를 해당 `destinationTimeZone` 매개 변수 설정 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>합니다. 가능 하면 사용 된 <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>필수는 아니지만 대부분의 경우에서.NET Framework 버전 2.0에서 실행 되는 파생된 클래스를 재정의 해야이 메서드의 기본 구현 합니다. .NET Framework 버전 1.0 및 1.1에서는 <see langword="ToLocalTime" /> 호출 메서드는 <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> 메서드 현지 시간을 반환 하는 경우 일광 절약 시간제에 맞게 조정 합니다. 그러나.NET Framework 2.0 부터는 동작은 기본 구현에 따라는 <see cref="P:System.DateTime.Kind" /> 의 속성은 <paramref name="time" /> 매개 변수입니다. 값이 <see cref="F:System.DateTimeKind.Local" />,이 메서드가 반환 <paramref name="time" /> 변경 되지 않습니다. 값이 하나 <see cref="F:System.DateTimeKind.Utc" /> 또는 <see cref="F:System.DateTimeKind.Unspecified" />,이 메서드에서 <paramref name="time" /> UTC 이며을 호출 하지 않고 로컬 시스템 시간으로는 <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> 메서드.  다음 코드에서는의 기본 구현은의 간단한 재정의 <see langword="ToLocalTime" /> 메서드. 이 코드는 <see langword="internalTimeZone" /> 변수의 전용 인스턴스를 나타냅니다.는 <see langword="TimeZone" /> 클래스: [! 코드 csharp [System.TimeZone.ToLocalTime#1] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. TimeZone.ToLocalTime/CS/TimeZone_ToLocalTime.cs#1)] [! vb 코드 [System.TimeZone.ToLocalTime#1] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. TimeZone.ToLocalTime/VB/TimeZone_ToLocalTime.vb#1)]</para>
        </block>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToUniversalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToUniversalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToUniversalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToUniversalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToUniversalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToUniversalTime : DateTime -&gt; DateTime&#xA;override this.ToUniversalTime : DateTime -&gt; DateTime" Usage="timeZone.ToUniversalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">날짜와 시간입니다.</param>
        <summary>지정된 시간에 해당하는 UTC(협정 세계시)를 반환합니다.</summary>
        <returns>
          <paramref name="time" />에 해당하는 UTC(협정 세계시)를 값으로 가지는 <see cref="T:System.DateTime" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현지 표준 시간대가 일광 절약 시간제를 따르는 경우 <xref:System.TimeZone.ToUniversalTime%2A> 현재 조정 규칙에 적용 되는 `time` 변환을 수행할 때 매개 변수입니다.  
  
> [!NOTE]
>  <xref:System.TimeZone.ToUniversalTime%2A> 메서드는 현재 일광 절약 시간 조정에 대 한 규칙만 현지 표준 시간대를 인식 합니다. 결과적으로 Utc (협정 세계시)는 최신 조정 규칙이 적용 되는 기간 동안에 해당 하는 특정 현지 시간을 정확 하 게 반환할 보장 됩니다. 경우에 부정확 한 결과가 반환 될 수 있습니다 `time` 가 기록 날짜 및 이전 조정 규칙에 종속 되는 시간 값입니다.  
  
 경우는 `time` 매개 변수는 모호한 시간, 메서드는 표준 시간 임을 가정 합니다. (모호한 시간은 표준 시간 또는 현지 표준 시간대의 일광 절약 시간제에 매핑할 수 있는.) 경우 `time` 잘못 된 시간인 메서드 오프셋 UTC를 반환 하는 현지 표준 시간대의 UTC에서 로컬 시간을 빼서 합니다. (잘못 된 시간은 일광 절약 시간 조정 규칙을 적용 하는 때문에 존재 하지 않는 하나.)  
  
 때문에 `time` 해석 되는 현재 시스템에서 현재 표준 시간대를 기준으로이 메서드에서 반환 된 시간과 날짜 다를 수 있습니다는 응용 프로그램에 서로 다른 컴퓨터에 또는 동일한 컴퓨터에서 다른 표준 시간대 함께 실행 될 경우. 시간에서 날짜 및 시간 값 명확한를 단일 지점을 나타내야 합니다는 경우를 사용 하 여 한 <xref:System.DateTimeOffset> 현지 시간을 나타내는 값입니다.  
  
 <xref:System.TimeZone.ToUniversalTime%2A> 에 해당 하는 메서드는 <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> 메서드 오버 로드와는 <xref:System.DateTime> 매개 변수를 <xref:System.DateTime.Kind%2A> 속성 같지 않음 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>합니다. 가능 하면 사용 된 <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> 메서드 오버 로드 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      </Docs>
    </Member>
  </Members>
</Type>