<Type Name="Action&lt;T1,T2,T3,T4,T5,T6&gt;" FullName="System.Action&lt;T1,T2,T3,T4,T5,T6&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03e458aa13fa1c5d2ad3a4756e39fc9de71853a7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30726877" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4,in T5,in T6&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`6&lt;- T1, - T2, - T3, - T4, - T5, - T6&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`6" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4, In T5, In T6)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">
      <span data-ttu-id="dd221-101">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-101">The type of the first parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T2">
      <span data-ttu-id="dd221-102">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-102">The type of the second parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T3">
      <span data-ttu-id="dd221-103">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-103">The type of the third parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T4">
      <span data-ttu-id="dd221-104">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-104">The type of the fourth parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T5">
      <span data-ttu-id="dd221-105">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-105">The type of the fifth parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <typeparam name="T6">
      <span data-ttu-id="dd221-106">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-106">The type of the sixth parameter of the method that this delegate encapsulates.</span>
      </span>
    </typeparam>
    <param name="arg1">
      <span data-ttu-id="dd221-107">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-107">The first parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg2">
      <span data-ttu-id="dd221-108">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-108">The second parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg3">
      <span data-ttu-id="dd221-109">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-109">The third parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg4">
      <span data-ttu-id="dd221-110">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-110">The fourth parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg5">
      <span data-ttu-id="dd221-111">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-111">The fifth parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <param name="arg6">
      <span data-ttu-id="dd221-112">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-112">The sixth parameter of the method that this delegate encapsulates.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="dd221-113">6개의 매개 변수가 있으며 값을 반환하지 않는 메서드를 캡슐화합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd221-113">Encapsulates a method that has six parameters and does not return a value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd221-114">사용할 수는 <xref:System.Action%606> 대리자를 명시적으로 사용자 지정 대리자를 선언 하지 않고 메서드 매개 변수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd221-114">You can use the <xref:System.Action%606> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="dd221-115">캡슐화 된 메서드에이 대리자에 의해 정의 되는 메서드 시그니처와 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd221-115">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="dd221-116">즉, 캡슐화 된 메서드에 모두 값에 전달 되는 6 개의 매개 변수가 있어야 합니다. 값을 반환 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd221-116">This means that the encapsulated method must have six parameters that are all passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="dd221-117">(C#에서 메서드 반환 해야 `void`합니다.</span><span class="sxs-lookup"><span data-stu-id="dd221-117">(In C#, the method must return `void`.</span></span> <span data-ttu-id="dd221-118">Visual Basic에서 정의 되어야 하 여는 `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="dd221-118">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="dd221-119">구문입니다.</span><span class="sxs-lookup"><span data-stu-id="dd221-119">construct.</span></span> <span data-ttu-id="dd221-120">일 수도 있습니다 무시 되는 값을 반환 하는 메서드입니다.) 일반적을 이러한 메서드는 연산을 수행 하기 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="dd221-120">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd221-121">6 개의 매개 변수가 있으며 값을 반환 하는 메서드를 참조 하려면 원본을 사용 하 여 <xref:System.Func%607> 대리자를 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd221-121">To reference a method that has six parameters and returns a value, use the generic <xref:System.Func%607> delegate instead.</span></span>  
  
 <span data-ttu-id="dd221-122">사용할 수도 있습니다는 <xref:System.Action%606> 무명 메서드와 람다 식으로 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="dd221-122">You can also use the <xref:System.Action%606> delegate with anonymous methods and lambda expressions.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`7" />
  </Docs>
</Type>