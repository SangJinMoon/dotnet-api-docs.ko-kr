<Type Name="ExpandSegment" FullName="System.Data.Services.ExpandSegment">
  <TypeSignature Language="C#" Value="public class ExpandSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpandSegment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.ExpandSegment" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpandSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpandSegment" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("ExpandSegment ({name},Filter={filter})]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b0442-101">데이터를 지연된 콘텐츠가 아닌 인라인으로 반환할지 여부를 나타내는 쿼리 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-101">The segment of a query that indicates whether data should be returned inline instead of as deferred content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0442-102">`$expand` 절은 각 나타냅니다 `$expand` 항목이 완전히 확장 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-102">An `$expand` clause indicates that each `$expand` item should be fully expanded.</span></span> <span data-ttu-id="b0442-103">예를 들어 `OrderLines.Product.Image`에 `$expand` 값을 지정하면 `OrderLines`, `Product`에 있는 각 요소의 `OrderLines`, 그리고 `Image`에 있는 각 요소의 `Product`에 대한 `OrderLines`가 확장됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-103">For example, the value `OrderLines.Product.Image` with `$expand` causes `OrderLines`, the `Product` of each element in `OrderLines`, and the `Image` of the `Product` of each element in `OrderLines` to be expanded.</span></span>  
  
 <span data-ttu-id="b0442-104">`$expand` 절의 맨 왼쪽 속성은 요청 URI의 마지막 경로 세그먼트에 의해 식별된 엔터티 집합 내 엔터티 형식의 속성이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-104">The left-most property in an `$expand` clause must be a property on the entity type within the entity set identified by the last path segment in the request URI.</span></span>  
  
 <span data-ttu-id="b0442-105">중복 expand 절 규칙을 지정할 수 있지만 지정된 경우 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-105">Redundant expand clause rules are acceptable and ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0442-106">다음 URI는 쿼리에서 반환된 각 `OrderLines`와 연결된 `Order`를 확장합니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-106">The following URI expands the `OrderLines` associated with each `Order` returned by the query.</span></span>  
  
```  
http://host/service.svc/Orders?$expand=OrderLines  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpandSegment (string name, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, filter As Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpandSegment(System::String ^ name, System::Linq::Expressions::Expression ^ filter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b0442-107">확장할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-107">The name of the property to be expanded.</span></span></param>
        <param name="filter"><span data-ttu-id="b0442-108">확장명 세그먼트가 적용되는 쿼리의 필터 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-108">The filter option in the query to which the expand segment applies.</span></span></param>
        <summary><span data-ttu-id="b0442-109">지정된 속성 이름과 필터링 식(null일 수 있음)을 사용하여 <see cref="T:System.Data.Services.ExpandSegment" /> 개체를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-109">Initializes an <see cref="T:System.Data.Services.ExpandSegment" /> object with the specified property name and a filtering expression, possibly null.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandedProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Providers.ResourceProperty ExpandedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Providers.ResourceProperty ExpandedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.ExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpandedProperty As ResourceProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Providers::ResourceProperty ^ ExpandedProperty { System::Data::Services::Providers::ResourceProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Providers.ResourceProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0442-110">확장할 속성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-110">Gets the property to be expanded.</span></span></summary>
        <value><span data-ttu-id="b0442-111">확장할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-111">The property to expand.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Filter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.Filter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filter As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Filter { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0442-112">확장명 세그먼트가 적용되는 쿼리의 필터 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-112">The filter option in the query to which the expand segment applies.</span></span></summary>
        <value><span data-ttu-id="b0442-113">대상 데이터에 필터를 지정하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-113">An expression that specifies the filter on target data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFilter">
      <MemberSignature Language="C#" Value="public bool HasFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFilter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.HasFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFilter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0442-114">expand 문을 필터 식과 함께 사용할지 여부를 나타내는 부울 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-114">A Boolean value that indicates whether the expand statement is used with a filter expression.</span></span></summary>
        <value><span data-ttu-id="b0442-115">true 또는 false입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-115">True or false.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResultsExpected">
      <MemberSignature Language="C#" Value="public int MaxResultsExpected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResultsExpected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.MaxResultsExpected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxResultsExpected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResultsExpected { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0442-116">예상되는 최대 결과 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-116">Gets the maximum number of results expected.</span></span></summary>
        <value><span data-ttu-id="b0442-117">최대 결과 수를 나타내는 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-117">The integer value that indicates maximum number of results.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0442-118">데이터 서비스에서 오류를 검색하여 이 제약 조건을 충족하도록 하려면 확장 공급자가 <xref:System.Data.Services.ExpandSegment.MaxResultsExpected%2A> + 1개 이하의 요소를 반환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-118">To enable the data service to detect a failure to meet this constraint, expand providers should return no more than <xref:System.Data.Services.ExpandSegment.MaxResultsExpected%2A> + 1 elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0442-119">확장할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-119">The name of the property to be expanded.</span></span></summary>
        <value><span data-ttu-id="b0442-120">속성 이름을 포함하는 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-120">A string value containing the name of the property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathHasFilter">
      <MemberSignature Language="C#" Value="public static bool PathHasFilter (System.Collections.Generic.IEnumerable&lt;System.Data.Services.ExpandSegment&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PathHasFilter(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.ExpandSegment&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PathHasFilter (path As IEnumerable(Of ExpandSegment)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool PathHasFilter(System::Collections::Generic::IEnumerable&lt;System::Data::Services::ExpandSegment ^&gt; ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Services.ExpandSegment&gt;" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b0442-121">필터를 확인할 세그먼트의 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-121">The enumeration of segments to check for filters.</span></span></param>
        <summary><span data-ttu-id="b0442-122">경로에 대상 데이터의 필터 옵션이 포함되는지 여부를 나타내는 부울 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-122">A Boolean value that indicates whether the path includes a filter option on target data.</span></span></summary>
        <returns><span data-ttu-id="b0442-123">경로의 세그먼트에 필터가 있으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="b0442-123">True if any of the segments in the path has a filter; false otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>