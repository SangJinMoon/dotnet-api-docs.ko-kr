<Type Name="DataServiceHost" FullName="System.Data.Services.DataServiceHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae1be528d8730a85e462d2961702b1c50cb6a8ab" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30387437" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataServiceHost : System.ServiceModel.Web.WebServiceHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceHost extends System.ServiceModel.Web.WebServiceHost" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.DataServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceHost&#xA;Inherits WebServiceHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataServiceHost : System::ServiceModel::Web::WebServiceHost" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Web.WebServiceHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0aba1-101">데이터 서비스를 인스턴스화하는 데 사용되는 <see cref="T:System.ServiceModel.Web.WebServiceHost" />에서 파생된 WCF Data Services 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0aba1-101">The WCF Data Services class derived from <see cref="T:System.ServiceModel.Web.WebServiceHost" /> used to instantiate data services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]<span data-ttu-id="0aba1-102">는 독립된 서버 엔터티가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-102"> are not autonomous server entities.</span></span> <span data-ttu-id="0aba1-103">대신 서비스는 WCF(Windows Communication Foundation)와 같이 핵심적인 서버 네트워킹 기능을 제공하는 환경에서 호스팅되는 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-103">Instead, the service is a component hosted in an environment such as the Windows Communication Foundation (WCF) that provides core server networking facilities.</span></span> <span data-ttu-id="0aba1-104">특히 서비스는 네트워크 소켓에 바인딩되어 REST(Representational State Transfer) 진입점으로 들어오는 요청을 수신 대기하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-104">Specifically, a service does not bind to and listen on a network socket for incoming requests to its Representational State Transfer (REST) entry points.</span></span> <span data-ttu-id="0aba1-105">호스트는 네트워크와의 직접적인 상호 작용을 처리하고 캐싱, 확장성 및 인증 모듈을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-105">The host handles direct interactions with the network and support caching, scalability, and authentication modules.</span></span>  
  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]<span data-ttu-id="0aba1-106">는 특정 호스트 기반의 구현을 추상화한 일반적인 호스팅 인터페이스 <xref:System.Data.Services.IDataServiceHost>를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-106"> defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host.</span></span> <span data-ttu-id="0aba1-107">따라서 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]를 다양한 호스팅 환경에서 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-107">This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments.</span></span> <span data-ttu-id="0aba1-108">자세한 내용은 참조 [데이터 서비스 호스팅](~/docs/framework/data/wcf/hosting-the-data-service-wcf-data-services.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-108">For more information, see [Hosting the Data Service](~/docs/framework/data/wcf/hosting-the-data-service-wcf-data-services.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altCompliant cref="None ." />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceHost(Type ^ serviceType, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="0aba1-109">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]를 호스트에 식별시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0aba1-109">Identifies the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to the host.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="0aba1-110">호스트의 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0aba1-110">The URI of the host.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0aba1-111">
            <see cref="T:System.Data.Services.DataServiceHost" />용 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]를 인스턴스화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0aba1-111">Instantiates <see cref="T:System.Data.Services.DataServiceHost" /> for [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)].</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]<span data-ttu-id="0aba1-112">는 특정 호스트 기반의 구현을 추상화한 일반적인 호스팅 인터페이스 <xref:System.Data.Services.IDataServiceHost>를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-112"> defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host.</span></span> <span data-ttu-id="0aba1-113">따라서 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]를 다양한 호스팅 환경에서 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-113">This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments.</span></span> <span data-ttu-id="0aba1-114">이 인터페이스와 혼동 해서는 안 <xref:System.Data.Services.DataServiceHost>, 등록 및 정품 인증 서비스에 대 한 대신 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-114">This interface should not be confused with <xref:System.Data.Services.DataServiceHost>, which instead handles registration and activation for the service.</span></span> <span data-ttu-id="0aba1-115">이 경우에는 기본 <xref:System.Data.Services.IDataServiceHost>가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0aba1-115">A default <xref:System.Data.Services.IDataServiceHost> is used in this case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>