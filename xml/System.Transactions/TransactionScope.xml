<Type Name="TransactionScope" FullName="System.Transactions.TransactionScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f656ff8ca45653b647c533054ac39d2703e1dd6d" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52248752" /></Metadata><TypeSignature Language="C#" Value="public sealed class TransactionScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransactionScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.TransactionScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransactionScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactionScope sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type TransactionScope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f87ae-101">트랜잭션 코드 블록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-101">Makes a code block transactional.</span></span> <span data-ttu-id="f87ae-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f87ae-103"><xref:System.Transactions> 인프라가 모두 명시적 프로그래밍 모델을 기반으로 합니다 <xref:System.Transactions.Transaction> 사용 하는 암시적 프로그래밍 모델 뿐만 아니라 클래스는 <xref:System.Transactions.TransactionScope> 트랜잭션을 관리 하는 자동으로 인프라에서 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-103">The <xref:System.Transactions> infrastructure provides both an explicit programming model based on the <xref:System.Transactions.Transaction> class, as well as an implicit programming model using the <xref:System.Transactions.TransactionScope> class, in which transactions are automatically managed by the infrastructure.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f87ae-104">사용 하 여 암시적 트랜잭션을 만드는 것이 좋습니다는 <xref:System.Transactions.TransactionScope> 클래스에 앰비언트 트랜잭션 컨텍스트가 자동으로 관리 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-104">We recommend that you create implicit transactions using the <xref:System.Transactions.TransactionScope> class, so that the ambient transaction context is automatically managed for you.</span></span> <span data-ttu-id="f87ae-105">또한 사용 해야 합니다 <xref:System.Transactions.TransactionScope> 및 <xref:System.Transactions.DependentTransaction> 여러 함수 호출이 나 여러 스레드 호출에서 동일한 트랜잭션의 사용을 해야 하는 응용 프로그램에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-105">You should also use the <xref:System.Transactions.TransactionScope> and <xref:System.Transactions.DependentTransaction> class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</span></span> <span data-ttu-id="f87ae-106">이 모델에 대 한 자세한 내용은 참조는 [구현 하는 암시적 트랜잭션을 사용 하 여 트랜잭션 범위](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-106">For more information on this model, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span> <span data-ttu-id="f87ae-107">트랜잭션 응용 프로그램 작성에 대 한 자세한 내용은 참조 하세요. [쓰기는 트랜잭션 응용 프로그램](~/docs/framework/data/transactions/writing-a-transactional-application.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-107">For more information on writing a transactional application, see [Writing A Transactional Application](~/docs/framework/data/transactions/writing-a-transactional-application.md).</span></span>  
  
 <span data-ttu-id="f87ae-108">인스턴스화 시를 <xref:System.Transactions.TransactionScope> 여는 `new` 문에서 트랜잭션 관리자에 참여할 트랜잭션을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-108">Upon instantiating a <xref:System.Transactions.TransactionScope> by the `new` statement, the transaction manager determines which transaction to participate in.</span></span> <span data-ttu-id="f87ae-109">일단 결정되면 범위는 항상 해당 트랜잭션에 참여합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-109">Once determined, the scope always participates in that transaction.</span></span> <span data-ttu-id="f87ae-110">앰비언트 트랜잭션이 있는지 여부와 생성자에 있는 `TransactionScopeOption` 매개 변수의 값에 따라 참여할 트랜잭션이 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-110">The decision is based on two factors: whether an ambient transaction is present and the value of the `TransactionScopeOption` parameter in the constructor.</span></span>  <span data-ttu-id="f87ae-111">앰비언트 트랜잭션은 매우 코드에서 실행 되는 트랜잭션입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-111">The ambient transaction is the transaction your code executes in.</span></span> <span data-ttu-id="f87ae-112"><xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> 클래스의 정적 <xref:System.Transactions.Transaction> 속성을 호출하여 앰비언트 트랜잭션에 대한 참조를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-112">You can obtain a reference to the ambient transaction by calling the static <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> property of the <xref:System.Transactions.Transaction> class.</span></span> <span data-ttu-id="f87ae-113">이 매개 변수를 사용 하는 방법에 대 한 자세한 내용은 "트랜잭션 흐름 관리" 섹션을 참조 합니다 [구현 하는 암시적 트랜잭션을 사용 하 여 트랜잭션 범위](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-113">For more information on how this parameter is used, see the "Transaction Flow Management" section of the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="f87ae-114">트랜잭션 범위 내에서 예외가 발생 하는 경우 (즉, 초기화 간의 <xref:System.Transactions.TransactionScope> 개체와의 호출을 해당 <xref:System.Transactions.TransactionScope.Dispose%2A> 메서드), 범위 참여 하는 트랜잭션이 진행을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-114">If no exception occurs within the transaction scope (that is, between the initialization of the <xref:System.Transactions.TransactionScope> object and the calling of its <xref:System.Transactions.TransactionScope.Dispose%2A> method), then the transaction in which the scope participates is allowed to proceed.</span></span> <span data-ttu-id="f87ae-115">트랜잭션 범위 내에서 예외가 발생할 경우 참여 하는 트랜잭션이 롤백됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-115">If an exception does occur within the transaction scope, the transaction in which it participates will be rolled back.</span></span>  
  
 <span data-ttu-id="f87ae-116">트랜잭션에서 수행 하려는 응용 프로그램에 모든 작업이 완료 될 때 호출 해야 합니다는 <xref:System.Transactions.TransactionScope.Complete%2A> 메서드는 트랜잭션 커밋이 허용 되었음을 해당 트랜잭션 관리자에 게 알리는를 한 번만 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-116">When your application completes all work it wants to perform in a transaction, you should call the <xref:System.Transactions.TransactionScope.Complete%2A> method only once to inform that transaction manager that it is acceptable to commit the transaction.</span></span> <span data-ttu-id="f87ae-117">이 메서드를 호출 하지 못하면 트랜잭션을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-117">Failing to call this method aborts the transaction.</span></span>  
  
 <span data-ttu-id="f87ae-118">에 대 한 호출을 <xref:System.Transactions.TransactionScope.Dispose%2A> 메서드 트랜잭션 범위의 끝을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-118">A call to the <xref:System.Transactions.TransactionScope.Dispose%2A> method marks the end of the transaction scope.</span></span> <span data-ttu-id="f87ae-119">이 메서드를 호출한 후에 발생하는 예외는 트랜잭션에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-119">Exceptions that occur after calling this method may not affect the transaction.</span></span>  
  
 <span data-ttu-id="f87ae-120">값을 수정 하는 경우 <xref:System.Transactions.Transaction.Current%2A> 범위 내에서 예외가 throw 됩니다 때 <xref:System.Transactions.TransactionScope.Dispose%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-120">If you modify the value of <xref:System.Transactions.Transaction.Current%2A> inside a scope, an exception is thrown when <xref:System.Transactions.TransactionScope.Dispose%2A> is called.</span></span> <span data-ttu-id="f87ae-121">그러나 범위 끝 이전 값이 복원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-121">However, at the end of the scope, the previous value is restored.</span></span> <span data-ttu-id="f87ae-122">또한 호출 하는 경우 <xref:System.Transactions.TransactionScope.Dispose%2A> 에서 <xref:System.Transactions.Transaction.Current%2A> 트랜잭션을 생성 하는 트랜잭션 범위 내에서 범위의 끝에서 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-122">In addition, if you call <xref:System.Transactions.TransactionScope.Dispose%2A> on <xref:System.Transactions.Transaction.Current%2A> inside a transaction scope that created the transaction, the transaction aborts at the end of the scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f87ae-123">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Transactions.TransactionScope> 트랜잭션에 참여 하는 코드 블록을 정의 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-123">The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.</span></span>  
  
 [!code-csharp[TransactionScope#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TransactionScope/cs/ScopeWithSQL.cs#1)]
 [!code-vb[TransactionScope#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TransactionScope/vb/ScopeWithSQL.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f87ae-124">이 형식은 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-124">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-125">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-125">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f87ae-126"><see cref="T:System.Transactions.TransactionScope" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-126">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f87ae-127"><see cref="T:System.Transactions.TransactionScope" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-127">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f87ae-128">이 생성자를 만듭니다 새 트랜잭션 범위가 트랜잭션 범위 옵션을 사용 하 여 같음 <xref:System.Transactions.TransactionScopeOption.Required>합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-128">This constructor creates a new transaction scope with the transaction scope option equal to <xref:System.Transactions.TransactionScopeOption.Required>.</span></span> <span data-ttu-id="f87ae-129">즉, 트랜잭션이 필요 새 범위에서 앰비언트 트랜잭션이 이미 있을 경우 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-129">This means that a transaction is required by the new scope and the ambient transaction is used if one already exists.</span></span> <span data-ttu-id="f87ae-130">그렇지 않은 경우 범위에 진입 하기 전에 새 트랜잭션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-130">Otherwise, it creates a new transaction before entering the scope.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-131">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-131">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transaction);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transaction) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transaction);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.Transaction -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope transaction" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transactionToUse"><span data-ttu-id="f87ae-132">범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 앰비언트 트랜잭션으로 설정할 트랜잭션.</span><span class="sxs-lookup"><span data-stu-id="f87ae-132">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></param>
        <param name="transaction"><span data-ttu-id="f87ae-133">범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 앰비언트 트랜잭션으로 설정할 트랜잭션.</span><span class="sxs-lookup"><span data-stu-id="f87ae-133">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></param>
        <summary><span data-ttu-id="f87ae-134">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 클래스 및 범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 지정된 된 트랜잭션을 앰비언트 트랜잭션으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-134">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-135">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-135">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction, asyncFlowOption As TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.Transaction * System.Transactions.TransactionScopeAsyncFlowOption -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope (transactionToUse, asyncFlowOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="transactionToUse"><span data-ttu-id="f87ae-136">범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 앰비언트 트랜잭션으로 설정할 트랜잭션.</span><span class="sxs-lookup"><span data-stu-id="f87ae-136">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></param>
        <param name="asyncFlowOption"><span data-ttu-id="f87ae-137">인스턴스는 <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 작업 또는 async/await.NET 비동기 프로그래밍 패턴을 사용 하는 경우 스레드 연속 사이의 트랜잭션 범위와 연결 된 앰비언트 트랜잭션이 됩니다 흐름 여부를 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-137">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span></span></param>
        <summary><span data-ttu-id="f87ae-138">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="f87ae-138">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="f87ae-139">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 클래스 및 범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 지정된 된 트랜잭션을 앰비언트 트랜잭션으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-139">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (asyncFlowOption As TransactionScopeAsyncFlowOption)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlow);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlow) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (asyncFlow As TransactionScopeAsyncFlowOption)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeAsyncFlowOption asyncFlow);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.TransactionScopeAsyncFlowOption -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope asyncFlow" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-4.8;netcore-2.2" />
        <Parameter Name="asyncFlow" Type="System.Transactions.TransactionScopeAsyncFlowOption" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncFlowOption"><span data-ttu-id="f87ae-140">인스턴스는 <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 작업 또는 async/await.NET 비동기 프로그래밍 패턴을 사용 하는 경우 스레드 연속 사이의 트랜잭션 범위와 연결 된 앰비언트 트랜잭션이 됩니다 흐름 여부를 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-140">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span></span></param>
        <param name="asyncFlow"><span data-ttu-id="f87ae-141">인스턴스는 <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 작업 또는 async/await.NET 비동기 프로그래밍 패턴을 사용 하는 경우 스레드 연속 사이의 트랜잭션 범위와 연결 된 앰비언트 트랜잭션이 됩니다 흐름 여부를 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-141">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span></span></param>
        <summary><span data-ttu-id="f87ae-142">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 지정 된 비동기 흐름 옵션을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-142">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified asynchronous flow option.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.TransactionScopeOption -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope option" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scopeOption"><span data-ttu-id="f87ae-143">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-143">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="option"><span data-ttu-id="f87ae-144">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-144">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <summary><span data-ttu-id="f87ae-145">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 지정된 된 요구 사항과 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-145">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-146">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-146">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse, valuetype System.TimeSpan scopeTimeout, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction, scopeTimeout As TimeSpan, asyncFlowOption As TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse, TimeSpan scopeTimeout, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.Transaction * TimeSpan * System.Transactions.TransactionScopeAsyncFlowOption -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope (transactionToUse, scopeTimeout, asyncFlowOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" />
        <Parameter Name="scopeTimeout" Type="System.TimeSpan" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="transactionToUse"><span data-ttu-id="f87ae-147">범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 앰비언트 트랜잭션으로 설정할 트랜잭션.</span><span class="sxs-lookup"><span data-stu-id="f87ae-147">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></param>
        <param name="scopeTimeout"><span data-ttu-id="f87ae-148"><see cref="T:System.TimeSpan" /> 는 트랜잭션 범위를 시간 초과 후 트랜잭션을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-148">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span></span></param>
        <param name="asyncFlowOption"><span data-ttu-id="f87ae-149">인스턴스는 <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 작업 또는 async/await.NET 비동기 프로그래밍 패턴을 사용 하는 경우 스레드 연속 사이의 트랜잭션 범위와 연결 된 앰비언트 트랜잭션이 됩니다 흐름 여부를 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-149">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span></span></param>
        <summary><span data-ttu-id="f87ae-150">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="f87ae-150">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="f87ae-151">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 지정한 시간 제한 값을 사용 하 여 클래스 및 범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 지정된 된 트랜잭션을 앰비언트 트랜잭션으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-151">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions transactionOptions, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions transactionOptions, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.TransactionScopeOption * System.Transactions.TransactionOptions * System.Transactions.TransactionScopeAsyncFlowOption -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope (scopeOption, transactionOptions, asyncFlowOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="transactionOptions" Type="System.Transactions.TransactionOptions" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="scopeOption"><span data-ttu-id="f87ae-152">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-152">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="transactionOptions"><span data-ttu-id="f87ae-153"><see cref="T:System.Transactions.TransactionOptions" /> 새 트랜잭션을 만드는 경우 사용할 트랜잭션 옵션을 설명 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-153">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use if a new transaction is created.</span></span> <span data-ttu-id="f87ae-154">기존 트랜잭션에 사용 되는 경우이 매개 변수에서 제한 시간 값에는 트랜잭션 범위에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-154">If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</span></span> <span data-ttu-id="f87ae-155">시간 범위를 삭제 하기 전에 만료 되 면 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-155">If that time expires before the scope is disposed, the transaction is aborted.</span></span></param>
        <param name="asyncFlowOption"><span data-ttu-id="f87ae-156">인스턴스는 <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 작업 또는 async/await.NET 비동기 프로그래밍 패턴을 사용 하는 경우 스레드 연속 사이의 트랜잭션 범위와 연결 된 앰비언트 트랜잭션이 됩니다 흐름 여부를 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-156">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span></span></param>
        <summary><span data-ttu-id="f87ae-157">[.NET Framework 4.5.1 이상 버전에서 지원됨]</span><span class="sxs-lookup"><span data-stu-id="f87ae-157">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="f87ae-158">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 지정된 요구 사항 및 비동기 흐름 옵션을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-158">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements and asynchronous flow option.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse, valuetype System.TimeSpan scopeTimeout) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction, scopeTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse, TimeSpan scopeTimeout);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transaction, TimeSpan timeout);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transaction, valuetype System.TimeSpan timeout) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transaction, TimeSpan timeout);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.Transaction * TimeSpan -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope (transaction, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="scopeTimeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transactionToUse"><span data-ttu-id="f87ae-159">범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 앰비언트 트랜잭션으로 설정할 트랜잭션.</span><span class="sxs-lookup"><span data-stu-id="f87ae-159">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></param>
        <param name="transaction"><span data-ttu-id="f87ae-160">범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 앰비언트 트랜잭션으로 설정할 트랜잭션.</span><span class="sxs-lookup"><span data-stu-id="f87ae-160">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></param>
        <param name="scopeTimeout"><span data-ttu-id="f87ae-161"><see cref="T:System.TimeSpan" /> 는 트랜잭션 범위를 시간 초과 후 트랜잭션을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-161">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span></span></param>
        <param name="timeout"><span data-ttu-id="f87ae-162"><see cref="T:System.TimeSpan" /> 는 트랜잭션 범위를 시간 초과 후 트랜잭션을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-162">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span></span></param>
        <summary><span data-ttu-id="f87ae-163">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 지정한 시간 제한 값을 사용 하 여 클래스 및 범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 지정된 된 트랜잭션을 앰비언트 트랜잭션으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-163">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-164">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-164">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.TimeSpan scopeTimeout) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption, scopeTimeout As TimeSpan)" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, TimeSpan scopeTimeout);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option, TimeSpan timeout);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option, valuetype System.TimeSpan timeout) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption, timeout As TimeSpan)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option, TimeSpan timeout);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.TransactionScopeOption * TimeSpan -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope (option, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="scopeTimeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scopeOption"><span data-ttu-id="f87ae-165">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-165">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="option"><span data-ttu-id="f87ae-166">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-166">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="scopeTimeout"><span data-ttu-id="f87ae-167"><see cref="T:System.TimeSpan" /> 는 트랜잭션 범위를 시간 초과 후 트랜잭션을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-167">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span></span></param>
        <param name="timeout"><span data-ttu-id="f87ae-168"><see cref="T:System.TimeSpan" /> 는 트랜잭션 범위를 시간 초과 후 트랜잭션을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-168">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span></span></param>
        <summary><span data-ttu-id="f87ae-169">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 요구 사항을 확인 하 고 지정 된 시간 제한 값을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-169">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified timeout value and requirements.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-170">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-170">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions transactionOptions) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions transactionOptions);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions options);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions options) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption, options As TransactionOptions)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions options);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption)" FrameworkAlternate="xamarinios-10.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;xamarinandroid-7.1" />
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="transactionOptions" Type="System.Transactions.TransactionOptions" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" Index="2" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="scopeOption"><span data-ttu-id="f87ae-171">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-171">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="option"><span data-ttu-id="f87ae-172">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-172">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="transactionOptions"><span data-ttu-id="f87ae-173"><see cref="T:System.Transactions.TransactionOptions" /> 새 트랜잭션을 만드는 경우 사용할 트랜잭션 옵션을 설명 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-173">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use if a new transaction is created.</span></span> <span data-ttu-id="f87ae-174">기존 트랜잭션에 사용 되는 경우이 매개 변수에서 제한 시간 값에는 트랜잭션 범위에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-174">If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</span></span> <span data-ttu-id="f87ae-175">시간 범위를 삭제 하기 전에 만료 되 면 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-175">If that time expires before the scope is disposed, the transaction is aborted.</span></span></param>
        <param name="options"><span data-ttu-id="f87ae-176"><see cref="T:System.Transactions.TransactionOptions" /> 새 트랜잭션을 만드는 경우 사용할 트랜잭션 옵션을 설명 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-176">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use if a new transaction is created.</span></span> <span data-ttu-id="f87ae-177">기존 트랜잭션에 사용 되는 경우이 매개 변수에서 제한 시간 값에는 트랜잭션 범위에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-177">If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</span></span> <span data-ttu-id="f87ae-178">시간 범위를 삭제 하기 전에 만료 되 면 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-178">If that time expires before the scope is disposed, the transaction is aborted.</span></span></param>
        <summary><span data-ttu-id="f87ae-179">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 지정된 된 요구 사항과 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-179">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f87ae-180">사용 하는 경우는 `transactionOptions` 지정 하려면 매개 변수는 <xref:System.Transactions.IsolationLevel>, 및 범위를 나중에 트랜잭션을 만들고, 새 트랜잭션이 지정된 된 격리 수준에 연관 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-180">When you use the `transactionOptions` parameter to specify an <xref:System.Transactions.IsolationLevel>, and the scope creates a transaction later, the new transaction is associated with the specified isolation level.</span></span> <span data-ttu-id="f87ae-181">격리 수준 트랜잭션을 함께 전달 되 면 트랜잭션은 동일한 격리 수준에 있어야 합니다. 아니면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-181">If an isolation level is passed in together with a transaction, the transaction must have an identical isolation level, or an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-182">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-182">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption, asyncFlowOption As TransactionScopeAsyncFlowOption)" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option, System.Transactions.TransactionScopeAsyncFlowOption asyncFlow);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlow) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption, asyncFlow As TransactionScopeAsyncFlowOption)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option, System::Transactions::TransactionScopeAsyncFlowOption asyncFlow);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.TransactionScopeOption * System.Transactions.TransactionScopeAsyncFlowOption -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope (option, asyncFlow)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="asyncFlow" Type="System.Transactions.TransactionScopeAsyncFlowOption" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scopeOption"><span data-ttu-id="f87ae-183">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-183">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="option"><span data-ttu-id="f87ae-184">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-184">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="asyncFlowOption"><span data-ttu-id="f87ae-185">인스턴스는 <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 작업 또는 async/await.NET 비동기 프로그래밍 패턴을 사용 하는 경우 스레드 연속 사이의 트랜잭션 범위와 연결 된 앰비언트 트랜잭션이 됩니다 흐름 여부를 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-185">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span></span></param>
        <param name="asyncFlow"><span data-ttu-id="f87ae-186">인스턴스는 <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 작업 또는 async/await.NET 비동기 프로그래밍 패턴을 사용 하는 경우 스레드 연속 사이의 트랜잭션 범위와 연결 된 앰비언트 트랜잭션이 됩니다 흐름 여부를 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-186">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span></span></param>
        <summary><span data-ttu-id="f87ae-187">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 지정된 요구 사항 및 비동기 흐름 옵션을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-187">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements and asynchronous flow option.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption, options As TransactionOptions, opt As EnterpriseServicesInteropOption)" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinios-10.8;xamarinmac-3.0;xamarinandroid-7.1" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.EnterpriseServicesInteropOption interopOption);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions transactionOptions, valuetype System.Transactions.EnterpriseServicesInteropOption interopOption) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions transactionOptions, System::Transactions::EnterpriseServicesInteropOption interopOption);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions options, System.Transactions.EnterpriseServicesInteropOption opt);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions options, valuetype System.Transactions.EnterpriseServicesInteropOption opt) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions options, System::Transactions::EnterpriseServicesInteropOption opt);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.TransactionScopeOption * System.Transactions.TransactionOptions * System.Transactions.EnterpriseServicesInteropOption -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope (scopeOption, options, opt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" Index="0" />
        <Parameter Name="transactionOptions" Type="System.Transactions.TransactionOptions" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="interopOption" Type="System.Transactions.EnterpriseServicesInteropOption" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="opt" Type="System.Transactions.EnterpriseServicesInteropOption" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scopeOption"><span data-ttu-id="f87ae-188">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-188">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="transactionOptions"><span data-ttu-id="f87ae-189"><see cref="T:System.Transactions.TransactionOptions" /> 새 트랜잭션을 만드는 경우 사용할 트랜잭션 옵션을 설명 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-189">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use if a new transaction is created.</span></span> <span data-ttu-id="f87ae-190">기존 트랜잭션에 사용 되는 경우이 매개 변수에서 제한 시간 값에는 트랜잭션 범위에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-190">If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</span></span> <span data-ttu-id="f87ae-191">시간 범위를 삭제 하기 전에 만료 되 면 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-191">If that time expires before the scope is disposed, the transaction is aborted.</span></span></param>
        <param name="options"><span data-ttu-id="f87ae-192"><see cref="T:System.Transactions.TransactionOptions" /> 새 트랜잭션을 만드는 경우 사용할 트랜잭션 옵션을 설명 하는 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-192">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use if a new transaction is created.</span></span> <span data-ttu-id="f87ae-193">기존 트랜잭션에 사용 되는 경우이 매개 변수에서 제한 시간 값에는 트랜잭션 범위에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-193">If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</span></span> <span data-ttu-id="f87ae-194">시간 범위를 삭제 하기 전에 만료 되 면 트랜잭션이 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-194">If that time expires before the scope is disposed, the transaction is aborted.</span></span></param>
        <param name="interopOption"><span data-ttu-id="f87ae-195">인스턴스는 <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> 관련된 된 트랜잭션이 COM + 트랜잭션과 상호 작용 하는 방법을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-195">An instance of the <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> enumeration that describes how the associated transaction interacts with COM+ transactions.</span></span></param>
        <param name="opt"><span data-ttu-id="f87ae-196">인스턴스는 <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> 관련된 된 트랜잭션이 COM + 트랜잭션과 상호 작용 하는 방법을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-196">An instance of the <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> enumeration that describes how the associated transaction interacts with COM+ transactions.</span></span></param>
        <summary><span data-ttu-id="f87ae-197">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 지정 된 범위 및 COM + 상호 운용성 요구 사항 및 트랜잭션 옵션을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-197">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified scope and COM+ interoperability requirements, and transaction options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f87ae-198">사용 하는 경우는 `transactionOptions` 지정 하려면 매개 변수는 <xref:System.Transactions.IsolationLevel>, 및 범위를 나중에 트랜잭션을 만들고, 새 트랜잭션이 지정된 된 격리 수준에 연관 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-198">When you use the `transactionOptions` parameter to specify an <xref:System.Transactions.IsolationLevel>, and the scope creates a transaction later, the new transaction is associated with the specified isolation level.</span></span> <span data-ttu-id="f87ae-199">격리 수준 트랜잭션을 함께 전달 되 면 트랜잭션은 동일한 격리 수준에 있어야 합니다. 아니면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-199">If an isolation level is passed in together with a transaction, the transaction must have an identical isolation level, or an exception is thrown.</span></span>
  
<span data-ttu-id="f87ae-200">**하지만 참고** 이 메서드는 <xref:System.Security.Permissions.SecurityAction.LinkDemand> 신뢰할 수 없는 코드에서 호출할를 방지 하기 위해 필요, 직접 실행 호출자만 소유는 `FullTrust` 권한 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-200">**Note** This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the `FullTrust` permission set.</span></span>
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-201">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-201">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.EnterpriseServicesInteropOption interopOption);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse, valuetype System.TimeSpan scopeTimeout, valuetype System.Transactions.EnterpriseServicesInteropOption interopOption) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction, scopeTimeout As TimeSpan, interopOption As EnterpriseServicesInteropOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse, TimeSpan scopeTimeout, System::Transactions::EnterpriseServicesInteropOption interopOption);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transaction, TimeSpan timeout, System.Transactions.EnterpriseServicesInteropOption opt);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transaction, valuetype System.TimeSpan timeout, valuetype System.Transactions.EnterpriseServicesInteropOption opt) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transaction, TimeSpan timeout, System::Transactions::EnterpriseServicesInteropOption opt);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.Transaction * TimeSpan * System.Transactions.EnterpriseServicesInteropOption -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope (transaction, timeout, opt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="scopeTimeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="interopOption" Type="System.Transactions.EnterpriseServicesInteropOption" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="opt" Type="System.Transactions.EnterpriseServicesInteropOption" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transactionToUse"><span data-ttu-id="f87ae-202">범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 앰비언트 트랜잭션으로 설정할 트랜잭션.</span><span class="sxs-lookup"><span data-stu-id="f87ae-202">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></param>
        <param name="transaction"><span data-ttu-id="f87ae-203">범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 앰비언트 트랜잭션으로 설정할 트랜잭션.</span><span class="sxs-lookup"><span data-stu-id="f87ae-203">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></param>
        <param name="scopeTimeout"><span data-ttu-id="f87ae-204"><see cref="T:System.TimeSpan" /> 는 트랜잭션 범위를 시간 초과 후 트랜잭션을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-204">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span></span></param>
        <param name="timeout"><span data-ttu-id="f87ae-205"><see cref="T:System.TimeSpan" /> 는 트랜잭션 범위를 시간 초과 후 트랜잭션을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-205">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span></span></param>
        <param name="interopOption"><span data-ttu-id="f87ae-206">인스턴스는 <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> 관련된 된 트랜잭션이 COM + 트랜잭션과 상호 작용 하는 방법을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-206">An instance of the <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> enumeration that describes how the associated transaction interacts with COM+ transactions.</span></span></param>
        <param name="opt"><span data-ttu-id="f87ae-207">인스턴스는 <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> 관련된 된 트랜잭션이 COM + 트랜잭션과 상호 작용 하는 방법을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-207">An instance of the <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> enumeration that describes how the associated transaction interacts with COM+ transactions.</span></span></param>
        <summary><span data-ttu-id="f87ae-208">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> COM + 상호 운용성 요구 사항을 확인 하 고 지정 된 시간 제한 값을 사용 하 여 클래스 및 범위 내에서 수행 된 트랜잭션 작업에는이 트랜잭션이 사용 되도록 지정된 된 트랜잭션을 앰비언트 트랜잭션으로 설정 .</span><span class="sxs-lookup"><span data-stu-id="f87ae-208">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified timeout value and COM+ interoperability requirements, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f87ae-209">**하지만 참고** 이 메서드는 <xref:System.Security.Permissions.SecurityAction.LinkDemand> 신뢰할 수 없는 코드에서 호출할를 방지 하기 위해 필요, 직접 실행 호출자만 소유는 `FullTrust` 권한 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-209">**Note** This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the `FullTrust` permission set.</span></span>
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-210">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-210">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.TimeSpan scopeTimeout, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption, scopeTimeout As TimeSpan, asyncFlowOption As TransactionScopeAsyncFlowOption)" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, TimeSpan scopeTimeout, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option, TimeSpan timeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlow);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option, valuetype System.TimeSpan timeout, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlow) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption, timeout As TimeSpan, asyncFlow As TransactionScopeAsyncFlowOption)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option, TimeSpan timeout, System::Transactions::TransactionScopeAsyncFlowOption asyncFlow);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Transactions.TransactionScope : System.Transactions.TransactionScopeOption * TimeSpan * System.Transactions.TransactionScopeAsyncFlowOption -&gt; System.Transactions.TransactionScope" Usage="new System.Transactions.TransactionScope (option, timeout, asyncFlow)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="scopeTimeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="asyncFlow" Type="System.Transactions.TransactionScopeAsyncFlowOption" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scopeOption"><span data-ttu-id="f87ae-211">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-211">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="option"><span data-ttu-id="f87ae-212">인스턴스는 <see cref="T:System.Transactions.TransactionScopeOption" /> 이 트랜잭션 범위와 연결 된 트랜잭션 요구 사항을 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-212">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span></span></param>
        <param name="scopeTimeout"><span data-ttu-id="f87ae-213"><see cref="T:System.TimeSpan" /> 는 트랜잭션 범위를 시간 초과 후 트랜잭션을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-213">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span></span></param>
        <param name="timeout"><span data-ttu-id="f87ae-214"><see cref="T:System.TimeSpan" /> 는 트랜잭션 범위를 시간 초과 후 트랜잭션을 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-214">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span></span></param>
        <param name="asyncFlowOption"><span data-ttu-id="f87ae-215">인스턴스는 <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 작업 또는 async/await.NET 비동기 프로그래밍 패턴을 사용 하는 경우 스레드 연속 사이의 트랜잭션 범위와 연결 된 앰비언트 트랜잭션이 됩니다 흐름 여부를 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-215">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span></span></param>
        <param name="asyncFlow"><span data-ttu-id="f87ae-216">인스턴스는 <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 작업 또는 async/await.NET 비동기 프로그래밍 패턴을 사용 하는 경우 스레드 연속 사이의 트랜잭션 범위와 연결 된 앰비언트 트랜잭션이 됩니다 흐름 여부를 설명 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-216">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span></span></param>
        <summary><span data-ttu-id="f87ae-217">새 인스턴스를 초기화 합니다 <see cref="T:System.Transactions.TransactionScope" /> 지정한 시간 제한 값, 요구 사항 및 비동기 흐름 옵션을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-217">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified timeout value, requirements, and asynchronous flow option.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="member this.Complete : unit -&gt; unit" Usage="transactionScope.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f87ae-218">범위 내에서 모든 작업은 성공적으로 완료 되었음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-218">Indicates that all operations within the scope are completed successfully.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f87ae-219">만족할 경우 범위 내에서 모든 작업을 성공적으로 완료를 알리고 해당 트랜잭션 관리자는 모든 리소스 상태는 일관 된 트랜잭션을 커밋할 수를이 메서드를 한 번만 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-219">When you are satisfied that all operations within the scope are completed successfully, you should call this method only once to inform that transaction manager that the state across all resources is consistent, and the transaction can be committed.</span></span> <span data-ttu-id="f87ae-220">호출의 마지막 문으로 배치 하는 매우 것이 좋습니다는 `using` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-220">It is very good practice to put the call as the last statement in the `using` block.</span></span>  
  
 <span data-ttu-id="f87ae-221">이 메서드를 사용 하는 방법에 대 한 자세한 내용은 참조는 [구현 하는 암시적 트랜잭션을 사용 하 여 트랜잭션 범위](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-221">For more information on how this method is used, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="f87ae-222">이 메서드를 호출 하지 못하면 트랜잭션을 중단 트랜잭션 관리자는이 시스템 실패로 해석 하기 때문에 또는 트랜잭션의 범위 내에서 throw 된 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-222">Failing to call this method aborts the transaction, because the transaction manager interprets this as a system failure, or exceptions thrown within the scope of transaction.</span></span> <span data-ttu-id="f87ae-223">그러나 유의이 메서드를 호출 하는 트랜잭션의 커밋을 보장 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-223">However, you should also note that calling this method does not guarantee a commit of the transaction.</span></span> <span data-ttu-id="f87ae-224">이 메서드를 호출하는 것은 트랜잭션 관리자에게 상태를 알리는 수단일 뿐입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-224">It is merely a way of informing the transaction manager of your status.</span></span> <span data-ttu-id="f87ae-225">이 메서드를 호출한 후 더 이상 액세스할 수 통해 앰비언트 트랜잭션에 <xref:System.Transactions.Transaction.Current%2A> 속성 및 예외가 발생 하면 발생 작업을 수행 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-225">After calling this method, you can no longer access the ambient transaction via the <xref:System.Transactions.Transaction.Current%2A> property, and trying to do so results in an exception being thrown.</span></span>  
  
 <span data-ttu-id="f87ae-226">리소스 관리자 간의 커밋의 실제 작업을 수행 합니다 `End Using` 문을 경우는 <xref:System.Transactions.TransactionScope> 개체 트랜잭션을 만든 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-226">The actual work of commit between the resources manager happens at the `End Using` statement if the <xref:System.Transactions.TransactionScope> object created the transaction.</span></span> <span data-ttu-id="f87ae-227">트랜잭션을 만들지 않은 경우 <xref:System.Transactions.CommittableTransaction.Commit%2A> 개체 소유자가 <xref:System.Transactions.CommittableTransaction>을 호출할 때마다 커밋이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-227">If it did not create the transaction, the commit occurs whenever <xref:System.Transactions.CommittableTransaction.Commit%2A> is called by the owner of the <xref:System.Transactions.CommittableTransaction> object.</span></span> <span data-ttu-id="f87ae-228">트랜잭션 관리자 리소스 관리자를 호출 하 고 커밋 또는 롤백,이 메서드를 호출한 여부에 따라 알리는 하는 시점을 <xref:System.Transactions.TransactionScope> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-228">At that point the Transaction Manager calls the resource managers and informs them to either commit or rollback, based on whether this method was called on the <xref:System.Transactions.TransactionScope> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f87ae-229">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Transactions.TransactionScope> 트랜잭션에 참여 하는 코드 블록을 정의 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-229">The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.</span></span>  
  
 [!code-csharp[TransactionScope#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TransactionScope/cs/ScopeWithSQL.cs#1)]
 [!code-vb[TransactionScope#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TransactionScope/vb/ScopeWithSQL.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f87ae-230">이 메서드가 호출 이미 한 번입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-230">This method has already been called once.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-231">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-231">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="transactionScope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f87ae-232">트랜잭션 범위를 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-232">Ends the transaction scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f87ae-233">이 메서드를 호출 하면 트랜잭션 범위의 끝을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-233">Calling this method marks the end of the transaction scope.</span></span> <span data-ttu-id="f87ae-234">경우는 <xref:System.Transactions.TransactionScope> 개체가 생성 된 트랜잭션 및 <xref:System.Transactions.TransactionScope.Complete%2A> 범위에서 호출 된를 <xref:System.Transactions.TransactionScope> 개체가이 메서드가 호출 될 때 트랜잭션을 커밋하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-234">If the <xref:System.Transactions.TransactionScope> object created the transaction and <xref:System.Transactions.TransactionScope.Complete%2A> was called on the scope, the <xref:System.Transactions.TransactionScope> object attempts to commit the transaction when this method is called.</span></span> <span data-ttu-id="f87ae-235">이 경우 트랜잭션 처리의 첫 번째 단계까지 메서드 블록이 완료 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-235">In this case, this method blocks until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="f87ae-236">첫 번째 단계는 모든 리소스 관리자 후 종료 하 고 트랜잭션에 인 리스트 먼 트 트랜잭션 결과에 투표 했습니다. 및 <xref:System.Transactions.TransactionManager> 지속적으로 커밋 또는 트랜잭션을 중단 했습니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-236">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="f87ae-237">처리의 두 번째 단계는 항상 비동기입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-237">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="f87ae-238">따라서 보장이 없습니다만 지정된 된 트랜잭션 내에서 커밋된 데이터 수 있는 즉시 나중에 다른 트랜잭션이이 데이터를 사용 하지 않는 경우.</span><span class="sxs-lookup"><span data-stu-id="f87ae-238">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 <span data-ttu-id="f87ae-239">C#을 사용 하 여 `using` 생성 하면 예외가 발생 하는 경우에이 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-239">The use of the C# `using` construction ensures that this method is called even if an exception occurs.</span></span> <span data-ttu-id="f87ae-240">이 메서드를 호출한 후에 발생하는 예외는 트랜잭션에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-240">Exceptions that occur after calling this method may not affect the transaction.</span></span> <span data-ttu-id="f87ae-241">또한이 메서드 앰비언트 트랜잭션이 원래 상태를 복원합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-241">This method also restores the ambient transaction to it original state.</span></span> <span data-ttu-id="f87ae-242"><xref:System.Transactions.TransactionAbortedException> 트랜잭션이 실제로 커밋된 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-242">A <xref:System.Transactions.TransactionAbortedException> is thrown if the transaction is not actually committed.</span></span>  
  
 <span data-ttu-id="f87ae-243">이 메서드 차단 트랜잭션 처리의 첫 번째 단계 완료 될 때까지, 매우 주의 해야 응용 프로그램을 Windows Form (WinForm) 또는 교착 상태에서이 메서드를 사용 하는 경우 발생할 수 있습니다 때문에.</span><span class="sxs-lookup"><span data-stu-id="f87ae-243">Because this method blocks until the first phase of transaction processing is complete, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</span></span> <span data-ttu-id="f87ae-244">(예: 단추 클릭), 하나의 WinForm 컨트롤 이벤트 내에서이 메서드를 호출 하 고 동기를 사용 하는 경우 <xref:System.Windows.Forms.Control.Invoke%2A> 트랜잭션을 처리 하는 중 몇 가지 UI 작업 (예를 들어 변경 색)을 수행 하는 컨트롤을 직접 메서드를 교착 상태가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-244">If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous <xref:System.Windows.Forms.Control.Invoke%2A> method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</span></span> <span data-ttu-id="f87ae-245">왜냐하면는 <xref:System.Windows.Forms.Control.Invoke%2A> 동기는 메서드와 UI 스레드에 해당 작업이 완료 될 때까지 작업자 스레드를 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-245">This is because the <xref:System.Windows.Forms.Control.Invoke%2A> method is synchronous and blocks the worker thread until the UI thread finishes its job.</span></span> <span data-ttu-id="f87ae-246">그러나이 시나리오에서는 UI 스레드 대기 중 트랜잭션 커밋 작업자 스레드에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-246">However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</span></span> <span data-ttu-id="f87ae-247">결과 범위를 완료 하려면 커밋을 위해 무기한 대기를 계속할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="f87ae-247">The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</span></span> <span data-ttu-id="f87ae-248">사용 해야 <xref:System.Windows.Forms.Control.BeginInvoke%2A> 대신 <xref:System.Windows.Forms.Control.Invoke%2A> 가능한 경우 비동기 및 교착 상태가 발생할 가능성이 적으므로 되었기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-248">You should use <xref:System.Windows.Forms.Control.BeginInvoke%2A> rather than <xref:System.Windows.Forms.Control.Invoke%2A> wherever possible, because it is asynchronous and thus less prone to deadlock.</span></span>  
  
 <span data-ttu-id="f87ae-249">이 메서드를 사용 하는 방법에 대 한 자세한 내용은 참조는 [구현 하는 암시적 트랜잭션을 사용 하 여 트랜잭션 범위](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-249">For more information on how this method is used, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f87ae-250">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Transactions.TransactionScope> 트랜잭션에 참여 하는 코드 블록을 정의 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f87ae-250">The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.</span></span>  
  
 [!code-csharp[TransactionScope#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TransactionScope/cs/ScopeWithSQL.cs#1)]
 [!code-vb[TransactionScope#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TransactionScope/vb/ScopeWithSQL.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="f87ae-251">트랜잭션 범위를 사용 하 여 암시적 트랜잭션 구현</span><span class="sxs-lookup"><span data-stu-id="f87ae-251">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>