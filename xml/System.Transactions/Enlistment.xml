<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Enlistment.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55dacb6e0d9a3eb1837291d29c765d3aadae3c06c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5dacb6e0d9a3eb1837291d29c765d3aadae3c06c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.Enlistment">
          <source>Facilitates communication between an enlisted transaction participant and the transaction manager during the final phase of the transaction.</source>
          <target state="translated">트랜잭션의 마지막 단계에서 참여한 트랜잭션 참가 요소와 트랜잭션 관리자 간의 통신을 용이하게 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Enlistment">
          <source>When the <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> object are invoked to enlist a participant in a transaction, they return this object describing the enlistment.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> 개체 트랜잭션에서 참가자를 등록 하기 위해 호출 되는 인 리스트 먼 트를 설명 하는이 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Enlistment">
          <source>During the final phase of the transaction commit, the transaction manager passes this object to a resource manager implementing the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interface that has enlisted in a transaction.</source>
          <target state="translated">트랜잭션 커밋의 마지막 단계는 트랜잭션 관리자를 구현 하는 리소스 관리자에 게이 개체를 전달 된 <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> 가 트랜잭션에 참여 하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Enlistment">
          <source>Specifically, the transaction manager calls either the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;</ph> or the <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;</ph> method of the participant, depending on whether the latter has decided to commit or roll back the transaction.</source>
          <target state="translated">특히, 트랜잭션 관리자 호출 중 하나는 <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;</ph> 여부 후자에서 하기로 트랜잭션을 커밋하거나에 따라 참가자의 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Enlistment">
          <source>The participant should call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method of this object to let the transaction manager know that it has completed its work.</source>
          <target state="translated">참가자를 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 트랜잭션 관리자는 작업이 완료 되었음을 알 수 있도록이 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Enlistment">
          <source>An enlistment can call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method at anytime before it has called <ph id="ph2">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> in the prepare phase.</source>
          <target state="translated">인 리스트 먼 트를 호출할 수는 <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 메서드 전에 언제 든 지 라 부릅니다 <ph id="ph2">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> 준비 단계에 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Enlistment">
          <source>By doing so, the enlistment is casting a read only vote, meaning that it votes commit on the transaction but does not need to receive the final outcome.</source>
          <target state="translated">이렇게 하면 해당 인 리스트 먼 트랜잭션에서 커밋 응답 하지만 최종 결과 수신 하지 않아도 의미 읽기 전용 투표를 캐스팅은 했습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Enlistment">
          <source>Note that, after the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method is called, the enlisted participant receives no further notifications from the transaction manager.</source>
          <target state="translated">유의 후의 <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 메서드가 호출 되 면 등록 된 참가자는 트랜잭션 관리자에서 더 이상 알림을 받습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Enlistment">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interface, and when the <ph id="ph2">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method should be called.</source>
          <target state="translated">다음 예제에서는의 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> 인터페이스 및 시기는 <ph id="ph2">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.Enlistment">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Transactions.Enlistment.Done">
          <source>Indicates that the transaction participant has completed its work.</source>
          <target state="translated">트랜잭션 참가 요소가 작업을 완료했음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>During the final phase of the transaction commit, the transaction manager calls either the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;</ph> method of the participant, depending on whether the transaction is to be committed or rolled back.</source>
          <target state="translated">트랜잭션 커밋의 마지막 단계는 트랜잭션 관리자 호출는 <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;</ph> 트랜잭션이 커밋 또는 롤백 인지에 따라 참가자의 메서드.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>The resource manager should perform any work necessary to finish the transaction and then inform the transaction manager that it has finished by calling the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method on the <ph id="ph2">`enlistment`</ph> parameter.</source>
          <target state="translated">트랜잭션을 완료 하 고 다음 트랜잭션 관리자를 호출 하 여 완료 했음을 알립니다 하는 데 필요한 작업을 수행한 리소스 관리자는 <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 에서 메서드는 <ph id="ph2">`enlistment`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>If the resource manager has enlisted durably, but does not respond by calling <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method, the transaction manager is unsure that the resource manager has received the respective notification call.</source>
          <target state="translated">리소스 관리자가, 영속적 참여 하지만 호출 하 여 응답 하지 않는 경우 <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 메서드, 트랜잭션 관리자는 리소스 관리자는 해당 알림 호출을 받았는지 있는지 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">따라서 트랜잭션 관리자에 대 한 응답 대기 및 관련 정보가이 거래를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>If <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 가 호출 되지 정보의이 부분을 무기한 보관 됩니다 메모리 또는 시스템 수준 리소스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">따라서 리소스를 회수할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">분산 트랜잭션에서이 수는 MSDTC 로그가 가득 MSDTC 프로세스를 중단 하는 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>In the case of a transaction managed by <ph id="ph1">&lt;xref:System.Transactions&gt;</ph>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">관리 하는 트랜잭션의 경우 <ph id="ph1">&lt;xref:System.Transactions&gt;</ph>,이 인해 리소스 관리자의 프로세스의 메모리 소비량에 점진적으로 지속적으로 증가 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>Therefore, it is crucial that you call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method once your resource manager is done with your prepare work.</source>
          <target state="translated">따라서 것이 호출 하는 데 중요는 <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 메서드 리소스 관리자 작업을 완료 한 후 프로그램 작업을 준비 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>An enlistment can call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method at anytime before it has called <ph id="ph2">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> in the prepare phase.</source>
          <target state="translated">인 리스트 먼 트를 호출할 수는 <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 메서드 전에 언제 든 지 라 부릅니다 <ph id="ph2">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> 준비 단계에 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>By doing so, the enlistment is casting a read only vote, meaning that it votes commit on the transaction but does not need to receive the final outcome.</source>
          <target state="translated">이렇게 하면 해당 인 리스트 먼 트랜잭션에서 커밋 응답 하지만 최종 결과 수신 하지 않아도 의미 읽기 전용 투표를 캐스팅은 했습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.Enlistment.Done">
          <source>Note that, after this method is called, the enlisted participant receives no further notifications from the transaction manager.</source>
          <target state="translated">즉,이 메서드가 호출 되 면 등록 된 참가자 없습니다 더 이상 알림을 받지 트랜잭션 관리자에서 note 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>