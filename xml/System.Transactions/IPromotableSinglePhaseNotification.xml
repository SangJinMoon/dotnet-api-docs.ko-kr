<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPromotableSinglePhaseNotification.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5280b6fe02efffcfc657a60dbb351fb84dced57ff.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">280b6fe02efffcfc657a60dbb351fb84dced57ff</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.IPromotableSinglePhaseNotification">
          <source>Describes an object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.</source>
          <target state="translated">리소스 관리자 내부의 분산되지 않은 트랜잭션에 대한 커밋 대리자로 작동하는 개체에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IPromotableSinglePhaseNotification">
          <source>Promotable Enlistments (PSPE) allow a resource, such as a database, to take ownership of the transaction if it is the only entity participating in the transaction.</source>
          <target state="translated">승격 가능한 인리스트먼트입니다 (PSPE) 트랜잭션에 참여 유일한 엔터티인 경우 트랜잭션의 소유권을 데이터베이스와 같은 리소스를 허용 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IPromotableSinglePhaseNotification">
          <source>Later, if needed, the <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure can still escalate the transaction to MSDTC.</source>
          <target state="translated">나중에 필요한 경우는 <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> 인프라 MSDTC 트랜잭션을 에스컬레이션할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IPromotableSinglePhaseNotification">
          <source>For more information, see <bpt id="p1">[</bpt>Optimization Using Single Phase Commit and Promotable Single Phase Notification<ept id="p1">](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>최적화를 사용 하 여 단일 단계 커밋 및 승격 가능한 단일 단계 알림<ept id="p1">](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IPromotableSinglePhaseNotification">
          <source>A resource manager that implements this interface delegates control of the commit of it's internal non-distributed transaction to an enlistment on a <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> transaction through the <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistPromotableSinglePhase%2A&gt;</ph> method on the <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> class.</source>
          <target state="translated">이 인터페이스를 구현 하는 리소스 관리자에 내부 비분산 트랜잭션 참여 항목을 커밋의 제어를 위임는 <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> 를 통해 트랜잭션을 <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistPromotableSinglePhase%2A&gt;</ph> 에서 메서드는 <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IPromotableSinglePhaseNotification">
          <source>If the <ph id="ph1">&lt;xref:System.Transactions.ITransactionPromoter.Promote%2A?displayProperty=nameWithType&gt;</ph> method is called, your implementation of this interface must produce a distributed transaction in the form of a propagation token, and return it to <ph id="ph2">&lt;xref:System.Transactions&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Transactions.ITransactionPromoter.Promote%2A?displayProperty=nameWithType&gt;</ph> 메서드는,이 인터페이스의 구현 형식 전파 토큰으로 분산된 트랜잭션을 생성 하며 반환 되 게 <ph id="ph2">&lt;xref:System.Transactions&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IPromotableSinglePhaseNotification">
          <source>After you enlist an object that implements this interface as a participant of a transaction using the <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistPromotableSinglePhase%2A&gt;</ph> method, the transaction manager then notifies the participant when the transaction is promoted, committed, or rolled back by invoking the <ph id="ph2">&lt;xref:System.Transactions.ITransactionPromoter.Promote%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit%2A&gt;</ph> method, or the <ph id="ph4">&lt;xref:System.Transactions.IPromotableSinglePhaseNotification.Rollback%2A&gt;</ph> method of the object.</source>
          <target state="translated">사용 하 여 트랜잭션 참여자로이 인터페이스를 구현 하는 개체를 등록 한 후의 <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistPromotableSinglePhase%2A&gt;</ph> 메서드, 트랜잭션 관리자 알립니다 참가자 트랜잭션이 승격 커밋 또는 롤백는 를호출하여<ph id="ph2">&lt;xref:System.Transactions.ITransactionPromoter.Promote%2A&gt;</ph> 메서드는 <ph id="ph3">&lt;xref:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit%2A&gt;</ph> 메서드, 또는 <ph id="ph4">&lt;xref:System.Transactions.IPromotableSinglePhaseNotification.Rollback%2A&gt;</ph> 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.IPromotableSinglePhaseNotification">
          <source>For more information, see <bpt id="p1">[</bpt>Optimization Using Single Phase Commit and Promotable Single Phase Notification<ept id="p1">](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>최적화를 사용 하 여 단일 단계 커밋 및 승격 가능한 단일 단계 알림<ept id="p1">](http://msdn.microsoft.com/library/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
          <source>Notifies a transaction participant that enlistment has completed successfully.</source>
          <target state="translated">참여가 성공적으로 완료되었음을 트랜잭션 참가 요소에게 알립니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
          <source>If initialization logic is required to prepare an enlisted object to participate in a transaction, it is preferable to implement that logic in this method instead of in a constructor.</source>
          <target state="translated">초기화 논리에 참여 한 개체는 트랜잭션에 참여할를 준비 하려면 필요한 경우 대신이 메서드는 생성자에서에서 해당 논리를 구현 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
          <source>In this way, the initialization occurs only if the object is successfully enlisted as a transaction participant.</source>
          <target state="translated">이러한 방식으로 초기화 하는 개체는 성공적으로 참여 하 고 트랜잭션 참여 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
          <source>An attempt to enlist or serialize a transaction.</source>
          <target state="translated">트랜잭션을 참여시키거나 serialize하려는 경우</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)">
          <source>Notifies an enlisted object that the transaction is being rolled back.</source>
          <target state="translated">참여한 개체에게 트랜잭션이 롤백 중임을 알립니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)">
          <source>On receiving this notification, the PSPE should always rollback it's internal transaction and then reply with the <ph id="ph1">&lt;xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A&gt;</ph> callback method on the <ph id="ph2">`singlePhaseEnlistment`</ph> parameter.</source>
          <target state="translated">이 알림을 받으면 PSPE 해야 항상 내부 트랜잭션 및 사용 하 여 다음 회신 롤백은 <ph id="ph1">&lt;xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A&gt;</ph> 에 콜백 메서드는 <ph id="ph2">`singlePhaseEnlistment`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)">
          <source>If the PSPE replies with  <ph id="ph1">&lt;xref:System.Transactions.SinglePhaseEnlistment.Committed%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Transactions.SinglePhaseEnlistment.InDoubt%2A&gt;</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown from the callback.</source>
          <target state="translated">PSPE로 회신 하는 경우 <ph id="ph1">&lt;xref:System.Transactions.SinglePhaseEnlistment.Committed%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Transactions.SinglePhaseEnlistment.InDoubt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> 콜백을 통해 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
          <source>Notifies an enlisted object that the transaction is being committed.</source>
          <target state="translated">참여한 개체에게 트랜잭션이 커밋 중임을 알립니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
          <source>This method notifies an enlisted object that the transaction is to be committed.</source>
          <target state="translated">이 메서드는 트랜잭션이 커밋된 것으로 참여 한 개체를 알립니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
          <source>The <ph id="ph1">`singlePhaseEnlistment`</ph> parameters contain callbacks that allow the implementation of this interface to notify the transaction manager of the outcome of the transaction, since the transaction manager has delegated control of the transaction.</source>
          <target state="translated"><ph id="ph1">`singlePhaseEnlistment`</ph> 매개 변수는 콜백이 포함 트랜잭션에 알리기 위해이 인터페이스의 구현을 관리자는 트랜잭션의 결과에 이후 트랜잭션 관리자가 트랜잭션 제어를 위임 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
          <source>In the case of a promoted transaction, the transaction manager listens to the transaction outcome and overrides the response being sent.</source>
          <target state="translated">승격된 된 트랜잭션의 경우 트랜잭션 관리자는 트랜잭션 결과를 수신 하 고 전송 되는 응답을 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
          <source>On receiving this notification, the resource manager should attempt to commit it's internal transaction (or the distributed transaction if it has been escalated), and invoke one of the callback methods on the <ph id="ph1">`singlePhaseEnlistment`</ph> parameter based on the outcome of committing it's transaction.</source>
          <target state="translated">이 알림을 받으면 리소스 관리자 내부 트랜잭션 (또는 분산된 트랜잭션을 에스컬레이션 된 경우)를 커밋하고에 콜백 메서드 중 하나를 호출 하 시도 <ph id="ph1">`singlePhaseEnlistment`</ph> 의 결과에 따라 매개 변수 트랜잭션 커밋입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>