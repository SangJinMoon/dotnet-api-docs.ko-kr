<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PreparingEnlistment.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac520b61f94a29c7f12ab1350800ca9b1371658acc3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20b61f94a29c7f12ab1350800ca9b1371658acc3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.PreparingEnlistment">
          <source>Facilitates communication between an enlisted transaction participant and the transaction manager during the Prepare phase of the transaction.</source>
          <target state="translated">트랜잭션의 준비 단계에서 참여한 트랜잭션 참가 요소와 트랜잭션 관리자 간의 통신을 용이하게 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.PreparingEnlistment">
          <source>During the initial (prepare) phase of the transaction, the transaction manager passes this type to the resource manager by calling the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;</ph> method to obtain a resource's vote on the transaction.</source>
          <target state="translated">초기 하는 동안 (준비) 단계 트랜잭션의 트랜잭션 관리자이 이와 같은 리소스 관리자를 호출 하 여 전달 된 <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;</ph> 트랜잭션에서 리소스의 투표를 얻는 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.PreparingEnlistment">
          <source>Depending on whether it votes to commit or roll back, your implementation of the resource manager should call the <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Transactions.PreparingEnlistment.ForceRollback%2A&gt;</ph> methods of this type.</source>
          <target state="translated">리소스 관리자의 구현 여부에 따라 커밋 또는 롤백를 호출 해야는 <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Transactions.PreparingEnlistment.ForceRollback%2A&gt;</ph> 이 형식의 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.PreparingEnlistment">
          <source>The resource manager can also call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method at anytime before it has called the <ph id="ph2">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> method.</source>
          <target state="translated">리소스 관리자를 호출할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 메서드 전에 언제 든 지 라 부릅니다는 <ph id="ph2">&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.PreparingEnlistment">
          <source>By doing so, the enlistment is casting a read only vote, meaning that it votes commit on the transaction but does not need to receive the final outcome.</source>
          <target state="translated">이렇게 하면 해당 인 리스트 먼 트랜잭션에서 커밋 응답 하지만 최종 결과 수신 하지 않아도 의미 읽기 전용 투표를 캐스팅은 했습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.PreparingEnlistment">
          <source>Durable resource managers can retrieve the information that is be needed by the transaction manager for re-enlistment from the <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A&gt;</ph> property.</source>
          <target state="translated">영구 리소스 관리자는 정보를 검색할 수에서 다시 참여에 대 한 트랜잭션 관리자가 필요할 수는 <ph id="ph1">&lt;xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.PreparingEnlistment">
          <source>For more information on recovery, see <bpt id="p1">[</bpt>Performing Recovery<ept id="p1">](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>.</source>
          <target state="translated">복구에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>복구 수행<ept id="p1">](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.PreparingEnlistment">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Transactions.PreparingEnlistment">
          <source>Indicates that the transaction should be rolled back.</source>
          <target state="translated">트랜잭션을 롤백해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Transactions.PreparingEnlistment.ForceRollback">
          <source>Indicates that the transaction should be rolled back.</source>
          <target state="translated">트랜잭션을 롤백해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.PreparingEnlistment.ForceRollback">
          <source>An implementation of the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interface calls this method to indicate that the transaction must be rolled back.</source>
          <target state="translated">구현에서 <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> 인터페이스 트랜잭션이 롤백되어야 있는지 나타내기 위해이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)">
          <source>Indicates that the transaction should be rolled back.</source>
          <target state="translated">트랜잭션을 롤백해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Transactions.PreparingEnlistment.Prepared">
          <source>Indicates that the transaction can be committed.</source>
          <target state="translated">트랜잭션이 커밋될 수 있음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.PreparingEnlistment.Prepared">
          <source>In the first (prepare) phase of a two phase commit, a resource manager implementing the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interface, calls this method to indicate that the transaction can be committed.</source>
          <target state="translated">첫 번째 범위에서 (준비) 2 단계 커밋을 구현 하는 리소스 관리자의 단계는 <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> 인터페이스를 트랜잭션이 커밋될 수 있음을 나타내기 위해이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.PreparingEnlistment.Prepared">
          <source>The resource manager can call the <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> method at anytime before it has called this method.</source>
          <target state="translated">리소스 관리자를 호출할 수는 <ph id="ph1">&lt;xref:System.Transactions.Enlistment.Done%2A&gt;</ph> 에서 원하는 방법이 되기 전에 언제 든 지이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.PreparingEnlistment.Prepared">
          <source>By doing so, the enlistment is casting a read only vote, meaning that it votes commit on the transaction but does not need to receive the final outcome.</source>
          <target state="translated">이렇게 하면 해당 인 리스트 먼 트랜잭션에서 커밋 응답 하지만 최종 결과 수신 하지 않아도 의미 읽기 전용 투표를 캐스팅은 했습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.PreparingEnlistment.Prepared">
          <source>Once this method is called by an enlistment and before it returns, it is possible that another thread or this same thread could make a call into the same enlistment method such as <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;</ph> to perform a rollback.</source>
          <target state="translated">인리스트먼트에 의해이 메서드가 호출 되 고 있기 반환 하기 전에 해당 다른 스레드 또는이 동일한 스레드에서 만들 수 동일한 인 리스트 먼 트 메서드에 대 한 호출 등 <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;</ph> 한 롤백을 수행할 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.PreparingEnlistment.Prepared">
          <source>This can result in a deadlock situation if the resource manager implementation does not release resource locks until after this method returns.</source>
          <target state="translated">이 메서드가 반환 된 후 리소스 관리자 구현 될 때까지 리소스 잠금을 해제 하지 않는 경우이 값이 교착 상태 상황이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Transactions.PreparingEnlistment.RecoveryInformation">
          <source>Gets the recovery information of an enlistment.</source>
          <target state="translated">참여 항목의 복구 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Transactions.PreparingEnlistment.RecoveryInformation">
          <source>The recovery information of an enlistment.</source>
          <target state="translated">참여 항목의 복구 정보입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Transactions.PreparingEnlistment.RecoveryInformation">
          <source>An attempt to get recovery information inside a volatile enlistment, which does not generate any recovery information.</source>
          <target state="translated">복구 정보를 생성하지 않는 일시적 참여 항목 내의 복구 정보를 가져오려고 한 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>