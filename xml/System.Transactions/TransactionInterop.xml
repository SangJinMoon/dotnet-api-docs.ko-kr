<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransactionInterop.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456091686227af2683531393d8d946952f302754920.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">091686227af2683531393d8d946952f302754920</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionInterop">
          <source>Facilitates interaction between <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> and components that were previously written to interact with MSDTC, COM+, or <ph id="ph2">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph>와 구성 요소(MSDTC, COM+ 또는 <ph id="ph2">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>와 상호 작용하도록 이전에 작성된 구성 요소) 간의 상호 작용을 원활하게 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionInterop">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>This class provides methods for transaction propagation.</source>
          <target state="translated">이 클래스는 트랜잭션 전파에 대 한 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>For more information on how this process works, see <bpt id="p1">[</bpt>Transaction Propagation<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)</ept>.</source>
          <target state="translated">이 프로세스의 작동 방식에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>트랜잭션 전파<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Using the methods provided by this class, you can engage in two types of transaction propagations, Export/Import (push model) and Transmitter/Receiver (pull model).</source>
          <target state="translated">이 클래스에서 제공 하는 메서드를 사용 하 여 두 가지 유형의 트랜잭션 전파 내보내기/가져오기 (밀어 넣기 모델) 및 전송기/수신기 (끌어오기 모델)에 참여할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>The Export/Import (push model) propagation involves these steps,</source>
          <target state="translated">내보내기/가져오기 (밀어 넣기 모델) 전파는 다음이 단계로 이루어집니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, obtain the "whereabouts" of the transaction manager of that machine by calling the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetWhereabouts%2A&gt;</ph> method.</source>
          <target state="translated">원격 컴퓨터에는 "위치" 해당 컴퓨터의 트랜잭션 관리자의 호출 하 여 가져올는 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetWhereabouts%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>You can then cache this piece of information on the client machine for future usage.</source>
          <target state="translated">그런 다음이 부분의 사용 시 클라이언트 컴퓨터에 대 한 정보를 캐시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Send the data containing the whereabouts to the client machine using any preferred method</source>
          <target state="translated">기본 메서드를 사용 하 여 클라이언트 컴퓨터에 위치를 포함 하는 데이터 보내기</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the client machine, use the whereabouts to "export" the transaction to the remote machine and generate a transaction "cookie".</source>
          <target state="translated">클라이언트 컴퓨터의 whereabouts를 사용 하 여 트랜잭션이 원격 컴퓨터에 "export"를 트랜잭션 "쿠키"를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>This is done by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> and passing in the remote machine's whereabouts.</source>
          <target state="translated">호출 하 여 이렇게 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> 에서 원격 컴퓨터의 위치를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Send the data containing the transaction "cookie" to the remote machine using any preferred method</source>
          <target state="translated">기본 메서드를 사용 하 여 원격 컴퓨터를 "쿠키" 트랜잭션을 포함 하는 데이터를 보내기</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, use the transaction "cookie" to obtain a clone of the client transaction by calling the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A&gt;</ph> method.</source>
          <target state="translated">원격 컴퓨터를 사용 하 여 트랜잭션 "쿠키"를 호출 하 여 클라이언트 트랜잭션의 복제본 가져옵니다는 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, use the clone transaction to enlist the resource manager using the <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> class.</source>
          <target state="translated">원격 컴퓨터에서 사용 하 여 복제본 트랜잭션을 사용 하 여 리소스 관리자 참여에서 <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>The Transmitter/Receiver (pull model) propagation involves these steps,</source>
          <target state="translated">(끌어오기 모델) 전송기/수신기 전파는 다음이 단계로 이루어집니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the client machine, using the transaction generates a corresponding "propagation token" by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph></source>
          <target state="translated">호출 하 여 해당 "전파 토큰" 생성는 트랜잭션을 사용 하 여 클라이언트 컴퓨터에서 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Send the data containing the "propagation token" of the transaction to the remote machine using any preferred method</source>
          <target state="translated">"전파 토큰" 트랜잭션의 기본 메서드를 사용 하 여 원격 컴퓨터를 포함 하는 데이터 보내기</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>On the remote machine, use the "propagation token" to obtain a clone of the client transaction by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph></source>
          <target state="translated">원격 컴퓨터에서 "전파 토큰"를 사용 하 여 호출 하 여 클라이언트 트랜잭션 복제를 가져오려면 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>The Transmitter/Receiver model provides better performance in scenarios where the transaction token is sent to a remote machine, but the remote machine may not use it to obtain the transaction.</source>
          <target state="translated">전송기/수신기 모델은 트랜잭션 토큰은 원격 컴퓨터에 전송 원격 컴퓨터에서 사용할 수 없다는 트랜잭션을 가져올 수 있었지만 시나리오에 더 나은 성능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>This is because the transaction is not propagated until <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph> is called.</source>
          <target state="translated">트랜잭션이까지 전파 되지 않으므로 이것이 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>Another advantage is that the propagation token can be sent to any remote machine, while the export cookie can be used only on the machine that provided the whereabouts.</source>
          <target state="translated">또 다른 이점은 내보내기 쿠키 whereabouts를 제공 하는 컴퓨터에만 사용할 수 있지만 모든 원격 컴퓨터에 전파 토큰을 받을 수 있는지입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source>However, you should also note that the whereabouts of remote transaction managers are encapsulated in all the propagation tokens, making them bigger than the corresponding transaction cookies from the Export/Import model.</source>
          <target state="translated">그러나 유의 원격 트랜잭션 관리자의 whereabouts 전파 토큰에 캡슐화 된 내보내기/가져오기 모델에서 해당 트랜잭션 쿠키 보다 커집니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionInterop">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This type uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph2">`FullTrust`</ph> permission set.</source>
          <target state="translated"><bpt id="p1">**</bpt>하지만 참고<ept id="p1">**</ept> 이 형식을 사용 하 여 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> 신뢰할 수 없는 코드에서 호출 되 고 하지 못하도록; 직접 실행 호출자만 보유 하 고 필요는 <ph id="ph2">`FullTrust`</ph> 사용 권한 집합입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance to be marshaled.</source>
          <target state="translated">마샬링할 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> instance that represents a <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph>을 나타내는 <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> instance that represents a <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph>을 나타내는 <ph id="ph2">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> instance is compatible with the unmanaged form of <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> used by MSDTC and with the Managed form of <ph id="ph2">&lt;see cref="T:System.EnterpriseServices.ITransaction" /&gt;</ph> used by <ph id="ph3">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph> 인스턴스는 MSDTC에서 사용되는 관리되지 않는 형식의 <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> 및 <ph id="ph3">&lt;see cref="N:System.EnterpriseServices" /&gt;</ph>에서 사용되는 관리된 형식의 <ph id="ph2">&lt;see cref="T:System.EnterpriseServices.ITransaction" /&gt;</ph>과 호환됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> object to be marshaled.</source>
          <target state="translated">마샬링할 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>Transforms a transaction object into an export transaction cookie.</source>
          <target state="translated">트랜잭션 개체를 내보내기 트랜잭션 쿠키로 변형합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>An export transaction cookie representing the specified <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> 개체를 나타내는 내보내기 트랜잭션 쿠키입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>Call this method if you want to export a transaction.</source>
          <target state="translated">트랜잭션을 내보내려는 경우이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>The <ph id="ph1">`transaction`</ph> that is passed along is marshaled into a transaction cookie.</source>
          <target state="translated"><ph id="ph1">`transaction`</ph> 전달 되는 방향으로 표시는 트랜잭션 쿠키로 마샬링됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>You can then send the transaction cookie to the destination process.</source>
          <target state="translated">그런 다음 대상 프로세스에 트랜잭션 쿠키를 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>This is referred to as propagating the transaction between processes or systems.</source>
          <target state="translated">프로세스 또는 시스템 간에 트랜잭션을 전파할 라고 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>The propagation is considered to be a push model where the local transaction is pushed to the destination.</source>
          <target state="translated">전파는 대상 로컬 트랜잭션이 있는 밀어넣기됩니다 밀어 넣기 모델 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>Therefore, information contained in <ph id="ph1">`whereabouts`</ph> must describe the destination transaction manager.</source>
          <target state="translated">따라서에 포함 된 정보 <ph id="ph1">`whereabouts`</ph> 대상 트랜잭션 관리자에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">다양한 전파 모델에 대한 자세한 내용은 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> 클래스의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
          <source>Generates a <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from a specified <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph>에서 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>을 생성합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance that represents the given <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Transactions.IDtcTransaction" /&gt;</ph>을 나타내는 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
          <source>The <ph id="ph1">`transactionNative`</ph> is compatible with the unmanaged form of <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> used by MSDTC and with the Managed form of <ph id="ph2">&lt;xref:System.EnterpriseServices.ITransaction&gt;</ph> used by <ph id="ph3">&lt;xref:System.EnterpriseServices&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`transactionNative`</ph> 관리 되지 않는 형식으로 호환 <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> 에 사용 되는 MSDTC의 관리 되는 양식으로 <ph id="ph2">&lt;xref:System.EnterpriseServices.ITransaction&gt;</ph> 에서 사용 하는 <ph id="ph3">&lt;xref:System.EnterpriseServices&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
          <source>Generates a <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from the specified an export cookie.</source>
          <target state="translated">지정된 내보내기 쿠키에서 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>을 생성합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from the specified export cookie.</source>
          <target state="translated">지정된 내보내기 쿠키에서 생성된 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">다양한 전파 모델에 대한 자세한 내용은 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> 클래스의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>Generates a <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance from the specified transmitter propagation token.</source>
          <target state="translated">지정된 전송기 전파 토큰에서 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> 인스턴스를 생성합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> from the specified transmitter propagation token.</source>
          <target state="translated">지정된 전송기 전파 토큰에서 생성된 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>This method, together with the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph> method, provide functionality for "pull" propagation, in which the transaction is "pulled" from the remote machine when this method is called to unmarshal the transaction.</source>
          <target state="translated">와 함께이 메서드는 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph> 메서드는 트랜잭션을 "끌어옵니다" 원격 컴퓨터 로부터 트랜잭션의 역마샬링을 위해이 메서드를 호출할 때 "끌어오기" 전파 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">다양한 전파 모델에 대한 자세한 내용은 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> 클래스의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>The deserialization of a transaction fails because the transaction manager cannot be contacted.</source>
          <target state="translated">트랜잭션 관리자에 연결할 수 없어 트랜잭션의 deserialization에 실패한 경우.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
          <source>This may be caused by network firewall or security settings.</source>
          <target state="translated">이 예외는 네트워크 방화벽이나 보안 설정으로 인해 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>A transaction to be marshaled into a propagation token.</source>
          <target state="translated">전파 토큰으로 마샬링할 트랜잭션입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>Generates a propagation token for the specified <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>에 대한 전파 토큰을 생성합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>This method, together with the <ph id="ph1">&lt;see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /&gt;</ph> method, provide functionality for Transmitter/Receiver propagation, in which the transaction is "pulled" from the remote machine when the latter is called to unmarshal the transaction.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /&gt;</ph> 메서드와 함께 전송기/수신기 전파 기능을 제공하는데 전송기/수신기 전파에서는 트랜잭션의 역마샬링을 위해 후자가 호출될 때 원격 컴퓨터로부터 트랜잭션을 “끌어옵니다”.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
          <source>For more information on different propagation models, see <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionInterop" /&gt;</ph> class.</source>
          <target state="translated">다양한 전파 모델에 대한 자세한 내용은 <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionInterop" /&gt;</ph> 클래스를 참조하세요.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>Gets the Whereabouts of the distributed transaction manager that <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> uses.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph>에서 사용되는 분산 트랜잭션 관리자의 Whereabouts를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>The Whereabouts of the distributed transaction manager that <ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph> uses.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Transactions" /&gt;</ph>에서 사용되는 분산 트랜잭션 관리자의 Whereabouts입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>The Whereabouts contains an address that describes the location of a transaction manager.</source>
          <target state="translated">Whereabouts는 트랜잭션 관리자의 위치를 설명 하는 주소를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.</source>
          <target state="translated">이 주소를 통해 두 트랜잭션 관리자가 서로 통신하여 시스템 간에 트랜잭션을 전파할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>The information returned by this method can be used to provide location information for push model transaction propagation with the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드에 의해 반환 되는 정보를 푸시 모델 트랜잭션 전파에 대 한 위치 정보를 제공 데 사용할 수는 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionInterop.GetWhereabouts">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
          <target state="translated">다양한 전파 모델에 대한 자세한 내용은 <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> 클래스의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
          <source>The type of the distributed transaction processor.</source>
          <target state="translated">분산된 트랜잭션 프로세서의 유형입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
          <source>This value is used for the <ph id="ph1">`Transaction.PromoterType`</ph> property if the transaction is or will be promoted to MSDTC and the <ph id="ph2">`Transaction.GetPromotedToken`</ph> method will return an MSDTC transaction propagation token for the <ph id="ph3">`byte[]`</ph> result.</source>
          <target state="translated">이 값에 사용 되는 <ph id="ph1">`Transaction.PromoterType`</ph> 속성은 트랜잭션이 또는 MSDTC 승격 하는 경우 및 <ph id="ph2">`Transaction.GetPromotedToken`</ph> 메서드는 MSDTC 트랜잭션 전파 토큰을 반환 합니다는 <ph id="ph3">`byte[]`</ph> 결과입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>