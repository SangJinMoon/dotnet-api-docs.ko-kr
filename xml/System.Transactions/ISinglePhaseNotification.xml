<Type Name="ISinglePhaseNotification" FullName="System.Transactions.ISinglePhaseNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c113c1cbc5e9c30c27ce8c00781f0f373301b514" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISinglePhaseNotification : System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISinglePhaseNotification implements class System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.ISinglePhaseNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISinglePhaseNotification&#xA;Implements IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISinglePhaseNotification : System::Transactions::IEnlistmentNotification" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Transactions.IEnlistmentNotification</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bd7e2-101">트랜잭션에 참여하기 위해 단일 단계 커밋 최적화를 지원하는 리소스 개체를 설명합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd7e2-101">Describes a resource object that supports single phase commit optimization to participate in a transaction.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd7e2-102">단일 단계 커밋 최적화를 지원 하기 위해이 인터페이스를 구현 하는 리소스 관리자, 경우에 해당 하지 않을 단일 단계 커밋 받는다고 점에 유의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-102">You should note that even when your resource manager implements this interface to support single phase commit optimization, it is not guaranteed that it receives a single phase commit.</span></span> <span data-ttu-id="bd7e2-103">트랜잭션 관리자 2 단계 커밋 알림을 대신 보낼 여전히 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-103">The transaction manager can still send two phase commit notifications instead.</span></span>  
  
 <span data-ttu-id="bd7e2-104">트랜잭션에 참여 하 여 리소스 관리자 참여를 호출 하는 <xref:System.Transactions.Transaction.EnlistVolatile%2A> 메서드 또는 <xref:System.Transactions.Transaction.EnlistDurable%2A> 의 메서드는 <xref:System.Transactions.Transaction> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-104">To enlist your resource manager as a participant in a transaction, call the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method or the <xref:System.Transactions.Transaction.EnlistDurable%2A> method of the <xref:System.Transactions.Transaction> class.</span></span> <span data-ttu-id="bd7e2-105">특히,는 `EnlistmentOptions` 매개 변수를와 같아야 합니다. <xref:System.Transactions.EnlistmentOptions.None> 단일 단계 커밋이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-105">Specifically, the `EnlistmentOptions` parameter should equal to <xref:System.Transactions.EnlistmentOptions.None> to ensure that a single phase commit is performed.</span></span> <span data-ttu-id="bd7e2-106">로 잘못 설정 하는 경우 <xref:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired>, 없습니다 단일 단계 커밋이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-106">If it is mistakenly set to <xref:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired>, no single phase commit occurs.</span></span>  
  
 <span data-ttu-id="bd7e2-107">이후는 <xref:System.Transactions.ISinglePhaseNotification> 인터페이스에서 파생 되는 <xref:System.Transactions.IEnlistmentNotification> 인터페이스를 2 단계 커밋 알림을 대 한 리소스 관리자 뒤의 모든 메서드를도 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-107">Since the <xref:System.Transactions.ISinglePhaseNotification> interface derives from the <xref:System.Transactions.IEnlistmentNotification> interface, the resource manager must also implement all the methods of the latter for two phase commit notifications.</span></span>  <span data-ttu-id="bd7e2-108">트랜잭션 관리자가 선택 여부 2 단계 커밋 되었거나 단일 단계 커밋 최적화가 리소스 관리자와 함께 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-108">It is the transaction manager's choice as to whether two phase commit or the single phase commit optimization is used with this resource manager.</span></span>  <span data-ttu-id="bd7e2-109">그러나이 인터페이스를 구현 게 리소스 관리자를 사용할 수 있는 최적화 활용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-109">However, implementing this interface gives the resource manager the opportunity to take advantage of the optimization when it is available.</span></span>  
  
 <span data-ttu-id="bd7e2-110">최적화 사용 되 고 트랜잭션 관리자를 호출 하는 경우는 <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> 참여 한 리소스의 메서드를 리소스 관리자에 응답 해야이 호출의 다양 한 메서드를 사용 하 여는 <xref:System.Transactions.SinglePhaseEnlistment> 클래스를 사용 하는 경우 트랜잭션 관리자에 게 알리는 트랜잭션이 커밋 또는 롤백입니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-110">If the optimization is used and the transaction manager calls the <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> method of the enlisted resource, the resource manager should respond to this call by using various methods of the <xref:System.Transactions.SinglePhaseEnlistment> class to inform the transaction manager if the transaction is to be committed or rolled back.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.IEnlistmentNotification" />
  </Docs>
  <Members>
    <Member MemberName="SinglePhaseCommit">
      <MemberSignature Language="C#" Value="public void SinglePhaseCommit (System.Transactions.SinglePhaseEnlistment singlePhaseEnlistment);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SinglePhaseCommit(class System.Transactions.SinglePhaseEnlistment singlePhaseEnlistment) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SinglePhaseCommit(System::Transactions::SinglePhaseEnlistment ^ singlePhaseEnlistment);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public void SinglePhaseCommit (System.Transactions.SinglePhaseEnlistment enlistment);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SinglePhaseCommit(class System.Transactions.SinglePhaseEnlistment enlistment) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SinglePhaseCommit (enlistment As SinglePhaseEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SinglePhaseCommit(System::Transactions::SinglePhaseEnlistment ^ enlistment);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singlePhaseEnlistment" Type="System.Transactions.SinglePhaseEnlistment" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="enlistment" Type="System.Transactions.SinglePhaseEnlistment" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="singlePhaseEnlistment">To be added.</param>
        <summary>
          <span data-ttu-id="bd7e2-111">1단계 커밋 최적화를 사용하기 위한 리소스 관리자의 콜백 구현을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd7e2-111">Represents the resource manager's implementation of the callback for the single phase commit optimization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd7e2-112">트랜잭션 관리자가 선택 여부 2 단계 커밋 되었거나 단일 단계 커밋 최적화가 리소스 관리자와 함께 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-112">It is the transaction manager's choice as to whether two phase commit or the single phase commit optimization is used with this resource manager.</span></span>  <span data-ttu-id="bd7e2-113">1 단계 및 2 단계 커밋에 대 한 자세한 내용은 참조 하십시오. [커밋하는 트랜잭션에서 단일 단계 및 다중 단계](http://msdn.microsoft.com/library/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d)합니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-113">For more information on single phase and two phase commit, see [Committing A Transaction In Single-Phase and Multi-Phase](http://msdn.microsoft.com/library/74b3cfe1-d33a-45b8-91f4-dfd6f6598c4d).</span></span>  
  
 <span data-ttu-id="bd7e2-114">리소스 관리자의이 참여에 따라서 중 하나는 <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> 메서드는 두 단계 커밋 메서드 게에 정의 된 또는 <xref:System.Transactions.IEnlistmentNotification> 인터페이스 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-114">Therefore, on this enlistment of the resource manager, either the <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> method is called, or the two phase commit methods defined in ther <xref:System.Transactions.IEnlistmentNotification> interface are called.</span></span>  
  
 <span data-ttu-id="bd7e2-115">이 메서드의 구현 중 하나를 호출 해야는 <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> 메서드 또는 <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> 의 메서드는 `singlePhaseEnlistment` 트랜잭션이 커밋 또는 롤백 하는지 여부를 나타내는 매개 변수를 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-115">Your implementation of this method should call either the <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> method or the <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> method of the `singlePhaseEnlistment` parameter to indicate whether the transaction should be committed or rolled back.</span></span>  
  
 <span data-ttu-id="bd7e2-116">트랜잭션 관리자 또는 0 또는 더 불안정 한 인리스트먼트에서 없고 하나 지속적인 인 리스트 먼 하나만 일시적인 인 리스트 먼 단일 단계 커밋을 지 원하는 경우이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-116">The transaction manager calls this method when there is only one volatile enlistment that supports single phase commit, or when there are zero or more volatile enlistments and one durable enlistment.</span></span> <span data-ttu-id="bd7e2-117">후자의 경우 불안정 한 인리스트먼트에서 수신 <xref:System.Transactions.IEnlistmentNotification.Prepare%2A> 2 단계 커밋, 및 유일한 지속적인 인 리스트 먼에 대 한 알림을 단일 단계 커밋 알림을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="bd7e2-117">In the latter case, the volatile enlistments receive <xref:System.Transactions.IEnlistmentNotification.Prepare%2A> notifications for two-phase-commit, and the sole durable enlistment receives a single-phase commit notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>