<Type Name="CallingConventions" FullName="System.Reflection.CallingConventions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bdde5995cd46ebbf87958badd4771867bb14ce0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36543342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum CallingConventions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CallingConventions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CallingConventions" />
  <TypeSignature Language="VB.NET" Value="Public Enum CallingConventions" />
  <TypeSignature Language="C++ CLI" Value="public enum class CallingConventions" />
  <TypeSignature Language="F#" Value="type CallingConventions = " />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>메서드에 대한 올바른 호출 규칙을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 네이티브 호출 규칙은 순서에 적용 되는 규칙의 집합 및 레이아웃에 전달 된 인수의 컴파일된 메서드에 합니다. 또한 반환 값을 전달 하는 방법, 인수에 사용할 등록 기능 및 여부는 호출 또는 호출 메서드의 인수 스택에서 제거를 제어 합니다.  
  
   
  
## Examples  
 [!code-cpp[Type_GetConstructor3#1](~/samples/snippets/cpp/VS_Snippets_CLR/Type_GetConstructor3/CPP/type_getconstructor3.cpp#1)]
 [!code-csharp[Type_GetConstructor3#1](~/samples/snippets/csharp/VS_Snippets_CLR/Type_GetConstructor3/CS/type_getconstructor3.cs#1)]
 [!code-vb[Type_GetConstructor3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Type_GetConstructor3/VB/type_getconstructor3.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="Any" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.CallingConventions Any = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.CallingConventions.Any" />
      <MemberSignature Language="VB.NET" Value="Any" />
      <MemberSignature Language="C++ CLI" Value="Any" />
      <MemberSignature Language="F#" Value="Any = 3" Usage="System.Reflection.CallingConventions.Any" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <see langword="Standard" /> 또는 <see langword="VarArgs" /> 호출 규칙 중 사용할 수 있는 호출 규칙을 지정합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExplicitThis">
      <MemberSignature Language="C#" Value="ExplicitThis" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.CallingConventions ExplicitThis = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.CallingConventions.ExplicitThis" />
      <MemberSignature Language="VB.NET" Value="ExplicitThis" />
      <MemberSignature Language="C++ CLI" Value="ExplicitThis" />
      <MemberSignature Language="F#" Value="ExplicitThis = 64" Usage="System.Reflection.CallingConventions.ExplicitThis" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>시그니처를 인스턴스 또는 가상 메서드(정적 메서드 아님)에 대한 호출을 나타내는 함수 포인터 서명으로 지정합니다. <see langword="ExplicitThis" />를 설정하면 <see langword="HasThis" />도 설정해야 합니다. 호출된 메서드에 전달된 첫 번째 인수는 <see langword="this" /> 포인터지만 이 인수의 형식은 알 수 없습니다. 그러므로 <see langword="this" /> 포인터의 형식 또는 클래스를 설명하는 토큰은 명시적으로 메타데이터 시그니처에 저장됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="HasThis">
      <MemberSignature Language="C#" Value="HasThis" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.CallingConventions HasThis = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.CallingConventions.HasThis" />
      <MemberSignature Language="VB.NET" Value="HasThis" />
      <MemberSignature Language="C++ CLI" Value="HasThis" />
      <MemberSignature Language="F#" Value="HasThis = 32" Usage="System.Reflection.CallingConventions.HasThis" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>인스턴스 또는 가상 메서드(정적 메서드가 아님)를 지정합니다. 런타임에서, 호출된 메서드는 대상 개체를 가리키는 포인터에 첫 번째 인수(<see langword="this" /> 포인터)로 전달됩니다. 메서드를 알고 있고 메타데이터에서 소유자 클래스를 검색할 수 있으므로 메타데이터에 저장된 시그니처에는 이 첫 번째 인수의 형식이 포함되지 않습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Standard">
      <MemberSignature Language="C#" Value="Standard" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.CallingConventions Standard = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.CallingConventions.Standard" />
      <MemberSignature Language="VB.NET" Value="Standard" />
      <MemberSignature Language="C++ CLI" Value="Standard" />
      <MemberSignature Language="F#" Value="Standard = 1" Usage="System.Reflection.CallingConventions.Standard" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>공용 언어 런타임에서 결정한 대로 기본 호출 규칙을 지정합니다. 정적 메서드에는 이 호출 규칙을 사용하고, 인스턴스나 가상 메서드에는 <see langword="HasThis" />를 사용합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="VarArgs">
      <MemberSignature Language="C#" Value="VarArgs" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.CallingConventions VarArgs = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.CallingConventions.VarArgs" />
      <MemberSignature Language="VB.NET" Value="VarArgs" />
      <MemberSignature Language="C++ CLI" Value="VarArgs" />
      <MemberSignature Language="F#" Value="VarArgs = 2" Usage="System.Reflection.CallingConventions.VarArgs" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>가변 인수를 사용하여 메서드에 대한 호출 규칙을 지정합니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>