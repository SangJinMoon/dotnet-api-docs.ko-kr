<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MethodImplAttributes.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ae2cdd0c9c135171b7279a0ad160c213c0e374c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ae2cdd0c9c135171b7279a0ad160c213c0e374c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.MethodImplAttributes">
          <source>Specifies flags for the attributes of a method implementation.</source>
          <target state="translated">메서드 구현의 특성에 대한 플래그를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodImplAttributes">
          <source>The attributes are combined using the bitwise OR operation as follows:</source>
          <target state="translated">특성은 다음과 같이 OR 연산을 사용 하 여 결합 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodImplAttributes">
          <source><bpt id="p1">**</bpt>Code implementation masks:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>코드 구현 마스크:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodImplAttributes">
          <source><bpt id="p1">**</bpt>Managed masks:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>관리 되는 마스크:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodImplAttributes">
          <source><bpt id="p1">**</bpt>Implementation information and interop masks:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>구현 정보 및 interop 마스크:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodImplAttributes">
          <source>Locking on the instance or on the type, as with the Synchronized flag, is not recommended for public types, because code other than your own can take locks on public types and instances.</source>
          <target state="translated">인스턴스 또는 해당 형식에 Synchronized 플래그와 마찬가지로 잠금 권장 되지 않습니다 공용 형식에 대 한 다른 코드는 공용 유형 및 인스턴스 잠금을 사용할 수 있으므로.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.MethodImplAttributes">
          <source>This might cause deadlocks or other synchronization problems.</source>
          <target state="translated">교착 상태 또는 다른 동기화 문제가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.AggressiveInlining">
          <source>Specifies that the method should be inlined wherever possible.</source>
          <target state="translated">가능한 경우 메서드를 인라인하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.CodeTypeMask">
          <source>Specifies flags about code type.</source>
          <target state="translated">코드 형식에 대한 플래그를 지정합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.ForwardRef">
          <source>Specifies that the method is not defined.</source>
          <target state="translated">메서드가 정의되지 않도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.IL">
          <source>Specifies that the method implementation is in Microsoft intermediate language (MSIL).</source>
          <target state="translated">메서드 구현이 MSIL(Microsoft intermediate language)임을 지정합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.InternalCall">
          <source>Specifies an internal call.</source>
          <target state="translated">내부 호출을 지정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.Managed">
          <source>Specifies that the method is implemented in managed code.</source>
          <target state="translated">메서드가 관리되는 코드로 구현되도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.ManagedMask">
          <source>Specifies whether the method is implemented in managed or unmanaged code.</source>
          <target state="translated">메서드가 관리되는 코드로 구현되는지 또는 관리되지 않는 코드로 구현되는지를 지정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.MaxMethodImplVal">
          <source>Specifies a range check value.</source>
          <target state="translated">범위 확인 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.Native">
          <source>Specifies that the method implementation is native.</source>
          <target state="translated">메서드 구현이 네이티브임을 지정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.NoInlining">
          <source>Specifies that the method cannot be inlined.</source>
          <target state="translated">메서드를 인라인될 수 없도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.NoOptimization">
          <source>Specifies that the method is not optimized by the just-in-time (JIT) compiler or by native code generation (see <bpt id="p1">[</bpt>Ngen.exe<ept id="p1">](~/docs/framework/tools/ngen-exe-native-image-generator.md)</ept>) when debugging possible code generation problems.</source>
          <target state="translated">메서드가 가능한 코드 생성 문제를 디버그할 때 JIT(just-in-time) 컴파일러 또는 네이티브 코드 생성에 의해 최적화되지 않도록 지정합니다(<bpt id="p1">[</bpt>Ngen.exe<ept id="p1">](~/docs/framework/tools/ngen-exe-native-image-generator.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.OPTIL">
          <source>Specifies that the method implementation is in Optimized Intermediate Language (OPTIL).</source>
          <target state="translated">메서드 구현이 OPTIL(Optimized Intermediate Language)임을 지정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.PreserveSig">
          <source>Specifies that the method signature is exported exactly as declared.</source>
          <target state="translated">메서드 시그니처가 선언된 대로 정확하게 내보내지도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.Runtime">
          <source>Specifies that the method implementation is provided by the runtime.</source>
          <target state="translated">메서드 구현이 런타임에서 제공되도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.Synchronized">
          <source>Specifies that the method is single-threaded through the body.</source>
          <target state="translated">메서드가 본문 내에서 단일 스레드임을 지정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.Synchronized">
          <source>Static methods (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) lock on the type, whereas instance methods lock on the instance.</source>
          <target state="translated">static 메서드(Visual Basic의 <ph id="ph1">&lt;see langword="Shared" /&gt;</ph>)는 형식을 잠그지만 인스턴스 메서드는 인스턴스를 잠급니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.Synchronized">
          <source>You can also use the C# <bpt id="p1">[</bpt>lock statement<ept id="p1">](~/docs/csharp/language-reference/keywords/lock-statement.md)</ept> or the Visual Basic <bpt id="p2">[</bpt>SyncLock statement<ept id="p2">](~/docs/visual-basic/language-reference/statements/synclock-statement.md)</ept> for this purpose.</source>
          <target state="translated">이를 위해 C# <bpt id="p1">[</bpt>lock 문<ept id="p1">](~/docs/csharp/language-reference/keywords/lock-statement.md)</ept> 또는 Visual Basic <bpt id="p2">[</bpt>SyncLock 문<ept id="p2">](~/docs/visual-basic/language-reference/statements/synclock-statement.md)</ept>을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Reflection.MethodImplAttributes.Unmanaged">
          <source>Specifies that the method is implemented in unmanaged code.</source>
          <target state="translated">메서드가 관리되는 않는 코드로 구현되도록 지정합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>