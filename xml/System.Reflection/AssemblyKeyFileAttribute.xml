<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblyKeyFileAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb72b583641a172336d876622a6ed6096429530cd7e8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b583641a172336d876622a6ed6096429530cd7e8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyKeyFileAttribute">
          <source>Specifies the name of a file containing the key pair used to generate a strong name.</source>
          <target state="translated">강력한 이름을 생성하는 데 사용된 키 쌍을 포함하는 파일의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyKeyFileAttribute">
          <source>When building a strong-named assembly, the author must supply either this attribute or <ph id="ph1">&lt;xref:System.Reflection.AssemblyKeyNameAttribute&gt;</ph>.</source>
          <target state="translated">작성자는이 특성을 제공 해야 강력한 이름의 어셈블리를 작성할 때 또는 <ph id="ph1">&lt;xref:System.Reflection.AssemblyKeyNameAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyKeyFileAttribute">
          <source>If <ph id="ph1">&lt;xref:System.Reflection.AssemblyDelaySignAttribute&gt;</ph> has also been specified, it is likely that this file will only contain the public key.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Reflection.AssemblyDelaySignAttribute&gt;</ph> 도 지정 된 것이이 파일의 공개 키만 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyKeyFileAttribute">
          <source>An example of the syntax is <ph id="ph1">`[assembly:AssemblyKeyFileAttribute("myKey.snk")]`</ph>.</source>
          <target state="translated">구문의 예로 <ph id="ph1">`[assembly:AssemblyKeyFileAttribute("myKey.snk")]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyKeyFileAttribute">
          <source>Since the path and file name persist, ensure that the string you use with <ph id="ph1">`AssemblyKeyFileAttribute`</ph> does not contain sensitive information.</source>
          <target state="translated">있으므로 경로 파일 이름을 유지 되도록 하는를 사용 하는 문자열 <ph id="ph1">`AssemblyKeyFileAttribute`</ph> 중요 한 정보가 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyKeyFileAttribute">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Reflection.AssemblyDelaySignAttribute&gt;</ph> attribute with the <ph id="ph2">&lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Reflection.AssemblyDelaySignAttribute&gt;</ph> 특성이 <ph id="ph2">&lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyKeyFileAttribute">
          <source>To compile this example, you must create a strong-name key file named TestPublicKey.snk using the <bpt id="p1">[</bpt>Sn.exe (Strong Name Tool)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept>:</source>
          <target state="translated">이 예제를 컴파일하려면 TestPublicKey.snk를 사용 하 여 명명 된 강력한 이름 키 파일을 만들어야는 <bpt id="p1">[</bpt>Sn.exe (강력한 이름 도구)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept>:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyKeyFileAttribute">
          <source>Compile the example as a .dll.</source>
          <target state="translated">.Dll으로 예제를 컴파일하십시오.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyKeyFileAttribute">
          <source>If you compile from the command line, use the <ph id="ph1">`/t:library`</ph> option for C# or Visual Basic, or the <ph id="ph2">`/LD`</ph> linker option for Visual C++.</source>
          <target state="translated">사용 하 여 명령줄에서 컴파일하는 경우는 <ph id="ph1">`/t:library`</ph> C# 또는 Visual Basic에 대 한 옵션 또는 <ph id="ph2">`/LD`</ph> Visual c + + 링커 옵션입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
          <source>The name of the file containing the key pair.</source>
          <target state="translated">키 쌍을 포함하는 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="AssemblyKeyFileAttribute" /&gt;</ph> class with the name of the file containing the key pair to generate a strong name for the assembly being attributed.</source>
          <target state="translated">특성 사용 어셈블리의 강력한 이름을 생성하기 위한 키 쌍을 포함하는 파일의 이름으로 <ph id="ph1">&lt;see langword="AssemblyKeyFileAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
          <source>There is no default path for the <ph id="ph1">&lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt;</ph> constructor.</source>
          <target state="translated">에 대 한 기본 경로가 있을 <ph id="ph1">&lt;xref:System.Reflection.AssemblyKeyFileAttribute&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
          <source>The value set by the constructor is interpreted by the linker, or by <ph id="ph1">[!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]</ph>, that invokes the linker.</source>
          <target state="translated">생성자에 의해 설정 된 값을 링커에 또는 해석 됩니다 <ph id="ph1">[!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]</ph>에서 링커 호출입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
          <source>The default setting for the <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept> tool assumes that the key file is in the current directory.</source>
          <target state="translated">에 대 한 기본 설정은 <bpt id="p1">[</bpt>Al.exe (어셈블리 링커)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept> 도구에에서 있다고 가정 키 파일이 현재 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
          <source>In <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, the Visual Basic and Visual C# compilers build and link to subdirectories of the project directory, so if you put the key file in the project directory the relative path might be "..<ph id="ph2">\\</ph>..\keyfile.snk" or "..\keyfile.snk" in Visual Basic, or "..<ph id="ph3">\\</ph><ph id="ph4">\\</ph>..<ph id="ph5">\\</ph>\keyfile.snk" or "..<ph id="ph6">\\</ph>\keyfile.snk" in C#.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, Visual Basic 및 Visual C# 컴파일러를 빌드하고 프로젝트 디렉터리에 키 파일을 저장 하는 경우 상대 경로 수를 프로젝트 디렉터리의 하위 디렉터리에 연결 "... <ph id="ph2">\\</ph>.. \keyfile.snk "또는"... Visual Basic의 \keyfile.snk"또는"... <ph id="ph3">\\</ph><ph id="ph4">\\</ph>.. <ph id="ph5">\\</ph>\keyfile.snk "또는"... <ph id="ph6">\\</ph>\keyfile.snk "C#입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
          <source>For C#, this attribute can be set in the project properties.</source>
          <target state="translated">C#의 경우 프로젝트 속성에서이 특성을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
          <source>Because the path and file name persist, ensure that the string you use with <ph id="ph1">`AssemblyKeyFileAttribute`</ph> does not contain sensitive information.</source>
          <target state="translated">경로 파일 이름을 지속 되기 때문에 확인으로 사용 하는 문자열 <ph id="ph1">`AssemblyKeyFileAttribute`</ph> 중요 한 정보가 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Reflection.AssemblyKeyFileAttribute.KeyFile">
          <source>Gets the name of the file containing the key pair used to generate a strong name for the attributed assembly.</source>
          <target state="translated">특성 사용 어셈블리에 대한 강력한 이름을 생성하는 데 사용되는 키 쌍을 포함하는 파일의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyKeyFileAttribute.KeyFile">
          <source>A string containing the name of the file that contains the key pair.</source>
          <target state="translated">키 쌍을 포함하는 파일의 이름이 들어 있는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyKeyFileAttribute.KeyFile">
          <source>Because the path and file name persist, ensure that the string you use with <ph id="ph1">`AssemblyKeyFileAttribute`</ph> does not contain sensitive information.</source>
          <target state="translated">경로 파일 이름을 지속 되기 때문에 확인으로 사용 하는 문자열 <ph id="ph1">`AssemblyKeyFileAttribute`</ph> 중요 한 정보가 포함 되지 않습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>