<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IReflect.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e4e9ce35ae51db5215ec0931c6460ac8367f47a6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4e9ce35ae51db5215ec0931c6460ac8367f47a6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Interoperates with the <bpt id="p1">[</bpt>IDispatch interface<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>IDispatch 인터페이스<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>와 호환하여 사용됩니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> interface is used to interoperate with the <bpt id="p1">[</bpt>IDispatch interface<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> 인터페이스와 상호 운용 하도록 하는 데 사용 되는 <bpt id="p1">[</bpt>IDispatch 인터페이스<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> defines a subset of the <ph id="ph2">&lt;xref:System.Type&gt;</ph> reflection methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> 하위 집합을 정의 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 리플렉션 메서드.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an <ph id="ph1">`IDispatch`</ph> object.</source>
          <target state="translated">이 인터페이스를 구현 하면 COM에서 개체에 액세스할 때의 동작을 사용자 지정 하는 종류는 <ph id="ph1">`IDispatch`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;</ph> class can be used to marshal an object that implements <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt;</ph> as a COM <ph id="ph4">`IDispatch`</ph> object, and vice versa.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;</ph> 클래스를 구현 하는 개체를 마샬링하는 데 사용 수 <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt;</ph> 를 com <ph id="ph4">`IDispatch`</ph> 개체, 그 반대의 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The name of the field to find.</source>
          <target state="translated">찾을 필드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">검색을 제어하는 데 사용되는 바인딩 특성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object that corresponds to the specified field and binding flag.</source>
          <target state="translated">지정된 필드 및 바인딩 플래그에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object containing the field information for the named object that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>에 지정된 검색 제약 조건을 충족하는 명명된 개체에 대한 필드 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple fields with the same name.</source>
          <target state="translated">개체가 이름이 같은 여러 필드를 구현하는 경우</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">검색을 제어하는 데 사용되는 바인딩 특성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects that correspond to all fields of the current class.</source>
          <target state="translated">현재 클래스의 모든 필드에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> 개체의 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects containing all the field information for this reflection object that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>에 지정된 검색 제약 조건을 충족하는 이 리플렉션 개체에 대한 모든 필드 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The match is based upon a name.</source>
          <target state="translated">일치 하는 이름을 기준으로 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>Each field must have a unique name.</source>
          <target state="translated">각 필드에는 고유한 이름이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType&gt;</ph> flag specifies that non-public methods are included in the search.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType&gt;</ph> 플래그 비공개 메서드 검색에 포함 되도록 지정 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType&gt;</ph> flag specifies that public methods are included in the search.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType&gt;</ph> 플래그는 공용 메서드는 검색에 포함 되도록 지정 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The name of the member to find.</source>
          <target state="translated">찾을 멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">검색을 제어하는 데 사용되는 바인딩 특성입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects corresponding to all public members or to all members that match a specified name.</source>
          <target state="translated">모든 공용 멤버나 지정된 이름과 일치하는 이름을 가진 모든 멤버에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> 개체의 배열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects matching the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="name" /&gt;</ph> 매개 변수와 일치하는 <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.IReflect.GetMember%2A&gt;</ph> method retrieves an array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.IReflect.GetMember%2A&gt;</ph> 메서드의 배열을 검색 <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> 이름과 바인딩 특성을 사용 하 여 모든 공용 멤버에 지정 된 이름과 일치 하는 모든 멤버에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The case of the specified name is observed or ignored, as specified by <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지정 된 이름의 대/소문자를 무시 또는 관찰은에 지정 된 대로 <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">검색을 제어하는 데 사용되는 바인딩 특성입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects that correspond either to all public members or to all members of the current class.</source>
          <target state="translated">모든 public 멤버나 현재 클래스의 모든 멤버에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> 개체의 배열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects containing all the member information for this reflection object.</source>
          <target state="translated">이 리플렉션 개체에 대한 모든 멤버 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>This method retrieves an array of <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</source>
          <target state="translated">이 메서드는 배열을 검색 <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> 또는 모든 public 멤버를 현재 클래스의 모든 멤버에 해당 하는 바인딩 특성을 사용 하 여 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>It returns an array of all of the members defined for this object.</source>
          <target state="translated">이 개체에 대해 정의 된 멤버의 모든의 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that corresponds to a specified method.</source>
          <target state="translated">지정된 메서드에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The name of the member to find.</source>
          <target state="translated">찾을 멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">검색을 제어하는 데 사용되는 바인딩 특성입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that corresponds to a specified method under specified search constraints.</source>
          <target state="translated">지정된 검색 제약 조건 하에서 지정된 메서드에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object containing the method information, with the match being based on the method name and search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>에 지정된 검색 제약 조건과 메서드 이름이 일치하는, 메서드 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple methods with the same name.</source>
          <target state="translated">개체가 이름이 같은 여러 메서드를 구현하는 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The name of the member to find.</source>
          <target state="translated">찾을 멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">검색을 제어하는 데 사용되는 바인딩 특성입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An object that implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>를 구현하는 개체로, 이 메서드와 관련된 속성을 포함합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose among overloaded methods.</source>
          <target state="translated">오버로드된 메서드 중에서 선택하는 데 사용되는 배열입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</source>
          <target state="translated">바인딩을 형식이 수정된 매개 변수 서명과 함께 작동하도록 만드는 데 사용되는 매개 변수 한정자 배열입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object corresponding to a specified method, using a <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> array to choose from among overloaded methods.</source>
          <target state="translated">지정된 메서드에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 개체를 검색하며 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 배열을 사용하여, 오버로드된 메서드 중에서 선택합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The requested method that matches all the specified parameters.</source>
          <target state="translated">지정된 모든 매개 변수를 충족하는 요청된 메서드입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The return value is a match based on the method name, <ph id="ph1">&lt;xref:System.Reflection.BindingFlags&gt;</ph> enum member, the kind of type conversion specified by the <ph id="ph2">`binder`</ph> parameter, the overload, and the <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> that describes the signature of the method.</source>
          <target state="translated">반환 값은 일치 하는 메서드 이름 뒤에 <ph id="ph1">&lt;xref:System.Reflection.BindingFlags&gt;</ph> 열거형 멤버에 의해 지정 된 형식 변환의 종류는 <ph id="ph2">`binder`</ph> 매개 변수, 오버 로드를 및 <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> 메서드의 시그니처를 설명 하는 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The object implements multiple methods with the same name.</source>
          <target state="translated">개체가 이름이 같은 여러 메서드를 구현하는 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">검색을 제어하는 데 사용되는 바인딩 특성입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects with all public methods or all methods of the current class.</source>
          <target state="translated">모든 공용 메서드나 현재 클래스의 모든 메서드가 포함된 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 개체의 배열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects containing all the methods defined for this reflection object that meet the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>에 지정된 검색 제약 조건을 충족하는 이 리플렉션 개체에 대해 정의된 모든 메서드가 포함된 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>The non-public attribute of <ph id="ph1">`bindingAttr`</ph> is indicated only if public methods are returned.</source>
          <target state="translated">public이 아닌 특성 <ph id="ph1">`bindingAttr`</ph> ֲ만 공용 메서드가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>The binding attribute used to control the search.</source>
          <target state="translated">검색을 제어하는 데 사용되는 바인딩 특성입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects corresponding to all public properties or to all properties of the current class.</source>
          <target state="translated">모든 공용 속성이나 현재 클래스의 모든 속성에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> 개체의 배열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects for all the properties defined on the reflection object.</source>
          <target state="translated">리플렉션 개체에 정의된 모든 속성에 대한 <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object corresponding to a specified property.</source>
          <target state="translated">지정된 속성에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The name of the property to find.</source>
          <target state="translated">찾으려는 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">검색을 제어하는 데 사용되는 바인딩 특성입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object corresponding to a specified property under specified search constraints.</source>
          <target state="translated">지정된 검색 제약 조건에 지정된 속성에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object for the located property that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the property was not located.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>에 지정된 검색 제약 조건을 충족하는 찾은 속성에 대한 <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> 개체입니다. 해당 속성을 찾지 못한 경우에는 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple fields with the same name.</source>
          <target state="translated">개체가 이름이 같은 여러 필드를 구현하는 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The name of the member to find.</source>
          <target state="translated">찾을 멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The binding attribute used to control the search.</source>
          <target state="translated">검색을 제어하는 데 사용되는 바인딩 특성입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An object that implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>를 구현하는 개체로, 이 메서드와 관련된 속성을 포함합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The type of the property.</source>
          <target state="translated">속성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose among overloaded methods with the same name.</source>
          <target state="translated">같은 이름을 가진 오버로드된 메서드 중에서 선택하는 데 사용되는 배열입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose the parameter modifiers.</source>
          <target state="translated">매개 변수 한정자를 선택하는 데 사용되는 배열입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object that corresponds to a specified property with specified search constraints.</source>
          <target state="translated">지정된 검색 제약 조건에 따라 지정된 속성에 해당하는 <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object for the located property, if a property with the specified name was located in this reflection object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the property was not located.</source>
          <target state="translated">지정된 이름을 가진 속성을 이 리플렉션 개체에서 찾은 경우 찾은 속성에 대한 <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> 개체입니다. 해당 속성을 찾지 못한 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> object corresponding to a specified property under specified search constraints.</source>
          <target state="translated">이 메서드를 검색 한 <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> 아래 지정 된 속성에 해당 하는 개체 검색 제약 조건을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A type array is used to choose from among overloaded methods.</source>
          <target state="translated">형식 배열의 오버 로드 된 메서드 중에서 선택 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The name of the member to find.</source>
          <target state="translated">찾을 멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> invocation attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 호출 특성 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>invokeAttr<ept id="p1">&lt;/c&gt;</ept> parameter may be a constructor, method, property, or field.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>invokeAttr<ept id="p1">&lt;/c&gt;</ept> 매개 변수는 생성자, 메서드, 속성 또는 필드일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A suitable invocation attribute must be specified.</source>
          <target state="translated">적합한 호출 특성을 지정해야 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Invoke the default member of a class by passing the empty string ("") as the name of the member.</source>
          <target state="translated">빈 문자열("")을 멤버의 이름으로 전달하여 클래스의 기본 멤버를 호출합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> bit flags.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 비트 플래그 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated">이 메서드와 관련된 속성이 포함된 <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>를 구현합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The object on which to invoke the specified member.</source>
          <target state="translated">지정한 멤버를 호출할 개체입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This parameter is ignored for static members.</source>
          <target state="translated">이 매개 변수는 정적 멤버에 대해서는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</source>
          <target state="translated">호출되는 멤버에 대한 매개 변수의 개수, 순서 및 형식이 포함된 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This is an empty array if there are no parameters.</source>
          <target state="translated">매개 변수가 없는 경우 이 배열은 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This array has the same length as the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> parameter, representing the invoked member's argument attributes in the metadata.</source>
          <target state="translated">이 배열의 길이는 메타데이터에 있는 호출된 멤버의 인수 특성을 나타내는 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 매개 변수의 길이와 같습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A parameter can have the following attributes: <ph id="ph1">&lt;see langword="pdIn" /&gt;</ph>, <ph id="ph2">&lt;see langword="pdOut" /&gt;</ph>, <ph id="ph3">&lt;see langword="pdRetval" /&gt;</ph>, <ph id="ph4">&lt;see langword="pdOptional" /&gt;</ph>, and <ph id="ph5">&lt;see langword="pdHasDefault" /&gt;</ph>.</source>
          <target state="translated">매개 변수에는 <ph id="ph1">&lt;see langword="pdIn" /&gt;</ph>, <ph id="ph2">&lt;see langword="pdOut" /&gt;</ph>, <ph id="ph3">&lt;see langword="pdRetval" /&gt;</ph>, <ph id="ph4">&lt;see langword="pdOptional" /&gt;</ph>, <ph id="ph5">&lt;see langword="pdHasDefault" /&gt;</ph>와 같은 특성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</source>
          <target state="translated">이러한 특성은 각각 [In], [Out], [retval], [optional] 및 기본 매개 변수를 나타내며</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>These attributes are used by various interoperability services.</source>
          <target state="translated">다양한 상호 운용성 서비스에서 사용됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> used to govern the coercion of types.</source>
          <target state="translated">형식의 강제 변환을 제어하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>For example, <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> converts a <ph id="ph1">&lt;see langword="String" /&gt;</ph> that represents 1000 to a <ph id="ph2">&lt;see langword="Double" /&gt;</ph> value, since 1000 is represented differently by different cultures.</source>
          <target state="translated">예를 들어, 1000은 문화권마다 다르게 표현되므로 <bpt id="p1">&lt;c&gt;</bpt>문화권<ept id="p1">&lt;/c&gt;</ept>은 1000을 나타내는 <ph id="ph1">&lt;see langword="String" /&gt;</ph>을 <ph id="ph2">&lt;see langword="Double" /&gt;</ph> 값으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>If this parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">이 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 현재 스레드에 대한 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> array of parameters.</source>
          <target state="translated">매개 변수의 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Invokes a specified member.</source>
          <target state="translated">지정된 멤버를 호출합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The specified member.</source>
          <target state="translated">지정된 멤버입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</source>
          <target state="translated">호출해야 할 메서드에 액세스할 수 있어야 하며 이 메서드가 지정된 바인더 및 호출 특성의 제약 조건 하에서 지정된 인수 목록과 가장 구체적으로 일치하는 항목을 제공해야 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</source>
          <target state="translated">메서드 선언의 매개 변수 수가 지정 된 인수 목록에는 인수 개수 및 각 인수의 형식을 매개 변수의 형식 바인더를 통해 변환 될 수 하는 경우는 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The array of parameter modifiers passed to the <ph id="ph1">&lt;xref:System.Reflection.IReflect.InvokeMember%2A&gt;</ph> method must contain a single parameter modifier.</source>
          <target state="translated">에 전달 된 매개 변수 한정자 배열은 <ph id="ph1">&lt;xref:System.Reflection.IReflect.InvokeMember%2A&gt;</ph> 메서드는 단일 매개 변수 한정자를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</source>
          <target state="translated">Com에 노출 하는 경우 참조로 전달 해야 하는 인수를 결정할 때 간주 되는 첫 번째 매개 변수 한정자</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The binder finds all matching methods, in accordance with the type of binding requested (<ph id="ph1">&lt;xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;</ph>, and so on).</source>
          <target state="translated">바인더 요청 된 바인딩 형식에 따라 모든 일치 하는 메서드를 찾습니다 (<ph id="ph1">&lt;xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;</ph>등).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</source>
          <target state="translated">메서드의 집합 이름, 인수 개수를 및 바인더에서 정의 된 검색 한정자 집합으로 필터링 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>After the method is selected, it is invoked, and accessibility is checked at that point.</source>
          <target state="translated">메서드를 선택한 후를 호출 하 고 해당 시점에 내게 필요한 옵션을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</source>
          <target state="translated">어떤 메서드 집합을 메서드와 연결 된 내게 필요한 옵션 특성을 기준으로 검색은 검색을 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source><ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph> selects the method to be invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph> 메서드를 호출할 수를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The default binder selects the most specific match.</source>
          <target state="translated">기본 바인더 가장 구체적으로 일치를 선택합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Access restrictions are ignored for fully trusted code.</source>
          <target state="translated">완전히 신뢰할 수 있는 코드에 대 한 액세스 제한이 없습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</source>
          <target state="translated">즉, private 생성자, 메서드, 필드 및 속성 액세스 하 고 수 코드를 완전히 신뢰할 수 있는 경우 리플렉션을 통해 호출 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The following example obtains the value of the <ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 값을 가져오는 <ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>More than one argument is specified for a field <ph id="ph1">&lt;see langword="set" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="set" /&gt;</ph> 필드에 대해 두 개 이상의 인수가 지정되는 경우</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The field or property cannot be found.</source>
          <target state="translated">필드 또는 속성을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The method cannot be found.</source>
          <target state="translated">메서드를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A private member is invoked without the necessary <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>.</source>
          <target state="translated">필요한 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph> 없이 전용 멤버가 호출되는 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Reflection.IReflect.UnderlyingSystemType">
          <source>Gets the underlying type that represents the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> 개체를 나타내는 내부 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.IReflect.UnderlyingSystemType">
          <source>The underlying type that represents the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> 개체를 나타내는 내부 형식입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>