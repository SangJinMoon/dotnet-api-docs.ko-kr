<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ModuleResolveEventHandler.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bc16b9b4673a68446507847618b1942ca871a8f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc16b9b4673a68446507847618b1942ca871a8f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The assembly that was the source of the event.</source>
          <target state="translated">이벤트 소스인 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The arguments supplied by the object describing the event.</source>
          <target state="translated">이벤트를 설명하는 개체에서 제공한 인수입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>Represents the method that will handle the <ph id="ph1">&lt;see cref="E:System.Reflection.Assembly.ModuleResolve" /&gt;</ph> event of an <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>의 <ph id="ph1">&lt;see cref="E:System.Reflection.Assembly.ModuleResolve" /&gt;</ph> 이벤트를 처리할 메서드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The module that satisfies the request.</source>
          <target state="translated">요청을 만족시키는 모듈입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>If the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means, this event is raised.</source>
          <target state="translated">공용 언어 런타임 클래스 로더가 일반적인 방법으로 어셈블리의 내부 모듈에 대 한 참조를 찾지 못하면이 이벤트는 발생 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The event handler for this delegate must locate and return a module that satisfies the request.</source>
          <target state="translated">이 대리자에 대 한 이벤트 처리기를 찾아에서 요청을 만족 하는 모듈을 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The following example demonstrates the sequence of execution in which an event handler is called.</source>
          <target state="translated">다음 예제에서는 이벤트 처리기가 호출 되는 실행 순서를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>In this example, Server1 is an external module of the MySample class.</source>
          <target state="translated">이 예제에서는 Server1는 MySample 클래스의 외부 모듈입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>To compile and run the example</source>
          <target state="translated">예제는 컴파일 및 실행 하려면</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>Open a Command Prompt window and navigate to the directory that contains MySample.cs.</source>
          <target state="translated">명령 프롬프트 창을 열고 MySample.cs 포함 된 디렉터리로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>Compile Server1 using the following command:</source>
          <target state="translated">Server1 컴파일하려면 다음 명령을 사용 하 여:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>Compile MySample using the following command:</source>
          <target state="translated">다음 명령을 사용 하 여 MySample를 컴파일하십시오.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>Run MySample.exe.</source>
          <target state="translated">MySample.exe를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ModuleResolveEventHandler">
          <source>The module file Server1.netmodule must be in a subdirectory named "subfolder" for this example to work properly.</source>
          <target state="translated">모듈 파일 Server1.netmodule 이라는 "하위 폴더" 예이 제대로 작동 하려면 하위 디렉터리에 있어야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>