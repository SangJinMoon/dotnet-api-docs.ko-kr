<Type Name="ModuleResolveEventHandler" FullName="System.Reflection.ModuleResolveEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b692eee3de17183eb74e73767d9f6ee081235879" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34060636" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate System.Reflection.Module ModuleResolveEventHandler(object sender, ResolveEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ModuleResolveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ModuleResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ModuleResolveEventHandler(sender As Object, e As ResolveEventArgs) As Module " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Module ^ ModuleResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Module</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">이벤트 소스인 어셈블리입니다.</param>
    <param name="e">이벤트를 설명하는 개체에서 제공한 인수입니다.</param>
    <summary>
      <see cref="T:System.Reflection.Assembly" />의 <see cref="E:System.Reflection.Assembly.ModuleResolve" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
    <returns>요청을 만족시키는 모듈입니다.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 공용 언어 런타임 클래스 로더가 일반적인 방법으로 어셈블리의 내부 모듈에 대 한 참조를 찾지 못하면이 이벤트는 발생 합니다. 이 대리자에 대 한 이벤트 처리기를 찾아에서 요청을 만족 하는 모듈을 반환 해야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 이벤트 처리기가 호출 되는 실행 순서를 보여 줍니다. 이 예제에서는 Server1는 MySample 클래스의 외부 모듈입니다.  
  
### <a name="to-compile-and-run-the-example"></a>예제는 컴파일 및 실행 하려면  
  
1.  명령 프롬프트 창을 열고 MySample.cs 포함 된 디렉터리로 이동 합니다.  
  
2.  Server1 컴파일하려면 다음 명령을 사용 하 여:  
  
    ```console  
    csc /out:subfolder\Server1.netmodule /t:module Server1.cs  
    ```  
  
3.  다음 명령을 사용 하 여 MySample를 컴파일하십시오.  
  
    ```console  
    csc /out:MySample.exe /t:exe /addmodule:subfolder\Server1.netmodule MySample.cs  
    ```  
  
4.  MySample.exe를 실행 합니다.  
  
> [!NOTE]
>  모듈 파일 Server1.netmodule 이라는 "하위 폴더" 예이 제대로 작동 하려면 하위 디렉터리에 있어야 합니다.  
  
 [!code-csharp[System.Reflection.ModuleResolveEventHandler#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/mysample.cs#1)]  
[!code-csharp[System.Reflection.ModuleResolveEventHandler#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/server1.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>