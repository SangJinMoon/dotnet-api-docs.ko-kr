<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeFilter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5483a33504401224295255aafdbaa0959893d7606.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">483a33504401224295255aafdbaa0959893d7606</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.TypeFilter">
          <source>The <ph id="ph1">&lt;see langword="Type" /&gt;</ph> object to which the filter is applied.</source>
          <target state="translated">필터가 적용되는 <ph id="ph1">&lt;see langword="Type" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Reflection.TypeFilter">
          <source>An arbitrary object used to filter the list.</source>
          <target state="translated">목록을 필터링하는 데 사용되는 임의 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Reflection.TypeFilter">
          <source>Filters the classes represented in an array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 개체 배열에 표시되는 클래스를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Reflection.TypeFilter">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> in the filtered list; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">필터링된 목록에 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>을 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeFilter">
          <source>The <ph id="ph1">`TypeFilter`</ph> delegate is used to filter a list of classes.</source>
          <target state="translated"><ph id="ph1">`TypeFilter`</ph> 대리자 클래스의 목록을 필터링 하기 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeFilter">
          <source>Specifically, you use it to filter the classes represented in an array of <ph id="ph1">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">필터링의 배열에서 나타내는 클래스를 통해 특히 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeFilter">
          <source>The <ph id="ph1">&lt;xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType&gt;</ph> method uses this delegate to filter the list of interfaces that it returns.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType&gt;</ph> 메서드에서이 대리자를 사용 하 여 반환 하는 인터페이스의 목록을 필터링 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeFilter">
          <source>Every derived class of <ph id="ph1">&lt;xref:System.Delegate&gt;</ph> and <ph id="ph2">&lt;xref:System.MulticastDelegate&gt;</ph> has a constructor and a <ph id="ph3">`DynamicInvoke`</ph> method.</source>
          <target state="translated">각 파생된 클래스 <ph id="ph1">&lt;xref:System.Delegate&gt;</ph> 및 <ph id="ph2">&lt;xref:System.MulticastDelegate&gt;</ph> 생성자와 <ph id="ph3">`DynamicInvoke`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeFilter">
          <source>See the Visual C++ code example given in the description for <ph id="ph1">`Delegate`</ph>.</source>
          <target state="translated">에 대 한 설명에 지정 된 Visual c + + 코드 예제를 보려면 <ph id="ph1">`Delegate`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeFilter">
          <source>This example shows how to define a method matching the <ph id="ph1">&lt;xref:System.Reflection.TypeFilter&gt;</ph> delegate prototype allowing you to use reflection to filter or return a subset of matching entries.</source>
          <target state="translated">일치 하는 메서드를 정의 하는 방법을 보여 주는이 예제는 <ph id="ph1">&lt;xref:System.Reflection.TypeFilter&gt;</ph> 대리자 프로토타입 리플렉션을 사용 하 여 일치 하는 항목의 하위 집합을 반환 하거나 필터링 할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>