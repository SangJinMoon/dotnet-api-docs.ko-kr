<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AmbiguousMatchException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5911cf30906a42c5385f0853056fca9293ff264b8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">911cf30906a42c5385f0853056fca9293ff264b8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AmbiguousMatchException">
          <source>The exception that is thrown when binding to a member results in more than one member matching the binding criteria.</source>
          <target state="translated">멤버에 대해 바인딩할 때 바인딩 기준에 일치하는 멤버가 두 개 이상인 경우 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Reflection.AmbiguousMatchException">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AmbiguousMatchException">
          <source><ph id="ph1">`AmbiguousMatchException`</ph> uses the HRESULT COR_E_AMBIGUOUSMATCH which has the value 0x8000211D.</source>
          <target state="translated"><ph id="ph1">`AmbiguousMatchException`</ph> 0x8000211D 값이 있는 HRESULT COR_E_AMBIGUOUSMATCH를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AmbiguousMatchException">
          <source>An <ph id="ph1">`AmbiguousMatchException`</ph> is thrown when a member is invoked late-bound and multiple overloads satisfy the binding criteria, or when more than one member matches the binding criteria passed to a reflection method that can return only a single result (for example, <ph id="ph2">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">`AmbiguousMatchException`</ph> 멤버가 런타임에 바인딩된 호출 되 고 여러 개의 오버 로드 바인딩 기준을 충족 하거나 둘 이상의 구성원만 단일 결과 반환할 수 있는 리플렉션 메서드에 전달 된 바인딩 기준과 일치 하는 경우 throw 됩니다 (예를 들어 <ph id="ph2">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph>또는 <ph id="ph3">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Reflection.AmbiguousMatchException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class with an empty message string and the root cause exception set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">빈 메시지 문자열과 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 근본 원인 예외를 사용하여 <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source><ph id="ph1">`AmbiguousMatchException`</ph> inherits from <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`AmbiguousMatchException`</ph>는 <ph id="ph2">&lt;xref:System.Exception&gt;</ph>에서 상속됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>This constructor sets the properties of the <ph id="ph1">`Exception`</ph> object as shown in the following table.</source>
          <target state="translated">속성을 설정 하는이 생성자는 <ph id="ph1">`Exception`</ph> 다음 표에 나와 있는 것 처럼 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>The empty string ("").</source>
          <target state="translated">빈 문자열 ("").</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>A string indicating the reason this exception was thrown.</source>
          <target state="translated">이 예외가 throw된 원인을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class with its message string set to the given message and the root cause exception set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">메시지 문자열을 제공된 메시지로 설정하고 근본 원인 예외를 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정하여 <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source><ph id="ph1">`AmbiguousMatchException`</ph> inherits from <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`AmbiguousMatchException`</ph>는 <ph id="ph2">&lt;xref:System.Exception&gt;</ph>에서 상속됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>This constructor sets the properties of the <ph id="ph1">`Exception`</ph> object as shown in the following table.</source>
          <target state="translated">속성을 설정 하는이 생성자는 <ph id="ph1">`Exception`</ph> 다음 표에 나와 있는 것 처럼 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>The <ph id="ph1">`message`</ph> string.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 문자열입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아니면 현재 예외는 내부 예외를 처리하는 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 블록에서 발생합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외의 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, <ph id="ph2">`null`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">내부 예외 참조</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The following example shows two classes, each named <ph id="ph1">`Mymethod`</ph>.</source>
          <target state="translated">다음 예제에서는 두 개의 클래스가, 각각의 명명 <ph id="ph1">`Mymethod`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>One class takes an integer and the other takes a string.</source>
          <target state="translated">클래스가 두 개 정수를 사용 하 고 다른 오버 로드는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If an integer is passed to <ph id="ph1">`Mymethod`</ph>, the first class is used.</source>
          <target state="translated">정수에 전달 되 면 <ph id="ph1">`Mymethod`</ph>, 첫 번째 클래스 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If a string is passed, the second class is used.</source>
          <target state="translated">전달 된 문자열이 두 번째 클래스 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If it cannot be determined which <ph id="ph1">`Mymethod`</ph> to use, <ph id="ph2">`AmbiguousMatchException`</ph> is thrown.</source>
          <target state="translated">수 없는 경우를 확인할 <ph id="ph1">`Mymethod`</ph> 를 사용 하려면 <ph id="ph2">`AmbiguousMatchException`</ph> throw 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>