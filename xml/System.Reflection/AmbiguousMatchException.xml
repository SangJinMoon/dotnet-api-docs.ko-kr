<Type Name="AmbiguousMatchException" FullName="System.Reflection.AmbiguousMatchException">
  <TypeSignature Language="C#" Value="public sealed class AmbiguousMatchException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AmbiguousMatchException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AmbiguousMatchException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbiguousMatchException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbiguousMatchException sealed : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4a85f-101">멤버에 대해 바인딩할 때 바인딩 기준에 일치하는 멤버가 두 개 이상인 경우 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-101">The exception that is thrown when binding to a member results in more than one member matching the binding criteria.</span></span> <span data-ttu-id="4a85f-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a85f-103">`AmbiguousMatchException` 0x8000211D 값이 있는 HRESULT COR_E_AMBIGUOUSMATCH를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-103">`AmbiguousMatchException` uses the HRESULT COR_E_AMBIGUOUSMATCH which has the value 0x8000211D.</span></span>  
  
 <span data-ttu-id="4a85f-104">`AmbiguousMatchException` 멤버가 런타임에 바인딩된 호출 되 고 여러 개의 오버 로드 바인딩 기준을 충족 하거나 둘 이상의 구성원만 단일 결과 반환할 수 있는 리플렉션 메서드에 전달 된 바인딩 기준과 일치 하는 경우 throw 됩니다 (예를 들어 <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>또는 <xref:System.Type.GetProperty%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="4a85f-104">An `AmbiguousMatchException` is thrown when a member is invoked late-bound and multiple overloads satisfy the binding criteria, or when more than one member matches the binding criteria passed to a reflection method that can return only a single result (for example, <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> or <xref:System.Type.GetProperty%2A?displayProperty=nameWithType>).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.SystemException" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a85f-105"><see cref="T:System.Reflection.AmbiguousMatchException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-105">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a85f-106">빈 메시지 문자열과 <see langword="null" />로 설정된 근본 원인 예외를 사용하여 <see cref="T:System.Reflection.AmbiguousMatchException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-106">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with an empty message string and the root cause exception set to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a85f-107">`AmbiguousMatchException`는 <xref:System.Exception>에서 상속됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-107">`AmbiguousMatchException` inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="4a85f-108">속성을 설정 하는이 생성자는 `Exception` 다음 표에 나와 있는 것 처럼 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-108">This constructor sets the properties of the `Exception` object as shown in the following table.</span></span>  
  
|<span data-ttu-id="4a85f-109">속성</span><span class="sxs-lookup"><span data-stu-id="4a85f-109">Property</span></span>|<span data-ttu-id="4a85f-110">값</span><span class="sxs-lookup"><span data-stu-id="4a85f-110">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="4a85f-111">빈 문자열 ("").</span><span class="sxs-lookup"><span data-stu-id="4a85f-111">The empty string ("").</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.SystemException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4a85f-112">이 예외가 throw된 원인을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-112">A string indicating the reason this exception was thrown.</span></span></param>
        <summary><span data-ttu-id="4a85f-113">메시지 문자열을 제공된 메시지로 설정하고 근본 원인 예외를 <see langword="null" />로 설정하여 <see cref="T:System.Reflection.AmbiguousMatchException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-113">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with its message string set to the given message and the root cause exception set to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a85f-114">`AmbiguousMatchException`는 <xref:System.Exception>에서 상속됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-114">`AmbiguousMatchException` inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="4a85f-115">속성을 설정 하는이 생성자는 `Exception` 다음 표에 나와 있는 것 처럼 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-115">This constructor sets the properties of the `Exception` object as shown in the following table.</span></span>  
  
|<span data-ttu-id="4a85f-116">속성</span><span class="sxs-lookup"><span data-stu-id="4a85f-116">Property</span></span>|<span data-ttu-id="4a85f-117">값</span><span class="sxs-lookup"><span data-stu-id="4a85f-117">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="4a85f-118">`message` 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-118">The `message` string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException(System::String ^ message, Exception ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4a85f-119">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-119">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="4a85f-120">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-120">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="4a85f-121"><c>inner</c> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-121">If the <c>inner</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="4a85f-122">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Reflection.AmbiguousMatchException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-122">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a85f-123">이전 예외의 직접적인 결과로 throw되는 예외의 <xref:System.Exception.InnerException%2A> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-123">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="4a85f-124"><xref:System.Exception.InnerException%2A> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, `null` 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <xref:System.Exception.InnerException%2A>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-124">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="4a85f-125">다음 표에서는 <xref:System.Reflection.AmbiguousMatchException> 인스턴스의 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-125">The following table shows the initial property values for an instance of <xref:System.Reflection.AmbiguousMatchException>.</span></span>  
  
|<span data-ttu-id="4a85f-126">속성</span><span class="sxs-lookup"><span data-stu-id="4a85f-126">Property</span></span>|<span data-ttu-id="4a85f-127">값</span><span class="sxs-lookup"><span data-stu-id="4a85f-127">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="4a85f-128">내부 예외 참조</span><span class="sxs-lookup"><span data-stu-id="4a85f-128">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="4a85f-129">오류 메시지 문자열</span><span class="sxs-lookup"><span data-stu-id="4a85f-129">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4a85f-130">다음 예제에서는 두 개의 클래스가, 각각의 명명 `Mymethod`합니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-130">The following example shows two classes, each named `Mymethod`.</span></span> <span data-ttu-id="4a85f-131">클래스가 두 개 정수를 사용 하 고 다른 오버 로드는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-131">One class takes an integer and the other takes a string.</span></span> <span data-ttu-id="4a85f-132">정수에 전달 되 면 `Mymethod`, 첫 번째 클래스 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-132">If an integer is passed to `Mymethod`, the first class is used.</span></span> <span data-ttu-id="4a85f-133">전달 된 문자열이 두 번째 클래스 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-133">If a string is passed, the second class is used.</span></span> <span data-ttu-id="4a85f-134">수 없는 경우를 확인할 `Mymethod` 를 사용 하려면 `AmbiguousMatchException` throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4a85f-134">If it cannot be determined which `Mymethod` to use, `AmbiguousMatchException` is thrown.</span></span>  
  
 [!code-cpp[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/CS/source.cs#1)]
 [!code-vb[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>