<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StrongNameKeyPair.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c6c05642c4a8c744a488de1c7aac0976b561d975.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6c05642c4a8c744a488de1c7aac0976b561d975</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.StrongNameKeyPair">
          <source>Encapsulates access to a public or private key pair used to sign strong name assemblies.</source>
          <target state="translated">강력한 이름 어셈블리를 서명하는 데 사용되는 공용 또는 전용 키 쌍에 대한 액세스를 캡슐화합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.StrongNameKeyPair">
          <source>The following code example shows how to open a Company.keys file (produced by running the <bpt id="p1">[</bpt>Sn.exe (Strong Name Tool)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> with the <bpt id="p2">**</bpt>–k<ept id="p2">**</ept> switch), read the public key from the file, and display the key in the console window.</source>
          <target state="translated">다음 코드 예제에서는 Company.keys 파일을 여는 방법을 보여 줍니다 (실행 하 여 만든는 <bpt id="p1">[</bpt>Sn.exe (강력한 이름 도구)<ept id="p1">](~/docs/framework/tools/sn-exe-strong-name-tool.md)</ept> 와 <bpt id="p2">**</bpt>– k<ept id="p2">**</ept> 전환), 공개 키 파일에서 읽고 표시에 있는 키의 콘솔 창입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Reflection.StrongNameKeyPair">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="StrongNameKeyPair" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="StrongNameKeyPair" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Byte[])">
          <source>An array of type <ph id="ph1">&lt;see langword="byte" /&gt;</ph> containing the key pair.</source>
          <target state="translated">키 쌍을 포함하는 <ph id="ph1">&lt;see langword="byte" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> class, building the key pair from a <ph id="ph2">&lt;see langword="byte" /&gt;</ph> array.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="byte" /&gt;</ph> 배열에서 키 쌍을 작성하여 <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="keyPairArray" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyPairArray" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Byte[])">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Byte[])">
          <source>for access to unmanaged code.</source>
          <target state="translated">비관리 코드에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.IO.FileStream)">
          <source>A <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph> containing the key pair.</source>
          <target state="translated">키 쌍을 포함하는 <ph id="ph1">&lt;see langword="FileStream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.IO.FileStream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> class, building the key pair from a <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="FileStream" /&gt;</ph>에서 키 쌍을 작성하여 <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.IO.FileStream)">
          <source><ph id="ph1">&lt;paramref name="keyPairFile" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyPairFile" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.IO.FileStream)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.IO.FileStream)">
          <source>for access to unmanaged code.</source>
          <target state="translated">비관리 코드에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.IO.FileStream)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.String)">
          <source>A string containing the key pair.</source>
          <target state="translated">키 쌍을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> class, building the key pair from a <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="String" /&gt;</ph>에서 키 쌍을 작성하여 <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.String)">
          <source>The key pair is in a named key container.</source>
          <target state="translated">키 쌍은 명명 된 키 컨테이너에 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="keyPairContainer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyPairContainer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.String)">
          <source>for access to unmanaged code.</source>
          <target state="translated">비관리 코드에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains contextual information about the source or destination.</source>
          <target state="translated">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> class, building the key pair from serialized data.</source>
          <target state="translated">serialize된 데이터에서 키 쌍을 작성하여 <ph id="ph1">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">이 생성자는 deserialization을 수행하는 동안 호출되어 스트림을 통해 전송된 예외 개체를 다시 구성합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>XML 및 SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for access to unmanaged code.</source>
          <target state="translated">비관리 코드에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Reflection.StrongNameKeyPair.PublicKey">
          <source>Gets the public part of the public key or public key token of the key pair.</source>
          <target state="translated">공용 키의 공용 부분 또는 키 쌍의 공용 키 토큰을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.StrongNameKeyPair.PublicKey">
          <source>An array of type <ph id="ph1">&lt;see langword="byte" /&gt;</ph> containing the public key or public key token of the key pair.</source>
          <target state="translated">공용 키 또는 키 쌍의 공용 키 토큰을 포함하는 <ph id="ph1">&lt;see langword="byte" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The object that initiated the callback.</source>
          <target state="translated">콜백을 시작한 개체입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Runs when the entire object graph has been deserialized.</source>
          <target state="translated">전체 개체 그래프가 deserialize될 때 실행됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to be populated with serialization information.</source>
          <target state="translated">serialization 정보로 채울 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination context of the serialization.</source>
          <target state="translated">serialization의 대상 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with all the data required to reinstantiate the current <ph id="ph2">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체를 다시 인스턴스화하는 데 필요한 모든 데이터로 <ph id="ph2">&lt;see cref="T:System.Reflection.StrongNameKeyPair" /&gt;</ph> 개체를 설정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.StrongNameKeyPair.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.StrongNameKeyPair.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>