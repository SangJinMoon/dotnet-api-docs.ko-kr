<Type Name="ConstructorInfo" FullName="System.Reflection.ConstructorInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fc796099351d9fc15866780151e17da4021fe39" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36639536" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConstructorInfo : System.Reflection.MethodBase, System.Runtime.InteropServices._ConstructorInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ConstructorInfo extends System.Reflection.MethodBase implements class System.Runtime.InteropServices._ConstructorInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ConstructorInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConstructorInfo&#xA;Inherits MethodBase&#xA;Implements _ConstructorInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstructorInfo abstract : System::Reflection::MethodBase, System::Runtime::InteropServices::_ConstructorInfo" />
  <TypeSignature Language="F#" Value="type ConstructorInfo = class&#xA;    inherit MethodBase&#xA;    interface _ConstructorInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.MethodBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ConstructorInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ConstructorInfo))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="60b60-101">Discovers the attributes of a class constructor and provides access to constructor metadata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60b60-101">Discovers the attributes of a class constructor and provides access to constructor metadata.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-102">`ConstructorInfo` 생성자 호출은 생성자의 특성을 검색 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-102">`ConstructorInfo` is used to discover the attributes of a constructor as well as to invoke a constructor.</span></span> <span data-ttu-id="60b60-103">개체를 호출 하 여 만들어집니다. <xref:System.Reflection.ConstructorInfo.Invoke%2A> 에 `ConstructorInfo` 에서 반환 된는 <xref:System.Type.GetConstructors%2A> 또는 <xref:System.Type.GetConstructor%2A> 의 메서드는 <xref:System.Type> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-103">Objects are created by calling <xref:System.Reflection.ConstructorInfo.Invoke%2A> on a `ConstructorInfo` returned by either the <xref:System.Type.GetConstructors%2A> or <xref:System.Type.GetConstructor%2A> method of a <xref:System.Type> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60b60-104"><xref:System.Reflection.ConstructorInfo> 상속 <xref:System.Reflection.MethodBase> 여러 멤버와 같은 <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, 제네릭 메서드 검사를 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-104"><xref:System.Reflection.ConstructorInfo> inherits from <xref:System.Reflection.MethodBase> several members, such as <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, that can be used to examine generic methods.</span></span> <span data-ttu-id="60b60-105">.NET framework에서 버전 2.0에서는 생성자 제네릭일 수 없으므로 이러한 멤버를 반환 하므로 `false` 또는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-105">In the .NET Framework version 2.0 constructors cannot be generic, so these members return `false` or `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60b60-106">다음 예제에서는 `ConstructorInfo` 와 <xref:System.Type.GetConstructor%2A> 및 <xref:System.Reflection.BindingFlags> 지정된 된 검색 조건과 일치 하는 생성자를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-106">The following example uses `ConstructorInfo` with <xref:System.Type.GetConstructor%2A> and <xref:System.Reflection.BindingFlags> to find the constructors that match the specified search criteria.</span></span>  
  
 [!code-cpp[type_getconstructor3#1](~/samples/snippets/cpp/VS_Snippets_CLR/Type_GetConstructor3/CPP/type_getconstructor3.cpp#1)]
 [!code-csharp[type_getconstructor3#1](~/samples/snippets/csharp/VS_Snippets_CLR/Type_GetConstructor3/CS/type_getconstructor3.cs#1)]
 [!code-vb[type_getconstructor3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Type_GetConstructor3/VB/type_getconstructor3.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="60b60-107">상속자에 대 한 완전 신뢰 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60b60-107">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="60b60-108">부분적으로 신뢰할 수 있는 코드에서이 클래스는 상속 될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60b60-108">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="60b60-109">이 형식은 스레드로부터 안전합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60b60-109">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="60b60-110">
        <para>상속 하는 경우 <see langword="ConstructorInfo" />, 멤버 오버 로드를 재정의 해야 합니다: <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />합니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="60b60-110">
          <para>When you inherit from <see langword="ConstructorInfo" />, you must override the following member overload: <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConstructorInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConstructorInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60b60-111">Initializes a new instance of the <see cref="T:System.Reflection.ConstructorInfo" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-111">Initializes a new instance of the <see cref="T:System.Reflection.ConstructorInfo" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="60b60-112">호출 될 때 런타임에 바인딩된 메커니즘을 통해 같은 <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-112">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="60b60-113">연관 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-113">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ConstructorName">
      <MemberSignature Language="C#" Value="public static readonly string ConstructorName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ConstructorName" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ConstructorInfo.ConstructorName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConstructorName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ConstructorName;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConstructorName : string" Usage="System.Reflection.ConstructorInfo.ConstructorName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60b60-114">Represents the name of the class constructor method as it is stored in metadata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-114">Represents the name of the class constructor method as it is stored in metadata.</span>
          </span>
          <span data-ttu-id="60b60-115">This name is always ".ctor".</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-115">This name is always ".ctor".</span>
          </span>
          <span data-ttu-id="60b60-116">This field is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-116">This field is read-only.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="constructorInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="60b60-117">An object to compare with this instance, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-117">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-118">Returns a value that indicates whether this instance is equal to a specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-118">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-119">
            <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-119">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="constructorInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60b60-120">Returns the hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-120">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-121">A 32-bit signed integer hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-121">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="60b60-122">Invokes the constructor reflected by this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-122">Invokes the constructor reflected by this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="override this.Invoke : obj[] -&gt; obj" Usage="constructorInfo.Invoke parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="60b60-123">An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-123">An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor.</span>
          </span>
          <span data-ttu-id="60b60-124">If this constructor takes no parameters, then use either an array with zero elements or <see langword="null" />, as in Object[] parameters = new Object[0].</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-124">If this constructor takes no parameters, then use either an array with zero elements or <see langword="null" />, as in Object[] parameters = new Object[0].</span>
          </span>
          <span data-ttu-id="60b60-125">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-125">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="60b60-126">For reference-type elements, this value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-126">For reference-type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="60b60-127">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-127">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-128">Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-128">Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-129">An instance of the class associated with the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-129">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-130">개수, 형식 및에서 요소의 순서는 `parameters` 배열 개수, 형식 및이 인스턴스에 의해 리플렉션된 생성자의 매개 변수 순서 동일 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-130">The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span> <span data-ttu-id="60b60-131">생성자를 호출 하기 전에 `Invoke` 호출자에 게 액세스 권한이 있는지와 매개 변수가 유효한 지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-131">Before calling the constructor, `Invoke` ensures that the caller has access permission and verifies that the parameters are valid.</span></span>  
  
 <span data-ttu-id="60b60-132">완전히 신뢰할 수 있는 코드에 대 한 액세스 제한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-132">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="60b60-133">즉, private 생성자, 메서드, 필드 및 속성에 액세스할 수 있습니다 및 코드를 완전히 신뢰할 수 있는 경우 리플렉션을 사용 하 여 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-133">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60b60-134">인스턴스 생성자가 없는 값 형식의 인스턴스를 만들려면 사용은 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="60b60-134">To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.</span></span>  
  
 <span data-ttu-id="60b60-135">이 메서드는 다음과 같은 오버 로드 된 버전의 경우 기본값을 사용 하는 편리한 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-135">This method is a convenience method for the following overloaded version, using default values.</span></span> <span data-ttu-id="60b60-136">이 메서드는 재정의할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-136">This method cannot be overridden.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60b60-137">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드를 사용 하 여 호출자에 게 부여 된 경우 public이 아닌 멤버에 액세스할 수 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 지정 및 public이 아닌 멤버의 권한 부여 집합은 호출자에 게 제한 하는 경우 집합 또는 하위 집합을 부여 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="60b60-138">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="60b60-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="60b60-139">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="60b60-140">The class is abstract.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-140">The class is abstract.</span>
          </span>
          <span data-ttu-id="60b60-141">-or-  The constructor is a class initializer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-141">-or-  The constructor is a class initializer.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="60b60-142">
            <block subset="none" type="note">
              <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
            </block>  The constructor is private or protected, and the caller lacks <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-142">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>  The constructor is private or protected, and the caller lacks <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="60b60-143">The <paramref name="parameters" /> array does not contain values that match the types accepted by this constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-143">The <paramref name="parameters" /> array does not contain values that match the types accepted by this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="60b60-144">The invoked constructor throws an exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-144">The invoked constructor throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">
          <span data-ttu-id="60b60-145">An incorrect number of parameters was passed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-145">An incorrect number of parameters was passed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="60b60-146">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-146">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="60b60-147">The caller does not have the necessary code access permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-147">The caller does not have the necessary code access permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="60b60-148">호출 될 때 런타임에 바인딩된 메커니즘을 통해 같은 <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-148">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="60b60-149">연관 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-149">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public abstract object Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Invoke(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.Invoke : System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="constructorInfo.Invoke (invokeAttr, binder, parameters, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr">
          <span data-ttu-id="60b60-150">One of the <see langword="BindingFlags" /> values that specifies the type of binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-150">One of the <see langword="BindingFlags" /> values that specifies the type of binding.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="60b60-151">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-151">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          </span>
          <span data-ttu-id="60b60-152">If <c>binder</c> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-152">If <c>binder</c> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="60b60-153">An array of type <see langword="Object" /> used to match the number, order and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-153">An array of type <see langword="Object" /> used to match the number, order and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          </span>
          <span data-ttu-id="60b60-154">If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-154">If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</span>
          </span>
          <span data-ttu-id="60b60-155">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-155">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="60b60-156">For reference-type elements, this value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-156">For reference-type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="60b60-157">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-157">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="60b60-158">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-158">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="60b60-159">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-159">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-160">When implemented in a derived class, invokes the constructor reflected by this <see langword="ConstructorInfo" /> with the specified arguments, under the constraints of the specified <see langword="Binder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-160">When implemented in a derived class, invokes the constructor reflected by this <see langword="ConstructorInfo" /> with the specified arguments, under the constraints of the specified <see langword="Binder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-161">An instance of the class associated with the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-161">An instance of the class associated with the constructor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-162">개수, 형식 및에서 요소의 순서는 `parameters` 배열 개수, 형식 및이 인스턴스에 의해 리플렉션된 생성자의 매개 변수 순서 동일 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-162">The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span>  
  
 <span data-ttu-id="60b60-163">생성자를 호출 하기 전에 `Invoke` 있는지 호출자에 게 액세스 권한이 있는지와 올바른 번호, 순서 및 형식이 매개 변수 있는지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-163">Before calling the constructor, `Invoke` ensures that the caller has access permission and that the parameters are of the correct number, order and type.</span></span>  
  
 <span data-ttu-id="60b60-164">완전히 신뢰할 수 있는 코드에 대 한 액세스 제한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-164">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="60b60-165">즉, private 생성자, 메서드, 필드 및 속성에 액세스할 수 있습니다 및 코드를 완전히 신뢰할 수 있는 경우 리플렉션을 사용 하 여 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-165">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60b60-166">인스턴스 생성자가 없는 값 형식의 인스턴스를 만들려면 사용은 <xref:System.Activator.CreateInstance%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="60b60-166">To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60b60-167">부터는 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)],이 메서드를 사용 하 여 호출자에 게 부여 된 경우 public이 아닌 멤버에 액세스할 수 수 <xref:System.Security.Permissions.ReflectionPermission> 와 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 플래그 지정 및 public이 아닌 멤버의 권한 부여 집합은 호출자에 게 제한 하는 경우 집합 또는 하위 집합을 부여 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-167">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.</span></span> <span data-ttu-id="60b60-168">(참조 [리플렉션의 보안 고려 사항](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="60b60-168">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="60b60-169">이 기능을 사용하려면 응용 프로그램이 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 이상을 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-169">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="60b60-170">The <paramref name="parameters" /> array does not contain values that match the types accepted by this constructor, under the constraints of the <paramref name="binder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-170">The <paramref name="parameters" /> array does not contain values that match the types accepted by this constructor, under the constraints of the <paramref name="binder" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="60b60-171">The invoked constructor throws an exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-171">The invoked constructor throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetParameterCountException">
          <span data-ttu-id="60b60-172">An incorrect number of parameters was passed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-172">An incorrect number of parameters was passed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="60b60-173">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-173">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="60b60-174">The caller does not have the necessary code access permissions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-174">The caller does not have the necessary code access permissions.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="60b60-175">The class is abstract.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-175">The class is abstract.</span>
          </span>
          <span data-ttu-id="60b60-176">-or-  The constructor is a class initializer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-176">-or-  The constructor is a class initializer.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="60b60-177">The constructor is private or protected, and the caller lacks <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-177">The constructor is private or protected, and the caller lacks <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="60b60-178">호출 될 때 런타임에 바인딩된 메커니즘을 통해 같은 <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-178">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="60b60-179">연관 된 열거형: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-179">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ConstructorInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Reflection.ConstructorInfo.MemberType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._ConstructorInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60b60-180">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-180">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a constructor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60b60-181">이 멤버가 생성자임을 나타내는 <see cref="T:System.Reflection.MemberTypes" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-181">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a constructor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-182">이 속성을 재정의 <xref:System.Reflection.MemberInfo.MemberType%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-182">This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>.</span></span> <span data-ttu-id="60b60-183">따라서 집합을 조사할 때 <xref:System.Reflection.MemberInfo> 개체-예를 들어 반환 하는 배열 <xref:System.Type.GetMembers%2A> -는 <xref:System.Reflection.MemberInfo.MemberType%2A> 속성에서 반환 <xref:System.Reflection.MemberTypes.Constructor> 지정된 된 멤버는 생성자를은 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-183">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects — for example, the array returned by <xref:System.Type.GetMembers%2A> — the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Constructor> only when a given member is a constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60b60-184">다음 예제에서는 <xref:System.Reflection.ConstructorInfo.MemberType%2A> 속성을 식별 하는 <xref:System.Reflection.MemberInfo> 개체를 생성자로 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-184">The following example uses the <xref:System.Reflection.ConstructorInfo.MemberType%2A> property to identify a <xref:System.Reflection.MemberInfo> object as a constructor.</span></span>  
  
 [!code-cpp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic MemberInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MemberTypes" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.ConstructorInfo left, class System.Reflection.ConstructorInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ConstructorInfo, right As ConstructorInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::ConstructorInfo ^ left, System::Reflection::ConstructorInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.ConstructorInfo * System.Reflection.ConstructorInfo -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="right" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="60b60-185">The first <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-185">The first <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="60b60-186">The second <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-186">The second <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-187">Indicates whether two <see cref="T:System.Reflection.ConstructorInfo" /> objects are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-187">Indicates whether two <see cref="T:System.Reflection.ConstructorInfo" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-188">
            <see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-188">
              <see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.ConstructorInfo left, class System.Reflection.ConstructorInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ConstructorInfo, right As ConstructorInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::ConstructorInfo ^ left, System::Reflection::ConstructorInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.ConstructorInfo * System.Reflection.ConstructorInfo -&gt; bool" Usage="System.Reflection.ConstructorInfo.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="right" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="60b60-189">The first <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-189">The first <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="60b60-190">The second <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-190">The second <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-191">Indicates whether two <see cref="T:System.Reflection.ConstructorInfo" /> objects are not equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-191">Indicates whether two <see cref="T:System.Reflection.ConstructorInfo" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-192">
            <see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-192">
              <see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ConstructorInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ConstructorInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="60b60-193">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-193">Reserved for future use.</span>
          </span>
          <span data-ttu-id="60b60-194">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-194">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="60b60-195">Passed-in array of names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-195">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="60b60-196">Count of the names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-196">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="60b60-197">The locale context in which to interpret the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-197">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="60b60-198">Caller-allocated array which receives the IDs corresponding to the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-198">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-199">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-199">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-200">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-200">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="60b60-201">에 대 한 자세한 내용은 `IDispatch::GetIDsOfNames`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-201">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="60b60-202">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-202">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetType">
      <MemberSignature Language="C#" Value="Type _ConstructorInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._ConstructorInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _ConstructorInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._ConstructorInfo.GetType() = System::Runtime::InteropServices::_ConstructorInfo::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60b60-203">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.ConstructorInfo" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-203">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.ConstructorInfo" /> type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-204">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.ConstructorInfo" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-204">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.ConstructorInfo" /> type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ConstructorInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ConstructorInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="60b60-205">The type information to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-205">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="60b60-206">The locale identifier for the type information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-206">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="60b60-207">Receives a pointer to the requested type information object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-207">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-208">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-208">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-209">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-209">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="60b60-210">에 대 한 자세한 내용은 `IDispatch::GetTypeInfo`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-210">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="60b60-211">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-211">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ConstructorInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ConstructorInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="60b60-212">Points to a location that receives the number of type information interfaces provided by the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-212">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-213">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-213">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-214">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-214">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="60b60-215">에 대 한 자세한 내용은 `IDispatch::GetTypeInfoCount`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-215">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="60b60-216">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-216">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ConstructorInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ConstructorInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="60b60-217">Identifies the member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-217">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="60b60-218">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-218">Reserved for future use.</span>
          </span>
          <span data-ttu-id="60b60-219">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-219">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="60b60-220">The locale context in which to interpret arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-220">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="60b60-221">Flags describing the context of the call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-221">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="60b60-222">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-222">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="60b60-223">Pointer to the location where the result is to be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-223">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="60b60-224">Pointer to a structure that contains exception information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-224">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="60b60-225">The index of the first argument that has an error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-225">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-226">Provides access to properties and methods exposed by an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-226">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-227">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-227">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="60b60-228">에 대 한 자세한 내용은 `IDispatch::Invoke`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-228">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="60b60-229">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-229">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_2">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_2 (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_2(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_2;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="60b60-230">The instance that created this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-230">The instance that created this method.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="60b60-231">One of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies the type of binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-231">One of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies the type of binding.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="60b60-232">A <see cref="T:System.Reflection.Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-232">A <see cref="T:System.Reflection.Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          </span>
          <span data-ttu-id="60b60-233">If <c>binder</c> is <see langword="null" />, then <see cref="P:System.Type.DefaultBinder" /> is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-233">If <c>binder</c> is <see langword="null" />, then <see cref="P:System.Type.DefaultBinder" /> is used.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="60b60-234">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-234">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          </span>
          <span data-ttu-id="60b60-235">If this constructor does not require parameters, pass an array with zero elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-235">If this constructor does not require parameters, pass an array with zero elements.</span>
          </span>
          <span data-ttu-id="60b60-236">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-236">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="60b60-237">For reference-type elements, this value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-237">For reference-type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="60b60-238">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-238">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="60b60-239">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-239">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="60b60-240">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-240">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-241">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-241">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-242">An instance of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-242">An instance of the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-243">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="60b60-243">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="60b60-244"><xref:System.Reflection.ConstructorInfo> 인스턴스가 <xref:System.Runtime.InteropServices._ConstructorInfo> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-244">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_3">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_3 (object obj, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_3(object obj, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Function Invoke_3 (obj As Object, parameters As Object()) As Object Implements _ConstructorInfo.Invoke_3" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ parameters) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_3;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="60b60-245">The instance that created this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-245">The instance that created this method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="60b60-246">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-246">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          </span>
          <span data-ttu-id="60b60-247">If this constructor does not require parameters, pass an array with zero elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-247">If this constructor does not require parameters, pass an array with zero elements.</span>
          </span>
          <span data-ttu-id="60b60-248">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-248">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="60b60-249">For reference-type elements, this value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-249">For reference-type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="60b60-250">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-250">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-251">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-251">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-252">An instance of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-252">An instance of the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-253">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="60b60-253">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="60b60-254"><xref:System.Reflection.ConstructorInfo> 인스턴스가 <xref:System.Runtime.InteropServices._ConstructorInfo> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-254">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_4">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_4 (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_4(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_4;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr">
          <span data-ttu-id="60b60-255">One of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies the type of binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-255">One of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies the type of binding.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="60b60-256">A <see cref="T:System.Reflection.Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-256">A <see cref="T:System.Reflection.Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span>
          </span>
          <span data-ttu-id="60b60-257">If <c>binder</c> is <see langword="null" />, then <see cref="P:System.Type.DefaultBinder" /> is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-257">If <c>binder</c> is <see langword="null" />, then <see cref="P:System.Type.DefaultBinder" /> is used.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="60b60-258">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-258">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          </span>
          <span data-ttu-id="60b60-259">If this constructor does not require parameters, pass an array with zero elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-259">If this constructor does not require parameters, pass an array with zero elements.</span>
          </span>
          <span data-ttu-id="60b60-260">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-260">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="60b60-261">For reference-type elements, this value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-261">For reference-type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="60b60-262">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-262">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="60b60-263">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-263">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="60b60-264">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-264">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-265">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-265">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-266">An instance of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-266">An instance of the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-267">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="60b60-267">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="60b60-268"><xref:System.Reflection.ConstructorInfo> 인스턴스가 <xref:System.Runtime.InteropServices._ConstructorInfo> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-268">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_5">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_5 (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_5(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Function Invoke_5 (parameters As Object()) As Object Implements _ConstructorInfo.Invoke_5" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_5(cli::array &lt;System::Object ^&gt; ^ parameters) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_5;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="60b60-269">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-269">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span>
          </span>
          <span data-ttu-id="60b60-270">If this constructor does not require parameters, pass an array with zero elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-270">If this constructor does not require parameters, pass an array with zero elements.</span>
          </span>
          <span data-ttu-id="60b60-271">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-271">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span>
          </span>
          <span data-ttu-id="60b60-272">For reference-type elements, this value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-272">For reference-type elements, this value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="60b60-273">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-273">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60b60-274">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-274">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60b60-275">An instance of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-275">An instance of the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60b60-276">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="60b60-276">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="60b60-277"><xref:System.Reflection.ConstructorInfo> 인스턴스가 <xref:System.Runtime.InteropServices._ConstructorInfo> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60b60-277">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConstructorName">
      <MemberSignature Language="C#" Value="public static readonly string TypeConstructorName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TypeConstructorName" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ConstructorInfo.TypeConstructorName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TypeConstructorName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TypeConstructorName;" />
      <MemberSignature Language="F#" Value=" staticval mutable TypeConstructorName : string" Usage="System.Reflection.ConstructorInfo.TypeConstructorName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60b60-278">Represents the name of the type constructor method as it is stored in metadata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-278">Represents the name of the type constructor method as it is stored in metadata.</span>
          </span>
          <span data-ttu-id="60b60-279">This name is always ".cctor".</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-279">This name is always ".cctor".</span>
          </span>
          <span data-ttu-id="60b60-280">This property is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60b60-280">This property is read-only.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>