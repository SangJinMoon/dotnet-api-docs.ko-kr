<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblyCultureAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de8a5671ad734346463a46358edb15204954733b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de8a5671ad734346463a46358edb15204954733b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyCultureAttribute">
          <source>Specifies which culture the assembly supports.</source>
          <target state="translated">어셈블리에서 지원하는 문화권을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyCultureAttribute">
          <source>The attribute is used by compilers to distinguish between a main assembly and a satellite assembly.</source>
          <target state="translated">특성은 주 어셈블리와 위성 어셈블리를 구분 하기 위해 컴파일러에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyCultureAttribute">
          <source>A main assembly contains code and the neutral culture's resources.</source>
          <target state="translated">주 어셈블리는 코드와 중립 문화권의 리소스를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyCultureAttribute">
          <source>A satellite assembly contains only resources for a particular culture, as in <ph id="ph1">`[assembly:AssemblyCultureAttribute("de")]`</ph>.</source>
          <target state="translated">위성 어셈블리에서와 같이 특정 문화권에 대 한 리소스만 포함 <ph id="ph1">`[assembly:AssemblyCultureAttribute("de")]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyCultureAttribute">
          <source>Putting this attribute on an assembly and using something other than the empty string ("") for the culture name will make this assembly look like a satellite assembly, rather than a main assembly that contains executable code.</source>
          <target state="translated">어셈블리에이 특성을 추가 하 고 빈 문자열 이외의 노드를 사용 하 여 ("") 문화권 이름은 같은 위성 어셈블리를이 어셈블리를 주 어셈블리가 아니라 하 포함 실행 코드입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyCultureAttribute">
          <source>Labeling a traditional code library with this attribute will break it, because no other code will be able to find the library's entry points at runtime.</source>
          <target state="translated">이 특성으로 기존의 코드 라이브러리 레이블 지정 끊긴다는, 다른 코드는 런타임에 라이브러리의 진입점을 찾을 수 없으므로 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyCultureAttribute">
          <source>For more information, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
          <target state="translated">자세한 내용은 "II: 메타 데이터 정의 및 의미" 인프라 CLI (공용 언어) 설명서를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyCultureAttribute">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">이 설명서는 온라인으로 제공됩니다. MSDN의 <bpt id="p1">[</bpt>ECMA C# 및 공용 언어 인프라 표준<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> 및 Ecma International 웹 사이트의 <bpt id="p2">[</bpt>표준 ECMA-335 - CLI(공용 언어 인프라)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
          <source>The culture supported by the attributed assembly.</source>
          <target state="translated">특성 사용 어셈블리에서 지원하는 문화권입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyCultureAttribute" /&gt;</ph> class with the culture supported by the assembly being attributed.</source>
          <target state="translated">특성 사용 어셈블리에서 지원하는 문화권으로 <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyCultureAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
          <source>The culture names follow the RFC1766 names.</source>
          <target state="translated">문화권 이름은 RFC1766 이름을 따릅니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
          <source>The format is as follows: "language"-"country/region".</source>
          <target state="translated">형식은 다음과 같습니다: "language"-"국가/지역"입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
          <source>For example, the format for US English is "en-US".</source>
          <target state="translated">예를 들어 영어 (미국) 형식이 "EN-US"입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Reflection.AssemblyCultureAttribute.Culture">
          <source>Gets the supported culture of the attributed assembly.</source>
          <target state="translated">특성 사용 어셈블리에서 지원하는 문화권을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyCultureAttribute.Culture">
          <source>A string containing the name of the supported culture.</source>
          <target state="translated">지원되는 문화권의 이름이 포함된 문자열입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>