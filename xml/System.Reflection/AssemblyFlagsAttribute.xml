<Type Name="AssemblyFlagsAttribute" FullName="System.Reflection.AssemblyFlagsAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6415ecfda009d8765e3f91b8c7484e459ebd8356" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30477057" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyFlagsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyFlagsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyFlagsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyFlagsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyFlagsAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>어셈블리에 대해 JIT(Just-In-Time) 컴파일러 옵션, 어셈블리 대상 변경 가능 여부 그리고 어셈블리에 전체 공개 키 또는 토큰화된 공개 키가 있는지 여부를 설명하는 <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 비트 조합을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Reflection.AssemblyNameFlags> 열거형이이 특성을 사용 하 여 설정할 수 있는 어셈블리 특성을 설명 합니다.  
  
 어셈블리에 대해 지정 된 플래그에 액세스 하려면 사용 하 여는 <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> 속성을는 <xref:System.Reflection.AssemblyName> 개체를 다음 사용 하 여는 <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> 속성을는 <xref:System.Reflection.AssemblyNameFlags> 값입니다.  
  
 지정 하려면 <xref:System.Reflection.AssemblyNameFlags> 동적 어셈블리에 대 한 플래그 설정는 <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> 의 속성에서 <xref:System.Reflection.AssemblyName> 전달 하는 개체는 <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 적용 하는 방법을 보여 줍니다.는 <xref:System.Reflection.AssemblyFlagsAttribute> 는 어셈블리와 런타임 시 플래그를 읽을 하는 방법에 있습니다. 예제는 또한는 특성의 인스턴스를 사용 하 여 <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> 플래그를 표시 하는 속성입니다. 적용 하는 방법의 예는 <xref:System.Reflection.AssemblyFlagsAttribute> 동적 어셈블리에 참조는 <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> 속성입니다.  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.AssemblyNameFlags" />
    <altmember cref="Overload:System.Reflection.Assembly.GetName" />
    <altmember cref="P:System.Reflection.AssemblyName.Flags" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (int assemblyFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 assemblyFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyFlags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(int assemblyFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constructor has been deprecated. Please use AssemblyFlagsAttribute(AssemblyNameFlags) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="assemblyFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="assemblyFlags">JIT(Just-In-Time) 컴파일러 옵션, 수명, 어셈블리 대상 변경 가능 여부 그리고 어셈블리에 전체 공개 키 또는 토큰화된 공개 키가 있는지 여부를 나타내며 정수 값으로 캐스팅된 <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 비트 조합입니다.</param>
        <summary>정수 값으로 캐스팅된 <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> 플래그의 지정된 조합을 사용하여 <see cref="T:System.Reflection.AssemblyNameFlags" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 형식화 되지 않은이 생성자는 이제 사용 되지 않습니다. 사용하지 마십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (System.Reflection.AssemblyNameFlags assemblyFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Reflection.AssemblyNameFlags assemblyFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyFlags As AssemblyNameFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(System::Reflection::AssemblyNameFlags assemblyFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyFlags" Type="System.Reflection.AssemblyNameFlags" />
      </Parameters>
      <Docs>
        <param name="assemblyFlags">JIT(Just-In-Time) 컴파일러 옵션, 수명, 어셈블리 대상 변경 가능 여부 그리고 어셈블리에 전체 공개 키 또는 토큰화된 공개 키가 있는지 여부를 나타내는 <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 비트 조합입니다.</param>
        <summary>지정된 <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> 플래그 조합을 사용하여 <see cref="T:System.Reflection.AssemblyNameFlags" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 적용 하는 방법을 보여 줍니다.는 <xref:System.Reflection.AssemblyFlagsAttribute> 는 어셈블리와 런타임 시 플래그를 읽을 하는 방법에 있습니다. 예제는 또한는 특성의 인스턴스를 사용 하 여 <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> 플래그를 표시 하는 속성입니다. 적용 하는 방법의 예는 <xref:System.Reflection.AssemblyFlagsAttribute> 동적 어셈블리에 참조는 <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> 속성입니다.  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (uint flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flags As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(System::UInt32 flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constructor has been deprecated. Please use AssemblyFlagsAttribute(AssemblyNameFlags) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="flags" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="flags">JIT(Just-In-Time) 컴파일러 옵션, 수명, 어셈블리 대상 변경 가능 여부 그리고 어셈블리에 전체 공개 키 또는 토큰화된 공개 키가 있는지 여부를 나타내며 부호 없는 정수 값으로 캐스팅된 <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 비트 조합입니다.</param>
        <summary>부호 없는 정수 값으로 캐스팅된 <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> 플래그의 지정된 조합을 사용하여 <see cref="T:System.Reflection.AssemblyNameFlags" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 형식화 되지 않은이 생성자는 이제 사용 되지 않습니다. 사용하지 마십시오.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyFlags">
      <MemberSignature Language="C#" Value="public int AssemblyFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssemblyFlags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyFlags As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssemblyFlags { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 특성 인스턴스가 만들어졌을 때 지정된 <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 조합을 나타내는 정수 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 비트 조합을 나타내는 정수 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 이전 버전과 호환성에 대 한 정수를 반환 합니다. 값을 캐스팅는 <xref:System.Reflection.AssemblyNameFlags> 사용 하기 전에 형식입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 적용 하는 방법을 보여 줍니다.는 <xref:System.Reflection.AssemblyFlagsAttribute> 는 어셈블리와 런타임 시 플래그를 읽을 하는 방법에 있습니다. 예제는 또한는 특성의 인스턴스를 사용 하 여 <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> 플래그를 표시 하는 속성입니다. 적용 하는 방법의 예는 <xref:System.Reflection.AssemblyFlagsAttribute> 동적 어셈블리에 참조는 <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> 속성입니다.  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public uint Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyFlagsAttribute.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 Flags { System::UInt32 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated. Please use AssemblyFlags instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 특성 인스턴스가 만들어졌을 때 지정된 <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 조합을 나타내는 부호 없는 정수 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Reflection.AssemblyNameFlags" /> 플래그의 비트 조합을 나타내는 부호 없는 정수 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 이전 버전과 호환성에 대 한 정수를 반환 합니다. 값을 캐스팅는 <xref:System.Reflection.AssemblyNameFlags> 사용 하기 전에 형식입니다.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags" />
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
  </Members>
</Type>