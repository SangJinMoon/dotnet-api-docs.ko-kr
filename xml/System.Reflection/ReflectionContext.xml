<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReflectionContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fdb579b70ae2c120d5f8bc48e052250c9a70df43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fdb579b70ae2c120d5f8bc48e052250c9a70df43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.ReflectionContext">
          <source>Represents a context that can provide reflection objects.</source>
          <target state="translated">리플렉션 개체를 제공할 수 있는 컨텍스트를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ReflectionContext">
          <source>The purpose of this class is to provide a way for reflection code to be made aware when reflection objects originate in a context other than the default reflection context, so that operations on those objects can use that context.</source>
          <target state="translated">이 클래스의 목적은 리플렉션 코드 수를 인식 하 게 기본 리플렉션 컨텍스트 이외의 컨텍스트에 리플렉션 개체를 생성 하는 경우 해당 개체에 대 한 작업에서 해당 컨텍스트를 사용할 수 있도록 하는 방법을 제공 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ReflectionContext">
          <source>For example, reflection objects that originate with a <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> object should be compared only with reflection objects that have the same origin.</source>
          <target state="translated">예를 들어 발생 하는 리플렉션 개체는 <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> 원점과 하는 리플렉션 개체와만 개체를 비교 해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ReflectionContext">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> 참조 페이지를 참조하세요.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Reflection.ReflectionContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.ReflectionContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.ReflectionContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.ReflectionContext.GetTypeForObject(System.Object)">
          <source>The object to represent.</source>
          <target state="translated">나타낼 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.ReflectionContext.GetTypeForObject(System.Object)">
          <source>Gets the representation of the type of the specified object in this reflection context.</source>
          <target state="translated">이 리플렉션 컨텍스트에 있는 지정된 개체의 형식의 표현을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.ReflectionContext.GetTypeForObject(System.Object)">
          <source>An object that represents the type of the specified object.</source>
          <target state="translated">지정된 개체의 형식을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>The external representation of the assembly to represent in this context.</source>
          <target state="translated">이 컨텍스트에서 나타낼 어셈블리의 외부 표현입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</source>
          <target state="translated">다른 리플렉션 컨텍스트에서 개체가 나타내는 어셈블리의 표현을 이 리플렉션 컨텍스트에 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>The representation of the assembly in this reflection context.</source>
          <target state="translated">이 리플렉션 컨텍스트의 어셈블리 표현입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>The external representation of the type to represent in this context.</source>
          <target state="translated">이 컨텍스트에서 나타낼 형식의 외부 표현입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</source>
          <target state="translated">다른 리플렉션 컨텍스트에서 개체가 나타내는 형식의 표현을 이 리플렉션 컨텍스트에 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>The representation of the type in this reflection context..</source>
          <target state="translated">이 리플렉션 컨텍스트의 형식 표현입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>