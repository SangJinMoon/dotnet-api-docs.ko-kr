<Type Name="CustomAttributeTypedArgument" FullName="System.Reflection.CustomAttributeTypedArgument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2dfe5af08cbdfc90d40752df4fe43304db8cb328" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36543316" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CustomAttributeTypedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeTypedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeTypedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeTypedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeTypedArgument" />
  <TypeSignature Language="F#" Value="type CustomAttributeTypedArgument = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b3305-101">리플렉션 전용 컨텍스트에 있는 사용자 지정 특성의 인수나 배열 인수의 요소를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b3305-101">Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3305-102">리플렉션 전용 컨텍스트에 검사 중인 코드 실행 수 없으므로 수 항상 해당 및 해당 속성을 검사 한 다음,와 같은 메서드를 사용 하 여 인스턴스를 만들어 사용자 지정 특성을 검사할 수 없으면 <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>등 .</span><span class="sxs-lookup"><span data-stu-id="b3305-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="b3305-103">특성 형식 자체에 대 한 코드는 리플렉션 전용 컨텍스트에 로드 되 면 실행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="b3305-104"><xref:System.Reflection.CustomAttributeNamedArgument> 구조에서 사용 되는 <xref:System.Reflection.CustomAttributeData> 형식 및 위치 인수는 특성 생성자를 실행 하지 않고 사용자 지정 특성 인스턴스에 지정 된 값에 대 한 액세스를 제공 하기 위해 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor.</span></span> <span data-ttu-id="b3305-105">또한 사용자 지정 특성 형식의 해당 속성의 코드를 실행 하지 않고 형식 및 명명 된 인수 값에 액세스를 제공.</span><span class="sxs-lookup"><span data-stu-id="b3305-105">It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.</span></span>  
  
 <span data-ttu-id="b3305-106">형식 및 특성 인스턴스는 모든 위치 및 명명 된 인수 값으로 제공 되 <xref:System.Reflection.CustomAttributeTypedArgument> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-106">The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures.</span></span> <span data-ttu-id="b3305-107">반환 되는 위치 특성은 <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> 속성 직접 표시 <xref:System.Reflection.CustomAttributeTypedArgument> 구조가, 하지만에서 반환 된 명명 된 인수는 <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> 속성으로 표현 됩니다 <xref:System.Reflection.CustomAttributeNamedArgument> 가져오려는; 구조는 <xref:System.Reflection.CustomAttributeTypedArgument> 명명된 된 인수를 사용 하 여에 대 한 구조는 <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-107">The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b3305-108">인수는 값의 배열 하는 경우는 <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> 속성의는 <xref:System.Reflection.CustomAttributeTypedArgument> 나타냅니다 인수 반환 하는 제네릭 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 의 <xref:System.Reflection.CustomAttributeTypedArgument> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-108">If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="b3305-109">각 <xref:System.Reflection.CustomAttributeTypedArgument> 컬렉션에서 개체 배열의 해당 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-109">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="b3305-110">인스턴스를 만들는 <xref:System.Reflection.CustomAttributeData> 클래스를 사용 하 여는 `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> 팩터리 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-110">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3305-111">다음 예에서는 4 명의 생성자와 속성을 갖는 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-111">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b3305-112">두 속성은 읽기 전용 한 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-112">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b3305-113">다른 두 속성은 읽기/쓰기 및 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-113">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b3305-114">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-114">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b3305-115">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-115">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b3305-116">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-116">Different constructors are used for these cases.</span></span> <span data-ttu-id="b3305-117">를 실행 하면 어셈블리가 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 사용자 지정 특성을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-117">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b3305-118">형식에 적용 되는 특성에는 위치 및 명명 된 인수를 갖는 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-118">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeNamedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b3305-119">
            <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-119">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b3305-120">사용자 지정 특성 인수의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-120">The value of the custom attribute argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b3305-121">지정된 값을 사용하여 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-121">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3305-122">`value` 매개 변수 여야 `null` 이 생성자에 대 한 인수 형식이의 형식에서 유추 되기 때문에 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-122">The `value` parameter cannot be `null` for this constructor, because the argument type is inferred from the type of `value`.</span></span> <span data-ttu-id="b3305-123">지정 하는 `null` 값을 사용 하 여는 <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-123">To specify a `null` value, use the <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.</span></span>  
  
 <span data-ttu-id="b3305-124">상속 자가 사용 하기 위해이 생성자는는 <xref:System.Reflection.CustomAttributeTypedArgument> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-124">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="b3305-125">응용 프로그램 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-125">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b3305-126">
            <paramref name="value" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-126">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (Type argumentType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type argumentType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentType As Type, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(Type ^ argumentType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : Type * obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument (argumentType, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="argumentType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argumentType">
          <span data-ttu-id="b3305-127">사용자 지정 특성 인수의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-127">The type of the custom attribute argument.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b3305-128">사용자 지정 특성 인수의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-128">The value of the custom attribute argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b3305-129">지정된 형식과 값을 사용하여 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-129">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified type and value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3305-130">상속 자가 사용 하기 위해이 생성자는는 <xref:System.Reflection.CustomAttributeTypedArgument> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-130">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="b3305-131">응용 프로그램 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-131">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b3305-132">
            <paramref name="argumentType" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-132">
              <paramref name="argumentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ArgumentType">
      <MemberSignature Language="C#" Value="public Type ArgumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ArgumentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ArgumentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentType : Type" Usage="System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b3305-133">인수의 형식 또는 배열 인수 요소의 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-133">Gets the type of the argument or of the array argument element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b3305-134">인수의 형식 또는 배열 요소의 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-134">A <see cref="T:System.Type" /> object representing the type of the argument or of the array element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3305-135">이 속성에서 반환 값의 실제 형식 식별 간단한 인수 또는 배열 인수의 요소에 대 한는 <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-135">For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property.</span></span> <span data-ttu-id="b3305-136">배열 인수가이 속성은 배열 형식을 반환 하지만 <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> 속성 반환 하지 않습니다는 `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` Visual basic에서) 컬렉션의 각 요소에 배열 인수의 해당 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-136">For array arguments, this property returns the array type, but the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3305-137">다음 예에서는 4 명의 생성자와 속성을 갖는 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-137">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b3305-138">두 속성은 읽기 전용 한 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-138">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b3305-139">다른 두 속성은 읽기/쓰기 및 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-139">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b3305-140">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-140">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b3305-141">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-141">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b3305-142">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-142">Different constructors are used for these cases.</span></span> <span data-ttu-id="b3305-143">를 실행 하면 어셈블리가 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 사용자 지정 특성을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-143">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b3305-144">형식에 적용 되는 특성에는 위치 및 명명 된 인수를 갖는 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-144">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b3305-145"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> 속성은 사용는 `ShowValueOrArray` 특성 유형의 표시를 사용자 지정 특성 데이터를 표시 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-145">The <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the types of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeTypedArgument.Value" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeTypedArgument.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b3305-146">비교할 다른 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-146">Another object to compare to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b3305-147">이 인스턴스와 지정된 개체가 같은지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-147">Indicates whether this instance and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b3305-148">
            <see langword="true" />와 이 인스턴스가 동일한 형식이고 동일한 값을 나타내면 <paramref name="obj" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-148">
              <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeTypedArgument.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b3305-149">이 인스턴스의 해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-149">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b3305-150">이 인스턴스의 해시 코드인 32비트 부호 있는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-150">A 32-bit signed integer that is the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b3305-151">같음 연산자의 왼쪽에 있는 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-151">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the equality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b3305-152">같음 연산자의 오른쪽에 있는 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-152">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the equality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b3305-153">두 개의 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 구조체가 같은지를 테스트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-153">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b3305-154">두 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 구조체가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-154">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="b3305-155">이 연산자는 해당 하는 방법은 <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-155">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="System.Reflection.CustomAttributeTypedArgument.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b3305-156">같지 않음 연산자의 왼쪽에 있는 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-156">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the inequality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b3305-157">같지 않음 연산자의 오른쪽에 있는 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-157">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the inequality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b3305-158">두 개의 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 구조체가 다른지를 테스트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-158">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b3305-159">두 <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> 구조체가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-159">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="b3305-160">이 연산자는 해당 하는 방법은 <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-160">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeTypedArgument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b3305-161">인수 이름, 등호 및 인수 값의 문자열 표현으로 이루어진 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-161">Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b3305-162">인수 이름, 등호 및 인수 값의 문자열 표현으로 이루어진 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-162">A string consisting of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b3305-163">간단한 인수 또는 배열 인수 요소의 경우에는 인수의 값을 가져오고, 배열 인수의 경우에는 값 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-163">Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b3305-164">인수 또는 요소의 값을 나타내는 개체이거나, 배열 형식 인수의 값을 나타내는 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 개체의 제네릭 <see cref="T:System.Reflection.CustomAttributeTypedArgument" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b3305-164">An object that represents the value of the argument or element, or a generic <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> objects that represent the values of an array-type argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3305-165">경우는 <xref:System.Reflection.CustomAttributeTypedArgument> 이 속성은 반환 된 배열 인수를 나타내는 `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` Visual basic에서).</span><span class="sxs-lookup"><span data-stu-id="b3305-165">If the <xref:System.Reflection.CustomAttributeTypedArgument> represents an array argument, this property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic).</span></span> <span data-ttu-id="b3305-166">컬렉션의 각 요소를 배열 인수는 해당 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-166">Each element of the collection represents the corresponding element of the array argument.</span></span>  
  
 <span data-ttu-id="b3305-167">값의 형식을 사용 하 여 가져올 수는 <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-167">The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property.</span></span> <span data-ttu-id="b3305-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> 반환 된 값의 실제 형식을 가져옵니다는 <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> 간단한 인수 또는 배열 인수의 요소에 대 한 속성.</span><span class="sxs-lookup"><span data-stu-id="b3305-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments.</span></span> <span data-ttu-id="b3305-169">배열 인수에 대 한 배열 형식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-169">It returns the array type for array arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3305-170">다음 예에서는 4 명의 생성자와 속성을 갖는 사용자 지정 특성을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-170">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="b3305-171">두 속성은 읽기 전용 한 생성자의 위치 매개 변수를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-171">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="b3305-172">다른 두 속성은 읽기/쓰기 및 명명 된 인수를 사용 해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-172">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="b3305-173">하나의 위치 속성은 문자열의 배열 및 하나의 명명 된 속성은 정수 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-173">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="b3305-174">어셈블리, 어셈블리에 선언된 형식, 형식의 메서드, 메서드의 매개 변수에 특성이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-174">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="b3305-175">다른 생성자는 이러한 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-175">Different constructors are used for these cases.</span></span> <span data-ttu-id="b3305-176">를 실행 하면 어셈블리가 리플렉션 전용 컨텍스트에 자동으로 로드 하 고 사용자 지정 특성을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-176">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="b3305-177">형식에 적용 되는 특성에는 위치 및 명명 된 인수를 갖는 배열 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-177">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="b3305-178"><xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> 속성에서 사용 되는 `ShowValueOrArray` 특성의 값을 표시 하려면 사용자 지정 특성 데이터를 표시 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="b3305-178">The <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the values of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 <span data-ttu-id="b3305-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span><span class="sxs-lookup"><span data-stu-id="b3305-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>