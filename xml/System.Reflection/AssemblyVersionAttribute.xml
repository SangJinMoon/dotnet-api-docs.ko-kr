<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblyVersionAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e8bbf08909c6cf9fa965274e743f69c05a949eb9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8bbf08909c6cf9fa965274e743f69c05a949eb9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>Specifies the version of the assembly being attributed.</source>
          <target state="translated">특성 사용 어셈블리의 버전을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute is used to assign a version number to an assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> 특성은 어셈블리 버전 번호를 할당 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>That version number is then stored with the assembly's metadata.</source>
          <target state="translated">그러면 해당 버전 번호는 어셈블리의 메타 데이터와 함께 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>The assembly version number is part of an assembly's identity and plays a key part in binding to the assembly and in version policy.</source>
          <target state="translated">어셈블리 버전 번호는 어셈블리의 id의 일부 이며 중요 한 역할 및 버전 정책에서 어셈블리에 바인딩.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>The default version policy for the runtime is that applications run only with the versions they were built and tested with, unless overridden by explicit version policy in configuration files (the application configuration file, the publisher policy file, and the computer's administrator configuration file).</source>
          <target state="translated">런타임에서의 버전 정책은, 구성 파일(응용 프로그램 구성 파일, 게시자 정책 파일 및 컴퓨터의 관리자 구성 파일)의 명시적인 버전 정책에 의해 재정의된 경우를 제외하고는, 처음 빌드되고 테스트될 때 사용된 버전으로만 응용 프로그램이 실행되도록 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>See <bpt id="p1">[</bpt>Assemblies in the Common Language Runtime<ept id="p1">](~/docs/framework/app-domains/assemblies-in-the-common-language-runtime.md)</ept> for more information.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>공용 언어 런타임의 어셈블리<ept id="p1">](~/docs/framework/app-domains/assemblies-in-the-common-language-runtime.md)</ept> 자세한 정보에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>Version checking only occurs with strong-named assemblies.</source>
          <target state="translated">버전 확인은 강력한 이름의 어셈블리에 대해서만 수행됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>The version number has four parts, as follows:</source>
          <target state="translated">버전 번호는 다음과 같이 네 부분에 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source><ph id="ph1">\&lt;</ph>major version&gt;.<ph id="ph2">\&lt;</ph>minor version&gt;.<ph id="ph3">\&lt;</ph>build number&gt;.<ph id="ph4">\&lt;</ph>revision&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>주 버전 &gt;. <ph id="ph2">\&lt;</ph>부 버전 &gt;. <ph id="ph3">\&lt;</ph>빌드 번호 &gt;. <ph id="ph4">\&lt;</ph>수정 버전 &gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>All components of the version must be integers greater than or equal to 0.</source>
          <target state="translated">버전의 모든 구성 요소에는 0 보다 크거나 정수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <ph id="ph1">&lt;xref:System.UInt16.MaxValue?displayProperty=nameWithType&gt;</ph> - 1.</source>
          <target state="translated">메타 데이터 제한 주, 부 버전, 빌드 및 버전 구성 요소 어셈블리의 최대 값 수에 대 한 <ph id="ph1">&lt;xref:System.UInt16.MaxValue?displayProperty=nameWithType&gt;</ph> -1입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>If a component exceeds this value, a compilation error occurs.</source>
          <target state="translated">구성 요소는이 값을 초과 하는 경우 컴파일 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>You can specify all the values or you can accept the default build number, revision number, or both by using an asterisk (*).</source>
          <target state="translated">모든 값을 지정 하거나 별표 (*)를 사용 하 여 기본 빌드 번호, 수정 버전 번호를 그대로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>For example, <ph id="ph1">`[assembly:AssemblyVersion("2.3.25.1")]`</ph> indicates 2 as the major version, 3 as the minor version, 25 as the build number, and 1 as the revision number.</source>
          <target state="translated">예를 들어 <ph id="ph1">`[assembly:AssemblyVersion("2.3.25.1")]`</ph> 은 주 버전 2, 3 부 버전으로, 25는 빌드 번호 및 수정 번호 1을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>A version number such as <ph id="ph1">`[assembly:AssemblyVersion("1.2.*")]`</ph> specifies 1 as the major version, 2 as the minor version, and accepts the default build and revision numbers.</source>
          <target state="translated">와 같은 버전 번호 <ph id="ph1">`[assembly:AssemblyVersion("1.2.*")]`</ph> 주 버전, 부 버전, 2로 1을 지정 하 고 기본 빌드 및 수정 번호를 적용 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>A version number such as <ph id="ph1">`[assembly:AssemblyVersion("1.2.15.*")]`</ph> specifies 1 as the major version, 2 as the minor version, 15 as the build number, and accepts the default revision number.</source>
          <target state="translated">와 같은 버전 번호 <ph id="ph1">`[assembly:AssemblyVersion("1.2.15.*")]`</ph> 1 주 버전, 2 부 버전, 15 빌드 번호를 지정 하 고 기본 수정 번호를 적용 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>The default build number increments daily.</source>
          <target state="translated">기본 빌드 번호 매일을 증가합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>The default revision number is the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2.</source>
          <target state="translated">기본 수정 번호 2로 나눈 값을 고려 하 계정 시간대가 일광 절약 시간제에 맞게 조정), (없이 자정 현지 시간 이후의 시간 (초)입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>If you specify an asterisk for the build number, you cannot specify a revision number.</source>
          <target state="translated">빌드 번호에 대해 별표를 지정 하면 수정 번호를 지정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>The assembly major and minor versions are used as the type library version number when the assembly is exported.</source>
          <target state="translated">어셈블리를 내보낼 때 형식 라이브러리 버전 번호와 어셈블리 주 버전과 부 버전이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>Some COM hosts do not accept type libraries with the version number 0.0.</source>
          <target state="translated">일부의 COM 호스트 0.0 버전 번호로 형식 라이브러리를 허용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>Therefore, if you want to expose an assembly to COM clients, set the assembly version explicitly to 1.0 in the <ph id="ph1">`AssemblyVersionAttribute`</ph> page for projects created outside <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> and with no <ph id="ph3">`AssemblyVersionAttribute`</ph> specified.</source>
          <target state="translated">따라서 COM 클라이언트에 어셈블리를 노출 하려는 경우 어셈블리 버전 명시적으로 설정할 1.0에서는 <ph id="ph1">`AssemblyVersionAttribute`</ph> 페이지 프로젝트 외부에서 만들어 <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> 및 없이 <ph id="ph3">`AssemblyVersionAttribute`</ph> 지정 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>Do this even when the assembly version is 0.0.</source>
          <target state="translated">어셈블리 버전은 0.0 하는 경우에이 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>All projects created in <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> have a default assembly version of 1.0.*.</source>
          <target state="translated">만든 모든 프로젝트 <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> 1.0의 기본 어셈블리 버전을 포함 합니다. *.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>To get the name of an assembly you have loaded, call <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> on the assembly to get an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph>, and then get the <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> property.</source>
          <target state="translated">로드 한 어셈블리의 이름을 가져오려면 호출 <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> 가져올 어셈블리에는 <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph>를 가져온 후의 <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>To get the name of an assembly you have not loaded, call <ph id="ph1">&lt;xref:System.Reflection.AssemblyName.GetAssemblyName%2A&gt;</ph> from your client application to check the assembly version that your application uses.</source>
          <target state="translated">로드 되지 않은 어셈블리의 이름을 가져오려면 호출 <ph id="ph1">&lt;xref:System.Reflection.AssemblyName.GetAssemblyName%2A&gt;</ph> 응용 프로그램에서 사용 하는 어셈블리 버전을 확인 하려면 클라이언트 응용 프로그램에서 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute can only be applied once.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> 특성은 한 번만 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>Some Visual Studio project templates already include the attribute.</source>
          <target state="translated">일부 Visual Studio 프로젝트 템플릿 이미 특성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>In those projects, adding the attribute in code causes a compiler error.</source>
          <target state="translated">프로젝트의 코드에 특성 추가 컴파일러 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute to assign a version number to an assembly.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> 특성을 어셈블리 버전 번호를 할당 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>At compile time, this version information is stored with the assembly's metadata.</source>
          <target state="translated">컴파일 타임에이 버전 정보는 어셈블리의 메타 데이터와 함께 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyVersionAttribute">
          <source>At run time, the example retrieves the value of the <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 예제에서는 실행 시의 값을 검색 하는 <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> 형식 속성에는 실행 중인 어셈블리에 대 한 참조를 가져올 어셈블리에서 찾은 어셈블리의 버전 정보를 검색는 <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> 반환 된 개체는 <ph id="ph4">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>The version number of the attributed assembly.</source>
          <target state="translated">특성 사용 어셈블리의 버전 번호입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="AssemblyVersionAttribute" /&gt;</ph> class with the version number of the assembly being attributed.</source>
          <target state="translated">특성 사용 어셈블리의 버전 번호로 <ph id="ph1">&lt;see langword="AssemblyVersionAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>The format of the <ph id="ph1">`version`</ph> string is: <ph id="ph2">`major`</ph>.</source>
          <target state="translated">형식은 <ph id="ph1">`version`</ph> 문자열은: <ph id="ph2">`major`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source><ph id="ph1">`minor`</ph>.</source>
          <target state="translated"><ph id="ph1">`minor`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source><ph id="ph1">`build`</ph>.</source>
          <target state="translated"><ph id="ph1">`build`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source><ph id="ph1">`revision`</ph>.</source>
          <target state="translated"><ph id="ph1">`revision`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>When specifying a version, you have to at least specify <ph id="ph1">`major`</ph>.</source>
          <target state="translated">이상 지정 해야 하는 버전을 지정할 때 <ph id="ph1">`major`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>If you specify <ph id="ph1">`major`</ph> and <ph id="ph2">`minor`</ph>, you can specify an asterisk (*) for <ph id="ph3">`build`</ph>.</source>
          <target state="translated">지정 하는 경우 <ph id="ph1">`major`</ph> 및 <ph id="ph2">`minor`</ph>에 별표 (*)를 지정할 수 있는 <ph id="ph3">`build`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>This will cause <ph id="ph1">`build`</ph> to be equal to the number of days since January 1, 2000 local time, and for <ph id="ph2">`revision`</ph> to be equal to the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2.</source>
          <target state="translated">이렇게 하면 <ph id="ph1">`build`</ph> 2000 년 1 월 1 한 일 수와 현지 시간에 한 <ph id="ph2">`revision`</ph> 현지 시간을 고려 하 계정 시간대가 일광 절약 시간제에 맞게 조정), (없이 이후의 초 수로 2로 나눈 값입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>If you specify <ph id="ph1">`major`</ph>, <ph id="ph2">`minor`</ph>, and <ph id="ph3">`build`</ph>, you can specify an asterisk for <ph id="ph4">`revision`</ph>.</source>
          <target state="translated"><ph id="ph1">`major`</ph>, <ph id="ph2">`minor`</ph> 및 <ph id="ph3">`build`</ph>를 지정하면 <ph id="ph4">`revision`</ph>에 대해 별표를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>This will cause <ph id="ph1">`revision`</ph> to be equal to the number of seconds since midnight local time, divided by 2.</source>
          <target state="translated">이렇게 하면 <ph id="ph1">`revision`</ph> 2로 나눈 현지 시간, 자정 이후의 초 수와 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>Examples of valid version strings include:</source>
          <target state="translated">유효한 버전 문자열의 예입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>1.1</source>
          <target state="translated">1.1</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>1.1.*</source>
          <target state="translated">1.1.*</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>1.1.1</source>
          <target state="translated">1.1.1</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>1.1.1.*</source>
          <target state="translated">1.1.1.*</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
          <source>1.1.1.1</source>
          <target state="translated">1.1.1.1</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Reflection.AssemblyVersionAttribute.Version">
          <source>Gets the version number of the attributed assembly.</source>
          <target state="translated">특성 사용 어셈블리의 버전 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyVersionAttribute.Version">
          <source>A string containing the assembly version number.</source>
          <target state="translated">어셈블리 버전 번호를 포함하는 문자열입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>