<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObfuscateAssemblyAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac569287d395505fd202b0a393d4695e4c883e335f4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69287d395505fd202b0a393d4695e4c883e335f4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>Instructs obfuscation tools to use their standard obfuscation rules for the appropriate assembly type.</source>
          <target state="translated">적합한 어셈블리 형식에 표준 난독 처리 규칙을 사용하도록 난독 처리 도구를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.ObfuscationAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;</ph> attributes provide a way for assembly authors to annotate their binaries so that obfuscation tools can process them correctly with minimal external configuration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.ObfuscationAttribute&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;</ph> 특성 어셈블리 작성자가 난독 처리 도구 외부 최소 구성으로 올바르게 처리할 수 있도록가 이진 파일에 주석을 추가 하는 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>Applying this attribute to an assembly tells the obfuscation tool to use its default rules for the assembly type.</source>
          <target state="translated">어셈블리 형식에 대 한 기본 규칙을 사용 하는 난독 처리 도구를 지시 어셈블리에이 특성을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>Applying this attribute does not automatically obfuscate the assembly.</source>
          <target state="translated">이 특성을 적용 해도 어셈블리가 자동으로 난독 처리 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>Applying the attribute is an alternative to creating a configuration file for the obfuscation tool.</source>
          <target state="translated">특성 적용 하 여 난독 처리 도구에 대 한 구성 파일을 만드는 하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>That is, it merely provides instructions for an obfuscation tool.</source>
          <target state="translated">즉, 모호성 도구에 대 한 지침만 제공 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>Microsoft recommends that vendors of obfuscation tools follow the semantics described here.</source>
          <target state="translated">난독 처리 도구 공급 업체 여기에 설명 된 의미 체계를 수행 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>However, there is no guarantee that a particular tool follows Microsoft recommendations.</source>
          <target state="translated">그러나 특정 도구 Microsoft 권장 사항을 따르는지를 하지 않을 수도가 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>You can apply <ph id="ph1">&lt;xref:System.Reflection.ObfuscationAttribute&gt;</ph> to types within an assembly, and to members on those types.</source>
          <target state="translated">적용할 수 있습니다 <ph id="ph1">&lt;xref:System.Reflection.ObfuscationAttribute&gt;</ph> 해당 형식에는 멤버와 어셈블리 내의 형식에 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>The innermost attribute controls the way an obfuscation tool treats any particular code entity.</source>
          <target state="translated">가장 안쪽의 특성에 따라 제어 방식으로 난독 처리 하는 도구는 특정 코드 엔터티를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>The following code example shows a private assembly that has been marked with the <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 전용으로 표시 된 어셈블리를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, to prevent the obfuscation tool from stripping the attribute after processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 난독 처리 도구 처리 후 특성을 제거 하지 못하도록 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ObfuscateAssemblyAttribute">
          <source>For a code example that shows the use of <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;</ph> with <ph id="ph2">&lt;xref:System.Reflection.ObfuscationAttribute&gt;</ph>, see the <ph id="ph3">&lt;xref:System.Reflection.ObfuscationAttribute&gt;</ph> class.</source>
          <target state="translated">사용을 보여 주는 코드 예제를 보려면 <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Reflection.ObfuscationAttribute&gt;</ph>, 참조는 <ph id="ph3">&lt;xref:System.Reflection.ObfuscationAttribute&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the assembly is used within the scope of one application; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">단일 응용 프로그램의 범위 내에서 어셈블리를 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.ObfuscateAssemblyAttribute" /&gt;</ph> class, specifying whether the assembly to be obfuscated is public or private.</source>
          <target state="translated">난독 처리할 어셈블리가 공용 또는 전용인지 지정하여 <ph id="ph1">&lt;see cref="T:System.Reflection.ObfuscateAssemblyAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>Mark assemblies as private if they are used only by your application, and are not libraries to be used by other software.</source>
          <target state="translated">응용 프로그램에 사용 하는 라이브러리를 다른 소프트웨어에서 사용할 수 없는 경우에 private으로 어셈블리를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>Generally, marking an assembly as private tells an obfuscator that it can obfuscate the names of all methods, including public methods, as part of obfuscating an application.</source>
          <target state="translated">일반적으로 어셈블리를 전용으로 표시는 응용 프로그램을 난독 처리의 일부분으로 공용 메서드를 포함 하는 모든 메서드의 이름은 난독 처리할 수 obfuscator을 지시 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>If an assembly is public, an obfuscator should not obfuscate the names of public members.</source>
          <target state="translated">어셈블리의 public 인 경우 obfuscator public 멤버의 이름을 난독 처리 되지는 해야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>Applying this attribute does not automatically obfuscate the assembly.</source>
          <target state="translated">이 특성을 적용 해도 어셈블리가 자동으로 난독 처리 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>Applying the attribute is an alternative to creating a configuration file for the obfuscation tool.</source>
          <target state="translated">특성 적용 하 여 난독 처리 도구에 대 한 구성 파일을 만드는 하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>That is, it merely provides instructions for an obfuscation tool.</source>
          <target state="translated">즉, 모호성 도구에 대 한 지침만 제공 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>Microsoft recommends that vendors of obfuscation tools follow the semantics described here.</source>
          <target state="translated">난독 처리 도구 공급 업체 여기에 설명 된 의미 체계를 수행 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>However, there is no guarantee that a particular tool follows Microsoft recommendations.</source>
          <target state="translated">그러나 특정 도구 Microsoft 권장 사항을 따르는지를 하지 않을 수도가 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>The following code example shows how the attribute constructor specifies that an assembly is private.</source>
          <target state="translated">다음 코드 예제는 어셈블리를 전용 특성 생성자를 지정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, to prevent the obfuscation tool from stripping the attribute after processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 난독 처리 도구 처리 후 특성을 제거 하지 못하도록 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value indicating whether the assembly was marked private.</source>
          <target state="translated">어셈블리가 전용으로 표시되었는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the assembly was marked private; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">어셈블리가 전용으로 표시되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate">
          <source>A private assembly is used only by the application of which it is a part, and not by other software.</source>
          <target state="translated">전용 어셈블리를 다른 소프트웨어로 부품 어셈블리가 응용 프로그램에 의해서만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate">
          <source>Applying this attribute does not automatically obfuscate the assembly.</source>
          <target state="translated">이 특성을 적용 해도 어셈블리가 자동으로 난독 처리 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate">
          <source>Applying the attribute is an alternative to creating a configuration file for the obfuscation tool.</source>
          <target state="translated">특성 적용 하 여 난독 처리 도구에 대 한 구성 파일을 만드는 하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate">
          <source>That is, it merely provides instructions for an obfuscation tool.</source>
          <target state="translated">즉, 모호성 도구에 대 한 지침만 제공 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate">
          <source>Microsoft recommends that vendors of obfuscation tools follow the semantics described here.</source>
          <target state="translated">난독 처리 도구 공급 업체 여기에 설명 된 의미 체계를 수행 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate">
          <source>However, there is no guarantee that a particular tool follows Microsoft recommendations.</source>
          <target state="translated">그러나 특정 도구 Microsoft 권장 사항을 따르는지를 하지 않을 수도가 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate">
          <source>The following code example shows how the attribute constructor sets the <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, to specify that an assembly is private.</source>
          <target state="translated">다음 코드 예제에서는 특성 생성자가 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>개인 어셈블리 라고 지정 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, to prevent the obfuscation tool from stripping the attribute after processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 난독 처리 도구 처리 후 특성을 제거 하지 못하도록 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value indicating whether the obfuscation tool should remove the attribute after processing.</source>
          <target state="translated">난독 처리 도구가 처리 후 특성을 제거하는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the obfuscation tool should remove the attribute after processing; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">난독 처리 도구가 처리 후 특성을 제거하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source>The default value for this property is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 속성의 기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source>Attributes should not be stripped if your library will be included as part of another application, and obfuscated as part of that application.</source>
          <target state="translated">라이브러리가 다른 응용 프로그램의 일부분으로 포함 되며 해당 응용 프로그램의 일부분으로 난독 처리 하는 경우 특성을 제거 해야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source>Specifying that obfuscation tools should strip the <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;</ph> does not affect instances of <ph id="ph2">&lt;xref:System.Reflection.ObfuscationAttribute&gt;</ph> that have been applied to types and members within the assembly.</source>
          <target state="translated">난독 처리 도구를 제거 하도록 지정 하는 <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;</ph> 인스턴스의 영향을 주지 않습니다 <ph id="ph2">&lt;xref:System.Reflection.ObfuscationAttribute&gt;</ph> 어셈블리 내의 형식 및 멤버에 적용 된입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source>Applying this attribute does not automatically obfuscate the assembly.</source>
          <target state="translated">이 특성을 적용 해도 어셈블리가 자동으로 난독 처리 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source>Applying the attribute is an alternative to creating a configuration file for the obfuscation tool.</source>
          <target state="translated">특성 적용 하 여 난독 처리 도구에 대 한 구성 파일을 만드는 하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source>That is, it merely provides instructions for an obfuscation tool.</source>
          <target state="translated">즉, 모호성 도구에 대 한 지침만 제공 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source>Microsoft recommends that vendors of obfuscation tools follow the semantics described here.</source>
          <target state="translated">난독 처리 도구 공급 업체 여기에 설명 된 의미 체계를 수행 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source>However, there is no guarantee that a particular tool follows Microsoft recommendations.</source>
          <target state="translated">그러나 특정 도구 Microsoft 권장 사항을 따르는지를 하지 않을 수도가 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;</ph> attribute with the <ph id="ph2">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation%2A&gt;</ph> property set to <ph id="ph3">`false`</ph>, to prevent the obfuscation tool from stripping the attribute after processing.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute&gt;</ph> 특성이 <ph id="ph2">&lt;xref:System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation%2A&gt;</ph> 속성이로 설정 <ph id="ph3">`false`</ph>, 난독 처리 도구 처리 후 특성을 제거 하지 못하도록 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>