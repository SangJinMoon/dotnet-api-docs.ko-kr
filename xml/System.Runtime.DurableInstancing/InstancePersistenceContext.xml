<Type Name="InstancePersistenceContext" FullName="System.Runtime.DurableInstancing.InstancePersistenceContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="579ba64460ca67118646f05eb9bc78abf979aa34" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36635993" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InstancePersistenceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InstancePersistenceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InstancePersistenceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstancePersistenceContext sealed" />
  <TypeSignature Language="F#" Value="type InstancePersistenceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="42e3c-101">Represents execution state information while a persistence command is being executed.</span>
      <span class="sxs-lookup">
        <span data-stu-id="42e3c-101">Represents execution state information while a persistence command is being executed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-102">이 클래스의 인스턴스가 지속성 공급자 구현의 TryCommand 메서드로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-102">An instance of this class is passed to the TryCommand method of persistence provider implementations.</span></span> <span data-ttu-id="42e3c-103">지속성 공급자는 이 클래스를 사용하여 인스턴스의 메모리 내 뷰를 검사하고 뷰 또는 기타 메모리 내 컨텍스트에 영향을 줄 수 있는 외부 저장소에 대한 작업 결과를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-103">Persistence providers use this class to inspect the in-memory view of the instance as well as indicate the results of operations on the external store which may affect the view or other in-memory context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void AssociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociatedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.AssociatedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.AssociatedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="42e3c-104">The instance key identifier  for the key that has been associated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-104">The instance key identifier  for the key that has been associated.</span>
          </span>
          <span data-ttu-id="42e3c-105">Must not be Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-105">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-106">Indicates that the persistence provider has successfully associated a key to the current instance in the instance store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-106">Indicates that the persistence provider has successfully associated a key to the current instance in the instance store.</span>
          </span>
          <span data-ttu-id="42e3c-107">The identifier of the key is specified as a parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-107">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-108">인스턴스 키는 연결되어 있지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-108">The instance key must be unassociated.</span></span> <span data-ttu-id="42e3c-109">현재 인스턴스 핸들이 인스턴스와 이 인스턴스의 잠금에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-109">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginBindReclaimedLock">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBindReclaimedLock (long instanceVersion, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBindReclaimedLock (instanceVersion As Long, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBindReclaimedLock(long instanceVersion, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginBindReclaimedLock : int64 * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instancePersistenceContext.BeginBindReclaimedLock (instanceVersion, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="42e3c-110">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-110">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="42e3c-111">The timeout period for the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-111">The timeout period for the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="42e3c-112">The method to be called when the operation is completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-112">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="42e3c-113">The state information associated with the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-113">The state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-114">Begin an asynchronous operation to bind an existing lock on an instance to the current instance handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-114">Begin an asynchronous operation to bind an existing lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="42e3c-115">The version of the existing lock is passed as a parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-115">The version of the existing lock is passed as a parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42e3c-116">The status of an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-116">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-117">잠금을 획득하려고 할 때 지속성 공급자는 현재 인스턴스가 현재 저장소에서 이미 잠겨 있다고 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-117">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="42e3c-118">잠금 토큰이 현재 핸들의 잠금 토큰과 일치하면 지속성 공급자가 해당 버전을 검사한 후 BeginBindReclaimedLock으로 전달하여 잠금을 회수할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-118">If the lock token matches the current handle’s lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BeginBindReclaimedLock.</span></span> <span data-ttu-id="42e3c-119">지속성 공급자는 잠금이 회수될 때까지 인스턴스를 변경하면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-119">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="42e3c-120">다른 핸들이 잠금에 바인딩되어 있지 않으면 BeginBindReclaimedLock 작업이 성공하고 현재 핸들이 잠금에 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-120">If no other handle is bound to the lock, then the BeginBindReclaimedLock operation succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="42e3c-121">그렇지 않으면 BeginBindReclaimedLock 또는 EndBindReclaimedLock이 InstanceHandleConflictException을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-121">Otherwise, BeginBindReclaimedLock or EndBindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="42e3c-122">다른 핸들에서 명령이 진행 중이면 해당 명령의 결과를 통해 잠금의 회수 가능 여부가 결정될 때까지 기다리는 동안 작업이 완료되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-122">If commands are in progress on other handles, the operation may not complete while waiting for the outcome of those commands to decide whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="42e3c-123">현재 인스턴스 핸들이 인스턴스와 잠금 소유자에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-123">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="42e3c-124">인스턴스는 완료된 상태가 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-124">The instance must not be completed.</span></span> <span data-ttu-id="42e3c-125">잠금 소유자에 연결된 잠금 토큰은 잠금의 소유자를 식별하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-125">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="42e3c-126">잠금이 핸들에 바인딩되면 핸들의 수명 동안 바인딩 상태가 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-126">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="42e3c-127">잠금 토큰이나 인스턴스 버전 중 어느 항목도 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-127">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instancePersistenceContext.BeginExecute (command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="42e3c-128">The persistence command to be executed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-128">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="42e3c-129">The time-out value for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-129">The time-out value for the operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="42e3c-130">The delegate that receives the notification of the asynchronous receive that a request operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-130">The delegate that receives the notification of the asynchronous receive that a request operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="42e3c-131">The state information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-131">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-132">Begins executing a persistence command asynchronously.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-132">Begins executing a persistence command asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42e3c-133">The status of an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-133">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-134">지속성 공급자는 이 메서드를 사용하여 하위 명령을 명령의 일부로 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-134">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="42e3c-135">하위 명령은 InstanceStore.BeginExecute로 전달된 명령과 유사하게 BeginTryCommand를 사용하여 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-135">The sub-command will be executed using BeginTryCommand, similar to commands passed to InstanceStore.BeginExecute.</span></span> <span data-ttu-id="42e3c-136">명령을 중첩시킬 수 있지만 명령이 한 번에 둘 이상의 하위 명령을 실행해서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-136">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindAcquiredLock">
      <MemberSignature Language="C#" Value="public void BindAcquiredLock (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindAcquiredLock(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindAcquiredLock (instanceVersion As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindAcquiredLock(long instanceVersion);" />
      <MemberSignature Language="F#" Value="member this.BindAcquiredLock : int64 -&gt; unit" Usage="instancePersistenceContext.BindAcquiredLock instanceVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="42e3c-137">Version of the lock acquired on the instance, or zero if the persistence provider does not implement lock versions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-137">Version of the lock acquired on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-138">Binds a newly acquired lock on an instance to the current instance handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-138">Binds a newly acquired lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="42e3c-139">The version of the acquired lock is passed as a parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-139">The version of the acquired lock is passed as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-140">지속성 공급자가 잠금 버전 관리를 구현하는 경우에는 인스턴스에서 잠금이 획득될 때마다 외부 저장소에서 버전이 1씩 증가해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-140">If a persistence provider implements lock versioning, then each time a lock is acquired on the instance, the version must be incremented by one in the external store.</span></span> <span data-ttu-id="42e3c-141">인스턴스를 처음으로 잠그면 버전이 1이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-141">The first time the instance is locked, the version should be 1.</span></span> <span data-ttu-id="42e3c-142">잠금을 획득할 때마다 이전 잠금이 무효화됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-142">Each lock acquisition invalidates the previous lock.</span></span> <span data-ttu-id="42e3c-143">현재 인스턴스 핸들이 인스턴스와 잠금 소유자에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-143">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="42e3c-144">인스턴스는 완료된 상태가 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-144">The instance must not be completed.</span></span> <span data-ttu-id="42e3c-145">잠금 소유자에 연결된 잠금 토큰은 잠금의 소유자를 식별하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-145">The lock token associated with the lock owner is used to identify the owner of the lock</span></span>  
  
 <span data-ttu-id="42e3c-146">잠금이 핸들에 바인딩되면 핸들의 수명 동안 바인딩 상태가 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-146">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="42e3c-147">잠금 토큰이나 인스턴스 버전 중 어느 항목도 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-147">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindEvent">
      <MemberSignature Language="C#" Value="public void BindEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindEvent (persistenceEvent As InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent);" />
      <MemberSignature Language="F#" Value="member this.BindEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent -&gt; unit" Usage="instancePersistenceContext.BindEvent persistenceEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="42e3c-148">An <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> object containing information about the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-148">An <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> object containing information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-149">Binds an <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> to an instance handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-149">Binds an <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> to an instance handle.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstance">
      <MemberSignature Language="C#" Value="public void BindInstance (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstance(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstance (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstance(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.BindInstance : Guid -&gt; unit" Usage="instancePersistenceContext.BindInstance instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="42e3c-150">An instance identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-150">An instance identifier.</span>
          </span>
          <span data-ttu-id="42e3c-151">Must not be Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-151">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-152">Binds an instance whose identifier is specified as a parameter to the current instance handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-152">Binds an instance whose identifier is specified as a parameter to the current instance handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-153">인스턴스가 핸들에 바인딩되면 핸들의 수명 동안 바인딩 상태가 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-153">Once an instance is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="42e3c-154">다른 인스턴스는 절대 이 핸들에 바인딩될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-154">No other instance can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstanceOwner">
      <MemberSignature Language="C#" Value="public void BindInstanceOwner (Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstanceOwner(valuetype System.Guid instanceOwnerId, valuetype System.Guid lockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstanceOwner (instanceOwnerId As Guid, lockToken As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstanceOwner(Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="F#" Value="member this.BindInstanceOwner : Guid * Guid -&gt; unit" Usage="instancePersistenceContext.BindInstanceOwner (instanceOwnerId, lockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceOwnerId" Type="System.Guid" />
        <Parameter Name="lockToken" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceOwnerId">
          <span data-ttu-id="42e3c-155">The identifier for the instance owner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-155">The identifier for the instance owner.</span>
          </span>
        </param>
        <param name="lockToken">
          <span data-ttu-id="42e3c-156">The lock token of the instance owner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-156">The lock token of the instance owner.</span>
          </span>
          <span data-ttu-id="42e3c-157">A persistence provider may choose to use the same value for the instance owner identifier and the owner’s lock token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-157">A persistence provider may choose to use the same value for the instance owner identifier and the owner’s lock token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-158">Binds an instance owner to the current instance handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-158">Binds an instance owner to the current instance handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-159">인스턴스 소유자가 핸들에 바인딩되면 핸들의 수명 동안 바인딩 상태가 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-159">Once an instance owner is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="42e3c-160">다른 인스턴스 소유자는 절대 이 핸들에 바인딩될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-160">No other instance owner can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindReclaimedLock">
      <MemberSignature Language="C#" Value="public void BindReclaimedLock (long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindReclaimedLock (instanceVersion As Long, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindReclaimedLock(long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.BindReclaimedLock : int64 * TimeSpan -&gt; unit" Usage="instancePersistenceContext.BindReclaimedLock (instanceVersion, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="42e3c-161">Version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-161">Version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="42e3c-162">The time-out value for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-162">The time-out value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-163">Binds an existing lock on an instance to the current instance handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-163">Binds an existing lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="42e3c-164">The version of the existing lock is passed as a parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-164">The version of the existing lock is passed as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-165">잠금을 획득하려고 할 때 지속성 공급자는 현재 인스턴스가 현재 저장소에서 이미 잠겨 있다고 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-165">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="42e3c-166">잠금 토큰이 현재 핸들의 잠금 토큰과 일치하면 지속성 공급자가 해당 버전을 검사한 후 BindReclaimedLock으로 전달하여 잠금을 회수할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-166">If the lock token matches the current handle’s lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BindReclaimedLock.</span></span> <span data-ttu-id="42e3c-167">지속성 공급자는 잠금이 회수될 때까지 인스턴스를 변경하면 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-167">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="42e3c-168">다른 핸들이 잠금에 바인딩되어 있지 않으면 BindReclaimedLock이 성공하고 현재 핸들이 잠금에 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-168">If no other handle is bound to the lock, then BindReclaimedLock succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="42e3c-169">그렇지 않으면 BindReclaimedLock이 InstanceHandleConflictException을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-169">Otherwise, BindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="42e3c-170">다른 핸들에서 명령이 진행 중이면 해당 명령의 결과를 통해 잠금의 회수 가능 여부가 결정될 때까지 기다리는 동안 BindReclaimedLock이 차단될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-170">If commands are in progress on other handles, BindReclaimedLock may block waiting for the outcome of those commands before deciding whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="42e3c-171">현재 인스턴스 핸들이 인스턴스와 잠금 소유자에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-171">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="42e3c-172">인스턴스는 완료된 상태가 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-172">The instance must not be completed.</span></span> <span data-ttu-id="42e3c-173">잠금 소유자에 연결된 잠금 토큰은 잠금의 소유자를 식별하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-173">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="42e3c-174">잠금이 핸들에 바인딩되면 핸들의 수명 동안 바인딩 상태가 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-174">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="42e3c-175">잠금 토큰이나 인스턴스 버전 중 어느 항목도 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-175">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstance">
      <MemberSignature Language="C#" Value="public void CompletedInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstance();" />
      <MemberSignature Language="F#" Value="member this.CompletedInstance : unit -&gt; unit" Usage="instancePersistenceContext.CompletedInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42e3c-176">Indicates that the persistence provider has successfully marked the current instance as complete in the instance store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-176">Indicates that the persistence provider has successfully marked the current instance as complete in the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-177">현재 인스턴스 핸들이 인스턴스와 이 인스턴스의 잠금에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-177">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="42e3c-178">인스턴스는 초기화해야 하며 이미 완료된 상태가 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-178">The instance must be initialized and not be already completed.</span></span> <span data-ttu-id="42e3c-179">인스턴스는 인스턴스 데이터 집합이 인스턴스에 지속된 적이 있는 경우 초기화됩니다. 인스턴스에 연결된 모든 키를 완료해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-179">(An instance is initialized if a set of instance data has ever been persisted to it.) All of the keys associated to the instance must be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstanceKey">
      <MemberSignature Language="C#" Value="public void CompletedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.CompletedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.CompletedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="42e3c-180">The instance key identifier for the key that has been completed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-180">The instance key identifier for the key that has been completed.</span>
          </span>
          <span data-ttu-id="42e3c-181">Must not be Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-181">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-182">Indicates that the persistence provider has successfully marked a key as complete in the external store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-182">Indicates that the persistence provider has successfully marked a key as complete in the external store.</span>
          </span>
          <span data-ttu-id="42e3c-183">The identifier of the key is specified as a parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-183">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-184">현재 인스턴스 핸들이 인스턴스와 이 인스턴스의 잠금에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-184">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="42e3c-185">인스턴스 키는 현재 인스턴스에 연결되어야 하며 이미 완료된 상태가 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-185">The instance key must be associated to the current instance and not be already completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindReclaimedLockException">
      <MemberSignature Language="C#" Value="public Exception CreateBindReclaimedLockException (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception CreateBindReclaimedLockException(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBindReclaimedLockException (instanceVersion As Long) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ CreateBindReclaimedLockException(long instanceVersion);" />
      <MemberSignature Language="F#" Value="member this.CreateBindReclaimedLockException : int64 -&gt; Exception" Usage="instancePersistenceContext.CreateBindReclaimedLockException instanceVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="42e3c-186">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-186">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-187">Creates an instance of an exception which can be thrown from TryCommand to trigger BindReclaimedLock behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-187">Creates an instance of an exception which can be thrown from TryCommand to trigger BindReclaimedLock behavior.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42e3c-188">An exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-188">An exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-189">샘플 코드:</span><span class="sxs-lookup"><span data-stu-id="42e3c-189">Sample code:</span></span>  
  
```  
  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    throw context.CreateBindReclaimedLockException(5);  
}  
is equivalent to  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    context.BindReclaimedLock(5, timeout);  
    throw new OperationCanceledException();  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBindReclaimedLock">
      <MemberSignature Language="C#" Value="public void EndBindReclaimedLock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBindReclaimedLock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBindReclaimedLock (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBindReclaimedLock(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndBindReclaimedLock : IAsyncResult -&gt; unit" Usage="instancePersistenceContext.EndBindReclaimedLock result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="42e3c-190">The result of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-190">The result of the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-191">Ends the asynchronous operation started by the <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-191">Ends the asynchronous operation started by the <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public void EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndExecute (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; unit" Usage="instancePersistenceContext.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="42e3c-192">The status of an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-192">The status of an asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-193">Ends the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-193">Ends the asynchronous operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (command As InstancePersistenceCommand, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; unit" Usage="instancePersistenceContext.Execute (command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="42e3c-194">The persistence command to be executed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-194">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="42e3c-195">The time-out value for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-195">The time-out value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-196">Executes a persistence command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-196">Executes a persistence command.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-197">지속성 공급자는 이 메서드를 사용하여 하위 명령을 명령의 일부로 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-197">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="42e3c-198">하위 명령은 InstanceStore.Execute로 전달된 명령과 유사하게 TryCommand를 사용하여 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-198">The sub-command will be executed using TryCommand, similar to commands passed to InstanceStore.Execute.</span></span> <span data-ttu-id="42e3c-199">명령을 중첩시킬 수 있지만 명령이 한 번에 둘 이상의 하위 명령을 실행해서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-199">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle InstanceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceHandle InstanceHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceHandle As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceHandle ^ InstanceHandle { System::Runtime::DurableInstancing::InstanceHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceHandle : System.Runtime.DurableInstancing.InstanceHandle" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42e3c-200">Gets the current instance handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-200">Gets the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42e3c-201">현재 인스턴스 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-201">The current instance handle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceVersion">
      <MemberSignature Language="C#" Value="public long InstanceVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceVersion { long get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceVersion : int64" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42e3c-202">Gets the version of the lock held on the current instance by the current instance handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-202">Gets the version of the lock held on the current instance by the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42e3c-203">현재 인스턴스 핸들에 바인딩되어 있는 인스턴스 잠금의 버전 또는 -1(핸들이 잠금에 바인딩되어 있지 않은 경우)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-203">The version of the instance lock bound to the current instance handle, or -1 if the handle isn’t bound to a lock.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-204">지속성 공급자는 잠금에 바인딩되어 있는 핸들을 사용하여 잠금을 필요로 하는 작업(예: 인스턴스 데이터 지속)을 수행할 때 인스턴스 저장소에서 인스턴스가 보유하고 있는 잠금의 잠금 버전과 이 값을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-204">The persistence provider should check this value against the lock version of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="42e3c-205">잠금 버전이 일치하지 않으면 명령이 실패하며 InstanceLockLostException이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-205">If the lock version doesn’t match, the command should fail with InstanceLockLostException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceView">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView InstanceView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceView InstanceView" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceView As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceView ^ InstanceView { System::Runtime::DurableInstancing::InstanceView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceView : System.Runtime.DurableInstancing.InstanceView" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42e3c-206">Gets the instance view object that represents the in-memory state of the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-206">Gets the instance view object that represents the in-memory state of the current instance.</span>
          </span>
          <span data-ttu-id="42e3c-207">This view reflects updates as they are made by the command in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-207">This view reflects updates as they are made by the command in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42e3c-208">인스턴스 뷰 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-208">The instance view object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedInstance">
      <MemberSignature Language="C#" Value="public void LoadedInstance (System.Runtime.DurableInstancing.InstanceState state, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadedInstance(valuetype System.Runtime.DurableInstancing.InstanceState state, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadedInstance (state As InstanceState, instanceData As IDictionary(Of XName, InstanceValue), instanceMetadata As IDictionary(Of XName, InstanceValue), associatedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)), completedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadedInstance(System::Runtime::DurableInstancing::InstanceState state, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceData, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ associatedInstanceKeyMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ completedInstanceKeyMetadata);" />
      <MemberSignature Language="F#" Value="member this.LoadedInstance : System.Runtime.DurableInstancing.InstanceState * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * System.Collections.Generic.IDictionary&lt;Guid, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt;&gt; * System.Collections.Generic.IDictionary&lt;Guid, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt;&gt; -&gt; unit" Usage="instancePersistenceContext.LoadedInstance (state, instanceData, instanceMetadata, associatedInstanceKeyMetadata, completedInstanceKeyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Runtime.DurableInstancing.InstanceState" />
        <Parameter Name="instanceData" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="instanceMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="associatedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
        <Parameter Name="completedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="42e3c-209">The instance state information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-209">The instance state information.</span>
          </span>
        </param>
        <param name="instanceData">
          <span data-ttu-id="42e3c-210">The instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-210">The instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="instanceMetadata">
          <span data-ttu-id="42e3c-211">Instance metadata as a collection of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-211">Instance metadata as a collection of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="associatedInstanceKeyMetadata">
          <span data-ttu-id="42e3c-212">Associated instance key metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-212">Associated instance key metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="completedInstanceKeyMetadata">
          <span data-ttu-id="42e3c-213">Completed instance metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-213">Completed instance metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-214">Indicates that the persistence provider has successfully retrieved the current instance from the instance store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-214">Indicates that the persistence provider has successfully retrieved the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-215">현재 인스턴스 핸들이 인스턴스에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-215">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="42e3c-216">인스턴스 핸들이 잠금에 바인딩되어 있거나 로드된 인스턴스가 완료로 표시되어 있으면 로드된 데이터에 일관성이 있는 것으로 간주되지만, 그렇지 않으면 로드된 데이터가 불확실한 상태에 있는 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-216">If the instance handle is bound to a lock or the loaded instance is marked as complete, the loaded data is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockToken">
      <MemberSignature Language="C#" Value="public Guid LockToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid LockToken" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LockToken As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid LockToken { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.LockToken : Guid" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42e3c-217">Gets the lock token of the instance owner bound to the current instance handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-217">Gets the lock token of the instance owner bound to the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42e3c-218">현재 인스턴스 핸들에 바인딩되어 있는 잠금 토큰 또는 Guid.Empty(핸들이 인스턴스 소유자에 바인딩되어 있지 않은 경우)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-218">The lock token bound to the current instance handle, or Guid.Empty if the handle isn’t bound to an instance owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-219">지속성 공급자는 잠금에 바인딩되어 있는 핸들을 사용하여 잠금을 필요로 하는 작업(예: 인스턴스 데이터 지속)을 수행할 때 인스턴스 저장소에서 인스턴스가 보유하고 있는 잠금의 잠금 토큰과 이 값을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-219">The persistence provider should check this value against the lock token of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="42e3c-220">잠금 토큰이 일치하지 않으면 명령이 실패하며 InstanceLockLostException이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-220">If the lock token doesn’t match, the command should fail with InstanceLockLostException.</span></span>  
  
 <span data-ttu-id="42e3c-221">지속성 공급자는 인스턴스에서 새 잠금을 획득(예: 잠금에 아직 바인딩되어 있지 않은 핸들을 사용하여 인스턴스 데이터 지속)할 때 이 값을 잠금 토큰으로 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-221">The persistence provider should use this value as the lock token when acquiring a new lock on an instance (such as persisting instance data using a handle not already bound to a lock).</span></span> <span data-ttu-id="42e3c-222">인스턴스가 인스턴스 저장소에서 이미 잠겨 있으며 잠금 토큰이 이 잠금 토큰과 일치하면 지속성 공급자가 BindReclaimedLock을 사용하여 인스턴스를 회수할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-222">If the instance is already locked in the instance store and the lock token matches this lock token, the persistence provider can attempt to reclaim the instance using BindReclaimedLock.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedInstance">
      <MemberSignature Language="C#" Value="public void PersistedInstance (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PersistedInstance(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PersistedInstance (data As IDictionary(Of XName, InstanceValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PersistedInstance(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.PersistedInstance : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; -&gt; unit" Usage="instancePersistenceContext.PersistedInstance data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="42e3c-223">Instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-223">Instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-224">Indicates that the persistence provider has successfully persisted a set of instance data to the instance store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-224">Indicates that the persistence provider has successfully persisted a set of instance data to the instance store.</span>
          </span>
          <span data-ttu-id="42e3c-225">This has the effect of initializing the instance if it wasn’t already.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-225">This has the effect of initializing the instance if it wasn’t already.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-226">현재 인스턴스 핸들이 인스턴스와 이 인스턴스의 잠금에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-226">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="42e3c-227">각 인스턴스 데이터 집합은 이전 집합을 완전히 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-227">Each set of instance data completely replaces the previous set.</span></span> <span data-ttu-id="42e3c-228">인스턴스 데이터 집합은 null(비어 있는 것과 같음)일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-228">The set of instance data may be null – this is the same as empty.</span></span> <span data-ttu-id="42e3c-229">null 인스턴스 데이터 집합을 지속하면 기존 인스턴스 데이터 집합이 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-229">Persisting a null set of instance data deletes the existing set of instance data.</span></span> <span data-ttu-id="42e3c-230">인스턴스 데이터 집합을 지속해도 인스턴스 메타데이터에는 아무런 영향이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-230">(Persisting a set of instance data has no effect on instance metadata.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueriedInstanceStore">
      <MemberSignature Language="C#" Value="public void QueriedInstanceStore (System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueriedInstanceStore(class System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueriedInstanceStore (queryResult As InstanceStoreQueryResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueriedInstanceStore(System::Runtime::DurableInstancing::InstanceStoreQueryResult ^ queryResult);" />
      <MemberSignature Language="F#" Value="member this.QueriedInstanceStore : System.Runtime.DurableInstancing.InstanceStoreQueryResult -&gt; unit" Usage="instancePersistenceContext.QueriedInstanceStore queryResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryResult" Type="System.Runtime.DurableInstancing.InstanceStoreQueryResult" />
      </Parameters>
      <Docs>
        <param name="queryResult">
          <span data-ttu-id="42e3c-231">The results of a query against an instance store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-231">The results of a query against an instance store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-232">Adds the <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> passed as a parameter to a list of <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> objects in an <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-232">Adds the <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> passed as a parameter to a list of <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> objects in an <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceKeyMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceKeyMetadata (Guid key, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceKeyMetadata(valuetype System.Guid key, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceKeyMetadata (key As Guid, metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceKeyMetadata(Guid key, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceKeyMetadata : Guid * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceKeyMetadata (key, metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="42e3c-233">The instance key identifier for the key whose metadata was read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-233">The instance key identifier for the key whose metadata was read.</span>
          </span>
          <span data-ttu-id="42e3c-234">Must not be Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-234">Must not be Guid.Empty.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="42e3c-235">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-235">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="42e3c-236">
            <see langword="True" /> if the metadata represents all of the metadata associated to the instance key, otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-236">
              <see langword="True" /> if the metadata represents all of the metadata associated to the instance key, otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-237">Indicates that the persistence provider has successfully read some instance key metadata for a key associated to the current instance from the instance store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-237">Indicates that the persistence provider has successfully read some instance key metadata for a key associated to the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-238">현재 인스턴스 핸들이 인스턴스에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-238">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="42e3c-239">인스턴스 핸들이 잠금에 바인딩되어 있거나 현재 인스턴스가 완료로 표시되어 있으면 메타데이터에 일관성이 있는 것으로 간주되지만, 그렇지 않으면 메타데이터가 불확실한 상태에 있는 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-239">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceMetadata : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceMetadata (metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="42e3c-240">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-240">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="42e3c-241">
            <see langword="True" /> if the metadata represents all of the metadata associated to the instance, otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-241">
              <see langword="True" /> if the metadata represents all of the metadata associated to the instance, otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-242">Indicates that the persistence provider has successfully read some instance metadata for the current instance from the instance store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-242">Indicates that the persistence provider has successfully read some instance metadata for the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceOwnerMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceOwnerMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceOwnerMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceOwnerMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceOwnerMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceOwnerMetadata : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceOwnerMetadata (metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="42e3c-243">The dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-243">The dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="42e3c-244">The value to specify whether the consistency to be set to <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> or <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-244">The value to specify whether the consistency to be set to <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> or <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-245">Sets the instance owner metadata using the data passed in the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-245">Sets the instance owner metadata using the data passed in the parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-246">현재 인스턴스 핸들이 인스턴스에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-246">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="42e3c-247">인스턴스 핸들이 잠금에 바인딩되어 있거나 현재 인스턴스가 완료로 표시되어 있으면 메타데이터에 일관성이 있는 것으로 간주되지만, 그렇지 않으면 메타데이터가 불확실한 상태에 있는 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-247">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancellationHandler">
      <MemberSignature Language="C#" Value="public void SetCancellationHandler (Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCancellationHandler(class System.Action`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancellationHandler (cancellationHandler As Action(Of InstancePersistenceContext))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCancellationHandler(Action&lt;System::Runtime::DurableInstancing::InstancePersistenceContext ^&gt; ^ cancellationHandler);" />
      <MemberSignature Language="F#" Value="member this.SetCancellationHandler : Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; -&gt; unit" Usage="instancePersistenceContext.SetCancellationHandler cancellationHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationHandler" Type="System.Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt;" />
      </Parameters>
      <Docs>
        <param name="cancellationHandler">
          <span data-ttu-id="42e3c-248">The reference to a function to be called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-248">The reference to a function to be called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-249">Sets the cancellation handler to be called when the cancel of an operation is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-249">Sets the cancellation handler to be called when the cancel of an operation is requested.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-250">취소 처리기가 호출될 경우 지속성 공급자는 보류 중인 모든 작업을 취소하고 TryCommand에서 OperationCanceledException을 throw하여 지속성 명령이 완료되기 전에 중단되었음을 나타내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-250">If the cancellation handler is called, the persistence provider should cancel all pending operations and throw OperationCanceledException from TryCommand to indicate that the persistence command was interrupted before it could be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnassociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void UnassociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnassociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnassociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnassociatedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.UnassociatedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.UnassociatedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="42e3c-251">The instance key identifier for the key that has been unassociated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-251">The instance key identifier for the key that has been unassociated.</span>
          </span>
          <span data-ttu-id="42e3c-252">Must not be Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-252">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-253">Indicates that the persistence provider has successfully disassociated a key from the current instance in the instance store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-253">Indicates that the persistence provider has successfully disassociated a key from the current instance in the instance store.</span>
          </span>
          <span data-ttu-id="42e3c-254">The identifier of the key is specified as a parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-254">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-255">현재 인스턴스 핸들이 인스턴스와 이 인스턴스의 잠금에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-255">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="42e3c-256">인스턴스 키는 현재 인스턴스에 연결되어야 하며 완료로 표시되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-256">The instance key must be associated to the current instance and must be marked complete.</span></span> <span data-ttu-id="42e3c-257">현재 인스턴스는 완료로 표시되지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-257">The current instance must not be marked complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserContext">
      <MemberSignature Language="C#" Value="public object UserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserContext { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserContext : obj" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42e3c-258">Gets the user context information attached to the current instance handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-258">Gets the user context information attached to the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42e3c-259">사용자 컨텍스트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-259">The user context information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-260">이 개체는 현재 인스턴스 핸들의 InstanceStore.OnNewInstanceHandle에서 반환된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-260">The object is the one that is returned from InstanceStore.OnNewInstanceHandle for the current instance handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceKeyMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceKeyMetadataValue (Guid key, System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceKeyMetadataValue(valuetype System.Guid key, class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceKeyMetadataValue (key As Guid, name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceKeyMetadataValue(Guid key, System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceKeyMetadataValue : Guid * System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceKeyMetadataValue (key, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="42e3c-261">The instance key identifier for the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-261">The instance key identifier for the key.</span>
          </span>
          <span data-ttu-id="42e3c-262">Must not be Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-262">Must not be Guid.Empty.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="42e3c-263">The name of the metadata property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-263">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="42e3c-264">The value of the metadata property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-264">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-265">Indicates that the persistence provider has successfully written a metadata value for an instance key that is associated with the current instance to the instance store</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-265">Indicates that the persistence provider has successfully written a metadata value for an instance key that is associated with the current instance to the instance store</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-266">현재 인스턴스 핸들이 인스턴스와 이 인스턴스의 잠금에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-266">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="42e3c-267">인스턴스 키는 현재 인스턴스에 연결되어야 하며 완료된 상태가 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-267">The instance key must be associated with the current instance and must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceMetadataValue : System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceMetadataValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="42e3c-268">The name of the metadata property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-268">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="42e3c-269">The value of the metadata property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-269">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-270">Indicates that the persistence provider has successfully written a metadata value for the current instance to the external instance store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-270">Indicates that the persistence provider has successfully written a metadata value for the current instance to the external instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-271">현재 인스턴스 핸들이 인스턴스와 이 인스턴스의 잠금에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-271">The current instance handle must be bound to an instance as well as has a lock on that instance.</span></span> <span data-ttu-id="42e3c-272">인스턴스는 완료된 상태가 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-272">The instance must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceOwnerMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceOwnerMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceOwnerMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceOwnerMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceOwnerMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceOwnerMetadataValue : System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceOwnerMetadataValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="42e3c-273">The name of the metadata property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-273">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="42e3c-274">The value of the metadata property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-274">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42e3c-275">Indicates that the persistence provider has successfully written a metadata value for the current instance owner to the instance store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42e3c-275">Indicates that the persistence provider has successfully written a metadata value for the current instance owner to the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42e3c-276">현재 인스턴스 핸들이 인스턴스 소유자에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42e3c-276">The current instance handle must be bound to an instance owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>