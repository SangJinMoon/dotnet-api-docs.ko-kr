<Type Name="LiteralDesigner" FullName="System.Web.UI.Design.WebControls.LiteralDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="767b016137ceace7aa85751b112f69c1c8bf0e39" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36391775" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LiteralDesigner : System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LiteralDesigner extends System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.LiteralDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class LiteralDesigner&#xA;Inherits ControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class LiteralDesigner : System::Web::UI::Design::ControlDesigner" />
  <TypeSignature Language="F#" Value="type LiteralDesigner = class&#xA;    inherit ControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.Design.SupportsPreviewControl(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>비주얼 디자이너에서 디자인 타임에 <see cref="T:System.Web.UI.WebControls.Literal" /> 웹 서버 컨트롤을 지원합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Literal> 컨트롤을 사용 하면 웹 페이지에 컨트롤으로 사용할 텍스트 문자열입니다.  
  
 비주얼 디자이너에서 소스 뷰에서 디자인 뷰로 전환 하면 태그 소스 코드 설명 하는 <xref:System.Web.UI.WebControls.Literal> 컨트롤 구문 분석 되 고 디자인 화면에 컨트롤의 디자인 타임 버전이 만들어집니다. 소스 뷰로 다시 전환 하는 경우 디자인 타임 컨트롤 태그 소스 코드에 유지 되 고 웹 페이지에 대 한 태그를 편집 합니다. <xref:System.Web.UI.Design.WebControls.LiteralDesigner> 클래스에 대 한 디자인 타임 지원을 제공는 <xref:System.Web.UI.WebControls.Literal> 제어 합니다.  
  
 <xref:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged%2A> 메서드를 연결 된 디자인 타임 변경 될 때 호출 됩니다 <xref:System.Web.UI.WebControls.Literal> 제어 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Literal" />
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LiteralDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LiteralDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.WebControls.LiteralDesigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 내부적으로 생성 하는.NET Framework는 <xref:System.Web.UI.Design.WebControls.LiteralDesigner> 연결 된 만들 때 <xref:System.Web.UI.WebControls.Literal> 컨트롤 또는의 복사본은 <xref:System.Web.UI.WebControls.Literal> 디자인 화면에서 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Literal" />
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public override void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnComponentChanged (sender As Object, ce As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ ce);" />
      <MemberSignature Language="F#" Value="override this.OnComponentChanged : obj * System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit" Usage="literalDesigner.OnComponentChanged (sender, ce)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트의 소스인 개체입니다.</param>
        <param name="ce">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 개체입니다.</param>
        <summary>연결된 컨트롤에 변경 사항이 있을 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged%2A> 때이 메서드가 호출 되는 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 관련 된 이벤트 <xref:System.Web.UI.WebControls.Literal> 컨트롤 발생 합니다. 이 컨트롤의 속성 변경에 대 한 응답에는 일반적으로 (예를 들어 한 `Properties` 표 변경).  
  
 <xref:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged%2A> 만듭니다는 <xref:System.ComponentModel.Design.ComponentChangedEventArgs> 개체와 호출 된 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> 기본 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Literal" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>